//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.6
.target sm_86, texmode_independent
.address_size 64

	// .globl	loop_md5
.func SHA512_Update
(
	.param .b64 SHA512_Update_param_0,
	.param .b64 SHA512_Update_param_1,
	.param .b32 SHA512_Update_param_2
)
;
.const .align 4 .b8 h[32] = {103, 230, 9, 106, 133, 174, 103, 187, 114, 243, 110, 60, 58, 245, 79, 165, 127, 82, 14, 81, 140, 104, 5, 155, 171, 217, 131, 31, 25, 205, 224, 91};
.const .align 4 .b8 k[256] = {152, 47, 138, 66, 145, 68, 55, 113, 207, 251, 192, 181, 165, 219, 181, 233, 91, 194, 86, 57, 241, 17, 241, 89, 164, 130, 63, 146, 213, 94, 28, 171, 152, 170, 7, 216, 1, 91, 131, 18, 190, 133, 49, 36, 195, 125, 12, 85, 116, 93, 190, 114, 254, 177, 222, 128, 167, 6, 220, 155, 116, 241, 155, 193, 193, 105, 155, 228, 134, 71, 190, 239, 198, 157, 193, 15, 204, 161, 12, 36, 111, 44, 233, 45, 170, 132, 116, 74, 220, 169, 176, 92, 218, 136, 249, 118, 82, 81, 62, 152, 109, 198, 49, 168, 200, 39, 3, 176, 199, 127, 89, 191, 243, 11, 224, 198, 71, 145, 167, 213, 81, 99, 202, 6, 103, 41, 41, 20, 133, 10, 183, 39, 56, 33, 27, 46, 252, 109, 44, 77, 19, 13, 56, 83, 84, 115, 10, 101, 187, 10, 106, 118, 46, 201, 194, 129, 133, 44, 114, 146, 161, 232, 191, 162, 75, 102, 26, 168, 112, 139, 75, 194, 163, 81, 108, 199, 25, 232, 146, 209, 36, 6, 153, 214, 133, 53, 14, 244, 112, 160, 106, 16, 22, 193, 164, 25, 8, 108, 55, 30, 76, 119, 72, 39, 181, 188, 176, 52, 179, 12, 28, 57, 74, 170, 216, 78, 79, 202, 156, 91, 243, 111, 46, 104, 238, 130, 143, 116, 111, 99, 165, 120, 20, 120, 200, 132, 8, 2, 199, 140, 250, 255, 190, 144, 235, 108, 80, 164, 247, 163, 249, 190, 242, 120, 113, 198};
.const .align 8 .b8 K[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry loop_md5(
	.param .u64 .ptr .global .align 8 loop_md5_param_0,
	.param .u64 .ptr .global .align 8 loop_md5_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<501>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd4, [loop_md5_param_1];
	mov.b32 	%r22, %envreg3;
	mov.u32 	%r23, %ctaid.x;
	mov.u32 	%r24, %ntid.x;
	mov.u32 	%r25, %tid.x;
	add.s32 	%r26, %r25, %r22;
	mad.lo.s32 	%r27, %r24, %r23, %r26;
	cvt.u64.u32 	%rd1, %r27;
	mul.wide.u32 	%rd5, %r27, 72;
	add.s64 	%rd6, %rd4, %rd5;
	add.s64 	%rd2, %rd6, 64;
	ld.global.u32 	%r1, [%rd6+64];
	min.u32 	%r2, %r1, 813;
	ld.global.v2.u32 	{%r497, %r498}, [%rd6];
	ld.global.u32 	%r499, [%rd6+8];
	ld.global.u32 	%r500, [%rd6+12];
	setp.eq.s32 	%p1, %r2, 0;
	@%p1 bra 	$L__BB0_3;

	mov.u32 	%r31, -271733879;
	mov.u32 	%r32, -1732584194;
	mov.u32 	%r33, 271733878;
	// begin inline asm
	lop3.b32 %r30, %r31, %r32, %r33, 202;
	// end inline asm
	add.s32 	%r7, %r30, 1051707257;
	mov.u32 	%r496, 0;

$L__BB0_2:
	add.s32 	%r287, %r7, %r497;
	shf.l.wrap.b32 	%r288, %r287, %r287, 7;
	add.s32 	%r46, %r288, -271733879;
	// begin inline asm
	lop3.b32 %r35, %r46, %r31, %r32, 202;
	// end inline asm
	add.s32 	%r289, %r35, %r498;
	add.s32 	%r290, %r289, -117830708;
	shf.l.wrap.b32 	%r291, %r290, %r290, 12;
	add.s32 	%r50, %r291, %r46;
	// begin inline asm
	lop3.b32 %r39, %r50, %r46, %r31, 202;
	// end inline asm
	add.s32 	%r292, %r39, %r499;
	add.s32 	%r293, %r292, -1126478375;
	shf.l.wrap.b32 	%r294, %r293, %r293, 17;
	add.s32 	%r54, %r294, %r50;
	// begin inline asm
	lop3.b32 %r43, %r54, %r50, %r46, 202;
	// end inline asm
	add.s32 	%r295, %r43, %r500;
	add.s32 	%r296, %r295, -1316259209;
	shf.l.wrap.b32 	%r297, %r296, %r296, 22;
	add.s32 	%r58, %r297, %r54;
	// begin inline asm
	lop3.b32 %r47, %r58, %r54, %r50, 202;
	// end inline asm
	add.s32 	%r298, %r288, %r47;
	add.s32 	%r299, %r298, -448152648;
	shf.l.wrap.b32 	%r300, %r299, %r299, 7;
	add.s32 	%r62, %r300, %r58;
	// begin inline asm
	lop3.b32 %r51, %r62, %r58, %r54, 202;
	// end inline asm
	add.s32 	%r301, %r50, %r51;
	add.s32 	%r302, %r301, 1200080426;
	shf.l.wrap.b32 	%r303, %r302, %r302, 12;
	add.s32 	%r66, %r303, %r62;
	// begin inline asm
	lop3.b32 %r55, %r66, %r62, %r58, 202;
	// end inline asm
	add.s32 	%r304, %r54, %r55;
	add.s32 	%r305, %r304, -1473231341;
	shf.l.wrap.b32 	%r306, %r305, %r305, 17;
	add.s32 	%r70, %r306, %r66;
	// begin inline asm
	lop3.b32 %r59, %r70, %r66, %r62, 202;
	// end inline asm
	add.s32 	%r307, %r58, %r59;
	add.s32 	%r308, %r307, -45705983;
	shf.l.wrap.b32 	%r309, %r308, %r308, 22;
	add.s32 	%r74, %r309, %r70;
	// begin inline asm
	lop3.b32 %r63, %r74, %r70, %r66, 202;
	// end inline asm
	add.s32 	%r310, %r62, %r63;
	add.s32 	%r311, %r310, 1770035416;
	shf.l.wrap.b32 	%r312, %r311, %r311, 7;
	add.s32 	%r78, %r312, %r74;
	// begin inline asm
	lop3.b32 %r67, %r78, %r74, %r70, 202;
	// end inline asm
	add.s32 	%r313, %r66, %r67;
	add.s32 	%r314, %r313, -1958414417;
	shf.l.wrap.b32 	%r315, %r314, %r314, 12;
	add.s32 	%r82, %r315, %r78;
	// begin inline asm
	lop3.b32 %r71, %r82, %r78, %r74, 202;
	// end inline asm
	add.s32 	%r316, %r70, %r71;
	add.s32 	%r317, %r316, -42063;
	shf.l.wrap.b32 	%r318, %r317, %r317, 17;
	add.s32 	%r86, %r318, %r82;
	// begin inline asm
	lop3.b32 %r75, %r86, %r82, %r78, 202;
	// end inline asm
	add.s32 	%r319, %r74, %r75;
	add.s32 	%r320, %r319, -1990404162;
	shf.l.wrap.b32 	%r321, %r320, %r320, 22;
	add.s32 	%r90, %r321, %r86;
	// begin inline asm
	lop3.b32 %r79, %r90, %r86, %r82, 202;
	// end inline asm
	add.s32 	%r322, %r78, %r79;
	add.s32 	%r323, %r322, 1804603682;
	shf.l.wrap.b32 	%r324, %r323, %r323, 7;
	add.s32 	%r94, %r324, %r90;
	// begin inline asm
	lop3.b32 %r83, %r94, %r90, %r86, 202;
	// end inline asm
	add.s32 	%r325, %r82, %r83;
	add.s32 	%r326, %r325, -40341101;
	shf.l.wrap.b32 	%r327, %r326, %r326, 12;
	add.s32 	%r98, %r327, %r94;
	// begin inline asm
	lop3.b32 %r87, %r98, %r94, %r90, 202;
	// end inline asm
	add.s32 	%r328, %r86, %r87;
	add.s32 	%r329, %r328, -1502002162;
	shf.l.wrap.b32 	%r330, %r329, %r329, 17;
	add.s32 	%r102, %r330, %r98;
	// begin inline asm
	lop3.b32 %r91, %r102, %r98, %r94, 202;
	// end inline asm
	add.s32 	%r331, %r90, %r91;
	add.s32 	%r332, %r331, 1236535329;
	shf.l.wrap.b32 	%r333, %r332, %r332, 22;
	add.s32 	%r106, %r333, %r102;
	// begin inline asm
	lop3.b32 %r95, %r106, %r102, %r98, 228;
	// end inline asm
	add.s32 	%r334, %r94, %r95;
	add.s32 	%r335, %r334, %r498;
	add.s32 	%r336, %r335, -165796510;
	shf.l.wrap.b32 	%r337, %r336, %r336, 5;
	add.s32 	%r110, %r337, %r106;
	// begin inline asm
	lop3.b32 %r99, %r110, %r106, %r102, 228;
	// end inline asm
	add.s32 	%r338, %r98, %r99;
	add.s32 	%r339, %r338, -1069501632;
	shf.l.wrap.b32 	%r340, %r339, %r339, 9;
	add.s32 	%r114, %r340, %r110;
	// begin inline asm
	lop3.b32 %r103, %r114, %r110, %r106, 228;
	// end inline asm
	add.s32 	%r341, %r102, %r103;
	add.s32 	%r342, %r341, 643717713;
	shf.l.wrap.b32 	%r343, %r342, %r342, 14;
	add.s32 	%r118, %r343, %r114;
	// begin inline asm
	lop3.b32 %r107, %r118, %r114, %r110, 228;
	// end inline asm
	add.s32 	%r344, %r106, %r107;
	add.s32 	%r345, %r344, %r497;
	add.s32 	%r346, %r345, -373897302;
	shf.l.wrap.b32 	%r347, %r346, %r346, 20;
	add.s32 	%r122, %r347, %r118;
	// begin inline asm
	lop3.b32 %r111, %r122, %r118, %r114, 228;
	// end inline asm
	add.s32 	%r348, %r110, %r111;
	add.s32 	%r349, %r348, -701558691;
	shf.l.wrap.b32 	%r350, %r349, %r349, 5;
	add.s32 	%r126, %r350, %r122;
	// begin inline asm
	lop3.b32 %r115, %r126, %r122, %r118, 228;
	// end inline asm
	add.s32 	%r351, %r114, %r115;
	add.s32 	%r352, %r351, 38016083;
	shf.l.wrap.b32 	%r353, %r352, %r352, 9;
	add.s32 	%r130, %r353, %r126;
	// begin inline asm
	lop3.b32 %r119, %r130, %r126, %r122, 228;
	// end inline asm
	add.s32 	%r354, %r118, %r119;
	add.s32 	%r355, %r354, -660478335;
	shf.l.wrap.b32 	%r356, %r355, %r355, 14;
	add.s32 	%r134, %r356, %r130;
	// begin inline asm
	lop3.b32 %r123, %r134, %r130, %r126, 228;
	// end inline asm
	add.s32 	%r357, %r122, %r123;
	add.s32 	%r358, %r357, -405537720;
	shf.l.wrap.b32 	%r359, %r358, %r358, 20;
	add.s32 	%r138, %r359, %r134;
	// begin inline asm
	lop3.b32 %r127, %r138, %r134, %r130, 228;
	// end inline asm
	add.s32 	%r360, %r126, %r127;
	add.s32 	%r361, %r360, 568446438;
	shf.l.wrap.b32 	%r362, %r361, %r361, 5;
	add.s32 	%r142, %r362, %r138;
	// begin inline asm
	lop3.b32 %r131, %r142, %r138, %r134, 228;
	// end inline asm
	add.s32 	%r363, %r130, %r131;
	add.s32 	%r364, %r363, -1019803562;
	shf.l.wrap.b32 	%r365, %r364, %r364, 9;
	add.s32 	%r146, %r365, %r142;
	// begin inline asm
	lop3.b32 %r135, %r146, %r142, %r138, 228;
	// end inline asm
	add.s32 	%r366, %r134, %r135;
	add.s32 	%r367, %r366, %r500;
	add.s32 	%r368, %r367, -187363961;
	shf.l.wrap.b32 	%r369, %r368, %r368, 14;
	add.s32 	%r150, %r369, %r146;
	// begin inline asm
	lop3.b32 %r139, %r150, %r146, %r142, 228;
	// end inline asm
	add.s32 	%r370, %r138, %r139;
	add.s32 	%r371, %r370, 1163531501;
	shf.l.wrap.b32 	%r372, %r371, %r371, 20;
	add.s32 	%r154, %r372, %r150;
	// begin inline asm
	lop3.b32 %r143, %r154, %r150, %r146, 228;
	// end inline asm
	add.s32 	%r373, %r142, %r143;
	add.s32 	%r374, %r373, -1444681467;
	shf.l.wrap.b32 	%r375, %r374, %r374, 5;
	add.s32 	%r158, %r375, %r154;
	// begin inline asm
	lop3.b32 %r147, %r158, %r154, %r150, 228;
	// end inline asm
	add.s32 	%r376, %r146, %r147;
	add.s32 	%r377, %r376, %r499;
	add.s32 	%r378, %r377, -51403784;
	shf.l.wrap.b32 	%r379, %r378, %r378, 9;
	add.s32 	%r162, %r379, %r158;
	// begin inline asm
	lop3.b32 %r151, %r162, %r158, %r154, 228;
	// end inline asm
	add.s32 	%r380, %r150, %r151;
	add.s32 	%r381, %r380, 1735328473;
	shf.l.wrap.b32 	%r382, %r381, %r381, 14;
	add.s32 	%r166, %r382, %r162;
	// begin inline asm
	lop3.b32 %r155, %r166, %r162, %r158, 228;
	// end inline asm
	add.s32 	%r383, %r154, %r155;
	add.s32 	%r384, %r383, -1926607734;
	shf.l.wrap.b32 	%r385, %r384, %r384, 20;
	add.s32 	%r170, %r385, %r166;
	// begin inline asm
	lop3.b32 %r159, %r170, %r166, %r162, 150;
	// end inline asm
	add.s32 	%r386, %r158, %r159;
	add.s32 	%r387, %r386, -378558;
	shf.l.wrap.b32 	%r388, %r387, %r387, 4;
	add.s32 	%r174, %r388, %r170;
	// begin inline asm
	lop3.b32 %r163, %r174, %r170, %r166, 150;
	// end inline asm
	add.s32 	%r389, %r162, %r163;
	add.s32 	%r390, %r389, -2022574463;
	shf.l.wrap.b32 	%r391, %r390, %r390, 11;
	add.s32 	%r178, %r391, %r174;
	// begin inline asm
	lop3.b32 %r167, %r178, %r174, %r170, 150;
	// end inline asm
	add.s32 	%r392, %r166, %r167;
	add.s32 	%r393, %r392, 1839030562;
	shf.l.wrap.b32 	%r394, %r393, %r393, 16;
	add.s32 	%r182, %r394, %r178;
	// begin inline asm
	lop3.b32 %r171, %r182, %r178, %r174, 150;
	// end inline asm
	add.s32 	%r395, %r170, %r171;
	add.s32 	%r396, %r395, -35309428;
	shf.l.wrap.b32 	%r397, %r396, %r396, 23;
	add.s32 	%r186, %r397, %r182;
	// begin inline asm
	lop3.b32 %r175, %r186, %r182, %r178, 150;
	// end inline asm
	add.s32 	%r398, %r174, %r175;
	add.s32 	%r399, %r398, %r498;
	add.s32 	%r400, %r399, -1530992060;
	shf.l.wrap.b32 	%r401, %r400, %r400, 4;
	add.s32 	%r190, %r401, %r186;
	// begin inline asm
	lop3.b32 %r179, %r190, %r186, %r182, 150;
	// end inline asm
	add.s32 	%r402, %r178, %r179;
	add.s32 	%r403, %r402, 1272893481;
	shf.l.wrap.b32 	%r404, %r403, %r403, 11;
	add.s32 	%r194, %r404, %r190;
	// begin inline asm
	lop3.b32 %r183, %r194, %r190, %r186, 150;
	// end inline asm
	add.s32 	%r405, %r182, %r183;
	add.s32 	%r406, %r405, -155497632;
	shf.l.wrap.b32 	%r407, %r406, %r406, 16;
	add.s32 	%r198, %r407, %r194;
	// begin inline asm
	lop3.b32 %r187, %r198, %r194, %r190, 150;
	// end inline asm
	add.s32 	%r408, %r186, %r187;
	add.s32 	%r409, %r408, -1094730640;
	shf.l.wrap.b32 	%r410, %r409, %r409, 23;
	add.s32 	%r202, %r410, %r198;
	// begin inline asm
	lop3.b32 %r191, %r202, %r198, %r194, 150;
	// end inline asm
	add.s32 	%r411, %r190, %r191;
	add.s32 	%r412, %r411, 681279174;
	shf.l.wrap.b32 	%r413, %r412, %r412, 4;
	add.s32 	%r206, %r413, %r202;
	// begin inline asm
	lop3.b32 %r195, %r206, %r202, %r198, 150;
	// end inline asm
	add.s32 	%r414, %r194, %r195;
	add.s32 	%r415, %r414, %r497;
	add.s32 	%r416, %r415, -358537222;
	shf.l.wrap.b32 	%r417, %r416, %r416, 11;
	add.s32 	%r210, %r417, %r206;
	// begin inline asm
	lop3.b32 %r199, %r210, %r206, %r202, 150;
	// end inline asm
	add.s32 	%r418, %r198, %r199;
	add.s32 	%r419, %r418, %r500;
	add.s32 	%r420, %r419, -722521979;
	shf.l.wrap.b32 	%r421, %r420, %r420, 16;
	add.s32 	%r214, %r421, %r210;
	// begin inline asm
	lop3.b32 %r203, %r214, %r210, %r206, 150;
	// end inline asm
	add.s32 	%r422, %r202, %r203;
	add.s32 	%r423, %r422, 76029189;
	shf.l.wrap.b32 	%r424, %r423, %r423, 23;
	add.s32 	%r218, %r424, %r214;
	// begin inline asm
	lop3.b32 %r207, %r218, %r214, %r210, 150;
	// end inline asm
	add.s32 	%r425, %r206, %r207;
	add.s32 	%r426, %r425, -640364487;
	shf.l.wrap.b32 	%r427, %r426, %r426, 4;
	add.s32 	%r222, %r427, %r218;
	// begin inline asm
	lop3.b32 %r211, %r222, %r218, %r214, 150;
	// end inline asm
	add.s32 	%r428, %r210, %r211;
	add.s32 	%r429, %r428, -421815835;
	shf.l.wrap.b32 	%r430, %r429, %r429, 11;
	add.s32 	%r226, %r430, %r222;
	// begin inline asm
	lop3.b32 %r215, %r226, %r222, %r218, 150;
	// end inline asm
	add.s32 	%r431, %r214, %r215;
	add.s32 	%r432, %r431, 530742520;
	shf.l.wrap.b32 	%r433, %r432, %r432, 16;
	add.s32 	%r230, %r433, %r226;
	// begin inline asm
	lop3.b32 %r219, %r230, %r226, %r222, 150;
	// end inline asm
	add.s32 	%r434, %r218, %r219;
	add.s32 	%r435, %r434, %r499;
	add.s32 	%r436, %r435, -995338651;
	shf.l.wrap.b32 	%r437, %r436, %r436, 23;
	add.s32 	%r234, %r437, %r230;
	// begin inline asm
	lop3.b32 %r223, %r234, %r230, %r226, 57;
	// end inline asm
	add.s32 	%r438, %r222, %r223;
	add.s32 	%r439, %r438, %r497;
	add.s32 	%r440, %r439, -198630844;
	shf.l.wrap.b32 	%r441, %r440, %r440, 6;
	add.s32 	%r238, %r441, %r234;
	// begin inline asm
	lop3.b32 %r227, %r238, %r234, %r230, 57;
	// end inline asm
	add.s32 	%r442, %r226, %r227;
	add.s32 	%r443, %r442, 1126891415;
	shf.l.wrap.b32 	%r444, %r443, %r443, 10;
	add.s32 	%r242, %r444, %r238;
	// begin inline asm
	lop3.b32 %r231, %r242, %r238, %r234, 57;
	// end inline asm
	add.s32 	%r445, %r230, %r231;
	add.s32 	%r446, %r445, -1416354777;
	shf.l.wrap.b32 	%r447, %r446, %r446, 15;
	add.s32 	%r246, %r447, %r242;
	// begin inline asm
	lop3.b32 %r235, %r246, %r242, %r238, 57;
	// end inline asm
	add.s32 	%r448, %r234, %r235;
	add.s32 	%r449, %r448, -57434055;
	shf.l.wrap.b32 	%r450, %r449, %r449, 21;
	add.s32 	%r250, %r450, %r246;
	// begin inline asm
	lop3.b32 %r239, %r250, %r246, %r242, 57;
	// end inline asm
	add.s32 	%r451, %r238, %r239;
	add.s32 	%r452, %r451, 1700485571;
	shf.l.wrap.b32 	%r453, %r452, %r452, 6;
	add.s32 	%r254, %r453, %r250;
	// begin inline asm
	lop3.b32 %r243, %r254, %r250, %r246, 57;
	// end inline asm
	add.s32 	%r454, %r242, %r243;
	add.s32 	%r455, %r454, %r500;
	add.s32 	%r456, %r455, -1894986606;
	shf.l.wrap.b32 	%r457, %r456, %r456, 10;
	add.s32 	%r258, %r457, %r254;
	// begin inline asm
	lop3.b32 %r247, %r258, %r254, %r250, 57;
	// end inline asm
	add.s32 	%r458, %r246, %r247;
	add.s32 	%r459, %r458, -1051523;
	shf.l.wrap.b32 	%r460, %r459, %r459, 15;
	add.s32 	%r262, %r460, %r258;
	// begin inline asm
	lop3.b32 %r251, %r262, %r258, %r254, 57;
	// end inline asm
	add.s32 	%r461, %r250, %r251;
	add.s32 	%r462, %r461, %r498;
	add.s32 	%r463, %r462, -2054922799;
	shf.l.wrap.b32 	%r464, %r463, %r463, 21;
	add.s32 	%r266, %r464, %r262;
	// begin inline asm
	lop3.b32 %r255, %r266, %r262, %r258, 57;
	// end inline asm
	add.s32 	%r465, %r254, %r255;
	add.s32 	%r466, %r465, 1873313359;
	shf.l.wrap.b32 	%r467, %r466, %r466, 6;
	add.s32 	%r270, %r467, %r266;
	// begin inline asm
	lop3.b32 %r259, %r270, %r266, %r262, 57;
	// end inline asm
	add.s32 	%r468, %r258, %r259;
	add.s32 	%r469, %r468, -30611744;
	shf.l.wrap.b32 	%r470, %r469, %r469, 10;
	add.s32 	%r274, %r470, %r270;
	// begin inline asm
	lop3.b32 %r263, %r274, %r270, %r266, 57;
	// end inline asm
	add.s32 	%r471, %r262, %r263;
	add.s32 	%r472, %r471, -1560198380;
	shf.l.wrap.b32 	%r473, %r472, %r472, 15;
	add.s32 	%r278, %r473, %r274;
	// begin inline asm
	lop3.b32 %r267, %r278, %r274, %r270, 57;
	// end inline asm
	add.s32 	%r474, %r266, %r267;
	add.s32 	%r475, %r474, 1309151649;
	shf.l.wrap.b32 	%r476, %r475, %r475, 21;
	add.s32 	%r282, %r476, %r278;
	// begin inline asm
	lop3.b32 %r271, %r282, %r278, %r274, 57;
	// end inline asm
	add.s32 	%r477, %r270, %r271;
	add.s32 	%r478, %r477, -145522942;
	shf.l.wrap.b32 	%r479, %r478, %r478, 6;
	add.s32 	%r286, %r479, %r282;
	// begin inline asm
	lop3.b32 %r275, %r286, %r282, %r278, 57;
	// end inline asm
	add.s32 	%r480, %r274, %r275;
	add.s32 	%r481, %r480, -1120210379;
	shf.l.wrap.b32 	%r482, %r481, %r481, 10;
	add.s32 	%r285, %r482, %r286;
	// begin inline asm
	lop3.b32 %r279, %r285, %r286, %r282, 57;
	// end inline asm
	add.s32 	%r483, %r278, %r279;
	add.s32 	%r484, %r483, %r499;
	add.s32 	%r485, %r484, 718787259;
	shf.l.wrap.b32 	%r486, %r485, %r485, 15;
	add.s32 	%r284, %r486, %r285;
	// begin inline asm
	lop3.b32 %r283, %r284, %r285, %r286, 57;
	// end inline asm
	add.s32 	%r487, %r282, %r283;
	add.s32 	%r488, %r487, -343485551;
	shf.l.wrap.b32 	%r489, %r488, %r488, 21;
	add.s32 	%r497, %r286, 1732584193;
	add.s32 	%r490, %r284, %r489;
	add.s32 	%r498, %r490, -271733879;
	add.s32 	%r499, %r284, -1732584194;
	add.s32 	%r500, %r285, 271733878;
	add.s32 	%r496, %r496, 1;
	setp.lt.u32 	%p2, %r496, %r2;
	@%p2 bra 	$L__BB0_2;

$L__BB0_3:
	sub.s32 	%r491, %r1, %r2;
	st.global.u32 	[%rd2], %r491;
	setp.eq.s32 	%p3, %r491, 0;
	@%p3 bra 	$L__BB0_5;

	st.global.v2.u32 	[%rd2+-64], {%r497, %r498};
	st.global.v2.u32 	[%rd2+-56], {%r499, %r500};
	bra.uni 	$L__BB0_6;

$L__BB0_5:
	ld.param.u64 	%rd9, [loop_md5_param_0];
	shl.b64 	%rd7, %rd1, 4;
	add.s64 	%rd8, %rd9, %rd7;
	st.global.v2.u32 	[%rd8], {%r497, %r498};
	st.global.v2.u32 	[%rd8+8], {%r499, %r500};

$L__BB0_6:
	ret;

}
	// .globl	sspr_md5
.entry sspr_md5(
	.param .u64 .ptr .global .align 4 sspr_md5_param_0,
	.param .u64 .ptr .global .align 8 sspr_md5_param_1,
	.param .u64 .ptr .const .align 4 sspr_md5_param_2,
	.param .u64 .ptr .global .align 8 sspr_md5_param_3
)
{
	.local .align 16 .b8 	__local_depot1[240];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<50>;
	.reg .b16 	%rs<101>;
	.reg .b32 	%r<3330>;
	.reg .b64 	%rd<209>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd114, [sspr_md5_param_0];
	add.u64 	%rd185, %SPL, 16;
	add.u64 	%rd165, %SP, 80;
	cvta.to.local.u64 	%rd167, %rd165;
	add.u64 	%rd4, %SPL, 144;
	mov.u32 	%r225, %ctaid.x;
	mov.u32 	%r226, %ntid.x;
	mov.u32 	%r227, %tid.x;
	mov.b32 	%r228, %envreg3;
	add.s32 	%r229, %r227, %r228;
	mad.lo.s32 	%r230, %r226, %r225, %r229;
	cvt.u64.u32 	%rd5, %r230;
	mul.wide.u32 	%rd121, %r230, 68;
	add.s64 	%rd122, %rd114, %rd121;
	ld.global.u32 	%r3268, [%rd122];
	setp.eq.s32 	%p1, %r3268, 0;
	@%p1 bra 	$L__BB1_6;

	mul.lo.s64 	%rd123, %rd5, 68;
	add.s64 	%rd124, %rd114, %rd123;
	add.s64 	%rd164, %rd124, 4;
	and.b32  	%r3244, %r3268, 3;
	setp.eq.s32 	%p2, %r3244, 0;
	mov.u64 	%rd163, %rd167;
	mov.u32 	%r3245, %r3268;
	@%p2 bra 	$L__BB1_4;

	mov.u64 	%rd159, %rd167;
	mov.u64 	%rd160, %rd164;
	mov.u32 	%r3245, %r3268;

$L__BB1_3:
	.pragma "nounroll";
	add.s32 	%r3245, %r3245, -1;
	add.s64 	%rd164, %rd160, 1;
	ld.global.u8 	%rs1, [%rd160];
	add.s64 	%rd163, %rd159, 1;
	st.local.u8 	[%rd159], %rs1;
	add.s32 	%r3244, %r3244, -1;
	setp.ne.s32 	%p3, %r3244, 0;
	mov.u64 	%rd159, %rd163;
	mov.u64 	%rd160, %rd164;
	@%p3 bra 	$L__BB1_3;

$L__BB1_4:
	add.s32 	%r231, %r3268, -1;
	setp.lt.u32 	%p4, %r231, 3;
	@%p4 bra 	$L__BB1_6;

$L__BB1_5:
	ld.global.u8 	%rs2, [%rd164];
	st.local.u8 	[%rd163], %rs2;
	ld.global.u8 	%rs3, [%rd164+1];
	st.local.u8 	[%rd163+1], %rs3;
	ld.global.u8 	%rs4, [%rd164+2];
	st.local.u8 	[%rd163+2], %rs4;
	add.s64 	%rd17, %rd164, 4;
	ld.global.u8 	%rs5, [%rd164+3];
	add.s64 	%rd18, %rd163, 4;
	st.local.u8 	[%rd163+3], %rs5;
	add.s32 	%r3245, %r3245, -4;
	setp.ne.s32 	%p5, %r3245, 0;
	mov.u64 	%rd163, %rd18;
	mov.u64 	%rd164, %rd17;
	@%p5 bra 	$L__BB1_5;

$L__BB1_6:
	mov.u32 	%r232, 0;
	st.local.u32 	[%rd4], %r232;
	mov.u32 	%r233, 1732584193;
	st.local.u32 	[%rd4+4], %r233;
	mov.u32 	%r234, -271733879;
	st.local.u32 	[%rd4+8], %r234;
	mov.u32 	%r235, -1732584194;
	st.local.u32 	[%rd4+12], %r235;
	mov.u32 	%r236, 271733878;
	st.local.u32 	[%rd4+16], %r236;
	@%p1 bra 	$L__BB1_19;

	st.local.u32 	[%rd4], %r3268;
	setp.lt.u32 	%p7, %r3268, 64;
	@%p7 bra 	$L__BB1_13;

	mov.u32 	%r3250, 1732584193;
	mov.u32 	%r3249, -271733879;
	mov.u32 	%r3248, -1732584194;
	mov.u32 	%r3247, 271733878;

$L__BB1_9:
	and.b64  	%rd125, %rd165, 3;
	setp.eq.s64 	%p8, %rd125, 0;
	@%p8 bra 	$L__BB1_11;

	ld.local.v4.u32 	{%r241, %r242, %r243, %r244}, [%rd167];
	mov.b32 	{%rs6, %rs7}, %r241;
	shr.u16 	%rs8, %rs6, 8;
	shr.u16 	%rs9, %rs7, 8;
	mov.b32 	{%rs10, %rs11}, %r242;
	shr.u16 	%rs12, %rs10, 8;
	shr.u16 	%rs13, %rs11, 8;
	mov.b32 	{%rs14, %rs15}, %r243;
	shr.u16 	%rs16, %rs14, 8;
	shr.u16 	%rs17, %rs15, 8;
	mov.b32 	{%rs18, %rs19}, %r244;
	shr.u16 	%rs20, %rs18, 8;
	shr.u16 	%rs21, %rs19, 8;
	cvt.u32.u16 	%r249, %rs6;
	and.b32  	%r250, %r249, 255;
	cvt.u32.u16 	%r251, %rs8;
	prmt.b32 	%r252, %r251, %r250, 30212;
	cvt.u32.u16 	%r253, %rs7;
	prmt.b32 	%r254, %r253, %r252, 28756;
	cvt.u32.u16 	%r255, %rs9;
	prmt.b32 	%r3267, %r255, %r254, 1620;
	cvt.u32.u16 	%r256, %rs10;
	and.b32  	%r257, %r256, 255;
	cvt.u32.u16 	%r258, %rs12;
	prmt.b32 	%r259, %r258, %r257, 30212;
	cvt.u32.u16 	%r260, %rs11;
	prmt.b32 	%r261, %r260, %r259, 28756;
	cvt.u32.u16 	%r262, %rs13;
	prmt.b32 	%r3266, %r262, %r261, 1620;
	cvt.u32.u16 	%r263, %rs14;
	and.b32  	%r264, %r263, 255;
	cvt.u32.u16 	%r265, %rs16;
	prmt.b32 	%r266, %r265, %r264, 30212;
	cvt.u32.u16 	%r267, %rs15;
	prmt.b32 	%r268, %r267, %r266, 28756;
	cvt.u32.u16 	%r269, %rs17;
	prmt.b32 	%r3265, %r269, %r268, 1620;
	cvt.u32.u16 	%r270, %rs18;
	and.b32  	%r271, %r270, 255;
	cvt.u32.u16 	%r272, %rs20;
	prmt.b32 	%r273, %r272, %r271, 30212;
	cvt.u32.u16 	%r274, %rs19;
	prmt.b32 	%r275, %r274, %r273, 28756;
	cvt.u32.u16 	%r276, %rs21;
	prmt.b32 	%r3264, %r276, %r275, 1620;
	ld.local.v4.u32 	{%r277, %r278, %r279, %r280}, [%rd167+16];
	mov.b32 	{%rs22, %rs23}, %r277;
	shr.u16 	%rs24, %rs22, 8;
	shr.u16 	%rs25, %rs23, 8;
	mov.b32 	{%rs26, %rs27}, %r278;
	shr.u16 	%rs28, %rs26, 8;
	shr.u16 	%rs29, %rs27, 8;
	mov.b32 	{%rs30, %rs31}, %r279;
	shr.u16 	%rs32, %rs30, 8;
	shr.u16 	%rs33, %rs31, 8;
	mov.b32 	{%rs34, %rs35}, %r280;
	shr.u16 	%rs36, %rs34, 8;
	shr.u16 	%rs37, %rs35, 8;
	cvt.u32.u16 	%r285, %rs22;
	and.b32  	%r286, %r285, 255;
	cvt.u32.u16 	%r287, %rs24;
	prmt.b32 	%r288, %r287, %r286, 30212;
	cvt.u32.u16 	%r289, %rs23;
	prmt.b32 	%r290, %r289, %r288, 28756;
	cvt.u32.u16 	%r291, %rs25;
	prmt.b32 	%r3263, %r291, %r290, 1620;
	cvt.u32.u16 	%r292, %rs26;
	and.b32  	%r293, %r292, 255;
	cvt.u32.u16 	%r294, %rs28;
	prmt.b32 	%r295, %r294, %r293, 30212;
	cvt.u32.u16 	%r296, %rs27;
	prmt.b32 	%r297, %r296, %r295, 28756;
	cvt.u32.u16 	%r298, %rs29;
	prmt.b32 	%r3262, %r298, %r297, 1620;
	cvt.u32.u16 	%r299, %rs30;
	and.b32  	%r300, %r299, 255;
	cvt.u32.u16 	%r301, %rs32;
	prmt.b32 	%r302, %r301, %r300, 30212;
	cvt.u32.u16 	%r303, %rs31;
	prmt.b32 	%r304, %r303, %r302, 28756;
	cvt.u32.u16 	%r305, %rs33;
	prmt.b32 	%r3261, %r305, %r304, 1620;
	cvt.u32.u16 	%r306, %rs34;
	and.b32  	%r307, %r306, 255;
	cvt.u32.u16 	%r308, %rs36;
	prmt.b32 	%r309, %r308, %r307, 30212;
	cvt.u32.u16 	%r310, %rs35;
	prmt.b32 	%r311, %r310, %r309, 28756;
	cvt.u32.u16 	%r312, %rs37;
	prmt.b32 	%r3260, %r312, %r311, 1620;
	ld.local.v4.u32 	{%r313, %r314, %r315, %r316}, [%rd167+32];
	mov.b32 	{%rs38, %rs39}, %r313;
	shr.u16 	%rs40, %rs38, 8;
	shr.u16 	%rs41, %rs39, 8;
	mov.b32 	{%rs42, %rs43}, %r314;
	shr.u16 	%rs44, %rs42, 8;
	shr.u16 	%rs45, %rs43, 8;
	mov.b32 	{%rs46, %rs47}, %r315;
	shr.u16 	%rs48, %rs46, 8;
	shr.u16 	%rs49, %rs47, 8;
	mov.b32 	{%rs50, %rs51}, %r316;
	shr.u16 	%rs52, %rs50, 8;
	shr.u16 	%rs53, %rs51, 8;
	cvt.u32.u16 	%r321, %rs38;
	and.b32  	%r322, %r321, 255;
	cvt.u32.u16 	%r323, %rs40;
	prmt.b32 	%r324, %r323, %r322, 30212;
	cvt.u32.u16 	%r325, %rs39;
	prmt.b32 	%r326, %r325, %r324, 28756;
	cvt.u32.u16 	%r327, %rs41;
	prmt.b32 	%r3259, %r327, %r326, 1620;
	cvt.u32.u16 	%r328, %rs42;
	and.b32  	%r329, %r328, 255;
	cvt.u32.u16 	%r330, %rs44;
	prmt.b32 	%r331, %r330, %r329, 30212;
	cvt.u32.u16 	%r332, %rs43;
	prmt.b32 	%r333, %r332, %r331, 28756;
	cvt.u32.u16 	%r334, %rs45;
	prmt.b32 	%r3258, %r334, %r333, 1620;
	cvt.u32.u16 	%r335, %rs46;
	and.b32  	%r336, %r335, 255;
	cvt.u32.u16 	%r337, %rs48;
	prmt.b32 	%r338, %r337, %r336, 30212;
	cvt.u32.u16 	%r339, %rs47;
	prmt.b32 	%r340, %r339, %r338, 28756;
	cvt.u32.u16 	%r341, %rs49;
	prmt.b32 	%r3257, %r341, %r340, 1620;
	cvt.u32.u16 	%r342, %rs50;
	and.b32  	%r343, %r342, 255;
	cvt.u32.u16 	%r344, %rs52;
	prmt.b32 	%r345, %r344, %r343, 30212;
	cvt.u32.u16 	%r346, %rs51;
	prmt.b32 	%r347, %r346, %r345, 28756;
	cvt.u32.u16 	%r348, %rs53;
	prmt.b32 	%r3256, %r348, %r347, 1620;
	ld.local.v4.u32 	{%r349, %r350, %r351, %r352}, [%rd167+48];
	mov.b32 	{%rs54, %rs55}, %r349;
	shr.u16 	%rs56, %rs54, 8;
	shr.u16 	%rs57, %rs55, 8;
	mov.b32 	{%rs58, %rs59}, %r350;
	shr.u16 	%rs60, %rs58, 8;
	shr.u16 	%rs61, %rs59, 8;
	mov.b32 	{%rs62, %rs63}, %r351;
	shr.u16 	%rs64, %rs62, 8;
	shr.u16 	%rs65, %rs63, 8;
	mov.b32 	{%rs66, %rs67}, %r352;
	shr.u16 	%rs68, %rs66, 8;
	shr.u16 	%rs69, %rs67, 8;
	cvt.u32.u16 	%r357, %rs54;
	and.b32  	%r358, %r357, 255;
	cvt.u32.u16 	%r359, %rs56;
	prmt.b32 	%r360, %r359, %r358, 30212;
	cvt.u32.u16 	%r361, %rs55;
	prmt.b32 	%r362, %r361, %r360, 28756;
	cvt.u32.u16 	%r363, %rs57;
	prmt.b32 	%r3255, %r363, %r362, 1620;
	cvt.u32.u16 	%r364, %rs58;
	and.b32  	%r365, %r364, 255;
	cvt.u32.u16 	%r366, %rs60;
	prmt.b32 	%r367, %r366, %r365, 30212;
	cvt.u32.u16 	%r368, %rs59;
	prmt.b32 	%r369, %r368, %r367, 28756;
	cvt.u32.u16 	%r370, %rs61;
	prmt.b32 	%r3254, %r370, %r369, 1620;
	cvt.u32.u16 	%r371, %rs62;
	and.b32  	%r372, %r371, 255;
	cvt.u32.u16 	%r373, %rs64;
	prmt.b32 	%r374, %r373, %r372, 30212;
	cvt.u32.u16 	%r375, %rs63;
	prmt.b32 	%r376, %r375, %r374, 28756;
	cvt.u32.u16 	%r377, %rs65;
	prmt.b32 	%r3253, %r377, %r376, 1620;
	cvt.u32.u16 	%r378, %rs66;
	and.b32  	%r379, %r378, 255;
	cvt.u32.u16 	%r380, %rs68;
	prmt.b32 	%r381, %r380, %r379, 30212;
	cvt.u32.u16 	%r382, %rs67;
	prmt.b32 	%r383, %r382, %r381, 28756;
	cvt.u32.u16 	%r384, %rs69;
	prmt.b32 	%r3252, %r384, %r383, 1620;
	bra.uni 	$L__BB1_12;

$L__BB1_11:
	ld.local.v4.u32 	{%r3267, %r3266, %r3265, %r3264}, [%rd167];
	ld.local.v4.u32 	{%r3263, %r3262, %r3261, %r3260}, [%rd167+16];
	ld.local.v4.u32 	{%r3259, %r3258, %r3257, %r3256}, [%rd167+32];
	ld.local.v4.u32 	{%r3255, %r3254, %r3253, %r3252}, [%rd167+48];

$L__BB1_12:
	add.s32 	%r657, %r3267, %r3250;
	// begin inline asm
	lop3.b32 %r401, %r3249, %r3248, %r3247, 202;
	// end inline asm
	add.s32 	%r658, %r657, %r401;
	add.s32 	%r659, %r658, -680876936;
	shf.l.wrap.b32 	%r660, %r659, %r659, 7;
	add.s32 	%r416, %r660, %r3249;
	// begin inline asm
	lop3.b32 %r405, %r416, %r3249, %r3248, 202;
	// end inline asm
	add.s32 	%r661, %r3266, %r3247;
	add.s32 	%r662, %r661, %r405;
	add.s32 	%r663, %r662, -389564586;
	shf.l.wrap.b32 	%r664, %r663, %r663, 12;
	add.s32 	%r420, %r664, %r416;
	// begin inline asm
	lop3.b32 %r409, %r420, %r416, %r3249, 202;
	// end inline asm
	add.s32 	%r665, %r3265, %r3248;
	add.s32 	%r666, %r665, %r409;
	add.s32 	%r667, %r666, 606105819;
	shf.l.wrap.b32 	%r668, %r667, %r667, 17;
	add.s32 	%r424, %r668, %r420;
	// begin inline asm
	lop3.b32 %r413, %r424, %r420, %r416, 202;
	// end inline asm
	add.s32 	%r669, %r3264, %r3249;
	add.s32 	%r670, %r669, %r413;
	add.s32 	%r671, %r670, -1044525330;
	shf.l.wrap.b32 	%r672, %r671, %r671, 22;
	add.s32 	%r428, %r672, %r424;
	// begin inline asm
	lop3.b32 %r417, %r428, %r424, %r420, 202;
	// end inline asm
	add.s32 	%r673, %r3263, %r417;
	add.s32 	%r674, %r673, %r416;
	add.s32 	%r675, %r674, -176418897;
	shf.l.wrap.b32 	%r676, %r675, %r675, 7;
	add.s32 	%r432, %r676, %r428;
	// begin inline asm
	lop3.b32 %r421, %r432, %r428, %r424, 202;
	// end inline asm
	add.s32 	%r677, %r3262, %r421;
	add.s32 	%r678, %r677, %r420;
	add.s32 	%r679, %r678, 1200080426;
	shf.l.wrap.b32 	%r680, %r679, %r679, 12;
	add.s32 	%r436, %r680, %r432;
	// begin inline asm
	lop3.b32 %r425, %r436, %r432, %r428, 202;
	// end inline asm
	add.s32 	%r681, %r3261, %r425;
	add.s32 	%r682, %r681, %r424;
	add.s32 	%r683, %r682, -1473231341;
	shf.l.wrap.b32 	%r684, %r683, %r683, 17;
	add.s32 	%r440, %r684, %r436;
	// begin inline asm
	lop3.b32 %r429, %r440, %r436, %r432, 202;
	// end inline asm
	add.s32 	%r685, %r3260, %r429;
	add.s32 	%r686, %r685, %r428;
	add.s32 	%r687, %r686, -45705983;
	shf.l.wrap.b32 	%r688, %r687, %r687, 22;
	add.s32 	%r444, %r688, %r440;
	// begin inline asm
	lop3.b32 %r433, %r444, %r440, %r436, 202;
	// end inline asm
	add.s32 	%r689, %r3259, %r433;
	add.s32 	%r690, %r689, %r432;
	add.s32 	%r691, %r690, 1770035416;
	shf.l.wrap.b32 	%r692, %r691, %r691, 7;
	add.s32 	%r448, %r692, %r444;
	// begin inline asm
	lop3.b32 %r437, %r448, %r444, %r440, 202;
	// end inline asm
	add.s32 	%r693, %r3258, %r437;
	add.s32 	%r694, %r693, %r436;
	add.s32 	%r695, %r694, -1958414417;
	shf.l.wrap.b32 	%r696, %r695, %r695, 12;
	add.s32 	%r452, %r696, %r448;
	// begin inline asm
	lop3.b32 %r441, %r452, %r448, %r444, 202;
	// end inline asm
	add.s32 	%r697, %r3257, %r441;
	add.s32 	%r698, %r697, %r440;
	add.s32 	%r699, %r698, -42063;
	shf.l.wrap.b32 	%r700, %r699, %r699, 17;
	add.s32 	%r456, %r700, %r452;
	// begin inline asm
	lop3.b32 %r445, %r456, %r452, %r448, 202;
	// end inline asm
	add.s32 	%r701, %r3256, %r445;
	add.s32 	%r702, %r701, %r444;
	add.s32 	%r703, %r702, -1990404162;
	shf.l.wrap.b32 	%r704, %r703, %r703, 22;
	add.s32 	%r460, %r704, %r456;
	// begin inline asm
	lop3.b32 %r449, %r460, %r456, %r452, 202;
	// end inline asm
	add.s32 	%r705, %r3255, %r449;
	add.s32 	%r706, %r705, %r448;
	add.s32 	%r707, %r706, 1804603682;
	shf.l.wrap.b32 	%r708, %r707, %r707, 7;
	add.s32 	%r464, %r708, %r460;
	// begin inline asm
	lop3.b32 %r453, %r464, %r460, %r456, 202;
	// end inline asm
	add.s32 	%r709, %r3254, %r453;
	add.s32 	%r710, %r709, %r452;
	add.s32 	%r711, %r710, -40341101;
	shf.l.wrap.b32 	%r712, %r711, %r711, 12;
	add.s32 	%r468, %r712, %r464;
	// begin inline asm
	lop3.b32 %r457, %r468, %r464, %r460, 202;
	// end inline asm
	add.s32 	%r713, %r3253, %r457;
	add.s32 	%r714, %r713, %r456;
	add.s32 	%r715, %r714, -1502002290;
	shf.l.wrap.b32 	%r716, %r715, %r715, 17;
	add.s32 	%r472, %r716, %r468;
	// begin inline asm
	lop3.b32 %r461, %r472, %r468, %r464, 202;
	// end inline asm
	add.s32 	%r717, %r3252, %r461;
	add.s32 	%r718, %r717, %r460;
	add.s32 	%r719, %r718, 1236535329;
	shf.l.wrap.b32 	%r720, %r719, %r719, 22;
	add.s32 	%r476, %r720, %r472;
	// begin inline asm
	lop3.b32 %r465, %r476, %r472, %r468, 228;
	// end inline asm
	add.s32 	%r721, %r3266, %r465;
	add.s32 	%r722, %r721, %r464;
	add.s32 	%r723, %r722, -165796510;
	shf.l.wrap.b32 	%r724, %r723, %r723, 5;
	add.s32 	%r480, %r724, %r476;
	// begin inline asm
	lop3.b32 %r469, %r480, %r476, %r472, 228;
	// end inline asm
	add.s32 	%r725, %r3261, %r469;
	add.s32 	%r726, %r725, %r468;
	add.s32 	%r727, %r726, -1069501632;
	shf.l.wrap.b32 	%r728, %r727, %r727, 9;
	add.s32 	%r484, %r728, %r480;
	// begin inline asm
	lop3.b32 %r473, %r484, %r480, %r476, 228;
	// end inline asm
	add.s32 	%r729, %r3256, %r473;
	add.s32 	%r730, %r729, %r472;
	add.s32 	%r731, %r730, 643717713;
	shf.l.wrap.b32 	%r732, %r731, %r731, 14;
	add.s32 	%r488, %r732, %r484;
	// begin inline asm
	lop3.b32 %r477, %r488, %r484, %r480, 228;
	// end inline asm
	add.s32 	%r733, %r3267, %r477;
	add.s32 	%r734, %r733, %r476;
	add.s32 	%r735, %r734, -373897302;
	shf.l.wrap.b32 	%r736, %r735, %r735, 20;
	add.s32 	%r492, %r736, %r488;
	// begin inline asm
	lop3.b32 %r481, %r492, %r488, %r484, 228;
	// end inline asm
	add.s32 	%r737, %r3262, %r481;
	add.s32 	%r738, %r737, %r480;
	add.s32 	%r739, %r738, -701558691;
	shf.l.wrap.b32 	%r740, %r739, %r739, 5;
	add.s32 	%r496, %r740, %r492;
	// begin inline asm
	lop3.b32 %r485, %r496, %r492, %r488, 228;
	// end inline asm
	add.s32 	%r741, %r3257, %r485;
	add.s32 	%r742, %r741, %r484;
	add.s32 	%r743, %r742, 38016083;
	shf.l.wrap.b32 	%r744, %r743, %r743, 9;
	add.s32 	%r500, %r744, %r496;
	// begin inline asm
	lop3.b32 %r489, %r500, %r496, %r492, 228;
	// end inline asm
	add.s32 	%r745, %r3252, %r489;
	add.s32 	%r746, %r745, %r488;
	add.s32 	%r747, %r746, -660478335;
	shf.l.wrap.b32 	%r748, %r747, %r747, 14;
	add.s32 	%r504, %r748, %r500;
	// begin inline asm
	lop3.b32 %r493, %r504, %r500, %r496, 228;
	// end inline asm
	add.s32 	%r749, %r3263, %r493;
	add.s32 	%r750, %r749, %r492;
	add.s32 	%r751, %r750, -405537848;
	shf.l.wrap.b32 	%r752, %r751, %r751, 20;
	add.s32 	%r508, %r752, %r504;
	// begin inline asm
	lop3.b32 %r497, %r508, %r504, %r500, 228;
	// end inline asm
	add.s32 	%r753, %r3258, %r497;
	add.s32 	%r754, %r753, %r496;
	add.s32 	%r755, %r754, 568446438;
	shf.l.wrap.b32 	%r756, %r755, %r755, 5;
	add.s32 	%r512, %r756, %r508;
	// begin inline asm
	lop3.b32 %r501, %r512, %r508, %r504, 228;
	// end inline asm
	add.s32 	%r757, %r3253, %r501;
	add.s32 	%r758, %r757, %r500;
	add.s32 	%r759, %r758, -1019803690;
	shf.l.wrap.b32 	%r760, %r759, %r759, 9;
	add.s32 	%r516, %r760, %r512;
	// begin inline asm
	lop3.b32 %r505, %r516, %r512, %r508, 228;
	// end inline asm
	add.s32 	%r761, %r3264, %r505;
	add.s32 	%r762, %r761, %r504;
	add.s32 	%r763, %r762, -187363961;
	shf.l.wrap.b32 	%r764, %r763, %r763, 14;
	add.s32 	%r520, %r764, %r516;
	// begin inline asm
	lop3.b32 %r509, %r520, %r516, %r512, 228;
	// end inline asm
	add.s32 	%r765, %r3259, %r509;
	add.s32 	%r766, %r765, %r508;
	add.s32 	%r767, %r766, 1163531501;
	shf.l.wrap.b32 	%r768, %r767, %r767, 20;
	add.s32 	%r524, %r768, %r520;
	// begin inline asm
	lop3.b32 %r513, %r524, %r520, %r516, 228;
	// end inline asm
	add.s32 	%r769, %r3254, %r513;
	add.s32 	%r770, %r769, %r512;
	add.s32 	%r771, %r770, -1444681467;
	shf.l.wrap.b32 	%r772, %r771, %r771, 5;
	add.s32 	%r528, %r772, %r524;
	// begin inline asm
	lop3.b32 %r517, %r528, %r524, %r520, 228;
	// end inline asm
	add.s32 	%r773, %r3265, %r517;
	add.s32 	%r774, %r773, %r516;
	add.s32 	%r775, %r774, -51403784;
	shf.l.wrap.b32 	%r776, %r775, %r775, 9;
	add.s32 	%r532, %r776, %r528;
	// begin inline asm
	lop3.b32 %r521, %r532, %r528, %r524, 228;
	// end inline asm
	add.s32 	%r777, %r3260, %r521;
	add.s32 	%r778, %r777, %r520;
	add.s32 	%r779, %r778, 1735328473;
	shf.l.wrap.b32 	%r780, %r779, %r779, 14;
	add.s32 	%r536, %r780, %r532;
	// begin inline asm
	lop3.b32 %r525, %r536, %r532, %r528, 228;
	// end inline asm
	add.s32 	%r781, %r3255, %r525;
	add.s32 	%r782, %r781, %r524;
	add.s32 	%r783, %r782, -1926607734;
	shf.l.wrap.b32 	%r784, %r783, %r783, 20;
	add.s32 	%r540, %r784, %r536;
	// begin inline asm
	lop3.b32 %r529, %r540, %r536, %r532, 150;
	// end inline asm
	add.s32 	%r785, %r3262, %r529;
	add.s32 	%r786, %r785, %r528;
	add.s32 	%r787, %r786, -378558;
	shf.l.wrap.b32 	%r788, %r787, %r787, 4;
	add.s32 	%r544, %r788, %r540;
	// begin inline asm
	lop3.b32 %r533, %r544, %r540, %r536, 150;
	// end inline asm
	add.s32 	%r789, %r3259, %r533;
	add.s32 	%r790, %r789, %r532;
	add.s32 	%r791, %r790, -2022574463;
	shf.l.wrap.b32 	%r792, %r791, %r791, 11;
	add.s32 	%r548, %r792, %r544;
	// begin inline asm
	lop3.b32 %r537, %r548, %r544, %r540, 150;
	// end inline asm
	add.s32 	%r793, %r3256, %r537;
	add.s32 	%r794, %r793, %r536;
	add.s32 	%r795, %r794, 1839030562;
	shf.l.wrap.b32 	%r796, %r795, %r795, 16;
	add.s32 	%r552, %r796, %r548;
	// begin inline asm
	lop3.b32 %r541, %r552, %r548, %r544, 150;
	// end inline asm
	add.s32 	%r797, %r3253, %r541;
	add.s32 	%r798, %r797, %r540;
	add.s32 	%r799, %r798, -35309556;
	shf.l.wrap.b32 	%r800, %r799, %r799, 23;
	add.s32 	%r556, %r800, %r552;
	// begin inline asm
	lop3.b32 %r545, %r556, %r552, %r548, 150;
	// end inline asm
	add.s32 	%r801, %r3266, %r545;
	add.s32 	%r802, %r801, %r544;
	add.s32 	%r803, %r802, -1530992060;
	shf.l.wrap.b32 	%r804, %r803, %r803, 4;
	add.s32 	%r560, %r804, %r556;
	// begin inline asm
	lop3.b32 %r549, %r560, %r556, %r552, 150;
	// end inline asm
	add.s32 	%r805, %r3263, %r549;
	add.s32 	%r806, %r805, %r548;
	add.s32 	%r807, %r806, 1272893353;
	shf.l.wrap.b32 	%r808, %r807, %r807, 11;
	add.s32 	%r564, %r808, %r560;
	// begin inline asm
	lop3.b32 %r553, %r564, %r560, %r556, 150;
	// end inline asm
	add.s32 	%r809, %r3260, %r553;
	add.s32 	%r810, %r809, %r552;
	add.s32 	%r811, %r810, -155497632;
	shf.l.wrap.b32 	%r812, %r811, %r811, 16;
	add.s32 	%r568, %r812, %r564;
	// begin inline asm
	lop3.b32 %r557, %r568, %r564, %r560, 150;
	// end inline asm
	add.s32 	%r813, %r3257, %r557;
	add.s32 	%r814, %r813, %r556;
	add.s32 	%r815, %r814, -1094730640;
	shf.l.wrap.b32 	%r816, %r815, %r815, 23;
	add.s32 	%r572, %r816, %r568;
	// begin inline asm
	lop3.b32 %r561, %r572, %r568, %r564, 150;
	// end inline asm
	add.s32 	%r817, %r3254, %r561;
	add.s32 	%r818, %r817, %r560;
	add.s32 	%r819, %r818, 681279174;
	shf.l.wrap.b32 	%r820, %r819, %r819, 4;
	add.s32 	%r576, %r820, %r572;
	// begin inline asm
	lop3.b32 %r565, %r576, %r572, %r568, 150;
	// end inline asm
	add.s32 	%r821, %r3267, %r565;
	add.s32 	%r822, %r821, %r564;
	add.s32 	%r823, %r822, -358537222;
	shf.l.wrap.b32 	%r824, %r823, %r823, 11;
	add.s32 	%r580, %r824, %r576;
	// begin inline asm
	lop3.b32 %r569, %r580, %r576, %r572, 150;
	// end inline asm
	add.s32 	%r825, %r3264, %r569;
	add.s32 	%r826, %r825, %r568;
	add.s32 	%r827, %r826, -722521979;
	shf.l.wrap.b32 	%r828, %r827, %r827, 16;
	add.s32 	%r584, %r828, %r580;
	// begin inline asm
	lop3.b32 %r573, %r584, %r580, %r576, 150;
	// end inline asm
	add.s32 	%r829, %r3261, %r573;
	add.s32 	%r830, %r829, %r572;
	add.s32 	%r831, %r830, 76029189;
	shf.l.wrap.b32 	%r832, %r831, %r831, 23;
	add.s32 	%r588, %r832, %r584;
	// begin inline asm
	lop3.b32 %r577, %r588, %r584, %r580, 150;
	// end inline asm
	add.s32 	%r833, %r3258, %r577;
	add.s32 	%r834, %r833, %r576;
	add.s32 	%r835, %r834, -640364487;
	shf.l.wrap.b32 	%r836, %r835, %r835, 4;
	add.s32 	%r592, %r836, %r588;
	// begin inline asm
	lop3.b32 %r581, %r592, %r588, %r584, 150;
	// end inline asm
	add.s32 	%r837, %r3255, %r581;
	add.s32 	%r838, %r837, %r580;
	add.s32 	%r839, %r838, -421815835;
	shf.l.wrap.b32 	%r840, %r839, %r839, 11;
	add.s32 	%r596, %r840, %r592;
	// begin inline asm
	lop3.b32 %r585, %r596, %r592, %r588, 150;
	// end inline asm
	add.s32 	%r841, %r3252, %r585;
	add.s32 	%r842, %r841, %r584;
	add.s32 	%r843, %r842, 530742520;
	shf.l.wrap.b32 	%r844, %r843, %r843, 16;
	add.s32 	%r600, %r844, %r596;
	// begin inline asm
	lop3.b32 %r589, %r600, %r596, %r592, 150;
	// end inline asm
	add.s32 	%r845, %r3265, %r589;
	add.s32 	%r846, %r845, %r588;
	add.s32 	%r847, %r846, -995338651;
	shf.l.wrap.b32 	%r848, %r847, %r847, 23;
	add.s32 	%r604, %r848, %r600;
	// begin inline asm
	lop3.b32 %r593, %r604, %r600, %r596, 57;
	// end inline asm
	add.s32 	%r849, %r3267, %r593;
	add.s32 	%r850, %r849, %r592;
	add.s32 	%r851, %r850, -198630844;
	shf.l.wrap.b32 	%r852, %r851, %r851, 6;
	add.s32 	%r608, %r852, %r604;
	// begin inline asm
	lop3.b32 %r597, %r608, %r604, %r600, 57;
	// end inline asm
	add.s32 	%r853, %r3260, %r597;
	add.s32 	%r854, %r853, %r596;
	add.s32 	%r855, %r854, 1126891415;
	shf.l.wrap.b32 	%r856, %r855, %r855, 10;
	add.s32 	%r612, %r856, %r608;
	// begin inline asm
	lop3.b32 %r601, %r612, %r608, %r604, 57;
	// end inline asm
	add.s32 	%r857, %r3253, %r601;
	add.s32 	%r858, %r857, %r600;
	add.s32 	%r859, %r858, -1416354905;
	shf.l.wrap.b32 	%r860, %r859, %r859, 15;
	add.s32 	%r616, %r860, %r612;
	// begin inline asm
	lop3.b32 %r605, %r616, %r612, %r608, 57;
	// end inline asm
	add.s32 	%r861, %r3262, %r605;
	add.s32 	%r862, %r861, %r604;
	add.s32 	%r863, %r862, -57434055;
	shf.l.wrap.b32 	%r864, %r863, %r863, 21;
	add.s32 	%r620, %r864, %r616;
	// begin inline asm
	lop3.b32 %r609, %r620, %r616, %r612, 57;
	// end inline asm
	add.s32 	%r865, %r3255, %r609;
	add.s32 	%r866, %r865, %r608;
	add.s32 	%r867, %r866, 1700485571;
	shf.l.wrap.b32 	%r868, %r867, %r867, 6;
	add.s32 	%r624, %r868, %r620;
	// begin inline asm
	lop3.b32 %r613, %r624, %r620, %r616, 57;
	// end inline asm
	add.s32 	%r869, %r3264, %r613;
	add.s32 	%r870, %r869, %r612;
	add.s32 	%r871, %r870, -1894986606;
	shf.l.wrap.b32 	%r872, %r871, %r871, 10;
	add.s32 	%r628, %r872, %r624;
	// begin inline asm
	lop3.b32 %r617, %r628, %r624, %r620, 57;
	// end inline asm
	add.s32 	%r873, %r3257, %r617;
	add.s32 	%r874, %r873, %r616;
	add.s32 	%r875, %r874, -1051523;
	shf.l.wrap.b32 	%r876, %r875, %r875, 15;
	add.s32 	%r632, %r876, %r628;
	// begin inline asm
	lop3.b32 %r621, %r632, %r628, %r624, 57;
	// end inline asm
	add.s32 	%r877, %r3266, %r621;
	add.s32 	%r878, %r877, %r620;
	add.s32 	%r879, %r878, -2054922799;
	shf.l.wrap.b32 	%r880, %r879, %r879, 21;
	add.s32 	%r636, %r880, %r632;
	// begin inline asm
	lop3.b32 %r625, %r636, %r632, %r628, 57;
	// end inline asm
	add.s32 	%r881, %r3259, %r625;
	add.s32 	%r882, %r881, %r624;
	add.s32 	%r883, %r882, 1873313359;
	shf.l.wrap.b32 	%r884, %r883, %r883, 6;
	add.s32 	%r640, %r884, %r636;
	// begin inline asm
	lop3.b32 %r629, %r640, %r636, %r632, 57;
	// end inline asm
	add.s32 	%r885, %r3252, %r629;
	add.s32 	%r886, %r885, %r628;
	add.s32 	%r887, %r886, -30611744;
	shf.l.wrap.b32 	%r888, %r887, %r887, 10;
	add.s32 	%r644, %r888, %r640;
	// begin inline asm
	lop3.b32 %r633, %r644, %r640, %r636, 57;
	// end inline asm
	add.s32 	%r889, %r3261, %r633;
	add.s32 	%r890, %r889, %r632;
	add.s32 	%r891, %r890, -1560198380;
	shf.l.wrap.b32 	%r892, %r891, %r891, 15;
	add.s32 	%r648, %r892, %r644;
	// begin inline asm
	lop3.b32 %r637, %r648, %r644, %r640, 57;
	// end inline asm
	add.s32 	%r893, %r3254, %r637;
	add.s32 	%r894, %r893, %r636;
	add.s32 	%r895, %r894, 1309151649;
	shf.l.wrap.b32 	%r896, %r895, %r895, 21;
	add.s32 	%r652, %r896, %r648;
	// begin inline asm
	lop3.b32 %r641, %r652, %r648, %r644, 57;
	// end inline asm
	add.s32 	%r897, %r3263, %r641;
	add.s32 	%r898, %r897, %r640;
	add.s32 	%r899, %r898, -145523070;
	shf.l.wrap.b32 	%r900, %r899, %r899, 6;
	add.s32 	%r656, %r900, %r652;
	// begin inline asm
	lop3.b32 %r645, %r656, %r652, %r648, 57;
	// end inline asm
	add.s32 	%r901, %r3256, %r645;
	add.s32 	%r902, %r901, %r644;
	add.s32 	%r903, %r902, -1120210379;
	shf.l.wrap.b32 	%r904, %r903, %r903, 10;
	add.s32 	%r655, %r904, %r656;
	// begin inline asm
	lop3.b32 %r649, %r655, %r656, %r652, 57;
	// end inline asm
	add.s32 	%r905, %r3265, %r649;
	add.s32 	%r906, %r905, %r648;
	add.s32 	%r907, %r906, 718787259;
	shf.l.wrap.b32 	%r908, %r907, %r907, 15;
	add.s32 	%r654, %r908, %r655;
	// begin inline asm
	lop3.b32 %r653, %r654, %r655, %r656, 57;
	// end inline asm
	add.s32 	%r909, %r3258, %r653;
	add.s32 	%r910, %r909, %r652;
	add.s32 	%r911, %r910, -343485551;
	shf.l.wrap.b32 	%r912, %r911, %r911, 21;
	add.s32 	%r3250, %r656, %r3250;
	st.local.u32 	[%rd4+4], %r3250;
	add.s32 	%r913, %r654, %r3249;
	add.s32 	%r3249, %r913, %r912;
	st.local.u32 	[%rd4+8], %r3249;
	add.s32 	%r3248, %r3248, %r654;
	st.local.u32 	[%rd4+12], %r3248;
	add.s32 	%r3247, %r3247, %r655;
	st.local.u32 	[%rd4+16], %r3247;
	add.s64 	%rd167, %rd167, 64;
	add.s64 	%rd165, %rd165, 64;
	add.s32 	%r3268, %r3268, -64;
	setp.gt.u32 	%p9, %r3268, 63;
	@%p9 bra 	$L__BB1_9;

$L__BB1_13:
	setp.eq.s32 	%p10, %r3268, 0;
	@%p10 bra 	$L__BB1_19;

	add.s64 	%rd172, %rd4, 20;
	and.b32  	%r3270, %r3268, 3;
	setp.eq.s32 	%p11, %r3270, 0;
	mov.u32 	%r3271, %r3268;
	@%p11 bra 	$L__BB1_17;

	mov.u64 	%rd168, %rd172;
	mov.u64 	%rd169, %rd167;
	mov.u32 	%r3271, %r3268;

$L__BB1_16:
	.pragma "nounroll";
	add.s32 	%r3271, %r3271, -1;
	add.s64 	%rd167, %rd169, 1;
	ld.local.u8 	%rs70, [%rd169];
	add.s64 	%rd172, %rd168, 1;
	st.local.u8 	[%rd168], %rs70;
	add.s32 	%r3270, %r3270, -1;
	setp.ne.s32 	%p12, %r3270, 0;
	mov.u64 	%rd168, %rd172;
	mov.u64 	%rd169, %rd167;
	@%p12 bra 	$L__BB1_16;

$L__BB1_17:
	add.s32 	%r914, %r3268, -1;
	setp.lt.u32 	%p13, %r914, 3;
	@%p13 bra 	$L__BB1_19;

$L__BB1_18:
	ld.local.u8 	%rs71, [%rd167];
	st.local.u8 	[%rd172], %rs71;
	ld.local.u8 	%rs72, [%rd167+1];
	st.local.u8 	[%rd172+1], %rs72;
	ld.local.u8 	%rs73, [%rd167+2];
	st.local.u8 	[%rd172+2], %rs73;
	add.s64 	%rd37, %rd167, 4;
	ld.local.u8 	%rs74, [%rd167+3];
	add.s64 	%rd38, %rd172, 4;
	st.local.u8 	[%rd172+3], %rs74;
	add.s32 	%r3271, %r3271, -4;
	setp.ne.s32 	%p14, %r3271, 0;
	mov.u64 	%rd172, %rd38;
	mov.u64 	%rd167, %rd37;
	@%p14 bra 	$L__BB1_18;

$L__BB1_19:
	mov.u32 	%r3273, 0;
	add.s64 	%rd39, %rd185, 1;
	mov.u64 	%rd174, 0;

$L__BB1_20:
	add.s64 	%rd127, %rd39, %rd174;
	mov.u16 	%rs75, 0;
	st.local.u8 	[%rd127], %rs75;
	add.s64 	%rd174, %rd174, 1;
	add.s32 	%r3273, %r3273, 1;
	setp.lt.u32 	%p15, %r3273, 63;
	@%p15 bra 	$L__BB1_20;

	add.u64 	%rd157, %SPL, 0;
	mov.u16 	%rs76, 128;
	st.local.u8 	[%rd185], %rs76;
	ld.local.u32 	%r79, [%rd4];
	cvt.u16.u32 	%rs77, %r79;
	shr.u32 	%r916, %r79, 13;
	shr.u32 	%r917, %r79, 21;
	and.b32  	%r918, %r916, 255;
	prmt.b32 	%r919, %r917, %r918, 30212;
	cvt.u16.u32 	%rs78, %r919;
	shl.b16 	%rs79, %rs77, 3;
	st.local.v4.u16 	[%rd157], {%rs79, %rs78, %rs75, %rs75};
	and.b32  	%r3278, %r79, 63;
	setp.lt.u32 	%p16, %r3278, 56;
	selp.b32 	%r920, 56, 120, %p16;
	sub.s32 	%r3297, %r920, %r3278;
	setp.eq.s32 	%p17, %r3297, 0;
	@%p17 bra 	$L__BB1_41;

	add.u64 	%rd183, %SP, 16;
	add.s32 	%r921, %r79, %r3297;
	st.local.u32 	[%rd4], %r921;
	mov.u32 	%r922, 64;
	sub.s32 	%r82, %r922, %r3278;
	setp.lt.u32 	%p18, %r3297, %r82;
	setp.eq.s32 	%p19, %r3278, 0;
	or.pred  	%p20, %p19, %p18;
	@%p20 bra 	$L__BB1_30;

	setp.eq.s32 	%p21, %r82, 0;
	@%p21 bra 	$L__BB1_29;

	cvt.u64.u32 	%rd128, %r3278;
	add.s64 	%rd129, %rd4, %rd128;
	add.s64 	%rd179, %rd129, 20;
	and.b32  	%r3275, %r82, 3;
	setp.eq.s32 	%p22, %r3275, 0;
	mov.u64 	%rd180, %rd185;
	mov.u32 	%r3276, %r82;
	@%p22 bra 	$L__BB1_27;

	mov.u64 	%rd175, %rd179;
	mov.u64 	%rd176, %rd185;
	mov.u32 	%r3276, %r82;

$L__BB1_26:
	.pragma "nounroll";
	add.s32 	%r3276, %r3276, -1;
	add.s64 	%rd180, %rd176, 1;
	ld.local.u8 	%rs81, [%rd176];
	add.s64 	%rd179, %rd175, 1;
	st.local.u8 	[%rd175], %rs81;
	add.s32 	%r3275, %r3275, -1;
	setp.ne.s32 	%p23, %r3275, 0;
	mov.u64 	%rd175, %rd179;
	mov.u64 	%rd176, %rd180;
	@%p23 bra 	$L__BB1_26;

$L__BB1_27:
	xor.b32  	%r923, %r3278, 63;
	setp.lt.u32 	%p24, %r923, 3;
	@%p24 bra 	$L__BB1_29;

$L__BB1_28:
	ld.local.u8 	%rs82, [%rd180];
	st.local.u8 	[%rd179], %rs82;
	ld.local.u8 	%rs83, [%rd180+1];
	st.local.u8 	[%rd179+1], %rs83;
	ld.local.u8 	%rs84, [%rd180+2];
	st.local.u8 	[%rd179+2], %rs84;
	add.s64 	%rd55, %rd180, 4;
	ld.local.u8 	%rs85, [%rd180+3];
	add.s64 	%rd56, %rd179, 4;
	st.local.u8 	[%rd179+3], %rs85;
	add.s32 	%r3276, %r3276, -4;
	setp.ne.s32 	%p25, %r3276, 0;
	mov.u64 	%rd179, %rd56;
	mov.u64 	%rd180, %rd55;
	@%p25 bra 	$L__BB1_28;

$L__BB1_29:
	ld.local.u32 	%r927, [%rd4+16];
	ld.local.u32 	%r926, [%rd4+12];
	ld.local.u32 	%r925, [%rd4+8];
	// begin inline asm
	lop3.b32 %r924, %r925, %r926, %r927, 202;
	// end inline asm
	ld.local.u32 	%r1181, [%rd4+20];
	ld.local.u32 	%r1182, [%rd4+4];
	add.s32 	%r1183, %r1181, %r1182;
	add.s32 	%r1184, %r1183, %r924;
	add.s32 	%r1185, %r1184, -680876936;
	shf.l.wrap.b32 	%r1186, %r1185, %r1185, 7;
	add.s32 	%r939, %r1186, %r925;
	// begin inline asm
	lop3.b32 %r928, %r939, %r925, %r926, 202;
	// end inline asm
	ld.local.u32 	%r1187, [%rd4+24];
	add.s32 	%r1188, %r1187, %r927;
	add.s32 	%r1189, %r1188, %r928;
	add.s32 	%r1190, %r1189, -389564586;
	shf.l.wrap.b32 	%r1191, %r1190, %r1190, 12;
	add.s32 	%r943, %r1191, %r939;
	// begin inline asm
	lop3.b32 %r932, %r943, %r939, %r925, 202;
	// end inline asm
	ld.local.u32 	%r1192, [%rd4+28];
	add.s32 	%r1193, %r1192, %r926;
	add.s32 	%r1194, %r1193, %r932;
	add.s32 	%r1195, %r1194, 606105819;
	shf.l.wrap.b32 	%r1196, %r1195, %r1195, 17;
	add.s32 	%r947, %r1196, %r943;
	// begin inline asm
	lop3.b32 %r936, %r947, %r943, %r939, 202;
	// end inline asm
	ld.local.u32 	%r1197, [%rd4+32];
	add.s32 	%r1198, %r1197, %r925;
	add.s32 	%r1199, %r1198, %r936;
	add.s32 	%r1200, %r1199, -1044525330;
	shf.l.wrap.b32 	%r1201, %r1200, %r1200, 22;
	add.s32 	%r951, %r1201, %r947;
	// begin inline asm
	lop3.b32 %r940, %r951, %r947, %r943, 202;
	// end inline asm
	ld.local.u32 	%r1202, [%rd4+36];
	add.s32 	%r1203, %r1202, %r940;
	add.s32 	%r1204, %r1203, %r939;
	add.s32 	%r1205, %r1204, -176418897;
	shf.l.wrap.b32 	%r1206, %r1205, %r1205, 7;
	add.s32 	%r955, %r1206, %r951;
	// begin inline asm
	lop3.b32 %r944, %r955, %r951, %r947, 202;
	// end inline asm
	ld.local.u32 	%r1207, [%rd4+40];
	add.s32 	%r1208, %r1207, %r944;
	add.s32 	%r1209, %r1208, %r943;
	add.s32 	%r1210, %r1209, 1200080426;
	shf.l.wrap.b32 	%r1211, %r1210, %r1210, 12;
	add.s32 	%r959, %r1211, %r955;
	// begin inline asm
	lop3.b32 %r948, %r959, %r955, %r951, 202;
	// end inline asm
	ld.local.u32 	%r1212, [%rd4+44];
	add.s32 	%r1213, %r1212, %r948;
	add.s32 	%r1214, %r1213, %r947;
	add.s32 	%r1215, %r1214, -1473231341;
	shf.l.wrap.b32 	%r1216, %r1215, %r1215, 17;
	add.s32 	%r963, %r1216, %r959;
	// begin inline asm
	lop3.b32 %r952, %r963, %r959, %r955, 202;
	// end inline asm
	ld.local.u32 	%r1217, [%rd4+48];
	add.s32 	%r1218, %r1217, %r952;
	add.s32 	%r1219, %r1218, %r951;
	add.s32 	%r1220, %r1219, -45705983;
	shf.l.wrap.b32 	%r1221, %r1220, %r1220, 22;
	add.s32 	%r967, %r1221, %r963;
	// begin inline asm
	lop3.b32 %r956, %r967, %r963, %r959, 202;
	// end inline asm
	ld.local.u32 	%r1222, [%rd4+52];
	add.s32 	%r1223, %r1222, %r956;
	add.s32 	%r1224, %r1223, %r955;
	add.s32 	%r1225, %r1224, 1770035416;
	shf.l.wrap.b32 	%r1226, %r1225, %r1225, 7;
	add.s32 	%r971, %r1226, %r967;
	// begin inline asm
	lop3.b32 %r960, %r971, %r967, %r963, 202;
	// end inline asm
	ld.local.u32 	%r1227, [%rd4+56];
	add.s32 	%r1228, %r1227, %r960;
	add.s32 	%r1229, %r1228, %r959;
	add.s32 	%r1230, %r1229, -1958414417;
	shf.l.wrap.b32 	%r1231, %r1230, %r1230, 12;
	add.s32 	%r975, %r1231, %r971;
	// begin inline asm
	lop3.b32 %r964, %r975, %r971, %r967, 202;
	// end inline asm
	ld.local.u32 	%r1232, [%rd4+60];
	add.s32 	%r1233, %r1232, %r964;
	add.s32 	%r1234, %r1233, %r963;
	add.s32 	%r1235, %r1234, -42063;
	shf.l.wrap.b32 	%r1236, %r1235, %r1235, 17;
	add.s32 	%r979, %r1236, %r975;
	// begin inline asm
	lop3.b32 %r968, %r979, %r975, %r971, 202;
	// end inline asm
	ld.local.u32 	%r1237, [%rd4+64];
	add.s32 	%r1238, %r1237, %r968;
	add.s32 	%r1239, %r1238, %r967;
	add.s32 	%r1240, %r1239, -1990404162;
	shf.l.wrap.b32 	%r1241, %r1240, %r1240, 22;
	add.s32 	%r983, %r1241, %r979;
	// begin inline asm
	lop3.b32 %r972, %r983, %r979, %r975, 202;
	// end inline asm
	ld.local.u32 	%r1242, [%rd4+68];
	add.s32 	%r1243, %r1242, %r972;
	add.s32 	%r1244, %r1243, %r971;
	add.s32 	%r1245, %r1244, 1804603682;
	shf.l.wrap.b32 	%r1246, %r1245, %r1245, 7;
	add.s32 	%r987, %r1246, %r983;
	// begin inline asm
	lop3.b32 %r976, %r987, %r983, %r979, 202;
	// end inline asm
	ld.local.u32 	%r1247, [%rd4+72];
	add.s32 	%r1248, %r1247, %r976;
	add.s32 	%r1249, %r1248, %r975;
	add.s32 	%r1250, %r1249, -40341101;
	shf.l.wrap.b32 	%r1251, %r1250, %r1250, 12;
	add.s32 	%r991, %r1251, %r987;
	// begin inline asm
	lop3.b32 %r980, %r991, %r987, %r983, 202;
	// end inline asm
	ld.local.u32 	%r1252, [%rd4+76];
	add.s32 	%r1253, %r1252, %r980;
	add.s32 	%r1254, %r1253, %r979;
	add.s32 	%r1255, %r1254, -1502002290;
	shf.l.wrap.b32 	%r1256, %r1255, %r1255, 17;
	add.s32 	%r995, %r1256, %r991;
	// begin inline asm
	lop3.b32 %r984, %r995, %r991, %r987, 202;
	// end inline asm
	ld.local.u32 	%r1257, [%rd4+80];
	add.s32 	%r1258, %r1257, %r984;
	add.s32 	%r1259, %r1258, %r983;
	add.s32 	%r1260, %r1259, 1236535329;
	shf.l.wrap.b32 	%r1261, %r1260, %r1260, 22;
	add.s32 	%r999, %r1261, %r995;
	// begin inline asm
	lop3.b32 %r988, %r999, %r995, %r991, 228;
	// end inline asm
	add.s32 	%r1262, %r1187, %r988;
	add.s32 	%r1263, %r1262, %r987;
	add.s32 	%r1264, %r1263, -165796510;
	shf.l.wrap.b32 	%r1265, %r1264, %r1264, 5;
	add.s32 	%r1003, %r1265, %r999;
	// begin inline asm
	lop3.b32 %r992, %r1003, %r999, %r995, 228;
	// end inline asm
	add.s32 	%r1266, %r1212, %r992;
	add.s32 	%r1267, %r1266, %r991;
	add.s32 	%r1268, %r1267, -1069501632;
	shf.l.wrap.b32 	%r1269, %r1268, %r1268, 9;
	add.s32 	%r1007, %r1269, %r1003;
	// begin inline asm
	lop3.b32 %r996, %r1007, %r1003, %r999, 228;
	// end inline asm
	add.s32 	%r1270, %r1237, %r996;
	add.s32 	%r1271, %r1270, %r995;
	add.s32 	%r1272, %r1271, 643717713;
	shf.l.wrap.b32 	%r1273, %r1272, %r1272, 14;
	add.s32 	%r1011, %r1273, %r1007;
	// begin inline asm
	lop3.b32 %r1000, %r1011, %r1007, %r1003, 228;
	// end inline asm
	add.s32 	%r1274, %r1181, %r1000;
	add.s32 	%r1275, %r1274, %r999;
	add.s32 	%r1276, %r1275, -373897302;
	shf.l.wrap.b32 	%r1277, %r1276, %r1276, 20;
	add.s32 	%r1015, %r1277, %r1011;
	// begin inline asm
	lop3.b32 %r1004, %r1015, %r1011, %r1007, 228;
	// end inline asm
	add.s32 	%r1278, %r1207, %r1004;
	add.s32 	%r1279, %r1278, %r1003;
	add.s32 	%r1280, %r1279, -701558691;
	shf.l.wrap.b32 	%r1281, %r1280, %r1280, 5;
	add.s32 	%r1019, %r1281, %r1015;
	// begin inline asm
	lop3.b32 %r1008, %r1019, %r1015, %r1011, 228;
	// end inline asm
	add.s32 	%r1282, %r1232, %r1008;
	add.s32 	%r1283, %r1282, %r1007;
	add.s32 	%r1284, %r1283, 38016083;
	shf.l.wrap.b32 	%r1285, %r1284, %r1284, 9;
	add.s32 	%r1023, %r1285, %r1019;
	// begin inline asm
	lop3.b32 %r1012, %r1023, %r1019, %r1015, 228;
	// end inline asm
	add.s32 	%r1286, %r1257, %r1012;
	add.s32 	%r1287, %r1286, %r1011;
	add.s32 	%r1288, %r1287, -660478335;
	shf.l.wrap.b32 	%r1289, %r1288, %r1288, 14;
	add.s32 	%r1027, %r1289, %r1023;
	// begin inline asm
	lop3.b32 %r1016, %r1027, %r1023, %r1019, 228;
	// end inline asm
	add.s32 	%r1290, %r1202, %r1016;
	add.s32 	%r1291, %r1290, %r1015;
	add.s32 	%r1292, %r1291, -405537848;
	shf.l.wrap.b32 	%r1293, %r1292, %r1292, 20;
	add.s32 	%r1031, %r1293, %r1027;
	// begin inline asm
	lop3.b32 %r1020, %r1031, %r1027, %r1023, 228;
	// end inline asm
	add.s32 	%r1294, %r1227, %r1020;
	add.s32 	%r1295, %r1294, %r1019;
	add.s32 	%r1296, %r1295, 568446438;
	shf.l.wrap.b32 	%r1297, %r1296, %r1296, 5;
	add.s32 	%r1035, %r1297, %r1031;
	// begin inline asm
	lop3.b32 %r1024, %r1035, %r1031, %r1027, 228;
	// end inline asm
	add.s32 	%r1298, %r1252, %r1024;
	add.s32 	%r1299, %r1298, %r1023;
	add.s32 	%r1300, %r1299, -1019803690;
	shf.l.wrap.b32 	%r1301, %r1300, %r1300, 9;
	add.s32 	%r1039, %r1301, %r1035;
	// begin inline asm
	lop3.b32 %r1028, %r1039, %r1035, %r1031, 228;
	// end inline asm
	add.s32 	%r1302, %r1197, %r1028;
	add.s32 	%r1303, %r1302, %r1027;
	add.s32 	%r1304, %r1303, -187363961;
	shf.l.wrap.b32 	%r1305, %r1304, %r1304, 14;
	add.s32 	%r1043, %r1305, %r1039;
	// begin inline asm
	lop3.b32 %r1032, %r1043, %r1039, %r1035, 228;
	// end inline asm
	add.s32 	%r1306, %r1222, %r1032;
	add.s32 	%r1307, %r1306, %r1031;
	add.s32 	%r1308, %r1307, 1163531501;
	shf.l.wrap.b32 	%r1309, %r1308, %r1308, 20;
	add.s32 	%r1047, %r1309, %r1043;
	// begin inline asm
	lop3.b32 %r1036, %r1047, %r1043, %r1039, 228;
	// end inline asm
	add.s32 	%r1310, %r1247, %r1036;
	add.s32 	%r1311, %r1310, %r1035;
	add.s32 	%r1312, %r1311, -1444681467;
	shf.l.wrap.b32 	%r1313, %r1312, %r1312, 5;
	add.s32 	%r1051, %r1313, %r1047;
	// begin inline asm
	lop3.b32 %r1040, %r1051, %r1047, %r1043, 228;
	// end inline asm
	add.s32 	%r1314, %r1192, %r1040;
	add.s32 	%r1315, %r1314, %r1039;
	add.s32 	%r1316, %r1315, -51403784;
	shf.l.wrap.b32 	%r1317, %r1316, %r1316, 9;
	add.s32 	%r1055, %r1317, %r1051;
	// begin inline asm
	lop3.b32 %r1044, %r1055, %r1051, %r1047, 228;
	// end inline asm
	add.s32 	%r1318, %r1217, %r1044;
	add.s32 	%r1319, %r1318, %r1043;
	add.s32 	%r1320, %r1319, 1735328473;
	shf.l.wrap.b32 	%r1321, %r1320, %r1320, 14;
	add.s32 	%r1059, %r1321, %r1055;
	// begin inline asm
	lop3.b32 %r1048, %r1059, %r1055, %r1051, 228;
	// end inline asm
	add.s32 	%r1322, %r1242, %r1048;
	add.s32 	%r1323, %r1322, %r1047;
	add.s32 	%r1324, %r1323, -1926607734;
	shf.l.wrap.b32 	%r1325, %r1324, %r1324, 20;
	add.s32 	%r1063, %r1325, %r1059;
	// begin inline asm
	lop3.b32 %r1052, %r1063, %r1059, %r1055, 150;
	// end inline asm
	add.s32 	%r1326, %r1207, %r1052;
	add.s32 	%r1327, %r1326, %r1051;
	add.s32 	%r1328, %r1327, -378558;
	shf.l.wrap.b32 	%r1329, %r1328, %r1328, 4;
	add.s32 	%r1067, %r1329, %r1063;
	// begin inline asm
	lop3.b32 %r1056, %r1067, %r1063, %r1059, 150;
	// end inline asm
	add.s32 	%r1330, %r1222, %r1056;
	add.s32 	%r1331, %r1330, %r1055;
	add.s32 	%r1332, %r1331, -2022574463;
	shf.l.wrap.b32 	%r1333, %r1332, %r1332, 11;
	add.s32 	%r1071, %r1333, %r1067;
	// begin inline asm
	lop3.b32 %r1060, %r1071, %r1067, %r1063, 150;
	// end inline asm
	add.s32 	%r1334, %r1237, %r1060;
	add.s32 	%r1335, %r1334, %r1059;
	add.s32 	%r1336, %r1335, 1839030562;
	shf.l.wrap.b32 	%r1337, %r1336, %r1336, 16;
	add.s32 	%r1075, %r1337, %r1071;
	// begin inline asm
	lop3.b32 %r1064, %r1075, %r1071, %r1067, 150;
	// end inline asm
	add.s32 	%r1338, %r1252, %r1064;
	add.s32 	%r1339, %r1338, %r1063;
	add.s32 	%r1340, %r1339, -35309556;
	shf.l.wrap.b32 	%r1341, %r1340, %r1340, 23;
	add.s32 	%r1079, %r1341, %r1075;
	// begin inline asm
	lop3.b32 %r1068, %r1079, %r1075, %r1071, 150;
	// end inline asm
	add.s32 	%r1342, %r1187, %r1068;
	add.s32 	%r1343, %r1342, %r1067;
	add.s32 	%r1344, %r1343, -1530992060;
	shf.l.wrap.b32 	%r1345, %r1344, %r1344, 4;
	add.s32 	%r1083, %r1345, %r1079;
	// begin inline asm
	lop3.b32 %r1072, %r1083, %r1079, %r1075, 150;
	// end inline asm
	add.s32 	%r1346, %r1202, %r1072;
	add.s32 	%r1347, %r1346, %r1071;
	add.s32 	%r1348, %r1347, 1272893353;
	shf.l.wrap.b32 	%r1349, %r1348, %r1348, 11;
	add.s32 	%r1087, %r1349, %r1083;
	// begin inline asm
	lop3.b32 %r1076, %r1087, %r1083, %r1079, 150;
	// end inline asm
	add.s32 	%r1350, %r1217, %r1076;
	add.s32 	%r1351, %r1350, %r1075;
	add.s32 	%r1352, %r1351, -155497632;
	shf.l.wrap.b32 	%r1353, %r1352, %r1352, 16;
	add.s32 	%r1091, %r1353, %r1087;
	// begin inline asm
	lop3.b32 %r1080, %r1091, %r1087, %r1083, 150;
	// end inline asm
	add.s32 	%r1354, %r1232, %r1080;
	add.s32 	%r1355, %r1354, %r1079;
	add.s32 	%r1356, %r1355, -1094730640;
	shf.l.wrap.b32 	%r1357, %r1356, %r1356, 23;
	add.s32 	%r1095, %r1357, %r1091;
	// begin inline asm
	lop3.b32 %r1084, %r1095, %r1091, %r1087, 150;
	// end inline asm
	add.s32 	%r1358, %r1247, %r1084;
	add.s32 	%r1359, %r1358, %r1083;
	add.s32 	%r1360, %r1359, 681279174;
	shf.l.wrap.b32 	%r1361, %r1360, %r1360, 4;
	add.s32 	%r1099, %r1361, %r1095;
	// begin inline asm
	lop3.b32 %r1088, %r1099, %r1095, %r1091, 150;
	// end inline asm
	add.s32 	%r1362, %r1181, %r1088;
	add.s32 	%r1363, %r1362, %r1087;
	add.s32 	%r1364, %r1363, -358537222;
	shf.l.wrap.b32 	%r1365, %r1364, %r1364, 11;
	add.s32 	%r1103, %r1365, %r1099;
	// begin inline asm
	lop3.b32 %r1092, %r1103, %r1099, %r1095, 150;
	// end inline asm
	add.s32 	%r1366, %r1197, %r1092;
	add.s32 	%r1367, %r1366, %r1091;
	add.s32 	%r1368, %r1367, -722521979;
	shf.l.wrap.b32 	%r1369, %r1368, %r1368, 16;
	add.s32 	%r1107, %r1369, %r1103;
	// begin inline asm
	lop3.b32 %r1096, %r1107, %r1103, %r1099, 150;
	// end inline asm
	add.s32 	%r1370, %r1212, %r1096;
	add.s32 	%r1371, %r1370, %r1095;
	add.s32 	%r1372, %r1371, 76029189;
	shf.l.wrap.b32 	%r1373, %r1372, %r1372, 23;
	add.s32 	%r1111, %r1373, %r1107;
	// begin inline asm
	lop3.b32 %r1100, %r1111, %r1107, %r1103, 150;
	// end inline asm
	add.s32 	%r1374, %r1227, %r1100;
	add.s32 	%r1375, %r1374, %r1099;
	add.s32 	%r1376, %r1375, -640364487;
	shf.l.wrap.b32 	%r1377, %r1376, %r1376, 4;
	add.s32 	%r1115, %r1377, %r1111;
	// begin inline asm
	lop3.b32 %r1104, %r1115, %r1111, %r1107, 150;
	// end inline asm
	add.s32 	%r1378, %r1242, %r1104;
	add.s32 	%r1379, %r1378, %r1103;
	add.s32 	%r1380, %r1379, -421815835;
	shf.l.wrap.b32 	%r1381, %r1380, %r1380, 11;
	add.s32 	%r1119, %r1381, %r1115;
	// begin inline asm
	lop3.b32 %r1108, %r1119, %r1115, %r1111, 150;
	// end inline asm
	add.s32 	%r1382, %r1257, %r1108;
	add.s32 	%r1383, %r1382, %r1107;
	add.s32 	%r1384, %r1383, 530742520;
	shf.l.wrap.b32 	%r1385, %r1384, %r1384, 16;
	add.s32 	%r1123, %r1385, %r1119;
	// begin inline asm
	lop3.b32 %r1112, %r1123, %r1119, %r1115, 150;
	// end inline asm
	add.s32 	%r1386, %r1192, %r1112;
	add.s32 	%r1387, %r1386, %r1111;
	add.s32 	%r1388, %r1387, -995338651;
	shf.l.wrap.b32 	%r1389, %r1388, %r1388, 23;
	add.s32 	%r1127, %r1389, %r1123;
	// begin inline asm
	lop3.b32 %r1116, %r1127, %r1123, %r1119, 57;
	// end inline asm
	add.s32 	%r1390, %r1181, %r1116;
	add.s32 	%r1391, %r1390, %r1115;
	add.s32 	%r1392, %r1391, -198630844;
	shf.l.wrap.b32 	%r1393, %r1392, %r1392, 6;
	add.s32 	%r1131, %r1393, %r1127;
	// begin inline asm
	lop3.b32 %r1120, %r1131, %r1127, %r1123, 57;
	// end inline asm
	add.s32 	%r1394, %r1217, %r1120;
	add.s32 	%r1395, %r1394, %r1119;
	add.s32 	%r1396, %r1395, 1126891415;
	shf.l.wrap.b32 	%r1397, %r1396, %r1396, 10;
	add.s32 	%r1135, %r1397, %r1131;
	// begin inline asm
	lop3.b32 %r1124, %r1135, %r1131, %r1127, 57;
	// end inline asm
	add.s32 	%r1398, %r1252, %r1124;
	add.s32 	%r1399, %r1398, %r1123;
	add.s32 	%r1400, %r1399, -1416354905;
	shf.l.wrap.b32 	%r1401, %r1400, %r1400, 15;
	add.s32 	%r1139, %r1401, %r1135;
	// begin inline asm
	lop3.b32 %r1128, %r1139, %r1135, %r1131, 57;
	// end inline asm
	add.s32 	%r1402, %r1207, %r1128;
	add.s32 	%r1403, %r1402, %r1127;
	add.s32 	%r1404, %r1403, -57434055;
	shf.l.wrap.b32 	%r1405, %r1404, %r1404, 21;
	add.s32 	%r1143, %r1405, %r1139;
	// begin inline asm
	lop3.b32 %r1132, %r1143, %r1139, %r1135, 57;
	// end inline asm
	add.s32 	%r1406, %r1242, %r1132;
	add.s32 	%r1407, %r1406, %r1131;
	add.s32 	%r1408, %r1407, 1700485571;
	shf.l.wrap.b32 	%r1409, %r1408, %r1408, 6;
	add.s32 	%r1147, %r1409, %r1143;
	// begin inline asm
	lop3.b32 %r1136, %r1147, %r1143, %r1139, 57;
	// end inline asm
	add.s32 	%r1410, %r1197, %r1136;
	add.s32 	%r1411, %r1410, %r1135;
	add.s32 	%r1412, %r1411, -1894986606;
	shf.l.wrap.b32 	%r1413, %r1412, %r1412, 10;
	add.s32 	%r1151, %r1413, %r1147;
	// begin inline asm
	lop3.b32 %r1140, %r1151, %r1147, %r1143, 57;
	// end inline asm
	add.s32 	%r1414, %r1232, %r1140;
	add.s32 	%r1415, %r1414, %r1139;
	add.s32 	%r1416, %r1415, -1051523;
	shf.l.wrap.b32 	%r1417, %r1416, %r1416, 15;
	add.s32 	%r1155, %r1417, %r1151;
	// begin inline asm
	lop3.b32 %r1144, %r1155, %r1151, %r1147, 57;
	// end inline asm
	add.s32 	%r1418, %r1187, %r1144;
	add.s32 	%r1419, %r1418, %r1143;
	add.s32 	%r1420, %r1419, -2054922799;
	shf.l.wrap.b32 	%r1421, %r1420, %r1420, 21;
	add.s32 	%r1159, %r1421, %r1155;
	// begin inline asm
	lop3.b32 %r1148, %r1159, %r1155, %r1151, 57;
	// end inline asm
	add.s32 	%r1422, %r1222, %r1148;
	add.s32 	%r1423, %r1422, %r1147;
	add.s32 	%r1424, %r1423, 1873313359;
	shf.l.wrap.b32 	%r1425, %r1424, %r1424, 6;
	add.s32 	%r1163, %r1425, %r1159;
	// begin inline asm
	lop3.b32 %r1152, %r1163, %r1159, %r1155, 57;
	// end inline asm
	add.s32 	%r1426, %r1257, %r1152;
	add.s32 	%r1427, %r1426, %r1151;
	add.s32 	%r1428, %r1427, -30611744;
	shf.l.wrap.b32 	%r1429, %r1428, %r1428, 10;
	add.s32 	%r1167, %r1429, %r1163;
	// begin inline asm
	lop3.b32 %r1156, %r1167, %r1163, %r1159, 57;
	// end inline asm
	add.s32 	%r1430, %r1212, %r1156;
	add.s32 	%r1431, %r1430, %r1155;
	add.s32 	%r1432, %r1431, -1560198380;
	shf.l.wrap.b32 	%r1433, %r1432, %r1432, 15;
	add.s32 	%r1171, %r1433, %r1167;
	// begin inline asm
	lop3.b32 %r1160, %r1171, %r1167, %r1163, 57;
	// end inline asm
	add.s32 	%r1434, %r1247, %r1160;
	add.s32 	%r1435, %r1434, %r1159;
	add.s32 	%r1436, %r1435, 1309151649;
	shf.l.wrap.b32 	%r1437, %r1436, %r1436, 21;
	add.s32 	%r1175, %r1437, %r1171;
	// begin inline asm
	lop3.b32 %r1164, %r1175, %r1171, %r1167, 57;
	// end inline asm
	add.s32 	%r1438, %r1202, %r1164;
	add.s32 	%r1439, %r1438, %r1163;
	add.s32 	%r1440, %r1439, -145523070;
	shf.l.wrap.b32 	%r1441, %r1440, %r1440, 6;
	add.s32 	%r1179, %r1441, %r1175;
	// begin inline asm
	lop3.b32 %r1168, %r1179, %r1175, %r1171, 57;
	// end inline asm
	add.s32 	%r1442, %r1237, %r1168;
	add.s32 	%r1443, %r1442, %r1167;
	add.s32 	%r1444, %r1443, -1120210379;
	shf.l.wrap.b32 	%r1445, %r1444, %r1444, 10;
	add.s32 	%r1178, %r1445, %r1179;
	// begin inline asm
	lop3.b32 %r1172, %r1178, %r1179, %r1175, 57;
	// end inline asm
	add.s32 	%r1446, %r1192, %r1172;
	add.s32 	%r1447, %r1446, %r1171;
	add.s32 	%r1448, %r1447, 718787259;
	shf.l.wrap.b32 	%r1449, %r1448, %r1448, 15;
	add.s32 	%r1177, %r1449, %r1178;
	// begin inline asm
	lop3.b32 %r1176, %r1177, %r1178, %r1179, 57;
	// end inline asm
	add.s32 	%r1450, %r1227, %r1176;
	add.s32 	%r1451, %r1450, %r1175;
	add.s32 	%r1452, %r1451, -343485551;
	shf.l.wrap.b32 	%r1453, %r1452, %r1452, 21;
	add.s32 	%r1454, %r1179, %r1182;
	st.local.u32 	[%rd4+4], %r1454;
	add.s32 	%r1455, %r1177, %r925;
	add.s32 	%r1456, %r1455, %r1453;
	st.local.u32 	[%rd4+8], %r1456;
	add.s32 	%r1457, %r926, %r1177;
	st.local.u32 	[%rd4+12], %r1457;
	add.s32 	%r1458, %r927, %r1178;
	st.local.u32 	[%rd4+16], %r1458;
	cvt.u64.u32 	%rd130, %r82;
	add.s64 	%rd185, %rd185, %rd130;
	add.u64 	%rd131, %SP, 16;
	add.s64 	%rd183, %rd131, %rd130;
	sub.s32 	%r3297, %r3297, %r82;
	mov.u32 	%r3278, 0;

$L__BB1_30:
	setp.lt.u32 	%p26, %r3297, 64;
	@%p26 bra 	$L__BB1_35;

$L__BB1_31:
	and.b64  	%rd132, %rd183, 3;
	setp.eq.s64 	%p27, %rd132, 0;
	@%p27 bra 	$L__BB1_33;

	ld.local.u8 	%r1459, [%rd185];
	ld.local.u8 	%r1460, [%rd185+1];
	prmt.b32 	%r1461, %r1460, %r1459, 30212;
	ld.local.u8 	%r1462, [%rd185+2];
	prmt.b32 	%r1463, %r1462, %r1461, 28756;
	ld.local.u8 	%r1464, [%rd185+3];
	prmt.b32 	%r3296, %r1464, %r1463, 1620;
	ld.local.u8 	%r1465, [%rd185+4];
	ld.local.u8 	%r1466, [%rd185+5];
	prmt.b32 	%r1467, %r1466, %r1465, 30212;
	ld.local.u8 	%r1468, [%rd185+6];
	prmt.b32 	%r1469, %r1468, %r1467, 28756;
	ld.local.u8 	%r1470, [%rd185+7];
	prmt.b32 	%r3295, %r1470, %r1469, 1620;
	ld.local.u8 	%r1471, [%rd185+8];
	ld.local.u8 	%r1472, [%rd185+9];
	prmt.b32 	%r1473, %r1472, %r1471, 30212;
	ld.local.u8 	%r1474, [%rd185+10];
	prmt.b32 	%r1475, %r1474, %r1473, 28756;
	ld.local.u8 	%r1476, [%rd185+11];
	prmt.b32 	%r3294, %r1476, %r1475, 1620;
	ld.local.u8 	%r1477, [%rd185+12];
	ld.local.u8 	%r1478, [%rd185+13];
	prmt.b32 	%r1479, %r1478, %r1477, 30212;
	ld.local.u8 	%r1480, [%rd185+14];
	prmt.b32 	%r1481, %r1480, %r1479, 28756;
	ld.local.u8 	%r1482, [%rd185+15];
	prmt.b32 	%r3293, %r1482, %r1481, 1620;
	ld.local.u8 	%r1483, [%rd185+16];
	ld.local.u8 	%r1484, [%rd185+17];
	prmt.b32 	%r1485, %r1484, %r1483, 30212;
	ld.local.u8 	%r1486, [%rd185+18];
	prmt.b32 	%r1487, %r1486, %r1485, 28756;
	ld.local.u8 	%r1488, [%rd185+19];
	prmt.b32 	%r3292, %r1488, %r1487, 1620;
	ld.local.u8 	%r1489, [%rd185+20];
	ld.local.u8 	%r1490, [%rd185+21];
	prmt.b32 	%r1491, %r1490, %r1489, 30212;
	ld.local.u8 	%r1492, [%rd185+22];
	prmt.b32 	%r1493, %r1492, %r1491, 28756;
	ld.local.u8 	%r1494, [%rd185+23];
	prmt.b32 	%r3291, %r1494, %r1493, 1620;
	ld.local.u8 	%r1495, [%rd185+24];
	ld.local.u8 	%r1496, [%rd185+25];
	prmt.b32 	%r1497, %r1496, %r1495, 30212;
	ld.local.u8 	%r1498, [%rd185+26];
	prmt.b32 	%r1499, %r1498, %r1497, 28756;
	ld.local.u8 	%r1500, [%rd185+27];
	prmt.b32 	%r3290, %r1500, %r1499, 1620;
	ld.local.u8 	%r1501, [%rd185+28];
	ld.local.u8 	%r1502, [%rd185+29];
	prmt.b32 	%r1503, %r1502, %r1501, 30212;
	ld.local.u8 	%r1504, [%rd185+30];
	prmt.b32 	%r1505, %r1504, %r1503, 28756;
	ld.local.u8 	%r1506, [%rd185+31];
	prmt.b32 	%r3289, %r1506, %r1505, 1620;
	ld.local.u8 	%r1507, [%rd185+32];
	ld.local.u8 	%r1508, [%rd185+33];
	prmt.b32 	%r1509, %r1508, %r1507, 30212;
	ld.local.u8 	%r1510, [%rd185+34];
	prmt.b32 	%r1511, %r1510, %r1509, 28756;
	ld.local.u8 	%r1512, [%rd185+35];
	prmt.b32 	%r3288, %r1512, %r1511, 1620;
	ld.local.u8 	%r1513, [%rd185+36];
	ld.local.u8 	%r1514, [%rd185+37];
	prmt.b32 	%r1515, %r1514, %r1513, 30212;
	ld.local.u8 	%r1516, [%rd185+38];
	prmt.b32 	%r1517, %r1516, %r1515, 28756;
	ld.local.u8 	%r1518, [%rd185+39];
	prmt.b32 	%r3287, %r1518, %r1517, 1620;
	ld.local.u8 	%r1519, [%rd185+40];
	ld.local.u8 	%r1520, [%rd185+41];
	prmt.b32 	%r1521, %r1520, %r1519, 30212;
	ld.local.u8 	%r1522, [%rd185+42];
	prmt.b32 	%r1523, %r1522, %r1521, 28756;
	ld.local.u8 	%r1524, [%rd185+43];
	prmt.b32 	%r3286, %r1524, %r1523, 1620;
	ld.local.u8 	%r1525, [%rd185+44];
	ld.local.u8 	%r1526, [%rd185+45];
	prmt.b32 	%r1527, %r1526, %r1525, 30212;
	ld.local.u8 	%r1528, [%rd185+46];
	prmt.b32 	%r1529, %r1528, %r1527, 28756;
	ld.local.u8 	%r1530, [%rd185+47];
	prmt.b32 	%r3285, %r1530, %r1529, 1620;
	ld.local.u8 	%r1531, [%rd185+48];
	ld.local.u8 	%r1532, [%rd185+49];
	prmt.b32 	%r1533, %r1532, %r1531, 30212;
	ld.local.u8 	%r1534, [%rd185+50];
	prmt.b32 	%r1535, %r1534, %r1533, 28756;
	ld.local.u8 	%r1536, [%rd185+51];
	prmt.b32 	%r3284, %r1536, %r1535, 1620;
	ld.local.u8 	%r1537, [%rd185+52];
	ld.local.u8 	%r1538, [%rd185+53];
	prmt.b32 	%r1539, %r1538, %r1537, 30212;
	ld.local.u8 	%r1540, [%rd185+54];
	prmt.b32 	%r1541, %r1540, %r1539, 28756;
	ld.local.u8 	%r1542, [%rd185+55];
	prmt.b32 	%r3283, %r1542, %r1541, 1620;
	ld.local.u8 	%r1543, [%rd185+56];
	ld.local.u8 	%r1544, [%rd185+57];
	prmt.b32 	%r1545, %r1544, %r1543, 30212;
	ld.local.u8 	%r1546, [%rd185+58];
	prmt.b32 	%r1547, %r1546, %r1545, 28756;
	ld.local.u8 	%r1548, [%rd185+59];
	prmt.b32 	%r3282, %r1548, %r1547, 1620;
	ld.local.u8 	%r1549, [%rd185+60];
	ld.local.u8 	%r1550, [%rd185+61];
	prmt.b32 	%r1551, %r1550, %r1549, 30212;
	ld.local.u8 	%r1552, [%rd185+62];
	prmt.b32 	%r1553, %r1552, %r1551, 28756;
	ld.local.u8 	%r1554, [%rd185+63];
	prmt.b32 	%r3281, %r1554, %r1553, 1620;
	bra.uni 	$L__BB1_34;

$L__BB1_33:
	ld.local.u32 	%r3296, [%rd185];
	ld.local.u32 	%r3295, [%rd185+4];
	ld.local.u32 	%r3294, [%rd185+8];
	ld.local.u32 	%r3293, [%rd185+12];
	ld.local.u32 	%r3292, [%rd185+16];
	ld.local.u32 	%r3291, [%rd185+20];
	ld.local.u32 	%r3290, [%rd185+24];
	ld.local.u32 	%r3289, [%rd185+28];
	ld.local.u32 	%r3288, [%rd185+32];
	ld.local.u32 	%r3287, [%rd185+36];
	ld.local.u32 	%r3286, [%rd185+40];
	ld.local.u32 	%r3285, [%rd185+44];
	ld.local.u32 	%r3284, [%rd185+48];
	ld.local.u32 	%r3283, [%rd185+52];
	ld.local.u32 	%r3282, [%rd185+56];
	ld.local.u32 	%r3281, [%rd185+60];

$L__BB1_34:
	ld.local.u32 	%r1558, [%rd4+16];
	ld.local.u32 	%r1557, [%rd4+12];
	ld.local.u32 	%r1556, [%rd4+8];
	// begin inline asm
	lop3.b32 %r1555, %r1556, %r1557, %r1558, 202;
	// end inline asm
	ld.local.u32 	%r1811, [%rd4+4];
	add.s32 	%r1812, %r3296, %r1811;
	add.s32 	%r1813, %r1812, %r1555;
	add.s32 	%r1814, %r1813, -680876936;
	shf.l.wrap.b32 	%r1815, %r1814, %r1814, 7;
	add.s32 	%r1570, %r1815, %r1556;
	// begin inline asm
	lop3.b32 %r1559, %r1570, %r1556, %r1557, 202;
	// end inline asm
	add.s32 	%r1816, %r3295, %r1558;
	add.s32 	%r1817, %r1816, %r1559;
	add.s32 	%r1818, %r1817, -389564586;
	shf.l.wrap.b32 	%r1819, %r1818, %r1818, 12;
	add.s32 	%r1574, %r1819, %r1570;
	// begin inline asm
	lop3.b32 %r1563, %r1574, %r1570, %r1556, 202;
	// end inline asm
	add.s32 	%r1820, %r3294, %r1557;
	add.s32 	%r1821, %r1820, %r1563;
	add.s32 	%r1822, %r1821, 606105819;
	shf.l.wrap.b32 	%r1823, %r1822, %r1822, 17;
	add.s32 	%r1578, %r1823, %r1574;
	// begin inline asm
	lop3.b32 %r1567, %r1578, %r1574, %r1570, 202;
	// end inline asm
	add.s32 	%r1824, %r3293, %r1556;
	add.s32 	%r1825, %r1824, %r1567;
	add.s32 	%r1826, %r1825, -1044525330;
	shf.l.wrap.b32 	%r1827, %r1826, %r1826, 22;
	add.s32 	%r1582, %r1827, %r1578;
	// begin inline asm
	lop3.b32 %r1571, %r1582, %r1578, %r1574, 202;
	// end inline asm
	add.s32 	%r1828, %r3292, %r1571;
	add.s32 	%r1829, %r1828, %r1570;
	add.s32 	%r1830, %r1829, -176418897;
	shf.l.wrap.b32 	%r1831, %r1830, %r1830, 7;
	add.s32 	%r1586, %r1831, %r1582;
	// begin inline asm
	lop3.b32 %r1575, %r1586, %r1582, %r1578, 202;
	// end inline asm
	add.s32 	%r1832, %r3291, %r1575;
	add.s32 	%r1833, %r1832, %r1574;
	add.s32 	%r1834, %r1833, 1200080426;
	shf.l.wrap.b32 	%r1835, %r1834, %r1834, 12;
	add.s32 	%r1590, %r1835, %r1586;
	// begin inline asm
	lop3.b32 %r1579, %r1590, %r1586, %r1582, 202;
	// end inline asm
	add.s32 	%r1836, %r3290, %r1579;
	add.s32 	%r1837, %r1836, %r1578;
	add.s32 	%r1838, %r1837, -1473231341;
	shf.l.wrap.b32 	%r1839, %r1838, %r1838, 17;
	add.s32 	%r1594, %r1839, %r1590;
	// begin inline asm
	lop3.b32 %r1583, %r1594, %r1590, %r1586, 202;
	// end inline asm
	add.s32 	%r1840, %r3289, %r1583;
	add.s32 	%r1841, %r1840, %r1582;
	add.s32 	%r1842, %r1841, -45705983;
	shf.l.wrap.b32 	%r1843, %r1842, %r1842, 22;
	add.s32 	%r1598, %r1843, %r1594;
	// begin inline asm
	lop3.b32 %r1587, %r1598, %r1594, %r1590, 202;
	// end inline asm
	add.s32 	%r1844, %r3288, %r1587;
	add.s32 	%r1845, %r1844, %r1586;
	add.s32 	%r1846, %r1845, 1770035416;
	shf.l.wrap.b32 	%r1847, %r1846, %r1846, 7;
	add.s32 	%r1602, %r1847, %r1598;
	// begin inline asm
	lop3.b32 %r1591, %r1602, %r1598, %r1594, 202;
	// end inline asm
	add.s32 	%r1848, %r3287, %r1591;
	add.s32 	%r1849, %r1848, %r1590;
	add.s32 	%r1850, %r1849, -1958414417;
	shf.l.wrap.b32 	%r1851, %r1850, %r1850, 12;
	add.s32 	%r1606, %r1851, %r1602;
	// begin inline asm
	lop3.b32 %r1595, %r1606, %r1602, %r1598, 202;
	// end inline asm
	add.s32 	%r1852, %r3286, %r1595;
	add.s32 	%r1853, %r1852, %r1594;
	add.s32 	%r1854, %r1853, -42063;
	shf.l.wrap.b32 	%r1855, %r1854, %r1854, 17;
	add.s32 	%r1610, %r1855, %r1606;
	// begin inline asm
	lop3.b32 %r1599, %r1610, %r1606, %r1602, 202;
	// end inline asm
	add.s32 	%r1856, %r3285, %r1599;
	add.s32 	%r1857, %r1856, %r1598;
	add.s32 	%r1858, %r1857, -1990404162;
	shf.l.wrap.b32 	%r1859, %r1858, %r1858, 22;
	add.s32 	%r1614, %r1859, %r1610;
	// begin inline asm
	lop3.b32 %r1603, %r1614, %r1610, %r1606, 202;
	// end inline asm
	add.s32 	%r1860, %r3284, %r1603;
	add.s32 	%r1861, %r1860, %r1602;
	add.s32 	%r1862, %r1861, 1804603682;
	shf.l.wrap.b32 	%r1863, %r1862, %r1862, 7;
	add.s32 	%r1618, %r1863, %r1614;
	// begin inline asm
	lop3.b32 %r1607, %r1618, %r1614, %r1610, 202;
	// end inline asm
	add.s32 	%r1864, %r3283, %r1607;
	add.s32 	%r1865, %r1864, %r1606;
	add.s32 	%r1866, %r1865, -40341101;
	shf.l.wrap.b32 	%r1867, %r1866, %r1866, 12;
	add.s32 	%r1622, %r1867, %r1618;
	// begin inline asm
	lop3.b32 %r1611, %r1622, %r1618, %r1614, 202;
	// end inline asm
	add.s32 	%r1868, %r3282, %r1611;
	add.s32 	%r1869, %r1868, %r1610;
	add.s32 	%r1870, %r1869, -1502002290;
	shf.l.wrap.b32 	%r1871, %r1870, %r1870, 17;
	add.s32 	%r1626, %r1871, %r1622;
	// begin inline asm
	lop3.b32 %r1615, %r1626, %r1622, %r1618, 202;
	// end inline asm
	add.s32 	%r1872, %r3281, %r1615;
	add.s32 	%r1873, %r1872, %r1614;
	add.s32 	%r1874, %r1873, 1236535329;
	shf.l.wrap.b32 	%r1875, %r1874, %r1874, 22;
	add.s32 	%r1630, %r1875, %r1626;
	// begin inline asm
	lop3.b32 %r1619, %r1630, %r1626, %r1622, 228;
	// end inline asm
	add.s32 	%r1876, %r3295, %r1619;
	add.s32 	%r1877, %r1876, %r1618;
	add.s32 	%r1878, %r1877, -165796510;
	shf.l.wrap.b32 	%r1879, %r1878, %r1878, 5;
	add.s32 	%r1634, %r1879, %r1630;
	// begin inline asm
	lop3.b32 %r1623, %r1634, %r1630, %r1626, 228;
	// end inline asm
	add.s32 	%r1880, %r3290, %r1623;
	add.s32 	%r1881, %r1880, %r1622;
	add.s32 	%r1882, %r1881, -1069501632;
	shf.l.wrap.b32 	%r1883, %r1882, %r1882, 9;
	add.s32 	%r1638, %r1883, %r1634;
	// begin inline asm
	lop3.b32 %r1627, %r1638, %r1634, %r1630, 228;
	// end inline asm
	add.s32 	%r1884, %r3285, %r1627;
	add.s32 	%r1885, %r1884, %r1626;
	add.s32 	%r1886, %r1885, 643717713;
	shf.l.wrap.b32 	%r1887, %r1886, %r1886, 14;
	add.s32 	%r1642, %r1887, %r1638;
	// begin inline asm
	lop3.b32 %r1631, %r1642, %r1638, %r1634, 228;
	// end inline asm
	add.s32 	%r1888, %r3296, %r1631;
	add.s32 	%r1889, %r1888, %r1630;
	add.s32 	%r1890, %r1889, -373897302;
	shf.l.wrap.b32 	%r1891, %r1890, %r1890, 20;
	add.s32 	%r1646, %r1891, %r1642;
	// begin inline asm
	lop3.b32 %r1635, %r1646, %r1642, %r1638, 228;
	// end inline asm
	add.s32 	%r1892, %r3291, %r1635;
	add.s32 	%r1893, %r1892, %r1634;
	add.s32 	%r1894, %r1893, -701558691;
	shf.l.wrap.b32 	%r1895, %r1894, %r1894, 5;
	add.s32 	%r1650, %r1895, %r1646;
	// begin inline asm
	lop3.b32 %r1639, %r1650, %r1646, %r1642, 228;
	// end inline asm
	add.s32 	%r1896, %r3286, %r1639;
	add.s32 	%r1897, %r1896, %r1638;
	add.s32 	%r1898, %r1897, 38016083;
	shf.l.wrap.b32 	%r1899, %r1898, %r1898, 9;
	add.s32 	%r1654, %r1899, %r1650;
	// begin inline asm
	lop3.b32 %r1643, %r1654, %r1650, %r1646, 228;
	// end inline asm
	add.s32 	%r1900, %r3281, %r1643;
	add.s32 	%r1901, %r1900, %r1642;
	add.s32 	%r1902, %r1901, -660478335;
	shf.l.wrap.b32 	%r1903, %r1902, %r1902, 14;
	add.s32 	%r1658, %r1903, %r1654;
	// begin inline asm
	lop3.b32 %r1647, %r1658, %r1654, %r1650, 228;
	// end inline asm
	add.s32 	%r1904, %r3292, %r1647;
	add.s32 	%r1905, %r1904, %r1646;
	add.s32 	%r1906, %r1905, -405537848;
	shf.l.wrap.b32 	%r1907, %r1906, %r1906, 20;
	add.s32 	%r1662, %r1907, %r1658;
	// begin inline asm
	lop3.b32 %r1651, %r1662, %r1658, %r1654, 228;
	// end inline asm
	add.s32 	%r1908, %r3287, %r1651;
	add.s32 	%r1909, %r1908, %r1650;
	add.s32 	%r1910, %r1909, 568446438;
	shf.l.wrap.b32 	%r1911, %r1910, %r1910, 5;
	add.s32 	%r1666, %r1911, %r1662;
	// begin inline asm
	lop3.b32 %r1655, %r1666, %r1662, %r1658, 228;
	// end inline asm
	add.s32 	%r1912, %r3282, %r1655;
	add.s32 	%r1913, %r1912, %r1654;
	add.s32 	%r1914, %r1913, -1019803690;
	shf.l.wrap.b32 	%r1915, %r1914, %r1914, 9;
	add.s32 	%r1670, %r1915, %r1666;
	// begin inline asm
	lop3.b32 %r1659, %r1670, %r1666, %r1662, 228;
	// end inline asm
	add.s32 	%r1916, %r3293, %r1659;
	add.s32 	%r1917, %r1916, %r1658;
	add.s32 	%r1918, %r1917, -187363961;
	shf.l.wrap.b32 	%r1919, %r1918, %r1918, 14;
	add.s32 	%r1674, %r1919, %r1670;
	// begin inline asm
	lop3.b32 %r1663, %r1674, %r1670, %r1666, 228;
	// end inline asm
	add.s32 	%r1920, %r3288, %r1663;
	add.s32 	%r1921, %r1920, %r1662;
	add.s32 	%r1922, %r1921, 1163531501;
	shf.l.wrap.b32 	%r1923, %r1922, %r1922, 20;
	add.s32 	%r1678, %r1923, %r1674;
	// begin inline asm
	lop3.b32 %r1667, %r1678, %r1674, %r1670, 228;
	// end inline asm
	add.s32 	%r1924, %r3283, %r1667;
	add.s32 	%r1925, %r1924, %r1666;
	add.s32 	%r1926, %r1925, -1444681467;
	shf.l.wrap.b32 	%r1927, %r1926, %r1926, 5;
	add.s32 	%r1682, %r1927, %r1678;
	// begin inline asm
	lop3.b32 %r1671, %r1682, %r1678, %r1674, 228;
	// end inline asm
	add.s32 	%r1928, %r3294, %r1671;
	add.s32 	%r1929, %r1928, %r1670;
	add.s32 	%r1930, %r1929, -51403784;
	shf.l.wrap.b32 	%r1931, %r1930, %r1930, 9;
	add.s32 	%r1686, %r1931, %r1682;
	// begin inline asm
	lop3.b32 %r1675, %r1686, %r1682, %r1678, 228;
	// end inline asm
	add.s32 	%r1932, %r3289, %r1675;
	add.s32 	%r1933, %r1932, %r1674;
	add.s32 	%r1934, %r1933, 1735328473;
	shf.l.wrap.b32 	%r1935, %r1934, %r1934, 14;
	add.s32 	%r1690, %r1935, %r1686;
	// begin inline asm
	lop3.b32 %r1679, %r1690, %r1686, %r1682, 228;
	// end inline asm
	add.s32 	%r1936, %r3284, %r1679;
	add.s32 	%r1937, %r1936, %r1678;
	add.s32 	%r1938, %r1937, -1926607734;
	shf.l.wrap.b32 	%r1939, %r1938, %r1938, 20;
	add.s32 	%r1694, %r1939, %r1690;
	// begin inline asm
	lop3.b32 %r1683, %r1694, %r1690, %r1686, 150;
	// end inline asm
	add.s32 	%r1940, %r3291, %r1683;
	add.s32 	%r1941, %r1940, %r1682;
	add.s32 	%r1942, %r1941, -378558;
	shf.l.wrap.b32 	%r1943, %r1942, %r1942, 4;
	add.s32 	%r1698, %r1943, %r1694;
	// begin inline asm
	lop3.b32 %r1687, %r1698, %r1694, %r1690, 150;
	// end inline asm
	add.s32 	%r1944, %r3288, %r1687;
	add.s32 	%r1945, %r1944, %r1686;
	add.s32 	%r1946, %r1945, -2022574463;
	shf.l.wrap.b32 	%r1947, %r1946, %r1946, 11;
	add.s32 	%r1702, %r1947, %r1698;
	// begin inline asm
	lop3.b32 %r1691, %r1702, %r1698, %r1694, 150;
	// end inline asm
	add.s32 	%r1948, %r3285, %r1691;
	add.s32 	%r1949, %r1948, %r1690;
	add.s32 	%r1950, %r1949, 1839030562;
	shf.l.wrap.b32 	%r1951, %r1950, %r1950, 16;
	add.s32 	%r1706, %r1951, %r1702;
	// begin inline asm
	lop3.b32 %r1695, %r1706, %r1702, %r1698, 150;
	// end inline asm
	add.s32 	%r1952, %r3282, %r1695;
	add.s32 	%r1953, %r1952, %r1694;
	add.s32 	%r1954, %r1953, -35309556;
	shf.l.wrap.b32 	%r1955, %r1954, %r1954, 23;
	add.s32 	%r1710, %r1955, %r1706;
	// begin inline asm
	lop3.b32 %r1699, %r1710, %r1706, %r1702, 150;
	// end inline asm
	add.s32 	%r1956, %r3295, %r1699;
	add.s32 	%r1957, %r1956, %r1698;
	add.s32 	%r1958, %r1957, -1530992060;
	shf.l.wrap.b32 	%r1959, %r1958, %r1958, 4;
	add.s32 	%r1714, %r1959, %r1710;
	// begin inline asm
	lop3.b32 %r1703, %r1714, %r1710, %r1706, 150;
	// end inline asm
	add.s32 	%r1960, %r3292, %r1703;
	add.s32 	%r1961, %r1960, %r1702;
	add.s32 	%r1962, %r1961, 1272893353;
	shf.l.wrap.b32 	%r1963, %r1962, %r1962, 11;
	add.s32 	%r1718, %r1963, %r1714;
	// begin inline asm
	lop3.b32 %r1707, %r1718, %r1714, %r1710, 150;
	// end inline asm
	add.s32 	%r1964, %r3289, %r1707;
	add.s32 	%r1965, %r1964, %r1706;
	add.s32 	%r1966, %r1965, -155497632;
	shf.l.wrap.b32 	%r1967, %r1966, %r1966, 16;
	add.s32 	%r1722, %r1967, %r1718;
	// begin inline asm
	lop3.b32 %r1711, %r1722, %r1718, %r1714, 150;
	// end inline asm
	add.s32 	%r1968, %r3286, %r1711;
	add.s32 	%r1969, %r1968, %r1710;
	add.s32 	%r1970, %r1969, -1094730640;
	shf.l.wrap.b32 	%r1971, %r1970, %r1970, 23;
	add.s32 	%r1726, %r1971, %r1722;
	// begin inline asm
	lop3.b32 %r1715, %r1726, %r1722, %r1718, 150;
	// end inline asm
	add.s32 	%r1972, %r3283, %r1715;
	add.s32 	%r1973, %r1972, %r1714;
	add.s32 	%r1974, %r1973, 681279174;
	shf.l.wrap.b32 	%r1975, %r1974, %r1974, 4;
	add.s32 	%r1730, %r1975, %r1726;
	// begin inline asm
	lop3.b32 %r1719, %r1730, %r1726, %r1722, 150;
	// end inline asm
	add.s32 	%r1976, %r3296, %r1719;
	add.s32 	%r1977, %r1976, %r1718;
	add.s32 	%r1978, %r1977, -358537222;
	shf.l.wrap.b32 	%r1979, %r1978, %r1978, 11;
	add.s32 	%r1734, %r1979, %r1730;
	// begin inline asm
	lop3.b32 %r1723, %r1734, %r1730, %r1726, 150;
	// end inline asm
	add.s32 	%r1980, %r3293, %r1723;
	add.s32 	%r1981, %r1980, %r1722;
	add.s32 	%r1982, %r1981, -722521979;
	shf.l.wrap.b32 	%r1983, %r1982, %r1982, 16;
	add.s32 	%r1738, %r1983, %r1734;
	// begin inline asm
	lop3.b32 %r1727, %r1738, %r1734, %r1730, 150;
	// end inline asm
	add.s32 	%r1984, %r3290, %r1727;
	add.s32 	%r1985, %r1984, %r1726;
	add.s32 	%r1986, %r1985, 76029189;
	shf.l.wrap.b32 	%r1987, %r1986, %r1986, 23;
	add.s32 	%r1742, %r1987, %r1738;
	// begin inline asm
	lop3.b32 %r1731, %r1742, %r1738, %r1734, 150;
	// end inline asm
	add.s32 	%r1988, %r3287, %r1731;
	add.s32 	%r1989, %r1988, %r1730;
	add.s32 	%r1990, %r1989, -640364487;
	shf.l.wrap.b32 	%r1991, %r1990, %r1990, 4;
	add.s32 	%r1746, %r1991, %r1742;
	// begin inline asm
	lop3.b32 %r1735, %r1746, %r1742, %r1738, 150;
	// end inline asm
	add.s32 	%r1992, %r3284, %r1735;
	add.s32 	%r1993, %r1992, %r1734;
	add.s32 	%r1994, %r1993, -421815835;
	shf.l.wrap.b32 	%r1995, %r1994, %r1994, 11;
	add.s32 	%r1750, %r1995, %r1746;
	// begin inline asm
	lop3.b32 %r1739, %r1750, %r1746, %r1742, 150;
	// end inline asm
	add.s32 	%r1996, %r3281, %r1739;
	add.s32 	%r1997, %r1996, %r1738;
	add.s32 	%r1998, %r1997, 530742520;
	shf.l.wrap.b32 	%r1999, %r1998, %r1998, 16;
	add.s32 	%r1754, %r1999, %r1750;
	// begin inline asm
	lop3.b32 %r1743, %r1754, %r1750, %r1746, 150;
	// end inline asm
	add.s32 	%r2000, %r3294, %r1743;
	add.s32 	%r2001, %r2000, %r1742;
	add.s32 	%r2002, %r2001, -995338651;
	shf.l.wrap.b32 	%r2003, %r2002, %r2002, 23;
	add.s32 	%r1758, %r2003, %r1754;
	// begin inline asm
	lop3.b32 %r1747, %r1758, %r1754, %r1750, 57;
	// end inline asm
	add.s32 	%r2004, %r3296, %r1747;
	add.s32 	%r2005, %r2004, %r1746;
	add.s32 	%r2006, %r2005, -198630844;
	shf.l.wrap.b32 	%r2007, %r2006, %r2006, 6;
	add.s32 	%r1762, %r2007, %r1758;
	// begin inline asm
	lop3.b32 %r1751, %r1762, %r1758, %r1754, 57;
	// end inline asm
	add.s32 	%r2008, %r3289, %r1751;
	add.s32 	%r2009, %r2008, %r1750;
	add.s32 	%r2010, %r2009, 1126891415;
	shf.l.wrap.b32 	%r2011, %r2010, %r2010, 10;
	add.s32 	%r1766, %r2011, %r1762;
	// begin inline asm
	lop3.b32 %r1755, %r1766, %r1762, %r1758, 57;
	// end inline asm
	add.s32 	%r2012, %r3282, %r1755;
	add.s32 	%r2013, %r2012, %r1754;
	add.s32 	%r2014, %r2013, -1416354905;
	shf.l.wrap.b32 	%r2015, %r2014, %r2014, 15;
	add.s32 	%r1770, %r2015, %r1766;
	// begin inline asm
	lop3.b32 %r1759, %r1770, %r1766, %r1762, 57;
	// end inline asm
	add.s32 	%r2016, %r3291, %r1759;
	add.s32 	%r2017, %r2016, %r1758;
	add.s32 	%r2018, %r2017, -57434055;
	shf.l.wrap.b32 	%r2019, %r2018, %r2018, 21;
	add.s32 	%r1774, %r2019, %r1770;
	// begin inline asm
	lop3.b32 %r1763, %r1774, %r1770, %r1766, 57;
	// end inline asm
	add.s32 	%r2020, %r3284, %r1763;
	add.s32 	%r2021, %r2020, %r1762;
	add.s32 	%r2022, %r2021, 1700485571;
	shf.l.wrap.b32 	%r2023, %r2022, %r2022, 6;
	add.s32 	%r1778, %r2023, %r1774;
	// begin inline asm
	lop3.b32 %r1767, %r1778, %r1774, %r1770, 57;
	// end inline asm
	add.s32 	%r2024, %r3293, %r1767;
	add.s32 	%r2025, %r2024, %r1766;
	add.s32 	%r2026, %r2025, -1894986606;
	shf.l.wrap.b32 	%r2027, %r2026, %r2026, 10;
	add.s32 	%r1782, %r2027, %r1778;
	// begin inline asm
	lop3.b32 %r1771, %r1782, %r1778, %r1774, 57;
	// end inline asm
	add.s32 	%r2028, %r3286, %r1771;
	add.s32 	%r2029, %r2028, %r1770;
	add.s32 	%r2030, %r2029, -1051523;
	shf.l.wrap.b32 	%r2031, %r2030, %r2030, 15;
	add.s32 	%r1786, %r2031, %r1782;
	// begin inline asm
	lop3.b32 %r1775, %r1786, %r1782, %r1778, 57;
	// end inline asm
	add.s32 	%r2032, %r3295, %r1775;
	add.s32 	%r2033, %r2032, %r1774;
	add.s32 	%r2034, %r2033, -2054922799;
	shf.l.wrap.b32 	%r2035, %r2034, %r2034, 21;
	add.s32 	%r1790, %r2035, %r1786;
	// begin inline asm
	lop3.b32 %r1779, %r1790, %r1786, %r1782, 57;
	// end inline asm
	add.s32 	%r2036, %r3288, %r1779;
	add.s32 	%r2037, %r2036, %r1778;
	add.s32 	%r2038, %r2037, 1873313359;
	shf.l.wrap.b32 	%r2039, %r2038, %r2038, 6;
	add.s32 	%r1794, %r2039, %r1790;
	// begin inline asm
	lop3.b32 %r1783, %r1794, %r1790, %r1786, 57;
	// end inline asm
	add.s32 	%r2040, %r3281, %r1783;
	add.s32 	%r2041, %r2040, %r1782;
	add.s32 	%r2042, %r2041, -30611744;
	shf.l.wrap.b32 	%r2043, %r2042, %r2042, 10;
	add.s32 	%r1798, %r2043, %r1794;
	// begin inline asm
	lop3.b32 %r1787, %r1798, %r1794, %r1790, 57;
	// end inline asm
	add.s32 	%r2044, %r3290, %r1787;
	add.s32 	%r2045, %r2044, %r1786;
	add.s32 	%r2046, %r2045, -1560198380;
	shf.l.wrap.b32 	%r2047, %r2046, %r2046, 15;
	add.s32 	%r1802, %r2047, %r1798;
	// begin inline asm
	lop3.b32 %r1791, %r1802, %r1798, %r1794, 57;
	// end inline asm
	add.s32 	%r2048, %r3283, %r1791;
	add.s32 	%r2049, %r2048, %r1790;
	add.s32 	%r2050, %r2049, 1309151649;
	shf.l.wrap.b32 	%r2051, %r2050, %r2050, 21;
	add.s32 	%r1806, %r2051, %r1802;
	// begin inline asm
	lop3.b32 %r1795, %r1806, %r1802, %r1798, 57;
	// end inline asm
	add.s32 	%r2052, %r3292, %r1795;
	add.s32 	%r2053, %r2052, %r1794;
	add.s32 	%r2054, %r2053, -145523070;
	shf.l.wrap.b32 	%r2055, %r2054, %r2054, 6;
	add.s32 	%r1810, %r2055, %r1806;
	// begin inline asm
	lop3.b32 %r1799, %r1810, %r1806, %r1802, 57;
	// end inline asm
	add.s32 	%r2056, %r3285, %r1799;
	add.s32 	%r2057, %r2056, %r1798;
	add.s32 	%r2058, %r2057, -1120210379;
	shf.l.wrap.b32 	%r2059, %r2058, %r2058, 10;
	add.s32 	%r1809, %r2059, %r1810;
	// begin inline asm
	lop3.b32 %r1803, %r1809, %r1810, %r1806, 57;
	// end inline asm
	add.s32 	%r2060, %r3294, %r1803;
	add.s32 	%r2061, %r2060, %r1802;
	add.s32 	%r2062, %r2061, 718787259;
	shf.l.wrap.b32 	%r2063, %r2062, %r2062, 15;
	add.s32 	%r1808, %r2063, %r1809;
	// begin inline asm
	lop3.b32 %r1807, %r1808, %r1809, %r1810, 57;
	// end inline asm
	add.s32 	%r2064, %r3287, %r1807;
	add.s32 	%r2065, %r2064, %r1806;
	add.s32 	%r2066, %r2065, -343485551;
	shf.l.wrap.b32 	%r2067, %r2066, %r2066, 21;
	add.s32 	%r2068, %r1810, %r1811;
	st.local.u32 	[%rd4+4], %r2068;
	add.s32 	%r2069, %r1808, %r1556;
	add.s32 	%r2070, %r2069, %r2067;
	st.local.u32 	[%rd4+8], %r2070;
	add.s32 	%r2071, %r1557, %r1808;
	st.local.u32 	[%rd4+12], %r2071;
	add.s32 	%r2072, %r1558, %r1809;
	st.local.u32 	[%rd4+16], %r2072;
	add.s64 	%rd185, %rd185, 64;
	add.s64 	%rd183, %rd183, 64;
	add.s32 	%r3297, %r3297, -64;
	setp.gt.u32 	%p28, %r3297, 63;
	@%p28 bra 	$L__BB1_31;

$L__BB1_35:
	setp.eq.s32 	%p29, %r3297, 0;
	@%p29 bra 	$L__BB1_41;

	cvt.u64.u32 	%rd133, %r3278;
	add.s64 	%rd134, %rd4, %rd133;
	add.s64 	%rd190, %rd134, 20;
	and.b32  	%r3299, %r3297, 3;
	setp.eq.s32 	%p30, %r3299, 0;
	mov.u32 	%r3300, %r3297;
	@%p30 bra 	$L__BB1_39;

	mov.u64 	%rd186, %rd190;
	mov.u64 	%rd187, %rd185;
	mov.u32 	%r3300, %r3297;

$L__BB1_38:
	.pragma "nounroll";
	add.s32 	%r3300, %r3300, -1;
	add.s64 	%rd185, %rd187, 1;
	ld.local.u8 	%rs86, [%rd187];
	add.s64 	%rd190, %rd186, 1;
	st.local.u8 	[%rd186], %rs86;
	add.s32 	%r3299, %r3299, -1;
	setp.ne.s32 	%p31, %r3299, 0;
	mov.u64 	%rd186, %rd190;
	mov.u64 	%rd187, %rd185;
	@%p31 bra 	$L__BB1_38;

$L__BB1_39:
	add.s32 	%r2073, %r3297, -1;
	setp.lt.u32 	%p32, %r2073, 3;
	@%p32 bra 	$L__BB1_41;

$L__BB1_40:
	ld.local.u8 	%rs87, [%rd185];
	st.local.u8 	[%rd190], %rs87;
	ld.local.u8 	%rs88, [%rd185+1];
	st.local.u8 	[%rd190+1], %rs88;
	ld.local.u8 	%rs89, [%rd185+2];
	st.local.u8 	[%rd190+2], %rs89;
	add.s64 	%rd76, %rd185, 4;
	ld.local.u8 	%rs90, [%rd185+3];
	add.s64 	%rd77, %rd190, 4;
	st.local.u8 	[%rd190+3], %rs90;
	add.s32 	%r3300, %r3300, -4;
	setp.ne.s32 	%p33, %r3300, 0;
	mov.u64 	%rd190, %rd77;
	mov.u64 	%rd185, %rd76;
	@%p33 bra 	$L__BB1_40;

$L__BB1_41:
	add.u64 	%rd202, %SPL, 0;
	add.u64 	%rd200, %SP, 0;
	ld.local.u32 	%r2075, [%rd4];
	and.b32  	%r3306, %r2075, 63;
	mov.u32 	%r2076, 64;
	sub.s32 	%r154, %r2076, %r3306;
	add.s32 	%r2077, %r2075, 8;
	mov.u32 	%r3325, 8;
	st.local.u32 	[%rd4], %r2077;
	setp.eq.s32 	%p34, %r3306, 0;
	setp.gt.u32 	%p35, %r154, 8;
	or.pred  	%p36, %p34, %p35;
	@%p36 bra 	$L__BB1_49;

	setp.eq.s32 	%p37, %r154, 0;
	@%p37 bra 	$L__BB1_48;

	add.u64 	%rd197, %SPL, 0;
	cvt.u64.u32 	%rd135, %r3306;
	add.s64 	%rd136, %rd4, %rd135;
	add.s64 	%rd196, %rd136, 20;
	and.b32  	%r3303, %r154, 3;
	setp.eq.s32 	%p38, %r3303, 0;
	mov.u32 	%r3304, %r154;
	@%p38 bra 	$L__BB1_46;

	add.u64 	%rd193, %SPL, 0;
	mov.u64 	%rd192, %rd196;
	mov.u32 	%r3304, %r154;

$L__BB1_45:
	.pragma "nounroll";
	add.s32 	%r3304, %r3304, -1;
	add.s64 	%rd197, %rd193, 1;
	ld.local.u8 	%rs91, [%rd193];
	add.s64 	%rd196, %rd192, 1;
	st.local.u8 	[%rd192], %rs91;
	add.s32 	%r3303, %r3303, -1;
	setp.ne.s32 	%p39, %r3303, 0;
	mov.u64 	%rd192, %rd196;
	mov.u64 	%rd193, %rd197;
	@%p39 bra 	$L__BB1_45;

$L__BB1_46:
	xor.b32  	%r2078, %r3306, 63;
	setp.lt.u32 	%p40, %r2078, 3;
	@%p40 bra 	$L__BB1_48;

$L__BB1_47:
	ld.local.u8 	%rs92, [%rd197];
	st.local.u8 	[%rd196], %rs92;
	ld.local.u8 	%rs93, [%rd197+1];
	st.local.u8 	[%rd196+1], %rs93;
	ld.local.u8 	%rs94, [%rd197+2];
	st.local.u8 	[%rd196+2], %rs94;
	add.s64 	%rd91, %rd197, 4;
	ld.local.u8 	%rs95, [%rd197+3];
	add.s64 	%rd92, %rd196, 4;
	st.local.u8 	[%rd196+3], %rs95;
	add.s32 	%r3304, %r3304, -4;
	setp.ne.s32 	%p41, %r3304, 0;
	mov.u64 	%rd196, %rd92;
	mov.u64 	%rd197, %rd91;
	@%p41 bra 	$L__BB1_47;

$L__BB1_48:
	add.u64 	%rd155, %SPL, 0;
	ld.local.u32 	%r2082, [%rd4+16];
	ld.local.u32 	%r2081, [%rd4+12];
	ld.local.u32 	%r2080, [%rd4+8];
	// begin inline asm
	lop3.b32 %r2079, %r2080, %r2081, %r2082, 202;
	// end inline asm
	ld.local.u32 	%r2336, [%rd4+20];
	ld.local.u32 	%r2337, [%rd4+4];
	add.s32 	%r2338, %r2336, %r2337;
	add.s32 	%r2339, %r2338, %r2079;
	add.s32 	%r2340, %r2339, -680876936;
	shf.l.wrap.b32 	%r2341, %r2340, %r2340, 7;
	add.s32 	%r2094, %r2341, %r2080;
	// begin inline asm
	lop3.b32 %r2083, %r2094, %r2080, %r2081, 202;
	// end inline asm
	ld.local.u32 	%r2342, [%rd4+24];
	add.s32 	%r2343, %r2342, %r2082;
	add.s32 	%r2344, %r2343, %r2083;
	add.s32 	%r2345, %r2344, -389564586;
	shf.l.wrap.b32 	%r2346, %r2345, %r2345, 12;
	add.s32 	%r2098, %r2346, %r2094;
	// begin inline asm
	lop3.b32 %r2087, %r2098, %r2094, %r2080, 202;
	// end inline asm
	ld.local.u32 	%r2347, [%rd4+28];
	add.s32 	%r2348, %r2347, %r2081;
	add.s32 	%r2349, %r2348, %r2087;
	add.s32 	%r2350, %r2349, 606105819;
	shf.l.wrap.b32 	%r2351, %r2350, %r2350, 17;
	add.s32 	%r2102, %r2351, %r2098;
	// begin inline asm
	lop3.b32 %r2091, %r2102, %r2098, %r2094, 202;
	// end inline asm
	ld.local.u32 	%r2352, [%rd4+32];
	add.s32 	%r2353, %r2352, %r2080;
	add.s32 	%r2354, %r2353, %r2091;
	add.s32 	%r2355, %r2354, -1044525330;
	shf.l.wrap.b32 	%r2356, %r2355, %r2355, 22;
	add.s32 	%r2106, %r2356, %r2102;
	// begin inline asm
	lop3.b32 %r2095, %r2106, %r2102, %r2098, 202;
	// end inline asm
	ld.local.u32 	%r2357, [%rd4+36];
	add.s32 	%r2358, %r2357, %r2095;
	add.s32 	%r2359, %r2358, %r2094;
	add.s32 	%r2360, %r2359, -176418897;
	shf.l.wrap.b32 	%r2361, %r2360, %r2360, 7;
	add.s32 	%r2110, %r2361, %r2106;
	// begin inline asm
	lop3.b32 %r2099, %r2110, %r2106, %r2102, 202;
	// end inline asm
	ld.local.u32 	%r2362, [%rd4+40];
	add.s32 	%r2363, %r2362, %r2099;
	add.s32 	%r2364, %r2363, %r2098;
	add.s32 	%r2365, %r2364, 1200080426;
	shf.l.wrap.b32 	%r2366, %r2365, %r2365, 12;
	add.s32 	%r2114, %r2366, %r2110;
	// begin inline asm
	lop3.b32 %r2103, %r2114, %r2110, %r2106, 202;
	// end inline asm
	ld.local.u32 	%r2367, [%rd4+44];
	add.s32 	%r2368, %r2367, %r2103;
	add.s32 	%r2369, %r2368, %r2102;
	add.s32 	%r2370, %r2369, -1473231341;
	shf.l.wrap.b32 	%r2371, %r2370, %r2370, 17;
	add.s32 	%r2118, %r2371, %r2114;
	// begin inline asm
	lop3.b32 %r2107, %r2118, %r2114, %r2110, 202;
	// end inline asm
	ld.local.u32 	%r2372, [%rd4+48];
	add.s32 	%r2373, %r2372, %r2107;
	add.s32 	%r2374, %r2373, %r2106;
	add.s32 	%r2375, %r2374, -45705983;
	shf.l.wrap.b32 	%r2376, %r2375, %r2375, 22;
	add.s32 	%r2122, %r2376, %r2118;
	// begin inline asm
	lop3.b32 %r2111, %r2122, %r2118, %r2114, 202;
	// end inline asm
	ld.local.u32 	%r2377, [%rd4+52];
	add.s32 	%r2378, %r2377, %r2111;
	add.s32 	%r2379, %r2378, %r2110;
	add.s32 	%r2380, %r2379, 1770035416;
	shf.l.wrap.b32 	%r2381, %r2380, %r2380, 7;
	add.s32 	%r2126, %r2381, %r2122;
	// begin inline asm
	lop3.b32 %r2115, %r2126, %r2122, %r2118, 202;
	// end inline asm
	ld.local.u32 	%r2382, [%rd4+56];
	add.s32 	%r2383, %r2382, %r2115;
	add.s32 	%r2384, %r2383, %r2114;
	add.s32 	%r2385, %r2384, -1958414417;
	shf.l.wrap.b32 	%r2386, %r2385, %r2385, 12;
	add.s32 	%r2130, %r2386, %r2126;
	// begin inline asm
	lop3.b32 %r2119, %r2130, %r2126, %r2122, 202;
	// end inline asm
	ld.local.u32 	%r2387, [%rd4+60];
	add.s32 	%r2388, %r2387, %r2119;
	add.s32 	%r2389, %r2388, %r2118;
	add.s32 	%r2390, %r2389, -42063;
	shf.l.wrap.b32 	%r2391, %r2390, %r2390, 17;
	add.s32 	%r2134, %r2391, %r2130;
	// begin inline asm
	lop3.b32 %r2123, %r2134, %r2130, %r2126, 202;
	// end inline asm
	ld.local.u32 	%r2392, [%rd4+64];
	add.s32 	%r2393, %r2392, %r2123;
	add.s32 	%r2394, %r2393, %r2122;
	add.s32 	%r2395, %r2394, -1990404162;
	shf.l.wrap.b32 	%r2396, %r2395, %r2395, 22;
	add.s32 	%r2138, %r2396, %r2134;
	// begin inline asm
	lop3.b32 %r2127, %r2138, %r2134, %r2130, 202;
	// end inline asm
	ld.local.u32 	%r2397, [%rd4+68];
	add.s32 	%r2398, %r2397, %r2127;
	add.s32 	%r2399, %r2398, %r2126;
	add.s32 	%r2400, %r2399, 1804603682;
	shf.l.wrap.b32 	%r2401, %r2400, %r2400, 7;
	add.s32 	%r2142, %r2401, %r2138;
	// begin inline asm
	lop3.b32 %r2131, %r2142, %r2138, %r2134, 202;
	// end inline asm
	ld.local.u32 	%r2402, [%rd4+72];
	add.s32 	%r2403, %r2402, %r2131;
	add.s32 	%r2404, %r2403, %r2130;
	add.s32 	%r2405, %r2404, -40341101;
	shf.l.wrap.b32 	%r2406, %r2405, %r2405, 12;
	add.s32 	%r2146, %r2406, %r2142;
	// begin inline asm
	lop3.b32 %r2135, %r2146, %r2142, %r2138, 202;
	// end inline asm
	ld.local.u32 	%r2407, [%rd4+76];
	add.s32 	%r2408, %r2407, %r2135;
	add.s32 	%r2409, %r2408, %r2134;
	add.s32 	%r2410, %r2409, -1502002290;
	shf.l.wrap.b32 	%r2411, %r2410, %r2410, 17;
	add.s32 	%r2150, %r2411, %r2146;
	// begin inline asm
	lop3.b32 %r2139, %r2150, %r2146, %r2142, 202;
	// end inline asm
	ld.local.u32 	%r2412, [%rd4+80];
	add.s32 	%r2413, %r2412, %r2139;
	add.s32 	%r2414, %r2413, %r2138;
	add.s32 	%r2415, %r2414, 1236535329;
	shf.l.wrap.b32 	%r2416, %r2415, %r2415, 22;
	add.s32 	%r2154, %r2416, %r2150;
	// begin inline asm
	lop3.b32 %r2143, %r2154, %r2150, %r2146, 228;
	// end inline asm
	add.s32 	%r2417, %r2342, %r2143;
	add.s32 	%r2418, %r2417, %r2142;
	add.s32 	%r2419, %r2418, -165796510;
	shf.l.wrap.b32 	%r2420, %r2419, %r2419, 5;
	add.s32 	%r2158, %r2420, %r2154;
	// begin inline asm
	lop3.b32 %r2147, %r2158, %r2154, %r2150, 228;
	// end inline asm
	add.s32 	%r2421, %r2367, %r2147;
	add.s32 	%r2422, %r2421, %r2146;
	add.s32 	%r2423, %r2422, -1069501632;
	shf.l.wrap.b32 	%r2424, %r2423, %r2423, 9;
	add.s32 	%r2162, %r2424, %r2158;
	// begin inline asm
	lop3.b32 %r2151, %r2162, %r2158, %r2154, 228;
	// end inline asm
	add.s32 	%r2425, %r2392, %r2151;
	add.s32 	%r2426, %r2425, %r2150;
	add.s32 	%r2427, %r2426, 643717713;
	shf.l.wrap.b32 	%r2428, %r2427, %r2427, 14;
	add.s32 	%r2166, %r2428, %r2162;
	// begin inline asm
	lop3.b32 %r2155, %r2166, %r2162, %r2158, 228;
	// end inline asm
	add.s32 	%r2429, %r2336, %r2155;
	add.s32 	%r2430, %r2429, %r2154;
	add.s32 	%r2431, %r2430, -373897302;
	shf.l.wrap.b32 	%r2432, %r2431, %r2431, 20;
	add.s32 	%r2170, %r2432, %r2166;
	// begin inline asm
	lop3.b32 %r2159, %r2170, %r2166, %r2162, 228;
	// end inline asm
	add.s32 	%r2433, %r2362, %r2159;
	add.s32 	%r2434, %r2433, %r2158;
	add.s32 	%r2435, %r2434, -701558691;
	shf.l.wrap.b32 	%r2436, %r2435, %r2435, 5;
	add.s32 	%r2174, %r2436, %r2170;
	// begin inline asm
	lop3.b32 %r2163, %r2174, %r2170, %r2166, 228;
	// end inline asm
	add.s32 	%r2437, %r2387, %r2163;
	add.s32 	%r2438, %r2437, %r2162;
	add.s32 	%r2439, %r2438, 38016083;
	shf.l.wrap.b32 	%r2440, %r2439, %r2439, 9;
	add.s32 	%r2178, %r2440, %r2174;
	// begin inline asm
	lop3.b32 %r2167, %r2178, %r2174, %r2170, 228;
	// end inline asm
	add.s32 	%r2441, %r2412, %r2167;
	add.s32 	%r2442, %r2441, %r2166;
	add.s32 	%r2443, %r2442, -660478335;
	shf.l.wrap.b32 	%r2444, %r2443, %r2443, 14;
	add.s32 	%r2182, %r2444, %r2178;
	// begin inline asm
	lop3.b32 %r2171, %r2182, %r2178, %r2174, 228;
	// end inline asm
	add.s32 	%r2445, %r2357, %r2171;
	add.s32 	%r2446, %r2445, %r2170;
	add.s32 	%r2447, %r2446, -405537848;
	shf.l.wrap.b32 	%r2448, %r2447, %r2447, 20;
	add.s32 	%r2186, %r2448, %r2182;
	// begin inline asm
	lop3.b32 %r2175, %r2186, %r2182, %r2178, 228;
	// end inline asm
	add.s32 	%r2449, %r2382, %r2175;
	add.s32 	%r2450, %r2449, %r2174;
	add.s32 	%r2451, %r2450, 568446438;
	shf.l.wrap.b32 	%r2452, %r2451, %r2451, 5;
	add.s32 	%r2190, %r2452, %r2186;
	// begin inline asm
	lop3.b32 %r2179, %r2190, %r2186, %r2182, 228;
	// end inline asm
	add.s32 	%r2453, %r2407, %r2179;
	add.s32 	%r2454, %r2453, %r2178;
	add.s32 	%r2455, %r2454, -1019803690;
	shf.l.wrap.b32 	%r2456, %r2455, %r2455, 9;
	add.s32 	%r2194, %r2456, %r2190;
	// begin inline asm
	lop3.b32 %r2183, %r2194, %r2190, %r2186, 228;
	// end inline asm
	add.s32 	%r2457, %r2352, %r2183;
	add.s32 	%r2458, %r2457, %r2182;
	add.s32 	%r2459, %r2458, -187363961;
	shf.l.wrap.b32 	%r2460, %r2459, %r2459, 14;
	add.s32 	%r2198, %r2460, %r2194;
	// begin inline asm
	lop3.b32 %r2187, %r2198, %r2194, %r2190, 228;
	// end inline asm
	add.s32 	%r2461, %r2377, %r2187;
	add.s32 	%r2462, %r2461, %r2186;
	add.s32 	%r2463, %r2462, 1163531501;
	shf.l.wrap.b32 	%r2464, %r2463, %r2463, 20;
	add.s32 	%r2202, %r2464, %r2198;
	// begin inline asm
	lop3.b32 %r2191, %r2202, %r2198, %r2194, 228;
	// end inline asm
	add.s32 	%r2465, %r2402, %r2191;
	add.s32 	%r2466, %r2465, %r2190;
	add.s32 	%r2467, %r2466, -1444681467;
	shf.l.wrap.b32 	%r2468, %r2467, %r2467, 5;
	add.s32 	%r2206, %r2468, %r2202;
	// begin inline asm
	lop3.b32 %r2195, %r2206, %r2202, %r2198, 228;
	// end inline asm
	add.s32 	%r2469, %r2347, %r2195;
	add.s32 	%r2470, %r2469, %r2194;
	add.s32 	%r2471, %r2470, -51403784;
	shf.l.wrap.b32 	%r2472, %r2471, %r2471, 9;
	add.s32 	%r2210, %r2472, %r2206;
	// begin inline asm
	lop3.b32 %r2199, %r2210, %r2206, %r2202, 228;
	// end inline asm
	add.s32 	%r2473, %r2372, %r2199;
	add.s32 	%r2474, %r2473, %r2198;
	add.s32 	%r2475, %r2474, 1735328473;
	shf.l.wrap.b32 	%r2476, %r2475, %r2475, 14;
	add.s32 	%r2214, %r2476, %r2210;
	// begin inline asm
	lop3.b32 %r2203, %r2214, %r2210, %r2206, 228;
	// end inline asm
	add.s32 	%r2477, %r2397, %r2203;
	add.s32 	%r2478, %r2477, %r2202;
	add.s32 	%r2479, %r2478, -1926607734;
	shf.l.wrap.b32 	%r2480, %r2479, %r2479, 20;
	add.s32 	%r2218, %r2480, %r2214;
	// begin inline asm
	lop3.b32 %r2207, %r2218, %r2214, %r2210, 150;
	// end inline asm
	add.s32 	%r2481, %r2362, %r2207;
	add.s32 	%r2482, %r2481, %r2206;
	add.s32 	%r2483, %r2482, -378558;
	shf.l.wrap.b32 	%r2484, %r2483, %r2483, 4;
	add.s32 	%r2222, %r2484, %r2218;
	// begin inline asm
	lop3.b32 %r2211, %r2222, %r2218, %r2214, 150;
	// end inline asm
	add.s32 	%r2485, %r2377, %r2211;
	add.s32 	%r2486, %r2485, %r2210;
	add.s32 	%r2487, %r2486, -2022574463;
	shf.l.wrap.b32 	%r2488, %r2487, %r2487, 11;
	add.s32 	%r2226, %r2488, %r2222;
	// begin inline asm
	lop3.b32 %r2215, %r2226, %r2222, %r2218, 150;
	// end inline asm
	add.s32 	%r2489, %r2392, %r2215;
	add.s32 	%r2490, %r2489, %r2214;
	add.s32 	%r2491, %r2490, 1839030562;
	shf.l.wrap.b32 	%r2492, %r2491, %r2491, 16;
	add.s32 	%r2230, %r2492, %r2226;
	// begin inline asm
	lop3.b32 %r2219, %r2230, %r2226, %r2222, 150;
	// end inline asm
	add.s32 	%r2493, %r2407, %r2219;
	add.s32 	%r2494, %r2493, %r2218;
	add.s32 	%r2495, %r2494, -35309556;
	shf.l.wrap.b32 	%r2496, %r2495, %r2495, 23;
	add.s32 	%r2234, %r2496, %r2230;
	// begin inline asm
	lop3.b32 %r2223, %r2234, %r2230, %r2226, 150;
	// end inline asm
	add.s32 	%r2497, %r2342, %r2223;
	add.s32 	%r2498, %r2497, %r2222;
	add.s32 	%r2499, %r2498, -1530992060;
	shf.l.wrap.b32 	%r2500, %r2499, %r2499, 4;
	add.s32 	%r2238, %r2500, %r2234;
	// begin inline asm
	lop3.b32 %r2227, %r2238, %r2234, %r2230, 150;
	// end inline asm
	add.s32 	%r2501, %r2357, %r2227;
	add.s32 	%r2502, %r2501, %r2226;
	add.s32 	%r2503, %r2502, 1272893353;
	shf.l.wrap.b32 	%r2504, %r2503, %r2503, 11;
	add.s32 	%r2242, %r2504, %r2238;
	// begin inline asm
	lop3.b32 %r2231, %r2242, %r2238, %r2234, 150;
	// end inline asm
	add.s32 	%r2505, %r2372, %r2231;
	add.s32 	%r2506, %r2505, %r2230;
	add.s32 	%r2507, %r2506, -155497632;
	shf.l.wrap.b32 	%r2508, %r2507, %r2507, 16;
	add.s32 	%r2246, %r2508, %r2242;
	// begin inline asm
	lop3.b32 %r2235, %r2246, %r2242, %r2238, 150;
	// end inline asm
	add.s32 	%r2509, %r2387, %r2235;
	add.s32 	%r2510, %r2509, %r2234;
	add.s32 	%r2511, %r2510, -1094730640;
	shf.l.wrap.b32 	%r2512, %r2511, %r2511, 23;
	add.s32 	%r2250, %r2512, %r2246;
	// begin inline asm
	lop3.b32 %r2239, %r2250, %r2246, %r2242, 150;
	// end inline asm
	add.s32 	%r2513, %r2402, %r2239;
	add.s32 	%r2514, %r2513, %r2238;
	add.s32 	%r2515, %r2514, 681279174;
	shf.l.wrap.b32 	%r2516, %r2515, %r2515, 4;
	add.s32 	%r2254, %r2516, %r2250;
	// begin inline asm
	lop3.b32 %r2243, %r2254, %r2250, %r2246, 150;
	// end inline asm
	add.s32 	%r2517, %r2336, %r2243;
	add.s32 	%r2518, %r2517, %r2242;
	add.s32 	%r2519, %r2518, -358537222;
	shf.l.wrap.b32 	%r2520, %r2519, %r2519, 11;
	add.s32 	%r2258, %r2520, %r2254;
	// begin inline asm
	lop3.b32 %r2247, %r2258, %r2254, %r2250, 150;
	// end inline asm
	add.s32 	%r2521, %r2352, %r2247;
	add.s32 	%r2522, %r2521, %r2246;
	add.s32 	%r2523, %r2522, -722521979;
	shf.l.wrap.b32 	%r2524, %r2523, %r2523, 16;
	add.s32 	%r2262, %r2524, %r2258;
	// begin inline asm
	lop3.b32 %r2251, %r2262, %r2258, %r2254, 150;
	// end inline asm
	add.s32 	%r2525, %r2367, %r2251;
	add.s32 	%r2526, %r2525, %r2250;
	add.s32 	%r2527, %r2526, 76029189;
	shf.l.wrap.b32 	%r2528, %r2527, %r2527, 23;
	add.s32 	%r2266, %r2528, %r2262;
	// begin inline asm
	lop3.b32 %r2255, %r2266, %r2262, %r2258, 150;
	// end inline asm
	add.s32 	%r2529, %r2382, %r2255;
	add.s32 	%r2530, %r2529, %r2254;
	add.s32 	%r2531, %r2530, -640364487;
	shf.l.wrap.b32 	%r2532, %r2531, %r2531, 4;
	add.s32 	%r2270, %r2532, %r2266;
	// begin inline asm
	lop3.b32 %r2259, %r2270, %r2266, %r2262, 150;
	// end inline asm
	add.s32 	%r2533, %r2397, %r2259;
	add.s32 	%r2534, %r2533, %r2258;
	add.s32 	%r2535, %r2534, -421815835;
	shf.l.wrap.b32 	%r2536, %r2535, %r2535, 11;
	add.s32 	%r2274, %r2536, %r2270;
	// begin inline asm
	lop3.b32 %r2263, %r2274, %r2270, %r2266, 150;
	// end inline asm
	add.s32 	%r2537, %r2412, %r2263;
	add.s32 	%r2538, %r2537, %r2262;
	add.s32 	%r2539, %r2538, 530742520;
	shf.l.wrap.b32 	%r2540, %r2539, %r2539, 16;
	add.s32 	%r2278, %r2540, %r2274;
	// begin inline asm
	lop3.b32 %r2267, %r2278, %r2274, %r2270, 150;
	// end inline asm
	add.s32 	%r2541, %r2347, %r2267;
	add.s32 	%r2542, %r2541, %r2266;
	add.s32 	%r2543, %r2542, -995338651;
	shf.l.wrap.b32 	%r2544, %r2543, %r2543, 23;
	add.s32 	%r2282, %r2544, %r2278;
	// begin inline asm
	lop3.b32 %r2271, %r2282, %r2278, %r2274, 57;
	// end inline asm
	add.s32 	%r2545, %r2336, %r2271;
	add.s32 	%r2546, %r2545, %r2270;
	add.s32 	%r2547, %r2546, -198630844;
	shf.l.wrap.b32 	%r2548, %r2547, %r2547, 6;
	add.s32 	%r2286, %r2548, %r2282;
	// begin inline asm
	lop3.b32 %r2275, %r2286, %r2282, %r2278, 57;
	// end inline asm
	add.s32 	%r2549, %r2372, %r2275;
	add.s32 	%r2550, %r2549, %r2274;
	add.s32 	%r2551, %r2550, 1126891415;
	shf.l.wrap.b32 	%r2552, %r2551, %r2551, 10;
	add.s32 	%r2290, %r2552, %r2286;
	// begin inline asm
	lop3.b32 %r2279, %r2290, %r2286, %r2282, 57;
	// end inline asm
	add.s32 	%r2553, %r2407, %r2279;
	add.s32 	%r2554, %r2553, %r2278;
	add.s32 	%r2555, %r2554, -1416354905;
	shf.l.wrap.b32 	%r2556, %r2555, %r2555, 15;
	add.s32 	%r2294, %r2556, %r2290;
	// begin inline asm
	lop3.b32 %r2283, %r2294, %r2290, %r2286, 57;
	// end inline asm
	add.s32 	%r2557, %r2362, %r2283;
	add.s32 	%r2558, %r2557, %r2282;
	add.s32 	%r2559, %r2558, -57434055;
	shf.l.wrap.b32 	%r2560, %r2559, %r2559, 21;
	add.s32 	%r2298, %r2560, %r2294;
	// begin inline asm
	lop3.b32 %r2287, %r2298, %r2294, %r2290, 57;
	// end inline asm
	add.s32 	%r2561, %r2397, %r2287;
	add.s32 	%r2562, %r2561, %r2286;
	add.s32 	%r2563, %r2562, 1700485571;
	shf.l.wrap.b32 	%r2564, %r2563, %r2563, 6;
	add.s32 	%r2302, %r2564, %r2298;
	// begin inline asm
	lop3.b32 %r2291, %r2302, %r2298, %r2294, 57;
	// end inline asm
	add.s32 	%r2565, %r2352, %r2291;
	add.s32 	%r2566, %r2565, %r2290;
	add.s32 	%r2567, %r2566, -1894986606;
	shf.l.wrap.b32 	%r2568, %r2567, %r2567, 10;
	add.s32 	%r2306, %r2568, %r2302;
	// begin inline asm
	lop3.b32 %r2295, %r2306, %r2302, %r2298, 57;
	// end inline asm
	add.s32 	%r2569, %r2387, %r2295;
	add.s32 	%r2570, %r2569, %r2294;
	add.s32 	%r2571, %r2570, -1051523;
	shf.l.wrap.b32 	%r2572, %r2571, %r2571, 15;
	add.s32 	%r2310, %r2572, %r2306;
	// begin inline asm
	lop3.b32 %r2299, %r2310, %r2306, %r2302, 57;
	// end inline asm
	add.s32 	%r2573, %r2342, %r2299;
	add.s32 	%r2574, %r2573, %r2298;
	add.s32 	%r2575, %r2574, -2054922799;
	shf.l.wrap.b32 	%r2576, %r2575, %r2575, 21;
	add.s32 	%r2314, %r2576, %r2310;
	// begin inline asm
	lop3.b32 %r2303, %r2314, %r2310, %r2306, 57;
	// end inline asm
	add.s32 	%r2577, %r2377, %r2303;
	add.s32 	%r2578, %r2577, %r2302;
	add.s32 	%r2579, %r2578, 1873313359;
	shf.l.wrap.b32 	%r2580, %r2579, %r2579, 6;
	add.s32 	%r2318, %r2580, %r2314;
	// begin inline asm
	lop3.b32 %r2307, %r2318, %r2314, %r2310, 57;
	// end inline asm
	add.s32 	%r2581, %r2412, %r2307;
	add.s32 	%r2582, %r2581, %r2306;
	add.s32 	%r2583, %r2582, -30611744;
	shf.l.wrap.b32 	%r2584, %r2583, %r2583, 10;
	add.s32 	%r2322, %r2584, %r2318;
	// begin inline asm
	lop3.b32 %r2311, %r2322, %r2318, %r2314, 57;
	// end inline asm
	add.s32 	%r2585, %r2367, %r2311;
	add.s32 	%r2586, %r2585, %r2310;
	add.s32 	%r2587, %r2586, -1560198380;
	shf.l.wrap.b32 	%r2588, %r2587, %r2587, 15;
	add.s32 	%r2326, %r2588, %r2322;
	// begin inline asm
	lop3.b32 %r2315, %r2326, %r2322, %r2318, 57;
	// end inline asm
	add.s32 	%r2589, %r2402, %r2315;
	add.s32 	%r2590, %r2589, %r2314;
	add.s32 	%r2591, %r2590, 1309151649;
	shf.l.wrap.b32 	%r2592, %r2591, %r2591, 21;
	add.s32 	%r2330, %r2592, %r2326;
	// begin inline asm
	lop3.b32 %r2319, %r2330, %r2326, %r2322, 57;
	// end inline asm
	add.s32 	%r2593, %r2357, %r2319;
	add.s32 	%r2594, %r2593, %r2318;
	add.s32 	%r2595, %r2594, -145523070;
	shf.l.wrap.b32 	%r2596, %r2595, %r2595, 6;
	add.s32 	%r2334, %r2596, %r2330;
	// begin inline asm
	lop3.b32 %r2323, %r2334, %r2330, %r2326, 57;
	// end inline asm
	add.s32 	%r2597, %r2392, %r2323;
	add.s32 	%r2598, %r2597, %r2322;
	add.s32 	%r2599, %r2598, -1120210379;
	shf.l.wrap.b32 	%r2600, %r2599, %r2599, 10;
	add.s32 	%r2333, %r2600, %r2334;
	// begin inline asm
	lop3.b32 %r2327, %r2333, %r2334, %r2330, 57;
	// end inline asm
	add.s32 	%r2601, %r2347, %r2327;
	add.s32 	%r2602, %r2601, %r2326;
	add.s32 	%r2603, %r2602, 718787259;
	shf.l.wrap.b32 	%r2604, %r2603, %r2603, 15;
	add.s32 	%r2332, %r2604, %r2333;
	// begin inline asm
	lop3.b32 %r2331, %r2332, %r2333, %r2334, 57;
	// end inline asm
	add.s32 	%r2605, %r2382, %r2331;
	add.s32 	%r2606, %r2605, %r2330;
	add.s32 	%r2607, %r2606, -343485551;
	shf.l.wrap.b32 	%r2608, %r2607, %r2607, 21;
	add.s32 	%r2609, %r2334, %r2337;
	st.local.u32 	[%rd4+4], %r2609;
	add.s32 	%r2610, %r2332, %r2080;
	add.s32 	%r2611, %r2610, %r2608;
	st.local.u32 	[%rd4+8], %r2611;
	add.s32 	%r2612, %r2081, %r2332;
	st.local.u32 	[%rd4+12], %r2612;
	add.s32 	%r2613, %r2082, %r2333;
	st.local.u32 	[%rd4+16], %r2613;
	cvt.u64.u32 	%rd137, %r154;
	add.s64 	%rd202, %rd155, %rd137;
	add.u64 	%rd138, %SP, 0;
	add.s64 	%rd200, %rd138, %rd137;
	mov.u32 	%r2614, 8;
	sub.s32 	%r3325, %r2614, %r154;
	mov.u32 	%r3306, 0;

$L__BB1_49:
	setp.lt.u32 	%p42, %r3325, 64;
	@%p42 bra 	$L__BB1_54;

$L__BB1_50:
	and.b64  	%rd139, %rd200, 3;
	setp.eq.s64 	%p43, %rd139, 0;
	@%p43 bra 	$L__BB1_52;

	ld.local.u8 	%r2615, [%rd202];
	ld.local.u8 	%r2616, [%rd202+1];
	prmt.b32 	%r2617, %r2616, %r2615, 30212;
	ld.local.u8 	%r2618, [%rd202+2];
	prmt.b32 	%r2619, %r2618, %r2617, 28756;
	ld.local.u8 	%r2620, [%rd202+3];
	prmt.b32 	%r3324, %r2620, %r2619, 1620;
	ld.local.u8 	%r2621, [%rd202+4];
	ld.local.u8 	%r2622, [%rd202+5];
	prmt.b32 	%r2623, %r2622, %r2621, 30212;
	ld.local.u8 	%r2624, [%rd202+6];
	prmt.b32 	%r2625, %r2624, %r2623, 28756;
	ld.local.u8 	%r2626, [%rd202+7];
	prmt.b32 	%r3323, %r2626, %r2625, 1620;
	ld.local.u8 	%r2627, [%rd202+8];
	ld.local.u8 	%r2628, [%rd202+9];
	prmt.b32 	%r2629, %r2628, %r2627, 30212;
	ld.local.u8 	%r2630, [%rd202+10];
	prmt.b32 	%r2631, %r2630, %r2629, 28756;
	ld.local.u8 	%r2632, [%rd202+11];
	prmt.b32 	%r3322, %r2632, %r2631, 1620;
	ld.local.u8 	%r2633, [%rd202+12];
	ld.local.u8 	%r2634, [%rd202+13];
	prmt.b32 	%r2635, %r2634, %r2633, 30212;
	ld.local.u8 	%r2636, [%rd202+14];
	prmt.b32 	%r2637, %r2636, %r2635, 28756;
	ld.local.u8 	%r2638, [%rd202+15];
	prmt.b32 	%r3321, %r2638, %r2637, 1620;
	ld.local.u8 	%r2639, [%rd202+16];
	ld.local.u8 	%r2640, [%rd202+17];
	prmt.b32 	%r2641, %r2640, %r2639, 30212;
	ld.local.u8 	%r2642, [%rd202+18];
	prmt.b32 	%r2643, %r2642, %r2641, 28756;
	ld.local.u8 	%r2644, [%rd202+19];
	prmt.b32 	%r3320, %r2644, %r2643, 1620;
	ld.local.u8 	%r2645, [%rd202+20];
	ld.local.u8 	%r2646, [%rd202+21];
	prmt.b32 	%r2647, %r2646, %r2645, 30212;
	ld.local.u8 	%r2648, [%rd202+22];
	prmt.b32 	%r2649, %r2648, %r2647, 28756;
	ld.local.u8 	%r2650, [%rd202+23];
	prmt.b32 	%r3319, %r2650, %r2649, 1620;
	ld.local.u8 	%r2651, [%rd202+24];
	ld.local.u8 	%r2652, [%rd202+25];
	prmt.b32 	%r2653, %r2652, %r2651, 30212;
	ld.local.u8 	%r2654, [%rd202+26];
	prmt.b32 	%r2655, %r2654, %r2653, 28756;
	ld.local.u8 	%r2656, [%rd202+27];
	prmt.b32 	%r3318, %r2656, %r2655, 1620;
	ld.local.u8 	%r2657, [%rd202+28];
	ld.local.u8 	%r2658, [%rd202+29];
	prmt.b32 	%r2659, %r2658, %r2657, 30212;
	ld.local.u8 	%r2660, [%rd202+30];
	prmt.b32 	%r2661, %r2660, %r2659, 28756;
	ld.local.u8 	%r2662, [%rd202+31];
	prmt.b32 	%r3317, %r2662, %r2661, 1620;
	ld.local.u8 	%r2663, [%rd202+32];
	ld.local.u8 	%r2664, [%rd202+33];
	prmt.b32 	%r2665, %r2664, %r2663, 30212;
	ld.local.u8 	%r2666, [%rd202+34];
	prmt.b32 	%r2667, %r2666, %r2665, 28756;
	ld.local.u8 	%r2668, [%rd202+35];
	prmt.b32 	%r3316, %r2668, %r2667, 1620;
	ld.local.u8 	%r2669, [%rd202+36];
	ld.local.u8 	%r2670, [%rd202+37];
	prmt.b32 	%r2671, %r2670, %r2669, 30212;
	ld.local.u8 	%r2672, [%rd202+38];
	prmt.b32 	%r2673, %r2672, %r2671, 28756;
	ld.local.u8 	%r2674, [%rd202+39];
	prmt.b32 	%r3315, %r2674, %r2673, 1620;
	ld.local.u8 	%r2675, [%rd202+40];
	ld.local.u8 	%r2676, [%rd202+41];
	prmt.b32 	%r2677, %r2676, %r2675, 30212;
	ld.local.u8 	%r2678, [%rd202+42];
	prmt.b32 	%r2679, %r2678, %r2677, 28756;
	ld.local.u8 	%r2680, [%rd202+43];
	prmt.b32 	%r3314, %r2680, %r2679, 1620;
	ld.local.u8 	%r2681, [%rd202+44];
	ld.local.u8 	%r2682, [%rd202+45];
	prmt.b32 	%r2683, %r2682, %r2681, 30212;
	ld.local.u8 	%r2684, [%rd202+46];
	prmt.b32 	%r2685, %r2684, %r2683, 28756;
	ld.local.u8 	%r2686, [%rd202+47];
	prmt.b32 	%r3313, %r2686, %r2685, 1620;
	ld.local.u8 	%r2687, [%rd202+48];
	ld.local.u8 	%r2688, [%rd202+49];
	prmt.b32 	%r2689, %r2688, %r2687, 30212;
	ld.local.u8 	%r2690, [%rd202+50];
	prmt.b32 	%r2691, %r2690, %r2689, 28756;
	ld.local.u8 	%r2692, [%rd202+51];
	prmt.b32 	%r3312, %r2692, %r2691, 1620;
	ld.local.u8 	%r2693, [%rd202+52];
	ld.local.u8 	%r2694, [%rd202+53];
	prmt.b32 	%r2695, %r2694, %r2693, 30212;
	ld.local.u8 	%r2696, [%rd202+54];
	prmt.b32 	%r2697, %r2696, %r2695, 28756;
	ld.local.u8 	%r2698, [%rd202+55];
	prmt.b32 	%r3311, %r2698, %r2697, 1620;
	ld.local.u8 	%r2699, [%rd202+56];
	ld.local.u8 	%r2700, [%rd202+57];
	prmt.b32 	%r2701, %r2700, %r2699, 30212;
	ld.local.u8 	%r2702, [%rd202+58];
	prmt.b32 	%r2703, %r2702, %r2701, 28756;
	ld.local.u8 	%r2704, [%rd202+59];
	prmt.b32 	%r3310, %r2704, %r2703, 1620;
	ld.local.u8 	%r2705, [%rd202+60];
	ld.local.u8 	%r2706, [%rd202+61];
	prmt.b32 	%r2707, %r2706, %r2705, 30212;
	ld.local.u8 	%r2708, [%rd202+62];
	prmt.b32 	%r2709, %r2708, %r2707, 28756;
	ld.local.u8 	%r2710, [%rd202+63];
	prmt.b32 	%r3309, %r2710, %r2709, 1620;
	bra.uni 	$L__BB1_53;

$L__BB1_52:
	ld.local.u32 	%r3324, [%rd202];
	ld.local.u32 	%r3323, [%rd202+4];
	ld.local.u32 	%r3322, [%rd202+8];
	ld.local.u32 	%r3321, [%rd202+12];
	ld.local.u32 	%r3320, [%rd202+16];
	ld.local.u32 	%r3319, [%rd202+20];
	ld.local.u32 	%r3318, [%rd202+24];
	ld.local.u32 	%r3317, [%rd202+28];
	ld.local.u32 	%r3316, [%rd202+32];
	ld.local.u32 	%r3315, [%rd202+36];
	ld.local.u32 	%r3314, [%rd202+40];
	ld.local.u32 	%r3313, [%rd202+44];
	ld.local.u32 	%r3312, [%rd202+48];
	ld.local.u32 	%r3311, [%rd202+52];
	ld.local.u32 	%r3310, [%rd202+56];
	ld.local.u32 	%r3309, [%rd202+60];

$L__BB1_53:
	ld.local.u32 	%r2714, [%rd4+16];
	ld.local.u32 	%r2713, [%rd4+12];
	ld.local.u32 	%r2712, [%rd4+8];
	// begin inline asm
	lop3.b32 %r2711, %r2712, %r2713, %r2714, 202;
	// end inline asm
	ld.local.u32 	%r2967, [%rd4+4];
	add.s32 	%r2968, %r3324, %r2967;
	add.s32 	%r2969, %r2968, %r2711;
	add.s32 	%r2970, %r2969, -680876936;
	shf.l.wrap.b32 	%r2971, %r2970, %r2970, 7;
	add.s32 	%r2726, %r2971, %r2712;
	// begin inline asm
	lop3.b32 %r2715, %r2726, %r2712, %r2713, 202;
	// end inline asm
	add.s32 	%r2972, %r3323, %r2714;
	add.s32 	%r2973, %r2972, %r2715;
	add.s32 	%r2974, %r2973, -389564586;
	shf.l.wrap.b32 	%r2975, %r2974, %r2974, 12;
	add.s32 	%r2730, %r2975, %r2726;
	// begin inline asm
	lop3.b32 %r2719, %r2730, %r2726, %r2712, 202;
	// end inline asm
	add.s32 	%r2976, %r3322, %r2713;
	add.s32 	%r2977, %r2976, %r2719;
	add.s32 	%r2978, %r2977, 606105819;
	shf.l.wrap.b32 	%r2979, %r2978, %r2978, 17;
	add.s32 	%r2734, %r2979, %r2730;
	// begin inline asm
	lop3.b32 %r2723, %r2734, %r2730, %r2726, 202;
	// end inline asm
	add.s32 	%r2980, %r3321, %r2712;
	add.s32 	%r2981, %r2980, %r2723;
	add.s32 	%r2982, %r2981, -1044525330;
	shf.l.wrap.b32 	%r2983, %r2982, %r2982, 22;
	add.s32 	%r2738, %r2983, %r2734;
	// begin inline asm
	lop3.b32 %r2727, %r2738, %r2734, %r2730, 202;
	// end inline asm
	add.s32 	%r2984, %r3320, %r2727;
	add.s32 	%r2985, %r2984, %r2726;
	add.s32 	%r2986, %r2985, -176418897;
	shf.l.wrap.b32 	%r2987, %r2986, %r2986, 7;
	add.s32 	%r2742, %r2987, %r2738;
	// begin inline asm
	lop3.b32 %r2731, %r2742, %r2738, %r2734, 202;
	// end inline asm
	add.s32 	%r2988, %r3319, %r2731;
	add.s32 	%r2989, %r2988, %r2730;
	add.s32 	%r2990, %r2989, 1200080426;
	shf.l.wrap.b32 	%r2991, %r2990, %r2990, 12;
	add.s32 	%r2746, %r2991, %r2742;
	// begin inline asm
	lop3.b32 %r2735, %r2746, %r2742, %r2738, 202;
	// end inline asm
	add.s32 	%r2992, %r3318, %r2735;
	add.s32 	%r2993, %r2992, %r2734;
	add.s32 	%r2994, %r2993, -1473231341;
	shf.l.wrap.b32 	%r2995, %r2994, %r2994, 17;
	add.s32 	%r2750, %r2995, %r2746;
	// begin inline asm
	lop3.b32 %r2739, %r2750, %r2746, %r2742, 202;
	// end inline asm
	add.s32 	%r2996, %r3317, %r2739;
	add.s32 	%r2997, %r2996, %r2738;
	add.s32 	%r2998, %r2997, -45705983;
	shf.l.wrap.b32 	%r2999, %r2998, %r2998, 22;
	add.s32 	%r2754, %r2999, %r2750;
	// begin inline asm
	lop3.b32 %r2743, %r2754, %r2750, %r2746, 202;
	// end inline asm
	add.s32 	%r3000, %r3316, %r2743;
	add.s32 	%r3001, %r3000, %r2742;
	add.s32 	%r3002, %r3001, 1770035416;
	shf.l.wrap.b32 	%r3003, %r3002, %r3002, 7;
	add.s32 	%r2758, %r3003, %r2754;
	// begin inline asm
	lop3.b32 %r2747, %r2758, %r2754, %r2750, 202;
	// end inline asm
	add.s32 	%r3004, %r3315, %r2747;
	add.s32 	%r3005, %r3004, %r2746;
	add.s32 	%r3006, %r3005, -1958414417;
	shf.l.wrap.b32 	%r3007, %r3006, %r3006, 12;
	add.s32 	%r2762, %r3007, %r2758;
	// begin inline asm
	lop3.b32 %r2751, %r2762, %r2758, %r2754, 202;
	// end inline asm
	add.s32 	%r3008, %r3314, %r2751;
	add.s32 	%r3009, %r3008, %r2750;
	add.s32 	%r3010, %r3009, -42063;
	shf.l.wrap.b32 	%r3011, %r3010, %r3010, 17;
	add.s32 	%r2766, %r3011, %r2762;
	// begin inline asm
	lop3.b32 %r2755, %r2766, %r2762, %r2758, 202;
	// end inline asm
	add.s32 	%r3012, %r3313, %r2755;
	add.s32 	%r3013, %r3012, %r2754;
	add.s32 	%r3014, %r3013, -1990404162;
	shf.l.wrap.b32 	%r3015, %r3014, %r3014, 22;
	add.s32 	%r2770, %r3015, %r2766;
	// begin inline asm
	lop3.b32 %r2759, %r2770, %r2766, %r2762, 202;
	// end inline asm
	add.s32 	%r3016, %r3312, %r2759;
	add.s32 	%r3017, %r3016, %r2758;
	add.s32 	%r3018, %r3017, 1804603682;
	shf.l.wrap.b32 	%r3019, %r3018, %r3018, 7;
	add.s32 	%r2774, %r3019, %r2770;
	// begin inline asm
	lop3.b32 %r2763, %r2774, %r2770, %r2766, 202;
	// end inline asm
	add.s32 	%r3020, %r3311, %r2763;
	add.s32 	%r3021, %r3020, %r2762;
	add.s32 	%r3022, %r3021, -40341101;
	shf.l.wrap.b32 	%r3023, %r3022, %r3022, 12;
	add.s32 	%r2778, %r3023, %r2774;
	// begin inline asm
	lop3.b32 %r2767, %r2778, %r2774, %r2770, 202;
	// end inline asm
	add.s32 	%r3024, %r3310, %r2767;
	add.s32 	%r3025, %r3024, %r2766;
	add.s32 	%r3026, %r3025, -1502002290;
	shf.l.wrap.b32 	%r3027, %r3026, %r3026, 17;
	add.s32 	%r2782, %r3027, %r2778;
	// begin inline asm
	lop3.b32 %r2771, %r2782, %r2778, %r2774, 202;
	// end inline asm
	add.s32 	%r3028, %r3309, %r2771;
	add.s32 	%r3029, %r3028, %r2770;
	add.s32 	%r3030, %r3029, 1236535329;
	shf.l.wrap.b32 	%r3031, %r3030, %r3030, 22;
	add.s32 	%r2786, %r3031, %r2782;
	// begin inline asm
	lop3.b32 %r2775, %r2786, %r2782, %r2778, 228;
	// end inline asm
	add.s32 	%r3032, %r3323, %r2775;
	add.s32 	%r3033, %r3032, %r2774;
	add.s32 	%r3034, %r3033, -165796510;
	shf.l.wrap.b32 	%r3035, %r3034, %r3034, 5;
	add.s32 	%r2790, %r3035, %r2786;
	// begin inline asm
	lop3.b32 %r2779, %r2790, %r2786, %r2782, 228;
	// end inline asm
	add.s32 	%r3036, %r3318, %r2779;
	add.s32 	%r3037, %r3036, %r2778;
	add.s32 	%r3038, %r3037, -1069501632;
	shf.l.wrap.b32 	%r3039, %r3038, %r3038, 9;
	add.s32 	%r2794, %r3039, %r2790;
	// begin inline asm
	lop3.b32 %r2783, %r2794, %r2790, %r2786, 228;
	// end inline asm
	add.s32 	%r3040, %r3313, %r2783;
	add.s32 	%r3041, %r3040, %r2782;
	add.s32 	%r3042, %r3041, 643717713;
	shf.l.wrap.b32 	%r3043, %r3042, %r3042, 14;
	add.s32 	%r2798, %r3043, %r2794;
	// begin inline asm
	lop3.b32 %r2787, %r2798, %r2794, %r2790, 228;
	// end inline asm
	add.s32 	%r3044, %r3324, %r2787;
	add.s32 	%r3045, %r3044, %r2786;
	add.s32 	%r3046, %r3045, -373897302;
	shf.l.wrap.b32 	%r3047, %r3046, %r3046, 20;
	add.s32 	%r2802, %r3047, %r2798;
	// begin inline asm
	lop3.b32 %r2791, %r2802, %r2798, %r2794, 228;
	// end inline asm
	add.s32 	%r3048, %r3319, %r2791;
	add.s32 	%r3049, %r3048, %r2790;
	add.s32 	%r3050, %r3049, -701558691;
	shf.l.wrap.b32 	%r3051, %r3050, %r3050, 5;
	add.s32 	%r2806, %r3051, %r2802;
	// begin inline asm
	lop3.b32 %r2795, %r2806, %r2802, %r2798, 228;
	// end inline asm
	add.s32 	%r3052, %r3314, %r2795;
	add.s32 	%r3053, %r3052, %r2794;
	add.s32 	%r3054, %r3053, 38016083;
	shf.l.wrap.b32 	%r3055, %r3054, %r3054, 9;
	add.s32 	%r2810, %r3055, %r2806;
	// begin inline asm
	lop3.b32 %r2799, %r2810, %r2806, %r2802, 228;
	// end inline asm
	add.s32 	%r3056, %r3309, %r2799;
	add.s32 	%r3057, %r3056, %r2798;
	add.s32 	%r3058, %r3057, -660478335;
	shf.l.wrap.b32 	%r3059, %r3058, %r3058, 14;
	add.s32 	%r2814, %r3059, %r2810;
	// begin inline asm
	lop3.b32 %r2803, %r2814, %r2810, %r2806, 228;
	// end inline asm
	add.s32 	%r3060, %r3320, %r2803;
	add.s32 	%r3061, %r3060, %r2802;
	add.s32 	%r3062, %r3061, -405537848;
	shf.l.wrap.b32 	%r3063, %r3062, %r3062, 20;
	add.s32 	%r2818, %r3063, %r2814;
	// begin inline asm
	lop3.b32 %r2807, %r2818, %r2814, %r2810, 228;
	// end inline asm
	add.s32 	%r3064, %r3315, %r2807;
	add.s32 	%r3065, %r3064, %r2806;
	add.s32 	%r3066, %r3065, 568446438;
	shf.l.wrap.b32 	%r3067, %r3066, %r3066, 5;
	add.s32 	%r2822, %r3067, %r2818;
	// begin inline asm
	lop3.b32 %r2811, %r2822, %r2818, %r2814, 228;
	// end inline asm
	add.s32 	%r3068, %r3310, %r2811;
	add.s32 	%r3069, %r3068, %r2810;
	add.s32 	%r3070, %r3069, -1019803690;
	shf.l.wrap.b32 	%r3071, %r3070, %r3070, 9;
	add.s32 	%r2826, %r3071, %r2822;
	// begin inline asm
	lop3.b32 %r2815, %r2826, %r2822, %r2818, 228;
	// end inline asm
	add.s32 	%r3072, %r3321, %r2815;
	add.s32 	%r3073, %r3072, %r2814;
	add.s32 	%r3074, %r3073, -187363961;
	shf.l.wrap.b32 	%r3075, %r3074, %r3074, 14;
	add.s32 	%r2830, %r3075, %r2826;
	// begin inline asm
	lop3.b32 %r2819, %r2830, %r2826, %r2822, 228;
	// end inline asm
	add.s32 	%r3076, %r3316, %r2819;
	add.s32 	%r3077, %r3076, %r2818;
	add.s32 	%r3078, %r3077, 1163531501;
	shf.l.wrap.b32 	%r3079, %r3078, %r3078, 20;
	add.s32 	%r2834, %r3079, %r2830;
	// begin inline asm
	lop3.b32 %r2823, %r2834, %r2830, %r2826, 228;
	// end inline asm
	add.s32 	%r3080, %r3311, %r2823;
	add.s32 	%r3081, %r3080, %r2822;
	add.s32 	%r3082, %r3081, -1444681467;
	shf.l.wrap.b32 	%r3083, %r3082, %r3082, 5;
	add.s32 	%r2838, %r3083, %r2834;
	// begin inline asm
	lop3.b32 %r2827, %r2838, %r2834, %r2830, 228;
	// end inline asm
	add.s32 	%r3084, %r3322, %r2827;
	add.s32 	%r3085, %r3084, %r2826;
	add.s32 	%r3086, %r3085, -51403784;
	shf.l.wrap.b32 	%r3087, %r3086, %r3086, 9;
	add.s32 	%r2842, %r3087, %r2838;
	// begin inline asm
	lop3.b32 %r2831, %r2842, %r2838, %r2834, 228;
	// end inline asm
	add.s32 	%r3088, %r3317, %r2831;
	add.s32 	%r3089, %r3088, %r2830;
	add.s32 	%r3090, %r3089, 1735328473;
	shf.l.wrap.b32 	%r3091, %r3090, %r3090, 14;
	add.s32 	%r2846, %r3091, %r2842;
	// begin inline asm
	lop3.b32 %r2835, %r2846, %r2842, %r2838, 228;
	// end inline asm
	add.s32 	%r3092, %r3312, %r2835;
	add.s32 	%r3093, %r3092, %r2834;
	add.s32 	%r3094, %r3093, -1926607734;
	shf.l.wrap.b32 	%r3095, %r3094, %r3094, 20;
	add.s32 	%r2850, %r3095, %r2846;
	// begin inline asm
	lop3.b32 %r2839, %r2850, %r2846, %r2842, 150;
	// end inline asm
	add.s32 	%r3096, %r3319, %r2839;
	add.s32 	%r3097, %r3096, %r2838;
	add.s32 	%r3098, %r3097, -378558;
	shf.l.wrap.b32 	%r3099, %r3098, %r3098, 4;
	add.s32 	%r2854, %r3099, %r2850;
	// begin inline asm
	lop3.b32 %r2843, %r2854, %r2850, %r2846, 150;
	// end inline asm
	add.s32 	%r3100, %r3316, %r2843;
	add.s32 	%r3101, %r3100, %r2842;
	add.s32 	%r3102, %r3101, -2022574463;
	shf.l.wrap.b32 	%r3103, %r3102, %r3102, 11;
	add.s32 	%r2858, %r3103, %r2854;
	// begin inline asm
	lop3.b32 %r2847, %r2858, %r2854, %r2850, 150;
	// end inline asm
	add.s32 	%r3104, %r3313, %r2847;
	add.s32 	%r3105, %r3104, %r2846;
	add.s32 	%r3106, %r3105, 1839030562;
	shf.l.wrap.b32 	%r3107, %r3106, %r3106, 16;
	add.s32 	%r2862, %r3107, %r2858;
	// begin inline asm
	lop3.b32 %r2851, %r2862, %r2858, %r2854, 150;
	// end inline asm
	add.s32 	%r3108, %r3310, %r2851;
	add.s32 	%r3109, %r3108, %r2850;
	add.s32 	%r3110, %r3109, -35309556;
	shf.l.wrap.b32 	%r3111, %r3110, %r3110, 23;
	add.s32 	%r2866, %r3111, %r2862;
	// begin inline asm
	lop3.b32 %r2855, %r2866, %r2862, %r2858, 150;
	// end inline asm
	add.s32 	%r3112, %r3323, %r2855;
	add.s32 	%r3113, %r3112, %r2854;
	add.s32 	%r3114, %r3113, -1530992060;
	shf.l.wrap.b32 	%r3115, %r3114, %r3114, 4;
	add.s32 	%r2870, %r3115, %r2866;
	// begin inline asm
	lop3.b32 %r2859, %r2870, %r2866, %r2862, 150;
	// end inline asm
	add.s32 	%r3116, %r3320, %r2859;
	add.s32 	%r3117, %r3116, %r2858;
	add.s32 	%r3118, %r3117, 1272893353;
	shf.l.wrap.b32 	%r3119, %r3118, %r3118, 11;
	add.s32 	%r2874, %r3119, %r2870;
	// begin inline asm
	lop3.b32 %r2863, %r2874, %r2870, %r2866, 150;
	// end inline asm
	add.s32 	%r3120, %r3317, %r2863;
	add.s32 	%r3121, %r3120, %r2862;
	add.s32 	%r3122, %r3121, -155497632;
	shf.l.wrap.b32 	%r3123, %r3122, %r3122, 16;
	add.s32 	%r2878, %r3123, %r2874;
	// begin inline asm
	lop3.b32 %r2867, %r2878, %r2874, %r2870, 150;
	// end inline asm
	add.s32 	%r3124, %r3314, %r2867;
	add.s32 	%r3125, %r3124, %r2866;
	add.s32 	%r3126, %r3125, -1094730640;
	shf.l.wrap.b32 	%r3127, %r3126, %r3126, 23;
	add.s32 	%r2882, %r3127, %r2878;
	// begin inline asm
	lop3.b32 %r2871, %r2882, %r2878, %r2874, 150;
	// end inline asm
	add.s32 	%r3128, %r3311, %r2871;
	add.s32 	%r3129, %r3128, %r2870;
	add.s32 	%r3130, %r3129, 681279174;
	shf.l.wrap.b32 	%r3131, %r3130, %r3130, 4;
	add.s32 	%r2886, %r3131, %r2882;
	// begin inline asm
	lop3.b32 %r2875, %r2886, %r2882, %r2878, 150;
	// end inline asm
	add.s32 	%r3132, %r3324, %r2875;
	add.s32 	%r3133, %r3132, %r2874;
	add.s32 	%r3134, %r3133, -358537222;
	shf.l.wrap.b32 	%r3135, %r3134, %r3134, 11;
	add.s32 	%r2890, %r3135, %r2886;
	// begin inline asm
	lop3.b32 %r2879, %r2890, %r2886, %r2882, 150;
	// end inline asm
	add.s32 	%r3136, %r3321, %r2879;
	add.s32 	%r3137, %r3136, %r2878;
	add.s32 	%r3138, %r3137, -722521979;
	shf.l.wrap.b32 	%r3139, %r3138, %r3138, 16;
	add.s32 	%r2894, %r3139, %r2890;
	// begin inline asm
	lop3.b32 %r2883, %r2894, %r2890, %r2886, 150;
	// end inline asm
	add.s32 	%r3140, %r3318, %r2883;
	add.s32 	%r3141, %r3140, %r2882;
	add.s32 	%r3142, %r3141, 76029189;
	shf.l.wrap.b32 	%r3143, %r3142, %r3142, 23;
	add.s32 	%r2898, %r3143, %r2894;
	// begin inline asm
	lop3.b32 %r2887, %r2898, %r2894, %r2890, 150;
	// end inline asm
	add.s32 	%r3144, %r3315, %r2887;
	add.s32 	%r3145, %r3144, %r2886;
	add.s32 	%r3146, %r3145, -640364487;
	shf.l.wrap.b32 	%r3147, %r3146, %r3146, 4;
	add.s32 	%r2902, %r3147, %r2898;
	// begin inline asm
	lop3.b32 %r2891, %r2902, %r2898, %r2894, 150;
	// end inline asm
	add.s32 	%r3148, %r3312, %r2891;
	add.s32 	%r3149, %r3148, %r2890;
	add.s32 	%r3150, %r3149, -421815835;
	shf.l.wrap.b32 	%r3151, %r3150, %r3150, 11;
	add.s32 	%r2906, %r3151, %r2902;
	// begin inline asm
	lop3.b32 %r2895, %r2906, %r2902, %r2898, 150;
	// end inline asm
	add.s32 	%r3152, %r3309, %r2895;
	add.s32 	%r3153, %r3152, %r2894;
	add.s32 	%r3154, %r3153, 530742520;
	shf.l.wrap.b32 	%r3155, %r3154, %r3154, 16;
	add.s32 	%r2910, %r3155, %r2906;
	// begin inline asm
	lop3.b32 %r2899, %r2910, %r2906, %r2902, 150;
	// end inline asm
	add.s32 	%r3156, %r3322, %r2899;
	add.s32 	%r3157, %r3156, %r2898;
	add.s32 	%r3158, %r3157, -995338651;
	shf.l.wrap.b32 	%r3159, %r3158, %r3158, 23;
	add.s32 	%r2914, %r3159, %r2910;
	// begin inline asm
	lop3.b32 %r2903, %r2914, %r2910, %r2906, 57;
	// end inline asm
	add.s32 	%r3160, %r3324, %r2903;
	add.s32 	%r3161, %r3160, %r2902;
	add.s32 	%r3162, %r3161, -198630844;
	shf.l.wrap.b32 	%r3163, %r3162, %r3162, 6;
	add.s32 	%r2918, %r3163, %r2914;
	// begin inline asm
	lop3.b32 %r2907, %r2918, %r2914, %r2910, 57;
	// end inline asm
	add.s32 	%r3164, %r3317, %r2907;
	add.s32 	%r3165, %r3164, %r2906;
	add.s32 	%r3166, %r3165, 1126891415;
	shf.l.wrap.b32 	%r3167, %r3166, %r3166, 10;
	add.s32 	%r2922, %r3167, %r2918;
	// begin inline asm
	lop3.b32 %r2911, %r2922, %r2918, %r2914, 57;
	// end inline asm
	add.s32 	%r3168, %r3310, %r2911;
	add.s32 	%r3169, %r3168, %r2910;
	add.s32 	%r3170, %r3169, -1416354905;
	shf.l.wrap.b32 	%r3171, %r3170, %r3170, 15;
	add.s32 	%r2926, %r3171, %r2922;
	// begin inline asm
	lop3.b32 %r2915, %r2926, %r2922, %r2918, 57;
	// end inline asm
	add.s32 	%r3172, %r3319, %r2915;
	add.s32 	%r3173, %r3172, %r2914;
	add.s32 	%r3174, %r3173, -57434055;
	shf.l.wrap.b32 	%r3175, %r3174, %r3174, 21;
	add.s32 	%r2930, %r3175, %r2926;
	// begin inline asm
	lop3.b32 %r2919, %r2930, %r2926, %r2922, 57;
	// end inline asm
	add.s32 	%r3176, %r3312, %r2919;
	add.s32 	%r3177, %r3176, %r2918;
	add.s32 	%r3178, %r3177, 1700485571;
	shf.l.wrap.b32 	%r3179, %r3178, %r3178, 6;
	add.s32 	%r2934, %r3179, %r2930;
	// begin inline asm
	lop3.b32 %r2923, %r2934, %r2930, %r2926, 57;
	// end inline asm
	add.s32 	%r3180, %r3321, %r2923;
	add.s32 	%r3181, %r3180, %r2922;
	add.s32 	%r3182, %r3181, -1894986606;
	shf.l.wrap.b32 	%r3183, %r3182, %r3182, 10;
	add.s32 	%r2938, %r3183, %r2934;
	// begin inline asm
	lop3.b32 %r2927, %r2938, %r2934, %r2930, 57;
	// end inline asm
	add.s32 	%r3184, %r3314, %r2927;
	add.s32 	%r3185, %r3184, %r2926;
	add.s32 	%r3186, %r3185, -1051523;
	shf.l.wrap.b32 	%r3187, %r3186, %r3186, 15;
	add.s32 	%r2942, %r3187, %r2938;
	// begin inline asm
	lop3.b32 %r2931, %r2942, %r2938, %r2934, 57;
	// end inline asm
	add.s32 	%r3188, %r3323, %r2931;
	add.s32 	%r3189, %r3188, %r2930;
	add.s32 	%r3190, %r3189, -2054922799;
	shf.l.wrap.b32 	%r3191, %r3190, %r3190, 21;
	add.s32 	%r2946, %r3191, %r2942;
	// begin inline asm
	lop3.b32 %r2935, %r2946, %r2942, %r2938, 57;
	// end inline asm
	add.s32 	%r3192, %r3316, %r2935;
	add.s32 	%r3193, %r3192, %r2934;
	add.s32 	%r3194, %r3193, 1873313359;
	shf.l.wrap.b32 	%r3195, %r3194, %r3194, 6;
	add.s32 	%r2950, %r3195, %r2946;
	// begin inline asm
	lop3.b32 %r2939, %r2950, %r2946, %r2942, 57;
	// end inline asm
	add.s32 	%r3196, %r3309, %r2939;
	add.s32 	%r3197, %r3196, %r2938;
	add.s32 	%r3198, %r3197, -30611744;
	shf.l.wrap.b32 	%r3199, %r3198, %r3198, 10;
	add.s32 	%r2954, %r3199, %r2950;
	// begin inline asm
	lop3.b32 %r2943, %r2954, %r2950, %r2946, 57;
	// end inline asm
	add.s32 	%r3200, %r3318, %r2943;
	add.s32 	%r3201, %r3200, %r2942;
	add.s32 	%r3202, %r3201, -1560198380;
	shf.l.wrap.b32 	%r3203, %r3202, %r3202, 15;
	add.s32 	%r2958, %r3203, %r2954;
	// begin inline asm
	lop3.b32 %r2947, %r2958, %r2954, %r2950, 57;
	// end inline asm
	add.s32 	%r3204, %r3311, %r2947;
	add.s32 	%r3205, %r3204, %r2946;
	add.s32 	%r3206, %r3205, 1309151649;
	shf.l.wrap.b32 	%r3207, %r3206, %r3206, 21;
	add.s32 	%r2962, %r3207, %r2958;
	// begin inline asm
	lop3.b32 %r2951, %r2962, %r2958, %r2954, 57;
	// end inline asm
	add.s32 	%r3208, %r3320, %r2951;
	add.s32 	%r3209, %r3208, %r2950;
	add.s32 	%r3210, %r3209, -145523070;
	shf.l.wrap.b32 	%r3211, %r3210, %r3210, 6;
	add.s32 	%r2966, %r3211, %r2962;
	// begin inline asm
	lop3.b32 %r2955, %r2966, %r2962, %r2958, 57;
	// end inline asm
	add.s32 	%r3212, %r3313, %r2955;
	add.s32 	%r3213, %r3212, %r2954;
	add.s32 	%r3214, %r3213, -1120210379;
	shf.l.wrap.b32 	%r3215, %r3214, %r3214, 10;
	add.s32 	%r2965, %r3215, %r2966;
	// begin inline asm
	lop3.b32 %r2959, %r2965, %r2966, %r2962, 57;
	// end inline asm
	add.s32 	%r3216, %r3322, %r2959;
	add.s32 	%r3217, %r3216, %r2958;
	add.s32 	%r3218, %r3217, 718787259;
	shf.l.wrap.b32 	%r3219, %r3218, %r3218, 15;
	add.s32 	%r2964, %r3219, %r2965;
	// begin inline asm
	lop3.b32 %r2963, %r2964, %r2965, %r2966, 57;
	// end inline asm
	add.s32 	%r3220, %r3315, %r2963;
	add.s32 	%r3221, %r3220, %r2962;
	add.s32 	%r3222, %r3221, -343485551;
	shf.l.wrap.b32 	%r3223, %r3222, %r3222, 21;
	add.s32 	%r3224, %r2966, %r2967;
	st.local.u32 	[%rd4+4], %r3224;
	add.s32 	%r3225, %r2964, %r2712;
	add.s32 	%r3226, %r3225, %r3223;
	st.local.u32 	[%rd4+8], %r3226;
	add.s32 	%r3227, %r2713, %r2964;
	st.local.u32 	[%rd4+12], %r3227;
	add.s32 	%r3228, %r2714, %r2965;
	st.local.u32 	[%rd4+16], %r3228;
	add.s64 	%rd202, %rd202, 64;
	add.s64 	%rd200, %rd200, 64;
	add.s32 	%r3325, %r3325, -64;
	setp.gt.u32 	%p44, %r3325, 63;
	@%p44 bra 	$L__BB1_50;

$L__BB1_54:
	setp.eq.s32 	%p45, %r3325, 0;
	@%p45 bra 	$L__BB1_60;

	cvt.u64.u32 	%rd140, %r3306;
	add.s64 	%rd141, %rd4, %rd140;
	add.s64 	%rd207, %rd141, 20;
	and.b32  	%r3327, %r3325, 3;
	setp.eq.s32 	%p46, %r3327, 0;
	mov.u32 	%r3328, %r3325;
	@%p46 bra 	$L__BB1_58;

	mov.u64 	%rd203, %rd207;
	mov.u64 	%rd204, %rd202;
	mov.u32 	%r3328, %r3325;

$L__BB1_57:
	.pragma "nounroll";
	add.s32 	%r3328, %r3328, -1;
	add.s64 	%rd202, %rd204, 1;
	ld.local.u8 	%rs96, [%rd204];
	add.s64 	%rd207, %rd203, 1;
	st.local.u8 	[%rd203], %rs96;
	add.s32 	%r3327, %r3327, -1;
	setp.ne.s32 	%p47, %r3327, 0;
	mov.u64 	%rd203, %rd207;
	mov.u64 	%rd204, %rd202;
	@%p47 bra 	$L__BB1_57;

$L__BB1_58:
	add.s32 	%r3229, %r3325, -1;
	setp.lt.u32 	%p48, %r3229, 3;
	@%p48 bra 	$L__BB1_60;

$L__BB1_59:
	ld.local.u8 	%rs97, [%rd202];
	st.local.u8 	[%rd207], %rs97;
	ld.local.u8 	%rs98, [%rd202+1];
	st.local.u8 	[%rd207+1], %rs98;
	ld.local.u8 	%rs99, [%rd202+2];
	st.local.u8 	[%rd207+2], %rs99;
	add.s64 	%rd112, %rd202, 4;
	ld.local.u8 	%rs100, [%rd202+3];
	add.s64 	%rd113, %rd207, 4;
	st.local.u8 	[%rd207+3], %rs100;
	add.s32 	%r3328, %r3328, -4;
	setp.ne.s32 	%p49, %r3328, 0;
	mov.u64 	%rd207, %rd113;
	mov.u64 	%rd202, %rd112;
	@%p49 bra 	$L__BB1_59;

$L__BB1_60:
	mov.b32 	%r3242, %envreg3;
	mov.u32 	%r3241, %tid.x;
	add.s32 	%r3240, %r3241, %r3242;
	mov.u32 	%r3239, %ctaid.x;
	mov.u32 	%r3238, %ntid.x;
	mad.lo.s32 	%r3237, %r3238, %r3239, %r3240;
	cvt.u64.u32 	%rd148, %r3237;
	ld.param.u64 	%rd147, [sspr_md5_param_2];
	ld.param.u64 	%rd146, [sspr_md5_param_3];
	ld.local.u32 	%r3230, [%rd4+8];
	ld.local.u32 	%r3231, [%rd4+4];
	ld.local.u32 	%r3232, [%rd4+16];
	ld.local.u32 	%r3233, [%rd4+12];
	mul.lo.s64 	%rd142, %rd148, 72;
	add.s64 	%rd143, %rd146, %rd142;
	st.global.v2.u32 	[%rd143], {%r3231, %r3230};
	st.global.v2.u32 	[%rd143+8], {%r3233, %r3232};
	ld.const.u32 	%r3234, [%rd147+4];
	add.s32 	%r3235, %r3234, -1;
	st.global.u32 	[%rd143+64], %r3235;
	ret;

}
	// .globl	loop_sha1
.entry loop_sha1(
	.param .u64 .ptr .global .align 8 loop_sha1_param_0,
	.param .u64 .ptr .global .align 8 loop_sha1_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<932>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd4, [loop_sha1_param_1];
	mov.b32 	%r31, %envreg3;
	mov.u32 	%r32, %ctaid.x;
	mov.u32 	%r33, %ntid.x;
	mov.u32 	%r34, %tid.x;
	add.s32 	%r35, %r34, %r31;
	mad.lo.s32 	%r36, %r33, %r32, %r35;
	cvt.u64.u32 	%rd1, %r36;
	mul.wide.u32 	%rd5, %r36, 72;
	add.s64 	%rd6, %rd4, %rd5;
	add.s64 	%rd2, %rd6, 64;
	ld.global.u32 	%r1, [%rd6+64];
	min.u32 	%r2, %r1, 813;
	ld.global.v2.u32 	{%r927, %r928}, [%rd6];
	ld.global.u32 	%r929, [%rd6+8];
	.pragma "used_bytes_mask 240";
	ld.global.v2.u32 	{%r39, %r930}, [%rd6+8];
	ld.global.u32 	%r931, [%rd6+16];
	setp.eq.s32 	%p1, %r2, 0;
	@%p1 bra 	$L__BB2_3;

	mov.u32 	%r46, 1732584193;
	shf.l.wrap.b32 	%r50, %r46, %r46, 5;
	mov.u32 	%r42, -271733879;
	mov.u32 	%r48, -1732584194;
	mov.u32 	%r44, 271733878;
	// begin inline asm
	lop3.b32 %r41, %r42, %r48, %r44, 202;
	// end inline asm
	add.s32 	%r51, %r50, %r41;
	add.s32 	%r8, %r51, 508910473;
	shf.l.wrap.b32 	%r47, %r42, %r42, 30;
	// begin inline asm
	lop3.b32 %r45, %r46, %r47, %r48, 202;
	// end inline asm
	add.s32 	%r10, %r45, 1790234127;
	add.s32 	%r11, %r47, 1518500249;
	shf.l.wrap.b32 	%r12, %r46, %r46, 30;
	add.s32 	%r13, %r12, 1518500249;
	mov.u32 	%r926, 0;

$L__BB2_2:
	add.s32 	%r53, %r8, %r927;
	shf.l.wrap.b32 	%r364, %r53, %r53, 5;
	add.s32 	%r365, %r10, %r928;
	add.s32 	%r57, %r365, %r364;
	shf.l.wrap.b32 	%r366, %r57, %r57, 5;
	// begin inline asm
	lop3.b32 %r52, %r53, %r12, %r47, 202;
	// end inline asm
	add.s32 	%r367, %r52, %r929;
	add.s32 	%r368, %r367, %r366;
	add.s32 	%r61, %r368, -214083945;
	shf.l.wrap.b32 	%r63, %r53, %r53, 30;
	shf.l.wrap.b32 	%r369, %r61, %r61, 5;
	// begin inline asm
	lop3.b32 %r56, %r57, %r63, %r12, 202;
	// end inline asm
	add.s32 	%r370, %r11, %r56;
	add.s32 	%r371, %r370, %r930;
	add.s32 	%r65, %r371, %r369;
	shf.l.wrap.b32 	%r67, %r57, %r57, 30;
	shf.l.wrap.b32 	%r372, %r65, %r65, 5;
	// begin inline asm
	lop3.b32 %r60, %r61, %r67, %r63, 202;
	// end inline asm
	add.s32 	%r373, %r13, %r60;
	add.s32 	%r374, %r373, %r931;
	add.s32 	%r69, %r374, %r372;
	shf.l.wrap.b32 	%r71, %r61, %r61, 30;
	shf.l.wrap.b32 	%r375, %r69, %r69, 5;
	// begin inline asm
	lop3.b32 %r64, %r65, %r71, %r67, 202;
	// end inline asm
	add.s32 	%r376, %r63, %r64;
	add.s32 	%r377, %r376, 1518500249;
	xor.b32  	%r378, %r377, -2147483648;
	add.s32 	%r73, %r378, %r375;
	shf.l.wrap.b32 	%r75, %r65, %r65, 30;
	shf.l.wrap.b32 	%r379, %r73, %r73, 5;
	// begin inline asm
	lop3.b32 %r68, %r69, %r75, %r71, 202;
	// end inline asm
	add.s32 	%r380, %r67, %r68;
	add.s32 	%r381, %r380, %r379;
	add.s32 	%r77, %r381, 1518500249;
	shf.l.wrap.b32 	%r79, %r69, %r69, 30;
	shf.l.wrap.b32 	%r382, %r77, %r77, 5;
	// begin inline asm
	lop3.b32 %r72, %r73, %r79, %r75, 202;
	// end inline asm
	add.s32 	%r383, %r72, %r71;
	add.s32 	%r384, %r383, %r382;
	add.s32 	%r81, %r384, 1518500249;
	shf.l.wrap.b32 	%r83, %r73, %r73, 30;
	shf.l.wrap.b32 	%r385, %r81, %r81, 5;
	// begin inline asm
	lop3.b32 %r76, %r77, %r83, %r79, 202;
	// end inline asm
	add.s32 	%r386, %r76, %r75;
	add.s32 	%r387, %r386, %r385;
	add.s32 	%r85, %r387, 1518500249;
	shf.l.wrap.b32 	%r87, %r77, %r77, 30;
	shf.l.wrap.b32 	%r388, %r85, %r85, 5;
	// begin inline asm
	lop3.b32 %r80, %r81, %r87, %r83, 202;
	// end inline asm
	add.s32 	%r389, %r80, %r79;
	add.s32 	%r390, %r389, %r388;
	add.s32 	%r89, %r390, 1518500249;
	shf.l.wrap.b32 	%r91, %r81, %r81, 30;
	shf.l.wrap.b32 	%r391, %r89, %r89, 5;
	// begin inline asm
	lop3.b32 %r84, %r85, %r91, %r87, 202;
	// end inline asm
	add.s32 	%r392, %r84, %r83;
	add.s32 	%r393, %r392, %r391;
	add.s32 	%r93, %r393, 1518500249;
	shf.l.wrap.b32 	%r95, %r85, %r85, 30;
	shf.l.wrap.b32 	%r394, %r93, %r93, 5;
	// begin inline asm
	lop3.b32 %r88, %r89, %r95, %r91, 202;
	// end inline asm
	add.s32 	%r395, %r88, %r87;
	add.s32 	%r396, %r395, %r394;
	add.s32 	%r97, %r396, 1518500249;
	shf.l.wrap.b32 	%r99, %r89, %r89, 30;
	shf.l.wrap.b32 	%r397, %r97, %r97, 5;
	// begin inline asm
	lop3.b32 %r92, %r93, %r99, %r95, 202;
	// end inline asm
	add.s32 	%r398, %r92, %r91;
	add.s32 	%r399, %r398, %r397;
	add.s32 	%r101, %r399, 1518500249;
	shf.l.wrap.b32 	%r103, %r93, %r93, 30;
	shf.l.wrap.b32 	%r400, %r101, %r101, 5;
	// begin inline asm
	lop3.b32 %r96, %r97, %r103, %r99, 202;
	// end inline asm
	add.s32 	%r401, %r96, %r95;
	add.s32 	%r402, %r401, %r400;
	add.s32 	%r105, %r402, 1518500249;
	shf.l.wrap.b32 	%r107, %r97, %r97, 30;
	shf.l.wrap.b32 	%r403, %r105, %r105, 5;
	// begin inline asm
	lop3.b32 %r100, %r101, %r107, %r103, 202;
	// end inline asm
	add.s32 	%r404, %r100, %r99;
	add.s32 	%r405, %r404, %r403;
	add.s32 	%r109, %r405, 1518500249;
	shf.l.wrap.b32 	%r111, %r101, %r101, 30;
	shf.l.wrap.b32 	%r406, %r109, %r109, 5;
	// begin inline asm
	lop3.b32 %r104, %r105, %r111, %r107, 202;
	// end inline asm
	add.s32 	%r407, %r104, %r103;
	add.s32 	%r408, %r407, %r406;
	add.s32 	%r113, %r408, 1518500409;
	shf.l.wrap.b32 	%r115, %r105, %r105, 30;
	shf.l.wrap.b32 	%r409, %r113, %r113, 5;
	// begin inline asm
	lop3.b32 %r108, %r109, %r115, %r111, 202;
	// end inline asm
	xor.b32  	%r410, %r927, %r929;
	shf.l.wrap.b32 	%r411, %r410, %r410, 1;
	add.s32 	%r412, %r108, %r411;
	add.s32 	%r413, %r412, %r107;
	add.s32 	%r414, %r413, %r409;
	add.s32 	%r117, %r414, 1518500249;
	shf.l.wrap.b32 	%r119, %r109, %r109, 30;
	shf.l.wrap.b32 	%r415, %r117, %r117, 5;
	// begin inline asm
	lop3.b32 %r112, %r113, %r119, %r115, 202;
	// end inline asm
	xor.b32  	%r416, %r928, %r930;
	shf.l.wrap.b32 	%r417, %r416, %r416, 1;
	add.s32 	%r418, %r112, %r417;
	add.s32 	%r419, %r418, %r111;
	add.s32 	%r420, %r419, %r415;
	add.s32 	%r121, %r420, 1518500249;
	shf.l.wrap.b32 	%r123, %r113, %r113, 30;
	shf.l.wrap.b32 	%r421, %r121, %r121, 5;
	// begin inline asm
	lop3.b32 %r116, %r117, %r123, %r119, 202;
	// end inline asm
	xor.b32  	%r422, %r931, %r929;
	xor.b32  	%r423, %r422, 160;
	shf.l.wrap.b32 	%r424, %r423, %r423, 1;
	add.s32 	%r425, %r116, %r424;
	add.s32 	%r426, %r425, %r115;
	add.s32 	%r427, %r426, %r421;
	add.s32 	%r125, %r427, 1518500249;
	shf.l.wrap.b32 	%r127, %r117, %r117, 30;
	shf.l.wrap.b32 	%r428, %r125, %r125, 5;
	// begin inline asm
	lop3.b32 %r120, %r121, %r127, %r123, 202;
	// end inline asm
	xor.b32  	%r429, %r411, %r930;
	xor.b32  	%r430, %r429, -2147483648;
	shf.l.wrap.b32 	%r431, %r430, %r430, 1;
	add.s32 	%r432, %r120, %r431;
	add.s32 	%r433, %r432, %r119;
	add.s32 	%r434, %r433, %r428;
	add.s32 	%r129, %r434, 1518500249;
	shf.l.wrap.b32 	%r131, %r121, %r121, 30;
	shf.l.wrap.b32 	%r435, %r129, %r129, 5;
	// begin inline asm
	lop3.b32 %r124, %r125, %r131, %r127, 150;
	// end inline asm
	xor.b32  	%r436, %r931, %r417;
	shf.l.wrap.b32 	%r437, %r436, %r436, 1;
	add.s32 	%r438, %r124, %r437;
	add.s32 	%r439, %r438, %r123;
	add.s32 	%r440, %r439, %r435;
	add.s32 	%r133, %r440, 1859775393;
	shf.l.wrap.b32 	%r135, %r125, %r125, 30;
	shf.l.wrap.b32 	%r441, %r133, %r133, 5;
	// begin inline asm
	lop3.b32 %r128, %r129, %r135, %r131, 150;
	// end inline asm
	xor.b32  	%r442, %r424, -2147483648;
	shf.l.wrap.b32 	%r443, %r442, %r442, 1;
	add.s32 	%r444, %r128, %r443;
	add.s32 	%r445, %r444, %r127;
	add.s32 	%r446, %r445, %r441;
	add.s32 	%r137, %r446, 1859775393;
	shf.l.wrap.b32 	%r139, %r129, %r129, 30;
	shf.l.wrap.b32 	%r447, %r137, %r137, 5;
	// begin inline asm
	lop3.b32 %r132, %r133, %r139, %r135, 150;
	// end inline asm
	shf.l.wrap.b32 	%r448, %r431, %r431, 1;
	add.s32 	%r449, %r132, %r448;
	add.s32 	%r450, %r449, %r131;
	add.s32 	%r451, %r450, %r447;
	add.s32 	%r141, %r451, 1859775393;
	shf.l.wrap.b32 	%r143, %r133, %r133, 30;
	shf.l.wrap.b32 	%r452, %r141, %r141, 5;
	// begin inline asm
	lop3.b32 %r136, %r137, %r143, %r139, 150;
	// end inline asm
	xor.b32  	%r453, %r437, 160;
	shf.l.wrap.b32 	%r454, %r453, %r453, 1;
	add.s32 	%r455, %r136, %r454;
	add.s32 	%r456, %r455, %r135;
	add.s32 	%r457, %r456, %r452;
	add.s32 	%r145, %r457, 1859775393;
	shf.l.wrap.b32 	%r147, %r137, %r137, 30;
	shf.l.wrap.b32 	%r458, %r145, %r145, 5;
	// begin inline asm
	lop3.b32 %r140, %r141, %r147, %r143, 150;
	// end inline asm
	xor.b32  	%r459, %r411, %r443;
	shf.l.wrap.b32 	%r460, %r459, %r459, 1;
	add.s32 	%r461, %r140, %r460;
	add.s32 	%r462, %r461, %r139;
	add.s32 	%r463, %r462, %r458;
	add.s32 	%r149, %r463, 1859775393;
	shf.l.wrap.b32 	%r151, %r141, %r141, 30;
	shf.l.wrap.b32 	%r464, %r149, %r149, 5;
	// begin inline asm
	lop3.b32 %r144, %r145, %r151, %r147, 150;
	// end inline asm
	xor.b32  	%r465, %r417, %r448;
	shf.l.wrap.b32 	%r466, %r465, %r465, 1;
	add.s32 	%r467, %r144, %r466;
	add.s32 	%r468, %r467, %r143;
	add.s32 	%r469, %r468, %r464;
	add.s32 	%r153, %r469, 1859775393;
	shf.l.wrap.b32 	%r155, %r145, %r145, 30;
	shf.l.wrap.b32 	%r470, %r153, %r153, 5;
	// begin inline asm
	lop3.b32 %r148, %r149, %r155, %r151, 150;
	// end inline asm
	xor.b32  	%r471, %r424, %r454;
	shf.l.wrap.b32 	%r472, %r471, %r471, 1;
	add.s32 	%r473, %r148, %r472;
	add.s32 	%r474, %r473, %r147;
	add.s32 	%r475, %r474, %r470;
	add.s32 	%r157, %r475, 1859775393;
	shf.l.wrap.b32 	%r159, %r149, %r149, 30;
	shf.l.wrap.b32 	%r476, %r157, %r157, 5;
	// begin inline asm
	lop3.b32 %r152, %r153, %r159, %r155, 150;
	// end inline asm
	xor.b32  	%r477, %r431, %r460;
	shf.l.wrap.b32 	%r478, %r477, %r477, 1;
	add.s32 	%r479, %r152, %r478;
	add.s32 	%r480, %r479, %r151;
	add.s32 	%r481, %r480, %r476;
	add.s32 	%r161, %r481, 1859775393;
	shf.l.wrap.b32 	%r163, %r153, %r153, 30;
	shf.l.wrap.b32 	%r482, %r161, %r161, 5;
	// begin inline asm
	lop3.b32 %r156, %r157, %r163, %r159, 150;
	// end inline asm
	xor.b32  	%r483, %r437, %r466;
	shf.l.wrap.b32 	%r484, %r483, %r483, 1;
	add.s32 	%r485, %r156, %r484;
	add.s32 	%r486, %r485, %r155;
	add.s32 	%r487, %r486, %r482;
	add.s32 	%r165, %r487, 1859775393;
	shf.l.wrap.b32 	%r167, %r157, %r157, 30;
	shf.l.wrap.b32 	%r488, %r165, %r165, 5;
	// begin inline asm
	lop3.b32 %r160, %r161, %r167, %r163, 150;
	// end inline asm
	xor.b32  	%r489, %r443, %r472;
	xor.b32  	%r490, %r489, 160;
	shf.l.wrap.b32 	%r491, %r490, %r490, 1;
	add.s32 	%r492, %r160, %r491;
	add.s32 	%r493, %r492, %r159;
	add.s32 	%r494, %r493, %r488;
	add.s32 	%r169, %r494, 1859775393;
	shf.l.wrap.b32 	%r171, %r161, %r161, 30;
	shf.l.wrap.b32 	%r495, %r169, %r169, 5;
	// begin inline asm
	lop3.b32 %r164, %r165, %r171, %r167, 150;
	// end inline asm
	xor.b32  	%r496, %r448, %r478;
	xor.b32  	%r497, %r496, %r411;
	shf.l.wrap.b32 	%r498, %r497, %r497, 1;
	add.s32 	%r499, %r164, %r498;
	add.s32 	%r500, %r499, %r163;
	add.s32 	%r501, %r500, %r495;
	add.s32 	%r173, %r501, 1859775393;
	shf.l.wrap.b32 	%r175, %r165, %r165, 30;
	shf.l.wrap.b32 	%r502, %r173, %r173, 5;
	// begin inline asm
	lop3.b32 %r168, %r169, %r175, %r171, 150;
	// end inline asm
	xor.b32  	%r503, %r454, %r484;
	xor.b32  	%r504, %r503, %r417;
	xor.b32  	%r505, %r504, 160;
	shf.l.wrap.b32 	%r506, %r505, %r505, 1;
	add.s32 	%r507, %r168, %r506;
	add.s32 	%r508, %r507, %r167;
	add.s32 	%r509, %r508, %r502;
	add.s32 	%r177, %r509, 1859775393;
	shf.l.wrap.b32 	%r179, %r169, %r169, 30;
	shf.l.wrap.b32 	%r510, %r177, %r177, 5;
	// begin inline asm
	lop3.b32 %r172, %r173, %r179, %r175, 150;
	// end inline asm
	xor.b32  	%r511, %r460, %r491;
	xor.b32  	%r512, %r511, %r424;
	xor.b32  	%r513, %r512, %r411;
	shf.l.wrap.b32 	%r514, %r513, %r513, 1;
	add.s32 	%r515, %r172, %r514;
	add.s32 	%r516, %r515, %r171;
	add.s32 	%r517, %r516, %r510;
	add.s32 	%r181, %r517, 1859775393;
	shf.l.wrap.b32 	%r183, %r173, %r173, 30;
	shf.l.wrap.b32 	%r518, %r181, %r181, 5;
	// begin inline asm
	lop3.b32 %r176, %r177, %r183, %r179, 150;
	// end inline asm
	xor.b32  	%r519, %r466, %r498;
	xor.b32  	%r520, %r519, %r431;
	xor.b32  	%r521, %r520, %r417;
	shf.l.wrap.b32 	%r522, %r521, %r521, 1;
	add.s32 	%r523, %r176, %r522;
	add.s32 	%r524, %r523, %r175;
	add.s32 	%r525, %r524, %r518;
	add.s32 	%r185, %r525, 1859775393;
	shf.l.wrap.b32 	%r187, %r177, %r177, 30;
	shf.l.wrap.b32 	%r526, %r185, %r185, 5;
	// begin inline asm
	lop3.b32 %r180, %r181, %r187, %r183, 150;
	// end inline asm
	xor.b32  	%r527, %r472, %r506;
	xor.b32  	%r528, %r527, %r437;
	xor.b32  	%r529, %r528, %r424;
	shf.l.wrap.b32 	%r530, %r529, %r529, 1;
	add.s32 	%r531, %r180, %r530;
	add.s32 	%r532, %r531, %r179;
	add.s32 	%r533, %r532, %r526;
	add.s32 	%r189, %r533, 1859775393;
	shf.l.wrap.b32 	%r191, %r181, %r181, 30;
	shf.l.wrap.b32 	%r534, %r189, %r189, 5;
	// begin inline asm
	lop3.b32 %r184, %r185, %r191, %r187, 150;
	// end inline asm
	xor.b32  	%r535, %r478, %r514;
	xor.b32  	%r536, %r535, %r443;
	xor.b32  	%r537, %r536, %r431;
	shf.l.wrap.b32 	%r538, %r537, %r537, 1;
	add.s32 	%r539, %r184, %r538;
	add.s32 	%r540, %r539, %r183;
	add.s32 	%r541, %r540, %r534;
	add.s32 	%r193, %r541, 1859775393;
	shf.l.wrap.b32 	%r195, %r185, %r185, 30;
	shf.l.wrap.b32 	%r542, %r193, %r193, 5;
	// begin inline asm
	lop3.b32 %r188, %r189, %r195, %r191, 150;
	// end inline asm
	xor.b32  	%r543, %r484, %r522;
	xor.b32  	%r544, %r543, %r448;
	xor.b32  	%r545, %r544, %r437;
	shf.l.wrap.b32 	%r546, %r545, %r545, 1;
	add.s32 	%r547, %r188, %r546;
	add.s32 	%r548, %r547, %r187;
	add.s32 	%r549, %r548, %r542;
	add.s32 	%r197, %r549, 1859775393;
	shf.l.wrap.b32 	%r199, %r189, %r189, 30;
	shf.l.wrap.b32 	%r550, %r197, %r197, 5;
	// begin inline asm
	lop3.b32 %r192, %r193, %r199, %r195, 150;
	// end inline asm
	xor.b32  	%r551, %r491, %r530;
	xor.b32  	%r552, %r551, %r454;
	xor.b32  	%r553, %r552, %r443;
	shf.l.wrap.b32 	%r554, %r553, %r553, 1;
	add.s32 	%r555, %r192, %r554;
	add.s32 	%r556, %r555, %r191;
	add.s32 	%r557, %r556, %r550;
	add.s32 	%r201, %r557, 1859775393;
	shf.l.wrap.b32 	%r203, %r193, %r193, 30;
	shf.l.wrap.b32 	%r558, %r201, %r201, 5;
	// begin inline asm
	lop3.b32 %r196, %r197, %r203, %r199, 150;
	// end inline asm
	xor.b32  	%r559, %r498, %r538;
	xor.b32  	%r560, %r559, %r460;
	xor.b32  	%r561, %r560, %r448;
	shf.l.wrap.b32 	%r562, %r561, %r561, 1;
	add.s32 	%r563, %r196, %r562;
	add.s32 	%r564, %r563, %r195;
	add.s32 	%r565, %r564, %r558;
	add.s32 	%r205, %r565, 1859775393;
	shf.l.wrap.b32 	%r207, %r197, %r197, 30;
	shf.l.wrap.b32 	%r566, %r205, %r205, 5;
	// begin inline asm
	lop3.b32 %r200, %r201, %r207, %r203, 150;
	// end inline asm
	xor.b32  	%r567, %r506, %r546;
	xor.b32  	%r568, %r567, %r466;
	xor.b32  	%r569, %r568, %r454;
	shf.l.wrap.b32 	%r570, %r569, %r569, 1;
	add.s32 	%r571, %r200, %r570;
	add.s32 	%r572, %r571, %r199;
	add.s32 	%r573, %r572, %r566;
	add.s32 	%r209, %r573, 1859775393;
	shf.l.wrap.b32 	%r211, %r201, %r201, 30;
	shf.l.wrap.b32 	%r574, %r209, %r209, 5;
	// begin inline asm
	lop3.b32 %r204, %r205, %r211, %r207, 232;
	// end inline asm
	xor.b32  	%r575, %r514, %r554;
	xor.b32  	%r576, %r575, %r472;
	xor.b32  	%r577, %r576, %r460;
	shf.l.wrap.b32 	%r578, %r577, %r577, 1;
	add.s32 	%r579, %r204, %r578;
	add.s32 	%r580, %r579, %r203;
	add.s32 	%r581, %r580, %r574;
	add.s32 	%r213, %r581, -1894007588;
	shf.l.wrap.b32 	%r215, %r205, %r205, 30;
	shf.l.wrap.b32 	%r582, %r213, %r213, 5;
	// begin inline asm
	lop3.b32 %r208, %r209, %r215, %r211, 232;
	// end inline asm
	xor.b32  	%r583, %r522, %r562;
	xor.b32  	%r584, %r583, %r478;
	xor.b32  	%r585, %r584, %r466;
	shf.l.wrap.b32 	%r586, %r585, %r585, 1;
	add.s32 	%r587, %r208, %r586;
	add.s32 	%r588, %r587, %r207;
	add.s32 	%r589, %r588, %r582;
	add.s32 	%r217, %r589, -1894007588;
	shf.l.wrap.b32 	%r219, %r209, %r209, 30;
	shf.l.wrap.b32 	%r590, %r217, %r217, 5;
	// begin inline asm
	lop3.b32 %r212, %r213, %r219, %r215, 232;
	// end inline asm
	xor.b32  	%r591, %r530, %r570;
	xor.b32  	%r592, %r591, %r484;
	xor.b32  	%r593, %r592, %r472;
	shf.l.wrap.b32 	%r594, %r593, %r593, 1;
	add.s32 	%r595, %r212, %r594;
	add.s32 	%r596, %r595, %r211;
	add.s32 	%r597, %r596, %r590;
	add.s32 	%r221, %r597, -1894007588;
	shf.l.wrap.b32 	%r223, %r213, %r213, 30;
	shf.l.wrap.b32 	%r598, %r221, %r221, 5;
	// begin inline asm
	lop3.b32 %r216, %r217, %r223, %r219, 232;
	// end inline asm
	xor.b32  	%r599, %r538, %r578;
	xor.b32  	%r600, %r599, %r491;
	xor.b32  	%r601, %r600, %r478;
	shf.l.wrap.b32 	%r602, %r601, %r601, 1;
	add.s32 	%r603, %r216, %r602;
	add.s32 	%r604, %r603, %r215;
	add.s32 	%r605, %r604, %r598;
	add.s32 	%r225, %r605, -1894007588;
	shf.l.wrap.b32 	%r227, %r217, %r217, 30;
	shf.l.wrap.b32 	%r606, %r225, %r225, 5;
	// begin inline asm
	lop3.b32 %r220, %r221, %r227, %r223, 232;
	// end inline asm
	xor.b32  	%r607, %r546, %r586;
	xor.b32  	%r608, %r607, %r498;
	xor.b32  	%r609, %r608, %r484;
	shf.l.wrap.b32 	%r610, %r609, %r609, 1;
	add.s32 	%r611, %r220, %r610;
	add.s32 	%r612, %r611, %r219;
	add.s32 	%r613, %r612, %r606;
	add.s32 	%r229, %r613, -1894007588;
	shf.l.wrap.b32 	%r231, %r221, %r221, 30;
	shf.l.wrap.b32 	%r614, %r229, %r229, 5;
	// begin inline asm
	lop3.b32 %r224, %r225, %r231, %r227, 232;
	// end inline asm
	xor.b32  	%r615, %r554, %r594;
	xor.b32  	%r616, %r615, %r506;
	xor.b32  	%r617, %r616, %r491;
	shf.l.wrap.b32 	%r618, %r617, %r617, 1;
	add.s32 	%r619, %r224, %r618;
	add.s32 	%r620, %r619, %r223;
	add.s32 	%r621, %r620, %r614;
	add.s32 	%r233, %r621, -1894007588;
	shf.l.wrap.b32 	%r235, %r225, %r225, 30;
	shf.l.wrap.b32 	%r622, %r233, %r233, 5;
	// begin inline asm
	lop3.b32 %r228, %r229, %r235, %r231, 232;
	// end inline asm
	xor.b32  	%r623, %r562, %r602;
	xor.b32  	%r624, %r623, %r514;
	xor.b32  	%r625, %r624, %r498;
	shf.l.wrap.b32 	%r626, %r625, %r625, 1;
	add.s32 	%r627, %r228, %r626;
	add.s32 	%r628, %r627, %r227;
	add.s32 	%r629, %r628, %r622;
	add.s32 	%r237, %r629, -1894007588;
	shf.l.wrap.b32 	%r239, %r229, %r229, 30;
	shf.l.wrap.b32 	%r630, %r237, %r237, 5;
	// begin inline asm
	lop3.b32 %r232, %r233, %r239, %r235, 232;
	// end inline asm
	xor.b32  	%r631, %r570, %r610;
	xor.b32  	%r632, %r631, %r522;
	xor.b32  	%r633, %r632, %r506;
	shf.l.wrap.b32 	%r634, %r633, %r633, 1;
	add.s32 	%r635, %r232, %r634;
	add.s32 	%r636, %r635, %r231;
	add.s32 	%r637, %r636, %r630;
	add.s32 	%r241, %r637, -1894007588;
	shf.l.wrap.b32 	%r243, %r233, %r233, 30;
	shf.l.wrap.b32 	%r638, %r241, %r241, 5;
	// begin inline asm
	lop3.b32 %r236, %r237, %r243, %r239, 232;
	// end inline asm
	xor.b32  	%r639, %r578, %r618;
	xor.b32  	%r640, %r639, %r530;
	xor.b32  	%r641, %r640, %r514;
	shf.l.wrap.b32 	%r642, %r641, %r641, 1;
	add.s32 	%r643, %r236, %r642;
	add.s32 	%r644, %r643, %r235;
	add.s32 	%r645, %r644, %r638;
	add.s32 	%r245, %r645, -1894007588;
	shf.l.wrap.b32 	%r247, %r237, %r237, 30;
	shf.l.wrap.b32 	%r646, %r245, %r245, 5;
	// begin inline asm
	lop3.b32 %r240, %r241, %r247, %r243, 232;
	// end inline asm
	xor.b32  	%r647, %r586, %r626;
	xor.b32  	%r648, %r647, %r538;
	xor.b32  	%r649, %r648, %r522;
	shf.l.wrap.b32 	%r650, %r649, %r649, 1;
	add.s32 	%r651, %r240, %r650;
	add.s32 	%r652, %r651, %r239;
	add.s32 	%r653, %r652, %r646;
	add.s32 	%r249, %r653, -1894007588;
	shf.l.wrap.b32 	%r251, %r241, %r241, 30;
	shf.l.wrap.b32 	%r654, %r249, %r249, 5;
	// begin inline asm
	lop3.b32 %r244, %r245, %r251, %r247, 232;
	// end inline asm
	xor.b32  	%r655, %r594, %r634;
	xor.b32  	%r656, %r655, %r546;
	xor.b32  	%r657, %r656, %r530;
	shf.l.wrap.b32 	%r658, %r657, %r657, 1;
	add.s32 	%r659, %r244, %r658;
	add.s32 	%r660, %r659, %r243;
	add.s32 	%r661, %r660, %r654;
	add.s32 	%r253, %r661, -1894007588;
	shf.l.wrap.b32 	%r255, %r245, %r245, 30;
	shf.l.wrap.b32 	%r662, %r253, %r253, 5;
	// begin inline asm
	lop3.b32 %r248, %r249, %r255, %r251, 232;
	// end inline asm
	xor.b32  	%r663, %r602, %r642;
	xor.b32  	%r664, %r663, %r554;
	xor.b32  	%r665, %r664, %r538;
	shf.l.wrap.b32 	%r666, %r665, %r665, 1;
	add.s32 	%r667, %r248, %r666;
	add.s32 	%r668, %r667, %r247;
	add.s32 	%r669, %r668, %r662;
	add.s32 	%r257, %r669, -1894007588;
	shf.l.wrap.b32 	%r259, %r249, %r249, 30;
	shf.l.wrap.b32 	%r670, %r257, %r257, 5;
	// begin inline asm
	lop3.b32 %r252, %r253, %r259, %r255, 232;
	// end inline asm
	xor.b32  	%r671, %r610, %r650;
	xor.b32  	%r672, %r671, %r562;
	xor.b32  	%r673, %r672, %r546;
	shf.l.wrap.b32 	%r674, %r673, %r673, 1;
	add.s32 	%r675, %r252, %r674;
	add.s32 	%r676, %r675, %r251;
	add.s32 	%r677, %r676, %r670;
	add.s32 	%r261, %r677, -1894007588;
	shf.l.wrap.b32 	%r263, %r253, %r253, 30;
	shf.l.wrap.b32 	%r678, %r261, %r261, 5;
	// begin inline asm
	lop3.b32 %r256, %r257, %r263, %r259, 232;
	// end inline asm
	xor.b32  	%r679, %r618, %r658;
	xor.b32  	%r680, %r679, %r570;
	xor.b32  	%r681, %r680, %r554;
	shf.l.wrap.b32 	%r682, %r681, %r681, 1;
	add.s32 	%r683, %r256, %r682;
	add.s32 	%r684, %r683, %r255;
	add.s32 	%r685, %r684, %r678;
	add.s32 	%r265, %r685, -1894007588;
	shf.l.wrap.b32 	%r267, %r257, %r257, 30;
	shf.l.wrap.b32 	%r686, %r265, %r265, 5;
	// begin inline asm
	lop3.b32 %r260, %r261, %r267, %r263, 232;
	// end inline asm
	xor.b32  	%r687, %r626, %r666;
	xor.b32  	%r688, %r687, %r578;
	xor.b32  	%r689, %r688, %r562;
	shf.l.wrap.b32 	%r690, %r689, %r689, 1;
	add.s32 	%r691, %r260, %r690;
	add.s32 	%r692, %r691, %r259;
	add.s32 	%r693, %r692, %r686;
	add.s32 	%r269, %r693, -1894007588;
	shf.l.wrap.b32 	%r271, %r261, %r261, 30;
	shf.l.wrap.b32 	%r694, %r269, %r269, 5;
	// begin inline asm
	lop3.b32 %r264, %r265, %r271, %r267, 232;
	// end inline asm
	xor.b32  	%r695, %r634, %r674;
	xor.b32  	%r696, %r695, %r586;
	xor.b32  	%r697, %r696, %r570;
	shf.l.wrap.b32 	%r698, %r697, %r697, 1;
	add.s32 	%r699, %r264, %r698;
	add.s32 	%r700, %r699, %r263;
	add.s32 	%r701, %r700, %r694;
	add.s32 	%r273, %r701, -1894007588;
	shf.l.wrap.b32 	%r275, %r265, %r265, 30;
	shf.l.wrap.b32 	%r702, %r273, %r273, 5;
	// begin inline asm
	lop3.b32 %r268, %r269, %r275, %r271, 232;
	// end inline asm
	xor.b32  	%r703, %r642, %r682;
	xor.b32  	%r704, %r703, %r594;
	xor.b32  	%r705, %r704, %r578;
	shf.l.wrap.b32 	%r706, %r705, %r705, 1;
	add.s32 	%r707, %r268, %r706;
	add.s32 	%r708, %r707, %r267;
	add.s32 	%r709, %r708, %r702;
	add.s32 	%r277, %r709, -1894007588;
	shf.l.wrap.b32 	%r279, %r269, %r269, 30;
	shf.l.wrap.b32 	%r710, %r277, %r277, 5;
	// begin inline asm
	lop3.b32 %r272, %r273, %r279, %r275, 232;
	// end inline asm
	xor.b32  	%r711, %r650, %r690;
	xor.b32  	%r712, %r711, %r602;
	xor.b32  	%r713, %r712, %r586;
	shf.l.wrap.b32 	%r714, %r713, %r713, 1;
	add.s32 	%r715, %r272, %r714;
	add.s32 	%r716, %r715, %r271;
	add.s32 	%r717, %r716, %r710;
	add.s32 	%r281, %r717, -1894007588;
	shf.l.wrap.b32 	%r283, %r273, %r273, 30;
	shf.l.wrap.b32 	%r718, %r281, %r281, 5;
	// begin inline asm
	lop3.b32 %r276, %r277, %r283, %r279, 232;
	// end inline asm
	xor.b32  	%r719, %r658, %r698;
	xor.b32  	%r720, %r719, %r610;
	xor.b32  	%r721, %r720, %r594;
	shf.l.wrap.b32 	%r722, %r721, %r721, 1;
	add.s32 	%r723, %r276, %r722;
	add.s32 	%r724, %r723, %r275;
	add.s32 	%r725, %r724, %r718;
	add.s32 	%r285, %r725, -1894007588;
	shf.l.wrap.b32 	%r287, %r277, %r277, 30;
	shf.l.wrap.b32 	%r726, %r285, %r285, 5;
	// begin inline asm
	lop3.b32 %r280, %r281, %r287, %r283, 232;
	// end inline asm
	xor.b32  	%r727, %r666, %r706;
	xor.b32  	%r728, %r727, %r618;
	xor.b32  	%r729, %r728, %r602;
	shf.l.wrap.b32 	%r730, %r729, %r729, 1;
	add.s32 	%r731, %r280, %r730;
	add.s32 	%r732, %r731, %r279;
	add.s32 	%r733, %r732, %r726;
	add.s32 	%r289, %r733, -1894007588;
	shf.l.wrap.b32 	%r291, %r281, %r281, 30;
	shf.l.wrap.b32 	%r734, %r289, %r289, 5;
	// begin inline asm
	lop3.b32 %r284, %r285, %r291, %r287, 150;
	// end inline asm
	xor.b32  	%r735, %r674, %r714;
	xor.b32  	%r736, %r735, %r626;
	xor.b32  	%r737, %r736, %r610;
	shf.l.wrap.b32 	%r738, %r737, %r737, 1;
	add.s32 	%r739, %r284, %r738;
	add.s32 	%r740, %r739, %r283;
	add.s32 	%r741, %r740, %r734;
	add.s32 	%r293, %r741, -899497514;
	shf.l.wrap.b32 	%r295, %r285, %r285, 30;
	shf.l.wrap.b32 	%r742, %r293, %r293, 5;
	// begin inline asm
	lop3.b32 %r288, %r289, %r295, %r291, 150;
	// end inline asm
	xor.b32  	%r743, %r682, %r722;
	xor.b32  	%r744, %r743, %r634;
	xor.b32  	%r745, %r744, %r618;
	shf.l.wrap.b32 	%r746, %r745, %r745, 1;
	add.s32 	%r747, %r288, %r746;
	add.s32 	%r748, %r747, %r287;
	add.s32 	%r749, %r748, %r742;
	add.s32 	%r297, %r749, -899497514;
	shf.l.wrap.b32 	%r299, %r289, %r289, 30;
	shf.l.wrap.b32 	%r750, %r297, %r297, 5;
	// begin inline asm
	lop3.b32 %r292, %r293, %r299, %r295, 150;
	// end inline asm
	xor.b32  	%r751, %r690, %r730;
	xor.b32  	%r752, %r751, %r642;
	xor.b32  	%r753, %r752, %r626;
	shf.l.wrap.b32 	%r754, %r753, %r753, 1;
	add.s32 	%r755, %r292, %r754;
	add.s32 	%r756, %r755, %r291;
	add.s32 	%r757, %r756, %r750;
	add.s32 	%r301, %r757, -899497514;
	shf.l.wrap.b32 	%r303, %r293, %r293, 30;
	shf.l.wrap.b32 	%r758, %r301, %r301, 5;
	// begin inline asm
	lop3.b32 %r296, %r297, %r303, %r299, 150;
	// end inline asm
	xor.b32  	%r759, %r698, %r738;
	xor.b32  	%r760, %r759, %r650;
	xor.b32  	%r761, %r760, %r634;
	shf.l.wrap.b32 	%r762, %r761, %r761, 1;
	add.s32 	%r763, %r296, %r762;
	add.s32 	%r764, %r763, %r295;
	add.s32 	%r765, %r764, %r758;
	add.s32 	%r305, %r765, -899497514;
	shf.l.wrap.b32 	%r307, %r297, %r297, 30;
	shf.l.wrap.b32 	%r766, %r305, %r305, 5;
	// begin inline asm
	lop3.b32 %r300, %r301, %r307, %r303, 150;
	// end inline asm
	xor.b32  	%r767, %r706, %r746;
	xor.b32  	%r768, %r767, %r658;
	xor.b32  	%r769, %r768, %r642;
	shf.l.wrap.b32 	%r770, %r769, %r769, 1;
	add.s32 	%r771, %r300, %r770;
	add.s32 	%r772, %r771, %r299;
	add.s32 	%r773, %r772, %r766;
	add.s32 	%r309, %r773, -899497514;
	shf.l.wrap.b32 	%r311, %r301, %r301, 30;
	shf.l.wrap.b32 	%r774, %r309, %r309, 5;
	// begin inline asm
	lop3.b32 %r304, %r305, %r311, %r307, 150;
	// end inline asm
	xor.b32  	%r775, %r714, %r754;
	xor.b32  	%r776, %r775, %r666;
	xor.b32  	%r777, %r776, %r650;
	shf.l.wrap.b32 	%r778, %r777, %r777, 1;
	add.s32 	%r779, %r304, %r778;
	add.s32 	%r780, %r779, %r303;
	add.s32 	%r781, %r780, %r774;
	add.s32 	%r313, %r781, -899497514;
	shf.l.wrap.b32 	%r315, %r305, %r305, 30;
	shf.l.wrap.b32 	%r782, %r313, %r313, 5;
	// begin inline asm
	lop3.b32 %r308, %r309, %r315, %r311, 150;
	// end inline asm
	xor.b32  	%r783, %r722, %r762;
	xor.b32  	%r784, %r783, %r674;
	xor.b32  	%r785, %r784, %r658;
	shf.l.wrap.b32 	%r786, %r785, %r785, 1;
	add.s32 	%r787, %r308, %r307;
	add.s32 	%r788, %r787, %r786;
	add.s32 	%r789, %r788, %r782;
	add.s32 	%r317, %r789, -899497514;
	shf.l.wrap.b32 	%r319, %r309, %r309, 30;
	shf.l.wrap.b32 	%r790, %r317, %r317, 5;
	// begin inline asm
	lop3.b32 %r312, %r313, %r319, %r315, 150;
	// end inline asm
	xor.b32  	%r791, %r730, %r770;
	xor.b32  	%r792, %r791, %r682;
	xor.b32  	%r793, %r792, %r666;
	shf.l.wrap.b32 	%r794, %r793, %r793, 1;
	add.s32 	%r795, %r312, %r311;
	add.s32 	%r796, %r795, %r794;
	add.s32 	%r797, %r796, %r790;
	add.s32 	%r321, %r797, -899497514;
	shf.l.wrap.b32 	%r323, %r313, %r313, 30;
	shf.l.wrap.b32 	%r798, %r321, %r321, 5;
	// begin inline asm
	lop3.b32 %r316, %r317, %r323, %r319, 150;
	// end inline asm
	xor.b32  	%r799, %r738, %r778;
	xor.b32  	%r800, %r799, %r690;
	xor.b32  	%r801, %r800, %r674;
	shf.l.wrap.b32 	%r802, %r801, %r801, 1;
	add.s32 	%r803, %r316, %r315;
	add.s32 	%r804, %r803, %r802;
	add.s32 	%r805, %r804, %r798;
	add.s32 	%r325, %r805, -899497514;
	shf.l.wrap.b32 	%r327, %r317, %r317, 30;
	shf.l.wrap.b32 	%r806, %r325, %r325, 5;
	// begin inline asm
	lop3.b32 %r320, %r321, %r327, %r323, 150;
	// end inline asm
	xor.b32  	%r807, %r746, %r786;
	xor.b32  	%r808, %r807, %r698;
	xor.b32  	%r809, %r808, %r682;
	shf.l.wrap.b32 	%r810, %r809, %r809, 1;
	add.s32 	%r811, %r320, %r319;
	add.s32 	%r812, %r811, %r810;
	add.s32 	%r813, %r812, %r806;
	add.s32 	%r329, %r813, -899497514;
	shf.l.wrap.b32 	%r331, %r321, %r321, 30;
	shf.l.wrap.b32 	%r814, %r329, %r329, 5;
	// begin inline asm
	lop3.b32 %r324, %r325, %r331, %r327, 150;
	// end inline asm
	xor.b32  	%r815, %r754, %r794;
	xor.b32  	%r816, %r815, %r706;
	xor.b32  	%r817, %r816, %r690;
	shf.l.wrap.b32 	%r818, %r817, %r817, 1;
	add.s32 	%r819, %r324, %r323;
	add.s32 	%r820, %r819, %r818;
	add.s32 	%r821, %r820, %r814;
	add.s32 	%r333, %r821, -899497514;
	shf.l.wrap.b32 	%r335, %r325, %r325, 30;
	shf.l.wrap.b32 	%r822, %r333, %r333, 5;
	// begin inline asm
	lop3.b32 %r328, %r329, %r335, %r331, 150;
	// end inline asm
	xor.b32  	%r823, %r762, %r802;
	xor.b32  	%r824, %r823, %r714;
	xor.b32  	%r825, %r824, %r698;
	shf.l.wrap.b32 	%r826, %r825, %r825, 1;
	add.s32 	%r827, %r328, %r327;
	add.s32 	%r828, %r827, %r826;
	add.s32 	%r829, %r828, %r822;
	add.s32 	%r337, %r829, -899497514;
	shf.l.wrap.b32 	%r339, %r329, %r329, 30;
	shf.l.wrap.b32 	%r830, %r337, %r337, 5;
	// begin inline asm
	lop3.b32 %r332, %r333, %r339, %r335, 150;
	// end inline asm
	xor.b32  	%r831, %r770, %r810;
	xor.b32  	%r832, %r831, %r722;
	xor.b32  	%r833, %r832, %r706;
	shf.l.wrap.b32 	%r834, %r833, %r833, 1;
	add.s32 	%r835, %r331, %r332;
	add.s32 	%r836, %r835, %r834;
	add.s32 	%r837, %r836, %r830;
	add.s32 	%r341, %r837, -899497514;
	shf.l.wrap.b32 	%r343, %r333, %r333, 30;
	shf.l.wrap.b32 	%r838, %r341, %r341, 5;
	// begin inline asm
	lop3.b32 %r336, %r337, %r343, %r339, 150;
	// end inline asm
	xor.b32  	%r839, %r778, %r818;
	xor.b32  	%r840, %r839, %r730;
	xor.b32  	%r841, %r840, %r714;
	shf.l.wrap.b32 	%r842, %r841, %r841, 1;
	add.s32 	%r843, %r335, %r336;
	add.s32 	%r844, %r843, %r842;
	add.s32 	%r845, %r844, %r838;
	add.s32 	%r345, %r845, -899497514;
	shf.l.wrap.b32 	%r347, %r337, %r337, 30;
	shf.l.wrap.b32 	%r846, %r345, %r345, 5;
	// begin inline asm
	lop3.b32 %r340, %r341, %r347, %r343, 150;
	// end inline asm
	xor.b32  	%r847, %r786, %r826;
	xor.b32  	%r848, %r847, %r738;
	xor.b32  	%r849, %r848, %r722;
	shf.l.wrap.b32 	%r850, %r849, %r849, 1;
	add.s32 	%r851, %r339, %r340;
	add.s32 	%r852, %r851, %r850;
	add.s32 	%r853, %r852, %r846;
	add.s32 	%r349, %r853, -899497514;
	shf.l.wrap.b32 	%r351, %r341, %r341, 30;
	shf.l.wrap.b32 	%r854, %r349, %r349, 5;
	// begin inline asm
	lop3.b32 %r344, %r345, %r351, %r347, 150;
	// end inline asm
	xor.b32  	%r855, %r794, %r834;
	xor.b32  	%r856, %r855, %r746;
	xor.b32  	%r857, %r856, %r730;
	shf.l.wrap.b32 	%r858, %r857, %r857, 1;
	add.s32 	%r859, %r343, %r344;
	add.s32 	%r860, %r859, %r858;
	add.s32 	%r861, %r860, %r854;
	add.s32 	%r353, %r861, -899497514;
	shf.l.wrap.b32 	%r355, %r345, %r345, 30;
	shf.l.wrap.b32 	%r862, %r353, %r353, 5;
	// begin inline asm
	lop3.b32 %r348, %r349, %r355, %r351, 150;
	// end inline asm
	xor.b32  	%r863, %r802, %r842;
	xor.b32  	%r864, %r863, %r754;
	xor.b32  	%r865, %r864, %r738;
	shf.l.wrap.b32 	%r866, %r865, %r865, 1;
	add.s32 	%r867, %r347, %r348;
	add.s32 	%r868, %r867, %r866;
	add.s32 	%r869, %r868, %r862;
	add.s32 	%r357, %r869, -899497514;
	shf.l.wrap.b32 	%r359, %r349, %r349, 30;
	shf.l.wrap.b32 	%r870, %r357, %r357, 5;
	// begin inline asm
	lop3.b32 %r352, %r353, %r359, %r355, 150;
	// end inline asm
	xor.b32  	%r871, %r810, %r850;
	xor.b32  	%r872, %r871, %r762;
	xor.b32  	%r873, %r872, %r746;
	shf.l.wrap.b32 	%r874, %r873, %r873, 1;
	add.s32 	%r875, %r351, %r352;
	add.s32 	%r876, %r875, %r874;
	add.s32 	%r877, %r876, %r870;
	add.s32 	%r361, %r877, -899497514;
	shf.l.wrap.b32 	%r363, %r353, %r353, 30;
	shf.l.wrap.b32 	%r878, %r361, %r361, 5;
	// begin inline asm
	lop3.b32 %r356, %r357, %r363, %r359, 150;
	// end inline asm
	xor.b32  	%r879, %r818, %r858;
	xor.b32  	%r880, %r879, %r770;
	xor.b32  	%r881, %r880, %r754;
	shf.l.wrap.b32 	%r882, %r881, %r881, 1;
	add.s32 	%r883, %r355, %r356;
	add.s32 	%r884, %r883, %r882;
	add.s32 	%r885, %r884, %r878;
	add.s32 	%r886, %r885, -899497514;
	shf.l.wrap.b32 	%r362, %r357, %r357, 30;
	shf.l.wrap.b32 	%r887, %r886, %r886, 5;
	// begin inline asm
	lop3.b32 %r360, %r361, %r362, %r363, 150;
	// end inline asm
	xor.b32  	%r888, %r826, %r866;
	xor.b32  	%r889, %r888, %r778;
	xor.b32  	%r890, %r889, %r762;
	shf.l.wrap.b32 	%r891, %r890, %r890, 1;
	shf.l.wrap.b32 	%r892, %r361, %r361, 30;
	add.s32 	%r893, %r359, %r360;
	add.s32 	%r894, %r893, %r891;
	add.s32 	%r895, %r894, %r887;
	add.s32 	%r927, %r895, 833086679;
	add.s32 	%r928, %r885, -1171231393;
	add.s32 	%r929, %r892, -1732584194;
	add.s32 	%r930, %r362, 271733878;
	add.s32 	%r931, %r363, -1009589776;
	add.s32 	%r926, %r926, 1;
	setp.lt.u32 	%p2, %r926, %r2;
	@%p2 bra 	$L__BB2_2;

$L__BB2_3:
	sub.s32 	%r896, %r1, %r2;
	st.global.u32 	[%rd2], %r896;
	setp.eq.s32 	%p3, %r896, 0;
	@%p3 bra 	$L__BB2_5;

	st.global.v2.u32 	[%rd2+-64], {%r927, %r928};
	st.global.v2.u32 	[%rd2+-56], {%r929, %r930};
	st.global.u32 	[%rd2+-48], %r931;
	bra.uni 	$L__BB2_6;

$L__BB2_5:
	ld.param.u64 	%rd9, [loop_sha1_param_0];
	shl.b64 	%rd7, %rd1, 4;
	add.s64 	%rd8, %rd9, %rd7;
	shf.l.wrap.b32 	%r897, %r927, %r927, 16;
	shl.b32 	%r898, %r897, 8;
	and.b32  	%r899, %r898, -16711936;
	shr.u32 	%r900, %r897, 8;
	and.b32  	%r901, %r900, 16711935;
	shf.l.wrap.b32 	%r902, %r928, %r928, 16;
	shl.b32 	%r903, %r902, 8;
	and.b32  	%r904, %r903, -16711936;
	shr.u32 	%r905, %r902, 8;
	and.b32  	%r906, %r905, 16711935;
	or.b32  	%r907, %r904, %r906;
	or.b32  	%r908, %r899, %r901;
	st.global.v2.u32 	[%rd8], {%r908, %r907};
	shf.l.wrap.b32 	%r909, %r929, %r929, 16;
	shl.b32 	%r910, %r909, 8;
	and.b32  	%r911, %r910, -16711936;
	shr.u32 	%r912, %r909, 8;
	and.b32  	%r913, %r912, 16711935;
	shf.l.wrap.b32 	%r914, %r930, %r930, 16;
	shl.b32 	%r915, %r914, 8;
	and.b32  	%r916, %r915, -16711936;
	shr.u32 	%r917, %r914, 8;
	and.b32  	%r918, %r917, 16711935;
	or.b32  	%r919, %r916, %r918;
	or.b32  	%r920, %r911, %r913;
	st.global.v2.u32 	[%rd8+8], {%r920, %r919};

$L__BB2_6:
	ret;

}
	// .globl	sspr_sha1
.entry sspr_sha1(
	.param .u64 .ptr .global .align 4 sspr_sha1_param_0,
	.param .u64 .ptr .global .align 8 sspr_sha1_param_1,
	.param .u64 .ptr .const .align 4 sspr_sha1_param_2,
	.param .u64 .ptr .global .align 8 sspr_sha1_param_3
)
{
	.local .align 16 .b8 	__local_depot3[240];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<50>;
	.reg .b16 	%rs<152>;
	.reg .b32 	%r<5893>;
	.reg .b64 	%rd<231>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd112, [sspr_sha1_param_0];
	add.u64 	%rd187, %SP, 80;
	cvta.to.local.u64 	%rd189, %rd187;
	mov.u32 	%r227, %ctaid.x;
	mov.u32 	%r228, %ntid.x;
	mov.u32 	%r229, %tid.x;
	mov.b32 	%r230, %envreg3;
	add.s32 	%r231, %r229, %r230;
	mad.lo.s32 	%r232, %r228, %r227, %r231;
	cvt.u64.u32 	%rd2, %r232;
	mul.wide.u32 	%rd116, %r232, 68;
	add.s64 	%rd117, %rd112, %rd116;
	ld.global.u32 	%r5831, [%rd117];
	setp.eq.s32 	%p1, %r5831, 0;
	@%p1 bra 	$L__BB3_6;

	mul.lo.s64 	%rd118, %rd2, 68;
	add.s64 	%rd119, %rd112, %rd118;
	add.s64 	%rd186, %rd119, 4;
	and.b32  	%r5806, %r5831, 3;
	setp.eq.s32 	%p2, %r5806, 0;
	mov.u64 	%rd185, %rd189;
	mov.u32 	%r5807, %r5831;
	@%p2 bra 	$L__BB3_4;

	mov.u64 	%rd181, %rd189;
	mov.u64 	%rd182, %rd186;
	mov.u32 	%r5807, %r5831;

$L__BB3_3:
	.pragma "nounroll";
	add.s32 	%r5807, %r5807, -1;
	add.s64 	%rd186, %rd182, 1;
	ld.global.u8 	%rs1, [%rd182];
	add.s64 	%rd185, %rd181, 1;
	st.local.u8 	[%rd181], %rs1;
	add.s32 	%r5806, %r5806, -1;
	setp.ne.s32 	%p3, %r5806, 0;
	mov.u64 	%rd181, %rd185;
	mov.u64 	%rd182, %rd186;
	@%p3 bra 	$L__BB3_3;

$L__BB3_4:
	add.s32 	%r233, %r5831, -1;
	setp.lt.u32 	%p4, %r233, 3;
	@%p4 bra 	$L__BB3_6;

$L__BB3_5:
	ld.global.u8 	%rs2, [%rd186];
	st.local.u8 	[%rd185], %rs2;
	ld.global.u8 	%rs3, [%rd186+1];
	st.local.u8 	[%rd185+1], %rs3;
	ld.global.u8 	%rs4, [%rd186+2];
	st.local.u8 	[%rd185+2], %rs4;
	add.s64 	%rd14, %rd186, 4;
	ld.global.u8 	%rs5, [%rd186+3];
	add.s64 	%rd15, %rd185, 4;
	st.local.u8 	[%rd185+3], %rs5;
	add.s32 	%r5807, %r5807, -4;
	setp.ne.s32 	%p5, %r5807, 0;
	mov.u64 	%rd185, %rd15;
	mov.u64 	%rd186, %rd14;
	@%p5 bra 	$L__BB3_5;

$L__BB3_6:
	mov.u32 	%r234, 0;
	add.u64 	%rd16, %SPL, 144;
	st.local.u32 	[%rd16], %r234;
	mov.u32 	%r235, 1732584193;
	st.local.u32 	[%rd16+4], %r235;
	mov.u32 	%r236, -271733879;
	st.local.u32 	[%rd16+8], %r236;
	mov.u32 	%r237, -1732584194;
	st.local.u32 	[%rd16+12], %r237;
	mov.u32 	%r238, 271733878;
	st.local.u32 	[%rd16+16], %r238;
	mov.u32 	%r239, -1009589776;
	st.local.u32 	[%rd16+20], %r239;
	@%p1 bra 	$L__BB3_19;

	st.local.u32 	[%rd16], %r5831;
	setp.lt.u32 	%p7, %r5831, 64;
	@%p7 bra 	$L__BB3_13;

	mov.u32 	%r5813, 1732584193;
	mov.u32 	%r5812, -271733879;
	mov.u32 	%r5811, -1732584194;
	mov.u32 	%r5810, 271733878;
	mov.u32 	%r5809, -1009589776;

$L__BB3_9:
	and.b64  	%rd121, %rd187, 3;
	setp.eq.s64 	%p8, %rd121, 0;
	@%p8 bra 	$L__BB3_11;

	ld.local.v4.u32 	{%r245, %r246, %r247, %r248}, [%rd189];
	mov.b32 	{%rs6, %rs7}, %r245;
	shr.u16 	%rs8, %rs6, 8;
	shr.u16 	%rs9, %rs7, 8;
	mov.b32 	{%rs10, %rs11}, %r246;
	shr.u16 	%rs12, %rs10, 8;
	shr.u16 	%rs13, %rs11, 8;
	mov.b32 	{%rs14, %rs15}, %r247;
	shr.u16 	%rs16, %rs14, 8;
	shr.u16 	%rs17, %rs15, 8;
	mov.b32 	{%rs18, %rs19}, %r248;
	shr.u16 	%rs20, %rs18, 8;
	shr.u16 	%rs21, %rs19, 8;
	cvt.u32.u16 	%r253, %rs6;
	shl.b32 	%r254, %r253, 24;
	cvt.u32.u16 	%r255, %rs8;
	shl.b32 	%r256, %r255, 16;
	or.b32  	%r257, %r256, %r254;
	and.b16  	%rs22, %rs7, 255;
	mul.wide.u16 	%r258, %rs22, 256;
	or.b32  	%r259, %r257, %r258;
	cvt.u32.u16 	%r260, %rs9;
	or.b32  	%r5830, %r259, %r260;
	cvt.u32.u16 	%r261, %rs10;
	shl.b32 	%r262, %r261, 24;
	cvt.u32.u16 	%r263, %rs12;
	shl.b32 	%r264, %r263, 16;
	or.b32  	%r265, %r264, %r262;
	and.b16  	%rs23, %rs11, 255;
	mul.wide.u16 	%r266, %rs23, 256;
	or.b32  	%r267, %r265, %r266;
	cvt.u32.u16 	%r268, %rs13;
	or.b32  	%r5829, %r267, %r268;
	cvt.u32.u16 	%r269, %rs14;
	shl.b32 	%r270, %r269, 24;
	cvt.u32.u16 	%r271, %rs16;
	shl.b32 	%r272, %r271, 16;
	or.b32  	%r273, %r272, %r270;
	and.b16  	%rs24, %rs15, 255;
	mul.wide.u16 	%r274, %rs24, 256;
	or.b32  	%r275, %r273, %r274;
	cvt.u32.u16 	%r276, %rs17;
	or.b32  	%r5828, %r275, %r276;
	cvt.u32.u16 	%r277, %rs18;
	shl.b32 	%r278, %r277, 24;
	cvt.u32.u16 	%r279, %rs20;
	shl.b32 	%r280, %r279, 16;
	or.b32  	%r281, %r280, %r278;
	and.b16  	%rs25, %rs19, 255;
	mul.wide.u16 	%r282, %rs25, 256;
	or.b32  	%r283, %r281, %r282;
	cvt.u32.u16 	%r284, %rs21;
	or.b32  	%r5827, %r283, %r284;
	ld.local.v4.u32 	{%r285, %r286, %r287, %r288}, [%rd189+16];
	mov.b32 	{%rs26, %rs27}, %r285;
	shr.u16 	%rs28, %rs26, 8;
	shr.u16 	%rs29, %rs27, 8;
	mov.b32 	{%rs30, %rs31}, %r286;
	shr.u16 	%rs32, %rs30, 8;
	shr.u16 	%rs33, %rs31, 8;
	mov.b32 	{%rs34, %rs35}, %r287;
	shr.u16 	%rs36, %rs34, 8;
	shr.u16 	%rs37, %rs35, 8;
	mov.b32 	{%rs38, %rs39}, %r288;
	shr.u16 	%rs40, %rs38, 8;
	shr.u16 	%rs41, %rs39, 8;
	cvt.u32.u16 	%r293, %rs26;
	shl.b32 	%r294, %r293, 24;
	cvt.u32.u16 	%r295, %rs28;
	shl.b32 	%r296, %r295, 16;
	or.b32  	%r297, %r296, %r294;
	and.b16  	%rs42, %rs27, 255;
	mul.wide.u16 	%r298, %rs42, 256;
	or.b32  	%r299, %r297, %r298;
	cvt.u32.u16 	%r300, %rs29;
	or.b32  	%r5826, %r299, %r300;
	cvt.u32.u16 	%r301, %rs30;
	shl.b32 	%r302, %r301, 24;
	cvt.u32.u16 	%r303, %rs32;
	shl.b32 	%r304, %r303, 16;
	or.b32  	%r305, %r304, %r302;
	and.b16  	%rs43, %rs31, 255;
	mul.wide.u16 	%r306, %rs43, 256;
	or.b32  	%r307, %r305, %r306;
	cvt.u32.u16 	%r308, %rs33;
	or.b32  	%r5825, %r307, %r308;
	cvt.u32.u16 	%r309, %rs34;
	shl.b32 	%r310, %r309, 24;
	cvt.u32.u16 	%r311, %rs36;
	shl.b32 	%r312, %r311, 16;
	or.b32  	%r313, %r312, %r310;
	and.b16  	%rs44, %rs35, 255;
	mul.wide.u16 	%r314, %rs44, 256;
	or.b32  	%r315, %r313, %r314;
	cvt.u32.u16 	%r316, %rs37;
	or.b32  	%r5824, %r315, %r316;
	cvt.u32.u16 	%r317, %rs38;
	shl.b32 	%r318, %r317, 24;
	cvt.u32.u16 	%r319, %rs40;
	shl.b32 	%r320, %r319, 16;
	or.b32  	%r321, %r320, %r318;
	and.b16  	%rs45, %rs39, 255;
	mul.wide.u16 	%r322, %rs45, 256;
	or.b32  	%r323, %r321, %r322;
	cvt.u32.u16 	%r324, %rs41;
	or.b32  	%r5823, %r323, %r324;
	ld.local.v4.u32 	{%r325, %r326, %r327, %r328}, [%rd189+32];
	mov.b32 	{%rs46, %rs47}, %r325;
	shr.u16 	%rs48, %rs46, 8;
	shr.u16 	%rs49, %rs47, 8;
	mov.b32 	{%rs50, %rs51}, %r326;
	shr.u16 	%rs52, %rs50, 8;
	shr.u16 	%rs53, %rs51, 8;
	mov.b32 	{%rs54, %rs55}, %r327;
	shr.u16 	%rs56, %rs54, 8;
	shr.u16 	%rs57, %rs55, 8;
	mov.b32 	{%rs58, %rs59}, %r328;
	shr.u16 	%rs60, %rs58, 8;
	shr.u16 	%rs61, %rs59, 8;
	cvt.u32.u16 	%r333, %rs46;
	shl.b32 	%r334, %r333, 24;
	cvt.u32.u16 	%r335, %rs48;
	shl.b32 	%r336, %r335, 16;
	or.b32  	%r337, %r336, %r334;
	and.b16  	%rs62, %rs47, 255;
	mul.wide.u16 	%r338, %rs62, 256;
	or.b32  	%r339, %r337, %r338;
	cvt.u32.u16 	%r340, %rs49;
	or.b32  	%r5822, %r339, %r340;
	cvt.u32.u16 	%r341, %rs50;
	shl.b32 	%r342, %r341, 24;
	cvt.u32.u16 	%r343, %rs52;
	shl.b32 	%r344, %r343, 16;
	or.b32  	%r345, %r344, %r342;
	and.b16  	%rs63, %rs51, 255;
	mul.wide.u16 	%r346, %rs63, 256;
	or.b32  	%r347, %r345, %r346;
	cvt.u32.u16 	%r348, %rs53;
	or.b32  	%r5821, %r347, %r348;
	cvt.u32.u16 	%r349, %rs54;
	shl.b32 	%r350, %r349, 24;
	cvt.u32.u16 	%r351, %rs56;
	shl.b32 	%r352, %r351, 16;
	or.b32  	%r353, %r352, %r350;
	and.b16  	%rs64, %rs55, 255;
	mul.wide.u16 	%r354, %rs64, 256;
	or.b32  	%r355, %r353, %r354;
	cvt.u32.u16 	%r356, %rs57;
	or.b32  	%r5820, %r355, %r356;
	cvt.u32.u16 	%r357, %rs58;
	shl.b32 	%r358, %r357, 24;
	cvt.u32.u16 	%r359, %rs60;
	shl.b32 	%r360, %r359, 16;
	or.b32  	%r361, %r360, %r358;
	and.b16  	%rs65, %rs59, 255;
	mul.wide.u16 	%r362, %rs65, 256;
	or.b32  	%r363, %r361, %r362;
	cvt.u32.u16 	%r364, %rs61;
	or.b32  	%r5819, %r363, %r364;
	ld.local.v4.u32 	{%r365, %r366, %r367, %r368}, [%rd189+48];
	mov.b32 	{%rs66, %rs67}, %r365;
	shr.u16 	%rs68, %rs66, 8;
	shr.u16 	%rs69, %rs67, 8;
	mov.b32 	{%rs70, %rs71}, %r366;
	shr.u16 	%rs72, %rs70, 8;
	shr.u16 	%rs73, %rs71, 8;
	mov.b32 	{%rs74, %rs75}, %r367;
	shr.u16 	%rs76, %rs74, 8;
	shr.u16 	%rs77, %rs75, 8;
	mov.b32 	{%rs78, %rs79}, %r368;
	shr.u16 	%rs80, %rs78, 8;
	shr.u16 	%rs81, %rs79, 8;
	cvt.u32.u16 	%r373, %rs66;
	shl.b32 	%r374, %r373, 24;
	cvt.u32.u16 	%r375, %rs68;
	shl.b32 	%r376, %r375, 16;
	or.b32  	%r377, %r376, %r374;
	and.b16  	%rs82, %rs67, 255;
	mul.wide.u16 	%r378, %rs82, 256;
	or.b32  	%r379, %r377, %r378;
	cvt.u32.u16 	%r380, %rs69;
	or.b32  	%r5818, %r379, %r380;
	cvt.u32.u16 	%r381, %rs70;
	shl.b32 	%r382, %r381, 24;
	cvt.u32.u16 	%r383, %rs72;
	shl.b32 	%r384, %r383, 16;
	or.b32  	%r385, %r384, %r382;
	and.b16  	%rs83, %rs71, 255;
	mul.wide.u16 	%r386, %rs83, 256;
	or.b32  	%r387, %r385, %r386;
	cvt.u32.u16 	%r388, %rs73;
	or.b32  	%r5817, %r387, %r388;
	cvt.u32.u16 	%r389, %rs74;
	shl.b32 	%r390, %r389, 24;
	cvt.u32.u16 	%r391, %rs76;
	shl.b32 	%r392, %r391, 16;
	or.b32  	%r393, %r392, %r390;
	and.b16  	%rs84, %rs75, 255;
	mul.wide.u16 	%r394, %rs84, 256;
	or.b32  	%r395, %r393, %r394;
	cvt.u32.u16 	%r396, %rs77;
	or.b32  	%r5816, %r395, %r396;
	cvt.u32.u16 	%r397, %rs78;
	shl.b32 	%r398, %r397, 24;
	cvt.u32.u16 	%r399, %rs80;
	shl.b32 	%r400, %r399, 16;
	or.b32  	%r401, %r400, %r398;
	and.b16  	%rs85, %rs79, 255;
	mul.wide.u16 	%r402, %rs85, 256;
	or.b32  	%r403, %r401, %r402;
	cvt.u32.u16 	%r404, %rs81;
	or.b32  	%r5815, %r403, %r404;
	bra.uni 	$L__BB3_12;

$L__BB3_11:
	ld.local.v4.u32 	{%r405, %r406, %r407, %r408}, [%rd189];
	shf.l.wrap.b32 	%r413, %r405, %r405, 16;
	shl.b32 	%r414, %r413, 8;
	and.b32  	%r415, %r414, -16711936;
	shr.u32 	%r416, %r413, 8;
	and.b32  	%r417, %r416, 16711935;
	or.b32  	%r5830, %r415, %r417;
	shf.l.wrap.b32 	%r418, %r406, %r406, 16;
	shl.b32 	%r419, %r418, 8;
	and.b32  	%r420, %r419, -16711936;
	shr.u32 	%r421, %r418, 8;
	and.b32  	%r422, %r421, 16711935;
	or.b32  	%r5829, %r420, %r422;
	shf.l.wrap.b32 	%r423, %r407, %r407, 16;
	shl.b32 	%r424, %r423, 8;
	and.b32  	%r425, %r424, -16711936;
	shr.u32 	%r426, %r423, 8;
	and.b32  	%r427, %r426, 16711935;
	or.b32  	%r5828, %r425, %r427;
	shf.l.wrap.b32 	%r428, %r408, %r408, 16;
	shl.b32 	%r429, %r428, 8;
	and.b32  	%r430, %r429, -16711936;
	shr.u32 	%r431, %r428, 8;
	and.b32  	%r432, %r431, 16711935;
	or.b32  	%r5827, %r430, %r432;
	ld.local.v4.u32 	{%r433, %r434, %r435, %r436}, [%rd189+16];
	shf.l.wrap.b32 	%r441, %r433, %r433, 16;
	shl.b32 	%r442, %r441, 8;
	and.b32  	%r443, %r442, -16711936;
	shr.u32 	%r444, %r441, 8;
	and.b32  	%r445, %r444, 16711935;
	or.b32  	%r5826, %r443, %r445;
	shf.l.wrap.b32 	%r446, %r434, %r434, 16;
	shl.b32 	%r447, %r446, 8;
	and.b32  	%r448, %r447, -16711936;
	shr.u32 	%r449, %r446, 8;
	and.b32  	%r450, %r449, 16711935;
	or.b32  	%r5825, %r448, %r450;
	shf.l.wrap.b32 	%r451, %r435, %r435, 16;
	shl.b32 	%r452, %r451, 8;
	and.b32  	%r453, %r452, -16711936;
	shr.u32 	%r454, %r451, 8;
	and.b32  	%r455, %r454, 16711935;
	or.b32  	%r5824, %r453, %r455;
	shf.l.wrap.b32 	%r456, %r436, %r436, 16;
	shl.b32 	%r457, %r456, 8;
	and.b32  	%r458, %r457, -16711936;
	shr.u32 	%r459, %r456, 8;
	and.b32  	%r460, %r459, 16711935;
	or.b32  	%r5823, %r458, %r460;
	ld.local.v4.u32 	{%r461, %r462, %r463, %r464}, [%rd189+32];
	shf.l.wrap.b32 	%r469, %r461, %r461, 16;
	shl.b32 	%r470, %r469, 8;
	and.b32  	%r471, %r470, -16711936;
	shr.u32 	%r472, %r469, 8;
	and.b32  	%r473, %r472, 16711935;
	or.b32  	%r5822, %r471, %r473;
	shf.l.wrap.b32 	%r474, %r462, %r462, 16;
	shl.b32 	%r475, %r474, 8;
	and.b32  	%r476, %r475, -16711936;
	shr.u32 	%r477, %r474, 8;
	and.b32  	%r478, %r477, 16711935;
	or.b32  	%r5821, %r476, %r478;
	shf.l.wrap.b32 	%r479, %r463, %r463, 16;
	shl.b32 	%r480, %r479, 8;
	and.b32  	%r481, %r480, -16711936;
	shr.u32 	%r482, %r479, 8;
	and.b32  	%r483, %r482, 16711935;
	or.b32  	%r5820, %r481, %r483;
	shf.l.wrap.b32 	%r484, %r464, %r464, 16;
	shl.b32 	%r485, %r484, 8;
	and.b32  	%r486, %r485, -16711936;
	shr.u32 	%r487, %r484, 8;
	and.b32  	%r488, %r487, 16711935;
	or.b32  	%r5819, %r486, %r488;
	ld.local.v4.u32 	{%r489, %r490, %r491, %r492}, [%rd189+48];
	shf.l.wrap.b32 	%r497, %r489, %r489, 16;
	shl.b32 	%r498, %r497, 8;
	and.b32  	%r499, %r498, -16711936;
	shr.u32 	%r500, %r497, 8;
	and.b32  	%r501, %r500, 16711935;
	or.b32  	%r5818, %r499, %r501;
	shf.l.wrap.b32 	%r502, %r490, %r490, 16;
	shl.b32 	%r503, %r502, 8;
	and.b32  	%r504, %r503, -16711936;
	shr.u32 	%r505, %r502, 8;
	and.b32  	%r506, %r505, 16711935;
	or.b32  	%r5817, %r504, %r506;
	shf.l.wrap.b32 	%r507, %r491, %r491, 16;
	shl.b32 	%r508, %r507, 8;
	and.b32  	%r509, %r508, -16711936;
	shr.u32 	%r510, %r507, 8;
	and.b32  	%r511, %r510, 16711935;
	or.b32  	%r5816, %r509, %r511;
	shf.l.wrap.b32 	%r512, %r492, %r492, 16;
	shl.b32 	%r513, %r512, 8;
	and.b32  	%r514, %r513, -16711936;
	shr.u32 	%r515, %r512, 8;
	and.b32  	%r516, %r515, 16711935;
	or.b32  	%r5815, %r514, %r516;

$L__BB3_12:
	shf.l.wrap.b32 	%r837, %r5813, %r5813, 5;
	add.s32 	%r838, %r5830, %r837;
	add.s32 	%r839, %r838, %r5809;
	// begin inline asm
	lop3.b32 %r517, %r5812, %r5811, %r5810, 202;
	// end inline asm
	add.s32 	%r840, %r839, %r517;
	add.s32 	%r526, %r840, 1518500249;
	shf.l.wrap.b32 	%r841, %r526, %r526, 5;
	shf.l.wrap.b32 	%r528, %r5812, %r5812, 30;
	// begin inline asm
	lop3.b32 %r521, %r5813, %r528, %r5811, 202;
	// end inline asm
	add.s32 	%r842, %r5829, %r5810;
	add.s32 	%r843, %r842, %r521;
	add.s32 	%r844, %r843, %r841;
	add.s32 	%r530, %r844, 1518500249;
	shf.l.wrap.b32 	%r845, %r530, %r530, 5;
	shf.l.wrap.b32 	%r532, %r5813, %r5813, 30;
	// begin inline asm
	lop3.b32 %r525, %r526, %r532, %r528, 202;
	// end inline asm
	add.s32 	%r846, %r5828, %r5811;
	add.s32 	%r847, %r846, %r525;
	add.s32 	%r848, %r847, %r845;
	add.s32 	%r534, %r848, 1518500249;
	shf.l.wrap.b32 	%r536, %r526, %r526, 30;
	shf.l.wrap.b32 	%r849, %r534, %r534, 5;
	// begin inline asm
	lop3.b32 %r529, %r530, %r536, %r532, 202;
	// end inline asm
	add.s32 	%r850, %r5827, %r528;
	add.s32 	%r851, %r850, %r529;
	add.s32 	%r852, %r851, %r849;
	add.s32 	%r538, %r852, 1518500249;
	shf.l.wrap.b32 	%r540, %r530, %r530, 30;
	shf.l.wrap.b32 	%r853, %r538, %r538, 5;
	// begin inline asm
	lop3.b32 %r533, %r534, %r540, %r536, 202;
	// end inline asm
	add.s32 	%r854, %r5826, %r532;
	add.s32 	%r855, %r854, %r533;
	add.s32 	%r856, %r855, %r853;
	add.s32 	%r542, %r856, 1518500249;
	shf.l.wrap.b32 	%r544, %r534, %r534, 30;
	shf.l.wrap.b32 	%r857, %r542, %r542, 5;
	// begin inline asm
	lop3.b32 %r537, %r538, %r544, %r540, 202;
	// end inline asm
	add.s32 	%r858, %r5825, %r537;
	add.s32 	%r859, %r858, %r536;
	add.s32 	%r860, %r859, %r857;
	add.s32 	%r546, %r860, 1518500249;
	shf.l.wrap.b32 	%r548, %r538, %r538, 30;
	shf.l.wrap.b32 	%r861, %r546, %r546, 5;
	// begin inline asm
	lop3.b32 %r541, %r542, %r548, %r544, 202;
	// end inline asm
	add.s32 	%r862, %r5824, %r541;
	add.s32 	%r863, %r862, %r540;
	add.s32 	%r864, %r863, %r861;
	add.s32 	%r550, %r864, 1518500249;
	shf.l.wrap.b32 	%r552, %r542, %r542, 30;
	shf.l.wrap.b32 	%r865, %r550, %r550, 5;
	// begin inline asm
	lop3.b32 %r545, %r546, %r552, %r548, 202;
	// end inline asm
	add.s32 	%r866, %r5823, %r545;
	add.s32 	%r867, %r866, %r544;
	add.s32 	%r868, %r867, %r865;
	add.s32 	%r554, %r868, 1518500249;
	shf.l.wrap.b32 	%r556, %r546, %r546, 30;
	shf.l.wrap.b32 	%r869, %r554, %r554, 5;
	// begin inline asm
	lop3.b32 %r549, %r550, %r556, %r552, 202;
	// end inline asm
	add.s32 	%r870, %r5822, %r549;
	add.s32 	%r871, %r870, %r548;
	add.s32 	%r872, %r871, %r869;
	add.s32 	%r558, %r872, 1518500249;
	shf.l.wrap.b32 	%r560, %r550, %r550, 30;
	shf.l.wrap.b32 	%r873, %r558, %r558, 5;
	// begin inline asm
	lop3.b32 %r553, %r554, %r560, %r556, 202;
	// end inline asm
	add.s32 	%r874, %r5821, %r553;
	add.s32 	%r875, %r874, %r552;
	add.s32 	%r876, %r875, %r873;
	add.s32 	%r562, %r876, 1518500249;
	shf.l.wrap.b32 	%r564, %r554, %r554, 30;
	shf.l.wrap.b32 	%r877, %r562, %r562, 5;
	// begin inline asm
	lop3.b32 %r557, %r558, %r564, %r560, 202;
	// end inline asm
	add.s32 	%r878, %r5820, %r557;
	add.s32 	%r879, %r878, %r556;
	add.s32 	%r880, %r879, %r877;
	add.s32 	%r566, %r880, 1518500249;
	shf.l.wrap.b32 	%r568, %r558, %r558, 30;
	shf.l.wrap.b32 	%r881, %r566, %r566, 5;
	// begin inline asm
	lop3.b32 %r561, %r562, %r568, %r564, 202;
	// end inline asm
	add.s32 	%r882, %r5819, %r561;
	add.s32 	%r883, %r882, %r560;
	add.s32 	%r884, %r883, %r881;
	add.s32 	%r570, %r884, 1518500249;
	shf.l.wrap.b32 	%r572, %r562, %r562, 30;
	shf.l.wrap.b32 	%r885, %r570, %r570, 5;
	// begin inline asm
	lop3.b32 %r565, %r566, %r572, %r568, 202;
	// end inline asm
	add.s32 	%r886, %r5818, %r565;
	add.s32 	%r887, %r886, %r564;
	add.s32 	%r888, %r887, %r885;
	add.s32 	%r574, %r888, 1518500249;
	shf.l.wrap.b32 	%r576, %r566, %r566, 30;
	shf.l.wrap.b32 	%r889, %r574, %r574, 5;
	// begin inline asm
	lop3.b32 %r569, %r570, %r576, %r572, 202;
	// end inline asm
	add.s32 	%r890, %r5817, %r569;
	add.s32 	%r891, %r890, %r568;
	add.s32 	%r892, %r891, %r889;
	add.s32 	%r578, %r892, 1518500249;
	shf.l.wrap.b32 	%r580, %r570, %r570, 30;
	shf.l.wrap.b32 	%r893, %r578, %r578, 5;
	// begin inline asm
	lop3.b32 %r573, %r574, %r580, %r576, 202;
	// end inline asm
	add.s32 	%r894, %r5816, %r573;
	add.s32 	%r895, %r894, %r572;
	add.s32 	%r896, %r895, %r893;
	add.s32 	%r582, %r896, 1518500249;
	shf.l.wrap.b32 	%r584, %r574, %r574, 30;
	shf.l.wrap.b32 	%r897, %r582, %r582, 5;
	// begin inline asm
	lop3.b32 %r577, %r578, %r584, %r580, 202;
	// end inline asm
	add.s32 	%r898, %r5815, %r577;
	add.s32 	%r899, %r898, %r576;
	add.s32 	%r900, %r899, %r897;
	add.s32 	%r586, %r900, 1518500249;
	shf.l.wrap.b32 	%r588, %r578, %r578, 30;
	shf.l.wrap.b32 	%r901, %r586, %r586, 5;
	// begin inline asm
	lop3.b32 %r581, %r582, %r588, %r584, 202;
	// end inline asm
	xor.b32  	%r902, %r5822, %r5817;
	xor.b32  	%r903, %r902, %r5828;
	xor.b32  	%r904, %r903, %r5830;
	shf.l.wrap.b32 	%r905, %r904, %r904, 1;
	add.s32 	%r906, %r905, %r581;
	add.s32 	%r907, %r906, %r580;
	add.s32 	%r908, %r907, %r901;
	add.s32 	%r590, %r908, 1518500249;
	shf.l.wrap.b32 	%r592, %r582, %r582, 30;
	shf.l.wrap.b32 	%r909, %r590, %r590, 5;
	// begin inline asm
	lop3.b32 %r585, %r586, %r592, %r588, 202;
	// end inline asm
	xor.b32  	%r910, %r5821, %r5816;
	xor.b32  	%r911, %r910, %r5827;
	xor.b32  	%r912, %r911, %r5829;
	shf.l.wrap.b32 	%r913, %r912, %r912, 1;
	add.s32 	%r914, %r913, %r585;
	add.s32 	%r915, %r914, %r584;
	add.s32 	%r916, %r915, %r909;
	add.s32 	%r594, %r916, 1518500249;
	shf.l.wrap.b32 	%r596, %r586, %r586, 30;
	shf.l.wrap.b32 	%r917, %r594, %r594, 5;
	// begin inline asm
	lop3.b32 %r589, %r590, %r596, %r592, 202;
	// end inline asm
	xor.b32  	%r918, %r5820, %r5815;
	xor.b32  	%r919, %r918, %r5826;
	xor.b32  	%r920, %r919, %r5828;
	shf.l.wrap.b32 	%r921, %r920, %r920, 1;
	add.s32 	%r922, %r921, %r589;
	add.s32 	%r923, %r922, %r588;
	add.s32 	%r924, %r923, %r917;
	add.s32 	%r598, %r924, 1518500249;
	shf.l.wrap.b32 	%r600, %r590, %r590, 30;
	shf.l.wrap.b32 	%r925, %r598, %r598, 5;
	// begin inline asm
	lop3.b32 %r593, %r594, %r600, %r596, 202;
	// end inline asm
	xor.b32  	%r926, %r5825, %r5819;
	xor.b32  	%r927, %r926, %r5827;
	xor.b32  	%r928, %r927, %r905;
	shf.l.wrap.b32 	%r929, %r928, %r928, 1;
	add.s32 	%r930, %r929, %r593;
	add.s32 	%r931, %r930, %r592;
	add.s32 	%r932, %r931, %r925;
	add.s32 	%r602, %r932, 1518500249;
	shf.l.wrap.b32 	%r604, %r594, %r594, 30;
	shf.l.wrap.b32 	%r933, %r602, %r602, 5;
	// begin inline asm
	lop3.b32 %r597, %r598, %r604, %r600, 150;
	// end inline asm
	xor.b32  	%r934, %r5824, %r5818;
	xor.b32  	%r935, %r934, %r5826;
	xor.b32  	%r936, %r935, %r913;
	shf.l.wrap.b32 	%r937, %r936, %r936, 1;
	add.s32 	%r938, %r937, %r597;
	add.s32 	%r939, %r938, %r596;
	add.s32 	%r940, %r939, %r933;
	add.s32 	%r606, %r940, 1859775393;
	shf.l.wrap.b32 	%r608, %r598, %r598, 30;
	shf.l.wrap.b32 	%r941, %r606, %r606, 5;
	// begin inline asm
	lop3.b32 %r601, %r602, %r608, %r604, 150;
	// end inline asm
	xor.b32  	%r942, %r5823, %r5817;
	xor.b32  	%r943, %r942, %r5825;
	xor.b32  	%r944, %r943, %r921;
	shf.l.wrap.b32 	%r945, %r944, %r944, 1;
	add.s32 	%r946, %r945, %r601;
	add.s32 	%r947, %r946, %r600;
	add.s32 	%r948, %r947, %r941;
	add.s32 	%r610, %r948, 1859775393;
	shf.l.wrap.b32 	%r612, %r602, %r602, 30;
	shf.l.wrap.b32 	%r949, %r610, %r610, 5;
	// begin inline asm
	lop3.b32 %r605, %r606, %r612, %r608, 150;
	// end inline asm
	xor.b32  	%r950, %r5822, %r5816;
	xor.b32  	%r951, %r950, %r5824;
	xor.b32  	%r952, %r951, %r929;
	shf.l.wrap.b32 	%r953, %r952, %r952, 1;
	add.s32 	%r954, %r953, %r605;
	add.s32 	%r955, %r954, %r604;
	add.s32 	%r956, %r955, %r949;
	add.s32 	%r614, %r956, 1859775393;
	shf.l.wrap.b32 	%r616, %r606, %r606, 30;
	shf.l.wrap.b32 	%r957, %r614, %r614, 5;
	// begin inline asm
	lop3.b32 %r609, %r610, %r616, %r612, 150;
	// end inline asm
	xor.b32  	%r958, %r5821, %r5815;
	xor.b32  	%r959, %r958, %r5823;
	xor.b32  	%r960, %r959, %r937;
	shf.l.wrap.b32 	%r961, %r960, %r960, 1;
	add.s32 	%r962, %r961, %r609;
	add.s32 	%r963, %r962, %r608;
	add.s32 	%r964, %r963, %r957;
	add.s32 	%r618, %r964, 1859775393;
	shf.l.wrap.b32 	%r620, %r610, %r610, 30;
	shf.l.wrap.b32 	%r965, %r618, %r618, 5;
	// begin inline asm
	lop3.b32 %r613, %r614, %r620, %r616, 150;
	// end inline asm
	xor.b32  	%r966, %r5822, %r5820;
	xor.b32  	%r967, %r966, %r905;
	xor.b32  	%r968, %r967, %r945;
	shf.l.wrap.b32 	%r969, %r968, %r968, 1;
	add.s32 	%r970, %r969, %r613;
	add.s32 	%r971, %r970, %r612;
	add.s32 	%r972, %r971, %r965;
	add.s32 	%r622, %r972, 1859775393;
	shf.l.wrap.b32 	%r624, %r614, %r614, 30;
	shf.l.wrap.b32 	%r973, %r622, %r622, 5;
	// begin inline asm
	lop3.b32 %r617, %r618, %r624, %r620, 150;
	// end inline asm
	xor.b32  	%r974, %r5821, %r5819;
	xor.b32  	%r975, %r974, %r913;
	xor.b32  	%r976, %r975, %r953;
	shf.l.wrap.b32 	%r977, %r976, %r976, 1;
	add.s32 	%r978, %r977, %r617;
	add.s32 	%r979, %r978, %r616;
	add.s32 	%r980, %r979, %r973;
	add.s32 	%r626, %r980, 1859775393;
	shf.l.wrap.b32 	%r628, %r618, %r618, 30;
	shf.l.wrap.b32 	%r981, %r626, %r626, 5;
	// begin inline asm
	lop3.b32 %r621, %r622, %r628, %r624, 150;
	// end inline asm
	xor.b32  	%r982, %r5820, %r5818;
	xor.b32  	%r983, %r982, %r921;
	xor.b32  	%r984, %r983, %r961;
	shf.l.wrap.b32 	%r985, %r984, %r984, 1;
	add.s32 	%r986, %r985, %r621;
	add.s32 	%r987, %r986, %r620;
	add.s32 	%r988, %r987, %r981;
	add.s32 	%r630, %r988, 1859775393;
	shf.l.wrap.b32 	%r632, %r622, %r622, 30;
	shf.l.wrap.b32 	%r989, %r630, %r630, 5;
	// begin inline asm
	lop3.b32 %r625, %r626, %r632, %r628, 150;
	// end inline asm
	xor.b32  	%r990, %r5819, %r5817;
	xor.b32  	%r991, %r990, %r929;
	xor.b32  	%r992, %r991, %r969;
	shf.l.wrap.b32 	%r993, %r992, %r992, 1;
	add.s32 	%r994, %r993, %r625;
	add.s32 	%r995, %r994, %r624;
	add.s32 	%r996, %r995, %r989;
	add.s32 	%r634, %r996, 1859775393;
	shf.l.wrap.b32 	%r636, %r626, %r626, 30;
	shf.l.wrap.b32 	%r997, %r634, %r634, 5;
	// begin inline asm
	lop3.b32 %r629, %r630, %r636, %r632, 150;
	// end inline asm
	xor.b32  	%r998, %r5818, %r5816;
	xor.b32  	%r999, %r998, %r937;
	xor.b32  	%r1000, %r999, %r977;
	shf.l.wrap.b32 	%r1001, %r1000, %r1000, 1;
	add.s32 	%r1002, %r1001, %r629;
	add.s32 	%r1003, %r1002, %r628;
	add.s32 	%r1004, %r1003, %r997;
	add.s32 	%r638, %r1004, 1859775393;
	shf.l.wrap.b32 	%r640, %r630, %r630, 30;
	shf.l.wrap.b32 	%r1005, %r638, %r638, 5;
	// begin inline asm
	lop3.b32 %r633, %r634, %r640, %r636, 150;
	// end inline asm
	xor.b32  	%r1006, %r5817, %r5815;
	xor.b32  	%r1007, %r1006, %r945;
	xor.b32  	%r1008, %r1007, %r985;
	shf.l.wrap.b32 	%r1009, %r1008, %r1008, 1;
	add.s32 	%r1010, %r1009, %r633;
	add.s32 	%r1011, %r1010, %r632;
	add.s32 	%r1012, %r1011, %r1005;
	add.s32 	%r642, %r1012, 1859775393;
	shf.l.wrap.b32 	%r644, %r634, %r634, 30;
	shf.l.wrap.b32 	%r1013, %r642, %r642, 5;
	// begin inline asm
	lop3.b32 %r637, %r638, %r644, %r640, 150;
	// end inline asm
	xor.b32  	%r1014, %r905, %r5816;
	xor.b32  	%r1015, %r1014, %r953;
	xor.b32  	%r1016, %r1015, %r993;
	shf.l.wrap.b32 	%r1017, %r1016, %r1016, 1;
	add.s32 	%r1018, %r1017, %r637;
	add.s32 	%r1019, %r1018, %r636;
	add.s32 	%r1020, %r1019, %r1013;
	add.s32 	%r646, %r1020, 1859775393;
	shf.l.wrap.b32 	%r648, %r638, %r638, 30;
	shf.l.wrap.b32 	%r1021, %r646, %r646, 5;
	// begin inline asm
	lop3.b32 %r641, %r642, %r648, %r644, 150;
	// end inline asm
	xor.b32  	%r1022, %r913, %r5815;
	xor.b32  	%r1023, %r1022, %r961;
	xor.b32  	%r1024, %r1023, %r1001;
	shf.l.wrap.b32 	%r1025, %r1024, %r1024, 1;
	add.s32 	%r1026, %r1025, %r641;
	add.s32 	%r1027, %r1026, %r640;
	add.s32 	%r1028, %r1027, %r1021;
	add.s32 	%r650, %r1028, 1859775393;
	shf.l.wrap.b32 	%r652, %r642, %r642, 30;
	shf.l.wrap.b32 	%r1029, %r650, %r650, 5;
	// begin inline asm
	lop3.b32 %r645, %r646, %r652, %r648, 150;
	// end inline asm
	xor.b32  	%r1030, %r905, %r921;
	xor.b32  	%r1031, %r1030, %r969;
	xor.b32  	%r1032, %r1031, %r1009;
	shf.l.wrap.b32 	%r1033, %r1032, %r1032, 1;
	add.s32 	%r1034, %r1033, %r645;
	add.s32 	%r1035, %r1034, %r644;
	add.s32 	%r1036, %r1035, %r1029;
	add.s32 	%r654, %r1036, 1859775393;
	shf.l.wrap.b32 	%r656, %r646, %r646, 30;
	shf.l.wrap.b32 	%r1037, %r654, %r654, 5;
	// begin inline asm
	lop3.b32 %r649, %r650, %r656, %r652, 150;
	// end inline asm
	xor.b32  	%r1038, %r929, %r913;
	xor.b32  	%r1039, %r1038, %r977;
	xor.b32  	%r1040, %r1039, %r1017;
	shf.l.wrap.b32 	%r1041, %r1040, %r1040, 1;
	add.s32 	%r1042, %r1041, %r649;
	add.s32 	%r1043, %r1042, %r648;
	add.s32 	%r1044, %r1043, %r1037;
	add.s32 	%r658, %r1044, 1859775393;
	shf.l.wrap.b32 	%r660, %r650, %r650, 30;
	shf.l.wrap.b32 	%r1045, %r658, %r658, 5;
	// begin inline asm
	lop3.b32 %r653, %r654, %r660, %r656, 150;
	// end inline asm
	xor.b32  	%r1046, %r937, %r921;
	xor.b32  	%r1047, %r1046, %r985;
	xor.b32  	%r1048, %r1047, %r1025;
	shf.l.wrap.b32 	%r1049, %r1048, %r1048, 1;
	add.s32 	%r1050, %r1049, %r653;
	add.s32 	%r1051, %r1050, %r652;
	add.s32 	%r1052, %r1051, %r1045;
	add.s32 	%r662, %r1052, 1859775393;
	shf.l.wrap.b32 	%r664, %r654, %r654, 30;
	shf.l.wrap.b32 	%r1053, %r662, %r662, 5;
	// begin inline asm
	lop3.b32 %r657, %r658, %r664, %r660, 150;
	// end inline asm
	xor.b32  	%r1054, %r929, %r945;
	xor.b32  	%r1055, %r1054, %r993;
	xor.b32  	%r1056, %r1055, %r1033;
	shf.l.wrap.b32 	%r1057, %r1056, %r1056, 1;
	add.s32 	%r1058, %r1057, %r657;
	add.s32 	%r1059, %r1058, %r656;
	add.s32 	%r1060, %r1059, %r1053;
	add.s32 	%r666, %r1060, 1859775393;
	shf.l.wrap.b32 	%r668, %r658, %r658, 30;
	shf.l.wrap.b32 	%r1061, %r666, %r666, 5;
	// begin inline asm
	lop3.b32 %r661, %r662, %r668, %r664, 150;
	// end inline asm
	xor.b32  	%r1062, %r953, %r937;
	xor.b32  	%r1063, %r1062, %r1001;
	xor.b32  	%r1064, %r1063, %r1041;
	shf.l.wrap.b32 	%r1065, %r1064, %r1064, 1;
	add.s32 	%r1066, %r1065, %r661;
	add.s32 	%r1067, %r1066, %r660;
	add.s32 	%r1068, %r1067, %r1061;
	add.s32 	%r670, %r1068, 1859775393;
	shf.l.wrap.b32 	%r672, %r662, %r662, 30;
	shf.l.wrap.b32 	%r1069, %r670, %r670, 5;
	// begin inline asm
	lop3.b32 %r665, %r666, %r672, %r668, 150;
	// end inline asm
	xor.b32  	%r1070, %r961, %r945;
	xor.b32  	%r1071, %r1070, %r1009;
	xor.b32  	%r1072, %r1071, %r1049;
	shf.l.wrap.b32 	%r1073, %r1072, %r1072, 1;
	add.s32 	%r1074, %r1073, %r665;
	add.s32 	%r1075, %r1074, %r664;
	add.s32 	%r1076, %r1075, %r1069;
	add.s32 	%r674, %r1076, 1859775393;
	shf.l.wrap.b32 	%r676, %r666, %r666, 30;
	shf.l.wrap.b32 	%r1077, %r674, %r674, 5;
	// begin inline asm
	lop3.b32 %r669, %r670, %r676, %r672, 150;
	// end inline asm
	xor.b32  	%r1078, %r953, %r969;
	xor.b32  	%r1079, %r1078, %r1017;
	xor.b32  	%r1080, %r1079, %r1057;
	shf.l.wrap.b32 	%r1081, %r1080, %r1080, 1;
	add.s32 	%r1082, %r1081, %r669;
	add.s32 	%r1083, %r1082, %r668;
	add.s32 	%r1084, %r1083, %r1077;
	add.s32 	%r678, %r1084, 1859775393;
	shf.l.wrap.b32 	%r680, %r670, %r670, 30;
	shf.l.wrap.b32 	%r1085, %r678, %r678, 5;
	// begin inline asm
	lop3.b32 %r673, %r674, %r680, %r676, 150;
	// end inline asm
	xor.b32  	%r1086, %r977, %r961;
	xor.b32  	%r1087, %r1086, %r1025;
	xor.b32  	%r1088, %r1087, %r1065;
	shf.l.wrap.b32 	%r1089, %r1088, %r1088, 1;
	add.s32 	%r1090, %r1089, %r673;
	add.s32 	%r1091, %r1090, %r672;
	add.s32 	%r1092, %r1091, %r1085;
	add.s32 	%r682, %r1092, 1859775393;
	shf.l.wrap.b32 	%r684, %r674, %r674, 30;
	shf.l.wrap.b32 	%r1093, %r682, %r682, 5;
	// begin inline asm
	lop3.b32 %r677, %r678, %r684, %r680, 232;
	// end inline asm
	xor.b32  	%r1094, %r985, %r969;
	xor.b32  	%r1095, %r1094, %r1033;
	xor.b32  	%r1096, %r1095, %r1073;
	shf.l.wrap.b32 	%r1097, %r1096, %r1096, 1;
	add.s32 	%r1098, %r1097, %r677;
	add.s32 	%r1099, %r1098, %r676;
	add.s32 	%r1100, %r1099, %r1093;
	add.s32 	%r686, %r1100, -1894007588;
	shf.l.wrap.b32 	%r688, %r678, %r678, 30;
	shf.l.wrap.b32 	%r1101, %r686, %r686, 5;
	// begin inline asm
	lop3.b32 %r681, %r682, %r688, %r684, 232;
	// end inline asm
	xor.b32  	%r1102, %r977, %r993;
	xor.b32  	%r1103, %r1102, %r1041;
	xor.b32  	%r1104, %r1103, %r1081;
	shf.l.wrap.b32 	%r1105, %r1104, %r1104, 1;
	add.s32 	%r1106, %r1105, %r681;
	add.s32 	%r1107, %r1106, %r680;
	add.s32 	%r1108, %r1107, %r1101;
	add.s32 	%r690, %r1108, -1894007588;
	shf.l.wrap.b32 	%r692, %r682, %r682, 30;
	shf.l.wrap.b32 	%r1109, %r690, %r690, 5;
	// begin inline asm
	lop3.b32 %r685, %r686, %r692, %r688, 232;
	// end inline asm
	xor.b32  	%r1110, %r1001, %r985;
	xor.b32  	%r1111, %r1110, %r1049;
	xor.b32  	%r1112, %r1111, %r1089;
	shf.l.wrap.b32 	%r1113, %r1112, %r1112, 1;
	add.s32 	%r1114, %r1113, %r685;
	add.s32 	%r1115, %r1114, %r684;
	add.s32 	%r1116, %r1115, %r1109;
	add.s32 	%r694, %r1116, -1894007588;
	shf.l.wrap.b32 	%r696, %r686, %r686, 30;
	shf.l.wrap.b32 	%r1117, %r694, %r694, 5;
	// begin inline asm
	lop3.b32 %r689, %r690, %r696, %r692, 232;
	// end inline asm
	xor.b32  	%r1118, %r1009, %r993;
	xor.b32  	%r1119, %r1118, %r1057;
	xor.b32  	%r1120, %r1119, %r1097;
	shf.l.wrap.b32 	%r1121, %r1120, %r1120, 1;
	add.s32 	%r1122, %r1121, %r689;
	add.s32 	%r1123, %r1122, %r688;
	add.s32 	%r1124, %r1123, %r1117;
	add.s32 	%r698, %r1124, -1894007588;
	shf.l.wrap.b32 	%r700, %r690, %r690, 30;
	shf.l.wrap.b32 	%r1125, %r698, %r698, 5;
	// begin inline asm
	lop3.b32 %r693, %r694, %r700, %r696, 232;
	// end inline asm
	xor.b32  	%r1126, %r1001, %r1017;
	xor.b32  	%r1127, %r1126, %r1065;
	xor.b32  	%r1128, %r1127, %r1105;
	shf.l.wrap.b32 	%r1129, %r1128, %r1128, 1;
	add.s32 	%r1130, %r1129, %r693;
	add.s32 	%r1131, %r1130, %r692;
	add.s32 	%r1132, %r1131, %r1125;
	add.s32 	%r702, %r1132, -1894007588;
	shf.l.wrap.b32 	%r704, %r694, %r694, 30;
	shf.l.wrap.b32 	%r1133, %r702, %r702, 5;
	// begin inline asm
	lop3.b32 %r697, %r698, %r704, %r700, 232;
	// end inline asm
	xor.b32  	%r1134, %r1025, %r1009;
	xor.b32  	%r1135, %r1134, %r1073;
	xor.b32  	%r1136, %r1135, %r1113;
	shf.l.wrap.b32 	%r1137, %r1136, %r1136, 1;
	add.s32 	%r1138, %r1137, %r697;
	add.s32 	%r1139, %r1138, %r696;
	add.s32 	%r1140, %r1139, %r1133;
	add.s32 	%r706, %r1140, -1894007588;
	shf.l.wrap.b32 	%r708, %r698, %r698, 30;
	shf.l.wrap.b32 	%r1141, %r706, %r706, 5;
	// begin inline asm
	lop3.b32 %r701, %r702, %r708, %r704, 232;
	// end inline asm
	xor.b32  	%r1142, %r1033, %r1017;
	xor.b32  	%r1143, %r1142, %r1081;
	xor.b32  	%r1144, %r1143, %r1121;
	shf.l.wrap.b32 	%r1145, %r1144, %r1144, 1;
	add.s32 	%r1146, %r1145, %r701;
	add.s32 	%r1147, %r1146, %r700;
	add.s32 	%r1148, %r1147, %r1141;
	add.s32 	%r710, %r1148, -1894007588;
	shf.l.wrap.b32 	%r712, %r702, %r702, 30;
	shf.l.wrap.b32 	%r1149, %r710, %r710, 5;
	// begin inline asm
	lop3.b32 %r705, %r706, %r712, %r708, 232;
	// end inline asm
	xor.b32  	%r1150, %r1025, %r1041;
	xor.b32  	%r1151, %r1150, %r1089;
	xor.b32  	%r1152, %r1151, %r1129;
	shf.l.wrap.b32 	%r1153, %r1152, %r1152, 1;
	add.s32 	%r1154, %r1153, %r705;
	add.s32 	%r1155, %r1154, %r704;
	add.s32 	%r1156, %r1155, %r1149;
	add.s32 	%r714, %r1156, -1894007588;
	shf.l.wrap.b32 	%r716, %r706, %r706, 30;
	shf.l.wrap.b32 	%r1157, %r714, %r714, 5;
	// begin inline asm
	lop3.b32 %r709, %r710, %r716, %r712, 232;
	// end inline asm
	xor.b32  	%r1158, %r1049, %r1033;
	xor.b32  	%r1159, %r1158, %r1097;
	xor.b32  	%r1160, %r1159, %r1137;
	shf.l.wrap.b32 	%r1161, %r1160, %r1160, 1;
	add.s32 	%r1162, %r1161, %r709;
	add.s32 	%r1163, %r1162, %r708;
	add.s32 	%r1164, %r1163, %r1157;
	add.s32 	%r718, %r1164, -1894007588;
	shf.l.wrap.b32 	%r720, %r710, %r710, 30;
	shf.l.wrap.b32 	%r1165, %r718, %r718, 5;
	// begin inline asm
	lop3.b32 %r713, %r714, %r720, %r716, 232;
	// end inline asm
	xor.b32  	%r1166, %r1057, %r1041;
	xor.b32  	%r1167, %r1166, %r1105;
	xor.b32  	%r1168, %r1167, %r1145;
	shf.l.wrap.b32 	%r1169, %r1168, %r1168, 1;
	add.s32 	%r1170, %r1169, %r713;
	add.s32 	%r1171, %r1170, %r712;
	add.s32 	%r1172, %r1171, %r1165;
	add.s32 	%r722, %r1172, -1894007588;
	shf.l.wrap.b32 	%r724, %r714, %r714, 30;
	shf.l.wrap.b32 	%r1173, %r722, %r722, 5;
	// begin inline asm
	lop3.b32 %r717, %r718, %r724, %r720, 232;
	// end inline asm
	xor.b32  	%r1174, %r1049, %r1065;
	xor.b32  	%r1175, %r1174, %r1113;
	xor.b32  	%r1176, %r1175, %r1153;
	shf.l.wrap.b32 	%r1177, %r1176, %r1176, 1;
	add.s32 	%r1178, %r1177, %r717;
	add.s32 	%r1179, %r1178, %r716;
	add.s32 	%r1180, %r1179, %r1173;
	add.s32 	%r726, %r1180, -1894007588;
	shf.l.wrap.b32 	%r728, %r718, %r718, 30;
	shf.l.wrap.b32 	%r1181, %r726, %r726, 5;
	// begin inline asm
	lop3.b32 %r721, %r722, %r728, %r724, 232;
	// end inline asm
	xor.b32  	%r1182, %r1073, %r1057;
	xor.b32  	%r1183, %r1182, %r1121;
	xor.b32  	%r1184, %r1183, %r1161;
	shf.l.wrap.b32 	%r1185, %r1184, %r1184, 1;
	add.s32 	%r1186, %r1185, %r721;
	add.s32 	%r1187, %r1186, %r720;
	add.s32 	%r1188, %r1187, %r1181;
	add.s32 	%r730, %r1188, -1894007588;
	shf.l.wrap.b32 	%r732, %r722, %r722, 30;
	shf.l.wrap.b32 	%r1189, %r730, %r730, 5;
	// begin inline asm
	lop3.b32 %r725, %r726, %r732, %r728, 232;
	// end inline asm
	xor.b32  	%r1190, %r1081, %r1065;
	xor.b32  	%r1191, %r1190, %r1129;
	xor.b32  	%r1192, %r1191, %r1169;
	shf.l.wrap.b32 	%r1193, %r1192, %r1192, 1;
	add.s32 	%r1194, %r1193, %r725;
	add.s32 	%r1195, %r1194, %r724;
	add.s32 	%r1196, %r1195, %r1189;
	add.s32 	%r734, %r1196, -1894007588;
	shf.l.wrap.b32 	%r736, %r726, %r726, 30;
	shf.l.wrap.b32 	%r1197, %r734, %r734, 5;
	// begin inline asm
	lop3.b32 %r729, %r730, %r736, %r732, 232;
	// end inline asm
	xor.b32  	%r1198, %r1073, %r1089;
	xor.b32  	%r1199, %r1198, %r1137;
	xor.b32  	%r1200, %r1199, %r1177;
	shf.l.wrap.b32 	%r1201, %r1200, %r1200, 1;
	add.s32 	%r1202, %r1201, %r729;
	add.s32 	%r1203, %r1202, %r728;
	add.s32 	%r1204, %r1203, %r1197;
	add.s32 	%r738, %r1204, -1894007588;
	shf.l.wrap.b32 	%r740, %r730, %r730, 30;
	shf.l.wrap.b32 	%r1205, %r738, %r738, 5;
	// begin inline asm
	lop3.b32 %r733, %r734, %r740, %r736, 232;
	// end inline asm
	xor.b32  	%r1206, %r1097, %r1081;
	xor.b32  	%r1207, %r1206, %r1145;
	xor.b32  	%r1208, %r1207, %r1185;
	shf.l.wrap.b32 	%r1209, %r1208, %r1208, 1;
	add.s32 	%r1210, %r1209, %r733;
	add.s32 	%r1211, %r1210, %r732;
	add.s32 	%r1212, %r1211, %r1205;
	add.s32 	%r742, %r1212, -1894007588;
	shf.l.wrap.b32 	%r744, %r734, %r734, 30;
	shf.l.wrap.b32 	%r1213, %r742, %r742, 5;
	// begin inline asm
	lop3.b32 %r737, %r738, %r744, %r740, 232;
	// end inline asm
	xor.b32  	%r1214, %r1105, %r1089;
	xor.b32  	%r1215, %r1214, %r1153;
	xor.b32  	%r1216, %r1215, %r1193;
	shf.l.wrap.b32 	%r1217, %r1216, %r1216, 1;
	add.s32 	%r1218, %r1217, %r737;
	add.s32 	%r1219, %r1218, %r736;
	add.s32 	%r1220, %r1219, %r1213;
	add.s32 	%r746, %r1220, -1894007588;
	shf.l.wrap.b32 	%r748, %r738, %r738, 30;
	shf.l.wrap.b32 	%r1221, %r746, %r746, 5;
	// begin inline asm
	lop3.b32 %r741, %r742, %r748, %r744, 232;
	// end inline asm
	xor.b32  	%r1222, %r1097, %r1113;
	xor.b32  	%r1223, %r1222, %r1161;
	xor.b32  	%r1224, %r1223, %r1201;
	shf.l.wrap.b32 	%r1225, %r1224, %r1224, 1;
	add.s32 	%r1226, %r1225, %r741;
	add.s32 	%r1227, %r1226, %r740;
	add.s32 	%r1228, %r1227, %r1221;
	add.s32 	%r750, %r1228, -1894007588;
	shf.l.wrap.b32 	%r752, %r742, %r742, 30;
	shf.l.wrap.b32 	%r1229, %r750, %r750, 5;
	// begin inline asm
	lop3.b32 %r745, %r746, %r752, %r748, 232;
	// end inline asm
	xor.b32  	%r1230, %r1121, %r1105;
	xor.b32  	%r1231, %r1230, %r1169;
	xor.b32  	%r1232, %r1231, %r1209;
	shf.l.wrap.b32 	%r1233, %r1232, %r1232, 1;
	add.s32 	%r1234, %r1233, %r745;
	add.s32 	%r1235, %r1234, %r744;
	add.s32 	%r1236, %r1235, %r1229;
	add.s32 	%r754, %r1236, -1894007588;
	shf.l.wrap.b32 	%r756, %r746, %r746, 30;
	shf.l.wrap.b32 	%r1237, %r754, %r754, 5;
	// begin inline asm
	lop3.b32 %r749, %r750, %r756, %r752, 232;
	// end inline asm
	xor.b32  	%r1238, %r1129, %r1113;
	xor.b32  	%r1239, %r1238, %r1177;
	xor.b32  	%r1240, %r1239, %r1217;
	shf.l.wrap.b32 	%r1241, %r1240, %r1240, 1;
	add.s32 	%r1242, %r1241, %r749;
	add.s32 	%r1243, %r1242, %r748;
	add.s32 	%r1244, %r1243, %r1237;
	add.s32 	%r758, %r1244, -1894007588;
	shf.l.wrap.b32 	%r760, %r750, %r750, 30;
	shf.l.wrap.b32 	%r1245, %r758, %r758, 5;
	// begin inline asm
	lop3.b32 %r753, %r754, %r760, %r756, 232;
	// end inline asm
	xor.b32  	%r1246, %r1121, %r1137;
	xor.b32  	%r1247, %r1246, %r1185;
	xor.b32  	%r1248, %r1247, %r1225;
	shf.l.wrap.b32 	%r1249, %r1248, %r1248, 1;
	add.s32 	%r1250, %r1249, %r753;
	add.s32 	%r1251, %r1250, %r752;
	add.s32 	%r1252, %r1251, %r1245;
	add.s32 	%r762, %r1252, -1894007588;
	shf.l.wrap.b32 	%r764, %r754, %r754, 30;
	shf.l.wrap.b32 	%r1253, %r762, %r762, 5;
	// begin inline asm
	lop3.b32 %r757, %r758, %r764, %r760, 150;
	// end inline asm
	xor.b32  	%r1254, %r1145, %r1129;
	xor.b32  	%r1255, %r1254, %r1193;
	xor.b32  	%r1256, %r1255, %r1233;
	shf.l.wrap.b32 	%r1257, %r1256, %r1256, 1;
	add.s32 	%r1258, %r1257, %r757;
	add.s32 	%r1259, %r1258, %r756;
	add.s32 	%r1260, %r1259, %r1253;
	add.s32 	%r766, %r1260, -899497514;
	shf.l.wrap.b32 	%r768, %r758, %r758, 30;
	shf.l.wrap.b32 	%r1261, %r766, %r766, 5;
	// begin inline asm
	lop3.b32 %r761, %r762, %r768, %r764, 150;
	// end inline asm
	xor.b32  	%r1262, %r1153, %r1137;
	xor.b32  	%r1263, %r1262, %r1201;
	xor.b32  	%r1264, %r1263, %r1241;
	shf.l.wrap.b32 	%r1265, %r1264, %r1264, 1;
	add.s32 	%r1266, %r1265, %r761;
	add.s32 	%r1267, %r1266, %r760;
	add.s32 	%r1268, %r1267, %r1261;
	add.s32 	%r770, %r1268, -899497514;
	shf.l.wrap.b32 	%r772, %r762, %r762, 30;
	shf.l.wrap.b32 	%r1269, %r770, %r770, 5;
	// begin inline asm
	lop3.b32 %r765, %r766, %r772, %r768, 150;
	// end inline asm
	xor.b32  	%r1270, %r1145, %r1161;
	xor.b32  	%r1271, %r1270, %r1209;
	xor.b32  	%r1272, %r1271, %r1249;
	shf.l.wrap.b32 	%r1273, %r1272, %r1272, 1;
	add.s32 	%r1274, %r1273, %r765;
	add.s32 	%r1275, %r1274, %r764;
	add.s32 	%r1276, %r1275, %r1269;
	add.s32 	%r774, %r1276, -899497514;
	shf.l.wrap.b32 	%r776, %r766, %r766, 30;
	shf.l.wrap.b32 	%r1277, %r774, %r774, 5;
	// begin inline asm
	lop3.b32 %r769, %r770, %r776, %r772, 150;
	// end inline asm
	xor.b32  	%r1278, %r1169, %r1153;
	xor.b32  	%r1279, %r1278, %r1217;
	xor.b32  	%r1280, %r1279, %r1257;
	shf.l.wrap.b32 	%r1281, %r1280, %r1280, 1;
	add.s32 	%r1282, %r1281, %r769;
	add.s32 	%r1283, %r1282, %r768;
	add.s32 	%r1284, %r1283, %r1277;
	add.s32 	%r778, %r1284, -899497514;
	shf.l.wrap.b32 	%r780, %r770, %r770, 30;
	shf.l.wrap.b32 	%r1285, %r778, %r778, 5;
	// begin inline asm
	lop3.b32 %r773, %r774, %r780, %r776, 150;
	// end inline asm
	xor.b32  	%r1286, %r1177, %r1161;
	xor.b32  	%r1287, %r1286, %r1225;
	xor.b32  	%r1288, %r1287, %r1265;
	shf.l.wrap.b32 	%r1289, %r1288, %r1288, 1;
	add.s32 	%r1290, %r1289, %r773;
	add.s32 	%r1291, %r1290, %r772;
	add.s32 	%r1292, %r1291, %r1285;
	add.s32 	%r782, %r1292, -899497514;
	shf.l.wrap.b32 	%r784, %r774, %r774, 30;
	shf.l.wrap.b32 	%r1293, %r782, %r782, 5;
	// begin inline asm
	lop3.b32 %r777, %r778, %r784, %r780, 150;
	// end inline asm
	xor.b32  	%r1294, %r1169, %r1185;
	xor.b32  	%r1295, %r1294, %r1233;
	xor.b32  	%r1296, %r1295, %r1273;
	shf.l.wrap.b32 	%r1297, %r1296, %r1296, 1;
	add.s32 	%r1298, %r1297, %r777;
	add.s32 	%r1299, %r1298, %r776;
	add.s32 	%r1300, %r1299, %r1293;
	add.s32 	%r786, %r1300, -899497514;
	shf.l.wrap.b32 	%r788, %r778, %r778, 30;
	shf.l.wrap.b32 	%r1301, %r786, %r786, 5;
	// begin inline asm
	lop3.b32 %r781, %r782, %r788, %r784, 150;
	// end inline asm
	xor.b32  	%r1302, %r1193, %r1177;
	xor.b32  	%r1303, %r1302, %r1241;
	xor.b32  	%r1304, %r1303, %r1281;
	shf.l.wrap.b32 	%r1305, %r1304, %r1304, 1;
	add.s32 	%r1306, %r1305, %r781;
	add.s32 	%r1307, %r1306, %r780;
	add.s32 	%r1308, %r1307, %r1301;
	add.s32 	%r790, %r1308, -899497514;
	shf.l.wrap.b32 	%r792, %r782, %r782, 30;
	shf.l.wrap.b32 	%r1309, %r790, %r790, 5;
	// begin inline asm
	lop3.b32 %r785, %r786, %r792, %r788, 150;
	// end inline asm
	xor.b32  	%r1310, %r1201, %r1185;
	xor.b32  	%r1311, %r1310, %r1249;
	xor.b32  	%r1312, %r1311, %r1289;
	shf.l.wrap.b32 	%r1313, %r1312, %r1312, 1;
	add.s32 	%r1314, %r1313, %r785;
	add.s32 	%r1315, %r1314, %r784;
	add.s32 	%r1316, %r1315, %r1309;
	add.s32 	%r794, %r1316, -899497514;
	shf.l.wrap.b32 	%r796, %r786, %r786, 30;
	shf.l.wrap.b32 	%r1317, %r794, %r794, 5;
	// begin inline asm
	lop3.b32 %r789, %r790, %r796, %r792, 150;
	// end inline asm
	xor.b32  	%r1318, %r1193, %r1209;
	xor.b32  	%r1319, %r1318, %r1257;
	xor.b32  	%r1320, %r1319, %r1297;
	shf.l.wrap.b32 	%r1321, %r1320, %r1320, 1;
	add.s32 	%r1322, %r1321, %r789;
	add.s32 	%r1323, %r1322, %r788;
	add.s32 	%r1324, %r1323, %r1317;
	add.s32 	%r798, %r1324, -899497514;
	shf.l.wrap.b32 	%r800, %r790, %r790, 30;
	shf.l.wrap.b32 	%r1325, %r798, %r798, 5;
	// begin inline asm
	lop3.b32 %r793, %r794, %r800, %r796, 150;
	// end inline asm
	xor.b32  	%r1326, %r1217, %r1201;
	xor.b32  	%r1327, %r1326, %r1265;
	xor.b32  	%r1328, %r1327, %r1305;
	shf.l.wrap.b32 	%r1329, %r1328, %r1328, 1;
	add.s32 	%r1330, %r1329, %r793;
	add.s32 	%r1331, %r1330, %r792;
	add.s32 	%r1332, %r1331, %r1325;
	add.s32 	%r802, %r1332, -899497514;
	shf.l.wrap.b32 	%r804, %r794, %r794, 30;
	shf.l.wrap.b32 	%r1333, %r802, %r802, 5;
	// begin inline asm
	lop3.b32 %r797, %r798, %r804, %r800, 150;
	// end inline asm
	xor.b32  	%r1334, %r1225, %r1209;
	xor.b32  	%r1335, %r1334, %r1273;
	xor.b32  	%r1336, %r1335, %r1313;
	shf.l.wrap.b32 	%r1337, %r1336, %r1336, 1;
	add.s32 	%r1338, %r1337, %r797;
	add.s32 	%r1339, %r1338, %r796;
	add.s32 	%r1340, %r1339, %r1333;
	add.s32 	%r806, %r1340, -899497514;
	shf.l.wrap.b32 	%r808, %r798, %r798, 30;
	shf.l.wrap.b32 	%r1341, %r806, %r806, 5;
	// begin inline asm
	lop3.b32 %r801, %r802, %r808, %r804, 150;
	// end inline asm
	xor.b32  	%r1342, %r1217, %r1233;
	xor.b32  	%r1343, %r1342, %r1281;
	xor.b32  	%r1344, %r1343, %r1321;
	shf.l.wrap.b32 	%r1345, %r1344, %r1344, 1;
	add.s32 	%r1346, %r1345, %r801;
	add.s32 	%r1347, %r1346, %r800;
	add.s32 	%r1348, %r1347, %r1341;
	add.s32 	%r810, %r1348, -899497514;
	shf.l.wrap.b32 	%r812, %r802, %r802, 30;
	shf.l.wrap.b32 	%r1349, %r810, %r810, 5;
	// begin inline asm
	lop3.b32 %r805, %r806, %r812, %r808, 150;
	// end inline asm
	xor.b32  	%r1350, %r1241, %r1225;
	xor.b32  	%r1351, %r1350, %r1289;
	xor.b32  	%r1352, %r1351, %r1329;
	shf.l.wrap.b32 	%r1353, %r1352, %r1352, 1;
	add.s32 	%r1354, %r1353, %r805;
	add.s32 	%r1355, %r1354, %r804;
	add.s32 	%r1356, %r1355, %r1349;
	add.s32 	%r814, %r1356, -899497514;
	shf.l.wrap.b32 	%r816, %r806, %r806, 30;
	shf.l.wrap.b32 	%r1357, %r814, %r814, 5;
	// begin inline asm
	lop3.b32 %r809, %r810, %r816, %r812, 150;
	// end inline asm
	xor.b32  	%r1358, %r1249, %r1233;
	xor.b32  	%r1359, %r1358, %r1297;
	xor.b32  	%r1360, %r1359, %r1337;
	shf.l.wrap.b32 	%r1361, %r1360, %r1360, 1;
	add.s32 	%r1362, %r1361, %r809;
	add.s32 	%r1363, %r1362, %r808;
	add.s32 	%r1364, %r1363, %r1357;
	add.s32 	%r818, %r1364, -899497514;
	shf.l.wrap.b32 	%r820, %r810, %r810, 30;
	shf.l.wrap.b32 	%r1365, %r818, %r818, 5;
	// begin inline asm
	lop3.b32 %r813, %r814, %r820, %r816, 150;
	// end inline asm
	xor.b32  	%r1366, %r1241, %r1257;
	xor.b32  	%r1367, %r1366, %r1305;
	xor.b32  	%r1368, %r1367, %r1345;
	shf.l.wrap.b32 	%r1369, %r1368, %r1368, 1;
	add.s32 	%r1370, %r1369, %r813;
	add.s32 	%r1371, %r1370, %r812;
	add.s32 	%r1372, %r1371, %r1365;
	add.s32 	%r822, %r1372, -899497514;
	shf.l.wrap.b32 	%r824, %r814, %r814, 30;
	shf.l.wrap.b32 	%r1373, %r822, %r822, 5;
	// begin inline asm
	lop3.b32 %r817, %r818, %r824, %r820, 150;
	// end inline asm
	xor.b32  	%r1374, %r1265, %r1249;
	xor.b32  	%r1375, %r1374, %r1313;
	xor.b32  	%r1376, %r1375, %r1353;
	shf.l.wrap.b32 	%r1377, %r1376, %r1376, 1;
	add.s32 	%r1378, %r1377, %r817;
	add.s32 	%r1379, %r1378, %r816;
	add.s32 	%r1380, %r1379, %r1373;
	add.s32 	%r826, %r1380, -899497514;
	shf.l.wrap.b32 	%r828, %r818, %r818, 30;
	shf.l.wrap.b32 	%r1381, %r826, %r826, 5;
	// begin inline asm
	lop3.b32 %r821, %r822, %r828, %r824, 150;
	// end inline asm
	xor.b32  	%r1382, %r1273, %r1257;
	xor.b32  	%r1383, %r1382, %r1321;
	xor.b32  	%r1384, %r1383, %r1361;
	shf.l.wrap.b32 	%r1385, %r1384, %r1384, 1;
	add.s32 	%r1386, %r821, %r1385;
	add.s32 	%r1387, %r1386, %r820;
	add.s32 	%r1388, %r1387, %r1381;
	add.s32 	%r830, %r1388, -899497514;
	shf.l.wrap.b32 	%r832, %r822, %r822, 30;
	shf.l.wrap.b32 	%r1389, %r830, %r830, 5;
	// begin inline asm
	lop3.b32 %r825, %r826, %r832, %r828, 150;
	// end inline asm
	xor.b32  	%r1390, %r1265, %r1281;
	xor.b32  	%r1391, %r1390, %r1329;
	xor.b32  	%r1392, %r1391, %r1369;
	shf.l.wrap.b32 	%r1393, %r1392, %r1392, 1;
	add.s32 	%r1394, %r1393, %r825;
	add.s32 	%r1395, %r1394, %r824;
	add.s32 	%r1396, %r1395, %r1389;
	add.s32 	%r834, %r1396, -899497514;
	shf.l.wrap.b32 	%r836, %r826, %r826, 30;
	shf.l.wrap.b32 	%r1397, %r834, %r834, 5;
	// begin inline asm
	lop3.b32 %r829, %r830, %r836, %r832, 150;
	// end inline asm
	xor.b32  	%r1398, %r1289, %r1273;
	xor.b32  	%r1399, %r1398, %r1337;
	xor.b32  	%r1400, %r1399, %r1377;
	shf.l.wrap.b32 	%r1401, %r1400, %r1400, 1;
	add.s32 	%r1402, %r1401, %r829;
	add.s32 	%r1403, %r1402, %r828;
	add.s32 	%r1404, %r1403, %r1397;
	add.s32 	%r1405, %r1404, -899497514;
	shf.l.wrap.b32 	%r835, %r830, %r830, 30;
	shf.l.wrap.b32 	%r1406, %r1405, %r1405, 5;
	// begin inline asm
	lop3.b32 %r833, %r834, %r835, %r836, 150;
	// end inline asm
	xor.b32  	%r1407, %r1297, %r1281;
	xor.b32  	%r1408, %r1407, %r1345;
	xor.b32  	%r1409, %r1408, %r1385;
	shf.l.wrap.b32 	%r1410, %r1409, %r1409, 1;
	shf.l.wrap.b32 	%r1411, %r834, %r834, 30;
	add.s32 	%r1412, %r833, %r1410;
	add.s32 	%r1413, %r1412, %r5813;
	add.s32 	%r1414, %r1413, %r832;
	add.s32 	%r1415, %r1414, %r1406;
	add.s32 	%r5813, %r1415, -899497514;
	st.local.u32 	[%rd16+4], %r5813;
	add.s32 	%r5812, %r1405, %r5812;
	st.local.u32 	[%rd16+8], %r5812;
	add.s32 	%r5811, %r1411, %r5811;
	st.local.u32 	[%rd16+12], %r5811;
	add.s32 	%r5810, %r835, %r5810;
	st.local.u32 	[%rd16+16], %r5810;
	add.s32 	%r5809, %r836, %r5809;
	st.local.u32 	[%rd16+20], %r5809;
	add.s64 	%rd189, %rd189, 64;
	add.s64 	%rd187, %rd187, 64;
	add.s32 	%r5831, %r5831, -64;
	setp.gt.u32 	%p9, %r5831, 63;
	@%p9 bra 	$L__BB3_9;

$L__BB3_13:
	setp.eq.s32 	%p10, %r5831, 0;
	@%p10 bra 	$L__BB3_19;

	add.s64 	%rd194, %rd16, 24;
	and.b32  	%r5833, %r5831, 3;
	setp.eq.s32 	%p11, %r5833, 0;
	mov.u32 	%r5834, %r5831;
	@%p11 bra 	$L__BB3_17;

	mov.u64 	%rd190, %rd194;
	mov.u64 	%rd191, %rd189;
	mov.u32 	%r5834, %r5831;

$L__BB3_16:
	.pragma "nounroll";
	add.s32 	%r5834, %r5834, -1;
	add.s64 	%rd189, %rd191, 1;
	ld.local.u8 	%rs86, [%rd191];
	add.s64 	%rd194, %rd190, 1;
	st.local.u8 	[%rd190], %rs86;
	add.s32 	%r5833, %r5833, -1;
	setp.ne.s32 	%p12, %r5833, 0;
	mov.u64 	%rd190, %rd194;
	mov.u64 	%rd191, %rd189;
	@%p12 bra 	$L__BB3_16;

$L__BB3_17:
	add.s32 	%r1416, %r5831, -1;
	setp.lt.u32 	%p13, %r1416, 3;
	@%p13 bra 	$L__BB3_19;

$L__BB3_18:
	ld.local.u8 	%rs87, [%rd189];
	st.local.u8 	[%rd194], %rs87;
	ld.local.u8 	%rs88, [%rd189+1];
	st.local.u8 	[%rd194+1], %rs88;
	ld.local.u8 	%rs89, [%rd189+2];
	st.local.u8 	[%rd194+2], %rs89;
	add.s64 	%rd34, %rd189, 4;
	ld.local.u8 	%rs90, [%rd189+3];
	add.s64 	%rd35, %rd194, 4;
	st.local.u8 	[%rd194+3], %rs90;
	add.s32 	%r5834, %r5834, -4;
	setp.ne.s32 	%p14, %r5834, 0;
	mov.u64 	%rd194, %rd35;
	mov.u64 	%rd189, %rd34;
	@%p14 bra 	$L__BB3_18;

$L__BB3_19:
	mov.u32 	%r5836, 0;
	add.u64 	%rd205, %SP, 16;
	cvta.to.local.u64 	%rd207, %rd205;
	add.s64 	%rd36, %rd207, 1;
	mov.u64 	%rd196, 0;

$L__BB3_20:
	add.s64 	%rd129, %rd36, %rd196;
	mov.u16 	%rs91, 0;
	st.local.u8 	[%rd129], %rs91;
	add.s64 	%rd196, %rd196, 1;
	add.s32 	%r5836, %r5836, 1;
	setp.lt.u32 	%p15, %r5836, 63;
	@%p15 bra 	$L__BB3_20;

	mov.u16 	%rs92, 128;
	st.local.u8 	[%rd207], %rs92;
	ld.local.u32 	%r81, [%rd16];
	shr.u32 	%r1418, %r81, 21;
	shr.u32 	%r1419, %r81, 13;
	cvt.u16.u32 	%rs93, %r81;
	shr.u16 	%rs94, %rs93, 5;
	and.b16  	%rs95, %rs94, 255;
	shl.b16 	%rs96, %rs93, 3;
	add.u64 	%rd134, %SPL, 0;
	and.b32  	%r1420, %r1418, 255;
	prmt.b32 	%r1421, %r1419, %r1420, 30212;
	cvt.u16.u32 	%rs97, %r1421;
	cvt.u32.u16 	%r1422, %rs96;
	cvt.u32.u16 	%r1423, %rs95;
	prmt.b32 	%r1424, %r1422, %r1423, 30212;
	cvt.u16.u32 	%rs98, %r1424;
	st.local.v4.u16 	[%rd134], {%rs91, %rs91, %rs97, %rs98};
	and.b32  	%r5841, %r81, 63;
	setp.lt.u32 	%p16, %r5841, 56;
	selp.b32 	%r1425, 56, 120, %p16;
	sub.s32 	%r5860, %r1425, %r5841;
	setp.eq.s32 	%p17, %r5860, 0;
	@%p17 bra 	$L__BB3_41;

	add.s32 	%r1426, %r81, %r5860;
	st.local.u32 	[%rd16], %r1426;
	mov.u32 	%r1427, 64;
	sub.s32 	%r84, %r1427, %r5841;
	setp.lt.u32 	%p18, %r5860, %r84;
	setp.eq.s32 	%p19, %r5841, 0;
	or.pred  	%p20, %p19, %p18;
	@%p20 bra 	$L__BB3_30;

	setp.eq.s32 	%p21, %r84, 0;
	@%p21 bra 	$L__BB3_29;

	cvt.u64.u32 	%rd139, %r5841;
	add.s64 	%rd140, %rd16, %rd139;
	add.s64 	%rd201, %rd140, 24;
	add.u64 	%rd141, %SP, 16;
	add.u64 	%rd202, %SPL, 16;
	and.b32  	%r5838, %r84, 3;
	setp.eq.s32 	%p22, %r5838, 0;
	mov.u32 	%r5839, %r84;
	@%p22 bra 	$L__BB3_27;

	cvta.to.local.u64 	%rd198, %rd141;
	mov.u64 	%rd197, %rd201;
	mov.u32 	%r5839, %r84;

$L__BB3_26:
	.pragma "nounroll";
	add.s32 	%r5839, %r5839, -1;
	add.s64 	%rd202, %rd198, 1;
	ld.local.u8 	%rs100, [%rd198];
	add.s64 	%rd201, %rd197, 1;
	st.local.u8 	[%rd197], %rs100;
	add.s32 	%r5838, %r5838, -1;
	setp.ne.s32 	%p23, %r5838, 0;
	mov.u64 	%rd197, %rd201;
	mov.u64 	%rd198, %rd202;
	@%p23 bra 	$L__BB3_26;

$L__BB3_27:
	xor.b32  	%r1428, %r5841, 63;
	setp.lt.u32 	%p24, %r1428, 3;
	@%p24 bra 	$L__BB3_29;

$L__BB3_28:
	ld.local.u8 	%rs101, [%rd202];
	st.local.u8 	[%rd201], %rs101;
	ld.local.u8 	%rs102, [%rd202+1];
	st.local.u8 	[%rd201+1], %rs102;
	ld.local.u8 	%rs103, [%rd202+2];
	st.local.u8 	[%rd201+2], %rs103;
	add.s64 	%rd53, %rd202, 4;
	ld.local.u8 	%rs104, [%rd202+3];
	add.s64 	%rd54, %rd201, 4;
	st.local.u8 	[%rd201+3], %rs104;
	add.s32 	%r5839, %r5839, -4;
	setp.ne.s32 	%p25, %r5839, 0;
	mov.u64 	%rd201, %rd54;
	mov.u64 	%rd202, %rd53;
	@%p25 bra 	$L__BB3_28;

$L__BB3_29:
	ld.local.u32 	%r1750, [%rd16+24];
	shf.l.wrap.b32 	%r1751, %r1750, %r1750, 16;
	shl.b32 	%r1752, %r1751, 8;
	and.b32  	%r1753, %r1752, -16711936;
	shr.u32 	%r1754, %r1751, 8;
	and.b32  	%r1755, %r1754, 16711935;
	or.b32  	%r1756, %r1753, %r1755;
	ld.local.u32 	%r1757, [%rd16+28];
	shf.l.wrap.b32 	%r1758, %r1757, %r1757, 16;
	shl.b32 	%r1759, %r1758, 8;
	and.b32  	%r1760, %r1759, -16711936;
	shr.u32 	%r1761, %r1758, 8;
	and.b32  	%r1762, %r1761, 16711935;
	or.b32  	%r1763, %r1760, %r1762;
	ld.local.u32 	%r1764, [%rd16+32];
	shf.l.wrap.b32 	%r1765, %r1764, %r1764, 16;
	shl.b32 	%r1766, %r1765, 8;
	and.b32  	%r1767, %r1766, -16711936;
	shr.u32 	%r1768, %r1765, 8;
	and.b32  	%r1769, %r1768, 16711935;
	or.b32  	%r1770, %r1767, %r1769;
	ld.local.u32 	%r1771, [%rd16+36];
	shf.l.wrap.b32 	%r1772, %r1771, %r1771, 16;
	shl.b32 	%r1773, %r1772, 8;
	and.b32  	%r1774, %r1773, -16711936;
	shr.u32 	%r1775, %r1772, 8;
	and.b32  	%r1776, %r1775, 16711935;
	or.b32  	%r1777, %r1774, %r1776;
	ld.local.u32 	%r1778, [%rd16+40];
	shf.l.wrap.b32 	%r1779, %r1778, %r1778, 16;
	shl.b32 	%r1780, %r1779, 8;
	and.b32  	%r1781, %r1780, -16711936;
	shr.u32 	%r1782, %r1779, 8;
	and.b32  	%r1783, %r1782, 16711935;
	or.b32  	%r1784, %r1781, %r1783;
	ld.local.u32 	%r1785, [%rd16+44];
	shf.l.wrap.b32 	%r1786, %r1785, %r1785, 16;
	shl.b32 	%r1787, %r1786, 8;
	and.b32  	%r1788, %r1787, -16711936;
	shr.u32 	%r1789, %r1786, 8;
	and.b32  	%r1790, %r1789, 16711935;
	or.b32  	%r1791, %r1788, %r1790;
	ld.local.u32 	%r1792, [%rd16+48];
	shf.l.wrap.b32 	%r1793, %r1792, %r1792, 16;
	shl.b32 	%r1794, %r1793, 8;
	and.b32  	%r1795, %r1794, -16711936;
	shr.u32 	%r1796, %r1793, 8;
	and.b32  	%r1797, %r1796, 16711935;
	or.b32  	%r1798, %r1795, %r1797;
	ld.local.u32 	%r1799, [%rd16+52];
	shf.l.wrap.b32 	%r1800, %r1799, %r1799, 16;
	shl.b32 	%r1801, %r1800, 8;
	and.b32  	%r1802, %r1801, -16711936;
	shr.u32 	%r1803, %r1800, 8;
	and.b32  	%r1804, %r1803, 16711935;
	or.b32  	%r1805, %r1802, %r1804;
	ld.local.u32 	%r1806, [%rd16+56];
	shf.l.wrap.b32 	%r1807, %r1806, %r1806, 16;
	shl.b32 	%r1808, %r1807, 8;
	and.b32  	%r1809, %r1808, -16711936;
	shr.u32 	%r1810, %r1807, 8;
	and.b32  	%r1811, %r1810, 16711935;
	or.b32  	%r1812, %r1809, %r1811;
	ld.local.u32 	%r1813, [%rd16+60];
	shf.l.wrap.b32 	%r1814, %r1813, %r1813, 16;
	shl.b32 	%r1815, %r1814, 8;
	and.b32  	%r1816, %r1815, -16711936;
	shr.u32 	%r1817, %r1814, 8;
	and.b32  	%r1818, %r1817, 16711935;
	or.b32  	%r1819, %r1816, %r1818;
	ld.local.u32 	%r1820, [%rd16+64];
	shf.l.wrap.b32 	%r1821, %r1820, %r1820, 16;
	shl.b32 	%r1822, %r1821, 8;
	and.b32  	%r1823, %r1822, -16711936;
	shr.u32 	%r1824, %r1821, 8;
	and.b32  	%r1825, %r1824, 16711935;
	or.b32  	%r1826, %r1823, %r1825;
	ld.local.u32 	%r1827, [%rd16+68];
	shf.l.wrap.b32 	%r1828, %r1827, %r1827, 16;
	shl.b32 	%r1829, %r1828, 8;
	and.b32  	%r1830, %r1829, -16711936;
	shr.u32 	%r1831, %r1828, 8;
	and.b32  	%r1832, %r1831, 16711935;
	or.b32  	%r1833, %r1830, %r1832;
	ld.local.u32 	%r1834, [%rd16+72];
	shf.l.wrap.b32 	%r1835, %r1834, %r1834, 16;
	shl.b32 	%r1836, %r1835, 8;
	and.b32  	%r1837, %r1836, -16711936;
	shr.u32 	%r1838, %r1835, 8;
	and.b32  	%r1839, %r1838, 16711935;
	or.b32  	%r1840, %r1837, %r1839;
	ld.local.u32 	%r1841, [%rd16+76];
	shf.l.wrap.b32 	%r1842, %r1841, %r1841, 16;
	shl.b32 	%r1843, %r1842, 8;
	and.b32  	%r1844, %r1843, -16711936;
	shr.u32 	%r1845, %r1842, 8;
	and.b32  	%r1846, %r1845, 16711935;
	or.b32  	%r1847, %r1844, %r1846;
	ld.local.u32 	%r1848, [%rd16+80];
	shf.l.wrap.b32 	%r1849, %r1848, %r1848, 16;
	shl.b32 	%r1850, %r1849, 8;
	and.b32  	%r1851, %r1850, -16711936;
	shr.u32 	%r1852, %r1849, 8;
	and.b32  	%r1853, %r1852, 16711935;
	or.b32  	%r1854, %r1851, %r1853;
	ld.local.u32 	%r1855, [%rd16+84];
	shf.l.wrap.b32 	%r1856, %r1855, %r1855, 16;
	shl.b32 	%r1857, %r1856, 8;
	and.b32  	%r1858, %r1857, -16711936;
	shr.u32 	%r1859, %r1856, 8;
	and.b32  	%r1860, %r1859, 16711935;
	or.b32  	%r1861, %r1858, %r1860;
	ld.local.u32 	%r1434, [%rd16+4];
	shf.l.wrap.b32 	%r1862, %r1434, %r1434, 5;
	ld.local.u32 	%r1432, [%rd16+16];
	ld.local.u32 	%r1431, [%rd16+12];
	ld.local.u32 	%r1430, [%rd16+8];
	// begin inline asm
	lop3.b32 %r1429, %r1430, %r1431, %r1432, 202;
	// end inline asm
	add.s32 	%r1863, %r1756, %r1862;
	ld.local.u32 	%r1864, [%rd16+20];
	add.s32 	%r1865, %r1863, %r1864;
	add.s32 	%r1866, %r1865, %r1429;
	add.s32 	%r1438, %r1866, 1518500249;
	shf.l.wrap.b32 	%r1440, %r1430, %r1430, 30;
	shf.l.wrap.b32 	%r1867, %r1438, %r1438, 5;
	// begin inline asm
	lop3.b32 %r1433, %r1434, %r1440, %r1431, 202;
	// end inline asm
	add.s32 	%r1868, %r1763, %r1432;
	add.s32 	%r1869, %r1868, %r1433;
	add.s32 	%r1870, %r1869, %r1867;
	add.s32 	%r1442, %r1870, 1518500249;
	shf.l.wrap.b32 	%r1444, %r1434, %r1434, 30;
	shf.l.wrap.b32 	%r1871, %r1442, %r1442, 5;
	// begin inline asm
	lop3.b32 %r1437, %r1438, %r1444, %r1440, 202;
	// end inline asm
	add.s32 	%r1872, %r1770, %r1431;
	add.s32 	%r1873, %r1872, %r1437;
	add.s32 	%r1874, %r1873, %r1871;
	add.s32 	%r1446, %r1874, 1518500249;
	shf.l.wrap.b32 	%r1448, %r1438, %r1438, 30;
	shf.l.wrap.b32 	%r1875, %r1446, %r1446, 5;
	// begin inline asm
	lop3.b32 %r1441, %r1442, %r1448, %r1444, 202;
	// end inline asm
	add.s32 	%r1876, %r1777, %r1440;
	add.s32 	%r1877, %r1876, %r1441;
	add.s32 	%r1878, %r1877, %r1875;
	add.s32 	%r1450, %r1878, 1518500249;
	shf.l.wrap.b32 	%r1452, %r1442, %r1442, 30;
	shf.l.wrap.b32 	%r1879, %r1450, %r1450, 5;
	// begin inline asm
	lop3.b32 %r1445, %r1446, %r1452, %r1448, 202;
	// end inline asm
	add.s32 	%r1880, %r1784, %r1444;
	add.s32 	%r1881, %r1880, %r1445;
	add.s32 	%r1882, %r1881, %r1879;
	add.s32 	%r1454, %r1882, 1518500249;
	shf.l.wrap.b32 	%r1456, %r1446, %r1446, 30;
	shf.l.wrap.b32 	%r1883, %r1454, %r1454, 5;
	// begin inline asm
	lop3.b32 %r1449, %r1450, %r1456, %r1452, 202;
	// end inline asm
	add.s32 	%r1884, %r1791, %r1449;
	add.s32 	%r1885, %r1884, %r1448;
	add.s32 	%r1886, %r1885, %r1883;
	add.s32 	%r1458, %r1886, 1518500249;
	shf.l.wrap.b32 	%r1460, %r1450, %r1450, 30;
	shf.l.wrap.b32 	%r1887, %r1458, %r1458, 5;
	// begin inline asm
	lop3.b32 %r1453, %r1454, %r1460, %r1456, 202;
	// end inline asm
	add.s32 	%r1888, %r1798, %r1453;
	add.s32 	%r1889, %r1888, %r1452;
	add.s32 	%r1890, %r1889, %r1887;
	add.s32 	%r1462, %r1890, 1518500249;
	shf.l.wrap.b32 	%r1464, %r1454, %r1454, 30;
	shf.l.wrap.b32 	%r1891, %r1462, %r1462, 5;
	// begin inline asm
	lop3.b32 %r1457, %r1458, %r1464, %r1460, 202;
	// end inline asm
	add.s32 	%r1892, %r1805, %r1457;
	add.s32 	%r1893, %r1892, %r1456;
	add.s32 	%r1894, %r1893, %r1891;
	add.s32 	%r1466, %r1894, 1518500249;
	shf.l.wrap.b32 	%r1468, %r1458, %r1458, 30;
	shf.l.wrap.b32 	%r1895, %r1466, %r1466, 5;
	// begin inline asm
	lop3.b32 %r1461, %r1462, %r1468, %r1464, 202;
	// end inline asm
	add.s32 	%r1896, %r1812, %r1461;
	add.s32 	%r1897, %r1896, %r1460;
	add.s32 	%r1898, %r1897, %r1895;
	add.s32 	%r1470, %r1898, 1518500249;
	shf.l.wrap.b32 	%r1472, %r1462, %r1462, 30;
	shf.l.wrap.b32 	%r1899, %r1470, %r1470, 5;
	// begin inline asm
	lop3.b32 %r1465, %r1466, %r1472, %r1468, 202;
	// end inline asm
	add.s32 	%r1900, %r1819, %r1465;
	add.s32 	%r1901, %r1900, %r1464;
	add.s32 	%r1902, %r1901, %r1899;
	add.s32 	%r1474, %r1902, 1518500249;
	shf.l.wrap.b32 	%r1476, %r1466, %r1466, 30;
	shf.l.wrap.b32 	%r1903, %r1474, %r1474, 5;
	// begin inline asm
	lop3.b32 %r1469, %r1470, %r1476, %r1472, 202;
	// end inline asm
	add.s32 	%r1904, %r1826, %r1469;
	add.s32 	%r1905, %r1904, %r1468;
	add.s32 	%r1906, %r1905, %r1903;
	add.s32 	%r1478, %r1906, 1518500249;
	shf.l.wrap.b32 	%r1480, %r1470, %r1470, 30;
	shf.l.wrap.b32 	%r1907, %r1478, %r1478, 5;
	// begin inline asm
	lop3.b32 %r1473, %r1474, %r1480, %r1476, 202;
	// end inline asm
	add.s32 	%r1908, %r1833, %r1473;
	add.s32 	%r1909, %r1908, %r1472;
	add.s32 	%r1910, %r1909, %r1907;
	add.s32 	%r1482, %r1910, 1518500249;
	shf.l.wrap.b32 	%r1484, %r1474, %r1474, 30;
	shf.l.wrap.b32 	%r1911, %r1482, %r1482, 5;
	// begin inline asm
	lop3.b32 %r1477, %r1478, %r1484, %r1480, 202;
	// end inline asm
	add.s32 	%r1912, %r1840, %r1477;
	add.s32 	%r1913, %r1912, %r1476;
	add.s32 	%r1914, %r1913, %r1911;
	add.s32 	%r1486, %r1914, 1518500249;
	shf.l.wrap.b32 	%r1488, %r1478, %r1478, 30;
	shf.l.wrap.b32 	%r1915, %r1486, %r1486, 5;
	// begin inline asm
	lop3.b32 %r1481, %r1482, %r1488, %r1484, 202;
	// end inline asm
	add.s32 	%r1916, %r1847, %r1481;
	add.s32 	%r1917, %r1916, %r1480;
	add.s32 	%r1918, %r1917, %r1915;
	add.s32 	%r1490, %r1918, 1518500249;
	shf.l.wrap.b32 	%r1492, %r1482, %r1482, 30;
	shf.l.wrap.b32 	%r1919, %r1490, %r1490, 5;
	// begin inline asm
	lop3.b32 %r1485, %r1486, %r1492, %r1488, 202;
	// end inline asm
	add.s32 	%r1920, %r1854, %r1485;
	add.s32 	%r1921, %r1920, %r1484;
	add.s32 	%r1922, %r1921, %r1919;
	add.s32 	%r1494, %r1922, 1518500249;
	shf.l.wrap.b32 	%r1496, %r1486, %r1486, 30;
	shf.l.wrap.b32 	%r1923, %r1494, %r1494, 5;
	// begin inline asm
	lop3.b32 %r1489, %r1490, %r1496, %r1492, 202;
	// end inline asm
	add.s32 	%r1924, %r1861, %r1489;
	add.s32 	%r1925, %r1924, %r1488;
	add.s32 	%r1926, %r1925, %r1923;
	add.s32 	%r1498, %r1926, 1518500249;
	shf.l.wrap.b32 	%r1500, %r1490, %r1490, 30;
	shf.l.wrap.b32 	%r1927, %r1498, %r1498, 5;
	// begin inline asm
	lop3.b32 %r1493, %r1494, %r1500, %r1496, 202;
	// end inline asm
	xor.b32  	%r1928, %r1770, %r1756;
	xor.b32  	%r1929, %r1928, %r1812;
	xor.b32  	%r1930, %r1929, %r1847;
	shf.l.wrap.b32 	%r1931, %r1930, %r1930, 1;
	add.s32 	%r1932, %r1931, %r1493;
	add.s32 	%r1933, %r1932, %r1492;
	add.s32 	%r1934, %r1933, %r1927;
	add.s32 	%r1502, %r1934, 1518500249;
	shf.l.wrap.b32 	%r1504, %r1494, %r1494, 30;
	shf.l.wrap.b32 	%r1935, %r1502, %r1502, 5;
	// begin inline asm
	lop3.b32 %r1497, %r1498, %r1504, %r1500, 202;
	// end inline asm
	xor.b32  	%r1936, %r1777, %r1763;
	xor.b32  	%r1937, %r1936, %r1819;
	xor.b32  	%r1938, %r1937, %r1854;
	shf.l.wrap.b32 	%r1939, %r1938, %r1938, 1;
	add.s32 	%r1940, %r1939, %r1497;
	add.s32 	%r1941, %r1940, %r1496;
	add.s32 	%r1942, %r1941, %r1935;
	add.s32 	%r1506, %r1942, 1518500249;
	shf.l.wrap.b32 	%r1508, %r1498, %r1498, 30;
	shf.l.wrap.b32 	%r1943, %r1506, %r1506, 5;
	// begin inline asm
	lop3.b32 %r1501, %r1502, %r1508, %r1504, 202;
	// end inline asm
	xor.b32  	%r1944, %r1784, %r1770;
	xor.b32  	%r1945, %r1944, %r1826;
	xor.b32  	%r1946, %r1945, %r1861;
	shf.l.wrap.b32 	%r1947, %r1946, %r1946, 1;
	add.s32 	%r1948, %r1947, %r1501;
	add.s32 	%r1949, %r1948, %r1500;
	add.s32 	%r1950, %r1949, %r1943;
	add.s32 	%r1510, %r1950, 1518500249;
	shf.l.wrap.b32 	%r1512, %r1502, %r1502, 30;
	shf.l.wrap.b32 	%r1951, %r1510, %r1510, 5;
	// begin inline asm
	lop3.b32 %r1505, %r1506, %r1512, %r1508, 202;
	// end inline asm
	xor.b32  	%r1952, %r1791, %r1777;
	xor.b32  	%r1953, %r1952, %r1833;
	xor.b32  	%r1954, %r1953, %r1931;
	shf.l.wrap.b32 	%r1955, %r1954, %r1954, 1;
	add.s32 	%r1956, %r1955, %r1505;
	add.s32 	%r1957, %r1956, %r1504;
	add.s32 	%r1958, %r1957, %r1951;
	add.s32 	%r1514, %r1958, 1518500249;
	shf.l.wrap.b32 	%r1516, %r1506, %r1506, 30;
	shf.l.wrap.b32 	%r1959, %r1514, %r1514, 5;
	// begin inline asm
	lop3.b32 %r1509, %r1510, %r1516, %r1512, 150;
	// end inline asm
	xor.b32  	%r1960, %r1798, %r1784;
	xor.b32  	%r1961, %r1960, %r1840;
	xor.b32  	%r1962, %r1961, %r1939;
	shf.l.wrap.b32 	%r1963, %r1962, %r1962, 1;
	add.s32 	%r1964, %r1963, %r1509;
	add.s32 	%r1965, %r1964, %r1508;
	add.s32 	%r1966, %r1965, %r1959;
	add.s32 	%r1518, %r1966, 1859775393;
	shf.l.wrap.b32 	%r1520, %r1510, %r1510, 30;
	shf.l.wrap.b32 	%r1967, %r1518, %r1518, 5;
	// begin inline asm
	lop3.b32 %r1513, %r1514, %r1520, %r1516, 150;
	// end inline asm
	xor.b32  	%r1968, %r1805, %r1791;
	xor.b32  	%r1969, %r1968, %r1847;
	xor.b32  	%r1970, %r1969, %r1947;
	shf.l.wrap.b32 	%r1971, %r1970, %r1970, 1;
	add.s32 	%r1972, %r1971, %r1513;
	add.s32 	%r1973, %r1972, %r1512;
	add.s32 	%r1974, %r1973, %r1967;
	add.s32 	%r1522, %r1974, 1859775393;
	shf.l.wrap.b32 	%r1524, %r1514, %r1514, 30;
	shf.l.wrap.b32 	%r1975, %r1522, %r1522, 5;
	// begin inline asm
	lop3.b32 %r1517, %r1518, %r1524, %r1520, 150;
	// end inline asm
	xor.b32  	%r1976, %r1812, %r1798;
	xor.b32  	%r1977, %r1976, %r1854;
	xor.b32  	%r1978, %r1977, %r1955;
	shf.l.wrap.b32 	%r1979, %r1978, %r1978, 1;
	add.s32 	%r1980, %r1979, %r1517;
	add.s32 	%r1981, %r1980, %r1516;
	add.s32 	%r1982, %r1981, %r1975;
	add.s32 	%r1526, %r1982, 1859775393;
	shf.l.wrap.b32 	%r1528, %r1518, %r1518, 30;
	shf.l.wrap.b32 	%r1983, %r1526, %r1526, 5;
	// begin inline asm
	lop3.b32 %r1521, %r1522, %r1528, %r1524, 150;
	// end inline asm
	xor.b32  	%r1984, %r1819, %r1805;
	xor.b32  	%r1985, %r1984, %r1861;
	xor.b32  	%r1986, %r1985, %r1963;
	shf.l.wrap.b32 	%r1987, %r1986, %r1986, 1;
	add.s32 	%r1988, %r1987, %r1521;
	add.s32 	%r1989, %r1988, %r1520;
	add.s32 	%r1990, %r1989, %r1983;
	add.s32 	%r1530, %r1990, 1859775393;
	shf.l.wrap.b32 	%r1532, %r1522, %r1522, 30;
	shf.l.wrap.b32 	%r1991, %r1530, %r1530, 5;
	// begin inline asm
	lop3.b32 %r1525, %r1526, %r1532, %r1528, 150;
	// end inline asm
	xor.b32  	%r1992, %r1826, %r1812;
	xor.b32  	%r1993, %r1992, %r1931;
	xor.b32  	%r1994, %r1993, %r1971;
	shf.l.wrap.b32 	%r1995, %r1994, %r1994, 1;
	add.s32 	%r1996, %r1995, %r1525;
	add.s32 	%r1997, %r1996, %r1524;
	add.s32 	%r1998, %r1997, %r1991;
	add.s32 	%r1534, %r1998, 1859775393;
	shf.l.wrap.b32 	%r1536, %r1526, %r1526, 30;
	shf.l.wrap.b32 	%r1999, %r1534, %r1534, 5;
	// begin inline asm
	lop3.b32 %r1529, %r1530, %r1536, %r1532, 150;
	// end inline asm
	xor.b32  	%r2000, %r1833, %r1819;
	xor.b32  	%r2001, %r2000, %r1939;
	xor.b32  	%r2002, %r2001, %r1979;
	shf.l.wrap.b32 	%r2003, %r2002, %r2002, 1;
	add.s32 	%r2004, %r2003, %r1529;
	add.s32 	%r2005, %r2004, %r1528;
	add.s32 	%r2006, %r2005, %r1999;
	add.s32 	%r1538, %r2006, 1859775393;
	shf.l.wrap.b32 	%r1540, %r1530, %r1530, 30;
	shf.l.wrap.b32 	%r2007, %r1538, %r1538, 5;
	// begin inline asm
	lop3.b32 %r1533, %r1534, %r1540, %r1536, 150;
	// end inline asm
	xor.b32  	%r2008, %r1840, %r1826;
	xor.b32  	%r2009, %r2008, %r1947;
	xor.b32  	%r2010, %r2009, %r1987;
	shf.l.wrap.b32 	%r2011, %r2010, %r2010, 1;
	add.s32 	%r2012, %r2011, %r1533;
	add.s32 	%r2013, %r2012, %r1532;
	add.s32 	%r2014, %r2013, %r2007;
	add.s32 	%r1542, %r2014, 1859775393;
	shf.l.wrap.b32 	%r1544, %r1534, %r1534, 30;
	shf.l.wrap.b32 	%r2015, %r1542, %r1542, 5;
	// begin inline asm
	lop3.b32 %r1537, %r1538, %r1544, %r1540, 150;
	// end inline asm
	xor.b32  	%r2016, %r1847, %r1833;
	xor.b32  	%r2017, %r2016, %r1955;
	xor.b32  	%r2018, %r2017, %r1995;
	shf.l.wrap.b32 	%r2019, %r2018, %r2018, 1;
	add.s32 	%r2020, %r2019, %r1537;
	add.s32 	%r2021, %r2020, %r1536;
	add.s32 	%r2022, %r2021, %r2015;
	add.s32 	%r1546, %r2022, 1859775393;
	shf.l.wrap.b32 	%r1548, %r1538, %r1538, 30;
	shf.l.wrap.b32 	%r2023, %r1546, %r1546, 5;
	// begin inline asm
	lop3.b32 %r1541, %r1542, %r1548, %r1544, 150;
	// end inline asm
	xor.b32  	%r2024, %r1854, %r1840;
	xor.b32  	%r2025, %r2024, %r1963;
	xor.b32  	%r2026, %r2025, %r2003;
	shf.l.wrap.b32 	%r2027, %r2026, %r2026, 1;
	add.s32 	%r2028, %r2027, %r1541;
	add.s32 	%r2029, %r2028, %r1540;
	add.s32 	%r2030, %r2029, %r2023;
	add.s32 	%r1550, %r2030, 1859775393;
	shf.l.wrap.b32 	%r1552, %r1542, %r1542, 30;
	shf.l.wrap.b32 	%r2031, %r1550, %r1550, 5;
	// begin inline asm
	lop3.b32 %r1545, %r1546, %r1552, %r1548, 150;
	// end inline asm
	xor.b32  	%r2032, %r1861, %r1847;
	xor.b32  	%r2033, %r2032, %r1971;
	xor.b32  	%r2034, %r2033, %r2011;
	shf.l.wrap.b32 	%r2035, %r2034, %r2034, 1;
	add.s32 	%r2036, %r2035, %r1545;
	add.s32 	%r2037, %r2036, %r1544;
	add.s32 	%r2038, %r2037, %r2031;
	add.s32 	%r1554, %r2038, 1859775393;
	shf.l.wrap.b32 	%r1556, %r1546, %r1546, 30;
	shf.l.wrap.b32 	%r2039, %r1554, %r1554, 5;
	// begin inline asm
	lop3.b32 %r1549, %r1550, %r1556, %r1552, 150;
	// end inline asm
	xor.b32  	%r2040, %r1931, %r1854;
	xor.b32  	%r2041, %r2040, %r1979;
	xor.b32  	%r2042, %r2041, %r2019;
	shf.l.wrap.b32 	%r2043, %r2042, %r2042, 1;
	add.s32 	%r2044, %r2043, %r1549;
	add.s32 	%r2045, %r2044, %r1548;
	add.s32 	%r2046, %r2045, %r2039;
	add.s32 	%r1558, %r2046, 1859775393;
	shf.l.wrap.b32 	%r1560, %r1550, %r1550, 30;
	shf.l.wrap.b32 	%r2047, %r1558, %r1558, 5;
	// begin inline asm
	lop3.b32 %r1553, %r1554, %r1560, %r1556, 150;
	// end inline asm
	xor.b32  	%r2048, %r1939, %r1861;
	xor.b32  	%r2049, %r2048, %r1987;
	xor.b32  	%r2050, %r2049, %r2027;
	shf.l.wrap.b32 	%r2051, %r2050, %r2050, 1;
	add.s32 	%r2052, %r2051, %r1553;
	add.s32 	%r2053, %r2052, %r1552;
	add.s32 	%r2054, %r2053, %r2047;
	add.s32 	%r1562, %r2054, 1859775393;
	shf.l.wrap.b32 	%r1564, %r1554, %r1554, 30;
	shf.l.wrap.b32 	%r2055, %r1562, %r1562, 5;
	// begin inline asm
	lop3.b32 %r1557, %r1558, %r1564, %r1560, 150;
	// end inline asm
	xor.b32  	%r2056, %r1947, %r1931;
	xor.b32  	%r2057, %r2056, %r1995;
	xor.b32  	%r2058, %r2057, %r2035;
	shf.l.wrap.b32 	%r2059, %r2058, %r2058, 1;
	add.s32 	%r2060, %r2059, %r1557;
	add.s32 	%r2061, %r2060, %r1556;
	add.s32 	%r2062, %r2061, %r2055;
	add.s32 	%r1566, %r2062, 1859775393;
	shf.l.wrap.b32 	%r1568, %r1558, %r1558, 30;
	shf.l.wrap.b32 	%r2063, %r1566, %r1566, 5;
	// begin inline asm
	lop3.b32 %r1561, %r1562, %r1568, %r1564, 150;
	// end inline asm
	xor.b32  	%r2064, %r1955, %r1939;
	xor.b32  	%r2065, %r2064, %r2003;
	xor.b32  	%r2066, %r2065, %r2043;
	shf.l.wrap.b32 	%r2067, %r2066, %r2066, 1;
	add.s32 	%r2068, %r2067, %r1561;
	add.s32 	%r2069, %r2068, %r1560;
	add.s32 	%r2070, %r2069, %r2063;
	add.s32 	%r1570, %r2070, 1859775393;
	shf.l.wrap.b32 	%r1572, %r1562, %r1562, 30;
	shf.l.wrap.b32 	%r2071, %r1570, %r1570, 5;
	// begin inline asm
	lop3.b32 %r1565, %r1566, %r1572, %r1568, 150;
	// end inline asm
	xor.b32  	%r2072, %r1963, %r1947;
	xor.b32  	%r2073, %r2072, %r2011;
	xor.b32  	%r2074, %r2073, %r2051;
	shf.l.wrap.b32 	%r2075, %r2074, %r2074, 1;
	add.s32 	%r2076, %r2075, %r1565;
	add.s32 	%r2077, %r2076, %r1564;
	add.s32 	%r2078, %r2077, %r2071;
	add.s32 	%r1574, %r2078, 1859775393;
	shf.l.wrap.b32 	%r1576, %r1566, %r1566, 30;
	shf.l.wrap.b32 	%r2079, %r1574, %r1574, 5;
	// begin inline asm
	lop3.b32 %r1569, %r1570, %r1576, %r1572, 150;
	// end inline asm
	xor.b32  	%r2080, %r1971, %r1955;
	xor.b32  	%r2081, %r2080, %r2019;
	xor.b32  	%r2082, %r2081, %r2059;
	shf.l.wrap.b32 	%r2083, %r2082, %r2082, 1;
	add.s32 	%r2084, %r2083, %r1569;
	add.s32 	%r2085, %r2084, %r1568;
	add.s32 	%r2086, %r2085, %r2079;
	add.s32 	%r1578, %r2086, 1859775393;
	shf.l.wrap.b32 	%r1580, %r1570, %r1570, 30;
	shf.l.wrap.b32 	%r2087, %r1578, %r1578, 5;
	// begin inline asm
	lop3.b32 %r1573, %r1574, %r1580, %r1576, 150;
	// end inline asm
	xor.b32  	%r2088, %r1979, %r1963;
	xor.b32  	%r2089, %r2088, %r2027;
	xor.b32  	%r2090, %r2089, %r2067;
	shf.l.wrap.b32 	%r2091, %r2090, %r2090, 1;
	add.s32 	%r2092, %r2091, %r1573;
	add.s32 	%r2093, %r2092, %r1572;
	add.s32 	%r2094, %r2093, %r2087;
	add.s32 	%r1582, %r2094, 1859775393;
	shf.l.wrap.b32 	%r1584, %r1574, %r1574, 30;
	shf.l.wrap.b32 	%r2095, %r1582, %r1582, 5;
	// begin inline asm
	lop3.b32 %r1577, %r1578, %r1584, %r1580, 150;
	// end inline asm
	xor.b32  	%r2096, %r1987, %r1971;
	xor.b32  	%r2097, %r2096, %r2035;
	xor.b32  	%r2098, %r2097, %r2075;
	shf.l.wrap.b32 	%r2099, %r2098, %r2098, 1;
	add.s32 	%r2100, %r2099, %r1577;
	add.s32 	%r2101, %r2100, %r1576;
	add.s32 	%r2102, %r2101, %r2095;
	add.s32 	%r1586, %r2102, 1859775393;
	shf.l.wrap.b32 	%r1588, %r1578, %r1578, 30;
	shf.l.wrap.b32 	%r2103, %r1586, %r1586, 5;
	// begin inline asm
	lop3.b32 %r1581, %r1582, %r1588, %r1584, 150;
	// end inline asm
	xor.b32  	%r2104, %r1995, %r1979;
	xor.b32  	%r2105, %r2104, %r2043;
	xor.b32  	%r2106, %r2105, %r2083;
	shf.l.wrap.b32 	%r2107, %r2106, %r2106, 1;
	add.s32 	%r2108, %r2107, %r1581;
	add.s32 	%r2109, %r2108, %r1580;
	add.s32 	%r2110, %r2109, %r2103;
	add.s32 	%r1590, %r2110, 1859775393;
	shf.l.wrap.b32 	%r1592, %r1582, %r1582, 30;
	shf.l.wrap.b32 	%r2111, %r1590, %r1590, 5;
	// begin inline asm
	lop3.b32 %r1585, %r1586, %r1592, %r1588, 150;
	// end inline asm
	xor.b32  	%r2112, %r2003, %r1987;
	xor.b32  	%r2113, %r2112, %r2051;
	xor.b32  	%r2114, %r2113, %r2091;
	shf.l.wrap.b32 	%r2115, %r2114, %r2114, 1;
	add.s32 	%r2116, %r2115, %r1585;
	add.s32 	%r2117, %r2116, %r1584;
	add.s32 	%r2118, %r2117, %r2111;
	add.s32 	%r1594, %r2118, 1859775393;
	shf.l.wrap.b32 	%r1596, %r1586, %r1586, 30;
	shf.l.wrap.b32 	%r2119, %r1594, %r1594, 5;
	// begin inline asm
	lop3.b32 %r1589, %r1590, %r1596, %r1592, 232;
	// end inline asm
	xor.b32  	%r2120, %r2011, %r1995;
	xor.b32  	%r2121, %r2120, %r2059;
	xor.b32  	%r2122, %r2121, %r2099;
	shf.l.wrap.b32 	%r2123, %r2122, %r2122, 1;
	add.s32 	%r2124, %r2123, %r1589;
	add.s32 	%r2125, %r2124, %r1588;
	add.s32 	%r2126, %r2125, %r2119;
	add.s32 	%r1598, %r2126, -1894007588;
	shf.l.wrap.b32 	%r1600, %r1590, %r1590, 30;
	shf.l.wrap.b32 	%r2127, %r1598, %r1598, 5;
	// begin inline asm
	lop3.b32 %r1593, %r1594, %r1600, %r1596, 232;
	// end inline asm
	xor.b32  	%r2128, %r2019, %r2003;
	xor.b32  	%r2129, %r2128, %r2067;
	xor.b32  	%r2130, %r2129, %r2107;
	shf.l.wrap.b32 	%r2131, %r2130, %r2130, 1;
	add.s32 	%r2132, %r2131, %r1593;
	add.s32 	%r2133, %r2132, %r1592;
	add.s32 	%r2134, %r2133, %r2127;
	add.s32 	%r1602, %r2134, -1894007588;
	shf.l.wrap.b32 	%r1604, %r1594, %r1594, 30;
	shf.l.wrap.b32 	%r2135, %r1602, %r1602, 5;
	// begin inline asm
	lop3.b32 %r1597, %r1598, %r1604, %r1600, 232;
	// end inline asm
	xor.b32  	%r2136, %r2027, %r2011;
	xor.b32  	%r2137, %r2136, %r2075;
	xor.b32  	%r2138, %r2137, %r2115;
	shf.l.wrap.b32 	%r2139, %r2138, %r2138, 1;
	add.s32 	%r2140, %r2139, %r1597;
	add.s32 	%r2141, %r2140, %r1596;
	add.s32 	%r2142, %r2141, %r2135;
	add.s32 	%r1606, %r2142, -1894007588;
	shf.l.wrap.b32 	%r1608, %r1598, %r1598, 30;
	shf.l.wrap.b32 	%r2143, %r1606, %r1606, 5;
	// begin inline asm
	lop3.b32 %r1601, %r1602, %r1608, %r1604, 232;
	// end inline asm
	xor.b32  	%r2144, %r2035, %r2019;
	xor.b32  	%r2145, %r2144, %r2083;
	xor.b32  	%r2146, %r2145, %r2123;
	shf.l.wrap.b32 	%r2147, %r2146, %r2146, 1;
	add.s32 	%r2148, %r2147, %r1601;
	add.s32 	%r2149, %r2148, %r1600;
	add.s32 	%r2150, %r2149, %r2143;
	add.s32 	%r1610, %r2150, -1894007588;
	shf.l.wrap.b32 	%r1612, %r1602, %r1602, 30;
	shf.l.wrap.b32 	%r2151, %r1610, %r1610, 5;
	// begin inline asm
	lop3.b32 %r1605, %r1606, %r1612, %r1608, 232;
	// end inline asm
	xor.b32  	%r2152, %r2043, %r2027;
	xor.b32  	%r2153, %r2152, %r2091;
	xor.b32  	%r2154, %r2153, %r2131;
	shf.l.wrap.b32 	%r2155, %r2154, %r2154, 1;
	add.s32 	%r2156, %r2155, %r1605;
	add.s32 	%r2157, %r2156, %r1604;
	add.s32 	%r2158, %r2157, %r2151;
	add.s32 	%r1614, %r2158, -1894007588;
	shf.l.wrap.b32 	%r1616, %r1606, %r1606, 30;
	shf.l.wrap.b32 	%r2159, %r1614, %r1614, 5;
	// begin inline asm
	lop3.b32 %r1609, %r1610, %r1616, %r1612, 232;
	// end inline asm
	xor.b32  	%r2160, %r2051, %r2035;
	xor.b32  	%r2161, %r2160, %r2099;
	xor.b32  	%r2162, %r2161, %r2139;
	shf.l.wrap.b32 	%r2163, %r2162, %r2162, 1;
	add.s32 	%r2164, %r2163, %r1609;
	add.s32 	%r2165, %r2164, %r1608;
	add.s32 	%r2166, %r2165, %r2159;
	add.s32 	%r1618, %r2166, -1894007588;
	shf.l.wrap.b32 	%r1620, %r1610, %r1610, 30;
	shf.l.wrap.b32 	%r2167, %r1618, %r1618, 5;
	// begin inline asm
	lop3.b32 %r1613, %r1614, %r1620, %r1616, 232;
	// end inline asm
	xor.b32  	%r2168, %r2059, %r2043;
	xor.b32  	%r2169, %r2168, %r2107;
	xor.b32  	%r2170, %r2169, %r2147;
	shf.l.wrap.b32 	%r2171, %r2170, %r2170, 1;
	add.s32 	%r2172, %r2171, %r1613;
	add.s32 	%r2173, %r2172, %r1612;
	add.s32 	%r2174, %r2173, %r2167;
	add.s32 	%r1622, %r2174, -1894007588;
	shf.l.wrap.b32 	%r1624, %r1614, %r1614, 30;
	shf.l.wrap.b32 	%r2175, %r1622, %r1622, 5;
	// begin inline asm
	lop3.b32 %r1617, %r1618, %r1624, %r1620, 232;
	// end inline asm
	xor.b32  	%r2176, %r2067, %r2051;
	xor.b32  	%r2177, %r2176, %r2115;
	xor.b32  	%r2178, %r2177, %r2155;
	shf.l.wrap.b32 	%r2179, %r2178, %r2178, 1;
	add.s32 	%r2180, %r2179, %r1617;
	add.s32 	%r2181, %r2180, %r1616;
	add.s32 	%r2182, %r2181, %r2175;
	add.s32 	%r1626, %r2182, -1894007588;
	shf.l.wrap.b32 	%r1628, %r1618, %r1618, 30;
	shf.l.wrap.b32 	%r2183, %r1626, %r1626, 5;
	// begin inline asm
	lop3.b32 %r1621, %r1622, %r1628, %r1624, 232;
	// end inline asm
	xor.b32  	%r2184, %r2075, %r2059;
	xor.b32  	%r2185, %r2184, %r2123;
	xor.b32  	%r2186, %r2185, %r2163;
	shf.l.wrap.b32 	%r2187, %r2186, %r2186, 1;
	add.s32 	%r2188, %r2187, %r1621;
	add.s32 	%r2189, %r2188, %r1620;
	add.s32 	%r2190, %r2189, %r2183;
	add.s32 	%r1630, %r2190, -1894007588;
	shf.l.wrap.b32 	%r1632, %r1622, %r1622, 30;
	shf.l.wrap.b32 	%r2191, %r1630, %r1630, 5;
	// begin inline asm
	lop3.b32 %r1625, %r1626, %r1632, %r1628, 232;
	// end inline asm
	xor.b32  	%r2192, %r2083, %r2067;
	xor.b32  	%r2193, %r2192, %r2131;
	xor.b32  	%r2194, %r2193, %r2171;
	shf.l.wrap.b32 	%r2195, %r2194, %r2194, 1;
	add.s32 	%r2196, %r2195, %r1625;
	add.s32 	%r2197, %r2196, %r1624;
	add.s32 	%r2198, %r2197, %r2191;
	add.s32 	%r1634, %r2198, -1894007588;
	shf.l.wrap.b32 	%r1636, %r1626, %r1626, 30;
	shf.l.wrap.b32 	%r2199, %r1634, %r1634, 5;
	// begin inline asm
	lop3.b32 %r1629, %r1630, %r1636, %r1632, 232;
	// end inline asm
	xor.b32  	%r2200, %r2091, %r2075;
	xor.b32  	%r2201, %r2200, %r2139;
	xor.b32  	%r2202, %r2201, %r2179;
	shf.l.wrap.b32 	%r2203, %r2202, %r2202, 1;
	add.s32 	%r2204, %r2203, %r1629;
	add.s32 	%r2205, %r2204, %r1628;
	add.s32 	%r2206, %r2205, %r2199;
	add.s32 	%r1638, %r2206, -1894007588;
	shf.l.wrap.b32 	%r1640, %r1630, %r1630, 30;
	shf.l.wrap.b32 	%r2207, %r1638, %r1638, 5;
	// begin inline asm
	lop3.b32 %r1633, %r1634, %r1640, %r1636, 232;
	// end inline asm
	xor.b32  	%r2208, %r2099, %r2083;
	xor.b32  	%r2209, %r2208, %r2147;
	xor.b32  	%r2210, %r2209, %r2187;
	shf.l.wrap.b32 	%r2211, %r2210, %r2210, 1;
	add.s32 	%r2212, %r2211, %r1633;
	add.s32 	%r2213, %r2212, %r1632;
	add.s32 	%r2214, %r2213, %r2207;
	add.s32 	%r1642, %r2214, -1894007588;
	shf.l.wrap.b32 	%r1644, %r1634, %r1634, 30;
	shf.l.wrap.b32 	%r2215, %r1642, %r1642, 5;
	// begin inline asm
	lop3.b32 %r1637, %r1638, %r1644, %r1640, 232;
	// end inline asm
	xor.b32  	%r2216, %r2107, %r2091;
	xor.b32  	%r2217, %r2216, %r2155;
	xor.b32  	%r2218, %r2217, %r2195;
	shf.l.wrap.b32 	%r2219, %r2218, %r2218, 1;
	add.s32 	%r2220, %r2219, %r1637;
	add.s32 	%r2221, %r2220, %r1636;
	add.s32 	%r2222, %r2221, %r2215;
	add.s32 	%r1646, %r2222, -1894007588;
	shf.l.wrap.b32 	%r1648, %r1638, %r1638, 30;
	shf.l.wrap.b32 	%r2223, %r1646, %r1646, 5;
	// begin inline asm
	lop3.b32 %r1641, %r1642, %r1648, %r1644, 232;
	// end inline asm
	xor.b32  	%r2224, %r2115, %r2099;
	xor.b32  	%r2225, %r2224, %r2163;
	xor.b32  	%r2226, %r2225, %r2203;
	shf.l.wrap.b32 	%r2227, %r2226, %r2226, 1;
	add.s32 	%r2228, %r2227, %r1641;
	add.s32 	%r2229, %r2228, %r1640;
	add.s32 	%r2230, %r2229, %r2223;
	add.s32 	%r1650, %r2230, -1894007588;
	shf.l.wrap.b32 	%r1652, %r1642, %r1642, 30;
	shf.l.wrap.b32 	%r2231, %r1650, %r1650, 5;
	// begin inline asm
	lop3.b32 %r1645, %r1646, %r1652, %r1648, 232;
	// end inline asm
	xor.b32  	%r2232, %r2123, %r2107;
	xor.b32  	%r2233, %r2232, %r2171;
	xor.b32  	%r2234, %r2233, %r2211;
	shf.l.wrap.b32 	%r2235, %r2234, %r2234, 1;
	add.s32 	%r2236, %r2235, %r1645;
	add.s32 	%r2237, %r2236, %r1644;
	add.s32 	%r2238, %r2237, %r2231;
	add.s32 	%r1654, %r2238, -1894007588;
	shf.l.wrap.b32 	%r1656, %r1646, %r1646, 30;
	shf.l.wrap.b32 	%r2239, %r1654, %r1654, 5;
	// begin inline asm
	lop3.b32 %r1649, %r1650, %r1656, %r1652, 232;
	// end inline asm
	xor.b32  	%r2240, %r2131, %r2115;
	xor.b32  	%r2241, %r2240, %r2179;
	xor.b32  	%r2242, %r2241, %r2219;
	shf.l.wrap.b32 	%r2243, %r2242, %r2242, 1;
	add.s32 	%r2244, %r2243, %r1649;
	add.s32 	%r2245, %r2244, %r1648;
	add.s32 	%r2246, %r2245, %r2239;
	add.s32 	%r1658, %r2246, -1894007588;
	shf.l.wrap.b32 	%r1660, %r1650, %r1650, 30;
	shf.l.wrap.b32 	%r2247, %r1658, %r1658, 5;
	// begin inline asm
	lop3.b32 %r1653, %r1654, %r1660, %r1656, 232;
	// end inline asm
	xor.b32  	%r2248, %r2139, %r2123;
	xor.b32  	%r2249, %r2248, %r2187;
	xor.b32  	%r2250, %r2249, %r2227;
	shf.l.wrap.b32 	%r2251, %r2250, %r2250, 1;
	add.s32 	%r2252, %r2251, %r1653;
	add.s32 	%r2253, %r2252, %r1652;
	add.s32 	%r2254, %r2253, %r2247;
	add.s32 	%r1662, %r2254, -1894007588;
	shf.l.wrap.b32 	%r1664, %r1654, %r1654, 30;
	shf.l.wrap.b32 	%r2255, %r1662, %r1662, 5;
	// begin inline asm
	lop3.b32 %r1657, %r1658, %r1664, %r1660, 232;
	// end inline asm
	xor.b32  	%r2256, %r2147, %r2131;
	xor.b32  	%r2257, %r2256, %r2195;
	xor.b32  	%r2258, %r2257, %r2235;
	shf.l.wrap.b32 	%r2259, %r2258, %r2258, 1;
	add.s32 	%r2260, %r2259, %r1657;
	add.s32 	%r2261, %r2260, %r1656;
	add.s32 	%r2262, %r2261, %r2255;
	add.s32 	%r1666, %r2262, -1894007588;
	shf.l.wrap.b32 	%r1668, %r1658, %r1658, 30;
	shf.l.wrap.b32 	%r2263, %r1666, %r1666, 5;
	// begin inline asm
	lop3.b32 %r1661, %r1662, %r1668, %r1664, 232;
	// end inline asm
	xor.b32  	%r2264, %r2155, %r2139;
	xor.b32  	%r2265, %r2264, %r2203;
	xor.b32  	%r2266, %r2265, %r2243;
	shf.l.wrap.b32 	%r2267, %r2266, %r2266, 1;
	add.s32 	%r2268, %r2267, %r1661;
	add.s32 	%r2269, %r2268, %r1660;
	add.s32 	%r2270, %r2269, %r2263;
	add.s32 	%r1670, %r2270, -1894007588;
	shf.l.wrap.b32 	%r1672, %r1662, %r1662, 30;
	shf.l.wrap.b32 	%r2271, %r1670, %r1670, 5;
	// begin inline asm
	lop3.b32 %r1665, %r1666, %r1672, %r1668, 232;
	// end inline asm
	xor.b32  	%r2272, %r2163, %r2147;
	xor.b32  	%r2273, %r2272, %r2211;
	xor.b32  	%r2274, %r2273, %r2251;
	shf.l.wrap.b32 	%r2275, %r2274, %r2274, 1;
	add.s32 	%r2276, %r2275, %r1665;
	add.s32 	%r2277, %r2276, %r1664;
	add.s32 	%r2278, %r2277, %r2271;
	add.s32 	%r1674, %r2278, -1894007588;
	shf.l.wrap.b32 	%r1676, %r1666, %r1666, 30;
	shf.l.wrap.b32 	%r2279, %r1674, %r1674, 5;
	// begin inline asm
	lop3.b32 %r1669, %r1670, %r1676, %r1672, 150;
	// end inline asm
	xor.b32  	%r2280, %r2171, %r2155;
	xor.b32  	%r2281, %r2280, %r2219;
	xor.b32  	%r2282, %r2281, %r2259;
	shf.l.wrap.b32 	%r2283, %r2282, %r2282, 1;
	add.s32 	%r2284, %r2283, %r1669;
	add.s32 	%r2285, %r2284, %r1668;
	add.s32 	%r2286, %r2285, %r2279;
	add.s32 	%r1678, %r2286, -899497514;
	shf.l.wrap.b32 	%r1680, %r1670, %r1670, 30;
	shf.l.wrap.b32 	%r2287, %r1678, %r1678, 5;
	// begin inline asm
	lop3.b32 %r1673, %r1674, %r1680, %r1676, 150;
	// end inline asm
	xor.b32  	%r2288, %r2179, %r2163;
	xor.b32  	%r2289, %r2288, %r2227;
	xor.b32  	%r2290, %r2289, %r2267;
	shf.l.wrap.b32 	%r2291, %r2290, %r2290, 1;
	add.s32 	%r2292, %r2291, %r1673;
	add.s32 	%r2293, %r2292, %r1672;
	add.s32 	%r2294, %r2293, %r2287;
	add.s32 	%r1682, %r2294, -899497514;
	shf.l.wrap.b32 	%r1684, %r1674, %r1674, 30;
	shf.l.wrap.b32 	%r2295, %r1682, %r1682, 5;
	// begin inline asm
	lop3.b32 %r1677, %r1678, %r1684, %r1680, 150;
	// end inline asm
	xor.b32  	%r2296, %r2187, %r2171;
	xor.b32  	%r2297, %r2296, %r2235;
	xor.b32  	%r2298, %r2297, %r2275;
	shf.l.wrap.b32 	%r2299, %r2298, %r2298, 1;
	add.s32 	%r2300, %r2299, %r1677;
	add.s32 	%r2301, %r2300, %r1676;
	add.s32 	%r2302, %r2301, %r2295;
	add.s32 	%r1686, %r2302, -899497514;
	shf.l.wrap.b32 	%r1688, %r1678, %r1678, 30;
	shf.l.wrap.b32 	%r2303, %r1686, %r1686, 5;
	// begin inline asm
	lop3.b32 %r1681, %r1682, %r1688, %r1684, 150;
	// end inline asm
	xor.b32  	%r2304, %r2195, %r2179;
	xor.b32  	%r2305, %r2304, %r2243;
	xor.b32  	%r2306, %r2305, %r2283;
	shf.l.wrap.b32 	%r2307, %r2306, %r2306, 1;
	add.s32 	%r2308, %r2307, %r1681;
	add.s32 	%r2309, %r2308, %r1680;
	add.s32 	%r2310, %r2309, %r2303;
	add.s32 	%r1690, %r2310, -899497514;
	shf.l.wrap.b32 	%r1692, %r1682, %r1682, 30;
	shf.l.wrap.b32 	%r2311, %r1690, %r1690, 5;
	// begin inline asm
	lop3.b32 %r1685, %r1686, %r1692, %r1688, 150;
	// end inline asm
	xor.b32  	%r2312, %r2203, %r2187;
	xor.b32  	%r2313, %r2312, %r2251;
	xor.b32  	%r2314, %r2313, %r2291;
	shf.l.wrap.b32 	%r2315, %r2314, %r2314, 1;
	add.s32 	%r2316, %r1685, %r2315;
	add.s32 	%r2317, %r2316, %r1684;
	add.s32 	%r2318, %r2317, %r2311;
	add.s32 	%r1694, %r2318, -899497514;
	shf.l.wrap.b32 	%r1696, %r1686, %r1686, 30;
	shf.l.wrap.b32 	%r2319, %r1694, %r1694, 5;
	// begin inline asm
	lop3.b32 %r1689, %r1690, %r1696, %r1692, 150;
	// end inline asm
	xor.b32  	%r2320, %r2211, %r2195;
	xor.b32  	%r2321, %r2320, %r2259;
	xor.b32  	%r2322, %r2321, %r2299;
	shf.l.wrap.b32 	%r2323, %r2322, %r2322, 1;
	add.s32 	%r2324, %r1689, %r2323;
	add.s32 	%r2325, %r2324, %r1688;
	add.s32 	%r2326, %r2325, %r2319;
	add.s32 	%r1698, %r2326, -899497514;
	shf.l.wrap.b32 	%r1700, %r1690, %r1690, 30;
	shf.l.wrap.b32 	%r2327, %r1698, %r1698, 5;
	// begin inline asm
	lop3.b32 %r1693, %r1694, %r1700, %r1696, 150;
	// end inline asm
	xor.b32  	%r2328, %r2219, %r2203;
	xor.b32  	%r2329, %r2328, %r2267;
	xor.b32  	%r2330, %r2329, %r2307;
	shf.l.wrap.b32 	%r2331, %r2330, %r2330, 1;
	add.s32 	%r2332, %r1693, %r2331;
	add.s32 	%r2333, %r2332, %r1692;
	add.s32 	%r2334, %r2333, %r2327;
	add.s32 	%r1702, %r2334, -899497514;
	shf.l.wrap.b32 	%r1704, %r1694, %r1694, 30;
	shf.l.wrap.b32 	%r2335, %r1702, %r1702, 5;
	// begin inline asm
	lop3.b32 %r1697, %r1698, %r1704, %r1700, 150;
	// end inline asm
	xor.b32  	%r2336, %r2227, %r2211;
	xor.b32  	%r2337, %r2336, %r2275;
	xor.b32  	%r2338, %r2337, %r2315;
	shf.l.wrap.b32 	%r2339, %r2338, %r2338, 1;
	add.s32 	%r2340, %r1697, %r2339;
	add.s32 	%r2341, %r2340, %r1696;
	add.s32 	%r2342, %r2341, %r2335;
	add.s32 	%r1706, %r2342, -899497514;
	shf.l.wrap.b32 	%r1708, %r1698, %r1698, 30;
	shf.l.wrap.b32 	%r2343, %r1706, %r1706, 5;
	// begin inline asm
	lop3.b32 %r1701, %r1702, %r1708, %r1704, 150;
	// end inline asm
	xor.b32  	%r2344, %r2235, %r2219;
	xor.b32  	%r2345, %r2344, %r2283;
	xor.b32  	%r2346, %r2345, %r2323;
	shf.l.wrap.b32 	%r2347, %r2346, %r2346, 1;
	add.s32 	%r2348, %r1701, %r2347;
	add.s32 	%r2349, %r2348, %r1700;
	add.s32 	%r2350, %r2349, %r2343;
	add.s32 	%r1710, %r2350, -899497514;
	shf.l.wrap.b32 	%r1712, %r1702, %r1702, 30;
	shf.l.wrap.b32 	%r2351, %r1710, %r1710, 5;
	// begin inline asm
	lop3.b32 %r1705, %r1706, %r1712, %r1708, 150;
	// end inline asm
	xor.b32  	%r2352, %r2243, %r2227;
	xor.b32  	%r2353, %r2352, %r2291;
	xor.b32  	%r2354, %r2353, %r2331;
	shf.l.wrap.b32 	%r2355, %r2354, %r2354, 1;
	add.s32 	%r2356, %r1705, %r2355;
	add.s32 	%r2357, %r2356, %r1704;
	add.s32 	%r2358, %r2357, %r2351;
	add.s32 	%r1714, %r2358, -899497514;
	shf.l.wrap.b32 	%r1716, %r1706, %r1706, 30;
	shf.l.wrap.b32 	%r2359, %r1714, %r1714, 5;
	// begin inline asm
	lop3.b32 %r1709, %r1710, %r1716, %r1712, 150;
	// end inline asm
	xor.b32  	%r2360, %r2251, %r2235;
	xor.b32  	%r2361, %r2360, %r2299;
	xor.b32  	%r2362, %r2361, %r2339;
	shf.l.wrap.b32 	%r2363, %r2362, %r2362, 1;
	add.s32 	%r2364, %r1709, %r2363;
	add.s32 	%r2365, %r2364, %r1708;
	add.s32 	%r2366, %r2365, %r2359;
	add.s32 	%r1718, %r2366, -899497514;
	shf.l.wrap.b32 	%r1720, %r1710, %r1710, 30;
	shf.l.wrap.b32 	%r2367, %r1718, %r1718, 5;
	// begin inline asm
	lop3.b32 %r1713, %r1714, %r1720, %r1716, 150;
	// end inline asm
	xor.b32  	%r2368, %r2259, %r2243;
	xor.b32  	%r2369, %r2368, %r2307;
	xor.b32  	%r2370, %r2369, %r2347;
	shf.l.wrap.b32 	%r2371, %r2370, %r2370, 1;
	add.s32 	%r2372, %r1713, %r2371;
	add.s32 	%r2373, %r2372, %r1712;
	add.s32 	%r2374, %r2373, %r2367;
	add.s32 	%r1722, %r2374, -899497514;
	shf.l.wrap.b32 	%r1724, %r1714, %r1714, 30;
	shf.l.wrap.b32 	%r2375, %r1722, %r1722, 5;
	// begin inline asm
	lop3.b32 %r1717, %r1718, %r1724, %r1720, 150;
	// end inline asm
	xor.b32  	%r2376, %r2267, %r2251;
	xor.b32  	%r2377, %r2376, %r2315;
	xor.b32  	%r2378, %r2377, %r2355;
	shf.l.wrap.b32 	%r2379, %r2378, %r2378, 1;
	add.s32 	%r2380, %r1717, %r2379;
	add.s32 	%r2381, %r2380, %r1716;
	add.s32 	%r2382, %r2381, %r2375;
	add.s32 	%r1726, %r2382, -899497514;
	shf.l.wrap.b32 	%r1728, %r1718, %r1718, 30;
	shf.l.wrap.b32 	%r2383, %r1726, %r1726, 5;
	// begin inline asm
	lop3.b32 %r1721, %r1722, %r1728, %r1724, 150;
	// end inline asm
	xor.b32  	%r2384, %r2275, %r2259;
	xor.b32  	%r2385, %r2384, %r2323;
	xor.b32  	%r2386, %r2385, %r2363;
	shf.l.wrap.b32 	%r2387, %r2386, %r2386, 1;
	add.s32 	%r2388, %r1721, %r2387;
	add.s32 	%r2389, %r2388, %r1720;
	add.s32 	%r2390, %r2389, %r2383;
	add.s32 	%r1730, %r2390, -899497514;
	shf.l.wrap.b32 	%r1732, %r1722, %r1722, 30;
	shf.l.wrap.b32 	%r2391, %r1730, %r1730, 5;
	// begin inline asm
	lop3.b32 %r1725, %r1726, %r1732, %r1728, 150;
	// end inline asm
	xor.b32  	%r2392, %r2283, %r2267;
	xor.b32  	%r2393, %r2392, %r2331;
	xor.b32  	%r2394, %r2393, %r2371;
	shf.l.wrap.b32 	%r2395, %r2394, %r2394, 1;
	add.s32 	%r2396, %r1725, %r2395;
	add.s32 	%r2397, %r2396, %r1724;
	add.s32 	%r2398, %r2397, %r2391;
	add.s32 	%r1734, %r2398, -899497514;
	shf.l.wrap.b32 	%r1736, %r1726, %r1726, 30;
	shf.l.wrap.b32 	%r2399, %r1734, %r1734, 5;
	// begin inline asm
	lop3.b32 %r1729, %r1730, %r1736, %r1732, 150;
	// end inline asm
	xor.b32  	%r2400, %r2291, %r2275;
	xor.b32  	%r2401, %r2400, %r2339;
	xor.b32  	%r2402, %r2401, %r2379;
	shf.l.wrap.b32 	%r2403, %r2402, %r2402, 1;
	add.s32 	%r2404, %r1729, %r2403;
	add.s32 	%r2405, %r2404, %r1728;
	add.s32 	%r2406, %r2405, %r2399;
	add.s32 	%r1738, %r2406, -899497514;
	shf.l.wrap.b32 	%r1740, %r1730, %r1730, 30;
	shf.l.wrap.b32 	%r2407, %r1738, %r1738, 5;
	// begin inline asm
	lop3.b32 %r1733, %r1734, %r1740, %r1736, 150;
	// end inline asm
	xor.b32  	%r2408, %r2299, %r2283;
	xor.b32  	%r2409, %r2408, %r2347;
	xor.b32  	%r2410, %r2409, %r2387;
	shf.l.wrap.b32 	%r2411, %r2410, %r2410, 1;
	add.s32 	%r2412, %r1733, %r2411;
	add.s32 	%r2413, %r2412, %r1732;
	add.s32 	%r2414, %r2413, %r2407;
	add.s32 	%r1742, %r2414, -899497514;
	shf.l.wrap.b32 	%r1744, %r1734, %r1734, 30;
	shf.l.wrap.b32 	%r2415, %r1742, %r1742, 5;
	// begin inline asm
	lop3.b32 %r1737, %r1738, %r1744, %r1740, 150;
	// end inline asm
	xor.b32  	%r2416, %r2307, %r2291;
	xor.b32  	%r2417, %r2416, %r2355;
	xor.b32  	%r2418, %r2417, %r2395;
	shf.l.wrap.b32 	%r2419, %r2418, %r2418, 1;
	add.s32 	%r2420, %r1737, %r2419;
	add.s32 	%r2421, %r2420, %r1736;
	add.s32 	%r2422, %r2421, %r2415;
	add.s32 	%r1746, %r2422, -899497514;
	shf.l.wrap.b32 	%r1748, %r1738, %r1738, 30;
	shf.l.wrap.b32 	%r2423, %r1746, %r1746, 5;
	// begin inline asm
	lop3.b32 %r1741, %r1742, %r1748, %r1744, 150;
	// end inline asm
	xor.b32  	%r2424, %r2315, %r2299;
	xor.b32  	%r2425, %r2424, %r2363;
	xor.b32  	%r2426, %r2425, %r2403;
	shf.l.wrap.b32 	%r2427, %r2426, %r2426, 1;
	add.s32 	%r2428, %r1741, %r2427;
	add.s32 	%r2429, %r2428, %r1740;
	add.s32 	%r2430, %r2429, %r2423;
	add.s32 	%r2431, %r2430, -899497514;
	shf.l.wrap.b32 	%r1747, %r1742, %r1742, 30;
	shf.l.wrap.b32 	%r2432, %r2431, %r2431, 5;
	// begin inline asm
	lop3.b32 %r1745, %r1746, %r1747, %r1748, 150;
	// end inline asm
	xor.b32  	%r2433, %r2323, %r2307;
	xor.b32  	%r2434, %r2433, %r2371;
	xor.b32  	%r2435, %r2434, %r2411;
	shf.l.wrap.b32 	%r2436, %r2435, %r2435, 1;
	shf.l.wrap.b32 	%r2437, %r1746, %r1746, 30;
	add.s32 	%r2438, %r1745, %r1434;
	add.s32 	%r2439, %r2438, %r2436;
	add.s32 	%r2440, %r2439, %r1744;
	add.s32 	%r2441, %r2440, %r2432;
	add.s32 	%r2442, %r2441, -899497514;
	st.local.u32 	[%rd16+4], %r2442;
	add.s32 	%r2443, %r2431, %r1430;
	st.local.u32 	[%rd16+8], %r2443;
	add.s32 	%r2444, %r2437, %r1431;
	st.local.u32 	[%rd16+12], %r2444;
	add.s32 	%r2445, %r1747, %r1432;
	st.local.u32 	[%rd16+16], %r2445;
	add.s32 	%r2446, %r1748, %r1864;
	st.local.u32 	[%rd16+20], %r2446;
	add.u64 	%rd145, %SP, 16;
	add.u64 	%rd146, %SPL, 16;
	cvt.u64.u32 	%rd147, %r84;
	add.s64 	%rd207, %rd146, %rd147;
	add.s64 	%rd205, %rd145, %rd147;
	sub.s32 	%r5860, %r5860, %r84;
	mov.u32 	%r5841, 0;

$L__BB3_30:
	setp.lt.u32 	%p26, %r5860, 64;
	@%p26 bra 	$L__BB3_35;

$L__BB3_31:
	and.b64  	%rd148, %rd205, 3;
	setp.eq.s64 	%p27, %rd148, 0;
	@%p27 bra 	$L__BB3_33;

	ld.local.u8 	%r2447, [%rd207];
	shl.b32 	%r2448, %r2447, 24;
	ld.local.u8 	%r2449, [%rd207+1];
	shl.b32 	%r2450, %r2449, 16;
	or.b32  	%r2451, %r2450, %r2448;
	ld.local.u8 	%rs105, [%rd207+2];
	mul.wide.u16 	%r2452, %rs105, 256;
	or.b32  	%r2453, %r2451, %r2452;
	ld.local.u8 	%r2454, [%rd207+3];
	or.b32  	%r5859, %r2453, %r2454;
	ld.local.u8 	%r2455, [%rd207+4];
	shl.b32 	%r2456, %r2455, 24;
	ld.local.u8 	%r2457, [%rd207+5];
	shl.b32 	%r2458, %r2457, 16;
	or.b32  	%r2459, %r2458, %r2456;
	ld.local.u8 	%rs106, [%rd207+6];
	mul.wide.u16 	%r2460, %rs106, 256;
	or.b32  	%r2461, %r2459, %r2460;
	ld.local.u8 	%r2462, [%rd207+7];
	or.b32  	%r5858, %r2461, %r2462;
	ld.local.u8 	%r2463, [%rd207+8];
	shl.b32 	%r2464, %r2463, 24;
	ld.local.u8 	%r2465, [%rd207+9];
	shl.b32 	%r2466, %r2465, 16;
	or.b32  	%r2467, %r2466, %r2464;
	ld.local.u8 	%rs107, [%rd207+10];
	mul.wide.u16 	%r2468, %rs107, 256;
	or.b32  	%r2469, %r2467, %r2468;
	ld.local.u8 	%r2470, [%rd207+11];
	or.b32  	%r5857, %r2469, %r2470;
	ld.local.u8 	%r2471, [%rd207+12];
	shl.b32 	%r2472, %r2471, 24;
	ld.local.u8 	%r2473, [%rd207+13];
	shl.b32 	%r2474, %r2473, 16;
	or.b32  	%r2475, %r2474, %r2472;
	ld.local.u8 	%rs108, [%rd207+14];
	mul.wide.u16 	%r2476, %rs108, 256;
	or.b32  	%r2477, %r2475, %r2476;
	ld.local.u8 	%r2478, [%rd207+15];
	or.b32  	%r5856, %r2477, %r2478;
	ld.local.u8 	%r2479, [%rd207+16];
	shl.b32 	%r2480, %r2479, 24;
	ld.local.u8 	%r2481, [%rd207+17];
	shl.b32 	%r2482, %r2481, 16;
	or.b32  	%r2483, %r2482, %r2480;
	ld.local.u8 	%rs109, [%rd207+18];
	mul.wide.u16 	%r2484, %rs109, 256;
	or.b32  	%r2485, %r2483, %r2484;
	ld.local.u8 	%r2486, [%rd207+19];
	or.b32  	%r5855, %r2485, %r2486;
	ld.local.u8 	%r2487, [%rd207+20];
	shl.b32 	%r2488, %r2487, 24;
	ld.local.u8 	%r2489, [%rd207+21];
	shl.b32 	%r2490, %r2489, 16;
	or.b32  	%r2491, %r2490, %r2488;
	ld.local.u8 	%rs110, [%rd207+22];
	mul.wide.u16 	%r2492, %rs110, 256;
	or.b32  	%r2493, %r2491, %r2492;
	ld.local.u8 	%r2494, [%rd207+23];
	or.b32  	%r5854, %r2493, %r2494;
	ld.local.u8 	%r2495, [%rd207+24];
	shl.b32 	%r2496, %r2495, 24;
	ld.local.u8 	%r2497, [%rd207+25];
	shl.b32 	%r2498, %r2497, 16;
	or.b32  	%r2499, %r2498, %r2496;
	ld.local.u8 	%rs111, [%rd207+26];
	mul.wide.u16 	%r2500, %rs111, 256;
	or.b32  	%r2501, %r2499, %r2500;
	ld.local.u8 	%r2502, [%rd207+27];
	or.b32  	%r5853, %r2501, %r2502;
	ld.local.u8 	%r2503, [%rd207+28];
	shl.b32 	%r2504, %r2503, 24;
	ld.local.u8 	%r2505, [%rd207+29];
	shl.b32 	%r2506, %r2505, 16;
	or.b32  	%r2507, %r2506, %r2504;
	ld.local.u8 	%rs112, [%rd207+30];
	mul.wide.u16 	%r2508, %rs112, 256;
	or.b32  	%r2509, %r2507, %r2508;
	ld.local.u8 	%r2510, [%rd207+31];
	or.b32  	%r5852, %r2509, %r2510;
	ld.local.u8 	%r2511, [%rd207+32];
	shl.b32 	%r2512, %r2511, 24;
	ld.local.u8 	%r2513, [%rd207+33];
	shl.b32 	%r2514, %r2513, 16;
	or.b32  	%r2515, %r2514, %r2512;
	ld.local.u8 	%rs113, [%rd207+34];
	mul.wide.u16 	%r2516, %rs113, 256;
	or.b32  	%r2517, %r2515, %r2516;
	ld.local.u8 	%r2518, [%rd207+35];
	or.b32  	%r5851, %r2517, %r2518;
	ld.local.u8 	%r2519, [%rd207+36];
	shl.b32 	%r2520, %r2519, 24;
	ld.local.u8 	%r2521, [%rd207+37];
	shl.b32 	%r2522, %r2521, 16;
	or.b32  	%r2523, %r2522, %r2520;
	ld.local.u8 	%rs114, [%rd207+38];
	mul.wide.u16 	%r2524, %rs114, 256;
	or.b32  	%r2525, %r2523, %r2524;
	ld.local.u8 	%r2526, [%rd207+39];
	or.b32  	%r5850, %r2525, %r2526;
	ld.local.u8 	%r2527, [%rd207+40];
	shl.b32 	%r2528, %r2527, 24;
	ld.local.u8 	%r2529, [%rd207+41];
	shl.b32 	%r2530, %r2529, 16;
	or.b32  	%r2531, %r2530, %r2528;
	ld.local.u8 	%rs115, [%rd207+42];
	mul.wide.u16 	%r2532, %rs115, 256;
	or.b32  	%r2533, %r2531, %r2532;
	ld.local.u8 	%r2534, [%rd207+43];
	or.b32  	%r5849, %r2533, %r2534;
	ld.local.u8 	%r2535, [%rd207+44];
	shl.b32 	%r2536, %r2535, 24;
	ld.local.u8 	%r2537, [%rd207+45];
	shl.b32 	%r2538, %r2537, 16;
	or.b32  	%r2539, %r2538, %r2536;
	ld.local.u8 	%rs116, [%rd207+46];
	mul.wide.u16 	%r2540, %rs116, 256;
	or.b32  	%r2541, %r2539, %r2540;
	ld.local.u8 	%r2542, [%rd207+47];
	or.b32  	%r5848, %r2541, %r2542;
	ld.local.u8 	%r2543, [%rd207+48];
	shl.b32 	%r2544, %r2543, 24;
	ld.local.u8 	%r2545, [%rd207+49];
	shl.b32 	%r2546, %r2545, 16;
	or.b32  	%r2547, %r2546, %r2544;
	ld.local.u8 	%rs117, [%rd207+50];
	mul.wide.u16 	%r2548, %rs117, 256;
	or.b32  	%r2549, %r2547, %r2548;
	ld.local.u8 	%r2550, [%rd207+51];
	or.b32  	%r5847, %r2549, %r2550;
	ld.local.u8 	%r2551, [%rd207+52];
	shl.b32 	%r2552, %r2551, 24;
	ld.local.u8 	%r2553, [%rd207+53];
	shl.b32 	%r2554, %r2553, 16;
	or.b32  	%r2555, %r2554, %r2552;
	ld.local.u8 	%rs118, [%rd207+54];
	mul.wide.u16 	%r2556, %rs118, 256;
	or.b32  	%r2557, %r2555, %r2556;
	ld.local.u8 	%r2558, [%rd207+55];
	or.b32  	%r5846, %r2557, %r2558;
	ld.local.u8 	%r2559, [%rd207+56];
	shl.b32 	%r2560, %r2559, 24;
	ld.local.u8 	%r2561, [%rd207+57];
	shl.b32 	%r2562, %r2561, 16;
	or.b32  	%r2563, %r2562, %r2560;
	ld.local.u8 	%rs119, [%rd207+58];
	mul.wide.u16 	%r2564, %rs119, 256;
	or.b32  	%r2565, %r2563, %r2564;
	ld.local.u8 	%r2566, [%rd207+59];
	or.b32  	%r5845, %r2565, %r2566;
	ld.local.u8 	%r2567, [%rd207+60];
	shl.b32 	%r2568, %r2567, 24;
	ld.local.u8 	%r2569, [%rd207+61];
	shl.b32 	%r2570, %r2569, 16;
	or.b32  	%r2571, %r2570, %r2568;
	ld.local.u8 	%rs120, [%rd207+62];
	mul.wide.u16 	%r2572, %rs120, 256;
	or.b32  	%r2573, %r2571, %r2572;
	ld.local.u8 	%r2574, [%rd207+63];
	or.b32  	%r5844, %r2573, %r2574;
	bra.uni 	$L__BB3_34;

$L__BB3_33:
	ld.local.u32 	%r2575, [%rd207];
	shf.l.wrap.b32 	%r2576, %r2575, %r2575, 16;
	shl.b32 	%r2577, %r2576, 8;
	and.b32  	%r2578, %r2577, -16711936;
	shr.u32 	%r2579, %r2576, 8;
	and.b32  	%r2580, %r2579, 16711935;
	or.b32  	%r5859, %r2578, %r2580;
	ld.local.u32 	%r2581, [%rd207+4];
	shf.l.wrap.b32 	%r2582, %r2581, %r2581, 16;
	shl.b32 	%r2583, %r2582, 8;
	and.b32  	%r2584, %r2583, -16711936;
	shr.u32 	%r2585, %r2582, 8;
	and.b32  	%r2586, %r2585, 16711935;
	or.b32  	%r5858, %r2584, %r2586;
	ld.local.u32 	%r2587, [%rd207+8];
	shf.l.wrap.b32 	%r2588, %r2587, %r2587, 16;
	shl.b32 	%r2589, %r2588, 8;
	and.b32  	%r2590, %r2589, -16711936;
	shr.u32 	%r2591, %r2588, 8;
	and.b32  	%r2592, %r2591, 16711935;
	or.b32  	%r5857, %r2590, %r2592;
	ld.local.u32 	%r2593, [%rd207+12];
	shf.l.wrap.b32 	%r2594, %r2593, %r2593, 16;
	shl.b32 	%r2595, %r2594, 8;
	and.b32  	%r2596, %r2595, -16711936;
	shr.u32 	%r2597, %r2594, 8;
	and.b32  	%r2598, %r2597, 16711935;
	or.b32  	%r5856, %r2596, %r2598;
	ld.local.u32 	%r2599, [%rd207+16];
	shf.l.wrap.b32 	%r2600, %r2599, %r2599, 16;
	shl.b32 	%r2601, %r2600, 8;
	and.b32  	%r2602, %r2601, -16711936;
	shr.u32 	%r2603, %r2600, 8;
	and.b32  	%r2604, %r2603, 16711935;
	or.b32  	%r5855, %r2602, %r2604;
	ld.local.u32 	%r2605, [%rd207+20];
	shf.l.wrap.b32 	%r2606, %r2605, %r2605, 16;
	shl.b32 	%r2607, %r2606, 8;
	and.b32  	%r2608, %r2607, -16711936;
	shr.u32 	%r2609, %r2606, 8;
	and.b32  	%r2610, %r2609, 16711935;
	or.b32  	%r5854, %r2608, %r2610;
	ld.local.u32 	%r2611, [%rd207+24];
	shf.l.wrap.b32 	%r2612, %r2611, %r2611, 16;
	shl.b32 	%r2613, %r2612, 8;
	and.b32  	%r2614, %r2613, -16711936;
	shr.u32 	%r2615, %r2612, 8;
	and.b32  	%r2616, %r2615, 16711935;
	or.b32  	%r5853, %r2614, %r2616;
	ld.local.u32 	%r2617, [%rd207+28];
	shf.l.wrap.b32 	%r2618, %r2617, %r2617, 16;
	shl.b32 	%r2619, %r2618, 8;
	and.b32  	%r2620, %r2619, -16711936;
	shr.u32 	%r2621, %r2618, 8;
	and.b32  	%r2622, %r2621, 16711935;
	or.b32  	%r5852, %r2620, %r2622;
	ld.local.u32 	%r2623, [%rd207+32];
	shf.l.wrap.b32 	%r2624, %r2623, %r2623, 16;
	shl.b32 	%r2625, %r2624, 8;
	and.b32  	%r2626, %r2625, -16711936;
	shr.u32 	%r2627, %r2624, 8;
	and.b32  	%r2628, %r2627, 16711935;
	or.b32  	%r5851, %r2626, %r2628;
	ld.local.u32 	%r2629, [%rd207+36];
	shf.l.wrap.b32 	%r2630, %r2629, %r2629, 16;
	shl.b32 	%r2631, %r2630, 8;
	and.b32  	%r2632, %r2631, -16711936;
	shr.u32 	%r2633, %r2630, 8;
	and.b32  	%r2634, %r2633, 16711935;
	or.b32  	%r5850, %r2632, %r2634;
	ld.local.u32 	%r2635, [%rd207+40];
	shf.l.wrap.b32 	%r2636, %r2635, %r2635, 16;
	shl.b32 	%r2637, %r2636, 8;
	and.b32  	%r2638, %r2637, -16711936;
	shr.u32 	%r2639, %r2636, 8;
	and.b32  	%r2640, %r2639, 16711935;
	or.b32  	%r5849, %r2638, %r2640;
	ld.local.u32 	%r2641, [%rd207+44];
	shf.l.wrap.b32 	%r2642, %r2641, %r2641, 16;
	shl.b32 	%r2643, %r2642, 8;
	and.b32  	%r2644, %r2643, -16711936;
	shr.u32 	%r2645, %r2642, 8;
	and.b32  	%r2646, %r2645, 16711935;
	or.b32  	%r5848, %r2644, %r2646;
	ld.local.u32 	%r2647, [%rd207+48];
	shf.l.wrap.b32 	%r2648, %r2647, %r2647, 16;
	shl.b32 	%r2649, %r2648, 8;
	and.b32  	%r2650, %r2649, -16711936;
	shr.u32 	%r2651, %r2648, 8;
	and.b32  	%r2652, %r2651, 16711935;
	or.b32  	%r5847, %r2650, %r2652;
	ld.local.u32 	%r2653, [%rd207+52];
	shf.l.wrap.b32 	%r2654, %r2653, %r2653, 16;
	shl.b32 	%r2655, %r2654, 8;
	and.b32  	%r2656, %r2655, -16711936;
	shr.u32 	%r2657, %r2654, 8;
	and.b32  	%r2658, %r2657, 16711935;
	or.b32  	%r5846, %r2656, %r2658;
	ld.local.u32 	%r2659, [%rd207+56];
	shf.l.wrap.b32 	%r2660, %r2659, %r2659, 16;
	shl.b32 	%r2661, %r2660, 8;
	and.b32  	%r2662, %r2661, -16711936;
	shr.u32 	%r2663, %r2660, 8;
	and.b32  	%r2664, %r2663, 16711935;
	or.b32  	%r5845, %r2662, %r2664;
	ld.local.u32 	%r2665, [%rd207+60];
	shf.l.wrap.b32 	%r2666, %r2665, %r2665, 16;
	shl.b32 	%r2667, %r2666, 8;
	and.b32  	%r2668, %r2667, -16711936;
	shr.u32 	%r2669, %r2666, 8;
	and.b32  	%r2670, %r2669, 16711935;
	or.b32  	%r5844, %r2668, %r2670;

$L__BB3_34:
	ld.local.u32 	%r2676, [%rd16+4];
	shf.l.wrap.b32 	%r2991, %r2676, %r2676, 5;
	ld.local.u32 	%r2674, [%rd16+16];
	ld.local.u32 	%r2673, [%rd16+12];
	ld.local.u32 	%r2672, [%rd16+8];
	// begin inline asm
	lop3.b32 %r2671, %r2672, %r2673, %r2674, 202;
	// end inline asm
	add.s32 	%r2992, %r5859, %r2991;
	ld.local.u32 	%r2993, [%rd16+20];
	add.s32 	%r2994, %r2992, %r2993;
	add.s32 	%r2995, %r2994, %r2671;
	add.s32 	%r2680, %r2995, 1518500249;
	shf.l.wrap.b32 	%r2682, %r2672, %r2672, 30;
	shf.l.wrap.b32 	%r2996, %r2680, %r2680, 5;
	// begin inline asm
	lop3.b32 %r2675, %r2676, %r2682, %r2673, 202;
	// end inline asm
	add.s32 	%r2997, %r5858, %r2674;
	add.s32 	%r2998, %r2997, %r2675;
	add.s32 	%r2999, %r2998, %r2996;
	add.s32 	%r2684, %r2999, 1518500249;
	shf.l.wrap.b32 	%r2686, %r2676, %r2676, 30;
	shf.l.wrap.b32 	%r3000, %r2684, %r2684, 5;
	// begin inline asm
	lop3.b32 %r2679, %r2680, %r2686, %r2682, 202;
	// end inline asm
	add.s32 	%r3001, %r5857, %r2673;
	add.s32 	%r3002, %r3001, %r2679;
	add.s32 	%r3003, %r3002, %r3000;
	add.s32 	%r2688, %r3003, 1518500249;
	shf.l.wrap.b32 	%r2690, %r2680, %r2680, 30;
	shf.l.wrap.b32 	%r3004, %r2688, %r2688, 5;
	// begin inline asm
	lop3.b32 %r2683, %r2684, %r2690, %r2686, 202;
	// end inline asm
	add.s32 	%r3005, %r5856, %r2682;
	add.s32 	%r3006, %r3005, %r2683;
	add.s32 	%r3007, %r3006, %r3004;
	add.s32 	%r2692, %r3007, 1518500249;
	shf.l.wrap.b32 	%r2694, %r2684, %r2684, 30;
	shf.l.wrap.b32 	%r3008, %r2692, %r2692, 5;
	// begin inline asm
	lop3.b32 %r2687, %r2688, %r2694, %r2690, 202;
	// end inline asm
	add.s32 	%r3009, %r5855, %r2686;
	add.s32 	%r3010, %r3009, %r2687;
	add.s32 	%r3011, %r3010, %r3008;
	add.s32 	%r2696, %r3011, 1518500249;
	shf.l.wrap.b32 	%r2698, %r2688, %r2688, 30;
	shf.l.wrap.b32 	%r3012, %r2696, %r2696, 5;
	// begin inline asm
	lop3.b32 %r2691, %r2692, %r2698, %r2694, 202;
	// end inline asm
	add.s32 	%r3013, %r5854, %r2691;
	add.s32 	%r3014, %r3013, %r2690;
	add.s32 	%r3015, %r3014, %r3012;
	add.s32 	%r2700, %r3015, 1518500249;
	shf.l.wrap.b32 	%r2702, %r2692, %r2692, 30;
	shf.l.wrap.b32 	%r3016, %r2700, %r2700, 5;
	// begin inline asm
	lop3.b32 %r2695, %r2696, %r2702, %r2698, 202;
	// end inline asm
	add.s32 	%r3017, %r5853, %r2695;
	add.s32 	%r3018, %r3017, %r2694;
	add.s32 	%r3019, %r3018, %r3016;
	add.s32 	%r2704, %r3019, 1518500249;
	shf.l.wrap.b32 	%r2706, %r2696, %r2696, 30;
	shf.l.wrap.b32 	%r3020, %r2704, %r2704, 5;
	// begin inline asm
	lop3.b32 %r2699, %r2700, %r2706, %r2702, 202;
	// end inline asm
	add.s32 	%r3021, %r5852, %r2699;
	add.s32 	%r3022, %r3021, %r2698;
	add.s32 	%r3023, %r3022, %r3020;
	add.s32 	%r2708, %r3023, 1518500249;
	shf.l.wrap.b32 	%r2710, %r2700, %r2700, 30;
	shf.l.wrap.b32 	%r3024, %r2708, %r2708, 5;
	// begin inline asm
	lop3.b32 %r2703, %r2704, %r2710, %r2706, 202;
	// end inline asm
	add.s32 	%r3025, %r5851, %r2703;
	add.s32 	%r3026, %r3025, %r2702;
	add.s32 	%r3027, %r3026, %r3024;
	add.s32 	%r2712, %r3027, 1518500249;
	shf.l.wrap.b32 	%r2714, %r2704, %r2704, 30;
	shf.l.wrap.b32 	%r3028, %r2712, %r2712, 5;
	// begin inline asm
	lop3.b32 %r2707, %r2708, %r2714, %r2710, 202;
	// end inline asm
	add.s32 	%r3029, %r5850, %r2707;
	add.s32 	%r3030, %r3029, %r2706;
	add.s32 	%r3031, %r3030, %r3028;
	add.s32 	%r2716, %r3031, 1518500249;
	shf.l.wrap.b32 	%r2718, %r2708, %r2708, 30;
	shf.l.wrap.b32 	%r3032, %r2716, %r2716, 5;
	// begin inline asm
	lop3.b32 %r2711, %r2712, %r2718, %r2714, 202;
	// end inline asm
	add.s32 	%r3033, %r5849, %r2711;
	add.s32 	%r3034, %r3033, %r2710;
	add.s32 	%r3035, %r3034, %r3032;
	add.s32 	%r2720, %r3035, 1518500249;
	shf.l.wrap.b32 	%r2722, %r2712, %r2712, 30;
	shf.l.wrap.b32 	%r3036, %r2720, %r2720, 5;
	// begin inline asm
	lop3.b32 %r2715, %r2716, %r2722, %r2718, 202;
	// end inline asm
	add.s32 	%r3037, %r5848, %r2715;
	add.s32 	%r3038, %r3037, %r2714;
	add.s32 	%r3039, %r3038, %r3036;
	add.s32 	%r2724, %r3039, 1518500249;
	shf.l.wrap.b32 	%r2726, %r2716, %r2716, 30;
	shf.l.wrap.b32 	%r3040, %r2724, %r2724, 5;
	// begin inline asm
	lop3.b32 %r2719, %r2720, %r2726, %r2722, 202;
	// end inline asm
	add.s32 	%r3041, %r5847, %r2719;
	add.s32 	%r3042, %r3041, %r2718;
	add.s32 	%r3043, %r3042, %r3040;
	add.s32 	%r2728, %r3043, 1518500249;
	shf.l.wrap.b32 	%r2730, %r2720, %r2720, 30;
	shf.l.wrap.b32 	%r3044, %r2728, %r2728, 5;
	// begin inline asm
	lop3.b32 %r2723, %r2724, %r2730, %r2726, 202;
	// end inline asm
	add.s32 	%r3045, %r5846, %r2723;
	add.s32 	%r3046, %r3045, %r2722;
	add.s32 	%r3047, %r3046, %r3044;
	add.s32 	%r2732, %r3047, 1518500249;
	shf.l.wrap.b32 	%r2734, %r2724, %r2724, 30;
	shf.l.wrap.b32 	%r3048, %r2732, %r2732, 5;
	// begin inline asm
	lop3.b32 %r2727, %r2728, %r2734, %r2730, 202;
	// end inline asm
	add.s32 	%r3049, %r5845, %r2727;
	add.s32 	%r3050, %r3049, %r2726;
	add.s32 	%r3051, %r3050, %r3048;
	add.s32 	%r2736, %r3051, 1518500249;
	shf.l.wrap.b32 	%r2738, %r2728, %r2728, 30;
	shf.l.wrap.b32 	%r3052, %r2736, %r2736, 5;
	// begin inline asm
	lop3.b32 %r2731, %r2732, %r2738, %r2734, 202;
	// end inline asm
	add.s32 	%r3053, %r5844, %r2731;
	add.s32 	%r3054, %r3053, %r2730;
	add.s32 	%r3055, %r3054, %r3052;
	add.s32 	%r2740, %r3055, 1518500249;
	shf.l.wrap.b32 	%r2742, %r2732, %r2732, 30;
	shf.l.wrap.b32 	%r3056, %r2740, %r2740, 5;
	// begin inline asm
	lop3.b32 %r2735, %r2736, %r2742, %r2738, 202;
	// end inline asm
	xor.b32  	%r3057, %r5851, %r5846;
	xor.b32  	%r3058, %r3057, %r5857;
	xor.b32  	%r3059, %r3058, %r5859;
	shf.l.wrap.b32 	%r3060, %r3059, %r3059, 1;
	add.s32 	%r3061, %r3060, %r2735;
	add.s32 	%r3062, %r3061, %r2734;
	add.s32 	%r3063, %r3062, %r3056;
	add.s32 	%r2744, %r3063, 1518500249;
	shf.l.wrap.b32 	%r2746, %r2736, %r2736, 30;
	shf.l.wrap.b32 	%r3064, %r2744, %r2744, 5;
	// begin inline asm
	lop3.b32 %r2739, %r2740, %r2746, %r2742, 202;
	// end inline asm
	xor.b32  	%r3065, %r5850, %r5845;
	xor.b32  	%r3066, %r3065, %r5856;
	xor.b32  	%r3067, %r3066, %r5858;
	shf.l.wrap.b32 	%r3068, %r3067, %r3067, 1;
	add.s32 	%r3069, %r3068, %r2739;
	add.s32 	%r3070, %r3069, %r2738;
	add.s32 	%r3071, %r3070, %r3064;
	add.s32 	%r2748, %r3071, 1518500249;
	shf.l.wrap.b32 	%r2750, %r2740, %r2740, 30;
	shf.l.wrap.b32 	%r3072, %r2748, %r2748, 5;
	// begin inline asm
	lop3.b32 %r2743, %r2744, %r2750, %r2746, 202;
	// end inline asm
	xor.b32  	%r3073, %r5849, %r5844;
	xor.b32  	%r3074, %r3073, %r5855;
	xor.b32  	%r3075, %r3074, %r5857;
	shf.l.wrap.b32 	%r3076, %r3075, %r3075, 1;
	add.s32 	%r3077, %r3076, %r2743;
	add.s32 	%r3078, %r3077, %r2742;
	add.s32 	%r3079, %r3078, %r3072;
	add.s32 	%r2752, %r3079, 1518500249;
	shf.l.wrap.b32 	%r2754, %r2744, %r2744, 30;
	shf.l.wrap.b32 	%r3080, %r2752, %r2752, 5;
	// begin inline asm
	lop3.b32 %r2747, %r2748, %r2754, %r2750, 202;
	// end inline asm
	xor.b32  	%r3081, %r5854, %r5848;
	xor.b32  	%r3082, %r3081, %r5856;
	xor.b32  	%r3083, %r3082, %r3060;
	shf.l.wrap.b32 	%r3084, %r3083, %r3083, 1;
	add.s32 	%r3085, %r3084, %r2747;
	add.s32 	%r3086, %r3085, %r2746;
	add.s32 	%r3087, %r3086, %r3080;
	add.s32 	%r2756, %r3087, 1518500249;
	shf.l.wrap.b32 	%r2758, %r2748, %r2748, 30;
	shf.l.wrap.b32 	%r3088, %r2756, %r2756, 5;
	// begin inline asm
	lop3.b32 %r2751, %r2752, %r2758, %r2754, 150;
	// end inline asm
	xor.b32  	%r3089, %r5853, %r5847;
	xor.b32  	%r3090, %r3089, %r5855;
	xor.b32  	%r3091, %r3090, %r3068;
	shf.l.wrap.b32 	%r3092, %r3091, %r3091, 1;
	add.s32 	%r3093, %r3092, %r2751;
	add.s32 	%r3094, %r3093, %r2750;
	add.s32 	%r3095, %r3094, %r3088;
	add.s32 	%r2760, %r3095, 1859775393;
	shf.l.wrap.b32 	%r2762, %r2752, %r2752, 30;
	shf.l.wrap.b32 	%r3096, %r2760, %r2760, 5;
	// begin inline asm
	lop3.b32 %r2755, %r2756, %r2762, %r2758, 150;
	// end inline asm
	xor.b32  	%r3097, %r5852, %r5846;
	xor.b32  	%r3098, %r3097, %r5854;
	xor.b32  	%r3099, %r3098, %r3076;
	shf.l.wrap.b32 	%r3100, %r3099, %r3099, 1;
	add.s32 	%r3101, %r3100, %r2755;
	add.s32 	%r3102, %r3101, %r2754;
	add.s32 	%r3103, %r3102, %r3096;
	add.s32 	%r2764, %r3103, 1859775393;
	shf.l.wrap.b32 	%r2766, %r2756, %r2756, 30;
	shf.l.wrap.b32 	%r3104, %r2764, %r2764, 5;
	// begin inline asm
	lop3.b32 %r2759, %r2760, %r2766, %r2762, 150;
	// end inline asm
	xor.b32  	%r3105, %r5851, %r5845;
	xor.b32  	%r3106, %r3105, %r5853;
	xor.b32  	%r3107, %r3106, %r3084;
	shf.l.wrap.b32 	%r3108, %r3107, %r3107, 1;
	add.s32 	%r3109, %r3108, %r2759;
	add.s32 	%r3110, %r3109, %r2758;
	add.s32 	%r3111, %r3110, %r3104;
	add.s32 	%r2768, %r3111, 1859775393;
	shf.l.wrap.b32 	%r2770, %r2760, %r2760, 30;
	shf.l.wrap.b32 	%r3112, %r2768, %r2768, 5;
	// begin inline asm
	lop3.b32 %r2763, %r2764, %r2770, %r2766, 150;
	// end inline asm
	xor.b32  	%r3113, %r5850, %r5844;
	xor.b32  	%r3114, %r3113, %r5852;
	xor.b32  	%r3115, %r3114, %r3092;
	shf.l.wrap.b32 	%r3116, %r3115, %r3115, 1;
	add.s32 	%r3117, %r3116, %r2763;
	add.s32 	%r3118, %r3117, %r2762;
	add.s32 	%r3119, %r3118, %r3112;
	add.s32 	%r2772, %r3119, 1859775393;
	shf.l.wrap.b32 	%r2774, %r2764, %r2764, 30;
	shf.l.wrap.b32 	%r3120, %r2772, %r2772, 5;
	// begin inline asm
	lop3.b32 %r2767, %r2768, %r2774, %r2770, 150;
	// end inline asm
	xor.b32  	%r3121, %r5851, %r5849;
	xor.b32  	%r3122, %r3121, %r3060;
	xor.b32  	%r3123, %r3122, %r3100;
	shf.l.wrap.b32 	%r3124, %r3123, %r3123, 1;
	add.s32 	%r3125, %r3124, %r2767;
	add.s32 	%r3126, %r3125, %r2766;
	add.s32 	%r3127, %r3126, %r3120;
	add.s32 	%r2776, %r3127, 1859775393;
	shf.l.wrap.b32 	%r2778, %r2768, %r2768, 30;
	shf.l.wrap.b32 	%r3128, %r2776, %r2776, 5;
	// begin inline asm
	lop3.b32 %r2771, %r2772, %r2778, %r2774, 150;
	// end inline asm
	xor.b32  	%r3129, %r5850, %r5848;
	xor.b32  	%r3130, %r3129, %r3068;
	xor.b32  	%r3131, %r3130, %r3108;
	shf.l.wrap.b32 	%r3132, %r3131, %r3131, 1;
	add.s32 	%r3133, %r3132, %r2771;
	add.s32 	%r3134, %r3133, %r2770;
	add.s32 	%r3135, %r3134, %r3128;
	add.s32 	%r2780, %r3135, 1859775393;
	shf.l.wrap.b32 	%r2782, %r2772, %r2772, 30;
	shf.l.wrap.b32 	%r3136, %r2780, %r2780, 5;
	// begin inline asm
	lop3.b32 %r2775, %r2776, %r2782, %r2778, 150;
	// end inline asm
	xor.b32  	%r3137, %r5849, %r5847;
	xor.b32  	%r3138, %r3137, %r3076;
	xor.b32  	%r3139, %r3138, %r3116;
	shf.l.wrap.b32 	%r3140, %r3139, %r3139, 1;
	add.s32 	%r3141, %r3140, %r2775;
	add.s32 	%r3142, %r3141, %r2774;
	add.s32 	%r3143, %r3142, %r3136;
	add.s32 	%r2784, %r3143, 1859775393;
	shf.l.wrap.b32 	%r2786, %r2776, %r2776, 30;
	shf.l.wrap.b32 	%r3144, %r2784, %r2784, 5;
	// begin inline asm
	lop3.b32 %r2779, %r2780, %r2786, %r2782, 150;
	// end inline asm
	xor.b32  	%r3145, %r5848, %r5846;
	xor.b32  	%r3146, %r3145, %r3084;
	xor.b32  	%r3147, %r3146, %r3124;
	shf.l.wrap.b32 	%r3148, %r3147, %r3147, 1;
	add.s32 	%r3149, %r3148, %r2779;
	add.s32 	%r3150, %r3149, %r2778;
	add.s32 	%r3151, %r3150, %r3144;
	add.s32 	%r2788, %r3151, 1859775393;
	shf.l.wrap.b32 	%r2790, %r2780, %r2780, 30;
	shf.l.wrap.b32 	%r3152, %r2788, %r2788, 5;
	// begin inline asm
	lop3.b32 %r2783, %r2784, %r2790, %r2786, 150;
	// end inline asm
	xor.b32  	%r3153, %r5847, %r5845;
	xor.b32  	%r3154, %r3153, %r3092;
	xor.b32  	%r3155, %r3154, %r3132;
	shf.l.wrap.b32 	%r3156, %r3155, %r3155, 1;
	add.s32 	%r3157, %r3156, %r2783;
	add.s32 	%r3158, %r3157, %r2782;
	add.s32 	%r3159, %r3158, %r3152;
	add.s32 	%r2792, %r3159, 1859775393;
	shf.l.wrap.b32 	%r2794, %r2784, %r2784, 30;
	shf.l.wrap.b32 	%r3160, %r2792, %r2792, 5;
	// begin inline asm
	lop3.b32 %r2787, %r2788, %r2794, %r2790, 150;
	// end inline asm
	xor.b32  	%r3161, %r5846, %r5844;
	xor.b32  	%r3162, %r3161, %r3100;
	xor.b32  	%r3163, %r3162, %r3140;
	shf.l.wrap.b32 	%r3164, %r3163, %r3163, 1;
	add.s32 	%r3165, %r3164, %r2787;
	add.s32 	%r3166, %r3165, %r2786;
	add.s32 	%r3167, %r3166, %r3160;
	add.s32 	%r2796, %r3167, 1859775393;
	shf.l.wrap.b32 	%r2798, %r2788, %r2788, 30;
	shf.l.wrap.b32 	%r3168, %r2796, %r2796, 5;
	// begin inline asm
	lop3.b32 %r2791, %r2792, %r2798, %r2794, 150;
	// end inline asm
	xor.b32  	%r3169, %r3060, %r5845;
	xor.b32  	%r3170, %r3169, %r3108;
	xor.b32  	%r3171, %r3170, %r3148;
	shf.l.wrap.b32 	%r3172, %r3171, %r3171, 1;
	add.s32 	%r3173, %r3172, %r2791;
	add.s32 	%r3174, %r3173, %r2790;
	add.s32 	%r3175, %r3174, %r3168;
	add.s32 	%r2800, %r3175, 1859775393;
	shf.l.wrap.b32 	%r2802, %r2792, %r2792, 30;
	shf.l.wrap.b32 	%r3176, %r2800, %r2800, 5;
	// begin inline asm
	lop3.b32 %r2795, %r2796, %r2802, %r2798, 150;
	// end inline asm
	xor.b32  	%r3177, %r3068, %r5844;
	xor.b32  	%r3178, %r3177, %r3116;
	xor.b32  	%r3179, %r3178, %r3156;
	shf.l.wrap.b32 	%r3180, %r3179, %r3179, 1;
	add.s32 	%r3181, %r3180, %r2795;
	add.s32 	%r3182, %r3181, %r2794;
	add.s32 	%r3183, %r3182, %r3176;
	add.s32 	%r2804, %r3183, 1859775393;
	shf.l.wrap.b32 	%r2806, %r2796, %r2796, 30;
	shf.l.wrap.b32 	%r3184, %r2804, %r2804, 5;
	// begin inline asm
	lop3.b32 %r2799, %r2800, %r2806, %r2802, 150;
	// end inline asm
	xor.b32  	%r3185, %r3060, %r3076;
	xor.b32  	%r3186, %r3185, %r3124;
	xor.b32  	%r3187, %r3186, %r3164;
	shf.l.wrap.b32 	%r3188, %r3187, %r3187, 1;
	add.s32 	%r3189, %r3188, %r2799;
	add.s32 	%r3190, %r3189, %r2798;
	add.s32 	%r3191, %r3190, %r3184;
	add.s32 	%r2808, %r3191, 1859775393;
	shf.l.wrap.b32 	%r2810, %r2800, %r2800, 30;
	shf.l.wrap.b32 	%r3192, %r2808, %r2808, 5;
	// begin inline asm
	lop3.b32 %r2803, %r2804, %r2810, %r2806, 150;
	// end inline asm
	xor.b32  	%r3193, %r3084, %r3068;
	xor.b32  	%r3194, %r3193, %r3132;
	xor.b32  	%r3195, %r3194, %r3172;
	shf.l.wrap.b32 	%r3196, %r3195, %r3195, 1;
	add.s32 	%r3197, %r3196, %r2803;
	add.s32 	%r3198, %r3197, %r2802;
	add.s32 	%r3199, %r3198, %r3192;
	add.s32 	%r2812, %r3199, 1859775393;
	shf.l.wrap.b32 	%r2814, %r2804, %r2804, 30;
	shf.l.wrap.b32 	%r3200, %r2812, %r2812, 5;
	// begin inline asm
	lop3.b32 %r2807, %r2808, %r2814, %r2810, 150;
	// end inline asm
	xor.b32  	%r3201, %r3092, %r3076;
	xor.b32  	%r3202, %r3201, %r3140;
	xor.b32  	%r3203, %r3202, %r3180;
	shf.l.wrap.b32 	%r3204, %r3203, %r3203, 1;
	add.s32 	%r3205, %r3204, %r2807;
	add.s32 	%r3206, %r3205, %r2806;
	add.s32 	%r3207, %r3206, %r3200;
	add.s32 	%r2816, %r3207, 1859775393;
	shf.l.wrap.b32 	%r2818, %r2808, %r2808, 30;
	shf.l.wrap.b32 	%r3208, %r2816, %r2816, 5;
	// begin inline asm
	lop3.b32 %r2811, %r2812, %r2818, %r2814, 150;
	// end inline asm
	xor.b32  	%r3209, %r3084, %r3100;
	xor.b32  	%r3210, %r3209, %r3148;
	xor.b32  	%r3211, %r3210, %r3188;
	shf.l.wrap.b32 	%r3212, %r3211, %r3211, 1;
	add.s32 	%r3213, %r3212, %r2811;
	add.s32 	%r3214, %r3213, %r2810;
	add.s32 	%r3215, %r3214, %r3208;
	add.s32 	%r2820, %r3215, 1859775393;
	shf.l.wrap.b32 	%r2822, %r2812, %r2812, 30;
	shf.l.wrap.b32 	%r3216, %r2820, %r2820, 5;
	// begin inline asm
	lop3.b32 %r2815, %r2816, %r2822, %r2818, 150;
	// end inline asm
	xor.b32  	%r3217, %r3108, %r3092;
	xor.b32  	%r3218, %r3217, %r3156;
	xor.b32  	%r3219, %r3218, %r3196;
	shf.l.wrap.b32 	%r3220, %r3219, %r3219, 1;
	add.s32 	%r3221, %r3220, %r2815;
	add.s32 	%r3222, %r3221, %r2814;
	add.s32 	%r3223, %r3222, %r3216;
	add.s32 	%r2824, %r3223, 1859775393;
	shf.l.wrap.b32 	%r2826, %r2816, %r2816, 30;
	shf.l.wrap.b32 	%r3224, %r2824, %r2824, 5;
	// begin inline asm
	lop3.b32 %r2819, %r2820, %r2826, %r2822, 150;
	// end inline asm
	xor.b32  	%r3225, %r3116, %r3100;
	xor.b32  	%r3226, %r3225, %r3164;
	xor.b32  	%r3227, %r3226, %r3204;
	shf.l.wrap.b32 	%r3228, %r3227, %r3227, 1;
	add.s32 	%r3229, %r3228, %r2819;
	add.s32 	%r3230, %r3229, %r2818;
	add.s32 	%r3231, %r3230, %r3224;
	add.s32 	%r2828, %r3231, 1859775393;
	shf.l.wrap.b32 	%r2830, %r2820, %r2820, 30;
	shf.l.wrap.b32 	%r3232, %r2828, %r2828, 5;
	// begin inline asm
	lop3.b32 %r2823, %r2824, %r2830, %r2826, 150;
	// end inline asm
	xor.b32  	%r3233, %r3108, %r3124;
	xor.b32  	%r3234, %r3233, %r3172;
	xor.b32  	%r3235, %r3234, %r3212;
	shf.l.wrap.b32 	%r3236, %r3235, %r3235, 1;
	add.s32 	%r3237, %r3236, %r2823;
	add.s32 	%r3238, %r3237, %r2822;
	add.s32 	%r3239, %r3238, %r3232;
	add.s32 	%r2832, %r3239, 1859775393;
	shf.l.wrap.b32 	%r2834, %r2824, %r2824, 30;
	shf.l.wrap.b32 	%r3240, %r2832, %r2832, 5;
	// begin inline asm
	lop3.b32 %r2827, %r2828, %r2834, %r2830, 150;
	// end inline asm
	xor.b32  	%r3241, %r3132, %r3116;
	xor.b32  	%r3242, %r3241, %r3180;
	xor.b32  	%r3243, %r3242, %r3220;
	shf.l.wrap.b32 	%r3244, %r3243, %r3243, 1;
	add.s32 	%r3245, %r3244, %r2827;
	add.s32 	%r3246, %r3245, %r2826;
	add.s32 	%r3247, %r3246, %r3240;
	add.s32 	%r2836, %r3247, 1859775393;
	shf.l.wrap.b32 	%r2838, %r2828, %r2828, 30;
	shf.l.wrap.b32 	%r3248, %r2836, %r2836, 5;
	// begin inline asm
	lop3.b32 %r2831, %r2832, %r2838, %r2834, 232;
	// end inline asm
	xor.b32  	%r3249, %r3140, %r3124;
	xor.b32  	%r3250, %r3249, %r3188;
	xor.b32  	%r3251, %r3250, %r3228;
	shf.l.wrap.b32 	%r3252, %r3251, %r3251, 1;
	add.s32 	%r3253, %r3252, %r2831;
	add.s32 	%r3254, %r3253, %r2830;
	add.s32 	%r3255, %r3254, %r3248;
	add.s32 	%r2840, %r3255, -1894007588;
	shf.l.wrap.b32 	%r2842, %r2832, %r2832, 30;
	shf.l.wrap.b32 	%r3256, %r2840, %r2840, 5;
	// begin inline asm
	lop3.b32 %r2835, %r2836, %r2842, %r2838, 232;
	// end inline asm
	xor.b32  	%r3257, %r3132, %r3148;
	xor.b32  	%r3258, %r3257, %r3196;
	xor.b32  	%r3259, %r3258, %r3236;
	shf.l.wrap.b32 	%r3260, %r3259, %r3259, 1;
	add.s32 	%r3261, %r3260, %r2835;
	add.s32 	%r3262, %r3261, %r2834;
	add.s32 	%r3263, %r3262, %r3256;
	add.s32 	%r2844, %r3263, -1894007588;
	shf.l.wrap.b32 	%r2846, %r2836, %r2836, 30;
	shf.l.wrap.b32 	%r3264, %r2844, %r2844, 5;
	// begin inline asm
	lop3.b32 %r2839, %r2840, %r2846, %r2842, 232;
	// end inline asm
	xor.b32  	%r3265, %r3156, %r3140;
	xor.b32  	%r3266, %r3265, %r3204;
	xor.b32  	%r3267, %r3266, %r3244;
	shf.l.wrap.b32 	%r3268, %r3267, %r3267, 1;
	add.s32 	%r3269, %r3268, %r2839;
	add.s32 	%r3270, %r3269, %r2838;
	add.s32 	%r3271, %r3270, %r3264;
	add.s32 	%r2848, %r3271, -1894007588;
	shf.l.wrap.b32 	%r2850, %r2840, %r2840, 30;
	shf.l.wrap.b32 	%r3272, %r2848, %r2848, 5;
	// begin inline asm
	lop3.b32 %r2843, %r2844, %r2850, %r2846, 232;
	// end inline asm
	xor.b32  	%r3273, %r3164, %r3148;
	xor.b32  	%r3274, %r3273, %r3212;
	xor.b32  	%r3275, %r3274, %r3252;
	shf.l.wrap.b32 	%r3276, %r3275, %r3275, 1;
	add.s32 	%r3277, %r3276, %r2843;
	add.s32 	%r3278, %r3277, %r2842;
	add.s32 	%r3279, %r3278, %r3272;
	add.s32 	%r2852, %r3279, -1894007588;
	shf.l.wrap.b32 	%r2854, %r2844, %r2844, 30;
	shf.l.wrap.b32 	%r3280, %r2852, %r2852, 5;
	// begin inline asm
	lop3.b32 %r2847, %r2848, %r2854, %r2850, 232;
	// end inline asm
	xor.b32  	%r3281, %r3156, %r3172;
	xor.b32  	%r3282, %r3281, %r3220;
	xor.b32  	%r3283, %r3282, %r3260;
	shf.l.wrap.b32 	%r3284, %r3283, %r3283, 1;
	add.s32 	%r3285, %r3284, %r2847;
	add.s32 	%r3286, %r3285, %r2846;
	add.s32 	%r3287, %r3286, %r3280;
	add.s32 	%r2856, %r3287, -1894007588;
	shf.l.wrap.b32 	%r2858, %r2848, %r2848, 30;
	shf.l.wrap.b32 	%r3288, %r2856, %r2856, 5;
	// begin inline asm
	lop3.b32 %r2851, %r2852, %r2858, %r2854, 232;
	// end inline asm
	xor.b32  	%r3289, %r3180, %r3164;
	xor.b32  	%r3290, %r3289, %r3228;
	xor.b32  	%r3291, %r3290, %r3268;
	shf.l.wrap.b32 	%r3292, %r3291, %r3291, 1;
	add.s32 	%r3293, %r3292, %r2851;
	add.s32 	%r3294, %r3293, %r2850;
	add.s32 	%r3295, %r3294, %r3288;
	add.s32 	%r2860, %r3295, -1894007588;
	shf.l.wrap.b32 	%r2862, %r2852, %r2852, 30;
	shf.l.wrap.b32 	%r3296, %r2860, %r2860, 5;
	// begin inline asm
	lop3.b32 %r2855, %r2856, %r2862, %r2858, 232;
	// end inline asm
	xor.b32  	%r3297, %r3188, %r3172;
	xor.b32  	%r3298, %r3297, %r3236;
	xor.b32  	%r3299, %r3298, %r3276;
	shf.l.wrap.b32 	%r3300, %r3299, %r3299, 1;
	add.s32 	%r3301, %r3300, %r2855;
	add.s32 	%r3302, %r3301, %r2854;
	add.s32 	%r3303, %r3302, %r3296;
	add.s32 	%r2864, %r3303, -1894007588;
	shf.l.wrap.b32 	%r2866, %r2856, %r2856, 30;
	shf.l.wrap.b32 	%r3304, %r2864, %r2864, 5;
	// begin inline asm
	lop3.b32 %r2859, %r2860, %r2866, %r2862, 232;
	// end inline asm
	xor.b32  	%r3305, %r3180, %r3196;
	xor.b32  	%r3306, %r3305, %r3244;
	xor.b32  	%r3307, %r3306, %r3284;
	shf.l.wrap.b32 	%r3308, %r3307, %r3307, 1;
	add.s32 	%r3309, %r3308, %r2859;
	add.s32 	%r3310, %r3309, %r2858;
	add.s32 	%r3311, %r3310, %r3304;
	add.s32 	%r2868, %r3311, -1894007588;
	shf.l.wrap.b32 	%r2870, %r2860, %r2860, 30;
	shf.l.wrap.b32 	%r3312, %r2868, %r2868, 5;
	// begin inline asm
	lop3.b32 %r2863, %r2864, %r2870, %r2866, 232;
	// end inline asm
	xor.b32  	%r3313, %r3204, %r3188;
	xor.b32  	%r3314, %r3313, %r3252;
	xor.b32  	%r3315, %r3314, %r3292;
	shf.l.wrap.b32 	%r3316, %r3315, %r3315, 1;
	add.s32 	%r3317, %r3316, %r2863;
	add.s32 	%r3318, %r3317, %r2862;
	add.s32 	%r3319, %r3318, %r3312;
	add.s32 	%r2872, %r3319, -1894007588;
	shf.l.wrap.b32 	%r2874, %r2864, %r2864, 30;
	shf.l.wrap.b32 	%r3320, %r2872, %r2872, 5;
	// begin inline asm
	lop3.b32 %r2867, %r2868, %r2874, %r2870, 232;
	// end inline asm
	xor.b32  	%r3321, %r3212, %r3196;
	xor.b32  	%r3322, %r3321, %r3260;
	xor.b32  	%r3323, %r3322, %r3300;
	shf.l.wrap.b32 	%r3324, %r3323, %r3323, 1;
	add.s32 	%r3325, %r3324, %r2867;
	add.s32 	%r3326, %r3325, %r2866;
	add.s32 	%r3327, %r3326, %r3320;
	add.s32 	%r2876, %r3327, -1894007588;
	shf.l.wrap.b32 	%r2878, %r2868, %r2868, 30;
	shf.l.wrap.b32 	%r3328, %r2876, %r2876, 5;
	// begin inline asm
	lop3.b32 %r2871, %r2872, %r2878, %r2874, 232;
	// end inline asm
	xor.b32  	%r3329, %r3204, %r3220;
	xor.b32  	%r3330, %r3329, %r3268;
	xor.b32  	%r3331, %r3330, %r3308;
	shf.l.wrap.b32 	%r3332, %r3331, %r3331, 1;
	add.s32 	%r3333, %r3332, %r2871;
	add.s32 	%r3334, %r3333, %r2870;
	add.s32 	%r3335, %r3334, %r3328;
	add.s32 	%r2880, %r3335, -1894007588;
	shf.l.wrap.b32 	%r2882, %r2872, %r2872, 30;
	shf.l.wrap.b32 	%r3336, %r2880, %r2880, 5;
	// begin inline asm
	lop3.b32 %r2875, %r2876, %r2882, %r2878, 232;
	// end inline asm
	xor.b32  	%r3337, %r3228, %r3212;
	xor.b32  	%r3338, %r3337, %r3276;
	xor.b32  	%r3339, %r3338, %r3316;
	shf.l.wrap.b32 	%r3340, %r3339, %r3339, 1;
	add.s32 	%r3341, %r3340, %r2875;
	add.s32 	%r3342, %r3341, %r2874;
	add.s32 	%r3343, %r3342, %r3336;
	add.s32 	%r2884, %r3343, -1894007588;
	shf.l.wrap.b32 	%r2886, %r2876, %r2876, 30;
	shf.l.wrap.b32 	%r3344, %r2884, %r2884, 5;
	// begin inline asm
	lop3.b32 %r2879, %r2880, %r2886, %r2882, 232;
	// end inline asm
	xor.b32  	%r3345, %r3236, %r3220;
	xor.b32  	%r3346, %r3345, %r3284;
	xor.b32  	%r3347, %r3346, %r3324;
	shf.l.wrap.b32 	%r3348, %r3347, %r3347, 1;
	add.s32 	%r3349, %r3348, %r2879;
	add.s32 	%r3350, %r3349, %r2878;
	add.s32 	%r3351, %r3350, %r3344;
	add.s32 	%r2888, %r3351, -1894007588;
	shf.l.wrap.b32 	%r2890, %r2880, %r2880, 30;
	shf.l.wrap.b32 	%r3352, %r2888, %r2888, 5;
	// begin inline asm
	lop3.b32 %r2883, %r2884, %r2890, %r2886, 232;
	// end inline asm
	xor.b32  	%r3353, %r3228, %r3244;
	xor.b32  	%r3354, %r3353, %r3292;
	xor.b32  	%r3355, %r3354, %r3332;
	shf.l.wrap.b32 	%r3356, %r3355, %r3355, 1;
	add.s32 	%r3357, %r3356, %r2883;
	add.s32 	%r3358, %r3357, %r2882;
	add.s32 	%r3359, %r3358, %r3352;
	add.s32 	%r2892, %r3359, -1894007588;
	shf.l.wrap.b32 	%r2894, %r2884, %r2884, 30;
	shf.l.wrap.b32 	%r3360, %r2892, %r2892, 5;
	// begin inline asm
	lop3.b32 %r2887, %r2888, %r2894, %r2890, 232;
	// end inline asm
	xor.b32  	%r3361, %r3252, %r3236;
	xor.b32  	%r3362, %r3361, %r3300;
	xor.b32  	%r3363, %r3362, %r3340;
	shf.l.wrap.b32 	%r3364, %r3363, %r3363, 1;
	add.s32 	%r3365, %r3364, %r2887;
	add.s32 	%r3366, %r3365, %r2886;
	add.s32 	%r3367, %r3366, %r3360;
	add.s32 	%r2896, %r3367, -1894007588;
	shf.l.wrap.b32 	%r2898, %r2888, %r2888, 30;
	shf.l.wrap.b32 	%r3368, %r2896, %r2896, 5;
	// begin inline asm
	lop3.b32 %r2891, %r2892, %r2898, %r2894, 232;
	// end inline asm
	xor.b32  	%r3369, %r3260, %r3244;
	xor.b32  	%r3370, %r3369, %r3308;
	xor.b32  	%r3371, %r3370, %r3348;
	shf.l.wrap.b32 	%r3372, %r3371, %r3371, 1;
	add.s32 	%r3373, %r3372, %r2891;
	add.s32 	%r3374, %r3373, %r2890;
	add.s32 	%r3375, %r3374, %r3368;
	add.s32 	%r2900, %r3375, -1894007588;
	shf.l.wrap.b32 	%r2902, %r2892, %r2892, 30;
	shf.l.wrap.b32 	%r3376, %r2900, %r2900, 5;
	// begin inline asm
	lop3.b32 %r2895, %r2896, %r2902, %r2898, 232;
	// end inline asm
	xor.b32  	%r3377, %r3252, %r3268;
	xor.b32  	%r3378, %r3377, %r3316;
	xor.b32  	%r3379, %r3378, %r3356;
	shf.l.wrap.b32 	%r3380, %r3379, %r3379, 1;
	add.s32 	%r3381, %r3380, %r2895;
	add.s32 	%r3382, %r3381, %r2894;
	add.s32 	%r3383, %r3382, %r3376;
	add.s32 	%r2904, %r3383, -1894007588;
	shf.l.wrap.b32 	%r2906, %r2896, %r2896, 30;
	shf.l.wrap.b32 	%r3384, %r2904, %r2904, 5;
	// begin inline asm
	lop3.b32 %r2899, %r2900, %r2906, %r2902, 232;
	// end inline asm
	xor.b32  	%r3385, %r3276, %r3260;
	xor.b32  	%r3386, %r3385, %r3324;
	xor.b32  	%r3387, %r3386, %r3364;
	shf.l.wrap.b32 	%r3388, %r3387, %r3387, 1;
	add.s32 	%r3389, %r3388, %r2899;
	add.s32 	%r3390, %r3389, %r2898;
	add.s32 	%r3391, %r3390, %r3384;
	add.s32 	%r2908, %r3391, -1894007588;
	shf.l.wrap.b32 	%r2910, %r2900, %r2900, 30;
	shf.l.wrap.b32 	%r3392, %r2908, %r2908, 5;
	// begin inline asm
	lop3.b32 %r2903, %r2904, %r2910, %r2906, 232;
	// end inline asm
	xor.b32  	%r3393, %r3284, %r3268;
	xor.b32  	%r3394, %r3393, %r3332;
	xor.b32  	%r3395, %r3394, %r3372;
	shf.l.wrap.b32 	%r3396, %r3395, %r3395, 1;
	add.s32 	%r3397, %r3396, %r2903;
	add.s32 	%r3398, %r3397, %r2902;
	add.s32 	%r3399, %r3398, %r3392;
	add.s32 	%r2912, %r3399, -1894007588;
	shf.l.wrap.b32 	%r2914, %r2904, %r2904, 30;
	shf.l.wrap.b32 	%r3400, %r2912, %r2912, 5;
	// begin inline asm
	lop3.b32 %r2907, %r2908, %r2914, %r2910, 232;
	// end inline asm
	xor.b32  	%r3401, %r3276, %r3292;
	xor.b32  	%r3402, %r3401, %r3340;
	xor.b32  	%r3403, %r3402, %r3380;
	shf.l.wrap.b32 	%r3404, %r3403, %r3403, 1;
	add.s32 	%r3405, %r3404, %r2907;
	add.s32 	%r3406, %r3405, %r2906;
	add.s32 	%r3407, %r3406, %r3400;
	add.s32 	%r2916, %r3407, -1894007588;
	shf.l.wrap.b32 	%r2918, %r2908, %r2908, 30;
	shf.l.wrap.b32 	%r3408, %r2916, %r2916, 5;
	// begin inline asm
	lop3.b32 %r2911, %r2912, %r2918, %r2914, 150;
	// end inline asm
	xor.b32  	%r3409, %r3300, %r3284;
	xor.b32  	%r3410, %r3409, %r3348;
	xor.b32  	%r3411, %r3410, %r3388;
	shf.l.wrap.b32 	%r3412, %r3411, %r3411, 1;
	add.s32 	%r3413, %r3412, %r2911;
	add.s32 	%r3414, %r3413, %r2910;
	add.s32 	%r3415, %r3414, %r3408;
	add.s32 	%r2920, %r3415, -899497514;
	shf.l.wrap.b32 	%r2922, %r2912, %r2912, 30;
	shf.l.wrap.b32 	%r3416, %r2920, %r2920, 5;
	// begin inline asm
	lop3.b32 %r2915, %r2916, %r2922, %r2918, 150;
	// end inline asm
	xor.b32  	%r3417, %r3308, %r3292;
	xor.b32  	%r3418, %r3417, %r3356;
	xor.b32  	%r3419, %r3418, %r3396;
	shf.l.wrap.b32 	%r3420, %r3419, %r3419, 1;
	add.s32 	%r3421, %r3420, %r2915;
	add.s32 	%r3422, %r3421, %r2914;
	add.s32 	%r3423, %r3422, %r3416;
	add.s32 	%r2924, %r3423, -899497514;
	shf.l.wrap.b32 	%r2926, %r2916, %r2916, 30;
	shf.l.wrap.b32 	%r3424, %r2924, %r2924, 5;
	// begin inline asm
	lop3.b32 %r2919, %r2920, %r2926, %r2922, 150;
	// end inline asm
	xor.b32  	%r3425, %r3300, %r3316;
	xor.b32  	%r3426, %r3425, %r3364;
	xor.b32  	%r3427, %r3426, %r3404;
	shf.l.wrap.b32 	%r3428, %r3427, %r3427, 1;
	add.s32 	%r3429, %r3428, %r2919;
	add.s32 	%r3430, %r3429, %r2918;
	add.s32 	%r3431, %r3430, %r3424;
	add.s32 	%r2928, %r3431, -899497514;
	shf.l.wrap.b32 	%r2930, %r2920, %r2920, 30;
	shf.l.wrap.b32 	%r3432, %r2928, %r2928, 5;
	// begin inline asm
	lop3.b32 %r2923, %r2924, %r2930, %r2926, 150;
	// end inline asm
	xor.b32  	%r3433, %r3324, %r3308;
	xor.b32  	%r3434, %r3433, %r3372;
	xor.b32  	%r3435, %r3434, %r3412;
	shf.l.wrap.b32 	%r3436, %r3435, %r3435, 1;
	add.s32 	%r3437, %r3436, %r2923;
	add.s32 	%r3438, %r3437, %r2922;
	add.s32 	%r3439, %r3438, %r3432;
	add.s32 	%r2932, %r3439, -899497514;
	shf.l.wrap.b32 	%r2934, %r2924, %r2924, 30;
	shf.l.wrap.b32 	%r3440, %r2932, %r2932, 5;
	// begin inline asm
	lop3.b32 %r2927, %r2928, %r2934, %r2930, 150;
	// end inline asm
	xor.b32  	%r3441, %r3332, %r3316;
	xor.b32  	%r3442, %r3441, %r3380;
	xor.b32  	%r3443, %r3442, %r3420;
	shf.l.wrap.b32 	%r3444, %r3443, %r3443, 1;
	add.s32 	%r3445, %r3444, %r2927;
	add.s32 	%r3446, %r3445, %r2926;
	add.s32 	%r3447, %r3446, %r3440;
	add.s32 	%r2936, %r3447, -899497514;
	shf.l.wrap.b32 	%r2938, %r2928, %r2928, 30;
	shf.l.wrap.b32 	%r3448, %r2936, %r2936, 5;
	// begin inline asm
	lop3.b32 %r2931, %r2932, %r2938, %r2934, 150;
	// end inline asm
	xor.b32  	%r3449, %r3324, %r3340;
	xor.b32  	%r3450, %r3449, %r3388;
	xor.b32  	%r3451, %r3450, %r3428;
	shf.l.wrap.b32 	%r3452, %r3451, %r3451, 1;
	add.s32 	%r3453, %r3452, %r2931;
	add.s32 	%r3454, %r3453, %r2930;
	add.s32 	%r3455, %r3454, %r3448;
	add.s32 	%r2940, %r3455, -899497514;
	shf.l.wrap.b32 	%r2942, %r2932, %r2932, 30;
	shf.l.wrap.b32 	%r3456, %r2940, %r2940, 5;
	// begin inline asm
	lop3.b32 %r2935, %r2936, %r2942, %r2938, 150;
	// end inline asm
	xor.b32  	%r3457, %r3348, %r3332;
	xor.b32  	%r3458, %r3457, %r3396;
	xor.b32  	%r3459, %r3458, %r3436;
	shf.l.wrap.b32 	%r3460, %r3459, %r3459, 1;
	add.s32 	%r3461, %r3460, %r2935;
	add.s32 	%r3462, %r3461, %r2934;
	add.s32 	%r3463, %r3462, %r3456;
	add.s32 	%r2944, %r3463, -899497514;
	shf.l.wrap.b32 	%r2946, %r2936, %r2936, 30;
	shf.l.wrap.b32 	%r3464, %r2944, %r2944, 5;
	// begin inline asm
	lop3.b32 %r2939, %r2940, %r2946, %r2942, 150;
	// end inline asm
	xor.b32  	%r3465, %r3356, %r3340;
	xor.b32  	%r3466, %r3465, %r3404;
	xor.b32  	%r3467, %r3466, %r3444;
	shf.l.wrap.b32 	%r3468, %r3467, %r3467, 1;
	add.s32 	%r3469, %r3468, %r2939;
	add.s32 	%r3470, %r3469, %r2938;
	add.s32 	%r3471, %r3470, %r3464;
	add.s32 	%r2948, %r3471, -899497514;
	shf.l.wrap.b32 	%r2950, %r2940, %r2940, 30;
	shf.l.wrap.b32 	%r3472, %r2948, %r2948, 5;
	// begin inline asm
	lop3.b32 %r2943, %r2944, %r2950, %r2946, 150;
	// end inline asm
	xor.b32  	%r3473, %r3348, %r3364;
	xor.b32  	%r3474, %r3473, %r3412;
	xor.b32  	%r3475, %r3474, %r3452;
	shf.l.wrap.b32 	%r3476, %r3475, %r3475, 1;
	add.s32 	%r3477, %r3476, %r2943;
	add.s32 	%r3478, %r3477, %r2942;
	add.s32 	%r3479, %r3478, %r3472;
	add.s32 	%r2952, %r3479, -899497514;
	shf.l.wrap.b32 	%r2954, %r2944, %r2944, 30;
	shf.l.wrap.b32 	%r3480, %r2952, %r2952, 5;
	// begin inline asm
	lop3.b32 %r2947, %r2948, %r2954, %r2950, 150;
	// end inline asm
	xor.b32  	%r3481, %r3372, %r3356;
	xor.b32  	%r3482, %r3481, %r3420;
	xor.b32  	%r3483, %r3482, %r3460;
	shf.l.wrap.b32 	%r3484, %r3483, %r3483, 1;
	add.s32 	%r3485, %r3484, %r2947;
	add.s32 	%r3486, %r3485, %r2946;
	add.s32 	%r3487, %r3486, %r3480;
	add.s32 	%r2956, %r3487, -899497514;
	shf.l.wrap.b32 	%r2958, %r2948, %r2948, 30;
	shf.l.wrap.b32 	%r3488, %r2956, %r2956, 5;
	// begin inline asm
	lop3.b32 %r2951, %r2952, %r2958, %r2954, 150;
	// end inline asm
	xor.b32  	%r3489, %r3380, %r3364;
	xor.b32  	%r3490, %r3489, %r3428;
	xor.b32  	%r3491, %r3490, %r3468;
	shf.l.wrap.b32 	%r3492, %r3491, %r3491, 1;
	add.s32 	%r3493, %r3492, %r2951;
	add.s32 	%r3494, %r3493, %r2950;
	add.s32 	%r3495, %r3494, %r3488;
	add.s32 	%r2960, %r3495, -899497514;
	shf.l.wrap.b32 	%r2962, %r2952, %r2952, 30;
	shf.l.wrap.b32 	%r3496, %r2960, %r2960, 5;
	// begin inline asm
	lop3.b32 %r2955, %r2956, %r2962, %r2958, 150;
	// end inline asm
	xor.b32  	%r3497, %r3372, %r3388;
	xor.b32  	%r3498, %r3497, %r3436;
	xor.b32  	%r3499, %r3498, %r3476;
	shf.l.wrap.b32 	%r3500, %r3499, %r3499, 1;
	add.s32 	%r3501, %r3500, %r2955;
	add.s32 	%r3502, %r3501, %r2954;
	add.s32 	%r3503, %r3502, %r3496;
	add.s32 	%r2964, %r3503, -899497514;
	shf.l.wrap.b32 	%r2966, %r2956, %r2956, 30;
	shf.l.wrap.b32 	%r3504, %r2964, %r2964, 5;
	// begin inline asm
	lop3.b32 %r2959, %r2960, %r2966, %r2962, 150;
	// end inline asm
	xor.b32  	%r3505, %r3396, %r3380;
	xor.b32  	%r3506, %r3505, %r3444;
	xor.b32  	%r3507, %r3506, %r3484;
	shf.l.wrap.b32 	%r3508, %r3507, %r3507, 1;
	add.s32 	%r3509, %r3508, %r2959;
	add.s32 	%r3510, %r3509, %r2958;
	add.s32 	%r3511, %r3510, %r3504;
	add.s32 	%r2968, %r3511, -899497514;
	shf.l.wrap.b32 	%r2970, %r2960, %r2960, 30;
	shf.l.wrap.b32 	%r3512, %r2968, %r2968, 5;
	// begin inline asm
	lop3.b32 %r2963, %r2964, %r2970, %r2966, 150;
	// end inline asm
	xor.b32  	%r3513, %r3404, %r3388;
	xor.b32  	%r3514, %r3513, %r3452;
	xor.b32  	%r3515, %r3514, %r3492;
	shf.l.wrap.b32 	%r3516, %r3515, %r3515, 1;
	add.s32 	%r3517, %r3516, %r2963;
	add.s32 	%r3518, %r3517, %r2962;
	add.s32 	%r3519, %r3518, %r3512;
	add.s32 	%r2972, %r3519, -899497514;
	shf.l.wrap.b32 	%r2974, %r2964, %r2964, 30;
	shf.l.wrap.b32 	%r3520, %r2972, %r2972, 5;
	// begin inline asm
	lop3.b32 %r2967, %r2968, %r2974, %r2970, 150;
	// end inline asm
	xor.b32  	%r3521, %r3396, %r3412;
	xor.b32  	%r3522, %r3521, %r3460;
	xor.b32  	%r3523, %r3522, %r3500;
	shf.l.wrap.b32 	%r3524, %r3523, %r3523, 1;
	add.s32 	%r3525, %r3524, %r2967;
	add.s32 	%r3526, %r3525, %r2966;
	add.s32 	%r3527, %r3526, %r3520;
	add.s32 	%r2976, %r3527, -899497514;
	shf.l.wrap.b32 	%r2978, %r2968, %r2968, 30;
	shf.l.wrap.b32 	%r3528, %r2976, %r2976, 5;
	// begin inline asm
	lop3.b32 %r2971, %r2972, %r2978, %r2974, 150;
	// end inline asm
	xor.b32  	%r3529, %r3420, %r3404;
	xor.b32  	%r3530, %r3529, %r3468;
	xor.b32  	%r3531, %r3530, %r3508;
	shf.l.wrap.b32 	%r3532, %r3531, %r3531, 1;
	add.s32 	%r3533, %r3532, %r2971;
	add.s32 	%r3534, %r3533, %r2970;
	add.s32 	%r3535, %r3534, %r3528;
	add.s32 	%r2980, %r3535, -899497514;
	shf.l.wrap.b32 	%r2982, %r2972, %r2972, 30;
	shf.l.wrap.b32 	%r3536, %r2980, %r2980, 5;
	// begin inline asm
	lop3.b32 %r2975, %r2976, %r2982, %r2978, 150;
	// end inline asm
	xor.b32  	%r3537, %r3428, %r3412;
	xor.b32  	%r3538, %r3537, %r3476;
	xor.b32  	%r3539, %r3538, %r3516;
	shf.l.wrap.b32 	%r3540, %r3539, %r3539, 1;
	add.s32 	%r3541, %r2975, %r3540;
	add.s32 	%r3542, %r3541, %r2974;
	add.s32 	%r3543, %r3542, %r3536;
	add.s32 	%r2984, %r3543, -899497514;
	shf.l.wrap.b32 	%r2986, %r2976, %r2976, 30;
	shf.l.wrap.b32 	%r3544, %r2984, %r2984, 5;
	// begin inline asm
	lop3.b32 %r2979, %r2980, %r2986, %r2982, 150;
	// end inline asm
	xor.b32  	%r3545, %r3420, %r3436;
	xor.b32  	%r3546, %r3545, %r3484;
	xor.b32  	%r3547, %r3546, %r3524;
	shf.l.wrap.b32 	%r3548, %r3547, %r3547, 1;
	add.s32 	%r3549, %r3548, %r2979;
	add.s32 	%r3550, %r3549, %r2978;
	add.s32 	%r3551, %r3550, %r3544;
	add.s32 	%r2988, %r3551, -899497514;
	shf.l.wrap.b32 	%r2990, %r2980, %r2980, 30;
	shf.l.wrap.b32 	%r3552, %r2988, %r2988, 5;
	// begin inline asm
	lop3.b32 %r2983, %r2984, %r2990, %r2986, 150;
	// end inline asm
	xor.b32  	%r3553, %r3444, %r3428;
	xor.b32  	%r3554, %r3553, %r3492;
	xor.b32  	%r3555, %r3554, %r3532;
	shf.l.wrap.b32 	%r3556, %r3555, %r3555, 1;
	add.s32 	%r3557, %r3556, %r2983;
	add.s32 	%r3558, %r3557, %r2982;
	add.s32 	%r3559, %r3558, %r3552;
	add.s32 	%r3560, %r3559, -899497514;
	shf.l.wrap.b32 	%r2989, %r2984, %r2984, 30;
	shf.l.wrap.b32 	%r3561, %r3560, %r3560, 5;
	// begin inline asm
	lop3.b32 %r2987, %r2988, %r2989, %r2990, 150;
	// end inline asm
	xor.b32  	%r3562, %r3452, %r3436;
	xor.b32  	%r3563, %r3562, %r3500;
	xor.b32  	%r3564, %r3563, %r3540;
	shf.l.wrap.b32 	%r3565, %r3564, %r3564, 1;
	shf.l.wrap.b32 	%r3566, %r2988, %r2988, 30;
	add.s32 	%r3567, %r2987, %r3565;
	add.s32 	%r3568, %r3567, %r2676;
	add.s32 	%r3569, %r3568, %r2986;
	add.s32 	%r3570, %r3569, %r3561;
	add.s32 	%r3571, %r3570, -899497514;
	st.local.u32 	[%rd16+4], %r3571;
	add.s32 	%r3572, %r3560, %r2672;
	st.local.u32 	[%rd16+8], %r3572;
	add.s32 	%r3573, %r3566, %r2673;
	st.local.u32 	[%rd16+12], %r3573;
	add.s32 	%r3574, %r2989, %r2674;
	st.local.u32 	[%rd16+16], %r3574;
	add.s32 	%r3575, %r2990, %r2993;
	st.local.u32 	[%rd16+20], %r3575;
	add.s64 	%rd207, %rd207, 64;
	add.s64 	%rd205, %rd205, 64;
	add.s32 	%r5860, %r5860, -64;
	setp.gt.u32 	%p28, %r5860, 63;
	@%p28 bra 	$L__BB3_31;

$L__BB3_35:
	setp.eq.s32 	%p29, %r5860, 0;
	@%p29 bra 	$L__BB3_41;

	cvt.u64.u32 	%rd149, %r5841;
	add.s64 	%rd152, %rd16, %rd149;
	add.s64 	%rd212, %rd152, 24;
	and.b32  	%r5862, %r5860, 3;
	setp.eq.s32 	%p30, %r5862, 0;
	mov.u32 	%r5863, %r5860;
	@%p30 bra 	$L__BB3_39;

	mov.u64 	%rd208, %rd212;
	mov.u64 	%rd209, %rd207;
	mov.u32 	%r5863, %r5860;

$L__BB3_38:
	.pragma "nounroll";
	add.s32 	%r5863, %r5863, -1;
	add.s64 	%rd207, %rd209, 1;
	ld.local.u8 	%rs121, [%rd209];
	add.s64 	%rd212, %rd208, 1;
	st.local.u8 	[%rd208], %rs121;
	add.s32 	%r5862, %r5862, -1;
	setp.ne.s32 	%p31, %r5862, 0;
	mov.u64 	%rd208, %rd212;
	mov.u64 	%rd209, %rd207;
	@%p31 bra 	$L__BB3_38;

$L__BB3_39:
	add.s32 	%r3576, %r5860, -1;
	setp.lt.u32 	%p32, %r3576, 3;
	@%p32 bra 	$L__BB3_41;

$L__BB3_40:
	ld.local.u8 	%rs122, [%rd207];
	st.local.u8 	[%rd212], %rs122;
	ld.local.u8 	%rs123, [%rd207+1];
	st.local.u8 	[%rd212+1], %rs123;
	ld.local.u8 	%rs124, [%rd207+2];
	st.local.u8 	[%rd212+2], %rs124;
	add.s64 	%rd74, %rd207, 4;
	ld.local.u8 	%rs125, [%rd207+3];
	add.s64 	%rd75, %rd212, 4;
	st.local.u8 	[%rd212+3], %rs125;
	add.s32 	%r5863, %r5863, -4;
	setp.ne.s32 	%p33, %r5863, 0;
	mov.u64 	%rd212, %rd75;
	mov.u64 	%rd207, %rd74;
	@%p33 bra 	$L__BB3_40;

$L__BB3_41:
	add.u64 	%rd177, %SP, 0;
	add.u64 	%rd222, %SP, 0;
	cvta.to.local.u64 	%rd224, %rd222;
	ld.local.u32 	%r3578, [%rd16];
	and.b32  	%r5869, %r3578, 63;
	mov.u32 	%r3579, 64;
	sub.s32 	%r156, %r3579, %r5869;
	add.s32 	%r3580, %r3578, 8;
	mov.u32 	%r5888, 8;
	st.local.u32 	[%rd16], %r3580;
	setp.eq.s32 	%p34, %r5869, 0;
	setp.gt.u32 	%p35, %r156, 8;
	or.pred  	%p36, %p34, %p35;
	@%p36 bra 	$L__BB3_49;

	setp.eq.s32 	%p37, %r156, 0;
	@%p37 bra 	$L__BB3_48;

	cvt.u64.u32 	%rd157, %r5869;
	add.s64 	%rd158, %rd16, %rd157;
	add.s64 	%rd218, %rd158, 24;
	add.u64 	%rd159, %SP, 0;
	add.u64 	%rd219, %SPL, 0;
	and.b32  	%r5866, %r156, 3;
	setp.eq.s32 	%p38, %r5866, 0;
	mov.u32 	%r5867, %r156;
	@%p38 bra 	$L__BB3_46;

	cvta.to.local.u64 	%rd215, %rd159;
	mov.u64 	%rd214, %rd218;
	mov.u32 	%r5867, %r156;

$L__BB3_45:
	.pragma "nounroll";
	add.s32 	%r5867, %r5867, -1;
	add.s64 	%rd219, %rd215, 1;
	ld.local.u8 	%rs126, [%rd215];
	add.s64 	%rd218, %rd214, 1;
	st.local.u8 	[%rd214], %rs126;
	add.s32 	%r5866, %r5866, -1;
	setp.ne.s32 	%p39, %r5866, 0;
	mov.u64 	%rd214, %rd218;
	mov.u64 	%rd215, %rd219;
	@%p39 bra 	$L__BB3_45;

$L__BB3_46:
	xor.b32  	%r3581, %r5869, 63;
	setp.lt.u32 	%p40, %r3581, 3;
	@%p40 bra 	$L__BB3_48;

$L__BB3_47:
	ld.local.u8 	%rs127, [%rd219];
	st.local.u8 	[%rd218], %rs127;
	ld.local.u8 	%rs128, [%rd219+1];
	st.local.u8 	[%rd218+1], %rs128;
	ld.local.u8 	%rs129, [%rd219+2];
	st.local.u8 	[%rd218+2], %rs129;
	add.s64 	%rd89, %rd219, 4;
	ld.local.u8 	%rs130, [%rd219+3];
	add.s64 	%rd90, %rd218, 4;
	st.local.u8 	[%rd218+3], %rs130;
	add.s32 	%r5867, %r5867, -4;
	setp.ne.s32 	%p41, %r5867, 0;
	mov.u64 	%rd218, %rd90;
	mov.u64 	%rd219, %rd89;
	@%p41 bra 	$L__BB3_47;

$L__BB3_48:
	ld.local.u32 	%r3903, [%rd16+24];
	shf.l.wrap.b32 	%r3904, %r3903, %r3903, 16;
	shl.b32 	%r3905, %r3904, 8;
	and.b32  	%r3906, %r3905, -16711936;
	mov.u32 	%r3907, 8;
	shr.u32 	%r3908, %r3904, 8;
	and.b32  	%r3909, %r3908, 16711935;
	or.b32  	%r3910, %r3906, %r3909;
	ld.local.u32 	%r3911, [%rd16+28];
	shf.l.wrap.b32 	%r3912, %r3911, %r3911, 16;
	shl.b32 	%r3913, %r3912, 8;
	and.b32  	%r3914, %r3913, -16711936;
	shr.u32 	%r3915, %r3912, 8;
	and.b32  	%r3916, %r3915, 16711935;
	or.b32  	%r3917, %r3914, %r3916;
	ld.local.u32 	%r3918, [%rd16+32];
	shf.l.wrap.b32 	%r3919, %r3918, %r3918, 16;
	shl.b32 	%r3920, %r3919, 8;
	and.b32  	%r3921, %r3920, -16711936;
	shr.u32 	%r3922, %r3919, 8;
	and.b32  	%r3923, %r3922, 16711935;
	or.b32  	%r3924, %r3921, %r3923;
	ld.local.u32 	%r3925, [%rd16+36];
	shf.l.wrap.b32 	%r3926, %r3925, %r3925, 16;
	shl.b32 	%r3927, %r3926, 8;
	and.b32  	%r3928, %r3927, -16711936;
	shr.u32 	%r3929, %r3926, 8;
	and.b32  	%r3930, %r3929, 16711935;
	or.b32  	%r3931, %r3928, %r3930;
	ld.local.u32 	%r3932, [%rd16+40];
	shf.l.wrap.b32 	%r3933, %r3932, %r3932, 16;
	shl.b32 	%r3934, %r3933, 8;
	and.b32  	%r3935, %r3934, -16711936;
	shr.u32 	%r3936, %r3933, 8;
	and.b32  	%r3937, %r3936, 16711935;
	or.b32  	%r3938, %r3935, %r3937;
	ld.local.u32 	%r3939, [%rd16+44];
	shf.l.wrap.b32 	%r3940, %r3939, %r3939, 16;
	shl.b32 	%r3941, %r3940, 8;
	and.b32  	%r3942, %r3941, -16711936;
	shr.u32 	%r3943, %r3940, 8;
	and.b32  	%r3944, %r3943, 16711935;
	or.b32  	%r3945, %r3942, %r3944;
	ld.local.u32 	%r3946, [%rd16+48];
	shf.l.wrap.b32 	%r3947, %r3946, %r3946, 16;
	shl.b32 	%r3948, %r3947, 8;
	and.b32  	%r3949, %r3948, -16711936;
	shr.u32 	%r3950, %r3947, 8;
	and.b32  	%r3951, %r3950, 16711935;
	or.b32  	%r3952, %r3949, %r3951;
	ld.local.u32 	%r3953, [%rd16+52];
	shf.l.wrap.b32 	%r3954, %r3953, %r3953, 16;
	shl.b32 	%r3955, %r3954, 8;
	and.b32  	%r3956, %r3955, -16711936;
	shr.u32 	%r3957, %r3954, 8;
	and.b32  	%r3958, %r3957, 16711935;
	or.b32  	%r3959, %r3956, %r3958;
	ld.local.u32 	%r3960, [%rd16+56];
	shf.l.wrap.b32 	%r3961, %r3960, %r3960, 16;
	shl.b32 	%r3962, %r3961, 8;
	and.b32  	%r3963, %r3962, -16711936;
	shr.u32 	%r3964, %r3961, 8;
	and.b32  	%r3965, %r3964, 16711935;
	or.b32  	%r3966, %r3963, %r3965;
	ld.local.u32 	%r3967, [%rd16+60];
	shf.l.wrap.b32 	%r3968, %r3967, %r3967, 16;
	shl.b32 	%r3969, %r3968, 8;
	and.b32  	%r3970, %r3969, -16711936;
	shr.u32 	%r3971, %r3968, 8;
	and.b32  	%r3972, %r3971, 16711935;
	or.b32  	%r3973, %r3970, %r3972;
	ld.local.u32 	%r3974, [%rd16+64];
	shf.l.wrap.b32 	%r3975, %r3974, %r3974, 16;
	shl.b32 	%r3976, %r3975, 8;
	and.b32  	%r3977, %r3976, -16711936;
	shr.u32 	%r3978, %r3975, 8;
	and.b32  	%r3979, %r3978, 16711935;
	or.b32  	%r3980, %r3977, %r3979;
	ld.local.u32 	%r3981, [%rd16+68];
	shf.l.wrap.b32 	%r3982, %r3981, %r3981, 16;
	shl.b32 	%r3983, %r3982, 8;
	and.b32  	%r3984, %r3983, -16711936;
	shr.u32 	%r3985, %r3982, 8;
	and.b32  	%r3986, %r3985, 16711935;
	or.b32  	%r3987, %r3984, %r3986;
	ld.local.u32 	%r3988, [%rd16+72];
	shf.l.wrap.b32 	%r3989, %r3988, %r3988, 16;
	shl.b32 	%r3990, %r3989, 8;
	and.b32  	%r3991, %r3990, -16711936;
	shr.u32 	%r3992, %r3989, 8;
	and.b32  	%r3993, %r3992, 16711935;
	or.b32  	%r3994, %r3991, %r3993;
	ld.local.u32 	%r3995, [%rd16+76];
	shf.l.wrap.b32 	%r3996, %r3995, %r3995, 16;
	shl.b32 	%r3997, %r3996, 8;
	and.b32  	%r3998, %r3997, -16711936;
	shr.u32 	%r3999, %r3996, 8;
	and.b32  	%r4000, %r3999, 16711935;
	or.b32  	%r4001, %r3998, %r4000;
	ld.local.u32 	%r4002, [%rd16+80];
	shf.l.wrap.b32 	%r4003, %r4002, %r4002, 16;
	shl.b32 	%r4004, %r4003, 8;
	and.b32  	%r4005, %r4004, -16711936;
	shr.u32 	%r4006, %r4003, 8;
	and.b32  	%r4007, %r4006, 16711935;
	or.b32  	%r4008, %r4005, %r4007;
	ld.local.u32 	%r4009, [%rd16+84];
	shf.l.wrap.b32 	%r4010, %r4009, %r4009, 16;
	shl.b32 	%r4011, %r4010, 8;
	and.b32  	%r4012, %r4011, -16711936;
	shr.u32 	%r4013, %r4010, 8;
	and.b32  	%r4014, %r4013, 16711935;
	or.b32  	%r4015, %r4012, %r4014;
	ld.local.u32 	%r3587, [%rd16+4];
	shf.l.wrap.b32 	%r4016, %r3587, %r3587, 5;
	ld.local.u32 	%r3585, [%rd16+16];
	ld.local.u32 	%r3584, [%rd16+12];
	ld.local.u32 	%r3583, [%rd16+8];
	// begin inline asm
	lop3.b32 %r3582, %r3583, %r3584, %r3585, 202;
	// end inline asm
	add.s32 	%r4017, %r3910, %r4016;
	ld.local.u32 	%r4018, [%rd16+20];
	add.s32 	%r4019, %r4017, %r4018;
	add.s32 	%r4020, %r4019, %r3582;
	add.s32 	%r3591, %r4020, 1518500249;
	shf.l.wrap.b32 	%r3593, %r3583, %r3583, 30;
	shf.l.wrap.b32 	%r4021, %r3591, %r3591, 5;
	// begin inline asm
	lop3.b32 %r3586, %r3587, %r3593, %r3584, 202;
	// end inline asm
	add.s32 	%r4022, %r3917, %r3585;
	add.s32 	%r4023, %r4022, %r3586;
	add.s32 	%r4024, %r4023, %r4021;
	add.s32 	%r3595, %r4024, 1518500249;
	shf.l.wrap.b32 	%r3597, %r3587, %r3587, 30;
	shf.l.wrap.b32 	%r4025, %r3595, %r3595, 5;
	// begin inline asm
	lop3.b32 %r3590, %r3591, %r3597, %r3593, 202;
	// end inline asm
	add.s32 	%r4026, %r3924, %r3584;
	add.s32 	%r4027, %r4026, %r3590;
	add.s32 	%r4028, %r4027, %r4025;
	add.s32 	%r3599, %r4028, 1518500249;
	shf.l.wrap.b32 	%r3601, %r3591, %r3591, 30;
	shf.l.wrap.b32 	%r4029, %r3599, %r3599, 5;
	// begin inline asm
	lop3.b32 %r3594, %r3595, %r3601, %r3597, 202;
	// end inline asm
	add.s32 	%r4030, %r3931, %r3593;
	add.s32 	%r4031, %r4030, %r3594;
	add.s32 	%r4032, %r4031, %r4029;
	add.s32 	%r3603, %r4032, 1518500249;
	shf.l.wrap.b32 	%r3605, %r3595, %r3595, 30;
	shf.l.wrap.b32 	%r4033, %r3603, %r3603, 5;
	// begin inline asm
	lop3.b32 %r3598, %r3599, %r3605, %r3601, 202;
	// end inline asm
	add.s32 	%r4034, %r3938, %r3597;
	add.s32 	%r4035, %r4034, %r3598;
	add.s32 	%r4036, %r4035, %r4033;
	add.s32 	%r3607, %r4036, 1518500249;
	shf.l.wrap.b32 	%r3609, %r3599, %r3599, 30;
	shf.l.wrap.b32 	%r4037, %r3607, %r3607, 5;
	// begin inline asm
	lop3.b32 %r3602, %r3603, %r3609, %r3605, 202;
	// end inline asm
	add.s32 	%r4038, %r3945, %r3602;
	add.s32 	%r4039, %r4038, %r3601;
	add.s32 	%r4040, %r4039, %r4037;
	add.s32 	%r3611, %r4040, 1518500249;
	shf.l.wrap.b32 	%r3613, %r3603, %r3603, 30;
	shf.l.wrap.b32 	%r4041, %r3611, %r3611, 5;
	// begin inline asm
	lop3.b32 %r3606, %r3607, %r3613, %r3609, 202;
	// end inline asm
	add.s32 	%r4042, %r3952, %r3606;
	add.s32 	%r4043, %r4042, %r3605;
	add.s32 	%r4044, %r4043, %r4041;
	add.s32 	%r3615, %r4044, 1518500249;
	shf.l.wrap.b32 	%r3617, %r3607, %r3607, 30;
	shf.l.wrap.b32 	%r4045, %r3615, %r3615, 5;
	// begin inline asm
	lop3.b32 %r3610, %r3611, %r3617, %r3613, 202;
	// end inline asm
	add.s32 	%r4046, %r3959, %r3610;
	add.s32 	%r4047, %r4046, %r3609;
	add.s32 	%r4048, %r4047, %r4045;
	add.s32 	%r3619, %r4048, 1518500249;
	shf.l.wrap.b32 	%r3621, %r3611, %r3611, 30;
	shf.l.wrap.b32 	%r4049, %r3619, %r3619, 5;
	// begin inline asm
	lop3.b32 %r3614, %r3615, %r3621, %r3617, 202;
	// end inline asm
	add.s32 	%r4050, %r3966, %r3614;
	add.s32 	%r4051, %r4050, %r3613;
	add.s32 	%r4052, %r4051, %r4049;
	add.s32 	%r3623, %r4052, 1518500249;
	shf.l.wrap.b32 	%r3625, %r3615, %r3615, 30;
	shf.l.wrap.b32 	%r4053, %r3623, %r3623, 5;
	// begin inline asm
	lop3.b32 %r3618, %r3619, %r3625, %r3621, 202;
	// end inline asm
	add.s32 	%r4054, %r3973, %r3618;
	add.s32 	%r4055, %r4054, %r3617;
	add.s32 	%r4056, %r4055, %r4053;
	add.s32 	%r3627, %r4056, 1518500249;
	shf.l.wrap.b32 	%r3629, %r3619, %r3619, 30;
	shf.l.wrap.b32 	%r4057, %r3627, %r3627, 5;
	// begin inline asm
	lop3.b32 %r3622, %r3623, %r3629, %r3625, 202;
	// end inline asm
	add.s32 	%r4058, %r3980, %r3622;
	add.s32 	%r4059, %r4058, %r3621;
	add.s32 	%r4060, %r4059, %r4057;
	add.s32 	%r3631, %r4060, 1518500249;
	shf.l.wrap.b32 	%r3633, %r3623, %r3623, 30;
	shf.l.wrap.b32 	%r4061, %r3631, %r3631, 5;
	// begin inline asm
	lop3.b32 %r3626, %r3627, %r3633, %r3629, 202;
	// end inline asm
	add.s32 	%r4062, %r3987, %r3626;
	add.s32 	%r4063, %r4062, %r3625;
	add.s32 	%r4064, %r4063, %r4061;
	add.s32 	%r3635, %r4064, 1518500249;
	shf.l.wrap.b32 	%r3637, %r3627, %r3627, 30;
	shf.l.wrap.b32 	%r4065, %r3635, %r3635, 5;
	// begin inline asm
	lop3.b32 %r3630, %r3631, %r3637, %r3633, 202;
	// end inline asm
	add.s32 	%r4066, %r3994, %r3630;
	add.s32 	%r4067, %r4066, %r3629;
	add.s32 	%r4068, %r4067, %r4065;
	add.s32 	%r3639, %r4068, 1518500249;
	shf.l.wrap.b32 	%r3641, %r3631, %r3631, 30;
	shf.l.wrap.b32 	%r4069, %r3639, %r3639, 5;
	// begin inline asm
	lop3.b32 %r3634, %r3635, %r3641, %r3637, 202;
	// end inline asm
	add.s32 	%r4070, %r4001, %r3634;
	add.s32 	%r4071, %r4070, %r3633;
	add.s32 	%r4072, %r4071, %r4069;
	add.s32 	%r3643, %r4072, 1518500249;
	shf.l.wrap.b32 	%r3645, %r3635, %r3635, 30;
	shf.l.wrap.b32 	%r4073, %r3643, %r3643, 5;
	// begin inline asm
	lop3.b32 %r3638, %r3639, %r3645, %r3641, 202;
	// end inline asm
	add.s32 	%r4074, %r4008, %r3638;
	add.s32 	%r4075, %r4074, %r3637;
	add.s32 	%r4076, %r4075, %r4073;
	add.s32 	%r3647, %r4076, 1518500249;
	shf.l.wrap.b32 	%r3649, %r3639, %r3639, 30;
	shf.l.wrap.b32 	%r4077, %r3647, %r3647, 5;
	// begin inline asm
	lop3.b32 %r3642, %r3643, %r3649, %r3645, 202;
	// end inline asm
	add.s32 	%r4078, %r4015, %r3642;
	add.s32 	%r4079, %r4078, %r3641;
	add.s32 	%r4080, %r4079, %r4077;
	add.s32 	%r3651, %r4080, 1518500249;
	shf.l.wrap.b32 	%r3653, %r3643, %r3643, 30;
	shf.l.wrap.b32 	%r4081, %r3651, %r3651, 5;
	// begin inline asm
	lop3.b32 %r3646, %r3647, %r3653, %r3649, 202;
	// end inline asm
	xor.b32  	%r4082, %r3924, %r3910;
	xor.b32  	%r4083, %r4082, %r3966;
	xor.b32  	%r4084, %r4083, %r4001;
	shf.l.wrap.b32 	%r4085, %r4084, %r4084, 1;
	add.s32 	%r4086, %r4085, %r3646;
	add.s32 	%r4087, %r4086, %r3645;
	add.s32 	%r4088, %r4087, %r4081;
	add.s32 	%r3655, %r4088, 1518500249;
	shf.l.wrap.b32 	%r3657, %r3647, %r3647, 30;
	shf.l.wrap.b32 	%r4089, %r3655, %r3655, 5;
	// begin inline asm
	lop3.b32 %r3650, %r3651, %r3657, %r3653, 202;
	// end inline asm
	xor.b32  	%r4090, %r3931, %r3917;
	xor.b32  	%r4091, %r4090, %r3973;
	xor.b32  	%r4092, %r4091, %r4008;
	shf.l.wrap.b32 	%r4093, %r4092, %r4092, 1;
	add.s32 	%r4094, %r4093, %r3650;
	add.s32 	%r4095, %r4094, %r3649;
	add.s32 	%r4096, %r4095, %r4089;
	add.s32 	%r3659, %r4096, 1518500249;
	shf.l.wrap.b32 	%r3661, %r3651, %r3651, 30;
	shf.l.wrap.b32 	%r4097, %r3659, %r3659, 5;
	// begin inline asm
	lop3.b32 %r3654, %r3655, %r3661, %r3657, 202;
	// end inline asm
	xor.b32  	%r4098, %r3938, %r3924;
	xor.b32  	%r4099, %r4098, %r3980;
	xor.b32  	%r4100, %r4099, %r4015;
	shf.l.wrap.b32 	%r4101, %r4100, %r4100, 1;
	add.s32 	%r4102, %r4101, %r3654;
	add.s32 	%r4103, %r4102, %r3653;
	add.s32 	%r4104, %r4103, %r4097;
	add.s32 	%r3663, %r4104, 1518500249;
	shf.l.wrap.b32 	%r3665, %r3655, %r3655, 30;
	shf.l.wrap.b32 	%r4105, %r3663, %r3663, 5;
	// begin inline asm
	lop3.b32 %r3658, %r3659, %r3665, %r3661, 202;
	// end inline asm
	xor.b32  	%r4106, %r3945, %r3931;
	xor.b32  	%r4107, %r4106, %r3987;
	xor.b32  	%r4108, %r4107, %r4085;
	shf.l.wrap.b32 	%r4109, %r4108, %r4108, 1;
	add.s32 	%r4110, %r4109, %r3658;
	add.s32 	%r4111, %r4110, %r3657;
	add.s32 	%r4112, %r4111, %r4105;
	add.s32 	%r3667, %r4112, 1518500249;
	shf.l.wrap.b32 	%r3669, %r3659, %r3659, 30;
	shf.l.wrap.b32 	%r4113, %r3667, %r3667, 5;
	// begin inline asm
	lop3.b32 %r3662, %r3663, %r3669, %r3665, 150;
	// end inline asm
	xor.b32  	%r4114, %r3952, %r3938;
	xor.b32  	%r4115, %r4114, %r3994;
	xor.b32  	%r4116, %r4115, %r4093;
	shf.l.wrap.b32 	%r4117, %r4116, %r4116, 1;
	add.s32 	%r4118, %r4117, %r3662;
	add.s32 	%r4119, %r4118, %r3661;
	add.s32 	%r4120, %r4119, %r4113;
	add.s32 	%r3671, %r4120, 1859775393;
	shf.l.wrap.b32 	%r3673, %r3663, %r3663, 30;
	shf.l.wrap.b32 	%r4121, %r3671, %r3671, 5;
	// begin inline asm
	lop3.b32 %r3666, %r3667, %r3673, %r3669, 150;
	// end inline asm
	xor.b32  	%r4122, %r3959, %r3945;
	xor.b32  	%r4123, %r4122, %r4001;
	xor.b32  	%r4124, %r4123, %r4101;
	shf.l.wrap.b32 	%r4125, %r4124, %r4124, 1;
	add.s32 	%r4126, %r4125, %r3666;
	add.s32 	%r4127, %r4126, %r3665;
	add.s32 	%r4128, %r4127, %r4121;
	add.s32 	%r3675, %r4128, 1859775393;
	shf.l.wrap.b32 	%r3677, %r3667, %r3667, 30;
	shf.l.wrap.b32 	%r4129, %r3675, %r3675, 5;
	// begin inline asm
	lop3.b32 %r3670, %r3671, %r3677, %r3673, 150;
	// end inline asm
	xor.b32  	%r4130, %r3966, %r3952;
	xor.b32  	%r4131, %r4130, %r4008;
	xor.b32  	%r4132, %r4131, %r4109;
	shf.l.wrap.b32 	%r4133, %r4132, %r4132, 1;
	add.s32 	%r4134, %r4133, %r3670;
	add.s32 	%r4135, %r4134, %r3669;
	add.s32 	%r4136, %r4135, %r4129;
	add.s32 	%r3679, %r4136, 1859775393;
	shf.l.wrap.b32 	%r3681, %r3671, %r3671, 30;
	shf.l.wrap.b32 	%r4137, %r3679, %r3679, 5;
	// begin inline asm
	lop3.b32 %r3674, %r3675, %r3681, %r3677, 150;
	// end inline asm
	xor.b32  	%r4138, %r3973, %r3959;
	xor.b32  	%r4139, %r4138, %r4015;
	xor.b32  	%r4140, %r4139, %r4117;
	shf.l.wrap.b32 	%r4141, %r4140, %r4140, 1;
	add.s32 	%r4142, %r4141, %r3674;
	add.s32 	%r4143, %r4142, %r3673;
	add.s32 	%r4144, %r4143, %r4137;
	add.s32 	%r3683, %r4144, 1859775393;
	shf.l.wrap.b32 	%r3685, %r3675, %r3675, 30;
	shf.l.wrap.b32 	%r4145, %r3683, %r3683, 5;
	// begin inline asm
	lop3.b32 %r3678, %r3679, %r3685, %r3681, 150;
	// end inline asm
	xor.b32  	%r4146, %r3980, %r3966;
	xor.b32  	%r4147, %r4146, %r4085;
	xor.b32  	%r4148, %r4147, %r4125;
	shf.l.wrap.b32 	%r4149, %r4148, %r4148, 1;
	add.s32 	%r4150, %r4149, %r3678;
	add.s32 	%r4151, %r4150, %r3677;
	add.s32 	%r4152, %r4151, %r4145;
	add.s32 	%r3687, %r4152, 1859775393;
	shf.l.wrap.b32 	%r3689, %r3679, %r3679, 30;
	shf.l.wrap.b32 	%r4153, %r3687, %r3687, 5;
	// begin inline asm
	lop3.b32 %r3682, %r3683, %r3689, %r3685, 150;
	// end inline asm
	xor.b32  	%r4154, %r3987, %r3973;
	xor.b32  	%r4155, %r4154, %r4093;
	xor.b32  	%r4156, %r4155, %r4133;
	shf.l.wrap.b32 	%r4157, %r4156, %r4156, 1;
	add.s32 	%r4158, %r4157, %r3682;
	add.s32 	%r4159, %r4158, %r3681;
	add.s32 	%r4160, %r4159, %r4153;
	add.s32 	%r3691, %r4160, 1859775393;
	shf.l.wrap.b32 	%r3693, %r3683, %r3683, 30;
	shf.l.wrap.b32 	%r4161, %r3691, %r3691, 5;
	// begin inline asm
	lop3.b32 %r3686, %r3687, %r3693, %r3689, 150;
	// end inline asm
	xor.b32  	%r4162, %r3994, %r3980;
	xor.b32  	%r4163, %r4162, %r4101;
	xor.b32  	%r4164, %r4163, %r4141;
	shf.l.wrap.b32 	%r4165, %r4164, %r4164, 1;
	add.s32 	%r4166, %r4165, %r3686;
	add.s32 	%r4167, %r4166, %r3685;
	add.s32 	%r4168, %r4167, %r4161;
	add.s32 	%r3695, %r4168, 1859775393;
	shf.l.wrap.b32 	%r3697, %r3687, %r3687, 30;
	shf.l.wrap.b32 	%r4169, %r3695, %r3695, 5;
	// begin inline asm
	lop3.b32 %r3690, %r3691, %r3697, %r3693, 150;
	// end inline asm
	xor.b32  	%r4170, %r4001, %r3987;
	xor.b32  	%r4171, %r4170, %r4109;
	xor.b32  	%r4172, %r4171, %r4149;
	shf.l.wrap.b32 	%r4173, %r4172, %r4172, 1;
	add.s32 	%r4174, %r4173, %r3690;
	add.s32 	%r4175, %r4174, %r3689;
	add.s32 	%r4176, %r4175, %r4169;
	add.s32 	%r3699, %r4176, 1859775393;
	shf.l.wrap.b32 	%r3701, %r3691, %r3691, 30;
	shf.l.wrap.b32 	%r4177, %r3699, %r3699, 5;
	// begin inline asm
	lop3.b32 %r3694, %r3695, %r3701, %r3697, 150;
	// end inline asm
	xor.b32  	%r4178, %r4008, %r3994;
	xor.b32  	%r4179, %r4178, %r4117;
	xor.b32  	%r4180, %r4179, %r4157;
	shf.l.wrap.b32 	%r4181, %r4180, %r4180, 1;
	add.s32 	%r4182, %r4181, %r3694;
	add.s32 	%r4183, %r4182, %r3693;
	add.s32 	%r4184, %r4183, %r4177;
	add.s32 	%r3703, %r4184, 1859775393;
	shf.l.wrap.b32 	%r3705, %r3695, %r3695, 30;
	shf.l.wrap.b32 	%r4185, %r3703, %r3703, 5;
	// begin inline asm
	lop3.b32 %r3698, %r3699, %r3705, %r3701, 150;
	// end inline asm
	xor.b32  	%r4186, %r4015, %r4001;
	xor.b32  	%r4187, %r4186, %r4125;
	xor.b32  	%r4188, %r4187, %r4165;
	shf.l.wrap.b32 	%r4189, %r4188, %r4188, 1;
	add.s32 	%r4190, %r4189, %r3698;
	add.s32 	%r4191, %r4190, %r3697;
	add.s32 	%r4192, %r4191, %r4185;
	add.s32 	%r3707, %r4192, 1859775393;
	shf.l.wrap.b32 	%r3709, %r3699, %r3699, 30;
	shf.l.wrap.b32 	%r4193, %r3707, %r3707, 5;
	// begin inline asm
	lop3.b32 %r3702, %r3703, %r3709, %r3705, 150;
	// end inline asm
	xor.b32  	%r4194, %r4085, %r4008;
	xor.b32  	%r4195, %r4194, %r4133;
	xor.b32  	%r4196, %r4195, %r4173;
	shf.l.wrap.b32 	%r4197, %r4196, %r4196, 1;
	add.s32 	%r4198, %r4197, %r3702;
	add.s32 	%r4199, %r4198, %r3701;
	add.s32 	%r4200, %r4199, %r4193;
	add.s32 	%r3711, %r4200, 1859775393;
	shf.l.wrap.b32 	%r3713, %r3703, %r3703, 30;
	shf.l.wrap.b32 	%r4201, %r3711, %r3711, 5;
	// begin inline asm
	lop3.b32 %r3706, %r3707, %r3713, %r3709, 150;
	// end inline asm
	xor.b32  	%r4202, %r4093, %r4015;
	xor.b32  	%r4203, %r4202, %r4141;
	xor.b32  	%r4204, %r4203, %r4181;
	shf.l.wrap.b32 	%r4205, %r4204, %r4204, 1;
	add.s32 	%r4206, %r4205, %r3706;
	add.s32 	%r4207, %r4206, %r3705;
	add.s32 	%r4208, %r4207, %r4201;
	add.s32 	%r3715, %r4208, 1859775393;
	shf.l.wrap.b32 	%r3717, %r3707, %r3707, 30;
	shf.l.wrap.b32 	%r4209, %r3715, %r3715, 5;
	// begin inline asm
	lop3.b32 %r3710, %r3711, %r3717, %r3713, 150;
	// end inline asm
	xor.b32  	%r4210, %r4101, %r4085;
	xor.b32  	%r4211, %r4210, %r4149;
	xor.b32  	%r4212, %r4211, %r4189;
	shf.l.wrap.b32 	%r4213, %r4212, %r4212, 1;
	add.s32 	%r4214, %r4213, %r3710;
	add.s32 	%r4215, %r4214, %r3709;
	add.s32 	%r4216, %r4215, %r4209;
	add.s32 	%r3719, %r4216, 1859775393;
	shf.l.wrap.b32 	%r3721, %r3711, %r3711, 30;
	shf.l.wrap.b32 	%r4217, %r3719, %r3719, 5;
	// begin inline asm
	lop3.b32 %r3714, %r3715, %r3721, %r3717, 150;
	// end inline asm
	xor.b32  	%r4218, %r4109, %r4093;
	xor.b32  	%r4219, %r4218, %r4157;
	xor.b32  	%r4220, %r4219, %r4197;
	shf.l.wrap.b32 	%r4221, %r4220, %r4220, 1;
	add.s32 	%r4222, %r4221, %r3714;
	add.s32 	%r4223, %r4222, %r3713;
	add.s32 	%r4224, %r4223, %r4217;
	add.s32 	%r3723, %r4224, 1859775393;
	shf.l.wrap.b32 	%r3725, %r3715, %r3715, 30;
	shf.l.wrap.b32 	%r4225, %r3723, %r3723, 5;
	// begin inline asm
	lop3.b32 %r3718, %r3719, %r3725, %r3721, 150;
	// end inline asm
	xor.b32  	%r4226, %r4117, %r4101;
	xor.b32  	%r4227, %r4226, %r4165;
	xor.b32  	%r4228, %r4227, %r4205;
	shf.l.wrap.b32 	%r4229, %r4228, %r4228, 1;
	add.s32 	%r4230, %r4229, %r3718;
	add.s32 	%r4231, %r4230, %r3717;
	add.s32 	%r4232, %r4231, %r4225;
	add.s32 	%r3727, %r4232, 1859775393;
	shf.l.wrap.b32 	%r3729, %r3719, %r3719, 30;
	shf.l.wrap.b32 	%r4233, %r3727, %r3727, 5;
	// begin inline asm
	lop3.b32 %r3722, %r3723, %r3729, %r3725, 150;
	// end inline asm
	xor.b32  	%r4234, %r4125, %r4109;
	xor.b32  	%r4235, %r4234, %r4173;
	xor.b32  	%r4236, %r4235, %r4213;
	shf.l.wrap.b32 	%r4237, %r4236, %r4236, 1;
	add.s32 	%r4238, %r4237, %r3722;
	add.s32 	%r4239, %r4238, %r3721;
	add.s32 	%r4240, %r4239, %r4233;
	add.s32 	%r3731, %r4240, 1859775393;
	shf.l.wrap.b32 	%r3733, %r3723, %r3723, 30;
	shf.l.wrap.b32 	%r4241, %r3731, %r3731, 5;
	// begin inline asm
	lop3.b32 %r3726, %r3727, %r3733, %r3729, 150;
	// end inline asm
	xor.b32  	%r4242, %r4133, %r4117;
	xor.b32  	%r4243, %r4242, %r4181;
	xor.b32  	%r4244, %r4243, %r4221;
	shf.l.wrap.b32 	%r4245, %r4244, %r4244, 1;
	add.s32 	%r4246, %r4245, %r3726;
	add.s32 	%r4247, %r4246, %r3725;
	add.s32 	%r4248, %r4247, %r4241;
	add.s32 	%r3735, %r4248, 1859775393;
	shf.l.wrap.b32 	%r3737, %r3727, %r3727, 30;
	shf.l.wrap.b32 	%r4249, %r3735, %r3735, 5;
	// begin inline asm
	lop3.b32 %r3730, %r3731, %r3737, %r3733, 150;
	// end inline asm
	xor.b32  	%r4250, %r4141, %r4125;
	xor.b32  	%r4251, %r4250, %r4189;
	xor.b32  	%r4252, %r4251, %r4229;
	shf.l.wrap.b32 	%r4253, %r4252, %r4252, 1;
	add.s32 	%r4254, %r4253, %r3730;
	add.s32 	%r4255, %r4254, %r3729;
	add.s32 	%r4256, %r4255, %r4249;
	add.s32 	%r3739, %r4256, 1859775393;
	shf.l.wrap.b32 	%r3741, %r3731, %r3731, 30;
	shf.l.wrap.b32 	%r4257, %r3739, %r3739, 5;
	// begin inline asm
	lop3.b32 %r3734, %r3735, %r3741, %r3737, 150;
	// end inline asm
	xor.b32  	%r4258, %r4149, %r4133;
	xor.b32  	%r4259, %r4258, %r4197;
	xor.b32  	%r4260, %r4259, %r4237;
	shf.l.wrap.b32 	%r4261, %r4260, %r4260, 1;
	add.s32 	%r4262, %r4261, %r3734;
	add.s32 	%r4263, %r4262, %r3733;
	add.s32 	%r4264, %r4263, %r4257;
	add.s32 	%r3743, %r4264, 1859775393;
	shf.l.wrap.b32 	%r3745, %r3735, %r3735, 30;
	shf.l.wrap.b32 	%r4265, %r3743, %r3743, 5;
	// begin inline asm
	lop3.b32 %r3738, %r3739, %r3745, %r3741, 150;
	// end inline asm
	xor.b32  	%r4266, %r4157, %r4141;
	xor.b32  	%r4267, %r4266, %r4205;
	xor.b32  	%r4268, %r4267, %r4245;
	shf.l.wrap.b32 	%r4269, %r4268, %r4268, 1;
	add.s32 	%r4270, %r4269, %r3738;
	add.s32 	%r4271, %r4270, %r3737;
	add.s32 	%r4272, %r4271, %r4265;
	add.s32 	%r3747, %r4272, 1859775393;
	shf.l.wrap.b32 	%r3749, %r3739, %r3739, 30;
	shf.l.wrap.b32 	%r4273, %r3747, %r3747, 5;
	// begin inline asm
	lop3.b32 %r3742, %r3743, %r3749, %r3745, 232;
	// end inline asm
	xor.b32  	%r4274, %r4165, %r4149;
	xor.b32  	%r4275, %r4274, %r4213;
	xor.b32  	%r4276, %r4275, %r4253;
	shf.l.wrap.b32 	%r4277, %r4276, %r4276, 1;
	add.s32 	%r4278, %r4277, %r3742;
	add.s32 	%r4279, %r4278, %r3741;
	add.s32 	%r4280, %r4279, %r4273;
	add.s32 	%r3751, %r4280, -1894007588;
	shf.l.wrap.b32 	%r3753, %r3743, %r3743, 30;
	shf.l.wrap.b32 	%r4281, %r3751, %r3751, 5;
	// begin inline asm
	lop3.b32 %r3746, %r3747, %r3753, %r3749, 232;
	// end inline asm
	xor.b32  	%r4282, %r4173, %r4157;
	xor.b32  	%r4283, %r4282, %r4221;
	xor.b32  	%r4284, %r4283, %r4261;
	shf.l.wrap.b32 	%r4285, %r4284, %r4284, 1;
	add.s32 	%r4286, %r4285, %r3746;
	add.s32 	%r4287, %r4286, %r3745;
	add.s32 	%r4288, %r4287, %r4281;
	add.s32 	%r3755, %r4288, -1894007588;
	shf.l.wrap.b32 	%r3757, %r3747, %r3747, 30;
	shf.l.wrap.b32 	%r4289, %r3755, %r3755, 5;
	// begin inline asm
	lop3.b32 %r3750, %r3751, %r3757, %r3753, 232;
	// end inline asm
	xor.b32  	%r4290, %r4181, %r4165;
	xor.b32  	%r4291, %r4290, %r4229;
	xor.b32  	%r4292, %r4291, %r4269;
	shf.l.wrap.b32 	%r4293, %r4292, %r4292, 1;
	add.s32 	%r4294, %r4293, %r3750;
	add.s32 	%r4295, %r4294, %r3749;
	add.s32 	%r4296, %r4295, %r4289;
	add.s32 	%r3759, %r4296, -1894007588;
	shf.l.wrap.b32 	%r3761, %r3751, %r3751, 30;
	shf.l.wrap.b32 	%r4297, %r3759, %r3759, 5;
	// begin inline asm
	lop3.b32 %r3754, %r3755, %r3761, %r3757, 232;
	// end inline asm
	xor.b32  	%r4298, %r4189, %r4173;
	xor.b32  	%r4299, %r4298, %r4237;
	xor.b32  	%r4300, %r4299, %r4277;
	shf.l.wrap.b32 	%r4301, %r4300, %r4300, 1;
	add.s32 	%r4302, %r4301, %r3754;
	add.s32 	%r4303, %r4302, %r3753;
	add.s32 	%r4304, %r4303, %r4297;
	add.s32 	%r3763, %r4304, -1894007588;
	shf.l.wrap.b32 	%r3765, %r3755, %r3755, 30;
	shf.l.wrap.b32 	%r4305, %r3763, %r3763, 5;
	// begin inline asm
	lop3.b32 %r3758, %r3759, %r3765, %r3761, 232;
	// end inline asm
	xor.b32  	%r4306, %r4197, %r4181;
	xor.b32  	%r4307, %r4306, %r4245;
	xor.b32  	%r4308, %r4307, %r4285;
	shf.l.wrap.b32 	%r4309, %r4308, %r4308, 1;
	add.s32 	%r4310, %r4309, %r3758;
	add.s32 	%r4311, %r4310, %r3757;
	add.s32 	%r4312, %r4311, %r4305;
	add.s32 	%r3767, %r4312, -1894007588;
	shf.l.wrap.b32 	%r3769, %r3759, %r3759, 30;
	shf.l.wrap.b32 	%r4313, %r3767, %r3767, 5;
	// begin inline asm
	lop3.b32 %r3762, %r3763, %r3769, %r3765, 232;
	// end inline asm
	xor.b32  	%r4314, %r4205, %r4189;
	xor.b32  	%r4315, %r4314, %r4253;
	xor.b32  	%r4316, %r4315, %r4293;
	shf.l.wrap.b32 	%r4317, %r4316, %r4316, 1;
	add.s32 	%r4318, %r4317, %r3762;
	add.s32 	%r4319, %r4318, %r3761;
	add.s32 	%r4320, %r4319, %r4313;
	add.s32 	%r3771, %r4320, -1894007588;
	shf.l.wrap.b32 	%r3773, %r3763, %r3763, 30;
	shf.l.wrap.b32 	%r4321, %r3771, %r3771, 5;
	// begin inline asm
	lop3.b32 %r3766, %r3767, %r3773, %r3769, 232;
	// end inline asm
	xor.b32  	%r4322, %r4213, %r4197;
	xor.b32  	%r4323, %r4322, %r4261;
	xor.b32  	%r4324, %r4323, %r4301;
	shf.l.wrap.b32 	%r4325, %r4324, %r4324, 1;
	add.s32 	%r4326, %r4325, %r3766;
	add.s32 	%r4327, %r4326, %r3765;
	add.s32 	%r4328, %r4327, %r4321;
	add.s32 	%r3775, %r4328, -1894007588;
	shf.l.wrap.b32 	%r3777, %r3767, %r3767, 30;
	shf.l.wrap.b32 	%r4329, %r3775, %r3775, 5;
	// begin inline asm
	lop3.b32 %r3770, %r3771, %r3777, %r3773, 232;
	// end inline asm
	xor.b32  	%r4330, %r4221, %r4205;
	xor.b32  	%r4331, %r4330, %r4269;
	xor.b32  	%r4332, %r4331, %r4309;
	shf.l.wrap.b32 	%r4333, %r4332, %r4332, 1;
	add.s32 	%r4334, %r4333, %r3770;
	add.s32 	%r4335, %r4334, %r3769;
	add.s32 	%r4336, %r4335, %r4329;
	add.s32 	%r3779, %r4336, -1894007588;
	shf.l.wrap.b32 	%r3781, %r3771, %r3771, 30;
	shf.l.wrap.b32 	%r4337, %r3779, %r3779, 5;
	// begin inline asm
	lop3.b32 %r3774, %r3775, %r3781, %r3777, 232;
	// end inline asm
	xor.b32  	%r4338, %r4229, %r4213;
	xor.b32  	%r4339, %r4338, %r4277;
	xor.b32  	%r4340, %r4339, %r4317;
	shf.l.wrap.b32 	%r4341, %r4340, %r4340, 1;
	add.s32 	%r4342, %r4341, %r3774;
	add.s32 	%r4343, %r4342, %r3773;
	add.s32 	%r4344, %r4343, %r4337;
	add.s32 	%r3783, %r4344, -1894007588;
	shf.l.wrap.b32 	%r3785, %r3775, %r3775, 30;
	shf.l.wrap.b32 	%r4345, %r3783, %r3783, 5;
	// begin inline asm
	lop3.b32 %r3778, %r3779, %r3785, %r3781, 232;
	// end inline asm
	xor.b32  	%r4346, %r4237, %r4221;
	xor.b32  	%r4347, %r4346, %r4285;
	xor.b32  	%r4348, %r4347, %r4325;
	shf.l.wrap.b32 	%r4349, %r4348, %r4348, 1;
	add.s32 	%r4350, %r4349, %r3778;
	add.s32 	%r4351, %r4350, %r3777;
	add.s32 	%r4352, %r4351, %r4345;
	add.s32 	%r3787, %r4352, -1894007588;
	shf.l.wrap.b32 	%r3789, %r3779, %r3779, 30;
	shf.l.wrap.b32 	%r4353, %r3787, %r3787, 5;
	// begin inline asm
	lop3.b32 %r3782, %r3783, %r3789, %r3785, 232;
	// end inline asm
	xor.b32  	%r4354, %r4245, %r4229;
	xor.b32  	%r4355, %r4354, %r4293;
	xor.b32  	%r4356, %r4355, %r4333;
	shf.l.wrap.b32 	%r4357, %r4356, %r4356, 1;
	add.s32 	%r4358, %r4357, %r3782;
	add.s32 	%r4359, %r4358, %r3781;
	add.s32 	%r4360, %r4359, %r4353;
	add.s32 	%r3791, %r4360, -1894007588;
	shf.l.wrap.b32 	%r3793, %r3783, %r3783, 30;
	shf.l.wrap.b32 	%r4361, %r3791, %r3791, 5;
	// begin inline asm
	lop3.b32 %r3786, %r3787, %r3793, %r3789, 232;
	// end inline asm
	xor.b32  	%r4362, %r4253, %r4237;
	xor.b32  	%r4363, %r4362, %r4301;
	xor.b32  	%r4364, %r4363, %r4341;
	shf.l.wrap.b32 	%r4365, %r4364, %r4364, 1;
	add.s32 	%r4366, %r4365, %r3786;
	add.s32 	%r4367, %r4366, %r3785;
	add.s32 	%r4368, %r4367, %r4361;
	add.s32 	%r3795, %r4368, -1894007588;
	shf.l.wrap.b32 	%r3797, %r3787, %r3787, 30;
	shf.l.wrap.b32 	%r4369, %r3795, %r3795, 5;
	// begin inline asm
	lop3.b32 %r3790, %r3791, %r3797, %r3793, 232;
	// end inline asm
	xor.b32  	%r4370, %r4261, %r4245;
	xor.b32  	%r4371, %r4370, %r4309;
	xor.b32  	%r4372, %r4371, %r4349;
	shf.l.wrap.b32 	%r4373, %r4372, %r4372, 1;
	add.s32 	%r4374, %r4373, %r3790;
	add.s32 	%r4375, %r4374, %r3789;
	add.s32 	%r4376, %r4375, %r4369;
	add.s32 	%r3799, %r4376, -1894007588;
	shf.l.wrap.b32 	%r3801, %r3791, %r3791, 30;
	shf.l.wrap.b32 	%r4377, %r3799, %r3799, 5;
	// begin inline asm
	lop3.b32 %r3794, %r3795, %r3801, %r3797, 232;
	// end inline asm
	xor.b32  	%r4378, %r4269, %r4253;
	xor.b32  	%r4379, %r4378, %r4317;
	xor.b32  	%r4380, %r4379, %r4357;
	shf.l.wrap.b32 	%r4381, %r4380, %r4380, 1;
	add.s32 	%r4382, %r4381, %r3794;
	add.s32 	%r4383, %r4382, %r3793;
	add.s32 	%r4384, %r4383, %r4377;
	add.s32 	%r3803, %r4384, -1894007588;
	shf.l.wrap.b32 	%r3805, %r3795, %r3795, 30;
	shf.l.wrap.b32 	%r4385, %r3803, %r3803, 5;
	// begin inline asm
	lop3.b32 %r3798, %r3799, %r3805, %r3801, 232;
	// end inline asm
	xor.b32  	%r4386, %r4277, %r4261;
	xor.b32  	%r4387, %r4386, %r4325;
	xor.b32  	%r4388, %r4387, %r4365;
	shf.l.wrap.b32 	%r4389, %r4388, %r4388, 1;
	add.s32 	%r4390, %r4389, %r3798;
	add.s32 	%r4391, %r4390, %r3797;
	add.s32 	%r4392, %r4391, %r4385;
	add.s32 	%r3807, %r4392, -1894007588;
	shf.l.wrap.b32 	%r3809, %r3799, %r3799, 30;
	shf.l.wrap.b32 	%r4393, %r3807, %r3807, 5;
	// begin inline asm
	lop3.b32 %r3802, %r3803, %r3809, %r3805, 232;
	// end inline asm
	xor.b32  	%r4394, %r4285, %r4269;
	xor.b32  	%r4395, %r4394, %r4333;
	xor.b32  	%r4396, %r4395, %r4373;
	shf.l.wrap.b32 	%r4397, %r4396, %r4396, 1;
	add.s32 	%r4398, %r4397, %r3802;
	add.s32 	%r4399, %r4398, %r3801;
	add.s32 	%r4400, %r4399, %r4393;
	add.s32 	%r3811, %r4400, -1894007588;
	shf.l.wrap.b32 	%r3813, %r3803, %r3803, 30;
	shf.l.wrap.b32 	%r4401, %r3811, %r3811, 5;
	// begin inline asm
	lop3.b32 %r3806, %r3807, %r3813, %r3809, 232;
	// end inline asm
	xor.b32  	%r4402, %r4293, %r4277;
	xor.b32  	%r4403, %r4402, %r4341;
	xor.b32  	%r4404, %r4403, %r4381;
	shf.l.wrap.b32 	%r4405, %r4404, %r4404, 1;
	add.s32 	%r4406, %r4405, %r3806;
	add.s32 	%r4407, %r4406, %r3805;
	add.s32 	%r4408, %r4407, %r4401;
	add.s32 	%r3815, %r4408, -1894007588;
	shf.l.wrap.b32 	%r3817, %r3807, %r3807, 30;
	shf.l.wrap.b32 	%r4409, %r3815, %r3815, 5;
	// begin inline asm
	lop3.b32 %r3810, %r3811, %r3817, %r3813, 232;
	// end inline asm
	xor.b32  	%r4410, %r4301, %r4285;
	xor.b32  	%r4411, %r4410, %r4349;
	xor.b32  	%r4412, %r4411, %r4389;
	shf.l.wrap.b32 	%r4413, %r4412, %r4412, 1;
	add.s32 	%r4414, %r4413, %r3810;
	add.s32 	%r4415, %r4414, %r3809;
	add.s32 	%r4416, %r4415, %r4409;
	add.s32 	%r3819, %r4416, -1894007588;
	shf.l.wrap.b32 	%r3821, %r3811, %r3811, 30;
	shf.l.wrap.b32 	%r4417, %r3819, %r3819, 5;
	// begin inline asm
	lop3.b32 %r3814, %r3815, %r3821, %r3817, 232;
	// end inline asm
	xor.b32  	%r4418, %r4309, %r4293;
	xor.b32  	%r4419, %r4418, %r4357;
	xor.b32  	%r4420, %r4419, %r4397;
	shf.l.wrap.b32 	%r4421, %r4420, %r4420, 1;
	add.s32 	%r4422, %r4421, %r3814;
	add.s32 	%r4423, %r4422, %r3813;
	add.s32 	%r4424, %r4423, %r4417;
	add.s32 	%r3823, %r4424, -1894007588;
	shf.l.wrap.b32 	%r3825, %r3815, %r3815, 30;
	shf.l.wrap.b32 	%r4425, %r3823, %r3823, 5;
	// begin inline asm
	lop3.b32 %r3818, %r3819, %r3825, %r3821, 232;
	// end inline asm
	xor.b32  	%r4426, %r4317, %r4301;
	xor.b32  	%r4427, %r4426, %r4365;
	xor.b32  	%r4428, %r4427, %r4405;
	shf.l.wrap.b32 	%r4429, %r4428, %r4428, 1;
	add.s32 	%r4430, %r4429, %r3818;
	add.s32 	%r4431, %r4430, %r3817;
	add.s32 	%r4432, %r4431, %r4425;
	add.s32 	%r3827, %r4432, -1894007588;
	shf.l.wrap.b32 	%r3829, %r3819, %r3819, 30;
	shf.l.wrap.b32 	%r4433, %r3827, %r3827, 5;
	// begin inline asm
	lop3.b32 %r3822, %r3823, %r3829, %r3825, 150;
	// end inline asm
	xor.b32  	%r4434, %r4325, %r4309;
	xor.b32  	%r4435, %r4434, %r4373;
	xor.b32  	%r4436, %r4435, %r4413;
	shf.l.wrap.b32 	%r4437, %r4436, %r4436, 1;
	add.s32 	%r4438, %r4437, %r3822;
	add.s32 	%r4439, %r4438, %r3821;
	add.s32 	%r4440, %r4439, %r4433;
	add.s32 	%r3831, %r4440, -899497514;
	shf.l.wrap.b32 	%r3833, %r3823, %r3823, 30;
	shf.l.wrap.b32 	%r4441, %r3831, %r3831, 5;
	// begin inline asm
	lop3.b32 %r3826, %r3827, %r3833, %r3829, 150;
	// end inline asm
	xor.b32  	%r4442, %r4333, %r4317;
	xor.b32  	%r4443, %r4442, %r4381;
	xor.b32  	%r4444, %r4443, %r4421;
	shf.l.wrap.b32 	%r4445, %r4444, %r4444, 1;
	add.s32 	%r4446, %r4445, %r3826;
	add.s32 	%r4447, %r4446, %r3825;
	add.s32 	%r4448, %r4447, %r4441;
	add.s32 	%r3835, %r4448, -899497514;
	shf.l.wrap.b32 	%r3837, %r3827, %r3827, 30;
	shf.l.wrap.b32 	%r4449, %r3835, %r3835, 5;
	// begin inline asm
	lop3.b32 %r3830, %r3831, %r3837, %r3833, 150;
	// end inline asm
	xor.b32  	%r4450, %r4341, %r4325;
	xor.b32  	%r4451, %r4450, %r4389;
	xor.b32  	%r4452, %r4451, %r4429;
	shf.l.wrap.b32 	%r4453, %r4452, %r4452, 1;
	add.s32 	%r4454, %r4453, %r3830;
	add.s32 	%r4455, %r4454, %r3829;
	add.s32 	%r4456, %r4455, %r4449;
	add.s32 	%r3839, %r4456, -899497514;
	shf.l.wrap.b32 	%r3841, %r3831, %r3831, 30;
	shf.l.wrap.b32 	%r4457, %r3839, %r3839, 5;
	// begin inline asm
	lop3.b32 %r3834, %r3835, %r3841, %r3837, 150;
	// end inline asm
	xor.b32  	%r4458, %r4349, %r4333;
	xor.b32  	%r4459, %r4458, %r4397;
	xor.b32  	%r4460, %r4459, %r4437;
	shf.l.wrap.b32 	%r4461, %r4460, %r4460, 1;
	add.s32 	%r4462, %r4461, %r3834;
	add.s32 	%r4463, %r4462, %r3833;
	add.s32 	%r4464, %r4463, %r4457;
	add.s32 	%r3843, %r4464, -899497514;
	shf.l.wrap.b32 	%r3845, %r3835, %r3835, 30;
	shf.l.wrap.b32 	%r4465, %r3843, %r3843, 5;
	// begin inline asm
	lop3.b32 %r3838, %r3839, %r3845, %r3841, 150;
	// end inline asm
	xor.b32  	%r4466, %r4357, %r4341;
	xor.b32  	%r4467, %r4466, %r4405;
	xor.b32  	%r4468, %r4467, %r4445;
	shf.l.wrap.b32 	%r4469, %r4468, %r4468, 1;
	add.s32 	%r4470, %r3838, %r4469;
	add.s32 	%r4471, %r4470, %r3837;
	add.s32 	%r4472, %r4471, %r4465;
	add.s32 	%r3847, %r4472, -899497514;
	shf.l.wrap.b32 	%r3849, %r3839, %r3839, 30;
	shf.l.wrap.b32 	%r4473, %r3847, %r3847, 5;
	// begin inline asm
	lop3.b32 %r3842, %r3843, %r3849, %r3845, 150;
	// end inline asm
	xor.b32  	%r4474, %r4365, %r4349;
	xor.b32  	%r4475, %r4474, %r4413;
	xor.b32  	%r4476, %r4475, %r4453;
	shf.l.wrap.b32 	%r4477, %r4476, %r4476, 1;
	add.s32 	%r4478, %r3842, %r4477;
	add.s32 	%r4479, %r4478, %r3841;
	add.s32 	%r4480, %r4479, %r4473;
	add.s32 	%r3851, %r4480, -899497514;
	shf.l.wrap.b32 	%r3853, %r3843, %r3843, 30;
	shf.l.wrap.b32 	%r4481, %r3851, %r3851, 5;
	// begin inline asm
	lop3.b32 %r3846, %r3847, %r3853, %r3849, 150;
	// end inline asm
	xor.b32  	%r4482, %r4373, %r4357;
	xor.b32  	%r4483, %r4482, %r4421;
	xor.b32  	%r4484, %r4483, %r4461;
	shf.l.wrap.b32 	%r4485, %r4484, %r4484, 1;
	add.s32 	%r4486, %r3846, %r4485;
	add.s32 	%r4487, %r4486, %r3845;
	add.s32 	%r4488, %r4487, %r4481;
	add.s32 	%r3855, %r4488, -899497514;
	shf.l.wrap.b32 	%r3857, %r3847, %r3847, 30;
	shf.l.wrap.b32 	%r4489, %r3855, %r3855, 5;
	// begin inline asm
	lop3.b32 %r3850, %r3851, %r3857, %r3853, 150;
	// end inline asm
	xor.b32  	%r4490, %r4381, %r4365;
	xor.b32  	%r4491, %r4490, %r4429;
	xor.b32  	%r4492, %r4491, %r4469;
	shf.l.wrap.b32 	%r4493, %r4492, %r4492, 1;
	add.s32 	%r4494, %r3850, %r4493;
	add.s32 	%r4495, %r4494, %r3849;
	add.s32 	%r4496, %r4495, %r4489;
	add.s32 	%r3859, %r4496, -899497514;
	shf.l.wrap.b32 	%r3861, %r3851, %r3851, 30;
	shf.l.wrap.b32 	%r4497, %r3859, %r3859, 5;
	// begin inline asm
	lop3.b32 %r3854, %r3855, %r3861, %r3857, 150;
	// end inline asm
	xor.b32  	%r4498, %r4389, %r4373;
	xor.b32  	%r4499, %r4498, %r4437;
	xor.b32  	%r4500, %r4499, %r4477;
	shf.l.wrap.b32 	%r4501, %r4500, %r4500, 1;
	add.s32 	%r4502, %r3854, %r4501;
	add.s32 	%r4503, %r4502, %r3853;
	add.s32 	%r4504, %r4503, %r4497;
	add.s32 	%r3863, %r4504, -899497514;
	shf.l.wrap.b32 	%r3865, %r3855, %r3855, 30;
	shf.l.wrap.b32 	%r4505, %r3863, %r3863, 5;
	// begin inline asm
	lop3.b32 %r3858, %r3859, %r3865, %r3861, 150;
	// end inline asm
	xor.b32  	%r4506, %r4397, %r4381;
	xor.b32  	%r4507, %r4506, %r4445;
	xor.b32  	%r4508, %r4507, %r4485;
	shf.l.wrap.b32 	%r4509, %r4508, %r4508, 1;
	add.s32 	%r4510, %r3858, %r4509;
	add.s32 	%r4511, %r4510, %r3857;
	add.s32 	%r4512, %r4511, %r4505;
	add.s32 	%r3867, %r4512, -899497514;
	shf.l.wrap.b32 	%r3869, %r3859, %r3859, 30;
	shf.l.wrap.b32 	%r4513, %r3867, %r3867, 5;
	// begin inline asm
	lop3.b32 %r3862, %r3863, %r3869, %r3865, 150;
	// end inline asm
	xor.b32  	%r4514, %r4405, %r4389;
	xor.b32  	%r4515, %r4514, %r4453;
	xor.b32  	%r4516, %r4515, %r4493;
	shf.l.wrap.b32 	%r4517, %r4516, %r4516, 1;
	add.s32 	%r4518, %r3862, %r4517;
	add.s32 	%r4519, %r4518, %r3861;
	add.s32 	%r4520, %r4519, %r4513;
	add.s32 	%r3871, %r4520, -899497514;
	shf.l.wrap.b32 	%r3873, %r3863, %r3863, 30;
	shf.l.wrap.b32 	%r4521, %r3871, %r3871, 5;
	// begin inline asm
	lop3.b32 %r3866, %r3867, %r3873, %r3869, 150;
	// end inline asm
	xor.b32  	%r4522, %r4413, %r4397;
	xor.b32  	%r4523, %r4522, %r4461;
	xor.b32  	%r4524, %r4523, %r4501;
	shf.l.wrap.b32 	%r4525, %r4524, %r4524, 1;
	add.s32 	%r4526, %r3866, %r4525;
	add.s32 	%r4527, %r4526, %r3865;
	add.s32 	%r4528, %r4527, %r4521;
	add.s32 	%r3875, %r4528, -899497514;
	shf.l.wrap.b32 	%r3877, %r3867, %r3867, 30;
	shf.l.wrap.b32 	%r4529, %r3875, %r3875, 5;
	// begin inline asm
	lop3.b32 %r3870, %r3871, %r3877, %r3873, 150;
	// end inline asm
	xor.b32  	%r4530, %r4421, %r4405;
	xor.b32  	%r4531, %r4530, %r4469;
	xor.b32  	%r4532, %r4531, %r4509;
	shf.l.wrap.b32 	%r4533, %r4532, %r4532, 1;
	add.s32 	%r4534, %r3870, %r4533;
	add.s32 	%r4535, %r4534, %r3869;
	add.s32 	%r4536, %r4535, %r4529;
	add.s32 	%r3879, %r4536, -899497514;
	shf.l.wrap.b32 	%r3881, %r3871, %r3871, 30;
	shf.l.wrap.b32 	%r4537, %r3879, %r3879, 5;
	// begin inline asm
	lop3.b32 %r3874, %r3875, %r3881, %r3877, 150;
	// end inline asm
	xor.b32  	%r4538, %r4429, %r4413;
	xor.b32  	%r4539, %r4538, %r4477;
	xor.b32  	%r4540, %r4539, %r4517;
	shf.l.wrap.b32 	%r4541, %r4540, %r4540, 1;
	add.s32 	%r4542, %r3874, %r4541;
	add.s32 	%r4543, %r4542, %r3873;
	add.s32 	%r4544, %r4543, %r4537;
	add.s32 	%r3883, %r4544, -899497514;
	shf.l.wrap.b32 	%r3885, %r3875, %r3875, 30;
	shf.l.wrap.b32 	%r4545, %r3883, %r3883, 5;
	// begin inline asm
	lop3.b32 %r3878, %r3879, %r3885, %r3881, 150;
	// end inline asm
	xor.b32  	%r4546, %r4437, %r4421;
	xor.b32  	%r4547, %r4546, %r4485;
	xor.b32  	%r4548, %r4547, %r4525;
	shf.l.wrap.b32 	%r4549, %r4548, %r4548, 1;
	add.s32 	%r4550, %r3878, %r4549;
	add.s32 	%r4551, %r4550, %r3877;
	add.s32 	%r4552, %r4551, %r4545;
	add.s32 	%r3887, %r4552, -899497514;
	shf.l.wrap.b32 	%r3889, %r3879, %r3879, 30;
	shf.l.wrap.b32 	%r4553, %r3887, %r3887, 5;
	// begin inline asm
	lop3.b32 %r3882, %r3883, %r3889, %r3885, 150;
	// end inline asm
	xor.b32  	%r4554, %r4445, %r4429;
	xor.b32  	%r4555, %r4554, %r4493;
	xor.b32  	%r4556, %r4555, %r4533;
	shf.l.wrap.b32 	%r4557, %r4556, %r4556, 1;
	add.s32 	%r4558, %r3882, %r4557;
	add.s32 	%r4559, %r4558, %r3881;
	add.s32 	%r4560, %r4559, %r4553;
	add.s32 	%r3891, %r4560, -899497514;
	shf.l.wrap.b32 	%r3893, %r3883, %r3883, 30;
	shf.l.wrap.b32 	%r4561, %r3891, %r3891, 5;
	// begin inline asm
	lop3.b32 %r3886, %r3887, %r3893, %r3889, 150;
	// end inline asm
	xor.b32  	%r4562, %r4453, %r4437;
	xor.b32  	%r4563, %r4562, %r4501;
	xor.b32  	%r4564, %r4563, %r4541;
	shf.l.wrap.b32 	%r4565, %r4564, %r4564, 1;
	add.s32 	%r4566, %r3886, %r4565;
	add.s32 	%r4567, %r4566, %r3885;
	add.s32 	%r4568, %r4567, %r4561;
	add.s32 	%r3895, %r4568, -899497514;
	shf.l.wrap.b32 	%r3897, %r3887, %r3887, 30;
	shf.l.wrap.b32 	%r4569, %r3895, %r3895, 5;
	// begin inline asm
	lop3.b32 %r3890, %r3891, %r3897, %r3893, 150;
	// end inline asm
	xor.b32  	%r4570, %r4461, %r4445;
	xor.b32  	%r4571, %r4570, %r4509;
	xor.b32  	%r4572, %r4571, %r4549;
	shf.l.wrap.b32 	%r4573, %r4572, %r4572, 1;
	add.s32 	%r4574, %r3890, %r4573;
	add.s32 	%r4575, %r4574, %r3889;
	add.s32 	%r4576, %r4575, %r4569;
	add.s32 	%r3899, %r4576, -899497514;
	shf.l.wrap.b32 	%r3901, %r3891, %r3891, 30;
	shf.l.wrap.b32 	%r4577, %r3899, %r3899, 5;
	// begin inline asm
	lop3.b32 %r3894, %r3895, %r3901, %r3897, 150;
	// end inline asm
	xor.b32  	%r4578, %r4469, %r4453;
	xor.b32  	%r4579, %r4578, %r4517;
	xor.b32  	%r4580, %r4579, %r4557;
	shf.l.wrap.b32 	%r4581, %r4580, %r4580, 1;
	add.s32 	%r4582, %r3894, %r4581;
	add.s32 	%r4583, %r4582, %r3893;
	add.s32 	%r4584, %r4583, %r4577;
	add.s32 	%r4585, %r4584, -899497514;
	shf.l.wrap.b32 	%r3900, %r3895, %r3895, 30;
	shf.l.wrap.b32 	%r4586, %r4585, %r4585, 5;
	// begin inline asm
	lop3.b32 %r3898, %r3899, %r3900, %r3901, 150;
	// end inline asm
	xor.b32  	%r4587, %r4477, %r4461;
	xor.b32  	%r4588, %r4587, %r4525;
	xor.b32  	%r4589, %r4588, %r4565;
	shf.l.wrap.b32 	%r4590, %r4589, %r4589, 1;
	shf.l.wrap.b32 	%r4591, %r3899, %r3899, 30;
	add.s32 	%r4592, %r3898, %r3587;
	add.s32 	%r4593, %r4592, %r4590;
	add.s32 	%r4594, %r4593, %r3897;
	add.s32 	%r4595, %r4594, %r4586;
	add.s32 	%r4596, %r4595, -899497514;
	st.local.u32 	[%rd16+4], %r4596;
	add.s32 	%r4597, %r4585, %r3583;
	st.local.u32 	[%rd16+8], %r4597;
	add.s32 	%r4598, %r4591, %r3584;
	st.local.u32 	[%rd16+12], %r4598;
	add.s32 	%r4599, %r3900, %r3585;
	st.local.u32 	[%rd16+16], %r4599;
	add.s32 	%r4600, %r3901, %r4018;
	st.local.u32 	[%rd16+20], %r4600;
	add.u64 	%rd163, %SP, 0;
	add.u64 	%rd164, %SPL, 0;
	cvt.u64.u32 	%rd165, %r156;
	add.s64 	%rd224, %rd164, %rd165;
	add.s64 	%rd222, %rd163, %rd165;
	sub.s32 	%r5888, %r3907, %r156;
	mov.u32 	%r5869, 0;

$L__BB3_49:
	setp.lt.u32 	%p42, %r5888, 64;
	@%p42 bra 	$L__BB3_54;

$L__BB3_50:
	and.b64  	%rd166, %rd222, 3;
	setp.eq.s64 	%p43, %rd166, 0;
	@%p43 bra 	$L__BB3_52;

	ld.local.u8 	%r4601, [%rd224];
	shl.b32 	%r4602, %r4601, 24;
	ld.local.u8 	%r4603, [%rd224+1];
	shl.b32 	%r4604, %r4603, 16;
	or.b32  	%r4605, %r4604, %r4602;
	ld.local.u8 	%rs131, [%rd224+2];
	mul.wide.u16 	%r4606, %rs131, 256;
	or.b32  	%r4607, %r4605, %r4606;
	ld.local.u8 	%r4608, [%rd224+3];
	or.b32  	%r5887, %r4607, %r4608;
	ld.local.u8 	%r4609, [%rd224+4];
	shl.b32 	%r4610, %r4609, 24;
	ld.local.u8 	%r4611, [%rd224+5];
	shl.b32 	%r4612, %r4611, 16;
	or.b32  	%r4613, %r4612, %r4610;
	ld.local.u8 	%rs132, [%rd224+6];
	mul.wide.u16 	%r4614, %rs132, 256;
	or.b32  	%r4615, %r4613, %r4614;
	ld.local.u8 	%r4616, [%rd224+7];
	or.b32  	%r5886, %r4615, %r4616;
	ld.local.u8 	%r4617, [%rd224+8];
	shl.b32 	%r4618, %r4617, 24;
	ld.local.u8 	%r4619, [%rd224+9];
	shl.b32 	%r4620, %r4619, 16;
	or.b32  	%r4621, %r4620, %r4618;
	ld.local.u8 	%rs133, [%rd224+10];
	mul.wide.u16 	%r4622, %rs133, 256;
	or.b32  	%r4623, %r4621, %r4622;
	ld.local.u8 	%r4624, [%rd224+11];
	or.b32  	%r5885, %r4623, %r4624;
	ld.local.u8 	%r4625, [%rd224+12];
	shl.b32 	%r4626, %r4625, 24;
	ld.local.u8 	%r4627, [%rd224+13];
	shl.b32 	%r4628, %r4627, 16;
	or.b32  	%r4629, %r4628, %r4626;
	ld.local.u8 	%rs134, [%rd224+14];
	mul.wide.u16 	%r4630, %rs134, 256;
	or.b32  	%r4631, %r4629, %r4630;
	ld.local.u8 	%r4632, [%rd224+15];
	or.b32  	%r5884, %r4631, %r4632;
	ld.local.u8 	%r4633, [%rd224+16];
	shl.b32 	%r4634, %r4633, 24;
	ld.local.u8 	%r4635, [%rd224+17];
	shl.b32 	%r4636, %r4635, 16;
	or.b32  	%r4637, %r4636, %r4634;
	ld.local.u8 	%rs135, [%rd224+18];
	mul.wide.u16 	%r4638, %rs135, 256;
	or.b32  	%r4639, %r4637, %r4638;
	ld.local.u8 	%r4640, [%rd224+19];
	or.b32  	%r5883, %r4639, %r4640;
	ld.local.u8 	%r4641, [%rd224+20];
	shl.b32 	%r4642, %r4641, 24;
	ld.local.u8 	%r4643, [%rd224+21];
	shl.b32 	%r4644, %r4643, 16;
	or.b32  	%r4645, %r4644, %r4642;
	ld.local.u8 	%rs136, [%rd224+22];
	mul.wide.u16 	%r4646, %rs136, 256;
	or.b32  	%r4647, %r4645, %r4646;
	ld.local.u8 	%r4648, [%rd224+23];
	or.b32  	%r5882, %r4647, %r4648;
	ld.local.u8 	%r4649, [%rd224+24];
	shl.b32 	%r4650, %r4649, 24;
	ld.local.u8 	%r4651, [%rd224+25];
	shl.b32 	%r4652, %r4651, 16;
	or.b32  	%r4653, %r4652, %r4650;
	ld.local.u8 	%rs137, [%rd224+26];
	mul.wide.u16 	%r4654, %rs137, 256;
	or.b32  	%r4655, %r4653, %r4654;
	ld.local.u8 	%r4656, [%rd224+27];
	or.b32  	%r5881, %r4655, %r4656;
	ld.local.u8 	%r4657, [%rd224+28];
	shl.b32 	%r4658, %r4657, 24;
	ld.local.u8 	%r4659, [%rd224+29];
	shl.b32 	%r4660, %r4659, 16;
	or.b32  	%r4661, %r4660, %r4658;
	ld.local.u8 	%rs138, [%rd224+30];
	mul.wide.u16 	%r4662, %rs138, 256;
	or.b32  	%r4663, %r4661, %r4662;
	ld.local.u8 	%r4664, [%rd224+31];
	or.b32  	%r5880, %r4663, %r4664;
	ld.local.u8 	%r4665, [%rd224+32];
	shl.b32 	%r4666, %r4665, 24;
	ld.local.u8 	%r4667, [%rd224+33];
	shl.b32 	%r4668, %r4667, 16;
	or.b32  	%r4669, %r4668, %r4666;
	ld.local.u8 	%rs139, [%rd224+34];
	mul.wide.u16 	%r4670, %rs139, 256;
	or.b32  	%r4671, %r4669, %r4670;
	ld.local.u8 	%r4672, [%rd224+35];
	or.b32  	%r5879, %r4671, %r4672;
	ld.local.u8 	%r4673, [%rd224+36];
	shl.b32 	%r4674, %r4673, 24;
	ld.local.u8 	%r4675, [%rd224+37];
	shl.b32 	%r4676, %r4675, 16;
	or.b32  	%r4677, %r4676, %r4674;
	ld.local.u8 	%rs140, [%rd224+38];
	mul.wide.u16 	%r4678, %rs140, 256;
	or.b32  	%r4679, %r4677, %r4678;
	ld.local.u8 	%r4680, [%rd224+39];
	or.b32  	%r5878, %r4679, %r4680;
	ld.local.u8 	%r4681, [%rd224+40];
	shl.b32 	%r4682, %r4681, 24;
	ld.local.u8 	%r4683, [%rd224+41];
	shl.b32 	%r4684, %r4683, 16;
	or.b32  	%r4685, %r4684, %r4682;
	ld.local.u8 	%rs141, [%rd224+42];
	mul.wide.u16 	%r4686, %rs141, 256;
	or.b32  	%r4687, %r4685, %r4686;
	ld.local.u8 	%r4688, [%rd224+43];
	or.b32  	%r5877, %r4687, %r4688;
	ld.local.u8 	%r4689, [%rd224+44];
	shl.b32 	%r4690, %r4689, 24;
	ld.local.u8 	%r4691, [%rd224+45];
	shl.b32 	%r4692, %r4691, 16;
	or.b32  	%r4693, %r4692, %r4690;
	ld.local.u8 	%rs142, [%rd224+46];
	mul.wide.u16 	%r4694, %rs142, 256;
	or.b32  	%r4695, %r4693, %r4694;
	ld.local.u8 	%r4696, [%rd224+47];
	or.b32  	%r5876, %r4695, %r4696;
	ld.local.u8 	%r4697, [%rd224+48];
	shl.b32 	%r4698, %r4697, 24;
	ld.local.u8 	%r4699, [%rd224+49];
	shl.b32 	%r4700, %r4699, 16;
	or.b32  	%r4701, %r4700, %r4698;
	ld.local.u8 	%rs143, [%rd224+50];
	mul.wide.u16 	%r4702, %rs143, 256;
	or.b32  	%r4703, %r4701, %r4702;
	ld.local.u8 	%r4704, [%rd224+51];
	or.b32  	%r5875, %r4703, %r4704;
	ld.local.u8 	%r4705, [%rd224+52];
	shl.b32 	%r4706, %r4705, 24;
	ld.local.u8 	%r4707, [%rd224+53];
	shl.b32 	%r4708, %r4707, 16;
	or.b32  	%r4709, %r4708, %r4706;
	ld.local.u8 	%rs144, [%rd224+54];
	mul.wide.u16 	%r4710, %rs144, 256;
	or.b32  	%r4711, %r4709, %r4710;
	ld.local.u8 	%r4712, [%rd224+55];
	or.b32  	%r5874, %r4711, %r4712;
	ld.local.u8 	%r4713, [%rd224+56];
	shl.b32 	%r4714, %r4713, 24;
	ld.local.u8 	%r4715, [%rd224+57];
	shl.b32 	%r4716, %r4715, 16;
	or.b32  	%r4717, %r4716, %r4714;
	ld.local.u8 	%rs145, [%rd224+58];
	mul.wide.u16 	%r4718, %rs145, 256;
	or.b32  	%r4719, %r4717, %r4718;
	ld.local.u8 	%r4720, [%rd224+59];
	or.b32  	%r5873, %r4719, %r4720;
	ld.local.u8 	%r4721, [%rd224+60];
	shl.b32 	%r4722, %r4721, 24;
	ld.local.u8 	%r4723, [%rd224+61];
	shl.b32 	%r4724, %r4723, 16;
	or.b32  	%r4725, %r4724, %r4722;
	ld.local.u8 	%rs146, [%rd224+62];
	mul.wide.u16 	%r4726, %rs146, 256;
	or.b32  	%r4727, %r4725, %r4726;
	ld.local.u8 	%r4728, [%rd224+63];
	or.b32  	%r5872, %r4727, %r4728;
	bra.uni 	$L__BB3_53;

$L__BB3_52:
	ld.local.u32 	%r4729, [%rd224];
	shf.l.wrap.b32 	%r4730, %r4729, %r4729, 16;
	shl.b32 	%r4731, %r4730, 8;
	and.b32  	%r4732, %r4731, -16711936;
	shr.u32 	%r4733, %r4730, 8;
	and.b32  	%r4734, %r4733, 16711935;
	or.b32  	%r5887, %r4732, %r4734;
	ld.local.u32 	%r4735, [%rd224+4];
	shf.l.wrap.b32 	%r4736, %r4735, %r4735, 16;
	shl.b32 	%r4737, %r4736, 8;
	and.b32  	%r4738, %r4737, -16711936;
	shr.u32 	%r4739, %r4736, 8;
	and.b32  	%r4740, %r4739, 16711935;
	or.b32  	%r5886, %r4738, %r4740;
	ld.local.u32 	%r4741, [%rd224+8];
	shf.l.wrap.b32 	%r4742, %r4741, %r4741, 16;
	shl.b32 	%r4743, %r4742, 8;
	and.b32  	%r4744, %r4743, -16711936;
	shr.u32 	%r4745, %r4742, 8;
	and.b32  	%r4746, %r4745, 16711935;
	or.b32  	%r5885, %r4744, %r4746;
	ld.local.u32 	%r4747, [%rd224+12];
	shf.l.wrap.b32 	%r4748, %r4747, %r4747, 16;
	shl.b32 	%r4749, %r4748, 8;
	and.b32  	%r4750, %r4749, -16711936;
	shr.u32 	%r4751, %r4748, 8;
	and.b32  	%r4752, %r4751, 16711935;
	or.b32  	%r5884, %r4750, %r4752;
	ld.local.u32 	%r4753, [%rd224+16];
	shf.l.wrap.b32 	%r4754, %r4753, %r4753, 16;
	shl.b32 	%r4755, %r4754, 8;
	and.b32  	%r4756, %r4755, -16711936;
	shr.u32 	%r4757, %r4754, 8;
	and.b32  	%r4758, %r4757, 16711935;
	or.b32  	%r5883, %r4756, %r4758;
	ld.local.u32 	%r4759, [%rd224+20];
	shf.l.wrap.b32 	%r4760, %r4759, %r4759, 16;
	shl.b32 	%r4761, %r4760, 8;
	and.b32  	%r4762, %r4761, -16711936;
	shr.u32 	%r4763, %r4760, 8;
	and.b32  	%r4764, %r4763, 16711935;
	or.b32  	%r5882, %r4762, %r4764;
	ld.local.u32 	%r4765, [%rd224+24];
	shf.l.wrap.b32 	%r4766, %r4765, %r4765, 16;
	shl.b32 	%r4767, %r4766, 8;
	and.b32  	%r4768, %r4767, -16711936;
	shr.u32 	%r4769, %r4766, 8;
	and.b32  	%r4770, %r4769, 16711935;
	or.b32  	%r5881, %r4768, %r4770;
	ld.local.u32 	%r4771, [%rd224+28];
	shf.l.wrap.b32 	%r4772, %r4771, %r4771, 16;
	shl.b32 	%r4773, %r4772, 8;
	and.b32  	%r4774, %r4773, -16711936;
	shr.u32 	%r4775, %r4772, 8;
	and.b32  	%r4776, %r4775, 16711935;
	or.b32  	%r5880, %r4774, %r4776;
	ld.local.u32 	%r4777, [%rd224+32];
	shf.l.wrap.b32 	%r4778, %r4777, %r4777, 16;
	shl.b32 	%r4779, %r4778, 8;
	and.b32  	%r4780, %r4779, -16711936;
	shr.u32 	%r4781, %r4778, 8;
	and.b32  	%r4782, %r4781, 16711935;
	or.b32  	%r5879, %r4780, %r4782;
	ld.local.u32 	%r4783, [%rd224+36];
	shf.l.wrap.b32 	%r4784, %r4783, %r4783, 16;
	shl.b32 	%r4785, %r4784, 8;
	and.b32  	%r4786, %r4785, -16711936;
	shr.u32 	%r4787, %r4784, 8;
	and.b32  	%r4788, %r4787, 16711935;
	or.b32  	%r5878, %r4786, %r4788;
	ld.local.u32 	%r4789, [%rd224+40];
	shf.l.wrap.b32 	%r4790, %r4789, %r4789, 16;
	shl.b32 	%r4791, %r4790, 8;
	and.b32  	%r4792, %r4791, -16711936;
	shr.u32 	%r4793, %r4790, 8;
	and.b32  	%r4794, %r4793, 16711935;
	or.b32  	%r5877, %r4792, %r4794;
	ld.local.u32 	%r4795, [%rd224+44];
	shf.l.wrap.b32 	%r4796, %r4795, %r4795, 16;
	shl.b32 	%r4797, %r4796, 8;
	and.b32  	%r4798, %r4797, -16711936;
	shr.u32 	%r4799, %r4796, 8;
	and.b32  	%r4800, %r4799, 16711935;
	or.b32  	%r5876, %r4798, %r4800;
	ld.local.u32 	%r4801, [%rd224+48];
	shf.l.wrap.b32 	%r4802, %r4801, %r4801, 16;
	shl.b32 	%r4803, %r4802, 8;
	and.b32  	%r4804, %r4803, -16711936;
	shr.u32 	%r4805, %r4802, 8;
	and.b32  	%r4806, %r4805, 16711935;
	or.b32  	%r5875, %r4804, %r4806;
	ld.local.u32 	%r4807, [%rd224+52];
	shf.l.wrap.b32 	%r4808, %r4807, %r4807, 16;
	shl.b32 	%r4809, %r4808, 8;
	and.b32  	%r4810, %r4809, -16711936;
	shr.u32 	%r4811, %r4808, 8;
	and.b32  	%r4812, %r4811, 16711935;
	or.b32  	%r5874, %r4810, %r4812;
	ld.local.u32 	%r4813, [%rd224+56];
	shf.l.wrap.b32 	%r4814, %r4813, %r4813, 16;
	shl.b32 	%r4815, %r4814, 8;
	and.b32  	%r4816, %r4815, -16711936;
	shr.u32 	%r4817, %r4814, 8;
	and.b32  	%r4818, %r4817, 16711935;
	or.b32  	%r5873, %r4816, %r4818;
	ld.local.u32 	%r4819, [%rd224+60];
	shf.l.wrap.b32 	%r4820, %r4819, %r4819, 16;
	shl.b32 	%r4821, %r4820, 8;
	and.b32  	%r4822, %r4821, -16711936;
	shr.u32 	%r4823, %r4820, 8;
	and.b32  	%r4824, %r4823, 16711935;
	or.b32  	%r5872, %r4822, %r4824;

$L__BB3_53:
	ld.local.u32 	%r4830, [%rd16+4];
	shf.l.wrap.b32 	%r5145, %r4830, %r4830, 5;
	ld.local.u32 	%r4828, [%rd16+16];
	ld.local.u32 	%r4827, [%rd16+12];
	ld.local.u32 	%r4826, [%rd16+8];
	// begin inline asm
	lop3.b32 %r4825, %r4826, %r4827, %r4828, 202;
	// end inline asm
	add.s32 	%r5146, %r5887, %r5145;
	ld.local.u32 	%r5147, [%rd16+20];
	add.s32 	%r5148, %r5146, %r5147;
	add.s32 	%r5149, %r5148, %r4825;
	add.s32 	%r4834, %r5149, 1518500249;
	shf.l.wrap.b32 	%r4836, %r4826, %r4826, 30;
	shf.l.wrap.b32 	%r5150, %r4834, %r4834, 5;
	// begin inline asm
	lop3.b32 %r4829, %r4830, %r4836, %r4827, 202;
	// end inline asm
	add.s32 	%r5151, %r5886, %r4828;
	add.s32 	%r5152, %r5151, %r4829;
	add.s32 	%r5153, %r5152, %r5150;
	add.s32 	%r4838, %r5153, 1518500249;
	shf.l.wrap.b32 	%r4840, %r4830, %r4830, 30;
	shf.l.wrap.b32 	%r5154, %r4838, %r4838, 5;
	// begin inline asm
	lop3.b32 %r4833, %r4834, %r4840, %r4836, 202;
	// end inline asm
	add.s32 	%r5155, %r5885, %r4827;
	add.s32 	%r5156, %r5155, %r4833;
	add.s32 	%r5157, %r5156, %r5154;
	add.s32 	%r4842, %r5157, 1518500249;
	shf.l.wrap.b32 	%r4844, %r4834, %r4834, 30;
	shf.l.wrap.b32 	%r5158, %r4842, %r4842, 5;
	// begin inline asm
	lop3.b32 %r4837, %r4838, %r4844, %r4840, 202;
	// end inline asm
	add.s32 	%r5159, %r5884, %r4836;
	add.s32 	%r5160, %r5159, %r4837;
	add.s32 	%r5161, %r5160, %r5158;
	add.s32 	%r4846, %r5161, 1518500249;
	shf.l.wrap.b32 	%r4848, %r4838, %r4838, 30;
	shf.l.wrap.b32 	%r5162, %r4846, %r4846, 5;
	// begin inline asm
	lop3.b32 %r4841, %r4842, %r4848, %r4844, 202;
	// end inline asm
	add.s32 	%r5163, %r5883, %r4840;
	add.s32 	%r5164, %r5163, %r4841;
	add.s32 	%r5165, %r5164, %r5162;
	add.s32 	%r4850, %r5165, 1518500249;
	shf.l.wrap.b32 	%r4852, %r4842, %r4842, 30;
	shf.l.wrap.b32 	%r5166, %r4850, %r4850, 5;
	// begin inline asm
	lop3.b32 %r4845, %r4846, %r4852, %r4848, 202;
	// end inline asm
	add.s32 	%r5167, %r5882, %r4845;
	add.s32 	%r5168, %r5167, %r4844;
	add.s32 	%r5169, %r5168, %r5166;
	add.s32 	%r4854, %r5169, 1518500249;
	shf.l.wrap.b32 	%r4856, %r4846, %r4846, 30;
	shf.l.wrap.b32 	%r5170, %r4854, %r4854, 5;
	// begin inline asm
	lop3.b32 %r4849, %r4850, %r4856, %r4852, 202;
	// end inline asm
	add.s32 	%r5171, %r5881, %r4849;
	add.s32 	%r5172, %r5171, %r4848;
	add.s32 	%r5173, %r5172, %r5170;
	add.s32 	%r4858, %r5173, 1518500249;
	shf.l.wrap.b32 	%r4860, %r4850, %r4850, 30;
	shf.l.wrap.b32 	%r5174, %r4858, %r4858, 5;
	// begin inline asm
	lop3.b32 %r4853, %r4854, %r4860, %r4856, 202;
	// end inline asm
	add.s32 	%r5175, %r5880, %r4853;
	add.s32 	%r5176, %r5175, %r4852;
	add.s32 	%r5177, %r5176, %r5174;
	add.s32 	%r4862, %r5177, 1518500249;
	shf.l.wrap.b32 	%r4864, %r4854, %r4854, 30;
	shf.l.wrap.b32 	%r5178, %r4862, %r4862, 5;
	// begin inline asm
	lop3.b32 %r4857, %r4858, %r4864, %r4860, 202;
	// end inline asm
	add.s32 	%r5179, %r5879, %r4857;
	add.s32 	%r5180, %r5179, %r4856;
	add.s32 	%r5181, %r5180, %r5178;
	add.s32 	%r4866, %r5181, 1518500249;
	shf.l.wrap.b32 	%r4868, %r4858, %r4858, 30;
	shf.l.wrap.b32 	%r5182, %r4866, %r4866, 5;
	// begin inline asm
	lop3.b32 %r4861, %r4862, %r4868, %r4864, 202;
	// end inline asm
	add.s32 	%r5183, %r5878, %r4861;
	add.s32 	%r5184, %r5183, %r4860;
	add.s32 	%r5185, %r5184, %r5182;
	add.s32 	%r4870, %r5185, 1518500249;
	shf.l.wrap.b32 	%r4872, %r4862, %r4862, 30;
	shf.l.wrap.b32 	%r5186, %r4870, %r4870, 5;
	// begin inline asm
	lop3.b32 %r4865, %r4866, %r4872, %r4868, 202;
	// end inline asm
	add.s32 	%r5187, %r5877, %r4865;
	add.s32 	%r5188, %r5187, %r4864;
	add.s32 	%r5189, %r5188, %r5186;
	add.s32 	%r4874, %r5189, 1518500249;
	shf.l.wrap.b32 	%r4876, %r4866, %r4866, 30;
	shf.l.wrap.b32 	%r5190, %r4874, %r4874, 5;
	// begin inline asm
	lop3.b32 %r4869, %r4870, %r4876, %r4872, 202;
	// end inline asm
	add.s32 	%r5191, %r5876, %r4869;
	add.s32 	%r5192, %r5191, %r4868;
	add.s32 	%r5193, %r5192, %r5190;
	add.s32 	%r4878, %r5193, 1518500249;
	shf.l.wrap.b32 	%r4880, %r4870, %r4870, 30;
	shf.l.wrap.b32 	%r5194, %r4878, %r4878, 5;
	// begin inline asm
	lop3.b32 %r4873, %r4874, %r4880, %r4876, 202;
	// end inline asm
	add.s32 	%r5195, %r5875, %r4873;
	add.s32 	%r5196, %r5195, %r4872;
	add.s32 	%r5197, %r5196, %r5194;
	add.s32 	%r4882, %r5197, 1518500249;
	shf.l.wrap.b32 	%r4884, %r4874, %r4874, 30;
	shf.l.wrap.b32 	%r5198, %r4882, %r4882, 5;
	// begin inline asm
	lop3.b32 %r4877, %r4878, %r4884, %r4880, 202;
	// end inline asm
	add.s32 	%r5199, %r5874, %r4877;
	add.s32 	%r5200, %r5199, %r4876;
	add.s32 	%r5201, %r5200, %r5198;
	add.s32 	%r4886, %r5201, 1518500249;
	shf.l.wrap.b32 	%r4888, %r4878, %r4878, 30;
	shf.l.wrap.b32 	%r5202, %r4886, %r4886, 5;
	// begin inline asm
	lop3.b32 %r4881, %r4882, %r4888, %r4884, 202;
	// end inline asm
	add.s32 	%r5203, %r5873, %r4881;
	add.s32 	%r5204, %r5203, %r4880;
	add.s32 	%r5205, %r5204, %r5202;
	add.s32 	%r4890, %r5205, 1518500249;
	shf.l.wrap.b32 	%r4892, %r4882, %r4882, 30;
	shf.l.wrap.b32 	%r5206, %r4890, %r4890, 5;
	// begin inline asm
	lop3.b32 %r4885, %r4886, %r4892, %r4888, 202;
	// end inline asm
	add.s32 	%r5207, %r5872, %r4885;
	add.s32 	%r5208, %r5207, %r4884;
	add.s32 	%r5209, %r5208, %r5206;
	add.s32 	%r4894, %r5209, 1518500249;
	shf.l.wrap.b32 	%r4896, %r4886, %r4886, 30;
	shf.l.wrap.b32 	%r5210, %r4894, %r4894, 5;
	// begin inline asm
	lop3.b32 %r4889, %r4890, %r4896, %r4892, 202;
	// end inline asm
	xor.b32  	%r5211, %r5879, %r5874;
	xor.b32  	%r5212, %r5211, %r5885;
	xor.b32  	%r5213, %r5212, %r5887;
	shf.l.wrap.b32 	%r5214, %r5213, %r5213, 1;
	add.s32 	%r5215, %r5214, %r4889;
	add.s32 	%r5216, %r5215, %r4888;
	add.s32 	%r5217, %r5216, %r5210;
	add.s32 	%r4898, %r5217, 1518500249;
	shf.l.wrap.b32 	%r4900, %r4890, %r4890, 30;
	shf.l.wrap.b32 	%r5218, %r4898, %r4898, 5;
	// begin inline asm
	lop3.b32 %r4893, %r4894, %r4900, %r4896, 202;
	// end inline asm
	xor.b32  	%r5219, %r5878, %r5873;
	xor.b32  	%r5220, %r5219, %r5884;
	xor.b32  	%r5221, %r5220, %r5886;
	shf.l.wrap.b32 	%r5222, %r5221, %r5221, 1;
	add.s32 	%r5223, %r5222, %r4893;
	add.s32 	%r5224, %r5223, %r4892;
	add.s32 	%r5225, %r5224, %r5218;
	add.s32 	%r4902, %r5225, 1518500249;
	shf.l.wrap.b32 	%r4904, %r4894, %r4894, 30;
	shf.l.wrap.b32 	%r5226, %r4902, %r4902, 5;
	// begin inline asm
	lop3.b32 %r4897, %r4898, %r4904, %r4900, 202;
	// end inline asm
	xor.b32  	%r5227, %r5877, %r5872;
	xor.b32  	%r5228, %r5227, %r5883;
	xor.b32  	%r5229, %r5228, %r5885;
	shf.l.wrap.b32 	%r5230, %r5229, %r5229, 1;
	add.s32 	%r5231, %r5230, %r4897;
	add.s32 	%r5232, %r5231, %r4896;
	add.s32 	%r5233, %r5232, %r5226;
	add.s32 	%r4906, %r5233, 1518500249;
	shf.l.wrap.b32 	%r4908, %r4898, %r4898, 30;
	shf.l.wrap.b32 	%r5234, %r4906, %r4906, 5;
	// begin inline asm
	lop3.b32 %r4901, %r4902, %r4908, %r4904, 202;
	// end inline asm
	xor.b32  	%r5235, %r5882, %r5876;
	xor.b32  	%r5236, %r5235, %r5884;
	xor.b32  	%r5237, %r5236, %r5214;
	shf.l.wrap.b32 	%r5238, %r5237, %r5237, 1;
	add.s32 	%r5239, %r5238, %r4901;
	add.s32 	%r5240, %r5239, %r4900;
	add.s32 	%r5241, %r5240, %r5234;
	add.s32 	%r4910, %r5241, 1518500249;
	shf.l.wrap.b32 	%r4912, %r4902, %r4902, 30;
	shf.l.wrap.b32 	%r5242, %r4910, %r4910, 5;
	// begin inline asm
	lop3.b32 %r4905, %r4906, %r4912, %r4908, 150;
	// end inline asm
	xor.b32  	%r5243, %r5881, %r5875;
	xor.b32  	%r5244, %r5243, %r5883;
	xor.b32  	%r5245, %r5244, %r5222;
	shf.l.wrap.b32 	%r5246, %r5245, %r5245, 1;
	add.s32 	%r5247, %r5246, %r4905;
	add.s32 	%r5248, %r5247, %r4904;
	add.s32 	%r5249, %r5248, %r5242;
	add.s32 	%r4914, %r5249, 1859775393;
	shf.l.wrap.b32 	%r4916, %r4906, %r4906, 30;
	shf.l.wrap.b32 	%r5250, %r4914, %r4914, 5;
	// begin inline asm
	lop3.b32 %r4909, %r4910, %r4916, %r4912, 150;
	// end inline asm
	xor.b32  	%r5251, %r5880, %r5874;
	xor.b32  	%r5252, %r5251, %r5882;
	xor.b32  	%r5253, %r5252, %r5230;
	shf.l.wrap.b32 	%r5254, %r5253, %r5253, 1;
	add.s32 	%r5255, %r5254, %r4909;
	add.s32 	%r5256, %r5255, %r4908;
	add.s32 	%r5257, %r5256, %r5250;
	add.s32 	%r4918, %r5257, 1859775393;
	shf.l.wrap.b32 	%r4920, %r4910, %r4910, 30;
	shf.l.wrap.b32 	%r5258, %r4918, %r4918, 5;
	// begin inline asm
	lop3.b32 %r4913, %r4914, %r4920, %r4916, 150;
	// end inline asm
	xor.b32  	%r5259, %r5879, %r5873;
	xor.b32  	%r5260, %r5259, %r5881;
	xor.b32  	%r5261, %r5260, %r5238;
	shf.l.wrap.b32 	%r5262, %r5261, %r5261, 1;
	add.s32 	%r5263, %r5262, %r4913;
	add.s32 	%r5264, %r5263, %r4912;
	add.s32 	%r5265, %r5264, %r5258;
	add.s32 	%r4922, %r5265, 1859775393;
	shf.l.wrap.b32 	%r4924, %r4914, %r4914, 30;
	shf.l.wrap.b32 	%r5266, %r4922, %r4922, 5;
	// begin inline asm
	lop3.b32 %r4917, %r4918, %r4924, %r4920, 150;
	// end inline asm
	xor.b32  	%r5267, %r5878, %r5872;
	xor.b32  	%r5268, %r5267, %r5880;
	xor.b32  	%r5269, %r5268, %r5246;
	shf.l.wrap.b32 	%r5270, %r5269, %r5269, 1;
	add.s32 	%r5271, %r5270, %r4917;
	add.s32 	%r5272, %r5271, %r4916;
	add.s32 	%r5273, %r5272, %r5266;
	add.s32 	%r4926, %r5273, 1859775393;
	shf.l.wrap.b32 	%r4928, %r4918, %r4918, 30;
	shf.l.wrap.b32 	%r5274, %r4926, %r4926, 5;
	// begin inline asm
	lop3.b32 %r4921, %r4922, %r4928, %r4924, 150;
	// end inline asm
	xor.b32  	%r5275, %r5879, %r5877;
	xor.b32  	%r5276, %r5275, %r5214;
	xor.b32  	%r5277, %r5276, %r5254;
	shf.l.wrap.b32 	%r5278, %r5277, %r5277, 1;
	add.s32 	%r5279, %r5278, %r4921;
	add.s32 	%r5280, %r5279, %r4920;
	add.s32 	%r5281, %r5280, %r5274;
	add.s32 	%r4930, %r5281, 1859775393;
	shf.l.wrap.b32 	%r4932, %r4922, %r4922, 30;
	shf.l.wrap.b32 	%r5282, %r4930, %r4930, 5;
	// begin inline asm
	lop3.b32 %r4925, %r4926, %r4932, %r4928, 150;
	// end inline asm
	xor.b32  	%r5283, %r5878, %r5876;
	xor.b32  	%r5284, %r5283, %r5222;
	xor.b32  	%r5285, %r5284, %r5262;
	shf.l.wrap.b32 	%r5286, %r5285, %r5285, 1;
	add.s32 	%r5287, %r5286, %r4925;
	add.s32 	%r5288, %r5287, %r4924;
	add.s32 	%r5289, %r5288, %r5282;
	add.s32 	%r4934, %r5289, 1859775393;
	shf.l.wrap.b32 	%r4936, %r4926, %r4926, 30;
	shf.l.wrap.b32 	%r5290, %r4934, %r4934, 5;
	// begin inline asm
	lop3.b32 %r4929, %r4930, %r4936, %r4932, 150;
	// end inline asm
	xor.b32  	%r5291, %r5877, %r5875;
	xor.b32  	%r5292, %r5291, %r5230;
	xor.b32  	%r5293, %r5292, %r5270;
	shf.l.wrap.b32 	%r5294, %r5293, %r5293, 1;
	add.s32 	%r5295, %r5294, %r4929;
	add.s32 	%r5296, %r5295, %r4928;
	add.s32 	%r5297, %r5296, %r5290;
	add.s32 	%r4938, %r5297, 1859775393;
	shf.l.wrap.b32 	%r4940, %r4930, %r4930, 30;
	shf.l.wrap.b32 	%r5298, %r4938, %r4938, 5;
	// begin inline asm
	lop3.b32 %r4933, %r4934, %r4940, %r4936, 150;
	// end inline asm
	xor.b32  	%r5299, %r5876, %r5874;
	xor.b32  	%r5300, %r5299, %r5238;
	xor.b32  	%r5301, %r5300, %r5278;
	shf.l.wrap.b32 	%r5302, %r5301, %r5301, 1;
	add.s32 	%r5303, %r5302, %r4933;
	add.s32 	%r5304, %r5303, %r4932;
	add.s32 	%r5305, %r5304, %r5298;
	add.s32 	%r4942, %r5305, 1859775393;
	shf.l.wrap.b32 	%r4944, %r4934, %r4934, 30;
	shf.l.wrap.b32 	%r5306, %r4942, %r4942, 5;
	// begin inline asm
	lop3.b32 %r4937, %r4938, %r4944, %r4940, 150;
	// end inline asm
	xor.b32  	%r5307, %r5875, %r5873;
	xor.b32  	%r5308, %r5307, %r5246;
	xor.b32  	%r5309, %r5308, %r5286;
	shf.l.wrap.b32 	%r5310, %r5309, %r5309, 1;
	add.s32 	%r5311, %r5310, %r4937;
	add.s32 	%r5312, %r5311, %r4936;
	add.s32 	%r5313, %r5312, %r5306;
	add.s32 	%r4946, %r5313, 1859775393;
	shf.l.wrap.b32 	%r4948, %r4938, %r4938, 30;
	shf.l.wrap.b32 	%r5314, %r4946, %r4946, 5;
	// begin inline asm
	lop3.b32 %r4941, %r4942, %r4948, %r4944, 150;
	// end inline asm
	xor.b32  	%r5315, %r5874, %r5872;
	xor.b32  	%r5316, %r5315, %r5254;
	xor.b32  	%r5317, %r5316, %r5294;
	shf.l.wrap.b32 	%r5318, %r5317, %r5317, 1;
	add.s32 	%r5319, %r5318, %r4941;
	add.s32 	%r5320, %r5319, %r4940;
	add.s32 	%r5321, %r5320, %r5314;
	add.s32 	%r4950, %r5321, 1859775393;
	shf.l.wrap.b32 	%r4952, %r4942, %r4942, 30;
	shf.l.wrap.b32 	%r5322, %r4950, %r4950, 5;
	// begin inline asm
	lop3.b32 %r4945, %r4946, %r4952, %r4948, 150;
	// end inline asm
	xor.b32  	%r5323, %r5214, %r5873;
	xor.b32  	%r5324, %r5323, %r5262;
	xor.b32  	%r5325, %r5324, %r5302;
	shf.l.wrap.b32 	%r5326, %r5325, %r5325, 1;
	add.s32 	%r5327, %r5326, %r4945;
	add.s32 	%r5328, %r5327, %r4944;
	add.s32 	%r5329, %r5328, %r5322;
	add.s32 	%r4954, %r5329, 1859775393;
	shf.l.wrap.b32 	%r4956, %r4946, %r4946, 30;
	shf.l.wrap.b32 	%r5330, %r4954, %r4954, 5;
	// begin inline asm
	lop3.b32 %r4949, %r4950, %r4956, %r4952, 150;
	// end inline asm
	xor.b32  	%r5331, %r5222, %r5872;
	xor.b32  	%r5332, %r5331, %r5270;
	xor.b32  	%r5333, %r5332, %r5310;
	shf.l.wrap.b32 	%r5334, %r5333, %r5333, 1;
	add.s32 	%r5335, %r5334, %r4949;
	add.s32 	%r5336, %r5335, %r4948;
	add.s32 	%r5337, %r5336, %r5330;
	add.s32 	%r4958, %r5337, 1859775393;
	shf.l.wrap.b32 	%r4960, %r4950, %r4950, 30;
	shf.l.wrap.b32 	%r5338, %r4958, %r4958, 5;
	// begin inline asm
	lop3.b32 %r4953, %r4954, %r4960, %r4956, 150;
	// end inline asm
	xor.b32  	%r5339, %r5214, %r5230;
	xor.b32  	%r5340, %r5339, %r5278;
	xor.b32  	%r5341, %r5340, %r5318;
	shf.l.wrap.b32 	%r5342, %r5341, %r5341, 1;
	add.s32 	%r5343, %r5342, %r4953;
	add.s32 	%r5344, %r5343, %r4952;
	add.s32 	%r5345, %r5344, %r5338;
	add.s32 	%r4962, %r5345, 1859775393;
	shf.l.wrap.b32 	%r4964, %r4954, %r4954, 30;
	shf.l.wrap.b32 	%r5346, %r4962, %r4962, 5;
	// begin inline asm
	lop3.b32 %r4957, %r4958, %r4964, %r4960, 150;
	// end inline asm
	xor.b32  	%r5347, %r5238, %r5222;
	xor.b32  	%r5348, %r5347, %r5286;
	xor.b32  	%r5349, %r5348, %r5326;
	shf.l.wrap.b32 	%r5350, %r5349, %r5349, 1;
	add.s32 	%r5351, %r5350, %r4957;
	add.s32 	%r5352, %r5351, %r4956;
	add.s32 	%r5353, %r5352, %r5346;
	add.s32 	%r4966, %r5353, 1859775393;
	shf.l.wrap.b32 	%r4968, %r4958, %r4958, 30;
	shf.l.wrap.b32 	%r5354, %r4966, %r4966, 5;
	// begin inline asm
	lop3.b32 %r4961, %r4962, %r4968, %r4964, 150;
	// end inline asm
	xor.b32  	%r5355, %r5246, %r5230;
	xor.b32  	%r5356, %r5355, %r5294;
	xor.b32  	%r5357, %r5356, %r5334;
	shf.l.wrap.b32 	%r5358, %r5357, %r5357, 1;
	add.s32 	%r5359, %r5358, %r4961;
	add.s32 	%r5360, %r5359, %r4960;
	add.s32 	%r5361, %r5360, %r5354;
	add.s32 	%r4970, %r5361, 1859775393;
	shf.l.wrap.b32 	%r4972, %r4962, %r4962, 30;
	shf.l.wrap.b32 	%r5362, %r4970, %r4970, 5;
	// begin inline asm
	lop3.b32 %r4965, %r4966, %r4972, %r4968, 150;
	// end inline asm
	xor.b32  	%r5363, %r5238, %r5254;
	xor.b32  	%r5364, %r5363, %r5302;
	xor.b32  	%r5365, %r5364, %r5342;
	shf.l.wrap.b32 	%r5366, %r5365, %r5365, 1;
	add.s32 	%r5367, %r5366, %r4965;
	add.s32 	%r5368, %r5367, %r4964;
	add.s32 	%r5369, %r5368, %r5362;
	add.s32 	%r4974, %r5369, 1859775393;
	shf.l.wrap.b32 	%r4976, %r4966, %r4966, 30;
	shf.l.wrap.b32 	%r5370, %r4974, %r4974, 5;
	// begin inline asm
	lop3.b32 %r4969, %r4970, %r4976, %r4972, 150;
	// end inline asm
	xor.b32  	%r5371, %r5262, %r5246;
	xor.b32  	%r5372, %r5371, %r5310;
	xor.b32  	%r5373, %r5372, %r5350;
	shf.l.wrap.b32 	%r5374, %r5373, %r5373, 1;
	add.s32 	%r5375, %r5374, %r4969;
	add.s32 	%r5376, %r5375, %r4968;
	add.s32 	%r5377, %r5376, %r5370;
	add.s32 	%r4978, %r5377, 1859775393;
	shf.l.wrap.b32 	%r4980, %r4970, %r4970, 30;
	shf.l.wrap.b32 	%r5378, %r4978, %r4978, 5;
	// begin inline asm
	lop3.b32 %r4973, %r4974, %r4980, %r4976, 150;
	// end inline asm
	xor.b32  	%r5379, %r5270, %r5254;
	xor.b32  	%r5380, %r5379, %r5318;
	xor.b32  	%r5381, %r5380, %r5358;
	shf.l.wrap.b32 	%r5382, %r5381, %r5381, 1;
	add.s32 	%r5383, %r5382, %r4973;
	add.s32 	%r5384, %r5383, %r4972;
	add.s32 	%r5385, %r5384, %r5378;
	add.s32 	%r4982, %r5385, 1859775393;
	shf.l.wrap.b32 	%r4984, %r4974, %r4974, 30;
	shf.l.wrap.b32 	%r5386, %r4982, %r4982, 5;
	// begin inline asm
	lop3.b32 %r4977, %r4978, %r4984, %r4980, 150;
	// end inline asm
	xor.b32  	%r5387, %r5262, %r5278;
	xor.b32  	%r5388, %r5387, %r5326;
	xor.b32  	%r5389, %r5388, %r5366;
	shf.l.wrap.b32 	%r5390, %r5389, %r5389, 1;
	add.s32 	%r5391, %r5390, %r4977;
	add.s32 	%r5392, %r5391, %r4976;
	add.s32 	%r5393, %r5392, %r5386;
	add.s32 	%r4986, %r5393, 1859775393;
	shf.l.wrap.b32 	%r4988, %r4978, %r4978, 30;
	shf.l.wrap.b32 	%r5394, %r4986, %r4986, 5;
	// begin inline asm
	lop3.b32 %r4981, %r4982, %r4988, %r4984, 150;
	// end inline asm
	xor.b32  	%r5395, %r5286, %r5270;
	xor.b32  	%r5396, %r5395, %r5334;
	xor.b32  	%r5397, %r5396, %r5374;
	shf.l.wrap.b32 	%r5398, %r5397, %r5397, 1;
	add.s32 	%r5399, %r5398, %r4981;
	add.s32 	%r5400, %r5399, %r4980;
	add.s32 	%r5401, %r5400, %r5394;
	add.s32 	%r4990, %r5401, 1859775393;
	shf.l.wrap.b32 	%r4992, %r4982, %r4982, 30;
	shf.l.wrap.b32 	%r5402, %r4990, %r4990, 5;
	// begin inline asm
	lop3.b32 %r4985, %r4986, %r4992, %r4988, 232;
	// end inline asm
	xor.b32  	%r5403, %r5294, %r5278;
	xor.b32  	%r5404, %r5403, %r5342;
	xor.b32  	%r5405, %r5404, %r5382;
	shf.l.wrap.b32 	%r5406, %r5405, %r5405, 1;
	add.s32 	%r5407, %r5406, %r4985;
	add.s32 	%r5408, %r5407, %r4984;
	add.s32 	%r5409, %r5408, %r5402;
	add.s32 	%r4994, %r5409, -1894007588;
	shf.l.wrap.b32 	%r4996, %r4986, %r4986, 30;
	shf.l.wrap.b32 	%r5410, %r4994, %r4994, 5;
	// begin inline asm
	lop3.b32 %r4989, %r4990, %r4996, %r4992, 232;
	// end inline asm
	xor.b32  	%r5411, %r5286, %r5302;
	xor.b32  	%r5412, %r5411, %r5350;
	xor.b32  	%r5413, %r5412, %r5390;
	shf.l.wrap.b32 	%r5414, %r5413, %r5413, 1;
	add.s32 	%r5415, %r5414, %r4989;
	add.s32 	%r5416, %r5415, %r4988;
	add.s32 	%r5417, %r5416, %r5410;
	add.s32 	%r4998, %r5417, -1894007588;
	shf.l.wrap.b32 	%r5000, %r4990, %r4990, 30;
	shf.l.wrap.b32 	%r5418, %r4998, %r4998, 5;
	// begin inline asm
	lop3.b32 %r4993, %r4994, %r5000, %r4996, 232;
	// end inline asm
	xor.b32  	%r5419, %r5310, %r5294;
	xor.b32  	%r5420, %r5419, %r5358;
	xor.b32  	%r5421, %r5420, %r5398;
	shf.l.wrap.b32 	%r5422, %r5421, %r5421, 1;
	add.s32 	%r5423, %r5422, %r4993;
	add.s32 	%r5424, %r5423, %r4992;
	add.s32 	%r5425, %r5424, %r5418;
	add.s32 	%r5002, %r5425, -1894007588;
	shf.l.wrap.b32 	%r5004, %r4994, %r4994, 30;
	shf.l.wrap.b32 	%r5426, %r5002, %r5002, 5;
	// begin inline asm
	lop3.b32 %r4997, %r4998, %r5004, %r5000, 232;
	// end inline asm
	xor.b32  	%r5427, %r5318, %r5302;
	xor.b32  	%r5428, %r5427, %r5366;
	xor.b32  	%r5429, %r5428, %r5406;
	shf.l.wrap.b32 	%r5430, %r5429, %r5429, 1;
	add.s32 	%r5431, %r5430, %r4997;
	add.s32 	%r5432, %r5431, %r4996;
	add.s32 	%r5433, %r5432, %r5426;
	add.s32 	%r5006, %r5433, -1894007588;
	shf.l.wrap.b32 	%r5008, %r4998, %r4998, 30;
	shf.l.wrap.b32 	%r5434, %r5006, %r5006, 5;
	// begin inline asm
	lop3.b32 %r5001, %r5002, %r5008, %r5004, 232;
	// end inline asm
	xor.b32  	%r5435, %r5310, %r5326;
	xor.b32  	%r5436, %r5435, %r5374;
	xor.b32  	%r5437, %r5436, %r5414;
	shf.l.wrap.b32 	%r5438, %r5437, %r5437, 1;
	add.s32 	%r5439, %r5438, %r5001;
	add.s32 	%r5440, %r5439, %r5000;
	add.s32 	%r5441, %r5440, %r5434;
	add.s32 	%r5010, %r5441, -1894007588;
	shf.l.wrap.b32 	%r5012, %r5002, %r5002, 30;
	shf.l.wrap.b32 	%r5442, %r5010, %r5010, 5;
	// begin inline asm
	lop3.b32 %r5005, %r5006, %r5012, %r5008, 232;
	// end inline asm
	xor.b32  	%r5443, %r5334, %r5318;
	xor.b32  	%r5444, %r5443, %r5382;
	xor.b32  	%r5445, %r5444, %r5422;
	shf.l.wrap.b32 	%r5446, %r5445, %r5445, 1;
	add.s32 	%r5447, %r5446, %r5005;
	add.s32 	%r5448, %r5447, %r5004;
	add.s32 	%r5449, %r5448, %r5442;
	add.s32 	%r5014, %r5449, -1894007588;
	shf.l.wrap.b32 	%r5016, %r5006, %r5006, 30;
	shf.l.wrap.b32 	%r5450, %r5014, %r5014, 5;
	// begin inline asm
	lop3.b32 %r5009, %r5010, %r5016, %r5012, 232;
	// end inline asm
	xor.b32  	%r5451, %r5342, %r5326;
	xor.b32  	%r5452, %r5451, %r5390;
	xor.b32  	%r5453, %r5452, %r5430;
	shf.l.wrap.b32 	%r5454, %r5453, %r5453, 1;
	add.s32 	%r5455, %r5454, %r5009;
	add.s32 	%r5456, %r5455, %r5008;
	add.s32 	%r5457, %r5456, %r5450;
	add.s32 	%r5018, %r5457, -1894007588;
	shf.l.wrap.b32 	%r5020, %r5010, %r5010, 30;
	shf.l.wrap.b32 	%r5458, %r5018, %r5018, 5;
	// begin inline asm
	lop3.b32 %r5013, %r5014, %r5020, %r5016, 232;
	// end inline asm
	xor.b32  	%r5459, %r5334, %r5350;
	xor.b32  	%r5460, %r5459, %r5398;
	xor.b32  	%r5461, %r5460, %r5438;
	shf.l.wrap.b32 	%r5462, %r5461, %r5461, 1;
	add.s32 	%r5463, %r5462, %r5013;
	add.s32 	%r5464, %r5463, %r5012;
	add.s32 	%r5465, %r5464, %r5458;
	add.s32 	%r5022, %r5465, -1894007588;
	shf.l.wrap.b32 	%r5024, %r5014, %r5014, 30;
	shf.l.wrap.b32 	%r5466, %r5022, %r5022, 5;
	// begin inline asm
	lop3.b32 %r5017, %r5018, %r5024, %r5020, 232;
	// end inline asm
	xor.b32  	%r5467, %r5358, %r5342;
	xor.b32  	%r5468, %r5467, %r5406;
	xor.b32  	%r5469, %r5468, %r5446;
	shf.l.wrap.b32 	%r5470, %r5469, %r5469, 1;
	add.s32 	%r5471, %r5470, %r5017;
	add.s32 	%r5472, %r5471, %r5016;
	add.s32 	%r5473, %r5472, %r5466;
	add.s32 	%r5026, %r5473, -1894007588;
	shf.l.wrap.b32 	%r5028, %r5018, %r5018, 30;
	shf.l.wrap.b32 	%r5474, %r5026, %r5026, 5;
	// begin inline asm
	lop3.b32 %r5021, %r5022, %r5028, %r5024, 232;
	// end inline asm
	xor.b32  	%r5475, %r5366, %r5350;
	xor.b32  	%r5476, %r5475, %r5414;
	xor.b32  	%r5477, %r5476, %r5454;
	shf.l.wrap.b32 	%r5478, %r5477, %r5477, 1;
	add.s32 	%r5479, %r5478, %r5021;
	add.s32 	%r5480, %r5479, %r5020;
	add.s32 	%r5481, %r5480, %r5474;
	add.s32 	%r5030, %r5481, -1894007588;
	shf.l.wrap.b32 	%r5032, %r5022, %r5022, 30;
	shf.l.wrap.b32 	%r5482, %r5030, %r5030, 5;
	// begin inline asm
	lop3.b32 %r5025, %r5026, %r5032, %r5028, 232;
	// end inline asm
	xor.b32  	%r5483, %r5358, %r5374;
	xor.b32  	%r5484, %r5483, %r5422;
	xor.b32  	%r5485, %r5484, %r5462;
	shf.l.wrap.b32 	%r5486, %r5485, %r5485, 1;
	add.s32 	%r5487, %r5486, %r5025;
	add.s32 	%r5488, %r5487, %r5024;
	add.s32 	%r5489, %r5488, %r5482;
	add.s32 	%r5034, %r5489, -1894007588;
	shf.l.wrap.b32 	%r5036, %r5026, %r5026, 30;
	shf.l.wrap.b32 	%r5490, %r5034, %r5034, 5;
	// begin inline asm
	lop3.b32 %r5029, %r5030, %r5036, %r5032, 232;
	// end inline asm
	xor.b32  	%r5491, %r5382, %r5366;
	xor.b32  	%r5492, %r5491, %r5430;
	xor.b32  	%r5493, %r5492, %r5470;
	shf.l.wrap.b32 	%r5494, %r5493, %r5493, 1;
	add.s32 	%r5495, %r5494, %r5029;
	add.s32 	%r5496, %r5495, %r5028;
	add.s32 	%r5497, %r5496, %r5490;
	add.s32 	%r5038, %r5497, -1894007588;
	shf.l.wrap.b32 	%r5040, %r5030, %r5030, 30;
	shf.l.wrap.b32 	%r5498, %r5038, %r5038, 5;
	// begin inline asm
	lop3.b32 %r5033, %r5034, %r5040, %r5036, 232;
	// end inline asm
	xor.b32  	%r5499, %r5390, %r5374;
	xor.b32  	%r5500, %r5499, %r5438;
	xor.b32  	%r5501, %r5500, %r5478;
	shf.l.wrap.b32 	%r5502, %r5501, %r5501, 1;
	add.s32 	%r5503, %r5502, %r5033;
	add.s32 	%r5504, %r5503, %r5032;
	add.s32 	%r5505, %r5504, %r5498;
	add.s32 	%r5042, %r5505, -1894007588;
	shf.l.wrap.b32 	%r5044, %r5034, %r5034, 30;
	shf.l.wrap.b32 	%r5506, %r5042, %r5042, 5;
	// begin inline asm
	lop3.b32 %r5037, %r5038, %r5044, %r5040, 232;
	// end inline asm
	xor.b32  	%r5507, %r5382, %r5398;
	xor.b32  	%r5508, %r5507, %r5446;
	xor.b32  	%r5509, %r5508, %r5486;
	shf.l.wrap.b32 	%r5510, %r5509, %r5509, 1;
	add.s32 	%r5511, %r5510, %r5037;
	add.s32 	%r5512, %r5511, %r5036;
	add.s32 	%r5513, %r5512, %r5506;
	add.s32 	%r5046, %r5513, -1894007588;
	shf.l.wrap.b32 	%r5048, %r5038, %r5038, 30;
	shf.l.wrap.b32 	%r5514, %r5046, %r5046, 5;
	// begin inline asm
	lop3.b32 %r5041, %r5042, %r5048, %r5044, 232;
	// end inline asm
	xor.b32  	%r5515, %r5406, %r5390;
	xor.b32  	%r5516, %r5515, %r5454;
	xor.b32  	%r5517, %r5516, %r5494;
	shf.l.wrap.b32 	%r5518, %r5517, %r5517, 1;
	add.s32 	%r5519, %r5518, %r5041;
	add.s32 	%r5520, %r5519, %r5040;
	add.s32 	%r5521, %r5520, %r5514;
	add.s32 	%r5050, %r5521, -1894007588;
	shf.l.wrap.b32 	%r5052, %r5042, %r5042, 30;
	shf.l.wrap.b32 	%r5522, %r5050, %r5050, 5;
	// begin inline asm
	lop3.b32 %r5045, %r5046, %r5052, %r5048, 232;
	// end inline asm
	xor.b32  	%r5523, %r5414, %r5398;
	xor.b32  	%r5524, %r5523, %r5462;
	xor.b32  	%r5525, %r5524, %r5502;
	shf.l.wrap.b32 	%r5526, %r5525, %r5525, 1;
	add.s32 	%r5527, %r5526, %r5045;
	add.s32 	%r5528, %r5527, %r5044;
	add.s32 	%r5529, %r5528, %r5522;
	add.s32 	%r5054, %r5529, -1894007588;
	shf.l.wrap.b32 	%r5056, %r5046, %r5046, 30;
	shf.l.wrap.b32 	%r5530, %r5054, %r5054, 5;
	// begin inline asm
	lop3.b32 %r5049, %r5050, %r5056, %r5052, 232;
	// end inline asm
	xor.b32  	%r5531, %r5406, %r5422;
	xor.b32  	%r5532, %r5531, %r5470;
	xor.b32  	%r5533, %r5532, %r5510;
	shf.l.wrap.b32 	%r5534, %r5533, %r5533, 1;
	add.s32 	%r5535, %r5534, %r5049;
	add.s32 	%r5536, %r5535, %r5048;
	add.s32 	%r5537, %r5536, %r5530;
	add.s32 	%r5058, %r5537, -1894007588;
	shf.l.wrap.b32 	%r5060, %r5050, %r5050, 30;
	shf.l.wrap.b32 	%r5538, %r5058, %r5058, 5;
	// begin inline asm
	lop3.b32 %r5053, %r5054, %r5060, %r5056, 232;
	// end inline asm
	xor.b32  	%r5539, %r5430, %r5414;
	xor.b32  	%r5540, %r5539, %r5478;
	xor.b32  	%r5541, %r5540, %r5518;
	shf.l.wrap.b32 	%r5542, %r5541, %r5541, 1;
	add.s32 	%r5543, %r5542, %r5053;
	add.s32 	%r5544, %r5543, %r5052;
	add.s32 	%r5545, %r5544, %r5538;
	add.s32 	%r5062, %r5545, -1894007588;
	shf.l.wrap.b32 	%r5064, %r5054, %r5054, 30;
	shf.l.wrap.b32 	%r5546, %r5062, %r5062, 5;
	// begin inline asm
	lop3.b32 %r5057, %r5058, %r5064, %r5060, 232;
	// end inline asm
	xor.b32  	%r5547, %r5438, %r5422;
	xor.b32  	%r5548, %r5547, %r5486;
	xor.b32  	%r5549, %r5548, %r5526;
	shf.l.wrap.b32 	%r5550, %r5549, %r5549, 1;
	add.s32 	%r5551, %r5550, %r5057;
	add.s32 	%r5552, %r5551, %r5056;
	add.s32 	%r5553, %r5552, %r5546;
	add.s32 	%r5066, %r5553, -1894007588;
	shf.l.wrap.b32 	%r5068, %r5058, %r5058, 30;
	shf.l.wrap.b32 	%r5554, %r5066, %r5066, 5;
	// begin inline asm
	lop3.b32 %r5061, %r5062, %r5068, %r5064, 232;
	// end inline asm
	xor.b32  	%r5555, %r5430, %r5446;
	xor.b32  	%r5556, %r5555, %r5494;
	xor.b32  	%r5557, %r5556, %r5534;
	shf.l.wrap.b32 	%r5558, %r5557, %r5557, 1;
	add.s32 	%r5559, %r5558, %r5061;
	add.s32 	%r5560, %r5559, %r5060;
	add.s32 	%r5561, %r5560, %r5554;
	add.s32 	%r5070, %r5561, -1894007588;
	shf.l.wrap.b32 	%r5072, %r5062, %r5062, 30;
	shf.l.wrap.b32 	%r5562, %r5070, %r5070, 5;
	// begin inline asm
	lop3.b32 %r5065, %r5066, %r5072, %r5068, 150;
	// end inline asm
	xor.b32  	%r5563, %r5454, %r5438;
	xor.b32  	%r5564, %r5563, %r5502;
	xor.b32  	%r5565, %r5564, %r5542;
	shf.l.wrap.b32 	%r5566, %r5565, %r5565, 1;
	add.s32 	%r5567, %r5566, %r5065;
	add.s32 	%r5568, %r5567, %r5064;
	add.s32 	%r5569, %r5568, %r5562;
	add.s32 	%r5074, %r5569, -899497514;
	shf.l.wrap.b32 	%r5076, %r5066, %r5066, 30;
	shf.l.wrap.b32 	%r5570, %r5074, %r5074, 5;
	// begin inline asm
	lop3.b32 %r5069, %r5070, %r5076, %r5072, 150;
	// end inline asm
	xor.b32  	%r5571, %r5462, %r5446;
	xor.b32  	%r5572, %r5571, %r5510;
	xor.b32  	%r5573, %r5572, %r5550;
	shf.l.wrap.b32 	%r5574, %r5573, %r5573, 1;
	add.s32 	%r5575, %r5574, %r5069;
	add.s32 	%r5576, %r5575, %r5068;
	add.s32 	%r5577, %r5576, %r5570;
	add.s32 	%r5078, %r5577, -899497514;
	shf.l.wrap.b32 	%r5080, %r5070, %r5070, 30;
	shf.l.wrap.b32 	%r5578, %r5078, %r5078, 5;
	// begin inline asm
	lop3.b32 %r5073, %r5074, %r5080, %r5076, 150;
	// end inline asm
	xor.b32  	%r5579, %r5454, %r5470;
	xor.b32  	%r5580, %r5579, %r5518;
	xor.b32  	%r5581, %r5580, %r5558;
	shf.l.wrap.b32 	%r5582, %r5581, %r5581, 1;
	add.s32 	%r5583, %r5582, %r5073;
	add.s32 	%r5584, %r5583, %r5072;
	add.s32 	%r5585, %r5584, %r5578;
	add.s32 	%r5082, %r5585, -899497514;
	shf.l.wrap.b32 	%r5084, %r5074, %r5074, 30;
	shf.l.wrap.b32 	%r5586, %r5082, %r5082, 5;
	// begin inline asm
	lop3.b32 %r5077, %r5078, %r5084, %r5080, 150;
	// end inline asm
	xor.b32  	%r5587, %r5478, %r5462;
	xor.b32  	%r5588, %r5587, %r5526;
	xor.b32  	%r5589, %r5588, %r5566;
	shf.l.wrap.b32 	%r5590, %r5589, %r5589, 1;
	add.s32 	%r5591, %r5590, %r5077;
	add.s32 	%r5592, %r5591, %r5076;
	add.s32 	%r5593, %r5592, %r5586;
	add.s32 	%r5086, %r5593, -899497514;
	shf.l.wrap.b32 	%r5088, %r5078, %r5078, 30;
	shf.l.wrap.b32 	%r5594, %r5086, %r5086, 5;
	// begin inline asm
	lop3.b32 %r5081, %r5082, %r5088, %r5084, 150;
	// end inline asm
	xor.b32  	%r5595, %r5486, %r5470;
	xor.b32  	%r5596, %r5595, %r5534;
	xor.b32  	%r5597, %r5596, %r5574;
	shf.l.wrap.b32 	%r5598, %r5597, %r5597, 1;
	add.s32 	%r5599, %r5598, %r5081;
	add.s32 	%r5600, %r5599, %r5080;
	add.s32 	%r5601, %r5600, %r5594;
	add.s32 	%r5090, %r5601, -899497514;
	shf.l.wrap.b32 	%r5092, %r5082, %r5082, 30;
	shf.l.wrap.b32 	%r5602, %r5090, %r5090, 5;
	// begin inline asm
	lop3.b32 %r5085, %r5086, %r5092, %r5088, 150;
	// end inline asm
	xor.b32  	%r5603, %r5478, %r5494;
	xor.b32  	%r5604, %r5603, %r5542;
	xor.b32  	%r5605, %r5604, %r5582;
	shf.l.wrap.b32 	%r5606, %r5605, %r5605, 1;
	add.s32 	%r5607, %r5606, %r5085;
	add.s32 	%r5608, %r5607, %r5084;
	add.s32 	%r5609, %r5608, %r5602;
	add.s32 	%r5094, %r5609, -899497514;
	shf.l.wrap.b32 	%r5096, %r5086, %r5086, 30;
	shf.l.wrap.b32 	%r5610, %r5094, %r5094, 5;
	// begin inline asm
	lop3.b32 %r5089, %r5090, %r5096, %r5092, 150;
	// end inline asm
	xor.b32  	%r5611, %r5502, %r5486;
	xor.b32  	%r5612, %r5611, %r5550;
	xor.b32  	%r5613, %r5612, %r5590;
	shf.l.wrap.b32 	%r5614, %r5613, %r5613, 1;
	add.s32 	%r5615, %r5614, %r5089;
	add.s32 	%r5616, %r5615, %r5088;
	add.s32 	%r5617, %r5616, %r5610;
	add.s32 	%r5098, %r5617, -899497514;
	shf.l.wrap.b32 	%r5100, %r5090, %r5090, 30;
	shf.l.wrap.b32 	%r5618, %r5098, %r5098, 5;
	// begin inline asm
	lop3.b32 %r5093, %r5094, %r5100, %r5096, 150;
	// end inline asm
	xor.b32  	%r5619, %r5510, %r5494;
	xor.b32  	%r5620, %r5619, %r5558;
	xor.b32  	%r5621, %r5620, %r5598;
	shf.l.wrap.b32 	%r5622, %r5621, %r5621, 1;
	add.s32 	%r5623, %r5622, %r5093;
	add.s32 	%r5624, %r5623, %r5092;
	add.s32 	%r5625, %r5624, %r5618;
	add.s32 	%r5102, %r5625, -899497514;
	shf.l.wrap.b32 	%r5104, %r5094, %r5094, 30;
	shf.l.wrap.b32 	%r5626, %r5102, %r5102, 5;
	// begin inline asm
	lop3.b32 %r5097, %r5098, %r5104, %r5100, 150;
	// end inline asm
	xor.b32  	%r5627, %r5502, %r5518;
	xor.b32  	%r5628, %r5627, %r5566;
	xor.b32  	%r5629, %r5628, %r5606;
	shf.l.wrap.b32 	%r5630, %r5629, %r5629, 1;
	add.s32 	%r5631, %r5630, %r5097;
	add.s32 	%r5632, %r5631, %r5096;
	add.s32 	%r5633, %r5632, %r5626;
	add.s32 	%r5106, %r5633, -899497514;
	shf.l.wrap.b32 	%r5108, %r5098, %r5098, 30;
	shf.l.wrap.b32 	%r5634, %r5106, %r5106, 5;
	// begin inline asm
	lop3.b32 %r5101, %r5102, %r5108, %r5104, 150;
	// end inline asm
	xor.b32  	%r5635, %r5526, %r5510;
	xor.b32  	%r5636, %r5635, %r5574;
	xor.b32  	%r5637, %r5636, %r5614;
	shf.l.wrap.b32 	%r5638, %r5637, %r5637, 1;
	add.s32 	%r5639, %r5638, %r5101;
	add.s32 	%r5640, %r5639, %r5100;
	add.s32 	%r5641, %r5640, %r5634;
	add.s32 	%r5110, %r5641, -899497514;
	shf.l.wrap.b32 	%r5112, %r5102, %r5102, 30;
	shf.l.wrap.b32 	%r5642, %r5110, %r5110, 5;
	// begin inline asm
	lop3.b32 %r5105, %r5106, %r5112, %r5108, 150;
	// end inline asm
	xor.b32  	%r5643, %r5534, %r5518;
	xor.b32  	%r5644, %r5643, %r5582;
	xor.b32  	%r5645, %r5644, %r5622;
	shf.l.wrap.b32 	%r5646, %r5645, %r5645, 1;
	add.s32 	%r5647, %r5646, %r5105;
	add.s32 	%r5648, %r5647, %r5104;
	add.s32 	%r5649, %r5648, %r5642;
	add.s32 	%r5114, %r5649, -899497514;
	shf.l.wrap.b32 	%r5116, %r5106, %r5106, 30;
	shf.l.wrap.b32 	%r5650, %r5114, %r5114, 5;
	// begin inline asm
	lop3.b32 %r5109, %r5110, %r5116, %r5112, 150;
	// end inline asm
	xor.b32  	%r5651, %r5526, %r5542;
	xor.b32  	%r5652, %r5651, %r5590;
	xor.b32  	%r5653, %r5652, %r5630;
	shf.l.wrap.b32 	%r5654, %r5653, %r5653, 1;
	add.s32 	%r5655, %r5654, %r5109;
	add.s32 	%r5656, %r5655, %r5108;
	add.s32 	%r5657, %r5656, %r5650;
	add.s32 	%r5118, %r5657, -899497514;
	shf.l.wrap.b32 	%r5120, %r5110, %r5110, 30;
	shf.l.wrap.b32 	%r5658, %r5118, %r5118, 5;
	// begin inline asm
	lop3.b32 %r5113, %r5114, %r5120, %r5116, 150;
	// end inline asm
	xor.b32  	%r5659, %r5550, %r5534;
	xor.b32  	%r5660, %r5659, %r5598;
	xor.b32  	%r5661, %r5660, %r5638;
	shf.l.wrap.b32 	%r5662, %r5661, %r5661, 1;
	add.s32 	%r5663, %r5662, %r5113;
	add.s32 	%r5664, %r5663, %r5112;
	add.s32 	%r5665, %r5664, %r5658;
	add.s32 	%r5122, %r5665, -899497514;
	shf.l.wrap.b32 	%r5124, %r5114, %r5114, 30;
	shf.l.wrap.b32 	%r5666, %r5122, %r5122, 5;
	// begin inline asm
	lop3.b32 %r5117, %r5118, %r5124, %r5120, 150;
	// end inline asm
	xor.b32  	%r5667, %r5558, %r5542;
	xor.b32  	%r5668, %r5667, %r5606;
	xor.b32  	%r5669, %r5668, %r5646;
	shf.l.wrap.b32 	%r5670, %r5669, %r5669, 1;
	add.s32 	%r5671, %r5670, %r5117;
	add.s32 	%r5672, %r5671, %r5116;
	add.s32 	%r5673, %r5672, %r5666;
	add.s32 	%r5126, %r5673, -899497514;
	shf.l.wrap.b32 	%r5128, %r5118, %r5118, 30;
	shf.l.wrap.b32 	%r5674, %r5126, %r5126, 5;
	// begin inline asm
	lop3.b32 %r5121, %r5122, %r5128, %r5124, 150;
	// end inline asm
	xor.b32  	%r5675, %r5550, %r5566;
	xor.b32  	%r5676, %r5675, %r5614;
	xor.b32  	%r5677, %r5676, %r5654;
	shf.l.wrap.b32 	%r5678, %r5677, %r5677, 1;
	add.s32 	%r5679, %r5678, %r5121;
	add.s32 	%r5680, %r5679, %r5120;
	add.s32 	%r5681, %r5680, %r5674;
	add.s32 	%r5130, %r5681, -899497514;
	shf.l.wrap.b32 	%r5132, %r5122, %r5122, 30;
	shf.l.wrap.b32 	%r5682, %r5130, %r5130, 5;
	// begin inline asm
	lop3.b32 %r5125, %r5126, %r5132, %r5128, 150;
	// end inline asm
	xor.b32  	%r5683, %r5574, %r5558;
	xor.b32  	%r5684, %r5683, %r5622;
	xor.b32  	%r5685, %r5684, %r5662;
	shf.l.wrap.b32 	%r5686, %r5685, %r5685, 1;
	add.s32 	%r5687, %r5686, %r5125;
	add.s32 	%r5688, %r5687, %r5124;
	add.s32 	%r5689, %r5688, %r5682;
	add.s32 	%r5134, %r5689, -899497514;
	shf.l.wrap.b32 	%r5136, %r5126, %r5126, 30;
	shf.l.wrap.b32 	%r5690, %r5134, %r5134, 5;
	// begin inline asm
	lop3.b32 %r5129, %r5130, %r5136, %r5132, 150;
	// end inline asm
	xor.b32  	%r5691, %r5582, %r5566;
	xor.b32  	%r5692, %r5691, %r5630;
	xor.b32  	%r5693, %r5692, %r5670;
	shf.l.wrap.b32 	%r5694, %r5693, %r5693, 1;
	add.s32 	%r5695, %r5129, %r5694;
	add.s32 	%r5696, %r5695, %r5128;
	add.s32 	%r5697, %r5696, %r5690;
	add.s32 	%r5138, %r5697, -899497514;
	shf.l.wrap.b32 	%r5140, %r5130, %r5130, 30;
	shf.l.wrap.b32 	%r5698, %r5138, %r5138, 5;
	// begin inline asm
	lop3.b32 %r5133, %r5134, %r5140, %r5136, 150;
	// end inline asm
	xor.b32  	%r5699, %r5574, %r5590;
	xor.b32  	%r5700, %r5699, %r5638;
	xor.b32  	%r5701, %r5700, %r5678;
	shf.l.wrap.b32 	%r5702, %r5701, %r5701, 1;
	add.s32 	%r5703, %r5702, %r5133;
	add.s32 	%r5704, %r5703, %r5132;
	add.s32 	%r5705, %r5704, %r5698;
	add.s32 	%r5142, %r5705, -899497514;
	shf.l.wrap.b32 	%r5144, %r5134, %r5134, 30;
	shf.l.wrap.b32 	%r5706, %r5142, %r5142, 5;
	// begin inline asm
	lop3.b32 %r5137, %r5138, %r5144, %r5140, 150;
	// end inline asm
	xor.b32  	%r5707, %r5598, %r5582;
	xor.b32  	%r5708, %r5707, %r5646;
	xor.b32  	%r5709, %r5708, %r5686;
	shf.l.wrap.b32 	%r5710, %r5709, %r5709, 1;
	add.s32 	%r5711, %r5710, %r5137;
	add.s32 	%r5712, %r5711, %r5136;
	add.s32 	%r5713, %r5712, %r5706;
	add.s32 	%r5714, %r5713, -899497514;
	shf.l.wrap.b32 	%r5143, %r5138, %r5138, 30;
	shf.l.wrap.b32 	%r5715, %r5714, %r5714, 5;
	// begin inline asm
	lop3.b32 %r5141, %r5142, %r5143, %r5144, 150;
	// end inline asm
	xor.b32  	%r5716, %r5606, %r5590;
	xor.b32  	%r5717, %r5716, %r5654;
	xor.b32  	%r5718, %r5717, %r5694;
	shf.l.wrap.b32 	%r5719, %r5718, %r5718, 1;
	shf.l.wrap.b32 	%r5720, %r5142, %r5142, 30;
	add.s32 	%r5721, %r5141, %r5719;
	add.s32 	%r5722, %r5721, %r4830;
	add.s32 	%r5723, %r5722, %r5140;
	add.s32 	%r5724, %r5723, %r5715;
	add.s32 	%r5725, %r5724, -899497514;
	st.local.u32 	[%rd16+4], %r5725;
	add.s32 	%r5726, %r5714, %r4826;
	st.local.u32 	[%rd16+8], %r5726;
	add.s32 	%r5727, %r5720, %r4827;
	st.local.u32 	[%rd16+12], %r5727;
	add.s32 	%r5728, %r5143, %r4828;
	st.local.u32 	[%rd16+16], %r5728;
	add.s32 	%r5729, %r5144, %r5147;
	st.local.u32 	[%rd16+20], %r5729;
	add.s64 	%rd224, %rd224, 64;
	add.s64 	%rd222, %rd222, 64;
	add.s32 	%r5888, %r5888, -64;
	setp.gt.u32 	%p44, %r5888, 63;
	@%p44 bra 	$L__BB3_50;

$L__BB3_54:
	setp.eq.s32 	%p45, %r5888, 0;
	@%p45 bra 	$L__BB3_60;

	cvt.u64.u32 	%rd167, %r5869;
	add.s64 	%rd170, %rd16, %rd167;
	add.s64 	%rd229, %rd170, 24;
	and.b32  	%r5890, %r5888, 3;
	setp.eq.s32 	%p46, %r5890, 0;
	mov.u32 	%r5891, %r5888;
	@%p46 bra 	$L__BB3_58;

	mov.u64 	%rd225, %rd229;
	mov.u64 	%rd226, %rd224;
	mov.u32 	%r5891, %r5888;

$L__BB3_57:
	.pragma "nounroll";
	add.s32 	%r5891, %r5891, -1;
	add.s64 	%rd224, %rd226, 1;
	ld.local.u8 	%rs147, [%rd226];
	add.s64 	%rd229, %rd225, 1;
	st.local.u8 	[%rd225], %rs147;
	add.s32 	%r5890, %r5890, -1;
	setp.ne.s32 	%p47, %r5890, 0;
	mov.u64 	%rd225, %rd229;
	mov.u64 	%rd226, %rd224;
	@%p47 bra 	$L__BB3_57;

$L__BB3_58:
	add.s32 	%r5730, %r5888, -1;
	setp.lt.u32 	%p48, %r5730, 3;
	@%p48 bra 	$L__BB3_60;

$L__BB3_59:
	ld.local.u8 	%rs148, [%rd224];
	st.local.u8 	[%rd229], %rs148;
	ld.local.u8 	%rs149, [%rd224+1];
	st.local.u8 	[%rd229+1], %rs149;
	ld.local.u8 	%rs150, [%rd224+2];
	st.local.u8 	[%rd229+2], %rs150;
	add.s64 	%rd110, %rd224, 4;
	ld.local.u8 	%rs151, [%rd224+3];
	add.s64 	%rd111, %rd229, 4;
	st.local.u8 	[%rd229+3], %rs151;
	add.s32 	%r5891, %r5891, -4;
	setp.ne.s32 	%p49, %r5891, 0;
	mov.u64 	%rd229, %rd111;
	mov.u64 	%rd224, %rd110;
	@%p49 bra 	$L__BB3_59;

$L__BB3_60:
	mov.b32 	%r5804, %envreg3;
	mov.u32 	%r5803, %tid.x;
	add.s32 	%r5802, %r5803, %r5804;
	mov.u32 	%r5801, %ctaid.x;
	mov.u32 	%r5800, %ntid.x;
	mad.lo.s32 	%r5799, %r5800, %r5801, %r5802;
	cvt.u64.u32 	%rd180, %r5799;
	ld.param.u64 	%rd179, [sspr_sha1_param_2];
	ld.param.u64 	%rd178, [sspr_sha1_param_3];
	ld.local.u32 	%r5731, [%rd16+4];
	shf.l.wrap.b32 	%r5732, %r5731, %r5731, 16;
	shl.b32 	%r5733, %r5732, 8;
	and.b32  	%r5734, %r5733, -16711936;
	shr.u32 	%r5735, %r5732, 8;
	and.b32  	%r5736, %r5735, 16711935;
	or.b32  	%r5737, %r5734, %r5736;
	ld.local.u32 	%r5738, [%rd16+8];
	shf.l.wrap.b32 	%r5739, %r5738, %r5738, 16;
	shl.b32 	%r5740, %r5739, 8;
	and.b32  	%r5741, %r5740, -16711936;
	shr.u32 	%r5742, %r5739, 8;
	and.b32  	%r5743, %r5742, 16711935;
	or.b32  	%r5744, %r5741, %r5743;
	ld.local.u32 	%r5745, [%rd16+12];
	shf.l.wrap.b32 	%r5746, %r5745, %r5745, 16;
	shl.b32 	%r5747, %r5746, 8;
	and.b32  	%r5748, %r5747, -16711936;
	shr.u32 	%r5749, %r5746, 8;
	and.b32  	%r5750, %r5749, 16711935;
	or.b32  	%r5751, %r5748, %r5750;
	ld.local.u32 	%r5752, [%rd16+16];
	shf.l.wrap.b32 	%r5753, %r5752, %r5752, 16;
	shl.b32 	%r5754, %r5753, 8;
	and.b32  	%r5755, %r5754, -16711936;
	shr.u32 	%r5756, %r5753, 8;
	and.b32  	%r5757, %r5756, 16711935;
	or.b32  	%r5758, %r5755, %r5757;
	ld.local.u32 	%r5759, [%rd16+20];
	shf.l.wrap.b32 	%r5760, %r5759, %r5759, 16;
	shl.b32 	%r5761, %r5760, 8;
	and.b32  	%r5762, %r5761, -16711936;
	shr.u32 	%r5763, %r5760, 8;
	and.b32  	%r5764, %r5763, 16711935;
	or.b32  	%r5765, %r5762, %r5764;
	shf.l.wrap.b32 	%r5766, %r5737, %r5737, 16;
	shl.b32 	%r5767, %r5766, 8;
	and.b32  	%r5768, %r5767, -16711936;
	shr.u32 	%r5769, %r5766, 8;
	and.b32  	%r5770, %r5769, 16711935;
	shf.l.wrap.b32 	%r5771, %r5744, %r5744, 16;
	shl.b32 	%r5772, %r5771, 8;
	and.b32  	%r5773, %r5772, -16711936;
	shr.u32 	%r5774, %r5771, 8;
	and.b32  	%r5775, %r5774, 16711935;
	or.b32  	%r5776, %r5773, %r5775;
	or.b32  	%r5777, %r5768, %r5770;
	mul.lo.s64 	%rd173, %rd180, 72;
	add.s64 	%rd174, %rd178, %rd173;
	st.global.v2.u32 	[%rd174], {%r5777, %r5776};
	shf.l.wrap.b32 	%r5778, %r5751, %r5751, 16;
	shl.b32 	%r5779, %r5778, 8;
	and.b32  	%r5780, %r5779, -16711936;
	shr.u32 	%r5781, %r5778, 8;
	and.b32  	%r5782, %r5781, 16711935;
	shf.l.wrap.b32 	%r5783, %r5758, %r5758, 16;
	shl.b32 	%r5784, %r5783, 8;
	and.b32  	%r5785, %r5784, -16711936;
	shr.u32 	%r5786, %r5783, 8;
	and.b32  	%r5787, %r5786, 16711935;
	or.b32  	%r5788, %r5785, %r5787;
	or.b32  	%r5789, %r5780, %r5782;
	st.global.v2.u32 	[%rd174+8], {%r5789, %r5788};
	shf.l.wrap.b32 	%r5790, %r5765, %r5765, 16;
	shl.b32 	%r5791, %r5790, 8;
	and.b32  	%r5792, %r5791, -16711936;
	shr.u32 	%r5793, %r5790, 8;
	and.b32  	%r5794, %r5793, 16711935;
	or.b32  	%r5795, %r5792, %r5794;
	st.global.u32 	[%rd174+16], %r5795;
	ld.const.u32 	%r5796, [%rd179+4];
	add.s32 	%r5797, %r5796, -1;
	st.global.u32 	[%rd174+64], %r5797;
	ret;

}
	// .globl	sspr_salted_sha1
.entry sspr_salted_sha1(
	.param .u64 .ptr .global .align 4 sspr_salted_sha1_param_0,
	.param .u64 .ptr .global .align 8 sspr_salted_sha1_param_1,
	.param .u64 .ptr .const .align 4 sspr_salted_sha1_param_2,
	.param .u64 .ptr .global .align 8 sspr_salted_sha1_param_3
)
{
	.local .align 16 .b8 	__local_depot4[272];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<73>;
	.reg .b16 	%rs<183>;
	.reg .b32 	%r<8158>;
	.reg .b64 	%rd<306>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd161, [sspr_salted_sha1_param_0];
	ld.param.u64 	%rd162, [sspr_salted_sha1_param_2];
	add.u64 	%rd243, %SPL, 80;
	add.u64 	%rd245, %SP, 144;
	cvta.to.local.u64 	%rd247, %rd245;
	mov.u32 	%r308, %ctaid.x;
	mov.u32 	%r309, %ntid.x;
	mov.u32 	%r310, %tid.x;
	mov.b32 	%r311, %envreg3;
	add.s32 	%r312, %r310, %r311;
	mad.lo.s32 	%r313, %r309, %r308, %r312;
	cvt.u64.u32 	%rd3, %r313;
	ld.const.u32 	%r8068, [%rd162];
	setp.eq.s32 	%p1, %r8068, 0;
	@%p1 bra 	$L__BB4_6;

	add.s64 	%rd238, %rd162, 8;
	and.b32  	%r8039, %r8068, 3;
	setp.eq.s32 	%p2, %r8039, 0;
	mov.u64 	%rd237, %rd247;
	mov.u32 	%r8040, %r8068;
	@%p2 bra 	$L__BB4_4;

	mov.u64 	%rd233, %rd247;
	mov.u64 	%rd234, %rd238;
	mov.u32 	%r8040, %r8068;

$L__BB4_3:
	.pragma "nounroll";
	add.s32 	%r8040, %r8040, -1;
	add.s64 	%rd238, %rd234, 1;
	ld.const.u8 	%rs1, [%rd234];
	add.s64 	%rd237, %rd233, 1;
	st.local.u8 	[%rd233], %rs1;
	add.s32 	%r8039, %r8039, -1;
	setp.ne.s32 	%p3, %r8039, 0;
	mov.u64 	%rd233, %rd237;
	mov.u64 	%rd234, %rd238;
	@%p3 bra 	$L__BB4_3;

$L__BB4_4:
	add.s32 	%r314, %r8068, -1;
	setp.lt.u32 	%p4, %r314, 3;
	@%p4 bra 	$L__BB4_6;

$L__BB4_5:
	ld.const.u8 	%rs2, [%rd238];
	st.local.u8 	[%rd237], %rs2;
	ld.const.u8 	%rs3, [%rd238+1];
	st.local.u8 	[%rd237+1], %rs3;
	ld.const.u8 	%rs4, [%rd238+2];
	st.local.u8 	[%rd237+2], %rs4;
	add.s64 	%rd16, %rd238, 4;
	ld.const.u8 	%rs5, [%rd238+3];
	add.s64 	%rd17, %rd237, 4;
	st.local.u8 	[%rd237+3], %rs5;
	add.s32 	%r8040, %r8040, -4;
	setp.ne.s32 	%p5, %r8040, 0;
	mov.u64 	%rd237, %rd17;
	mov.u64 	%rd238, %rd16;
	@%p5 bra 	$L__BB4_5;

$L__BB4_6:
	mul.lo.s64 	%rd166, %rd3, 68;
	add.s64 	%rd167, %rd161, %rd166;
	ld.global.u32 	%r8096, [%rd167];
	setp.eq.s32 	%p6, %r8096, 0;
	@%p6 bra 	$L__BB4_12;

	add.s64 	%rd244, %rd167, 4;
	and.b32  	%r8043, %r8096, 3;
	setp.eq.s32 	%p7, %r8043, 0;
	mov.u32 	%r8044, %r8096;
	@%p7 bra 	$L__BB4_10;

	mov.u64 	%rd239, %rd243;
	mov.u64 	%rd240, %rd244;
	mov.u32 	%r8044, %r8096;

$L__BB4_9:
	.pragma "nounroll";
	add.s32 	%r8044, %r8044, -1;
	add.s64 	%rd244, %rd240, 1;
	ld.global.u8 	%rs6, [%rd240];
	add.s64 	%rd243, %rd239, 1;
	st.local.u8 	[%rd239], %rs6;
	add.s32 	%r8043, %r8043, -1;
	setp.ne.s32 	%p8, %r8043, 0;
	mov.u64 	%rd239, %rd243;
	mov.u64 	%rd240, %rd244;
	@%p8 bra 	$L__BB4_9;

$L__BB4_10:
	add.s32 	%r315, %r8096, -1;
	setp.lt.u32 	%p9, %r315, 3;
	@%p9 bra 	$L__BB4_12;

$L__BB4_11:
	ld.global.u8 	%rs7, [%rd244];
	st.local.u8 	[%rd243], %rs7;
	ld.global.u8 	%rs8, [%rd244+1];
	st.local.u8 	[%rd243+1], %rs8;
	ld.global.u8 	%rs9, [%rd244+2];
	st.local.u8 	[%rd243+2], %rs9;
	add.s64 	%rd29, %rd244, 4;
	ld.global.u8 	%rs10, [%rd244+3];
	add.s64 	%rd30, %rd243, 4;
	st.local.u8 	[%rd243+3], %rs10;
	add.s32 	%r8044, %r8044, -4;
	setp.ne.s32 	%p10, %r8044, 0;
	mov.u64 	%rd243, %rd30;
	mov.u64 	%rd244, %rd29;
	@%p10 bra 	$L__BB4_11;

$L__BB4_12:
	mov.u32 	%r316, 0;
	add.u64 	%rd31, %SPL, 176;
	st.local.u32 	[%rd31], %r316;
	mov.u32 	%r317, 1732584193;
	st.local.u32 	[%rd31+4], %r317;
	mov.u32 	%r318, -271733879;
	st.local.u32 	[%rd31+8], %r318;
	mov.u32 	%r319, -1732584194;
	st.local.u32 	[%rd31+12], %r319;
	mov.u32 	%r320, 271733878;
	st.local.u32 	[%rd31+16], %r320;
	mov.u32 	%r321, -1009589776;
	st.local.u32 	[%rd31+20], %r321;
	@%p1 bra 	$L__BB4_25;

	st.local.u32 	[%rd31], %r8068;
	setp.lt.u32 	%p12, %r8068, 64;
	@%p12 bra 	$L__BB4_19;

	mov.u32 	%r8050, 1732584193;
	mov.u32 	%r8049, -271733879;
	mov.u32 	%r8048, -1732584194;
	mov.u32 	%r8047, 271733878;
	mov.u32 	%r8046, -1009589776;

$L__BB4_15:
	and.b64  	%rd171, %rd245, 3;
	setp.eq.s64 	%p13, %rd171, 0;
	@%p13 bra 	$L__BB4_17;

	ld.local.v4.u32 	{%r327, %r328, %r329, %r330}, [%rd247];
	mov.b32 	{%rs11, %rs12}, %r327;
	shr.u16 	%rs13, %rs11, 8;
	shr.u16 	%rs14, %rs12, 8;
	mov.b32 	{%rs15, %rs16}, %r328;
	shr.u16 	%rs17, %rs15, 8;
	shr.u16 	%rs18, %rs16, 8;
	mov.b32 	{%rs19, %rs20}, %r329;
	shr.u16 	%rs21, %rs19, 8;
	shr.u16 	%rs22, %rs20, 8;
	mov.b32 	{%rs23, %rs24}, %r330;
	shr.u16 	%rs25, %rs23, 8;
	shr.u16 	%rs26, %rs24, 8;
	cvt.u32.u16 	%r335, %rs11;
	shl.b32 	%r336, %r335, 24;
	cvt.u32.u16 	%r337, %rs13;
	shl.b32 	%r338, %r337, 16;
	or.b32  	%r339, %r338, %r336;
	and.b16  	%rs27, %rs12, 255;
	mul.wide.u16 	%r340, %rs27, 256;
	or.b32  	%r341, %r339, %r340;
	cvt.u32.u16 	%r342, %rs14;
	or.b32  	%r8067, %r341, %r342;
	cvt.u32.u16 	%r343, %rs15;
	shl.b32 	%r344, %r343, 24;
	cvt.u32.u16 	%r345, %rs17;
	shl.b32 	%r346, %r345, 16;
	or.b32  	%r347, %r346, %r344;
	and.b16  	%rs28, %rs16, 255;
	mul.wide.u16 	%r348, %rs28, 256;
	or.b32  	%r349, %r347, %r348;
	cvt.u32.u16 	%r350, %rs18;
	or.b32  	%r8066, %r349, %r350;
	cvt.u32.u16 	%r351, %rs19;
	shl.b32 	%r352, %r351, 24;
	cvt.u32.u16 	%r353, %rs21;
	shl.b32 	%r354, %r353, 16;
	or.b32  	%r355, %r354, %r352;
	and.b16  	%rs29, %rs20, 255;
	mul.wide.u16 	%r356, %rs29, 256;
	or.b32  	%r357, %r355, %r356;
	cvt.u32.u16 	%r358, %rs22;
	or.b32  	%r8065, %r357, %r358;
	cvt.u32.u16 	%r359, %rs23;
	shl.b32 	%r360, %r359, 24;
	cvt.u32.u16 	%r361, %rs25;
	shl.b32 	%r362, %r361, 16;
	or.b32  	%r363, %r362, %r360;
	and.b16  	%rs30, %rs24, 255;
	mul.wide.u16 	%r364, %rs30, 256;
	or.b32  	%r365, %r363, %r364;
	cvt.u32.u16 	%r366, %rs26;
	or.b32  	%r8064, %r365, %r366;
	ld.local.v4.u32 	{%r367, %r368, %r369, %r370}, [%rd247+16];
	mov.b32 	{%rs31, %rs32}, %r367;
	shr.u16 	%rs33, %rs31, 8;
	shr.u16 	%rs34, %rs32, 8;
	mov.b32 	{%rs35, %rs36}, %r368;
	shr.u16 	%rs37, %rs35, 8;
	shr.u16 	%rs38, %rs36, 8;
	mov.b32 	{%rs39, %rs40}, %r369;
	shr.u16 	%rs41, %rs39, 8;
	shr.u16 	%rs42, %rs40, 8;
	mov.b32 	{%rs43, %rs44}, %r370;
	shr.u16 	%rs45, %rs43, 8;
	shr.u16 	%rs46, %rs44, 8;
	cvt.u32.u16 	%r375, %rs31;
	shl.b32 	%r376, %r375, 24;
	cvt.u32.u16 	%r377, %rs33;
	shl.b32 	%r378, %r377, 16;
	or.b32  	%r379, %r378, %r376;
	and.b16  	%rs47, %rs32, 255;
	mul.wide.u16 	%r380, %rs47, 256;
	or.b32  	%r381, %r379, %r380;
	cvt.u32.u16 	%r382, %rs34;
	or.b32  	%r8063, %r381, %r382;
	cvt.u32.u16 	%r383, %rs35;
	shl.b32 	%r384, %r383, 24;
	cvt.u32.u16 	%r385, %rs37;
	shl.b32 	%r386, %r385, 16;
	or.b32  	%r387, %r386, %r384;
	and.b16  	%rs48, %rs36, 255;
	mul.wide.u16 	%r388, %rs48, 256;
	or.b32  	%r389, %r387, %r388;
	cvt.u32.u16 	%r390, %rs38;
	or.b32  	%r8062, %r389, %r390;
	cvt.u32.u16 	%r391, %rs39;
	shl.b32 	%r392, %r391, 24;
	cvt.u32.u16 	%r393, %rs41;
	shl.b32 	%r394, %r393, 16;
	or.b32  	%r395, %r394, %r392;
	and.b16  	%rs49, %rs40, 255;
	mul.wide.u16 	%r396, %rs49, 256;
	or.b32  	%r397, %r395, %r396;
	cvt.u32.u16 	%r398, %rs42;
	or.b32  	%r8061, %r397, %r398;
	cvt.u32.u16 	%r399, %rs43;
	shl.b32 	%r400, %r399, 24;
	cvt.u32.u16 	%r401, %rs45;
	shl.b32 	%r402, %r401, 16;
	or.b32  	%r403, %r402, %r400;
	and.b16  	%rs50, %rs44, 255;
	mul.wide.u16 	%r404, %rs50, 256;
	or.b32  	%r405, %r403, %r404;
	cvt.u32.u16 	%r406, %rs46;
	or.b32  	%r8060, %r405, %r406;
	ld.local.v4.u32 	{%r407, %r408, %r409, %r410}, [%rd247+32];
	mov.b32 	{%rs51, %rs52}, %r407;
	shr.u16 	%rs53, %rs51, 8;
	shr.u16 	%rs54, %rs52, 8;
	mov.b32 	{%rs55, %rs56}, %r408;
	shr.u16 	%rs57, %rs55, 8;
	shr.u16 	%rs58, %rs56, 8;
	mov.b32 	{%rs59, %rs60}, %r409;
	shr.u16 	%rs61, %rs59, 8;
	shr.u16 	%rs62, %rs60, 8;
	mov.b32 	{%rs63, %rs64}, %r410;
	shr.u16 	%rs65, %rs63, 8;
	shr.u16 	%rs66, %rs64, 8;
	cvt.u32.u16 	%r415, %rs51;
	shl.b32 	%r416, %r415, 24;
	cvt.u32.u16 	%r417, %rs53;
	shl.b32 	%r418, %r417, 16;
	or.b32  	%r419, %r418, %r416;
	and.b16  	%rs67, %rs52, 255;
	mul.wide.u16 	%r420, %rs67, 256;
	or.b32  	%r421, %r419, %r420;
	cvt.u32.u16 	%r422, %rs54;
	or.b32  	%r8059, %r421, %r422;
	cvt.u32.u16 	%r423, %rs55;
	shl.b32 	%r424, %r423, 24;
	cvt.u32.u16 	%r425, %rs57;
	shl.b32 	%r426, %r425, 16;
	or.b32  	%r427, %r426, %r424;
	and.b16  	%rs68, %rs56, 255;
	mul.wide.u16 	%r428, %rs68, 256;
	or.b32  	%r429, %r427, %r428;
	cvt.u32.u16 	%r430, %rs58;
	or.b32  	%r8058, %r429, %r430;
	cvt.u32.u16 	%r431, %rs59;
	shl.b32 	%r432, %r431, 24;
	cvt.u32.u16 	%r433, %rs61;
	shl.b32 	%r434, %r433, 16;
	or.b32  	%r435, %r434, %r432;
	and.b16  	%rs69, %rs60, 255;
	mul.wide.u16 	%r436, %rs69, 256;
	or.b32  	%r437, %r435, %r436;
	cvt.u32.u16 	%r438, %rs62;
	or.b32  	%r8057, %r437, %r438;
	cvt.u32.u16 	%r439, %rs63;
	shl.b32 	%r440, %r439, 24;
	cvt.u32.u16 	%r441, %rs65;
	shl.b32 	%r442, %r441, 16;
	or.b32  	%r443, %r442, %r440;
	and.b16  	%rs70, %rs64, 255;
	mul.wide.u16 	%r444, %rs70, 256;
	or.b32  	%r445, %r443, %r444;
	cvt.u32.u16 	%r446, %rs66;
	or.b32  	%r8056, %r445, %r446;
	ld.local.v4.u32 	{%r447, %r448, %r449, %r450}, [%rd247+48];
	mov.b32 	{%rs71, %rs72}, %r447;
	shr.u16 	%rs73, %rs71, 8;
	shr.u16 	%rs74, %rs72, 8;
	mov.b32 	{%rs75, %rs76}, %r448;
	shr.u16 	%rs77, %rs75, 8;
	shr.u16 	%rs78, %rs76, 8;
	mov.b32 	{%rs79, %rs80}, %r449;
	shr.u16 	%rs81, %rs79, 8;
	shr.u16 	%rs82, %rs80, 8;
	mov.b32 	{%rs83, %rs84}, %r450;
	shr.u16 	%rs85, %rs83, 8;
	shr.u16 	%rs86, %rs84, 8;
	cvt.u32.u16 	%r455, %rs71;
	shl.b32 	%r456, %r455, 24;
	cvt.u32.u16 	%r457, %rs73;
	shl.b32 	%r458, %r457, 16;
	or.b32  	%r459, %r458, %r456;
	and.b16  	%rs87, %rs72, 255;
	mul.wide.u16 	%r460, %rs87, 256;
	or.b32  	%r461, %r459, %r460;
	cvt.u32.u16 	%r462, %rs74;
	or.b32  	%r8055, %r461, %r462;
	cvt.u32.u16 	%r463, %rs75;
	shl.b32 	%r464, %r463, 24;
	cvt.u32.u16 	%r465, %rs77;
	shl.b32 	%r466, %r465, 16;
	or.b32  	%r467, %r466, %r464;
	and.b16  	%rs88, %rs76, 255;
	mul.wide.u16 	%r468, %rs88, 256;
	or.b32  	%r469, %r467, %r468;
	cvt.u32.u16 	%r470, %rs78;
	or.b32  	%r8054, %r469, %r470;
	cvt.u32.u16 	%r471, %rs79;
	shl.b32 	%r472, %r471, 24;
	cvt.u32.u16 	%r473, %rs81;
	shl.b32 	%r474, %r473, 16;
	or.b32  	%r475, %r474, %r472;
	and.b16  	%rs89, %rs80, 255;
	mul.wide.u16 	%r476, %rs89, 256;
	or.b32  	%r477, %r475, %r476;
	cvt.u32.u16 	%r478, %rs82;
	or.b32  	%r8053, %r477, %r478;
	cvt.u32.u16 	%r479, %rs83;
	shl.b32 	%r480, %r479, 24;
	cvt.u32.u16 	%r481, %rs85;
	shl.b32 	%r482, %r481, 16;
	or.b32  	%r483, %r482, %r480;
	and.b16  	%rs90, %rs84, 255;
	mul.wide.u16 	%r484, %rs90, 256;
	or.b32  	%r485, %r483, %r484;
	cvt.u32.u16 	%r486, %rs86;
	or.b32  	%r8052, %r485, %r486;
	bra.uni 	$L__BB4_18;

$L__BB4_17:
	ld.local.v4.u32 	{%r487, %r488, %r489, %r490}, [%rd247];
	shf.l.wrap.b32 	%r495, %r487, %r487, 16;
	shl.b32 	%r496, %r495, 8;
	and.b32  	%r497, %r496, -16711936;
	shr.u32 	%r498, %r495, 8;
	and.b32  	%r499, %r498, 16711935;
	or.b32  	%r8067, %r497, %r499;
	shf.l.wrap.b32 	%r500, %r488, %r488, 16;
	shl.b32 	%r501, %r500, 8;
	and.b32  	%r502, %r501, -16711936;
	shr.u32 	%r503, %r500, 8;
	and.b32  	%r504, %r503, 16711935;
	or.b32  	%r8066, %r502, %r504;
	shf.l.wrap.b32 	%r505, %r489, %r489, 16;
	shl.b32 	%r506, %r505, 8;
	and.b32  	%r507, %r506, -16711936;
	shr.u32 	%r508, %r505, 8;
	and.b32  	%r509, %r508, 16711935;
	or.b32  	%r8065, %r507, %r509;
	shf.l.wrap.b32 	%r510, %r490, %r490, 16;
	shl.b32 	%r511, %r510, 8;
	and.b32  	%r512, %r511, -16711936;
	shr.u32 	%r513, %r510, 8;
	and.b32  	%r514, %r513, 16711935;
	or.b32  	%r8064, %r512, %r514;
	ld.local.v4.u32 	{%r515, %r516, %r517, %r518}, [%rd247+16];
	shf.l.wrap.b32 	%r523, %r515, %r515, 16;
	shl.b32 	%r524, %r523, 8;
	and.b32  	%r525, %r524, -16711936;
	shr.u32 	%r526, %r523, 8;
	and.b32  	%r527, %r526, 16711935;
	or.b32  	%r8063, %r525, %r527;
	shf.l.wrap.b32 	%r528, %r516, %r516, 16;
	shl.b32 	%r529, %r528, 8;
	and.b32  	%r530, %r529, -16711936;
	shr.u32 	%r531, %r528, 8;
	and.b32  	%r532, %r531, 16711935;
	or.b32  	%r8062, %r530, %r532;
	shf.l.wrap.b32 	%r533, %r517, %r517, 16;
	shl.b32 	%r534, %r533, 8;
	and.b32  	%r535, %r534, -16711936;
	shr.u32 	%r536, %r533, 8;
	and.b32  	%r537, %r536, 16711935;
	or.b32  	%r8061, %r535, %r537;
	shf.l.wrap.b32 	%r538, %r518, %r518, 16;
	shl.b32 	%r539, %r538, 8;
	and.b32  	%r540, %r539, -16711936;
	shr.u32 	%r541, %r538, 8;
	and.b32  	%r542, %r541, 16711935;
	or.b32  	%r8060, %r540, %r542;
	ld.local.v4.u32 	{%r543, %r544, %r545, %r546}, [%rd247+32];
	shf.l.wrap.b32 	%r551, %r543, %r543, 16;
	shl.b32 	%r552, %r551, 8;
	and.b32  	%r553, %r552, -16711936;
	shr.u32 	%r554, %r551, 8;
	and.b32  	%r555, %r554, 16711935;
	or.b32  	%r8059, %r553, %r555;
	shf.l.wrap.b32 	%r556, %r544, %r544, 16;
	shl.b32 	%r557, %r556, 8;
	and.b32  	%r558, %r557, -16711936;
	shr.u32 	%r559, %r556, 8;
	and.b32  	%r560, %r559, 16711935;
	or.b32  	%r8058, %r558, %r560;
	shf.l.wrap.b32 	%r561, %r545, %r545, 16;
	shl.b32 	%r562, %r561, 8;
	and.b32  	%r563, %r562, -16711936;
	shr.u32 	%r564, %r561, 8;
	and.b32  	%r565, %r564, 16711935;
	or.b32  	%r8057, %r563, %r565;
	shf.l.wrap.b32 	%r566, %r546, %r546, 16;
	shl.b32 	%r567, %r566, 8;
	and.b32  	%r568, %r567, -16711936;
	shr.u32 	%r569, %r566, 8;
	and.b32  	%r570, %r569, 16711935;
	or.b32  	%r8056, %r568, %r570;
	ld.local.v4.u32 	{%r571, %r572, %r573, %r574}, [%rd247+48];
	shf.l.wrap.b32 	%r579, %r571, %r571, 16;
	shl.b32 	%r580, %r579, 8;
	and.b32  	%r581, %r580, -16711936;
	shr.u32 	%r582, %r579, 8;
	and.b32  	%r583, %r582, 16711935;
	or.b32  	%r8055, %r581, %r583;
	shf.l.wrap.b32 	%r584, %r572, %r572, 16;
	shl.b32 	%r585, %r584, 8;
	and.b32  	%r586, %r585, -16711936;
	shr.u32 	%r587, %r584, 8;
	and.b32  	%r588, %r587, 16711935;
	or.b32  	%r8054, %r586, %r588;
	shf.l.wrap.b32 	%r589, %r573, %r573, 16;
	shl.b32 	%r590, %r589, 8;
	and.b32  	%r591, %r590, -16711936;
	shr.u32 	%r592, %r589, 8;
	and.b32  	%r593, %r592, 16711935;
	or.b32  	%r8053, %r591, %r593;
	shf.l.wrap.b32 	%r594, %r574, %r574, 16;
	shl.b32 	%r595, %r594, 8;
	and.b32  	%r596, %r595, -16711936;
	shr.u32 	%r597, %r594, 8;
	and.b32  	%r598, %r597, 16711935;
	or.b32  	%r8052, %r596, %r598;

$L__BB4_18:
	shf.l.wrap.b32 	%r919, %r8050, %r8050, 5;
	add.s32 	%r920, %r8067, %r919;
	add.s32 	%r921, %r920, %r8046;
	// begin inline asm
	lop3.b32 %r599, %r8049, %r8048, %r8047, 202;
	// end inline asm
	add.s32 	%r922, %r921, %r599;
	add.s32 	%r608, %r922, 1518500249;
	shf.l.wrap.b32 	%r923, %r608, %r608, 5;
	shf.l.wrap.b32 	%r610, %r8049, %r8049, 30;
	// begin inline asm
	lop3.b32 %r603, %r8050, %r610, %r8048, 202;
	// end inline asm
	add.s32 	%r924, %r8066, %r8047;
	add.s32 	%r925, %r924, %r603;
	add.s32 	%r926, %r925, %r923;
	add.s32 	%r612, %r926, 1518500249;
	shf.l.wrap.b32 	%r927, %r612, %r612, 5;
	shf.l.wrap.b32 	%r614, %r8050, %r8050, 30;
	// begin inline asm
	lop3.b32 %r607, %r608, %r614, %r610, 202;
	// end inline asm
	add.s32 	%r928, %r8065, %r8048;
	add.s32 	%r929, %r928, %r607;
	add.s32 	%r930, %r929, %r927;
	add.s32 	%r616, %r930, 1518500249;
	shf.l.wrap.b32 	%r618, %r608, %r608, 30;
	shf.l.wrap.b32 	%r931, %r616, %r616, 5;
	// begin inline asm
	lop3.b32 %r611, %r612, %r618, %r614, 202;
	// end inline asm
	add.s32 	%r932, %r8064, %r610;
	add.s32 	%r933, %r932, %r611;
	add.s32 	%r934, %r933, %r931;
	add.s32 	%r620, %r934, 1518500249;
	shf.l.wrap.b32 	%r622, %r612, %r612, 30;
	shf.l.wrap.b32 	%r935, %r620, %r620, 5;
	// begin inline asm
	lop3.b32 %r615, %r616, %r622, %r618, 202;
	// end inline asm
	add.s32 	%r936, %r8063, %r614;
	add.s32 	%r937, %r936, %r615;
	add.s32 	%r938, %r937, %r935;
	add.s32 	%r624, %r938, 1518500249;
	shf.l.wrap.b32 	%r626, %r616, %r616, 30;
	shf.l.wrap.b32 	%r939, %r624, %r624, 5;
	// begin inline asm
	lop3.b32 %r619, %r620, %r626, %r622, 202;
	// end inline asm
	add.s32 	%r940, %r8062, %r619;
	add.s32 	%r941, %r940, %r618;
	add.s32 	%r942, %r941, %r939;
	add.s32 	%r628, %r942, 1518500249;
	shf.l.wrap.b32 	%r630, %r620, %r620, 30;
	shf.l.wrap.b32 	%r943, %r628, %r628, 5;
	// begin inline asm
	lop3.b32 %r623, %r624, %r630, %r626, 202;
	// end inline asm
	add.s32 	%r944, %r8061, %r623;
	add.s32 	%r945, %r944, %r622;
	add.s32 	%r946, %r945, %r943;
	add.s32 	%r632, %r946, 1518500249;
	shf.l.wrap.b32 	%r634, %r624, %r624, 30;
	shf.l.wrap.b32 	%r947, %r632, %r632, 5;
	// begin inline asm
	lop3.b32 %r627, %r628, %r634, %r630, 202;
	// end inline asm
	add.s32 	%r948, %r8060, %r627;
	add.s32 	%r949, %r948, %r626;
	add.s32 	%r950, %r949, %r947;
	add.s32 	%r636, %r950, 1518500249;
	shf.l.wrap.b32 	%r638, %r628, %r628, 30;
	shf.l.wrap.b32 	%r951, %r636, %r636, 5;
	// begin inline asm
	lop3.b32 %r631, %r632, %r638, %r634, 202;
	// end inline asm
	add.s32 	%r952, %r8059, %r631;
	add.s32 	%r953, %r952, %r630;
	add.s32 	%r954, %r953, %r951;
	add.s32 	%r640, %r954, 1518500249;
	shf.l.wrap.b32 	%r642, %r632, %r632, 30;
	shf.l.wrap.b32 	%r955, %r640, %r640, 5;
	// begin inline asm
	lop3.b32 %r635, %r636, %r642, %r638, 202;
	// end inline asm
	add.s32 	%r956, %r8058, %r635;
	add.s32 	%r957, %r956, %r634;
	add.s32 	%r958, %r957, %r955;
	add.s32 	%r644, %r958, 1518500249;
	shf.l.wrap.b32 	%r646, %r636, %r636, 30;
	shf.l.wrap.b32 	%r959, %r644, %r644, 5;
	// begin inline asm
	lop3.b32 %r639, %r640, %r646, %r642, 202;
	// end inline asm
	add.s32 	%r960, %r8057, %r639;
	add.s32 	%r961, %r960, %r638;
	add.s32 	%r962, %r961, %r959;
	add.s32 	%r648, %r962, 1518500249;
	shf.l.wrap.b32 	%r650, %r640, %r640, 30;
	shf.l.wrap.b32 	%r963, %r648, %r648, 5;
	// begin inline asm
	lop3.b32 %r643, %r644, %r650, %r646, 202;
	// end inline asm
	add.s32 	%r964, %r8056, %r643;
	add.s32 	%r965, %r964, %r642;
	add.s32 	%r966, %r965, %r963;
	add.s32 	%r652, %r966, 1518500249;
	shf.l.wrap.b32 	%r654, %r644, %r644, 30;
	shf.l.wrap.b32 	%r967, %r652, %r652, 5;
	// begin inline asm
	lop3.b32 %r647, %r648, %r654, %r650, 202;
	// end inline asm
	add.s32 	%r968, %r8055, %r647;
	add.s32 	%r969, %r968, %r646;
	add.s32 	%r970, %r969, %r967;
	add.s32 	%r656, %r970, 1518500249;
	shf.l.wrap.b32 	%r658, %r648, %r648, 30;
	shf.l.wrap.b32 	%r971, %r656, %r656, 5;
	// begin inline asm
	lop3.b32 %r651, %r652, %r658, %r654, 202;
	// end inline asm
	add.s32 	%r972, %r8054, %r651;
	add.s32 	%r973, %r972, %r650;
	add.s32 	%r974, %r973, %r971;
	add.s32 	%r660, %r974, 1518500249;
	shf.l.wrap.b32 	%r662, %r652, %r652, 30;
	shf.l.wrap.b32 	%r975, %r660, %r660, 5;
	// begin inline asm
	lop3.b32 %r655, %r656, %r662, %r658, 202;
	// end inline asm
	add.s32 	%r976, %r8053, %r655;
	add.s32 	%r977, %r976, %r654;
	add.s32 	%r978, %r977, %r975;
	add.s32 	%r664, %r978, 1518500249;
	shf.l.wrap.b32 	%r666, %r656, %r656, 30;
	shf.l.wrap.b32 	%r979, %r664, %r664, 5;
	// begin inline asm
	lop3.b32 %r659, %r660, %r666, %r662, 202;
	// end inline asm
	add.s32 	%r980, %r8052, %r659;
	add.s32 	%r981, %r980, %r658;
	add.s32 	%r982, %r981, %r979;
	add.s32 	%r668, %r982, 1518500249;
	shf.l.wrap.b32 	%r670, %r660, %r660, 30;
	shf.l.wrap.b32 	%r983, %r668, %r668, 5;
	// begin inline asm
	lop3.b32 %r663, %r664, %r670, %r666, 202;
	// end inline asm
	xor.b32  	%r984, %r8059, %r8054;
	xor.b32  	%r985, %r984, %r8065;
	xor.b32  	%r986, %r985, %r8067;
	shf.l.wrap.b32 	%r987, %r986, %r986, 1;
	add.s32 	%r988, %r987, %r663;
	add.s32 	%r989, %r988, %r662;
	add.s32 	%r990, %r989, %r983;
	add.s32 	%r672, %r990, 1518500249;
	shf.l.wrap.b32 	%r674, %r664, %r664, 30;
	shf.l.wrap.b32 	%r991, %r672, %r672, 5;
	// begin inline asm
	lop3.b32 %r667, %r668, %r674, %r670, 202;
	// end inline asm
	xor.b32  	%r992, %r8058, %r8053;
	xor.b32  	%r993, %r992, %r8064;
	xor.b32  	%r994, %r993, %r8066;
	shf.l.wrap.b32 	%r995, %r994, %r994, 1;
	add.s32 	%r996, %r995, %r667;
	add.s32 	%r997, %r996, %r666;
	add.s32 	%r998, %r997, %r991;
	add.s32 	%r676, %r998, 1518500249;
	shf.l.wrap.b32 	%r678, %r668, %r668, 30;
	shf.l.wrap.b32 	%r999, %r676, %r676, 5;
	// begin inline asm
	lop3.b32 %r671, %r672, %r678, %r674, 202;
	// end inline asm
	xor.b32  	%r1000, %r8057, %r8052;
	xor.b32  	%r1001, %r1000, %r8063;
	xor.b32  	%r1002, %r1001, %r8065;
	shf.l.wrap.b32 	%r1003, %r1002, %r1002, 1;
	add.s32 	%r1004, %r1003, %r671;
	add.s32 	%r1005, %r1004, %r670;
	add.s32 	%r1006, %r1005, %r999;
	add.s32 	%r680, %r1006, 1518500249;
	shf.l.wrap.b32 	%r682, %r672, %r672, 30;
	shf.l.wrap.b32 	%r1007, %r680, %r680, 5;
	// begin inline asm
	lop3.b32 %r675, %r676, %r682, %r678, 202;
	// end inline asm
	xor.b32  	%r1008, %r8062, %r8056;
	xor.b32  	%r1009, %r1008, %r8064;
	xor.b32  	%r1010, %r1009, %r987;
	shf.l.wrap.b32 	%r1011, %r1010, %r1010, 1;
	add.s32 	%r1012, %r1011, %r675;
	add.s32 	%r1013, %r1012, %r674;
	add.s32 	%r1014, %r1013, %r1007;
	add.s32 	%r684, %r1014, 1518500249;
	shf.l.wrap.b32 	%r686, %r676, %r676, 30;
	shf.l.wrap.b32 	%r1015, %r684, %r684, 5;
	// begin inline asm
	lop3.b32 %r679, %r680, %r686, %r682, 150;
	// end inline asm
	xor.b32  	%r1016, %r8061, %r8055;
	xor.b32  	%r1017, %r1016, %r8063;
	xor.b32  	%r1018, %r1017, %r995;
	shf.l.wrap.b32 	%r1019, %r1018, %r1018, 1;
	add.s32 	%r1020, %r1019, %r679;
	add.s32 	%r1021, %r1020, %r678;
	add.s32 	%r1022, %r1021, %r1015;
	add.s32 	%r688, %r1022, 1859775393;
	shf.l.wrap.b32 	%r690, %r680, %r680, 30;
	shf.l.wrap.b32 	%r1023, %r688, %r688, 5;
	// begin inline asm
	lop3.b32 %r683, %r684, %r690, %r686, 150;
	// end inline asm
	xor.b32  	%r1024, %r8060, %r8054;
	xor.b32  	%r1025, %r1024, %r8062;
	xor.b32  	%r1026, %r1025, %r1003;
	shf.l.wrap.b32 	%r1027, %r1026, %r1026, 1;
	add.s32 	%r1028, %r1027, %r683;
	add.s32 	%r1029, %r1028, %r682;
	add.s32 	%r1030, %r1029, %r1023;
	add.s32 	%r692, %r1030, 1859775393;
	shf.l.wrap.b32 	%r694, %r684, %r684, 30;
	shf.l.wrap.b32 	%r1031, %r692, %r692, 5;
	// begin inline asm
	lop3.b32 %r687, %r688, %r694, %r690, 150;
	// end inline asm
	xor.b32  	%r1032, %r8059, %r8053;
	xor.b32  	%r1033, %r1032, %r8061;
	xor.b32  	%r1034, %r1033, %r1011;
	shf.l.wrap.b32 	%r1035, %r1034, %r1034, 1;
	add.s32 	%r1036, %r1035, %r687;
	add.s32 	%r1037, %r1036, %r686;
	add.s32 	%r1038, %r1037, %r1031;
	add.s32 	%r696, %r1038, 1859775393;
	shf.l.wrap.b32 	%r698, %r688, %r688, 30;
	shf.l.wrap.b32 	%r1039, %r696, %r696, 5;
	// begin inline asm
	lop3.b32 %r691, %r692, %r698, %r694, 150;
	// end inline asm
	xor.b32  	%r1040, %r8058, %r8052;
	xor.b32  	%r1041, %r1040, %r8060;
	xor.b32  	%r1042, %r1041, %r1019;
	shf.l.wrap.b32 	%r1043, %r1042, %r1042, 1;
	add.s32 	%r1044, %r1043, %r691;
	add.s32 	%r1045, %r1044, %r690;
	add.s32 	%r1046, %r1045, %r1039;
	add.s32 	%r700, %r1046, 1859775393;
	shf.l.wrap.b32 	%r702, %r692, %r692, 30;
	shf.l.wrap.b32 	%r1047, %r700, %r700, 5;
	// begin inline asm
	lop3.b32 %r695, %r696, %r702, %r698, 150;
	// end inline asm
	xor.b32  	%r1048, %r8059, %r8057;
	xor.b32  	%r1049, %r1048, %r987;
	xor.b32  	%r1050, %r1049, %r1027;
	shf.l.wrap.b32 	%r1051, %r1050, %r1050, 1;
	add.s32 	%r1052, %r1051, %r695;
	add.s32 	%r1053, %r1052, %r694;
	add.s32 	%r1054, %r1053, %r1047;
	add.s32 	%r704, %r1054, 1859775393;
	shf.l.wrap.b32 	%r706, %r696, %r696, 30;
	shf.l.wrap.b32 	%r1055, %r704, %r704, 5;
	// begin inline asm
	lop3.b32 %r699, %r700, %r706, %r702, 150;
	// end inline asm
	xor.b32  	%r1056, %r8058, %r8056;
	xor.b32  	%r1057, %r1056, %r995;
	xor.b32  	%r1058, %r1057, %r1035;
	shf.l.wrap.b32 	%r1059, %r1058, %r1058, 1;
	add.s32 	%r1060, %r1059, %r699;
	add.s32 	%r1061, %r1060, %r698;
	add.s32 	%r1062, %r1061, %r1055;
	add.s32 	%r708, %r1062, 1859775393;
	shf.l.wrap.b32 	%r710, %r700, %r700, 30;
	shf.l.wrap.b32 	%r1063, %r708, %r708, 5;
	// begin inline asm
	lop3.b32 %r703, %r704, %r710, %r706, 150;
	// end inline asm
	xor.b32  	%r1064, %r8057, %r8055;
	xor.b32  	%r1065, %r1064, %r1003;
	xor.b32  	%r1066, %r1065, %r1043;
	shf.l.wrap.b32 	%r1067, %r1066, %r1066, 1;
	add.s32 	%r1068, %r1067, %r703;
	add.s32 	%r1069, %r1068, %r702;
	add.s32 	%r1070, %r1069, %r1063;
	add.s32 	%r712, %r1070, 1859775393;
	shf.l.wrap.b32 	%r714, %r704, %r704, 30;
	shf.l.wrap.b32 	%r1071, %r712, %r712, 5;
	// begin inline asm
	lop3.b32 %r707, %r708, %r714, %r710, 150;
	// end inline asm
	xor.b32  	%r1072, %r8056, %r8054;
	xor.b32  	%r1073, %r1072, %r1011;
	xor.b32  	%r1074, %r1073, %r1051;
	shf.l.wrap.b32 	%r1075, %r1074, %r1074, 1;
	add.s32 	%r1076, %r1075, %r707;
	add.s32 	%r1077, %r1076, %r706;
	add.s32 	%r1078, %r1077, %r1071;
	add.s32 	%r716, %r1078, 1859775393;
	shf.l.wrap.b32 	%r718, %r708, %r708, 30;
	shf.l.wrap.b32 	%r1079, %r716, %r716, 5;
	// begin inline asm
	lop3.b32 %r711, %r712, %r718, %r714, 150;
	// end inline asm
	xor.b32  	%r1080, %r8055, %r8053;
	xor.b32  	%r1081, %r1080, %r1019;
	xor.b32  	%r1082, %r1081, %r1059;
	shf.l.wrap.b32 	%r1083, %r1082, %r1082, 1;
	add.s32 	%r1084, %r1083, %r711;
	add.s32 	%r1085, %r1084, %r710;
	add.s32 	%r1086, %r1085, %r1079;
	add.s32 	%r720, %r1086, 1859775393;
	shf.l.wrap.b32 	%r722, %r712, %r712, 30;
	shf.l.wrap.b32 	%r1087, %r720, %r720, 5;
	// begin inline asm
	lop3.b32 %r715, %r716, %r722, %r718, 150;
	// end inline asm
	xor.b32  	%r1088, %r8054, %r8052;
	xor.b32  	%r1089, %r1088, %r1027;
	xor.b32  	%r1090, %r1089, %r1067;
	shf.l.wrap.b32 	%r1091, %r1090, %r1090, 1;
	add.s32 	%r1092, %r1091, %r715;
	add.s32 	%r1093, %r1092, %r714;
	add.s32 	%r1094, %r1093, %r1087;
	add.s32 	%r724, %r1094, 1859775393;
	shf.l.wrap.b32 	%r726, %r716, %r716, 30;
	shf.l.wrap.b32 	%r1095, %r724, %r724, 5;
	// begin inline asm
	lop3.b32 %r719, %r720, %r726, %r722, 150;
	// end inline asm
	xor.b32  	%r1096, %r987, %r8053;
	xor.b32  	%r1097, %r1096, %r1035;
	xor.b32  	%r1098, %r1097, %r1075;
	shf.l.wrap.b32 	%r1099, %r1098, %r1098, 1;
	add.s32 	%r1100, %r1099, %r719;
	add.s32 	%r1101, %r1100, %r718;
	add.s32 	%r1102, %r1101, %r1095;
	add.s32 	%r728, %r1102, 1859775393;
	shf.l.wrap.b32 	%r730, %r720, %r720, 30;
	shf.l.wrap.b32 	%r1103, %r728, %r728, 5;
	// begin inline asm
	lop3.b32 %r723, %r724, %r730, %r726, 150;
	// end inline asm
	xor.b32  	%r1104, %r995, %r8052;
	xor.b32  	%r1105, %r1104, %r1043;
	xor.b32  	%r1106, %r1105, %r1083;
	shf.l.wrap.b32 	%r1107, %r1106, %r1106, 1;
	add.s32 	%r1108, %r1107, %r723;
	add.s32 	%r1109, %r1108, %r722;
	add.s32 	%r1110, %r1109, %r1103;
	add.s32 	%r732, %r1110, 1859775393;
	shf.l.wrap.b32 	%r734, %r724, %r724, 30;
	shf.l.wrap.b32 	%r1111, %r732, %r732, 5;
	// begin inline asm
	lop3.b32 %r727, %r728, %r734, %r730, 150;
	// end inline asm
	xor.b32  	%r1112, %r987, %r1003;
	xor.b32  	%r1113, %r1112, %r1051;
	xor.b32  	%r1114, %r1113, %r1091;
	shf.l.wrap.b32 	%r1115, %r1114, %r1114, 1;
	add.s32 	%r1116, %r1115, %r727;
	add.s32 	%r1117, %r1116, %r726;
	add.s32 	%r1118, %r1117, %r1111;
	add.s32 	%r736, %r1118, 1859775393;
	shf.l.wrap.b32 	%r738, %r728, %r728, 30;
	shf.l.wrap.b32 	%r1119, %r736, %r736, 5;
	// begin inline asm
	lop3.b32 %r731, %r732, %r738, %r734, 150;
	// end inline asm
	xor.b32  	%r1120, %r1011, %r995;
	xor.b32  	%r1121, %r1120, %r1059;
	xor.b32  	%r1122, %r1121, %r1099;
	shf.l.wrap.b32 	%r1123, %r1122, %r1122, 1;
	add.s32 	%r1124, %r1123, %r731;
	add.s32 	%r1125, %r1124, %r730;
	add.s32 	%r1126, %r1125, %r1119;
	add.s32 	%r740, %r1126, 1859775393;
	shf.l.wrap.b32 	%r742, %r732, %r732, 30;
	shf.l.wrap.b32 	%r1127, %r740, %r740, 5;
	// begin inline asm
	lop3.b32 %r735, %r736, %r742, %r738, 150;
	// end inline asm
	xor.b32  	%r1128, %r1019, %r1003;
	xor.b32  	%r1129, %r1128, %r1067;
	xor.b32  	%r1130, %r1129, %r1107;
	shf.l.wrap.b32 	%r1131, %r1130, %r1130, 1;
	add.s32 	%r1132, %r1131, %r735;
	add.s32 	%r1133, %r1132, %r734;
	add.s32 	%r1134, %r1133, %r1127;
	add.s32 	%r744, %r1134, 1859775393;
	shf.l.wrap.b32 	%r746, %r736, %r736, 30;
	shf.l.wrap.b32 	%r1135, %r744, %r744, 5;
	// begin inline asm
	lop3.b32 %r739, %r740, %r746, %r742, 150;
	// end inline asm
	xor.b32  	%r1136, %r1011, %r1027;
	xor.b32  	%r1137, %r1136, %r1075;
	xor.b32  	%r1138, %r1137, %r1115;
	shf.l.wrap.b32 	%r1139, %r1138, %r1138, 1;
	add.s32 	%r1140, %r1139, %r739;
	add.s32 	%r1141, %r1140, %r738;
	add.s32 	%r1142, %r1141, %r1135;
	add.s32 	%r748, %r1142, 1859775393;
	shf.l.wrap.b32 	%r750, %r740, %r740, 30;
	shf.l.wrap.b32 	%r1143, %r748, %r748, 5;
	// begin inline asm
	lop3.b32 %r743, %r744, %r750, %r746, 150;
	// end inline asm
	xor.b32  	%r1144, %r1035, %r1019;
	xor.b32  	%r1145, %r1144, %r1083;
	xor.b32  	%r1146, %r1145, %r1123;
	shf.l.wrap.b32 	%r1147, %r1146, %r1146, 1;
	add.s32 	%r1148, %r1147, %r743;
	add.s32 	%r1149, %r1148, %r742;
	add.s32 	%r1150, %r1149, %r1143;
	add.s32 	%r752, %r1150, 1859775393;
	shf.l.wrap.b32 	%r754, %r744, %r744, 30;
	shf.l.wrap.b32 	%r1151, %r752, %r752, 5;
	// begin inline asm
	lop3.b32 %r747, %r748, %r754, %r750, 150;
	// end inline asm
	xor.b32  	%r1152, %r1043, %r1027;
	xor.b32  	%r1153, %r1152, %r1091;
	xor.b32  	%r1154, %r1153, %r1131;
	shf.l.wrap.b32 	%r1155, %r1154, %r1154, 1;
	add.s32 	%r1156, %r1155, %r747;
	add.s32 	%r1157, %r1156, %r746;
	add.s32 	%r1158, %r1157, %r1151;
	add.s32 	%r756, %r1158, 1859775393;
	shf.l.wrap.b32 	%r758, %r748, %r748, 30;
	shf.l.wrap.b32 	%r1159, %r756, %r756, 5;
	// begin inline asm
	lop3.b32 %r751, %r752, %r758, %r754, 150;
	// end inline asm
	xor.b32  	%r1160, %r1035, %r1051;
	xor.b32  	%r1161, %r1160, %r1099;
	xor.b32  	%r1162, %r1161, %r1139;
	shf.l.wrap.b32 	%r1163, %r1162, %r1162, 1;
	add.s32 	%r1164, %r1163, %r751;
	add.s32 	%r1165, %r1164, %r750;
	add.s32 	%r1166, %r1165, %r1159;
	add.s32 	%r760, %r1166, 1859775393;
	shf.l.wrap.b32 	%r762, %r752, %r752, 30;
	shf.l.wrap.b32 	%r1167, %r760, %r760, 5;
	// begin inline asm
	lop3.b32 %r755, %r756, %r762, %r758, 150;
	// end inline asm
	xor.b32  	%r1168, %r1059, %r1043;
	xor.b32  	%r1169, %r1168, %r1107;
	xor.b32  	%r1170, %r1169, %r1147;
	shf.l.wrap.b32 	%r1171, %r1170, %r1170, 1;
	add.s32 	%r1172, %r1171, %r755;
	add.s32 	%r1173, %r1172, %r754;
	add.s32 	%r1174, %r1173, %r1167;
	add.s32 	%r764, %r1174, 1859775393;
	shf.l.wrap.b32 	%r766, %r756, %r756, 30;
	shf.l.wrap.b32 	%r1175, %r764, %r764, 5;
	// begin inline asm
	lop3.b32 %r759, %r760, %r766, %r762, 232;
	// end inline asm
	xor.b32  	%r1176, %r1067, %r1051;
	xor.b32  	%r1177, %r1176, %r1115;
	xor.b32  	%r1178, %r1177, %r1155;
	shf.l.wrap.b32 	%r1179, %r1178, %r1178, 1;
	add.s32 	%r1180, %r1179, %r759;
	add.s32 	%r1181, %r1180, %r758;
	add.s32 	%r1182, %r1181, %r1175;
	add.s32 	%r768, %r1182, -1894007588;
	shf.l.wrap.b32 	%r770, %r760, %r760, 30;
	shf.l.wrap.b32 	%r1183, %r768, %r768, 5;
	// begin inline asm
	lop3.b32 %r763, %r764, %r770, %r766, 232;
	// end inline asm
	xor.b32  	%r1184, %r1059, %r1075;
	xor.b32  	%r1185, %r1184, %r1123;
	xor.b32  	%r1186, %r1185, %r1163;
	shf.l.wrap.b32 	%r1187, %r1186, %r1186, 1;
	add.s32 	%r1188, %r1187, %r763;
	add.s32 	%r1189, %r1188, %r762;
	add.s32 	%r1190, %r1189, %r1183;
	add.s32 	%r772, %r1190, -1894007588;
	shf.l.wrap.b32 	%r774, %r764, %r764, 30;
	shf.l.wrap.b32 	%r1191, %r772, %r772, 5;
	// begin inline asm
	lop3.b32 %r767, %r768, %r774, %r770, 232;
	// end inline asm
	xor.b32  	%r1192, %r1083, %r1067;
	xor.b32  	%r1193, %r1192, %r1131;
	xor.b32  	%r1194, %r1193, %r1171;
	shf.l.wrap.b32 	%r1195, %r1194, %r1194, 1;
	add.s32 	%r1196, %r1195, %r767;
	add.s32 	%r1197, %r1196, %r766;
	add.s32 	%r1198, %r1197, %r1191;
	add.s32 	%r776, %r1198, -1894007588;
	shf.l.wrap.b32 	%r778, %r768, %r768, 30;
	shf.l.wrap.b32 	%r1199, %r776, %r776, 5;
	// begin inline asm
	lop3.b32 %r771, %r772, %r778, %r774, 232;
	// end inline asm
	xor.b32  	%r1200, %r1091, %r1075;
	xor.b32  	%r1201, %r1200, %r1139;
	xor.b32  	%r1202, %r1201, %r1179;
	shf.l.wrap.b32 	%r1203, %r1202, %r1202, 1;
	add.s32 	%r1204, %r1203, %r771;
	add.s32 	%r1205, %r1204, %r770;
	add.s32 	%r1206, %r1205, %r1199;
	add.s32 	%r780, %r1206, -1894007588;
	shf.l.wrap.b32 	%r782, %r772, %r772, 30;
	shf.l.wrap.b32 	%r1207, %r780, %r780, 5;
	// begin inline asm
	lop3.b32 %r775, %r776, %r782, %r778, 232;
	// end inline asm
	xor.b32  	%r1208, %r1083, %r1099;
	xor.b32  	%r1209, %r1208, %r1147;
	xor.b32  	%r1210, %r1209, %r1187;
	shf.l.wrap.b32 	%r1211, %r1210, %r1210, 1;
	add.s32 	%r1212, %r1211, %r775;
	add.s32 	%r1213, %r1212, %r774;
	add.s32 	%r1214, %r1213, %r1207;
	add.s32 	%r784, %r1214, -1894007588;
	shf.l.wrap.b32 	%r786, %r776, %r776, 30;
	shf.l.wrap.b32 	%r1215, %r784, %r784, 5;
	// begin inline asm
	lop3.b32 %r779, %r780, %r786, %r782, 232;
	// end inline asm
	xor.b32  	%r1216, %r1107, %r1091;
	xor.b32  	%r1217, %r1216, %r1155;
	xor.b32  	%r1218, %r1217, %r1195;
	shf.l.wrap.b32 	%r1219, %r1218, %r1218, 1;
	add.s32 	%r1220, %r1219, %r779;
	add.s32 	%r1221, %r1220, %r778;
	add.s32 	%r1222, %r1221, %r1215;
	add.s32 	%r788, %r1222, -1894007588;
	shf.l.wrap.b32 	%r790, %r780, %r780, 30;
	shf.l.wrap.b32 	%r1223, %r788, %r788, 5;
	// begin inline asm
	lop3.b32 %r783, %r784, %r790, %r786, 232;
	// end inline asm
	xor.b32  	%r1224, %r1115, %r1099;
	xor.b32  	%r1225, %r1224, %r1163;
	xor.b32  	%r1226, %r1225, %r1203;
	shf.l.wrap.b32 	%r1227, %r1226, %r1226, 1;
	add.s32 	%r1228, %r1227, %r783;
	add.s32 	%r1229, %r1228, %r782;
	add.s32 	%r1230, %r1229, %r1223;
	add.s32 	%r792, %r1230, -1894007588;
	shf.l.wrap.b32 	%r794, %r784, %r784, 30;
	shf.l.wrap.b32 	%r1231, %r792, %r792, 5;
	// begin inline asm
	lop3.b32 %r787, %r788, %r794, %r790, 232;
	// end inline asm
	xor.b32  	%r1232, %r1107, %r1123;
	xor.b32  	%r1233, %r1232, %r1171;
	xor.b32  	%r1234, %r1233, %r1211;
	shf.l.wrap.b32 	%r1235, %r1234, %r1234, 1;
	add.s32 	%r1236, %r1235, %r787;
	add.s32 	%r1237, %r1236, %r786;
	add.s32 	%r1238, %r1237, %r1231;
	add.s32 	%r796, %r1238, -1894007588;
	shf.l.wrap.b32 	%r798, %r788, %r788, 30;
	shf.l.wrap.b32 	%r1239, %r796, %r796, 5;
	// begin inline asm
	lop3.b32 %r791, %r792, %r798, %r794, 232;
	// end inline asm
	xor.b32  	%r1240, %r1131, %r1115;
	xor.b32  	%r1241, %r1240, %r1179;
	xor.b32  	%r1242, %r1241, %r1219;
	shf.l.wrap.b32 	%r1243, %r1242, %r1242, 1;
	add.s32 	%r1244, %r1243, %r791;
	add.s32 	%r1245, %r1244, %r790;
	add.s32 	%r1246, %r1245, %r1239;
	add.s32 	%r800, %r1246, -1894007588;
	shf.l.wrap.b32 	%r802, %r792, %r792, 30;
	shf.l.wrap.b32 	%r1247, %r800, %r800, 5;
	// begin inline asm
	lop3.b32 %r795, %r796, %r802, %r798, 232;
	// end inline asm
	xor.b32  	%r1248, %r1139, %r1123;
	xor.b32  	%r1249, %r1248, %r1187;
	xor.b32  	%r1250, %r1249, %r1227;
	shf.l.wrap.b32 	%r1251, %r1250, %r1250, 1;
	add.s32 	%r1252, %r1251, %r795;
	add.s32 	%r1253, %r1252, %r794;
	add.s32 	%r1254, %r1253, %r1247;
	add.s32 	%r804, %r1254, -1894007588;
	shf.l.wrap.b32 	%r806, %r796, %r796, 30;
	shf.l.wrap.b32 	%r1255, %r804, %r804, 5;
	// begin inline asm
	lop3.b32 %r799, %r800, %r806, %r802, 232;
	// end inline asm
	xor.b32  	%r1256, %r1131, %r1147;
	xor.b32  	%r1257, %r1256, %r1195;
	xor.b32  	%r1258, %r1257, %r1235;
	shf.l.wrap.b32 	%r1259, %r1258, %r1258, 1;
	add.s32 	%r1260, %r1259, %r799;
	add.s32 	%r1261, %r1260, %r798;
	add.s32 	%r1262, %r1261, %r1255;
	add.s32 	%r808, %r1262, -1894007588;
	shf.l.wrap.b32 	%r810, %r800, %r800, 30;
	shf.l.wrap.b32 	%r1263, %r808, %r808, 5;
	// begin inline asm
	lop3.b32 %r803, %r804, %r810, %r806, 232;
	// end inline asm
	xor.b32  	%r1264, %r1155, %r1139;
	xor.b32  	%r1265, %r1264, %r1203;
	xor.b32  	%r1266, %r1265, %r1243;
	shf.l.wrap.b32 	%r1267, %r1266, %r1266, 1;
	add.s32 	%r1268, %r1267, %r803;
	add.s32 	%r1269, %r1268, %r802;
	add.s32 	%r1270, %r1269, %r1263;
	add.s32 	%r812, %r1270, -1894007588;
	shf.l.wrap.b32 	%r814, %r804, %r804, 30;
	shf.l.wrap.b32 	%r1271, %r812, %r812, 5;
	// begin inline asm
	lop3.b32 %r807, %r808, %r814, %r810, 232;
	// end inline asm
	xor.b32  	%r1272, %r1163, %r1147;
	xor.b32  	%r1273, %r1272, %r1211;
	xor.b32  	%r1274, %r1273, %r1251;
	shf.l.wrap.b32 	%r1275, %r1274, %r1274, 1;
	add.s32 	%r1276, %r1275, %r807;
	add.s32 	%r1277, %r1276, %r806;
	add.s32 	%r1278, %r1277, %r1271;
	add.s32 	%r816, %r1278, -1894007588;
	shf.l.wrap.b32 	%r818, %r808, %r808, 30;
	shf.l.wrap.b32 	%r1279, %r816, %r816, 5;
	// begin inline asm
	lop3.b32 %r811, %r812, %r818, %r814, 232;
	// end inline asm
	xor.b32  	%r1280, %r1155, %r1171;
	xor.b32  	%r1281, %r1280, %r1219;
	xor.b32  	%r1282, %r1281, %r1259;
	shf.l.wrap.b32 	%r1283, %r1282, %r1282, 1;
	add.s32 	%r1284, %r1283, %r811;
	add.s32 	%r1285, %r1284, %r810;
	add.s32 	%r1286, %r1285, %r1279;
	add.s32 	%r820, %r1286, -1894007588;
	shf.l.wrap.b32 	%r822, %r812, %r812, 30;
	shf.l.wrap.b32 	%r1287, %r820, %r820, 5;
	// begin inline asm
	lop3.b32 %r815, %r816, %r822, %r818, 232;
	// end inline asm
	xor.b32  	%r1288, %r1179, %r1163;
	xor.b32  	%r1289, %r1288, %r1227;
	xor.b32  	%r1290, %r1289, %r1267;
	shf.l.wrap.b32 	%r1291, %r1290, %r1290, 1;
	add.s32 	%r1292, %r1291, %r815;
	add.s32 	%r1293, %r1292, %r814;
	add.s32 	%r1294, %r1293, %r1287;
	add.s32 	%r824, %r1294, -1894007588;
	shf.l.wrap.b32 	%r826, %r816, %r816, 30;
	shf.l.wrap.b32 	%r1295, %r824, %r824, 5;
	// begin inline asm
	lop3.b32 %r819, %r820, %r826, %r822, 232;
	// end inline asm
	xor.b32  	%r1296, %r1187, %r1171;
	xor.b32  	%r1297, %r1296, %r1235;
	xor.b32  	%r1298, %r1297, %r1275;
	shf.l.wrap.b32 	%r1299, %r1298, %r1298, 1;
	add.s32 	%r1300, %r1299, %r819;
	add.s32 	%r1301, %r1300, %r818;
	add.s32 	%r1302, %r1301, %r1295;
	add.s32 	%r828, %r1302, -1894007588;
	shf.l.wrap.b32 	%r830, %r820, %r820, 30;
	shf.l.wrap.b32 	%r1303, %r828, %r828, 5;
	// begin inline asm
	lop3.b32 %r823, %r824, %r830, %r826, 232;
	// end inline asm
	xor.b32  	%r1304, %r1179, %r1195;
	xor.b32  	%r1305, %r1304, %r1243;
	xor.b32  	%r1306, %r1305, %r1283;
	shf.l.wrap.b32 	%r1307, %r1306, %r1306, 1;
	add.s32 	%r1308, %r1307, %r823;
	add.s32 	%r1309, %r1308, %r822;
	add.s32 	%r1310, %r1309, %r1303;
	add.s32 	%r832, %r1310, -1894007588;
	shf.l.wrap.b32 	%r834, %r824, %r824, 30;
	shf.l.wrap.b32 	%r1311, %r832, %r832, 5;
	// begin inline asm
	lop3.b32 %r827, %r828, %r834, %r830, 232;
	// end inline asm
	xor.b32  	%r1312, %r1203, %r1187;
	xor.b32  	%r1313, %r1312, %r1251;
	xor.b32  	%r1314, %r1313, %r1291;
	shf.l.wrap.b32 	%r1315, %r1314, %r1314, 1;
	add.s32 	%r1316, %r1315, %r827;
	add.s32 	%r1317, %r1316, %r826;
	add.s32 	%r1318, %r1317, %r1311;
	add.s32 	%r836, %r1318, -1894007588;
	shf.l.wrap.b32 	%r838, %r828, %r828, 30;
	shf.l.wrap.b32 	%r1319, %r836, %r836, 5;
	// begin inline asm
	lop3.b32 %r831, %r832, %r838, %r834, 232;
	// end inline asm
	xor.b32  	%r1320, %r1211, %r1195;
	xor.b32  	%r1321, %r1320, %r1259;
	xor.b32  	%r1322, %r1321, %r1299;
	shf.l.wrap.b32 	%r1323, %r1322, %r1322, 1;
	add.s32 	%r1324, %r1323, %r831;
	add.s32 	%r1325, %r1324, %r830;
	add.s32 	%r1326, %r1325, %r1319;
	add.s32 	%r840, %r1326, -1894007588;
	shf.l.wrap.b32 	%r842, %r832, %r832, 30;
	shf.l.wrap.b32 	%r1327, %r840, %r840, 5;
	// begin inline asm
	lop3.b32 %r835, %r836, %r842, %r838, 232;
	// end inline asm
	xor.b32  	%r1328, %r1203, %r1219;
	xor.b32  	%r1329, %r1328, %r1267;
	xor.b32  	%r1330, %r1329, %r1307;
	shf.l.wrap.b32 	%r1331, %r1330, %r1330, 1;
	add.s32 	%r1332, %r1331, %r835;
	add.s32 	%r1333, %r1332, %r834;
	add.s32 	%r1334, %r1333, %r1327;
	add.s32 	%r844, %r1334, -1894007588;
	shf.l.wrap.b32 	%r846, %r836, %r836, 30;
	shf.l.wrap.b32 	%r1335, %r844, %r844, 5;
	// begin inline asm
	lop3.b32 %r839, %r840, %r846, %r842, 150;
	// end inline asm
	xor.b32  	%r1336, %r1227, %r1211;
	xor.b32  	%r1337, %r1336, %r1275;
	xor.b32  	%r1338, %r1337, %r1315;
	shf.l.wrap.b32 	%r1339, %r1338, %r1338, 1;
	add.s32 	%r1340, %r1339, %r839;
	add.s32 	%r1341, %r1340, %r838;
	add.s32 	%r1342, %r1341, %r1335;
	add.s32 	%r848, %r1342, -899497514;
	shf.l.wrap.b32 	%r850, %r840, %r840, 30;
	shf.l.wrap.b32 	%r1343, %r848, %r848, 5;
	// begin inline asm
	lop3.b32 %r843, %r844, %r850, %r846, 150;
	// end inline asm
	xor.b32  	%r1344, %r1235, %r1219;
	xor.b32  	%r1345, %r1344, %r1283;
	xor.b32  	%r1346, %r1345, %r1323;
	shf.l.wrap.b32 	%r1347, %r1346, %r1346, 1;
	add.s32 	%r1348, %r1347, %r843;
	add.s32 	%r1349, %r1348, %r842;
	add.s32 	%r1350, %r1349, %r1343;
	add.s32 	%r852, %r1350, -899497514;
	shf.l.wrap.b32 	%r854, %r844, %r844, 30;
	shf.l.wrap.b32 	%r1351, %r852, %r852, 5;
	// begin inline asm
	lop3.b32 %r847, %r848, %r854, %r850, 150;
	// end inline asm
	xor.b32  	%r1352, %r1227, %r1243;
	xor.b32  	%r1353, %r1352, %r1291;
	xor.b32  	%r1354, %r1353, %r1331;
	shf.l.wrap.b32 	%r1355, %r1354, %r1354, 1;
	add.s32 	%r1356, %r1355, %r847;
	add.s32 	%r1357, %r1356, %r846;
	add.s32 	%r1358, %r1357, %r1351;
	add.s32 	%r856, %r1358, -899497514;
	shf.l.wrap.b32 	%r858, %r848, %r848, 30;
	shf.l.wrap.b32 	%r1359, %r856, %r856, 5;
	// begin inline asm
	lop3.b32 %r851, %r852, %r858, %r854, 150;
	// end inline asm
	xor.b32  	%r1360, %r1251, %r1235;
	xor.b32  	%r1361, %r1360, %r1299;
	xor.b32  	%r1362, %r1361, %r1339;
	shf.l.wrap.b32 	%r1363, %r1362, %r1362, 1;
	add.s32 	%r1364, %r1363, %r851;
	add.s32 	%r1365, %r1364, %r850;
	add.s32 	%r1366, %r1365, %r1359;
	add.s32 	%r860, %r1366, -899497514;
	shf.l.wrap.b32 	%r862, %r852, %r852, 30;
	shf.l.wrap.b32 	%r1367, %r860, %r860, 5;
	// begin inline asm
	lop3.b32 %r855, %r856, %r862, %r858, 150;
	// end inline asm
	xor.b32  	%r1368, %r1259, %r1243;
	xor.b32  	%r1369, %r1368, %r1307;
	xor.b32  	%r1370, %r1369, %r1347;
	shf.l.wrap.b32 	%r1371, %r1370, %r1370, 1;
	add.s32 	%r1372, %r1371, %r855;
	add.s32 	%r1373, %r1372, %r854;
	add.s32 	%r1374, %r1373, %r1367;
	add.s32 	%r864, %r1374, -899497514;
	shf.l.wrap.b32 	%r866, %r856, %r856, 30;
	shf.l.wrap.b32 	%r1375, %r864, %r864, 5;
	// begin inline asm
	lop3.b32 %r859, %r860, %r866, %r862, 150;
	// end inline asm
	xor.b32  	%r1376, %r1251, %r1267;
	xor.b32  	%r1377, %r1376, %r1315;
	xor.b32  	%r1378, %r1377, %r1355;
	shf.l.wrap.b32 	%r1379, %r1378, %r1378, 1;
	add.s32 	%r1380, %r1379, %r859;
	add.s32 	%r1381, %r1380, %r858;
	add.s32 	%r1382, %r1381, %r1375;
	add.s32 	%r868, %r1382, -899497514;
	shf.l.wrap.b32 	%r870, %r860, %r860, 30;
	shf.l.wrap.b32 	%r1383, %r868, %r868, 5;
	// begin inline asm
	lop3.b32 %r863, %r864, %r870, %r866, 150;
	// end inline asm
	xor.b32  	%r1384, %r1275, %r1259;
	xor.b32  	%r1385, %r1384, %r1323;
	xor.b32  	%r1386, %r1385, %r1363;
	shf.l.wrap.b32 	%r1387, %r1386, %r1386, 1;
	add.s32 	%r1388, %r1387, %r863;
	add.s32 	%r1389, %r1388, %r862;
	add.s32 	%r1390, %r1389, %r1383;
	add.s32 	%r872, %r1390, -899497514;
	shf.l.wrap.b32 	%r874, %r864, %r864, 30;
	shf.l.wrap.b32 	%r1391, %r872, %r872, 5;
	// begin inline asm
	lop3.b32 %r867, %r868, %r874, %r870, 150;
	// end inline asm
	xor.b32  	%r1392, %r1283, %r1267;
	xor.b32  	%r1393, %r1392, %r1331;
	xor.b32  	%r1394, %r1393, %r1371;
	shf.l.wrap.b32 	%r1395, %r1394, %r1394, 1;
	add.s32 	%r1396, %r1395, %r867;
	add.s32 	%r1397, %r1396, %r866;
	add.s32 	%r1398, %r1397, %r1391;
	add.s32 	%r876, %r1398, -899497514;
	shf.l.wrap.b32 	%r878, %r868, %r868, 30;
	shf.l.wrap.b32 	%r1399, %r876, %r876, 5;
	// begin inline asm
	lop3.b32 %r871, %r872, %r878, %r874, 150;
	// end inline asm
	xor.b32  	%r1400, %r1275, %r1291;
	xor.b32  	%r1401, %r1400, %r1339;
	xor.b32  	%r1402, %r1401, %r1379;
	shf.l.wrap.b32 	%r1403, %r1402, %r1402, 1;
	add.s32 	%r1404, %r1403, %r871;
	add.s32 	%r1405, %r1404, %r870;
	add.s32 	%r1406, %r1405, %r1399;
	add.s32 	%r880, %r1406, -899497514;
	shf.l.wrap.b32 	%r882, %r872, %r872, 30;
	shf.l.wrap.b32 	%r1407, %r880, %r880, 5;
	// begin inline asm
	lop3.b32 %r875, %r876, %r882, %r878, 150;
	// end inline asm
	xor.b32  	%r1408, %r1299, %r1283;
	xor.b32  	%r1409, %r1408, %r1347;
	xor.b32  	%r1410, %r1409, %r1387;
	shf.l.wrap.b32 	%r1411, %r1410, %r1410, 1;
	add.s32 	%r1412, %r1411, %r875;
	add.s32 	%r1413, %r1412, %r874;
	add.s32 	%r1414, %r1413, %r1407;
	add.s32 	%r884, %r1414, -899497514;
	shf.l.wrap.b32 	%r886, %r876, %r876, 30;
	shf.l.wrap.b32 	%r1415, %r884, %r884, 5;
	// begin inline asm
	lop3.b32 %r879, %r880, %r886, %r882, 150;
	// end inline asm
	xor.b32  	%r1416, %r1307, %r1291;
	xor.b32  	%r1417, %r1416, %r1355;
	xor.b32  	%r1418, %r1417, %r1395;
	shf.l.wrap.b32 	%r1419, %r1418, %r1418, 1;
	add.s32 	%r1420, %r1419, %r879;
	add.s32 	%r1421, %r1420, %r878;
	add.s32 	%r1422, %r1421, %r1415;
	add.s32 	%r888, %r1422, -899497514;
	shf.l.wrap.b32 	%r890, %r880, %r880, 30;
	shf.l.wrap.b32 	%r1423, %r888, %r888, 5;
	// begin inline asm
	lop3.b32 %r883, %r884, %r890, %r886, 150;
	// end inline asm
	xor.b32  	%r1424, %r1299, %r1315;
	xor.b32  	%r1425, %r1424, %r1363;
	xor.b32  	%r1426, %r1425, %r1403;
	shf.l.wrap.b32 	%r1427, %r1426, %r1426, 1;
	add.s32 	%r1428, %r1427, %r883;
	add.s32 	%r1429, %r1428, %r882;
	add.s32 	%r1430, %r1429, %r1423;
	add.s32 	%r892, %r1430, -899497514;
	shf.l.wrap.b32 	%r894, %r884, %r884, 30;
	shf.l.wrap.b32 	%r1431, %r892, %r892, 5;
	// begin inline asm
	lop3.b32 %r887, %r888, %r894, %r890, 150;
	// end inline asm
	xor.b32  	%r1432, %r1323, %r1307;
	xor.b32  	%r1433, %r1432, %r1371;
	xor.b32  	%r1434, %r1433, %r1411;
	shf.l.wrap.b32 	%r1435, %r1434, %r1434, 1;
	add.s32 	%r1436, %r1435, %r887;
	add.s32 	%r1437, %r1436, %r886;
	add.s32 	%r1438, %r1437, %r1431;
	add.s32 	%r896, %r1438, -899497514;
	shf.l.wrap.b32 	%r898, %r888, %r888, 30;
	shf.l.wrap.b32 	%r1439, %r896, %r896, 5;
	// begin inline asm
	lop3.b32 %r891, %r892, %r898, %r894, 150;
	// end inline asm
	xor.b32  	%r1440, %r1331, %r1315;
	xor.b32  	%r1441, %r1440, %r1379;
	xor.b32  	%r1442, %r1441, %r1419;
	shf.l.wrap.b32 	%r1443, %r1442, %r1442, 1;
	add.s32 	%r1444, %r1443, %r891;
	add.s32 	%r1445, %r1444, %r890;
	add.s32 	%r1446, %r1445, %r1439;
	add.s32 	%r900, %r1446, -899497514;
	shf.l.wrap.b32 	%r902, %r892, %r892, 30;
	shf.l.wrap.b32 	%r1447, %r900, %r900, 5;
	// begin inline asm
	lop3.b32 %r895, %r896, %r902, %r898, 150;
	// end inline asm
	xor.b32  	%r1448, %r1323, %r1339;
	xor.b32  	%r1449, %r1448, %r1387;
	xor.b32  	%r1450, %r1449, %r1427;
	shf.l.wrap.b32 	%r1451, %r1450, %r1450, 1;
	add.s32 	%r1452, %r1451, %r895;
	add.s32 	%r1453, %r1452, %r894;
	add.s32 	%r1454, %r1453, %r1447;
	add.s32 	%r904, %r1454, -899497514;
	shf.l.wrap.b32 	%r906, %r896, %r896, 30;
	shf.l.wrap.b32 	%r1455, %r904, %r904, 5;
	// begin inline asm
	lop3.b32 %r899, %r900, %r906, %r902, 150;
	// end inline asm
	xor.b32  	%r1456, %r1347, %r1331;
	xor.b32  	%r1457, %r1456, %r1395;
	xor.b32  	%r1458, %r1457, %r1435;
	shf.l.wrap.b32 	%r1459, %r1458, %r1458, 1;
	add.s32 	%r1460, %r1459, %r899;
	add.s32 	%r1461, %r1460, %r898;
	add.s32 	%r1462, %r1461, %r1455;
	add.s32 	%r908, %r1462, -899497514;
	shf.l.wrap.b32 	%r910, %r900, %r900, 30;
	shf.l.wrap.b32 	%r1463, %r908, %r908, 5;
	// begin inline asm
	lop3.b32 %r903, %r904, %r910, %r906, 150;
	// end inline asm
	xor.b32  	%r1464, %r1355, %r1339;
	xor.b32  	%r1465, %r1464, %r1403;
	xor.b32  	%r1466, %r1465, %r1443;
	shf.l.wrap.b32 	%r1467, %r1466, %r1466, 1;
	add.s32 	%r1468, %r903, %r1467;
	add.s32 	%r1469, %r1468, %r902;
	add.s32 	%r1470, %r1469, %r1463;
	add.s32 	%r912, %r1470, -899497514;
	shf.l.wrap.b32 	%r914, %r904, %r904, 30;
	shf.l.wrap.b32 	%r1471, %r912, %r912, 5;
	// begin inline asm
	lop3.b32 %r907, %r908, %r914, %r910, 150;
	// end inline asm
	xor.b32  	%r1472, %r1347, %r1363;
	xor.b32  	%r1473, %r1472, %r1411;
	xor.b32  	%r1474, %r1473, %r1451;
	shf.l.wrap.b32 	%r1475, %r1474, %r1474, 1;
	add.s32 	%r1476, %r1475, %r907;
	add.s32 	%r1477, %r1476, %r906;
	add.s32 	%r1478, %r1477, %r1471;
	add.s32 	%r916, %r1478, -899497514;
	shf.l.wrap.b32 	%r918, %r908, %r908, 30;
	shf.l.wrap.b32 	%r1479, %r916, %r916, 5;
	// begin inline asm
	lop3.b32 %r911, %r912, %r918, %r914, 150;
	// end inline asm
	xor.b32  	%r1480, %r1371, %r1355;
	xor.b32  	%r1481, %r1480, %r1419;
	xor.b32  	%r1482, %r1481, %r1459;
	shf.l.wrap.b32 	%r1483, %r1482, %r1482, 1;
	add.s32 	%r1484, %r1483, %r911;
	add.s32 	%r1485, %r1484, %r910;
	add.s32 	%r1486, %r1485, %r1479;
	add.s32 	%r1487, %r1486, -899497514;
	shf.l.wrap.b32 	%r917, %r912, %r912, 30;
	shf.l.wrap.b32 	%r1488, %r1487, %r1487, 5;
	// begin inline asm
	lop3.b32 %r915, %r916, %r917, %r918, 150;
	// end inline asm
	xor.b32  	%r1489, %r1379, %r1363;
	xor.b32  	%r1490, %r1489, %r1427;
	xor.b32  	%r1491, %r1490, %r1467;
	shf.l.wrap.b32 	%r1492, %r1491, %r1491, 1;
	shf.l.wrap.b32 	%r1493, %r916, %r916, 30;
	add.s32 	%r1494, %r915, %r1492;
	add.s32 	%r1495, %r1494, %r8050;
	add.s32 	%r1496, %r1495, %r914;
	add.s32 	%r1497, %r1496, %r1488;
	add.s32 	%r8050, %r1497, -899497514;
	st.local.u32 	[%rd31+4], %r8050;
	add.s32 	%r8049, %r1487, %r8049;
	st.local.u32 	[%rd31+8], %r8049;
	add.s32 	%r8048, %r1493, %r8048;
	st.local.u32 	[%rd31+12], %r8048;
	add.s32 	%r8047, %r917, %r8047;
	st.local.u32 	[%rd31+16], %r8047;
	add.s32 	%r8046, %r918, %r8046;
	st.local.u32 	[%rd31+20], %r8046;
	add.s64 	%rd247, %rd247, 64;
	add.s64 	%rd245, %rd245, 64;
	add.s32 	%r8068, %r8068, -64;
	setp.gt.u32 	%p14, %r8068, 63;
	@%p14 bra 	$L__BB4_15;

$L__BB4_19:
	setp.eq.s32 	%p15, %r8068, 0;
	@%p15 bra 	$L__BB4_25;

	add.s64 	%rd252, %rd31, 24;
	and.b32  	%r8070, %r8068, 3;
	setp.eq.s32 	%p16, %r8070, 0;
	mov.u32 	%r8071, %r8068;
	@%p16 bra 	$L__BB4_23;

	mov.u64 	%rd248, %rd252;
	mov.u64 	%rd249, %rd247;
	mov.u32 	%r8071, %r8068;

$L__BB4_22:
	.pragma "nounroll";
	add.s32 	%r8071, %r8071, -1;
	add.s64 	%rd247, %rd249, 1;
	ld.local.u8 	%rs91, [%rd249];
	add.s64 	%rd252, %rd248, 1;
	st.local.u8 	[%rd248], %rs91;
	add.s32 	%r8070, %r8070, -1;
	setp.ne.s32 	%p17, %r8070, 0;
	mov.u64 	%rd248, %rd252;
	mov.u64 	%rd249, %rd247;
	@%p17 bra 	$L__BB4_22;

$L__BB4_23:
	add.s32 	%r1498, %r8068, -1;
	setp.lt.u32 	%p18, %r1498, 3;
	@%p18 bra 	$L__BB4_25;

$L__BB4_24:
	ld.local.u8 	%rs92, [%rd247];
	st.local.u8 	[%rd252], %rs92;
	ld.local.u8 	%rs93, [%rd247+1];
	st.local.u8 	[%rd252+1], %rs93;
	ld.local.u8 	%rs94, [%rd247+2];
	st.local.u8 	[%rd252+2], %rs94;
	add.s64 	%rd49, %rd247, 4;
	ld.local.u8 	%rs95, [%rd247+3];
	add.s64 	%rd50, %rd252, 4;
	st.local.u8 	[%rd252+3], %rs95;
	add.s32 	%r8071, %r8071, -4;
	setp.ne.s32 	%p19, %r8071, 0;
	mov.u64 	%rd252, %rd50;
	mov.u64 	%rd247, %rd49;
	@%p19 bra 	$L__BB4_24;

$L__BB4_25:
	setp.eq.s32 	%p72, %r8096, 0;
	@%p72 bra 	$L__BB4_45;

	add.u64 	%rd262, %SP, 80;
	cvta.to.local.u64 	%rd264, %rd262;
	ld.local.u32 	%r1499, [%rd31];
	and.b32  	%r8077, %r1499, 63;
	mov.u32 	%r1500, 64;
	sub.s32 	%r89, %r1500, %r8077;
	add.s32 	%r1501, %r1499, %r8096;
	st.local.u32 	[%rd31], %r1501;
	setp.eq.s32 	%p21, %r8077, 0;
	setp.lt.u32 	%p22, %r8096, %r89;
	or.pred  	%p23, %p21, %p22;
	@%p23 bra 	$L__BB4_34;

	setp.eq.s32 	%p24, %r89, 0;
	@%p24 bra 	$L__BB4_33;

	cvt.u64.u32 	%rd176, %r8077;
	add.s64 	%rd177, %rd31, %rd176;
	add.s64 	%rd258, %rd177, 24;
	add.u64 	%rd178, %SP, 80;
	add.u64 	%rd259, %SPL, 80;
	and.b32  	%r8074, %r89, 3;
	setp.eq.s32 	%p25, %r8074, 0;
	mov.u32 	%r8075, %r89;
	@%p25 bra 	$L__BB4_31;

	cvta.to.local.u64 	%rd255, %rd178;
	mov.u64 	%rd254, %rd258;
	mov.u32 	%r8075, %r89;

$L__BB4_30:
	.pragma "nounroll";
	add.s32 	%r8075, %r8075, -1;
	add.s64 	%rd259, %rd255, 1;
	ld.local.u8 	%rs96, [%rd255];
	add.s64 	%rd258, %rd254, 1;
	st.local.u8 	[%rd254], %rs96;
	add.s32 	%r8074, %r8074, -1;
	setp.ne.s32 	%p26, %r8074, 0;
	mov.u64 	%rd254, %rd258;
	mov.u64 	%rd255, %rd259;
	@%p26 bra 	$L__BB4_30;

$L__BB4_31:
	xor.b32  	%r1502, %r8077, 63;
	setp.lt.u32 	%p27, %r1502, 3;
	@%p27 bra 	$L__BB4_33;

$L__BB4_32:
	ld.local.u8 	%rs97, [%rd259];
	st.local.u8 	[%rd258], %rs97;
	ld.local.u8 	%rs98, [%rd259+1];
	st.local.u8 	[%rd258+1], %rs98;
	ld.local.u8 	%rs99, [%rd259+2];
	st.local.u8 	[%rd258+2], %rs99;
	add.s64 	%rd64, %rd259, 4;
	ld.local.u8 	%rs100, [%rd259+3];
	add.s64 	%rd65, %rd258, 4;
	st.local.u8 	[%rd258+3], %rs100;
	add.s32 	%r8075, %r8075, -4;
	setp.ne.s32 	%p28, %r8075, 0;
	mov.u64 	%rd258, %rd65;
	mov.u64 	%rd259, %rd64;
	@%p28 bra 	$L__BB4_32;

$L__BB4_33:
	ld.local.u32 	%r1824, [%rd31+24];
	shf.l.wrap.b32 	%r1825, %r1824, %r1824, 16;
	shl.b32 	%r1826, %r1825, 8;
	and.b32  	%r1827, %r1826, -16711936;
	shr.u32 	%r1828, %r1825, 8;
	and.b32  	%r1829, %r1828, 16711935;
	or.b32  	%r1830, %r1827, %r1829;
	ld.local.u32 	%r1831, [%rd31+28];
	shf.l.wrap.b32 	%r1832, %r1831, %r1831, 16;
	shl.b32 	%r1833, %r1832, 8;
	and.b32  	%r1834, %r1833, -16711936;
	shr.u32 	%r1835, %r1832, 8;
	and.b32  	%r1836, %r1835, 16711935;
	or.b32  	%r1837, %r1834, %r1836;
	ld.local.u32 	%r1838, [%rd31+32];
	shf.l.wrap.b32 	%r1839, %r1838, %r1838, 16;
	shl.b32 	%r1840, %r1839, 8;
	and.b32  	%r1841, %r1840, -16711936;
	shr.u32 	%r1842, %r1839, 8;
	and.b32  	%r1843, %r1842, 16711935;
	or.b32  	%r1844, %r1841, %r1843;
	ld.local.u32 	%r1845, [%rd31+36];
	shf.l.wrap.b32 	%r1846, %r1845, %r1845, 16;
	shl.b32 	%r1847, %r1846, 8;
	and.b32  	%r1848, %r1847, -16711936;
	shr.u32 	%r1849, %r1846, 8;
	and.b32  	%r1850, %r1849, 16711935;
	or.b32  	%r1851, %r1848, %r1850;
	ld.local.u32 	%r1852, [%rd31+40];
	shf.l.wrap.b32 	%r1853, %r1852, %r1852, 16;
	shl.b32 	%r1854, %r1853, 8;
	and.b32  	%r1855, %r1854, -16711936;
	shr.u32 	%r1856, %r1853, 8;
	and.b32  	%r1857, %r1856, 16711935;
	or.b32  	%r1858, %r1855, %r1857;
	ld.local.u32 	%r1859, [%rd31+44];
	shf.l.wrap.b32 	%r1860, %r1859, %r1859, 16;
	shl.b32 	%r1861, %r1860, 8;
	and.b32  	%r1862, %r1861, -16711936;
	shr.u32 	%r1863, %r1860, 8;
	and.b32  	%r1864, %r1863, 16711935;
	or.b32  	%r1865, %r1862, %r1864;
	ld.local.u32 	%r1866, [%rd31+48];
	shf.l.wrap.b32 	%r1867, %r1866, %r1866, 16;
	shl.b32 	%r1868, %r1867, 8;
	and.b32  	%r1869, %r1868, -16711936;
	shr.u32 	%r1870, %r1867, 8;
	and.b32  	%r1871, %r1870, 16711935;
	or.b32  	%r1872, %r1869, %r1871;
	ld.local.u32 	%r1873, [%rd31+52];
	shf.l.wrap.b32 	%r1874, %r1873, %r1873, 16;
	shl.b32 	%r1875, %r1874, 8;
	and.b32  	%r1876, %r1875, -16711936;
	shr.u32 	%r1877, %r1874, 8;
	and.b32  	%r1878, %r1877, 16711935;
	or.b32  	%r1879, %r1876, %r1878;
	ld.local.u32 	%r1880, [%rd31+56];
	shf.l.wrap.b32 	%r1881, %r1880, %r1880, 16;
	shl.b32 	%r1882, %r1881, 8;
	and.b32  	%r1883, %r1882, -16711936;
	shr.u32 	%r1884, %r1881, 8;
	and.b32  	%r1885, %r1884, 16711935;
	or.b32  	%r1886, %r1883, %r1885;
	ld.local.u32 	%r1887, [%rd31+60];
	shf.l.wrap.b32 	%r1888, %r1887, %r1887, 16;
	shl.b32 	%r1889, %r1888, 8;
	and.b32  	%r1890, %r1889, -16711936;
	shr.u32 	%r1891, %r1888, 8;
	and.b32  	%r1892, %r1891, 16711935;
	or.b32  	%r1893, %r1890, %r1892;
	ld.local.u32 	%r1894, [%rd31+64];
	shf.l.wrap.b32 	%r1895, %r1894, %r1894, 16;
	shl.b32 	%r1896, %r1895, 8;
	and.b32  	%r1897, %r1896, -16711936;
	shr.u32 	%r1898, %r1895, 8;
	and.b32  	%r1899, %r1898, 16711935;
	or.b32  	%r1900, %r1897, %r1899;
	ld.local.u32 	%r1901, [%rd31+68];
	shf.l.wrap.b32 	%r1902, %r1901, %r1901, 16;
	shl.b32 	%r1903, %r1902, 8;
	and.b32  	%r1904, %r1903, -16711936;
	shr.u32 	%r1905, %r1902, 8;
	and.b32  	%r1906, %r1905, 16711935;
	or.b32  	%r1907, %r1904, %r1906;
	ld.local.u32 	%r1908, [%rd31+72];
	shf.l.wrap.b32 	%r1909, %r1908, %r1908, 16;
	shl.b32 	%r1910, %r1909, 8;
	and.b32  	%r1911, %r1910, -16711936;
	shr.u32 	%r1912, %r1909, 8;
	and.b32  	%r1913, %r1912, 16711935;
	or.b32  	%r1914, %r1911, %r1913;
	ld.local.u32 	%r1915, [%rd31+76];
	shf.l.wrap.b32 	%r1916, %r1915, %r1915, 16;
	shl.b32 	%r1917, %r1916, 8;
	and.b32  	%r1918, %r1917, -16711936;
	shr.u32 	%r1919, %r1916, 8;
	and.b32  	%r1920, %r1919, 16711935;
	or.b32  	%r1921, %r1918, %r1920;
	ld.local.u32 	%r1922, [%rd31+80];
	shf.l.wrap.b32 	%r1923, %r1922, %r1922, 16;
	shl.b32 	%r1924, %r1923, 8;
	and.b32  	%r1925, %r1924, -16711936;
	shr.u32 	%r1926, %r1923, 8;
	and.b32  	%r1927, %r1926, 16711935;
	or.b32  	%r1928, %r1925, %r1927;
	ld.local.u32 	%r1929, [%rd31+84];
	shf.l.wrap.b32 	%r1930, %r1929, %r1929, 16;
	shl.b32 	%r1931, %r1930, 8;
	and.b32  	%r1932, %r1931, -16711936;
	shr.u32 	%r1933, %r1930, 8;
	and.b32  	%r1934, %r1933, 16711935;
	or.b32  	%r1935, %r1932, %r1934;
	ld.local.u32 	%r1508, [%rd31+4];
	shf.l.wrap.b32 	%r1936, %r1508, %r1508, 5;
	ld.local.u32 	%r1506, [%rd31+16];
	ld.local.u32 	%r1505, [%rd31+12];
	ld.local.u32 	%r1504, [%rd31+8];
	// begin inline asm
	lop3.b32 %r1503, %r1504, %r1505, %r1506, 202;
	// end inline asm
	add.s32 	%r1937, %r1830, %r1936;
	ld.local.u32 	%r1938, [%rd31+20];
	add.s32 	%r1939, %r1937, %r1938;
	add.s32 	%r1940, %r1939, %r1503;
	add.s32 	%r1512, %r1940, 1518500249;
	shf.l.wrap.b32 	%r1514, %r1504, %r1504, 30;
	shf.l.wrap.b32 	%r1941, %r1512, %r1512, 5;
	// begin inline asm
	lop3.b32 %r1507, %r1508, %r1514, %r1505, 202;
	// end inline asm
	add.s32 	%r1942, %r1837, %r1506;
	add.s32 	%r1943, %r1942, %r1507;
	add.s32 	%r1944, %r1943, %r1941;
	add.s32 	%r1516, %r1944, 1518500249;
	shf.l.wrap.b32 	%r1518, %r1508, %r1508, 30;
	shf.l.wrap.b32 	%r1945, %r1516, %r1516, 5;
	// begin inline asm
	lop3.b32 %r1511, %r1512, %r1518, %r1514, 202;
	// end inline asm
	add.s32 	%r1946, %r1844, %r1505;
	add.s32 	%r1947, %r1946, %r1511;
	add.s32 	%r1948, %r1947, %r1945;
	add.s32 	%r1520, %r1948, 1518500249;
	shf.l.wrap.b32 	%r1522, %r1512, %r1512, 30;
	shf.l.wrap.b32 	%r1949, %r1520, %r1520, 5;
	// begin inline asm
	lop3.b32 %r1515, %r1516, %r1522, %r1518, 202;
	// end inline asm
	add.s32 	%r1950, %r1851, %r1514;
	add.s32 	%r1951, %r1950, %r1515;
	add.s32 	%r1952, %r1951, %r1949;
	add.s32 	%r1524, %r1952, 1518500249;
	shf.l.wrap.b32 	%r1526, %r1516, %r1516, 30;
	shf.l.wrap.b32 	%r1953, %r1524, %r1524, 5;
	// begin inline asm
	lop3.b32 %r1519, %r1520, %r1526, %r1522, 202;
	// end inline asm
	add.s32 	%r1954, %r1858, %r1518;
	add.s32 	%r1955, %r1954, %r1519;
	add.s32 	%r1956, %r1955, %r1953;
	add.s32 	%r1528, %r1956, 1518500249;
	shf.l.wrap.b32 	%r1530, %r1520, %r1520, 30;
	shf.l.wrap.b32 	%r1957, %r1528, %r1528, 5;
	// begin inline asm
	lop3.b32 %r1523, %r1524, %r1530, %r1526, 202;
	// end inline asm
	add.s32 	%r1958, %r1865, %r1523;
	add.s32 	%r1959, %r1958, %r1522;
	add.s32 	%r1960, %r1959, %r1957;
	add.s32 	%r1532, %r1960, 1518500249;
	shf.l.wrap.b32 	%r1534, %r1524, %r1524, 30;
	shf.l.wrap.b32 	%r1961, %r1532, %r1532, 5;
	// begin inline asm
	lop3.b32 %r1527, %r1528, %r1534, %r1530, 202;
	// end inline asm
	add.s32 	%r1962, %r1872, %r1527;
	add.s32 	%r1963, %r1962, %r1526;
	add.s32 	%r1964, %r1963, %r1961;
	add.s32 	%r1536, %r1964, 1518500249;
	shf.l.wrap.b32 	%r1538, %r1528, %r1528, 30;
	shf.l.wrap.b32 	%r1965, %r1536, %r1536, 5;
	// begin inline asm
	lop3.b32 %r1531, %r1532, %r1538, %r1534, 202;
	// end inline asm
	add.s32 	%r1966, %r1879, %r1531;
	add.s32 	%r1967, %r1966, %r1530;
	add.s32 	%r1968, %r1967, %r1965;
	add.s32 	%r1540, %r1968, 1518500249;
	shf.l.wrap.b32 	%r1542, %r1532, %r1532, 30;
	shf.l.wrap.b32 	%r1969, %r1540, %r1540, 5;
	// begin inline asm
	lop3.b32 %r1535, %r1536, %r1542, %r1538, 202;
	// end inline asm
	add.s32 	%r1970, %r1886, %r1535;
	add.s32 	%r1971, %r1970, %r1534;
	add.s32 	%r1972, %r1971, %r1969;
	add.s32 	%r1544, %r1972, 1518500249;
	shf.l.wrap.b32 	%r1546, %r1536, %r1536, 30;
	shf.l.wrap.b32 	%r1973, %r1544, %r1544, 5;
	// begin inline asm
	lop3.b32 %r1539, %r1540, %r1546, %r1542, 202;
	// end inline asm
	add.s32 	%r1974, %r1893, %r1539;
	add.s32 	%r1975, %r1974, %r1538;
	add.s32 	%r1976, %r1975, %r1973;
	add.s32 	%r1548, %r1976, 1518500249;
	shf.l.wrap.b32 	%r1550, %r1540, %r1540, 30;
	shf.l.wrap.b32 	%r1977, %r1548, %r1548, 5;
	// begin inline asm
	lop3.b32 %r1543, %r1544, %r1550, %r1546, 202;
	// end inline asm
	add.s32 	%r1978, %r1900, %r1543;
	add.s32 	%r1979, %r1978, %r1542;
	add.s32 	%r1980, %r1979, %r1977;
	add.s32 	%r1552, %r1980, 1518500249;
	shf.l.wrap.b32 	%r1554, %r1544, %r1544, 30;
	shf.l.wrap.b32 	%r1981, %r1552, %r1552, 5;
	// begin inline asm
	lop3.b32 %r1547, %r1548, %r1554, %r1550, 202;
	// end inline asm
	add.s32 	%r1982, %r1907, %r1547;
	add.s32 	%r1983, %r1982, %r1546;
	add.s32 	%r1984, %r1983, %r1981;
	add.s32 	%r1556, %r1984, 1518500249;
	shf.l.wrap.b32 	%r1558, %r1548, %r1548, 30;
	shf.l.wrap.b32 	%r1985, %r1556, %r1556, 5;
	// begin inline asm
	lop3.b32 %r1551, %r1552, %r1558, %r1554, 202;
	// end inline asm
	add.s32 	%r1986, %r1914, %r1551;
	add.s32 	%r1987, %r1986, %r1550;
	add.s32 	%r1988, %r1987, %r1985;
	add.s32 	%r1560, %r1988, 1518500249;
	shf.l.wrap.b32 	%r1562, %r1552, %r1552, 30;
	shf.l.wrap.b32 	%r1989, %r1560, %r1560, 5;
	// begin inline asm
	lop3.b32 %r1555, %r1556, %r1562, %r1558, 202;
	// end inline asm
	add.s32 	%r1990, %r1921, %r1555;
	add.s32 	%r1991, %r1990, %r1554;
	add.s32 	%r1992, %r1991, %r1989;
	add.s32 	%r1564, %r1992, 1518500249;
	shf.l.wrap.b32 	%r1566, %r1556, %r1556, 30;
	shf.l.wrap.b32 	%r1993, %r1564, %r1564, 5;
	// begin inline asm
	lop3.b32 %r1559, %r1560, %r1566, %r1562, 202;
	// end inline asm
	add.s32 	%r1994, %r1928, %r1559;
	add.s32 	%r1995, %r1994, %r1558;
	add.s32 	%r1996, %r1995, %r1993;
	add.s32 	%r1568, %r1996, 1518500249;
	shf.l.wrap.b32 	%r1570, %r1560, %r1560, 30;
	shf.l.wrap.b32 	%r1997, %r1568, %r1568, 5;
	// begin inline asm
	lop3.b32 %r1563, %r1564, %r1570, %r1566, 202;
	// end inline asm
	add.s32 	%r1998, %r1935, %r1563;
	add.s32 	%r1999, %r1998, %r1562;
	add.s32 	%r2000, %r1999, %r1997;
	add.s32 	%r1572, %r2000, 1518500249;
	shf.l.wrap.b32 	%r1574, %r1564, %r1564, 30;
	shf.l.wrap.b32 	%r2001, %r1572, %r1572, 5;
	// begin inline asm
	lop3.b32 %r1567, %r1568, %r1574, %r1570, 202;
	// end inline asm
	xor.b32  	%r2002, %r1844, %r1830;
	xor.b32  	%r2003, %r2002, %r1886;
	xor.b32  	%r2004, %r2003, %r1921;
	shf.l.wrap.b32 	%r2005, %r2004, %r2004, 1;
	add.s32 	%r2006, %r2005, %r1567;
	add.s32 	%r2007, %r2006, %r1566;
	add.s32 	%r2008, %r2007, %r2001;
	add.s32 	%r1576, %r2008, 1518500249;
	shf.l.wrap.b32 	%r1578, %r1568, %r1568, 30;
	shf.l.wrap.b32 	%r2009, %r1576, %r1576, 5;
	// begin inline asm
	lop3.b32 %r1571, %r1572, %r1578, %r1574, 202;
	// end inline asm
	xor.b32  	%r2010, %r1851, %r1837;
	xor.b32  	%r2011, %r2010, %r1893;
	xor.b32  	%r2012, %r2011, %r1928;
	shf.l.wrap.b32 	%r2013, %r2012, %r2012, 1;
	add.s32 	%r2014, %r2013, %r1571;
	add.s32 	%r2015, %r2014, %r1570;
	add.s32 	%r2016, %r2015, %r2009;
	add.s32 	%r1580, %r2016, 1518500249;
	shf.l.wrap.b32 	%r1582, %r1572, %r1572, 30;
	shf.l.wrap.b32 	%r2017, %r1580, %r1580, 5;
	// begin inline asm
	lop3.b32 %r1575, %r1576, %r1582, %r1578, 202;
	// end inline asm
	xor.b32  	%r2018, %r1858, %r1844;
	xor.b32  	%r2019, %r2018, %r1900;
	xor.b32  	%r2020, %r2019, %r1935;
	shf.l.wrap.b32 	%r2021, %r2020, %r2020, 1;
	add.s32 	%r2022, %r2021, %r1575;
	add.s32 	%r2023, %r2022, %r1574;
	add.s32 	%r2024, %r2023, %r2017;
	add.s32 	%r1584, %r2024, 1518500249;
	shf.l.wrap.b32 	%r1586, %r1576, %r1576, 30;
	shf.l.wrap.b32 	%r2025, %r1584, %r1584, 5;
	// begin inline asm
	lop3.b32 %r1579, %r1580, %r1586, %r1582, 202;
	// end inline asm
	xor.b32  	%r2026, %r1865, %r1851;
	xor.b32  	%r2027, %r2026, %r1907;
	xor.b32  	%r2028, %r2027, %r2005;
	shf.l.wrap.b32 	%r2029, %r2028, %r2028, 1;
	add.s32 	%r2030, %r2029, %r1579;
	add.s32 	%r2031, %r2030, %r1578;
	add.s32 	%r2032, %r2031, %r2025;
	add.s32 	%r1588, %r2032, 1518500249;
	shf.l.wrap.b32 	%r1590, %r1580, %r1580, 30;
	shf.l.wrap.b32 	%r2033, %r1588, %r1588, 5;
	// begin inline asm
	lop3.b32 %r1583, %r1584, %r1590, %r1586, 150;
	// end inline asm
	xor.b32  	%r2034, %r1872, %r1858;
	xor.b32  	%r2035, %r2034, %r1914;
	xor.b32  	%r2036, %r2035, %r2013;
	shf.l.wrap.b32 	%r2037, %r2036, %r2036, 1;
	add.s32 	%r2038, %r2037, %r1583;
	add.s32 	%r2039, %r2038, %r1582;
	add.s32 	%r2040, %r2039, %r2033;
	add.s32 	%r1592, %r2040, 1859775393;
	shf.l.wrap.b32 	%r1594, %r1584, %r1584, 30;
	shf.l.wrap.b32 	%r2041, %r1592, %r1592, 5;
	// begin inline asm
	lop3.b32 %r1587, %r1588, %r1594, %r1590, 150;
	// end inline asm
	xor.b32  	%r2042, %r1879, %r1865;
	xor.b32  	%r2043, %r2042, %r1921;
	xor.b32  	%r2044, %r2043, %r2021;
	shf.l.wrap.b32 	%r2045, %r2044, %r2044, 1;
	add.s32 	%r2046, %r2045, %r1587;
	add.s32 	%r2047, %r2046, %r1586;
	add.s32 	%r2048, %r2047, %r2041;
	add.s32 	%r1596, %r2048, 1859775393;
	shf.l.wrap.b32 	%r1598, %r1588, %r1588, 30;
	shf.l.wrap.b32 	%r2049, %r1596, %r1596, 5;
	// begin inline asm
	lop3.b32 %r1591, %r1592, %r1598, %r1594, 150;
	// end inline asm
	xor.b32  	%r2050, %r1886, %r1872;
	xor.b32  	%r2051, %r2050, %r1928;
	xor.b32  	%r2052, %r2051, %r2029;
	shf.l.wrap.b32 	%r2053, %r2052, %r2052, 1;
	add.s32 	%r2054, %r2053, %r1591;
	add.s32 	%r2055, %r2054, %r1590;
	add.s32 	%r2056, %r2055, %r2049;
	add.s32 	%r1600, %r2056, 1859775393;
	shf.l.wrap.b32 	%r1602, %r1592, %r1592, 30;
	shf.l.wrap.b32 	%r2057, %r1600, %r1600, 5;
	// begin inline asm
	lop3.b32 %r1595, %r1596, %r1602, %r1598, 150;
	// end inline asm
	xor.b32  	%r2058, %r1893, %r1879;
	xor.b32  	%r2059, %r2058, %r1935;
	xor.b32  	%r2060, %r2059, %r2037;
	shf.l.wrap.b32 	%r2061, %r2060, %r2060, 1;
	add.s32 	%r2062, %r2061, %r1595;
	add.s32 	%r2063, %r2062, %r1594;
	add.s32 	%r2064, %r2063, %r2057;
	add.s32 	%r1604, %r2064, 1859775393;
	shf.l.wrap.b32 	%r1606, %r1596, %r1596, 30;
	shf.l.wrap.b32 	%r2065, %r1604, %r1604, 5;
	// begin inline asm
	lop3.b32 %r1599, %r1600, %r1606, %r1602, 150;
	// end inline asm
	xor.b32  	%r2066, %r1900, %r1886;
	xor.b32  	%r2067, %r2066, %r2005;
	xor.b32  	%r2068, %r2067, %r2045;
	shf.l.wrap.b32 	%r2069, %r2068, %r2068, 1;
	add.s32 	%r2070, %r2069, %r1599;
	add.s32 	%r2071, %r2070, %r1598;
	add.s32 	%r2072, %r2071, %r2065;
	add.s32 	%r1608, %r2072, 1859775393;
	shf.l.wrap.b32 	%r1610, %r1600, %r1600, 30;
	shf.l.wrap.b32 	%r2073, %r1608, %r1608, 5;
	// begin inline asm
	lop3.b32 %r1603, %r1604, %r1610, %r1606, 150;
	// end inline asm
	xor.b32  	%r2074, %r1907, %r1893;
	xor.b32  	%r2075, %r2074, %r2013;
	xor.b32  	%r2076, %r2075, %r2053;
	shf.l.wrap.b32 	%r2077, %r2076, %r2076, 1;
	add.s32 	%r2078, %r2077, %r1603;
	add.s32 	%r2079, %r2078, %r1602;
	add.s32 	%r2080, %r2079, %r2073;
	add.s32 	%r1612, %r2080, 1859775393;
	shf.l.wrap.b32 	%r1614, %r1604, %r1604, 30;
	shf.l.wrap.b32 	%r2081, %r1612, %r1612, 5;
	// begin inline asm
	lop3.b32 %r1607, %r1608, %r1614, %r1610, 150;
	// end inline asm
	xor.b32  	%r2082, %r1914, %r1900;
	xor.b32  	%r2083, %r2082, %r2021;
	xor.b32  	%r2084, %r2083, %r2061;
	shf.l.wrap.b32 	%r2085, %r2084, %r2084, 1;
	add.s32 	%r2086, %r2085, %r1607;
	add.s32 	%r2087, %r2086, %r1606;
	add.s32 	%r2088, %r2087, %r2081;
	add.s32 	%r1616, %r2088, 1859775393;
	shf.l.wrap.b32 	%r1618, %r1608, %r1608, 30;
	shf.l.wrap.b32 	%r2089, %r1616, %r1616, 5;
	// begin inline asm
	lop3.b32 %r1611, %r1612, %r1618, %r1614, 150;
	// end inline asm
	xor.b32  	%r2090, %r1921, %r1907;
	xor.b32  	%r2091, %r2090, %r2029;
	xor.b32  	%r2092, %r2091, %r2069;
	shf.l.wrap.b32 	%r2093, %r2092, %r2092, 1;
	add.s32 	%r2094, %r2093, %r1611;
	add.s32 	%r2095, %r2094, %r1610;
	add.s32 	%r2096, %r2095, %r2089;
	add.s32 	%r1620, %r2096, 1859775393;
	shf.l.wrap.b32 	%r1622, %r1612, %r1612, 30;
	shf.l.wrap.b32 	%r2097, %r1620, %r1620, 5;
	// begin inline asm
	lop3.b32 %r1615, %r1616, %r1622, %r1618, 150;
	// end inline asm
	xor.b32  	%r2098, %r1928, %r1914;
	xor.b32  	%r2099, %r2098, %r2037;
	xor.b32  	%r2100, %r2099, %r2077;
	shf.l.wrap.b32 	%r2101, %r2100, %r2100, 1;
	add.s32 	%r2102, %r2101, %r1615;
	add.s32 	%r2103, %r2102, %r1614;
	add.s32 	%r2104, %r2103, %r2097;
	add.s32 	%r1624, %r2104, 1859775393;
	shf.l.wrap.b32 	%r1626, %r1616, %r1616, 30;
	shf.l.wrap.b32 	%r2105, %r1624, %r1624, 5;
	// begin inline asm
	lop3.b32 %r1619, %r1620, %r1626, %r1622, 150;
	// end inline asm
	xor.b32  	%r2106, %r1935, %r1921;
	xor.b32  	%r2107, %r2106, %r2045;
	xor.b32  	%r2108, %r2107, %r2085;
	shf.l.wrap.b32 	%r2109, %r2108, %r2108, 1;
	add.s32 	%r2110, %r2109, %r1619;
	add.s32 	%r2111, %r2110, %r1618;
	add.s32 	%r2112, %r2111, %r2105;
	add.s32 	%r1628, %r2112, 1859775393;
	shf.l.wrap.b32 	%r1630, %r1620, %r1620, 30;
	shf.l.wrap.b32 	%r2113, %r1628, %r1628, 5;
	// begin inline asm
	lop3.b32 %r1623, %r1624, %r1630, %r1626, 150;
	// end inline asm
	xor.b32  	%r2114, %r2005, %r1928;
	xor.b32  	%r2115, %r2114, %r2053;
	xor.b32  	%r2116, %r2115, %r2093;
	shf.l.wrap.b32 	%r2117, %r2116, %r2116, 1;
	add.s32 	%r2118, %r2117, %r1623;
	add.s32 	%r2119, %r2118, %r1622;
	add.s32 	%r2120, %r2119, %r2113;
	add.s32 	%r1632, %r2120, 1859775393;
	shf.l.wrap.b32 	%r1634, %r1624, %r1624, 30;
	shf.l.wrap.b32 	%r2121, %r1632, %r1632, 5;
	// begin inline asm
	lop3.b32 %r1627, %r1628, %r1634, %r1630, 150;
	// end inline asm
	xor.b32  	%r2122, %r2013, %r1935;
	xor.b32  	%r2123, %r2122, %r2061;
	xor.b32  	%r2124, %r2123, %r2101;
	shf.l.wrap.b32 	%r2125, %r2124, %r2124, 1;
	add.s32 	%r2126, %r2125, %r1627;
	add.s32 	%r2127, %r2126, %r1626;
	add.s32 	%r2128, %r2127, %r2121;
	add.s32 	%r1636, %r2128, 1859775393;
	shf.l.wrap.b32 	%r1638, %r1628, %r1628, 30;
	shf.l.wrap.b32 	%r2129, %r1636, %r1636, 5;
	// begin inline asm
	lop3.b32 %r1631, %r1632, %r1638, %r1634, 150;
	// end inline asm
	xor.b32  	%r2130, %r2021, %r2005;
	xor.b32  	%r2131, %r2130, %r2069;
	xor.b32  	%r2132, %r2131, %r2109;
	shf.l.wrap.b32 	%r2133, %r2132, %r2132, 1;
	add.s32 	%r2134, %r2133, %r1631;
	add.s32 	%r2135, %r2134, %r1630;
	add.s32 	%r2136, %r2135, %r2129;
	add.s32 	%r1640, %r2136, 1859775393;
	shf.l.wrap.b32 	%r1642, %r1632, %r1632, 30;
	shf.l.wrap.b32 	%r2137, %r1640, %r1640, 5;
	// begin inline asm
	lop3.b32 %r1635, %r1636, %r1642, %r1638, 150;
	// end inline asm
	xor.b32  	%r2138, %r2029, %r2013;
	xor.b32  	%r2139, %r2138, %r2077;
	xor.b32  	%r2140, %r2139, %r2117;
	shf.l.wrap.b32 	%r2141, %r2140, %r2140, 1;
	add.s32 	%r2142, %r2141, %r1635;
	add.s32 	%r2143, %r2142, %r1634;
	add.s32 	%r2144, %r2143, %r2137;
	add.s32 	%r1644, %r2144, 1859775393;
	shf.l.wrap.b32 	%r1646, %r1636, %r1636, 30;
	shf.l.wrap.b32 	%r2145, %r1644, %r1644, 5;
	// begin inline asm
	lop3.b32 %r1639, %r1640, %r1646, %r1642, 150;
	// end inline asm
	xor.b32  	%r2146, %r2037, %r2021;
	xor.b32  	%r2147, %r2146, %r2085;
	xor.b32  	%r2148, %r2147, %r2125;
	shf.l.wrap.b32 	%r2149, %r2148, %r2148, 1;
	add.s32 	%r2150, %r2149, %r1639;
	add.s32 	%r2151, %r2150, %r1638;
	add.s32 	%r2152, %r2151, %r2145;
	add.s32 	%r1648, %r2152, 1859775393;
	shf.l.wrap.b32 	%r1650, %r1640, %r1640, 30;
	shf.l.wrap.b32 	%r2153, %r1648, %r1648, 5;
	// begin inline asm
	lop3.b32 %r1643, %r1644, %r1650, %r1646, 150;
	// end inline asm
	xor.b32  	%r2154, %r2045, %r2029;
	xor.b32  	%r2155, %r2154, %r2093;
	xor.b32  	%r2156, %r2155, %r2133;
	shf.l.wrap.b32 	%r2157, %r2156, %r2156, 1;
	add.s32 	%r2158, %r2157, %r1643;
	add.s32 	%r2159, %r2158, %r1642;
	add.s32 	%r2160, %r2159, %r2153;
	add.s32 	%r1652, %r2160, 1859775393;
	shf.l.wrap.b32 	%r1654, %r1644, %r1644, 30;
	shf.l.wrap.b32 	%r2161, %r1652, %r1652, 5;
	// begin inline asm
	lop3.b32 %r1647, %r1648, %r1654, %r1650, 150;
	// end inline asm
	xor.b32  	%r2162, %r2053, %r2037;
	xor.b32  	%r2163, %r2162, %r2101;
	xor.b32  	%r2164, %r2163, %r2141;
	shf.l.wrap.b32 	%r2165, %r2164, %r2164, 1;
	add.s32 	%r2166, %r2165, %r1647;
	add.s32 	%r2167, %r2166, %r1646;
	add.s32 	%r2168, %r2167, %r2161;
	add.s32 	%r1656, %r2168, 1859775393;
	shf.l.wrap.b32 	%r1658, %r1648, %r1648, 30;
	shf.l.wrap.b32 	%r2169, %r1656, %r1656, 5;
	// begin inline asm
	lop3.b32 %r1651, %r1652, %r1658, %r1654, 150;
	// end inline asm
	xor.b32  	%r2170, %r2061, %r2045;
	xor.b32  	%r2171, %r2170, %r2109;
	xor.b32  	%r2172, %r2171, %r2149;
	shf.l.wrap.b32 	%r2173, %r2172, %r2172, 1;
	add.s32 	%r2174, %r2173, %r1651;
	add.s32 	%r2175, %r2174, %r1650;
	add.s32 	%r2176, %r2175, %r2169;
	add.s32 	%r1660, %r2176, 1859775393;
	shf.l.wrap.b32 	%r1662, %r1652, %r1652, 30;
	shf.l.wrap.b32 	%r2177, %r1660, %r1660, 5;
	// begin inline asm
	lop3.b32 %r1655, %r1656, %r1662, %r1658, 150;
	// end inline asm
	xor.b32  	%r2178, %r2069, %r2053;
	xor.b32  	%r2179, %r2178, %r2117;
	xor.b32  	%r2180, %r2179, %r2157;
	shf.l.wrap.b32 	%r2181, %r2180, %r2180, 1;
	add.s32 	%r2182, %r2181, %r1655;
	add.s32 	%r2183, %r2182, %r1654;
	add.s32 	%r2184, %r2183, %r2177;
	add.s32 	%r1664, %r2184, 1859775393;
	shf.l.wrap.b32 	%r1666, %r1656, %r1656, 30;
	shf.l.wrap.b32 	%r2185, %r1664, %r1664, 5;
	// begin inline asm
	lop3.b32 %r1659, %r1660, %r1666, %r1662, 150;
	// end inline asm
	xor.b32  	%r2186, %r2077, %r2061;
	xor.b32  	%r2187, %r2186, %r2125;
	xor.b32  	%r2188, %r2187, %r2165;
	shf.l.wrap.b32 	%r2189, %r2188, %r2188, 1;
	add.s32 	%r2190, %r2189, %r1659;
	add.s32 	%r2191, %r2190, %r1658;
	add.s32 	%r2192, %r2191, %r2185;
	add.s32 	%r1668, %r2192, 1859775393;
	shf.l.wrap.b32 	%r1670, %r1660, %r1660, 30;
	shf.l.wrap.b32 	%r2193, %r1668, %r1668, 5;
	// begin inline asm
	lop3.b32 %r1663, %r1664, %r1670, %r1666, 232;
	// end inline asm
	xor.b32  	%r2194, %r2085, %r2069;
	xor.b32  	%r2195, %r2194, %r2133;
	xor.b32  	%r2196, %r2195, %r2173;
	shf.l.wrap.b32 	%r2197, %r2196, %r2196, 1;
	add.s32 	%r2198, %r2197, %r1663;
	add.s32 	%r2199, %r2198, %r1662;
	add.s32 	%r2200, %r2199, %r2193;
	add.s32 	%r1672, %r2200, -1894007588;
	shf.l.wrap.b32 	%r1674, %r1664, %r1664, 30;
	shf.l.wrap.b32 	%r2201, %r1672, %r1672, 5;
	// begin inline asm
	lop3.b32 %r1667, %r1668, %r1674, %r1670, 232;
	// end inline asm
	xor.b32  	%r2202, %r2093, %r2077;
	xor.b32  	%r2203, %r2202, %r2141;
	xor.b32  	%r2204, %r2203, %r2181;
	shf.l.wrap.b32 	%r2205, %r2204, %r2204, 1;
	add.s32 	%r2206, %r2205, %r1667;
	add.s32 	%r2207, %r2206, %r1666;
	add.s32 	%r2208, %r2207, %r2201;
	add.s32 	%r1676, %r2208, -1894007588;
	shf.l.wrap.b32 	%r1678, %r1668, %r1668, 30;
	shf.l.wrap.b32 	%r2209, %r1676, %r1676, 5;
	// begin inline asm
	lop3.b32 %r1671, %r1672, %r1678, %r1674, 232;
	// end inline asm
	xor.b32  	%r2210, %r2101, %r2085;
	xor.b32  	%r2211, %r2210, %r2149;
	xor.b32  	%r2212, %r2211, %r2189;
	shf.l.wrap.b32 	%r2213, %r2212, %r2212, 1;
	add.s32 	%r2214, %r2213, %r1671;
	add.s32 	%r2215, %r2214, %r1670;
	add.s32 	%r2216, %r2215, %r2209;
	add.s32 	%r1680, %r2216, -1894007588;
	shf.l.wrap.b32 	%r1682, %r1672, %r1672, 30;
	shf.l.wrap.b32 	%r2217, %r1680, %r1680, 5;
	// begin inline asm
	lop3.b32 %r1675, %r1676, %r1682, %r1678, 232;
	// end inline asm
	xor.b32  	%r2218, %r2109, %r2093;
	xor.b32  	%r2219, %r2218, %r2157;
	xor.b32  	%r2220, %r2219, %r2197;
	shf.l.wrap.b32 	%r2221, %r2220, %r2220, 1;
	add.s32 	%r2222, %r2221, %r1675;
	add.s32 	%r2223, %r2222, %r1674;
	add.s32 	%r2224, %r2223, %r2217;
	add.s32 	%r1684, %r2224, -1894007588;
	shf.l.wrap.b32 	%r1686, %r1676, %r1676, 30;
	shf.l.wrap.b32 	%r2225, %r1684, %r1684, 5;
	// begin inline asm
	lop3.b32 %r1679, %r1680, %r1686, %r1682, 232;
	// end inline asm
	xor.b32  	%r2226, %r2117, %r2101;
	xor.b32  	%r2227, %r2226, %r2165;
	xor.b32  	%r2228, %r2227, %r2205;
	shf.l.wrap.b32 	%r2229, %r2228, %r2228, 1;
	add.s32 	%r2230, %r2229, %r1679;
	add.s32 	%r2231, %r2230, %r1678;
	add.s32 	%r2232, %r2231, %r2225;
	add.s32 	%r1688, %r2232, -1894007588;
	shf.l.wrap.b32 	%r1690, %r1680, %r1680, 30;
	shf.l.wrap.b32 	%r2233, %r1688, %r1688, 5;
	// begin inline asm
	lop3.b32 %r1683, %r1684, %r1690, %r1686, 232;
	// end inline asm
	xor.b32  	%r2234, %r2125, %r2109;
	xor.b32  	%r2235, %r2234, %r2173;
	xor.b32  	%r2236, %r2235, %r2213;
	shf.l.wrap.b32 	%r2237, %r2236, %r2236, 1;
	add.s32 	%r2238, %r2237, %r1683;
	add.s32 	%r2239, %r2238, %r1682;
	add.s32 	%r2240, %r2239, %r2233;
	add.s32 	%r1692, %r2240, -1894007588;
	shf.l.wrap.b32 	%r1694, %r1684, %r1684, 30;
	shf.l.wrap.b32 	%r2241, %r1692, %r1692, 5;
	// begin inline asm
	lop3.b32 %r1687, %r1688, %r1694, %r1690, 232;
	// end inline asm
	xor.b32  	%r2242, %r2133, %r2117;
	xor.b32  	%r2243, %r2242, %r2181;
	xor.b32  	%r2244, %r2243, %r2221;
	shf.l.wrap.b32 	%r2245, %r2244, %r2244, 1;
	add.s32 	%r2246, %r2245, %r1687;
	add.s32 	%r2247, %r2246, %r1686;
	add.s32 	%r2248, %r2247, %r2241;
	add.s32 	%r1696, %r2248, -1894007588;
	shf.l.wrap.b32 	%r1698, %r1688, %r1688, 30;
	shf.l.wrap.b32 	%r2249, %r1696, %r1696, 5;
	// begin inline asm
	lop3.b32 %r1691, %r1692, %r1698, %r1694, 232;
	// end inline asm
	xor.b32  	%r2250, %r2141, %r2125;
	xor.b32  	%r2251, %r2250, %r2189;
	xor.b32  	%r2252, %r2251, %r2229;
	shf.l.wrap.b32 	%r2253, %r2252, %r2252, 1;
	add.s32 	%r2254, %r2253, %r1691;
	add.s32 	%r2255, %r2254, %r1690;
	add.s32 	%r2256, %r2255, %r2249;
	add.s32 	%r1700, %r2256, -1894007588;
	shf.l.wrap.b32 	%r1702, %r1692, %r1692, 30;
	shf.l.wrap.b32 	%r2257, %r1700, %r1700, 5;
	// begin inline asm
	lop3.b32 %r1695, %r1696, %r1702, %r1698, 232;
	// end inline asm
	xor.b32  	%r2258, %r2149, %r2133;
	xor.b32  	%r2259, %r2258, %r2197;
	xor.b32  	%r2260, %r2259, %r2237;
	shf.l.wrap.b32 	%r2261, %r2260, %r2260, 1;
	add.s32 	%r2262, %r2261, %r1695;
	add.s32 	%r2263, %r2262, %r1694;
	add.s32 	%r2264, %r2263, %r2257;
	add.s32 	%r1704, %r2264, -1894007588;
	shf.l.wrap.b32 	%r1706, %r1696, %r1696, 30;
	shf.l.wrap.b32 	%r2265, %r1704, %r1704, 5;
	// begin inline asm
	lop3.b32 %r1699, %r1700, %r1706, %r1702, 232;
	// end inline asm
	xor.b32  	%r2266, %r2157, %r2141;
	xor.b32  	%r2267, %r2266, %r2205;
	xor.b32  	%r2268, %r2267, %r2245;
	shf.l.wrap.b32 	%r2269, %r2268, %r2268, 1;
	add.s32 	%r2270, %r2269, %r1699;
	add.s32 	%r2271, %r2270, %r1698;
	add.s32 	%r2272, %r2271, %r2265;
	add.s32 	%r1708, %r2272, -1894007588;
	shf.l.wrap.b32 	%r1710, %r1700, %r1700, 30;
	shf.l.wrap.b32 	%r2273, %r1708, %r1708, 5;
	// begin inline asm
	lop3.b32 %r1703, %r1704, %r1710, %r1706, 232;
	// end inline asm
	xor.b32  	%r2274, %r2165, %r2149;
	xor.b32  	%r2275, %r2274, %r2213;
	xor.b32  	%r2276, %r2275, %r2253;
	shf.l.wrap.b32 	%r2277, %r2276, %r2276, 1;
	add.s32 	%r2278, %r2277, %r1703;
	add.s32 	%r2279, %r2278, %r1702;
	add.s32 	%r2280, %r2279, %r2273;
	add.s32 	%r1712, %r2280, -1894007588;
	shf.l.wrap.b32 	%r1714, %r1704, %r1704, 30;
	shf.l.wrap.b32 	%r2281, %r1712, %r1712, 5;
	// begin inline asm
	lop3.b32 %r1707, %r1708, %r1714, %r1710, 232;
	// end inline asm
	xor.b32  	%r2282, %r2173, %r2157;
	xor.b32  	%r2283, %r2282, %r2221;
	xor.b32  	%r2284, %r2283, %r2261;
	shf.l.wrap.b32 	%r2285, %r2284, %r2284, 1;
	add.s32 	%r2286, %r2285, %r1707;
	add.s32 	%r2287, %r2286, %r1706;
	add.s32 	%r2288, %r2287, %r2281;
	add.s32 	%r1716, %r2288, -1894007588;
	shf.l.wrap.b32 	%r1718, %r1708, %r1708, 30;
	shf.l.wrap.b32 	%r2289, %r1716, %r1716, 5;
	// begin inline asm
	lop3.b32 %r1711, %r1712, %r1718, %r1714, 232;
	// end inline asm
	xor.b32  	%r2290, %r2181, %r2165;
	xor.b32  	%r2291, %r2290, %r2229;
	xor.b32  	%r2292, %r2291, %r2269;
	shf.l.wrap.b32 	%r2293, %r2292, %r2292, 1;
	add.s32 	%r2294, %r2293, %r1711;
	add.s32 	%r2295, %r2294, %r1710;
	add.s32 	%r2296, %r2295, %r2289;
	add.s32 	%r1720, %r2296, -1894007588;
	shf.l.wrap.b32 	%r1722, %r1712, %r1712, 30;
	shf.l.wrap.b32 	%r2297, %r1720, %r1720, 5;
	// begin inline asm
	lop3.b32 %r1715, %r1716, %r1722, %r1718, 232;
	// end inline asm
	xor.b32  	%r2298, %r2189, %r2173;
	xor.b32  	%r2299, %r2298, %r2237;
	xor.b32  	%r2300, %r2299, %r2277;
	shf.l.wrap.b32 	%r2301, %r2300, %r2300, 1;
	add.s32 	%r2302, %r2301, %r1715;
	add.s32 	%r2303, %r2302, %r1714;
	add.s32 	%r2304, %r2303, %r2297;
	add.s32 	%r1724, %r2304, -1894007588;
	shf.l.wrap.b32 	%r1726, %r1716, %r1716, 30;
	shf.l.wrap.b32 	%r2305, %r1724, %r1724, 5;
	// begin inline asm
	lop3.b32 %r1719, %r1720, %r1726, %r1722, 232;
	// end inline asm
	xor.b32  	%r2306, %r2197, %r2181;
	xor.b32  	%r2307, %r2306, %r2245;
	xor.b32  	%r2308, %r2307, %r2285;
	shf.l.wrap.b32 	%r2309, %r2308, %r2308, 1;
	add.s32 	%r2310, %r2309, %r1719;
	add.s32 	%r2311, %r2310, %r1718;
	add.s32 	%r2312, %r2311, %r2305;
	add.s32 	%r1728, %r2312, -1894007588;
	shf.l.wrap.b32 	%r1730, %r1720, %r1720, 30;
	shf.l.wrap.b32 	%r2313, %r1728, %r1728, 5;
	// begin inline asm
	lop3.b32 %r1723, %r1724, %r1730, %r1726, 232;
	// end inline asm
	xor.b32  	%r2314, %r2205, %r2189;
	xor.b32  	%r2315, %r2314, %r2253;
	xor.b32  	%r2316, %r2315, %r2293;
	shf.l.wrap.b32 	%r2317, %r2316, %r2316, 1;
	add.s32 	%r2318, %r2317, %r1723;
	add.s32 	%r2319, %r2318, %r1722;
	add.s32 	%r2320, %r2319, %r2313;
	add.s32 	%r1732, %r2320, -1894007588;
	shf.l.wrap.b32 	%r1734, %r1724, %r1724, 30;
	shf.l.wrap.b32 	%r2321, %r1732, %r1732, 5;
	// begin inline asm
	lop3.b32 %r1727, %r1728, %r1734, %r1730, 232;
	// end inline asm
	xor.b32  	%r2322, %r2213, %r2197;
	xor.b32  	%r2323, %r2322, %r2261;
	xor.b32  	%r2324, %r2323, %r2301;
	shf.l.wrap.b32 	%r2325, %r2324, %r2324, 1;
	add.s32 	%r2326, %r2325, %r1727;
	add.s32 	%r2327, %r2326, %r1726;
	add.s32 	%r2328, %r2327, %r2321;
	add.s32 	%r1736, %r2328, -1894007588;
	shf.l.wrap.b32 	%r1738, %r1728, %r1728, 30;
	shf.l.wrap.b32 	%r2329, %r1736, %r1736, 5;
	// begin inline asm
	lop3.b32 %r1731, %r1732, %r1738, %r1734, 232;
	// end inline asm
	xor.b32  	%r2330, %r2221, %r2205;
	xor.b32  	%r2331, %r2330, %r2269;
	xor.b32  	%r2332, %r2331, %r2309;
	shf.l.wrap.b32 	%r2333, %r2332, %r2332, 1;
	add.s32 	%r2334, %r2333, %r1731;
	add.s32 	%r2335, %r2334, %r1730;
	add.s32 	%r2336, %r2335, %r2329;
	add.s32 	%r1740, %r2336, -1894007588;
	shf.l.wrap.b32 	%r1742, %r1732, %r1732, 30;
	shf.l.wrap.b32 	%r2337, %r1740, %r1740, 5;
	// begin inline asm
	lop3.b32 %r1735, %r1736, %r1742, %r1738, 232;
	// end inline asm
	xor.b32  	%r2338, %r2229, %r2213;
	xor.b32  	%r2339, %r2338, %r2277;
	xor.b32  	%r2340, %r2339, %r2317;
	shf.l.wrap.b32 	%r2341, %r2340, %r2340, 1;
	add.s32 	%r2342, %r2341, %r1735;
	add.s32 	%r2343, %r2342, %r1734;
	add.s32 	%r2344, %r2343, %r2337;
	add.s32 	%r1744, %r2344, -1894007588;
	shf.l.wrap.b32 	%r1746, %r1736, %r1736, 30;
	shf.l.wrap.b32 	%r2345, %r1744, %r1744, 5;
	// begin inline asm
	lop3.b32 %r1739, %r1740, %r1746, %r1742, 232;
	// end inline asm
	xor.b32  	%r2346, %r2237, %r2221;
	xor.b32  	%r2347, %r2346, %r2285;
	xor.b32  	%r2348, %r2347, %r2325;
	shf.l.wrap.b32 	%r2349, %r2348, %r2348, 1;
	add.s32 	%r2350, %r2349, %r1739;
	add.s32 	%r2351, %r2350, %r1738;
	add.s32 	%r2352, %r2351, %r2345;
	add.s32 	%r1748, %r2352, -1894007588;
	shf.l.wrap.b32 	%r1750, %r1740, %r1740, 30;
	shf.l.wrap.b32 	%r2353, %r1748, %r1748, 5;
	// begin inline asm
	lop3.b32 %r1743, %r1744, %r1750, %r1746, 150;
	// end inline asm
	xor.b32  	%r2354, %r2245, %r2229;
	xor.b32  	%r2355, %r2354, %r2293;
	xor.b32  	%r2356, %r2355, %r2333;
	shf.l.wrap.b32 	%r2357, %r2356, %r2356, 1;
	add.s32 	%r2358, %r2357, %r1743;
	add.s32 	%r2359, %r2358, %r1742;
	add.s32 	%r2360, %r2359, %r2353;
	add.s32 	%r1752, %r2360, -899497514;
	shf.l.wrap.b32 	%r1754, %r1744, %r1744, 30;
	shf.l.wrap.b32 	%r2361, %r1752, %r1752, 5;
	// begin inline asm
	lop3.b32 %r1747, %r1748, %r1754, %r1750, 150;
	// end inline asm
	xor.b32  	%r2362, %r2253, %r2237;
	xor.b32  	%r2363, %r2362, %r2301;
	xor.b32  	%r2364, %r2363, %r2341;
	shf.l.wrap.b32 	%r2365, %r2364, %r2364, 1;
	add.s32 	%r2366, %r2365, %r1747;
	add.s32 	%r2367, %r2366, %r1746;
	add.s32 	%r2368, %r2367, %r2361;
	add.s32 	%r1756, %r2368, -899497514;
	shf.l.wrap.b32 	%r1758, %r1748, %r1748, 30;
	shf.l.wrap.b32 	%r2369, %r1756, %r1756, 5;
	// begin inline asm
	lop3.b32 %r1751, %r1752, %r1758, %r1754, 150;
	// end inline asm
	xor.b32  	%r2370, %r2261, %r2245;
	xor.b32  	%r2371, %r2370, %r2309;
	xor.b32  	%r2372, %r2371, %r2349;
	shf.l.wrap.b32 	%r2373, %r2372, %r2372, 1;
	add.s32 	%r2374, %r2373, %r1751;
	add.s32 	%r2375, %r2374, %r1750;
	add.s32 	%r2376, %r2375, %r2369;
	add.s32 	%r1760, %r2376, -899497514;
	shf.l.wrap.b32 	%r1762, %r1752, %r1752, 30;
	shf.l.wrap.b32 	%r2377, %r1760, %r1760, 5;
	// begin inline asm
	lop3.b32 %r1755, %r1756, %r1762, %r1758, 150;
	// end inline asm
	xor.b32  	%r2378, %r2269, %r2253;
	xor.b32  	%r2379, %r2378, %r2317;
	xor.b32  	%r2380, %r2379, %r2357;
	shf.l.wrap.b32 	%r2381, %r2380, %r2380, 1;
	add.s32 	%r2382, %r2381, %r1755;
	add.s32 	%r2383, %r2382, %r1754;
	add.s32 	%r2384, %r2383, %r2377;
	add.s32 	%r1764, %r2384, -899497514;
	shf.l.wrap.b32 	%r1766, %r1756, %r1756, 30;
	shf.l.wrap.b32 	%r2385, %r1764, %r1764, 5;
	// begin inline asm
	lop3.b32 %r1759, %r1760, %r1766, %r1762, 150;
	// end inline asm
	xor.b32  	%r2386, %r2277, %r2261;
	xor.b32  	%r2387, %r2386, %r2325;
	xor.b32  	%r2388, %r2387, %r2365;
	shf.l.wrap.b32 	%r2389, %r2388, %r2388, 1;
	add.s32 	%r2390, %r1759, %r2389;
	add.s32 	%r2391, %r2390, %r1758;
	add.s32 	%r2392, %r2391, %r2385;
	add.s32 	%r1768, %r2392, -899497514;
	shf.l.wrap.b32 	%r1770, %r1760, %r1760, 30;
	shf.l.wrap.b32 	%r2393, %r1768, %r1768, 5;
	// begin inline asm
	lop3.b32 %r1763, %r1764, %r1770, %r1766, 150;
	// end inline asm
	xor.b32  	%r2394, %r2285, %r2269;
	xor.b32  	%r2395, %r2394, %r2333;
	xor.b32  	%r2396, %r2395, %r2373;
	shf.l.wrap.b32 	%r2397, %r2396, %r2396, 1;
	add.s32 	%r2398, %r1763, %r2397;
	add.s32 	%r2399, %r2398, %r1762;
	add.s32 	%r2400, %r2399, %r2393;
	add.s32 	%r1772, %r2400, -899497514;
	shf.l.wrap.b32 	%r1774, %r1764, %r1764, 30;
	shf.l.wrap.b32 	%r2401, %r1772, %r1772, 5;
	// begin inline asm
	lop3.b32 %r1767, %r1768, %r1774, %r1770, 150;
	// end inline asm
	xor.b32  	%r2402, %r2293, %r2277;
	xor.b32  	%r2403, %r2402, %r2341;
	xor.b32  	%r2404, %r2403, %r2381;
	shf.l.wrap.b32 	%r2405, %r2404, %r2404, 1;
	add.s32 	%r2406, %r1767, %r2405;
	add.s32 	%r2407, %r2406, %r1766;
	add.s32 	%r2408, %r2407, %r2401;
	add.s32 	%r1776, %r2408, -899497514;
	shf.l.wrap.b32 	%r1778, %r1768, %r1768, 30;
	shf.l.wrap.b32 	%r2409, %r1776, %r1776, 5;
	// begin inline asm
	lop3.b32 %r1771, %r1772, %r1778, %r1774, 150;
	// end inline asm
	xor.b32  	%r2410, %r2301, %r2285;
	xor.b32  	%r2411, %r2410, %r2349;
	xor.b32  	%r2412, %r2411, %r2389;
	shf.l.wrap.b32 	%r2413, %r2412, %r2412, 1;
	add.s32 	%r2414, %r1771, %r2413;
	add.s32 	%r2415, %r2414, %r1770;
	add.s32 	%r2416, %r2415, %r2409;
	add.s32 	%r1780, %r2416, -899497514;
	shf.l.wrap.b32 	%r1782, %r1772, %r1772, 30;
	shf.l.wrap.b32 	%r2417, %r1780, %r1780, 5;
	// begin inline asm
	lop3.b32 %r1775, %r1776, %r1782, %r1778, 150;
	// end inline asm
	xor.b32  	%r2418, %r2309, %r2293;
	xor.b32  	%r2419, %r2418, %r2357;
	xor.b32  	%r2420, %r2419, %r2397;
	shf.l.wrap.b32 	%r2421, %r2420, %r2420, 1;
	add.s32 	%r2422, %r1775, %r2421;
	add.s32 	%r2423, %r2422, %r1774;
	add.s32 	%r2424, %r2423, %r2417;
	add.s32 	%r1784, %r2424, -899497514;
	shf.l.wrap.b32 	%r1786, %r1776, %r1776, 30;
	shf.l.wrap.b32 	%r2425, %r1784, %r1784, 5;
	// begin inline asm
	lop3.b32 %r1779, %r1780, %r1786, %r1782, 150;
	// end inline asm
	xor.b32  	%r2426, %r2317, %r2301;
	xor.b32  	%r2427, %r2426, %r2365;
	xor.b32  	%r2428, %r2427, %r2405;
	shf.l.wrap.b32 	%r2429, %r2428, %r2428, 1;
	add.s32 	%r2430, %r1779, %r2429;
	add.s32 	%r2431, %r2430, %r1778;
	add.s32 	%r2432, %r2431, %r2425;
	add.s32 	%r1788, %r2432, -899497514;
	shf.l.wrap.b32 	%r1790, %r1780, %r1780, 30;
	shf.l.wrap.b32 	%r2433, %r1788, %r1788, 5;
	// begin inline asm
	lop3.b32 %r1783, %r1784, %r1790, %r1786, 150;
	// end inline asm
	xor.b32  	%r2434, %r2325, %r2309;
	xor.b32  	%r2435, %r2434, %r2373;
	xor.b32  	%r2436, %r2435, %r2413;
	shf.l.wrap.b32 	%r2437, %r2436, %r2436, 1;
	add.s32 	%r2438, %r1783, %r2437;
	add.s32 	%r2439, %r2438, %r1782;
	add.s32 	%r2440, %r2439, %r2433;
	add.s32 	%r1792, %r2440, -899497514;
	shf.l.wrap.b32 	%r1794, %r1784, %r1784, 30;
	shf.l.wrap.b32 	%r2441, %r1792, %r1792, 5;
	// begin inline asm
	lop3.b32 %r1787, %r1788, %r1794, %r1790, 150;
	// end inline asm
	xor.b32  	%r2442, %r2333, %r2317;
	xor.b32  	%r2443, %r2442, %r2381;
	xor.b32  	%r2444, %r2443, %r2421;
	shf.l.wrap.b32 	%r2445, %r2444, %r2444, 1;
	add.s32 	%r2446, %r1787, %r2445;
	add.s32 	%r2447, %r2446, %r1786;
	add.s32 	%r2448, %r2447, %r2441;
	add.s32 	%r1796, %r2448, -899497514;
	shf.l.wrap.b32 	%r1798, %r1788, %r1788, 30;
	shf.l.wrap.b32 	%r2449, %r1796, %r1796, 5;
	// begin inline asm
	lop3.b32 %r1791, %r1792, %r1798, %r1794, 150;
	// end inline asm
	xor.b32  	%r2450, %r2341, %r2325;
	xor.b32  	%r2451, %r2450, %r2389;
	xor.b32  	%r2452, %r2451, %r2429;
	shf.l.wrap.b32 	%r2453, %r2452, %r2452, 1;
	add.s32 	%r2454, %r1791, %r2453;
	add.s32 	%r2455, %r2454, %r1790;
	add.s32 	%r2456, %r2455, %r2449;
	add.s32 	%r1800, %r2456, -899497514;
	shf.l.wrap.b32 	%r1802, %r1792, %r1792, 30;
	shf.l.wrap.b32 	%r2457, %r1800, %r1800, 5;
	// begin inline asm
	lop3.b32 %r1795, %r1796, %r1802, %r1798, 150;
	// end inline asm
	xor.b32  	%r2458, %r2349, %r2333;
	xor.b32  	%r2459, %r2458, %r2397;
	xor.b32  	%r2460, %r2459, %r2437;
	shf.l.wrap.b32 	%r2461, %r2460, %r2460, 1;
	add.s32 	%r2462, %r1795, %r2461;
	add.s32 	%r2463, %r2462, %r1794;
	add.s32 	%r2464, %r2463, %r2457;
	add.s32 	%r1804, %r2464, -899497514;
	shf.l.wrap.b32 	%r1806, %r1796, %r1796, 30;
	shf.l.wrap.b32 	%r2465, %r1804, %r1804, 5;
	// begin inline asm
	lop3.b32 %r1799, %r1800, %r1806, %r1802, 150;
	// end inline asm
	xor.b32  	%r2466, %r2357, %r2341;
	xor.b32  	%r2467, %r2466, %r2405;
	xor.b32  	%r2468, %r2467, %r2445;
	shf.l.wrap.b32 	%r2469, %r2468, %r2468, 1;
	add.s32 	%r2470, %r1799, %r2469;
	add.s32 	%r2471, %r2470, %r1798;
	add.s32 	%r2472, %r2471, %r2465;
	add.s32 	%r1808, %r2472, -899497514;
	shf.l.wrap.b32 	%r1810, %r1800, %r1800, 30;
	shf.l.wrap.b32 	%r2473, %r1808, %r1808, 5;
	// begin inline asm
	lop3.b32 %r1803, %r1804, %r1810, %r1806, 150;
	// end inline asm
	xor.b32  	%r2474, %r2365, %r2349;
	xor.b32  	%r2475, %r2474, %r2413;
	xor.b32  	%r2476, %r2475, %r2453;
	shf.l.wrap.b32 	%r2477, %r2476, %r2476, 1;
	add.s32 	%r2478, %r1803, %r2477;
	add.s32 	%r2479, %r2478, %r1802;
	add.s32 	%r2480, %r2479, %r2473;
	add.s32 	%r1812, %r2480, -899497514;
	shf.l.wrap.b32 	%r1814, %r1804, %r1804, 30;
	shf.l.wrap.b32 	%r2481, %r1812, %r1812, 5;
	// begin inline asm
	lop3.b32 %r1807, %r1808, %r1814, %r1810, 150;
	// end inline asm
	xor.b32  	%r2482, %r2373, %r2357;
	xor.b32  	%r2483, %r2482, %r2421;
	xor.b32  	%r2484, %r2483, %r2461;
	shf.l.wrap.b32 	%r2485, %r2484, %r2484, 1;
	add.s32 	%r2486, %r1807, %r2485;
	add.s32 	%r2487, %r2486, %r1806;
	add.s32 	%r2488, %r2487, %r2481;
	add.s32 	%r1816, %r2488, -899497514;
	shf.l.wrap.b32 	%r1818, %r1808, %r1808, 30;
	shf.l.wrap.b32 	%r2489, %r1816, %r1816, 5;
	// begin inline asm
	lop3.b32 %r1811, %r1812, %r1818, %r1814, 150;
	// end inline asm
	xor.b32  	%r2490, %r2381, %r2365;
	xor.b32  	%r2491, %r2490, %r2429;
	xor.b32  	%r2492, %r2491, %r2469;
	shf.l.wrap.b32 	%r2493, %r2492, %r2492, 1;
	add.s32 	%r2494, %r1811, %r2493;
	add.s32 	%r2495, %r2494, %r1810;
	add.s32 	%r2496, %r2495, %r2489;
	add.s32 	%r1820, %r2496, -899497514;
	shf.l.wrap.b32 	%r1822, %r1812, %r1812, 30;
	shf.l.wrap.b32 	%r2497, %r1820, %r1820, 5;
	// begin inline asm
	lop3.b32 %r1815, %r1816, %r1822, %r1818, 150;
	// end inline asm
	xor.b32  	%r2498, %r2389, %r2373;
	xor.b32  	%r2499, %r2498, %r2437;
	xor.b32  	%r2500, %r2499, %r2477;
	shf.l.wrap.b32 	%r2501, %r2500, %r2500, 1;
	add.s32 	%r2502, %r1815, %r2501;
	add.s32 	%r2503, %r2502, %r1814;
	add.s32 	%r2504, %r2503, %r2497;
	add.s32 	%r2505, %r2504, -899497514;
	shf.l.wrap.b32 	%r1821, %r1816, %r1816, 30;
	shf.l.wrap.b32 	%r2506, %r2505, %r2505, 5;
	// begin inline asm
	lop3.b32 %r1819, %r1820, %r1821, %r1822, 150;
	// end inline asm
	xor.b32  	%r2507, %r2397, %r2381;
	xor.b32  	%r2508, %r2507, %r2445;
	xor.b32  	%r2509, %r2508, %r2485;
	shf.l.wrap.b32 	%r2510, %r2509, %r2509, 1;
	shf.l.wrap.b32 	%r2511, %r1820, %r1820, 30;
	add.s32 	%r2512, %r1819, %r1508;
	add.s32 	%r2513, %r2512, %r2510;
	add.s32 	%r2514, %r2513, %r1818;
	add.s32 	%r2515, %r2514, %r2506;
	add.s32 	%r2516, %r2515, -899497514;
	st.local.u32 	[%rd31+4], %r2516;
	add.s32 	%r2517, %r2505, %r1504;
	st.local.u32 	[%rd31+8], %r2517;
	add.s32 	%r2518, %r2511, %r1505;
	st.local.u32 	[%rd31+12], %r2518;
	add.s32 	%r2519, %r1821, %r1506;
	st.local.u32 	[%rd31+16], %r2519;
	add.s32 	%r2520, %r1822, %r1938;
	st.local.u32 	[%rd31+20], %r2520;
	add.u64 	%rd180, %SP, 80;
	add.u64 	%rd181, %SPL, 80;
	cvt.u64.u32 	%rd182, %r89;
	add.s64 	%rd264, %rd181, %rd182;
	add.s64 	%rd262, %rd180, %rd182;
	sub.s32 	%r8096, %r8096, %r89;
	mov.u32 	%r8077, 0;

$L__BB4_34:
	setp.lt.u32 	%p29, %r8096, 64;
	@%p29 bra 	$L__BB4_39;

$L__BB4_35:
	and.b64  	%rd183, %rd262, 3;
	setp.eq.s64 	%p30, %rd183, 0;
	@%p30 bra 	$L__BB4_37;

	ld.local.u8 	%r2521, [%rd264];
	shl.b32 	%r2522, %r2521, 24;
	ld.local.u8 	%r2523, [%rd264+1];
	shl.b32 	%r2524, %r2523, 16;
	or.b32  	%r2525, %r2524, %r2522;
	ld.local.u8 	%rs101, [%rd264+2];
	mul.wide.u16 	%r2526, %rs101, 256;
	or.b32  	%r2527, %r2525, %r2526;
	ld.local.u8 	%r2528, [%rd264+3];
	or.b32  	%r8095, %r2527, %r2528;
	ld.local.u8 	%r2529, [%rd264+4];
	shl.b32 	%r2530, %r2529, 24;
	ld.local.u8 	%r2531, [%rd264+5];
	shl.b32 	%r2532, %r2531, 16;
	or.b32  	%r2533, %r2532, %r2530;
	ld.local.u8 	%rs102, [%rd264+6];
	mul.wide.u16 	%r2534, %rs102, 256;
	or.b32  	%r2535, %r2533, %r2534;
	ld.local.u8 	%r2536, [%rd264+7];
	or.b32  	%r8094, %r2535, %r2536;
	ld.local.u8 	%r2537, [%rd264+8];
	shl.b32 	%r2538, %r2537, 24;
	ld.local.u8 	%r2539, [%rd264+9];
	shl.b32 	%r2540, %r2539, 16;
	or.b32  	%r2541, %r2540, %r2538;
	ld.local.u8 	%rs103, [%rd264+10];
	mul.wide.u16 	%r2542, %rs103, 256;
	or.b32  	%r2543, %r2541, %r2542;
	ld.local.u8 	%r2544, [%rd264+11];
	or.b32  	%r8093, %r2543, %r2544;
	ld.local.u8 	%r2545, [%rd264+12];
	shl.b32 	%r2546, %r2545, 24;
	ld.local.u8 	%r2547, [%rd264+13];
	shl.b32 	%r2548, %r2547, 16;
	or.b32  	%r2549, %r2548, %r2546;
	ld.local.u8 	%rs104, [%rd264+14];
	mul.wide.u16 	%r2550, %rs104, 256;
	or.b32  	%r2551, %r2549, %r2550;
	ld.local.u8 	%r2552, [%rd264+15];
	or.b32  	%r8092, %r2551, %r2552;
	ld.local.u8 	%r2553, [%rd264+16];
	shl.b32 	%r2554, %r2553, 24;
	ld.local.u8 	%r2555, [%rd264+17];
	shl.b32 	%r2556, %r2555, 16;
	or.b32  	%r2557, %r2556, %r2554;
	ld.local.u8 	%rs105, [%rd264+18];
	mul.wide.u16 	%r2558, %rs105, 256;
	or.b32  	%r2559, %r2557, %r2558;
	ld.local.u8 	%r2560, [%rd264+19];
	or.b32  	%r8091, %r2559, %r2560;
	ld.local.u8 	%r2561, [%rd264+20];
	shl.b32 	%r2562, %r2561, 24;
	ld.local.u8 	%r2563, [%rd264+21];
	shl.b32 	%r2564, %r2563, 16;
	or.b32  	%r2565, %r2564, %r2562;
	ld.local.u8 	%rs106, [%rd264+22];
	mul.wide.u16 	%r2566, %rs106, 256;
	or.b32  	%r2567, %r2565, %r2566;
	ld.local.u8 	%r2568, [%rd264+23];
	or.b32  	%r8090, %r2567, %r2568;
	ld.local.u8 	%r2569, [%rd264+24];
	shl.b32 	%r2570, %r2569, 24;
	ld.local.u8 	%r2571, [%rd264+25];
	shl.b32 	%r2572, %r2571, 16;
	or.b32  	%r2573, %r2572, %r2570;
	ld.local.u8 	%rs107, [%rd264+26];
	mul.wide.u16 	%r2574, %rs107, 256;
	or.b32  	%r2575, %r2573, %r2574;
	ld.local.u8 	%r2576, [%rd264+27];
	or.b32  	%r8089, %r2575, %r2576;
	ld.local.u8 	%r2577, [%rd264+28];
	shl.b32 	%r2578, %r2577, 24;
	ld.local.u8 	%r2579, [%rd264+29];
	shl.b32 	%r2580, %r2579, 16;
	or.b32  	%r2581, %r2580, %r2578;
	ld.local.u8 	%rs108, [%rd264+30];
	mul.wide.u16 	%r2582, %rs108, 256;
	or.b32  	%r2583, %r2581, %r2582;
	ld.local.u8 	%r2584, [%rd264+31];
	or.b32  	%r8088, %r2583, %r2584;
	ld.local.u8 	%r2585, [%rd264+32];
	shl.b32 	%r2586, %r2585, 24;
	ld.local.u8 	%r2587, [%rd264+33];
	shl.b32 	%r2588, %r2587, 16;
	or.b32  	%r2589, %r2588, %r2586;
	ld.local.u8 	%rs109, [%rd264+34];
	mul.wide.u16 	%r2590, %rs109, 256;
	or.b32  	%r2591, %r2589, %r2590;
	ld.local.u8 	%r2592, [%rd264+35];
	or.b32  	%r8087, %r2591, %r2592;
	ld.local.u8 	%r2593, [%rd264+36];
	shl.b32 	%r2594, %r2593, 24;
	ld.local.u8 	%r2595, [%rd264+37];
	shl.b32 	%r2596, %r2595, 16;
	or.b32  	%r2597, %r2596, %r2594;
	ld.local.u8 	%rs110, [%rd264+38];
	mul.wide.u16 	%r2598, %rs110, 256;
	or.b32  	%r2599, %r2597, %r2598;
	ld.local.u8 	%r2600, [%rd264+39];
	or.b32  	%r8086, %r2599, %r2600;
	ld.local.u8 	%r2601, [%rd264+40];
	shl.b32 	%r2602, %r2601, 24;
	ld.local.u8 	%r2603, [%rd264+41];
	shl.b32 	%r2604, %r2603, 16;
	or.b32  	%r2605, %r2604, %r2602;
	ld.local.u8 	%rs111, [%rd264+42];
	mul.wide.u16 	%r2606, %rs111, 256;
	or.b32  	%r2607, %r2605, %r2606;
	ld.local.u8 	%r2608, [%rd264+43];
	or.b32  	%r8085, %r2607, %r2608;
	ld.local.u8 	%r2609, [%rd264+44];
	shl.b32 	%r2610, %r2609, 24;
	ld.local.u8 	%r2611, [%rd264+45];
	shl.b32 	%r2612, %r2611, 16;
	or.b32  	%r2613, %r2612, %r2610;
	ld.local.u8 	%rs112, [%rd264+46];
	mul.wide.u16 	%r2614, %rs112, 256;
	or.b32  	%r2615, %r2613, %r2614;
	ld.local.u8 	%r2616, [%rd264+47];
	or.b32  	%r8084, %r2615, %r2616;
	ld.local.u8 	%r2617, [%rd264+48];
	shl.b32 	%r2618, %r2617, 24;
	ld.local.u8 	%r2619, [%rd264+49];
	shl.b32 	%r2620, %r2619, 16;
	or.b32  	%r2621, %r2620, %r2618;
	ld.local.u8 	%rs113, [%rd264+50];
	mul.wide.u16 	%r2622, %rs113, 256;
	or.b32  	%r2623, %r2621, %r2622;
	ld.local.u8 	%r2624, [%rd264+51];
	or.b32  	%r8083, %r2623, %r2624;
	ld.local.u8 	%r2625, [%rd264+52];
	shl.b32 	%r2626, %r2625, 24;
	ld.local.u8 	%r2627, [%rd264+53];
	shl.b32 	%r2628, %r2627, 16;
	or.b32  	%r2629, %r2628, %r2626;
	ld.local.u8 	%rs114, [%rd264+54];
	mul.wide.u16 	%r2630, %rs114, 256;
	or.b32  	%r2631, %r2629, %r2630;
	ld.local.u8 	%r2632, [%rd264+55];
	or.b32  	%r8082, %r2631, %r2632;
	ld.local.u8 	%r2633, [%rd264+56];
	shl.b32 	%r2634, %r2633, 24;
	ld.local.u8 	%r2635, [%rd264+57];
	shl.b32 	%r2636, %r2635, 16;
	or.b32  	%r2637, %r2636, %r2634;
	ld.local.u8 	%rs115, [%rd264+58];
	mul.wide.u16 	%r2638, %rs115, 256;
	or.b32  	%r2639, %r2637, %r2638;
	ld.local.u8 	%r2640, [%rd264+59];
	or.b32  	%r8081, %r2639, %r2640;
	ld.local.u8 	%r2641, [%rd264+60];
	shl.b32 	%r2642, %r2641, 24;
	ld.local.u8 	%r2643, [%rd264+61];
	shl.b32 	%r2644, %r2643, 16;
	or.b32  	%r2645, %r2644, %r2642;
	ld.local.u8 	%rs116, [%rd264+62];
	mul.wide.u16 	%r2646, %rs116, 256;
	or.b32  	%r2647, %r2645, %r2646;
	ld.local.u8 	%r2648, [%rd264+63];
	or.b32  	%r8080, %r2647, %r2648;
	bra.uni 	$L__BB4_38;

$L__BB4_37:
	ld.local.u32 	%r2649, [%rd264];
	shf.l.wrap.b32 	%r2650, %r2649, %r2649, 16;
	shl.b32 	%r2651, %r2650, 8;
	and.b32  	%r2652, %r2651, -16711936;
	shr.u32 	%r2653, %r2650, 8;
	and.b32  	%r2654, %r2653, 16711935;
	or.b32  	%r8095, %r2652, %r2654;
	ld.local.u32 	%r2655, [%rd264+4];
	shf.l.wrap.b32 	%r2656, %r2655, %r2655, 16;
	shl.b32 	%r2657, %r2656, 8;
	and.b32  	%r2658, %r2657, -16711936;
	shr.u32 	%r2659, %r2656, 8;
	and.b32  	%r2660, %r2659, 16711935;
	or.b32  	%r8094, %r2658, %r2660;
	ld.local.u32 	%r2661, [%rd264+8];
	shf.l.wrap.b32 	%r2662, %r2661, %r2661, 16;
	shl.b32 	%r2663, %r2662, 8;
	and.b32  	%r2664, %r2663, -16711936;
	shr.u32 	%r2665, %r2662, 8;
	and.b32  	%r2666, %r2665, 16711935;
	or.b32  	%r8093, %r2664, %r2666;
	ld.local.u32 	%r2667, [%rd264+12];
	shf.l.wrap.b32 	%r2668, %r2667, %r2667, 16;
	shl.b32 	%r2669, %r2668, 8;
	and.b32  	%r2670, %r2669, -16711936;
	shr.u32 	%r2671, %r2668, 8;
	and.b32  	%r2672, %r2671, 16711935;
	or.b32  	%r8092, %r2670, %r2672;
	ld.local.u32 	%r2673, [%rd264+16];
	shf.l.wrap.b32 	%r2674, %r2673, %r2673, 16;
	shl.b32 	%r2675, %r2674, 8;
	and.b32  	%r2676, %r2675, -16711936;
	shr.u32 	%r2677, %r2674, 8;
	and.b32  	%r2678, %r2677, 16711935;
	or.b32  	%r8091, %r2676, %r2678;
	ld.local.u32 	%r2679, [%rd264+20];
	shf.l.wrap.b32 	%r2680, %r2679, %r2679, 16;
	shl.b32 	%r2681, %r2680, 8;
	and.b32  	%r2682, %r2681, -16711936;
	shr.u32 	%r2683, %r2680, 8;
	and.b32  	%r2684, %r2683, 16711935;
	or.b32  	%r8090, %r2682, %r2684;
	ld.local.u32 	%r2685, [%rd264+24];
	shf.l.wrap.b32 	%r2686, %r2685, %r2685, 16;
	shl.b32 	%r2687, %r2686, 8;
	and.b32  	%r2688, %r2687, -16711936;
	shr.u32 	%r2689, %r2686, 8;
	and.b32  	%r2690, %r2689, 16711935;
	or.b32  	%r8089, %r2688, %r2690;
	ld.local.u32 	%r2691, [%rd264+28];
	shf.l.wrap.b32 	%r2692, %r2691, %r2691, 16;
	shl.b32 	%r2693, %r2692, 8;
	and.b32  	%r2694, %r2693, -16711936;
	shr.u32 	%r2695, %r2692, 8;
	and.b32  	%r2696, %r2695, 16711935;
	or.b32  	%r8088, %r2694, %r2696;
	ld.local.u32 	%r2697, [%rd264+32];
	shf.l.wrap.b32 	%r2698, %r2697, %r2697, 16;
	shl.b32 	%r2699, %r2698, 8;
	and.b32  	%r2700, %r2699, -16711936;
	shr.u32 	%r2701, %r2698, 8;
	and.b32  	%r2702, %r2701, 16711935;
	or.b32  	%r8087, %r2700, %r2702;
	ld.local.u32 	%r2703, [%rd264+36];
	shf.l.wrap.b32 	%r2704, %r2703, %r2703, 16;
	shl.b32 	%r2705, %r2704, 8;
	and.b32  	%r2706, %r2705, -16711936;
	shr.u32 	%r2707, %r2704, 8;
	and.b32  	%r2708, %r2707, 16711935;
	or.b32  	%r8086, %r2706, %r2708;
	ld.local.u32 	%r2709, [%rd264+40];
	shf.l.wrap.b32 	%r2710, %r2709, %r2709, 16;
	shl.b32 	%r2711, %r2710, 8;
	and.b32  	%r2712, %r2711, -16711936;
	shr.u32 	%r2713, %r2710, 8;
	and.b32  	%r2714, %r2713, 16711935;
	or.b32  	%r8085, %r2712, %r2714;
	ld.local.u32 	%r2715, [%rd264+44];
	shf.l.wrap.b32 	%r2716, %r2715, %r2715, 16;
	shl.b32 	%r2717, %r2716, 8;
	and.b32  	%r2718, %r2717, -16711936;
	shr.u32 	%r2719, %r2716, 8;
	and.b32  	%r2720, %r2719, 16711935;
	or.b32  	%r8084, %r2718, %r2720;
	ld.local.u32 	%r2721, [%rd264+48];
	shf.l.wrap.b32 	%r2722, %r2721, %r2721, 16;
	shl.b32 	%r2723, %r2722, 8;
	and.b32  	%r2724, %r2723, -16711936;
	shr.u32 	%r2725, %r2722, 8;
	and.b32  	%r2726, %r2725, 16711935;
	or.b32  	%r8083, %r2724, %r2726;
	ld.local.u32 	%r2727, [%rd264+52];
	shf.l.wrap.b32 	%r2728, %r2727, %r2727, 16;
	shl.b32 	%r2729, %r2728, 8;
	and.b32  	%r2730, %r2729, -16711936;
	shr.u32 	%r2731, %r2728, 8;
	and.b32  	%r2732, %r2731, 16711935;
	or.b32  	%r8082, %r2730, %r2732;
	ld.local.u32 	%r2733, [%rd264+56];
	shf.l.wrap.b32 	%r2734, %r2733, %r2733, 16;
	shl.b32 	%r2735, %r2734, 8;
	and.b32  	%r2736, %r2735, -16711936;
	shr.u32 	%r2737, %r2734, 8;
	and.b32  	%r2738, %r2737, 16711935;
	or.b32  	%r8081, %r2736, %r2738;
	ld.local.u32 	%r2739, [%rd264+60];
	shf.l.wrap.b32 	%r2740, %r2739, %r2739, 16;
	shl.b32 	%r2741, %r2740, 8;
	and.b32  	%r2742, %r2741, -16711936;
	shr.u32 	%r2743, %r2740, 8;
	and.b32  	%r2744, %r2743, 16711935;
	or.b32  	%r8080, %r2742, %r2744;

$L__BB4_38:
	ld.local.u32 	%r2750, [%rd31+4];
	shf.l.wrap.b32 	%r3065, %r2750, %r2750, 5;
	ld.local.u32 	%r2748, [%rd31+16];
	ld.local.u32 	%r2747, [%rd31+12];
	ld.local.u32 	%r2746, [%rd31+8];
	// begin inline asm
	lop3.b32 %r2745, %r2746, %r2747, %r2748, 202;
	// end inline asm
	add.s32 	%r3066, %r8095, %r3065;
	ld.local.u32 	%r3067, [%rd31+20];
	add.s32 	%r3068, %r3066, %r3067;
	add.s32 	%r3069, %r3068, %r2745;
	add.s32 	%r2754, %r3069, 1518500249;
	shf.l.wrap.b32 	%r2756, %r2746, %r2746, 30;
	shf.l.wrap.b32 	%r3070, %r2754, %r2754, 5;
	// begin inline asm
	lop3.b32 %r2749, %r2750, %r2756, %r2747, 202;
	// end inline asm
	add.s32 	%r3071, %r8094, %r2748;
	add.s32 	%r3072, %r3071, %r2749;
	add.s32 	%r3073, %r3072, %r3070;
	add.s32 	%r2758, %r3073, 1518500249;
	shf.l.wrap.b32 	%r2760, %r2750, %r2750, 30;
	shf.l.wrap.b32 	%r3074, %r2758, %r2758, 5;
	// begin inline asm
	lop3.b32 %r2753, %r2754, %r2760, %r2756, 202;
	// end inline asm
	add.s32 	%r3075, %r8093, %r2747;
	add.s32 	%r3076, %r3075, %r2753;
	add.s32 	%r3077, %r3076, %r3074;
	add.s32 	%r2762, %r3077, 1518500249;
	shf.l.wrap.b32 	%r2764, %r2754, %r2754, 30;
	shf.l.wrap.b32 	%r3078, %r2762, %r2762, 5;
	// begin inline asm
	lop3.b32 %r2757, %r2758, %r2764, %r2760, 202;
	// end inline asm
	add.s32 	%r3079, %r8092, %r2756;
	add.s32 	%r3080, %r3079, %r2757;
	add.s32 	%r3081, %r3080, %r3078;
	add.s32 	%r2766, %r3081, 1518500249;
	shf.l.wrap.b32 	%r2768, %r2758, %r2758, 30;
	shf.l.wrap.b32 	%r3082, %r2766, %r2766, 5;
	// begin inline asm
	lop3.b32 %r2761, %r2762, %r2768, %r2764, 202;
	// end inline asm
	add.s32 	%r3083, %r8091, %r2760;
	add.s32 	%r3084, %r3083, %r2761;
	add.s32 	%r3085, %r3084, %r3082;
	add.s32 	%r2770, %r3085, 1518500249;
	shf.l.wrap.b32 	%r2772, %r2762, %r2762, 30;
	shf.l.wrap.b32 	%r3086, %r2770, %r2770, 5;
	// begin inline asm
	lop3.b32 %r2765, %r2766, %r2772, %r2768, 202;
	// end inline asm
	add.s32 	%r3087, %r8090, %r2765;
	add.s32 	%r3088, %r3087, %r2764;
	add.s32 	%r3089, %r3088, %r3086;
	add.s32 	%r2774, %r3089, 1518500249;
	shf.l.wrap.b32 	%r2776, %r2766, %r2766, 30;
	shf.l.wrap.b32 	%r3090, %r2774, %r2774, 5;
	// begin inline asm
	lop3.b32 %r2769, %r2770, %r2776, %r2772, 202;
	// end inline asm
	add.s32 	%r3091, %r8089, %r2769;
	add.s32 	%r3092, %r3091, %r2768;
	add.s32 	%r3093, %r3092, %r3090;
	add.s32 	%r2778, %r3093, 1518500249;
	shf.l.wrap.b32 	%r2780, %r2770, %r2770, 30;
	shf.l.wrap.b32 	%r3094, %r2778, %r2778, 5;
	// begin inline asm
	lop3.b32 %r2773, %r2774, %r2780, %r2776, 202;
	// end inline asm
	add.s32 	%r3095, %r8088, %r2773;
	add.s32 	%r3096, %r3095, %r2772;
	add.s32 	%r3097, %r3096, %r3094;
	add.s32 	%r2782, %r3097, 1518500249;
	shf.l.wrap.b32 	%r2784, %r2774, %r2774, 30;
	shf.l.wrap.b32 	%r3098, %r2782, %r2782, 5;
	// begin inline asm
	lop3.b32 %r2777, %r2778, %r2784, %r2780, 202;
	// end inline asm
	add.s32 	%r3099, %r8087, %r2777;
	add.s32 	%r3100, %r3099, %r2776;
	add.s32 	%r3101, %r3100, %r3098;
	add.s32 	%r2786, %r3101, 1518500249;
	shf.l.wrap.b32 	%r2788, %r2778, %r2778, 30;
	shf.l.wrap.b32 	%r3102, %r2786, %r2786, 5;
	// begin inline asm
	lop3.b32 %r2781, %r2782, %r2788, %r2784, 202;
	// end inline asm
	add.s32 	%r3103, %r8086, %r2781;
	add.s32 	%r3104, %r3103, %r2780;
	add.s32 	%r3105, %r3104, %r3102;
	add.s32 	%r2790, %r3105, 1518500249;
	shf.l.wrap.b32 	%r2792, %r2782, %r2782, 30;
	shf.l.wrap.b32 	%r3106, %r2790, %r2790, 5;
	// begin inline asm
	lop3.b32 %r2785, %r2786, %r2792, %r2788, 202;
	// end inline asm
	add.s32 	%r3107, %r8085, %r2785;
	add.s32 	%r3108, %r3107, %r2784;
	add.s32 	%r3109, %r3108, %r3106;
	add.s32 	%r2794, %r3109, 1518500249;
	shf.l.wrap.b32 	%r2796, %r2786, %r2786, 30;
	shf.l.wrap.b32 	%r3110, %r2794, %r2794, 5;
	// begin inline asm
	lop3.b32 %r2789, %r2790, %r2796, %r2792, 202;
	// end inline asm
	add.s32 	%r3111, %r8084, %r2789;
	add.s32 	%r3112, %r3111, %r2788;
	add.s32 	%r3113, %r3112, %r3110;
	add.s32 	%r2798, %r3113, 1518500249;
	shf.l.wrap.b32 	%r2800, %r2790, %r2790, 30;
	shf.l.wrap.b32 	%r3114, %r2798, %r2798, 5;
	// begin inline asm
	lop3.b32 %r2793, %r2794, %r2800, %r2796, 202;
	// end inline asm
	add.s32 	%r3115, %r8083, %r2793;
	add.s32 	%r3116, %r3115, %r2792;
	add.s32 	%r3117, %r3116, %r3114;
	add.s32 	%r2802, %r3117, 1518500249;
	shf.l.wrap.b32 	%r2804, %r2794, %r2794, 30;
	shf.l.wrap.b32 	%r3118, %r2802, %r2802, 5;
	// begin inline asm
	lop3.b32 %r2797, %r2798, %r2804, %r2800, 202;
	// end inline asm
	add.s32 	%r3119, %r8082, %r2797;
	add.s32 	%r3120, %r3119, %r2796;
	add.s32 	%r3121, %r3120, %r3118;
	add.s32 	%r2806, %r3121, 1518500249;
	shf.l.wrap.b32 	%r2808, %r2798, %r2798, 30;
	shf.l.wrap.b32 	%r3122, %r2806, %r2806, 5;
	// begin inline asm
	lop3.b32 %r2801, %r2802, %r2808, %r2804, 202;
	// end inline asm
	add.s32 	%r3123, %r8081, %r2801;
	add.s32 	%r3124, %r3123, %r2800;
	add.s32 	%r3125, %r3124, %r3122;
	add.s32 	%r2810, %r3125, 1518500249;
	shf.l.wrap.b32 	%r2812, %r2802, %r2802, 30;
	shf.l.wrap.b32 	%r3126, %r2810, %r2810, 5;
	// begin inline asm
	lop3.b32 %r2805, %r2806, %r2812, %r2808, 202;
	// end inline asm
	add.s32 	%r3127, %r8080, %r2805;
	add.s32 	%r3128, %r3127, %r2804;
	add.s32 	%r3129, %r3128, %r3126;
	add.s32 	%r2814, %r3129, 1518500249;
	shf.l.wrap.b32 	%r2816, %r2806, %r2806, 30;
	shf.l.wrap.b32 	%r3130, %r2814, %r2814, 5;
	// begin inline asm
	lop3.b32 %r2809, %r2810, %r2816, %r2812, 202;
	// end inline asm
	xor.b32  	%r3131, %r8087, %r8082;
	xor.b32  	%r3132, %r3131, %r8093;
	xor.b32  	%r3133, %r3132, %r8095;
	shf.l.wrap.b32 	%r3134, %r3133, %r3133, 1;
	add.s32 	%r3135, %r3134, %r2809;
	add.s32 	%r3136, %r3135, %r2808;
	add.s32 	%r3137, %r3136, %r3130;
	add.s32 	%r2818, %r3137, 1518500249;
	shf.l.wrap.b32 	%r2820, %r2810, %r2810, 30;
	shf.l.wrap.b32 	%r3138, %r2818, %r2818, 5;
	// begin inline asm
	lop3.b32 %r2813, %r2814, %r2820, %r2816, 202;
	// end inline asm
	xor.b32  	%r3139, %r8086, %r8081;
	xor.b32  	%r3140, %r3139, %r8092;
	xor.b32  	%r3141, %r3140, %r8094;
	shf.l.wrap.b32 	%r3142, %r3141, %r3141, 1;
	add.s32 	%r3143, %r3142, %r2813;
	add.s32 	%r3144, %r3143, %r2812;
	add.s32 	%r3145, %r3144, %r3138;
	add.s32 	%r2822, %r3145, 1518500249;
	shf.l.wrap.b32 	%r2824, %r2814, %r2814, 30;
	shf.l.wrap.b32 	%r3146, %r2822, %r2822, 5;
	// begin inline asm
	lop3.b32 %r2817, %r2818, %r2824, %r2820, 202;
	// end inline asm
	xor.b32  	%r3147, %r8085, %r8080;
	xor.b32  	%r3148, %r3147, %r8091;
	xor.b32  	%r3149, %r3148, %r8093;
	shf.l.wrap.b32 	%r3150, %r3149, %r3149, 1;
	add.s32 	%r3151, %r3150, %r2817;
	add.s32 	%r3152, %r3151, %r2816;
	add.s32 	%r3153, %r3152, %r3146;
	add.s32 	%r2826, %r3153, 1518500249;
	shf.l.wrap.b32 	%r2828, %r2818, %r2818, 30;
	shf.l.wrap.b32 	%r3154, %r2826, %r2826, 5;
	// begin inline asm
	lop3.b32 %r2821, %r2822, %r2828, %r2824, 202;
	// end inline asm
	xor.b32  	%r3155, %r8090, %r8084;
	xor.b32  	%r3156, %r3155, %r8092;
	xor.b32  	%r3157, %r3156, %r3134;
	shf.l.wrap.b32 	%r3158, %r3157, %r3157, 1;
	add.s32 	%r3159, %r3158, %r2821;
	add.s32 	%r3160, %r3159, %r2820;
	add.s32 	%r3161, %r3160, %r3154;
	add.s32 	%r2830, %r3161, 1518500249;
	shf.l.wrap.b32 	%r2832, %r2822, %r2822, 30;
	shf.l.wrap.b32 	%r3162, %r2830, %r2830, 5;
	// begin inline asm
	lop3.b32 %r2825, %r2826, %r2832, %r2828, 150;
	// end inline asm
	xor.b32  	%r3163, %r8089, %r8083;
	xor.b32  	%r3164, %r3163, %r8091;
	xor.b32  	%r3165, %r3164, %r3142;
	shf.l.wrap.b32 	%r3166, %r3165, %r3165, 1;
	add.s32 	%r3167, %r3166, %r2825;
	add.s32 	%r3168, %r3167, %r2824;
	add.s32 	%r3169, %r3168, %r3162;
	add.s32 	%r2834, %r3169, 1859775393;
	shf.l.wrap.b32 	%r2836, %r2826, %r2826, 30;
	shf.l.wrap.b32 	%r3170, %r2834, %r2834, 5;
	// begin inline asm
	lop3.b32 %r2829, %r2830, %r2836, %r2832, 150;
	// end inline asm
	xor.b32  	%r3171, %r8088, %r8082;
	xor.b32  	%r3172, %r3171, %r8090;
	xor.b32  	%r3173, %r3172, %r3150;
	shf.l.wrap.b32 	%r3174, %r3173, %r3173, 1;
	add.s32 	%r3175, %r3174, %r2829;
	add.s32 	%r3176, %r3175, %r2828;
	add.s32 	%r3177, %r3176, %r3170;
	add.s32 	%r2838, %r3177, 1859775393;
	shf.l.wrap.b32 	%r2840, %r2830, %r2830, 30;
	shf.l.wrap.b32 	%r3178, %r2838, %r2838, 5;
	// begin inline asm
	lop3.b32 %r2833, %r2834, %r2840, %r2836, 150;
	// end inline asm
	xor.b32  	%r3179, %r8087, %r8081;
	xor.b32  	%r3180, %r3179, %r8089;
	xor.b32  	%r3181, %r3180, %r3158;
	shf.l.wrap.b32 	%r3182, %r3181, %r3181, 1;
	add.s32 	%r3183, %r3182, %r2833;
	add.s32 	%r3184, %r3183, %r2832;
	add.s32 	%r3185, %r3184, %r3178;
	add.s32 	%r2842, %r3185, 1859775393;
	shf.l.wrap.b32 	%r2844, %r2834, %r2834, 30;
	shf.l.wrap.b32 	%r3186, %r2842, %r2842, 5;
	// begin inline asm
	lop3.b32 %r2837, %r2838, %r2844, %r2840, 150;
	// end inline asm
	xor.b32  	%r3187, %r8086, %r8080;
	xor.b32  	%r3188, %r3187, %r8088;
	xor.b32  	%r3189, %r3188, %r3166;
	shf.l.wrap.b32 	%r3190, %r3189, %r3189, 1;
	add.s32 	%r3191, %r3190, %r2837;
	add.s32 	%r3192, %r3191, %r2836;
	add.s32 	%r3193, %r3192, %r3186;
	add.s32 	%r2846, %r3193, 1859775393;
	shf.l.wrap.b32 	%r2848, %r2838, %r2838, 30;
	shf.l.wrap.b32 	%r3194, %r2846, %r2846, 5;
	// begin inline asm
	lop3.b32 %r2841, %r2842, %r2848, %r2844, 150;
	// end inline asm
	xor.b32  	%r3195, %r8087, %r8085;
	xor.b32  	%r3196, %r3195, %r3134;
	xor.b32  	%r3197, %r3196, %r3174;
	shf.l.wrap.b32 	%r3198, %r3197, %r3197, 1;
	add.s32 	%r3199, %r3198, %r2841;
	add.s32 	%r3200, %r3199, %r2840;
	add.s32 	%r3201, %r3200, %r3194;
	add.s32 	%r2850, %r3201, 1859775393;
	shf.l.wrap.b32 	%r2852, %r2842, %r2842, 30;
	shf.l.wrap.b32 	%r3202, %r2850, %r2850, 5;
	// begin inline asm
	lop3.b32 %r2845, %r2846, %r2852, %r2848, 150;
	// end inline asm
	xor.b32  	%r3203, %r8086, %r8084;
	xor.b32  	%r3204, %r3203, %r3142;
	xor.b32  	%r3205, %r3204, %r3182;
	shf.l.wrap.b32 	%r3206, %r3205, %r3205, 1;
	add.s32 	%r3207, %r3206, %r2845;
	add.s32 	%r3208, %r3207, %r2844;
	add.s32 	%r3209, %r3208, %r3202;
	add.s32 	%r2854, %r3209, 1859775393;
	shf.l.wrap.b32 	%r2856, %r2846, %r2846, 30;
	shf.l.wrap.b32 	%r3210, %r2854, %r2854, 5;
	// begin inline asm
	lop3.b32 %r2849, %r2850, %r2856, %r2852, 150;
	// end inline asm
	xor.b32  	%r3211, %r8085, %r8083;
	xor.b32  	%r3212, %r3211, %r3150;
	xor.b32  	%r3213, %r3212, %r3190;
	shf.l.wrap.b32 	%r3214, %r3213, %r3213, 1;
	add.s32 	%r3215, %r3214, %r2849;
	add.s32 	%r3216, %r3215, %r2848;
	add.s32 	%r3217, %r3216, %r3210;
	add.s32 	%r2858, %r3217, 1859775393;
	shf.l.wrap.b32 	%r2860, %r2850, %r2850, 30;
	shf.l.wrap.b32 	%r3218, %r2858, %r2858, 5;
	// begin inline asm
	lop3.b32 %r2853, %r2854, %r2860, %r2856, 150;
	// end inline asm
	xor.b32  	%r3219, %r8084, %r8082;
	xor.b32  	%r3220, %r3219, %r3158;
	xor.b32  	%r3221, %r3220, %r3198;
	shf.l.wrap.b32 	%r3222, %r3221, %r3221, 1;
	add.s32 	%r3223, %r3222, %r2853;
	add.s32 	%r3224, %r3223, %r2852;
	add.s32 	%r3225, %r3224, %r3218;
	add.s32 	%r2862, %r3225, 1859775393;
	shf.l.wrap.b32 	%r2864, %r2854, %r2854, 30;
	shf.l.wrap.b32 	%r3226, %r2862, %r2862, 5;
	// begin inline asm
	lop3.b32 %r2857, %r2858, %r2864, %r2860, 150;
	// end inline asm
	xor.b32  	%r3227, %r8083, %r8081;
	xor.b32  	%r3228, %r3227, %r3166;
	xor.b32  	%r3229, %r3228, %r3206;
	shf.l.wrap.b32 	%r3230, %r3229, %r3229, 1;
	add.s32 	%r3231, %r3230, %r2857;
	add.s32 	%r3232, %r3231, %r2856;
	add.s32 	%r3233, %r3232, %r3226;
	add.s32 	%r2866, %r3233, 1859775393;
	shf.l.wrap.b32 	%r2868, %r2858, %r2858, 30;
	shf.l.wrap.b32 	%r3234, %r2866, %r2866, 5;
	// begin inline asm
	lop3.b32 %r2861, %r2862, %r2868, %r2864, 150;
	// end inline asm
	xor.b32  	%r3235, %r8082, %r8080;
	xor.b32  	%r3236, %r3235, %r3174;
	xor.b32  	%r3237, %r3236, %r3214;
	shf.l.wrap.b32 	%r3238, %r3237, %r3237, 1;
	add.s32 	%r3239, %r3238, %r2861;
	add.s32 	%r3240, %r3239, %r2860;
	add.s32 	%r3241, %r3240, %r3234;
	add.s32 	%r2870, %r3241, 1859775393;
	shf.l.wrap.b32 	%r2872, %r2862, %r2862, 30;
	shf.l.wrap.b32 	%r3242, %r2870, %r2870, 5;
	// begin inline asm
	lop3.b32 %r2865, %r2866, %r2872, %r2868, 150;
	// end inline asm
	xor.b32  	%r3243, %r3134, %r8081;
	xor.b32  	%r3244, %r3243, %r3182;
	xor.b32  	%r3245, %r3244, %r3222;
	shf.l.wrap.b32 	%r3246, %r3245, %r3245, 1;
	add.s32 	%r3247, %r3246, %r2865;
	add.s32 	%r3248, %r3247, %r2864;
	add.s32 	%r3249, %r3248, %r3242;
	add.s32 	%r2874, %r3249, 1859775393;
	shf.l.wrap.b32 	%r2876, %r2866, %r2866, 30;
	shf.l.wrap.b32 	%r3250, %r2874, %r2874, 5;
	// begin inline asm
	lop3.b32 %r2869, %r2870, %r2876, %r2872, 150;
	// end inline asm
	xor.b32  	%r3251, %r3142, %r8080;
	xor.b32  	%r3252, %r3251, %r3190;
	xor.b32  	%r3253, %r3252, %r3230;
	shf.l.wrap.b32 	%r3254, %r3253, %r3253, 1;
	add.s32 	%r3255, %r3254, %r2869;
	add.s32 	%r3256, %r3255, %r2868;
	add.s32 	%r3257, %r3256, %r3250;
	add.s32 	%r2878, %r3257, 1859775393;
	shf.l.wrap.b32 	%r2880, %r2870, %r2870, 30;
	shf.l.wrap.b32 	%r3258, %r2878, %r2878, 5;
	// begin inline asm
	lop3.b32 %r2873, %r2874, %r2880, %r2876, 150;
	// end inline asm
	xor.b32  	%r3259, %r3134, %r3150;
	xor.b32  	%r3260, %r3259, %r3198;
	xor.b32  	%r3261, %r3260, %r3238;
	shf.l.wrap.b32 	%r3262, %r3261, %r3261, 1;
	add.s32 	%r3263, %r3262, %r2873;
	add.s32 	%r3264, %r3263, %r2872;
	add.s32 	%r3265, %r3264, %r3258;
	add.s32 	%r2882, %r3265, 1859775393;
	shf.l.wrap.b32 	%r2884, %r2874, %r2874, 30;
	shf.l.wrap.b32 	%r3266, %r2882, %r2882, 5;
	// begin inline asm
	lop3.b32 %r2877, %r2878, %r2884, %r2880, 150;
	// end inline asm
	xor.b32  	%r3267, %r3158, %r3142;
	xor.b32  	%r3268, %r3267, %r3206;
	xor.b32  	%r3269, %r3268, %r3246;
	shf.l.wrap.b32 	%r3270, %r3269, %r3269, 1;
	add.s32 	%r3271, %r3270, %r2877;
	add.s32 	%r3272, %r3271, %r2876;
	add.s32 	%r3273, %r3272, %r3266;
	add.s32 	%r2886, %r3273, 1859775393;
	shf.l.wrap.b32 	%r2888, %r2878, %r2878, 30;
	shf.l.wrap.b32 	%r3274, %r2886, %r2886, 5;
	// begin inline asm
	lop3.b32 %r2881, %r2882, %r2888, %r2884, 150;
	// end inline asm
	xor.b32  	%r3275, %r3166, %r3150;
	xor.b32  	%r3276, %r3275, %r3214;
	xor.b32  	%r3277, %r3276, %r3254;
	shf.l.wrap.b32 	%r3278, %r3277, %r3277, 1;
	add.s32 	%r3279, %r3278, %r2881;
	add.s32 	%r3280, %r3279, %r2880;
	add.s32 	%r3281, %r3280, %r3274;
	add.s32 	%r2890, %r3281, 1859775393;
	shf.l.wrap.b32 	%r2892, %r2882, %r2882, 30;
	shf.l.wrap.b32 	%r3282, %r2890, %r2890, 5;
	// begin inline asm
	lop3.b32 %r2885, %r2886, %r2892, %r2888, 150;
	// end inline asm
	xor.b32  	%r3283, %r3158, %r3174;
	xor.b32  	%r3284, %r3283, %r3222;
	xor.b32  	%r3285, %r3284, %r3262;
	shf.l.wrap.b32 	%r3286, %r3285, %r3285, 1;
	add.s32 	%r3287, %r3286, %r2885;
	add.s32 	%r3288, %r3287, %r2884;
	add.s32 	%r3289, %r3288, %r3282;
	add.s32 	%r2894, %r3289, 1859775393;
	shf.l.wrap.b32 	%r2896, %r2886, %r2886, 30;
	shf.l.wrap.b32 	%r3290, %r2894, %r2894, 5;
	// begin inline asm
	lop3.b32 %r2889, %r2890, %r2896, %r2892, 150;
	// end inline asm
	xor.b32  	%r3291, %r3182, %r3166;
	xor.b32  	%r3292, %r3291, %r3230;
	xor.b32  	%r3293, %r3292, %r3270;
	shf.l.wrap.b32 	%r3294, %r3293, %r3293, 1;
	add.s32 	%r3295, %r3294, %r2889;
	add.s32 	%r3296, %r3295, %r2888;
	add.s32 	%r3297, %r3296, %r3290;
	add.s32 	%r2898, %r3297, 1859775393;
	shf.l.wrap.b32 	%r2900, %r2890, %r2890, 30;
	shf.l.wrap.b32 	%r3298, %r2898, %r2898, 5;
	// begin inline asm
	lop3.b32 %r2893, %r2894, %r2900, %r2896, 150;
	// end inline asm
	xor.b32  	%r3299, %r3190, %r3174;
	xor.b32  	%r3300, %r3299, %r3238;
	xor.b32  	%r3301, %r3300, %r3278;
	shf.l.wrap.b32 	%r3302, %r3301, %r3301, 1;
	add.s32 	%r3303, %r3302, %r2893;
	add.s32 	%r3304, %r3303, %r2892;
	add.s32 	%r3305, %r3304, %r3298;
	add.s32 	%r2902, %r3305, 1859775393;
	shf.l.wrap.b32 	%r2904, %r2894, %r2894, 30;
	shf.l.wrap.b32 	%r3306, %r2902, %r2902, 5;
	// begin inline asm
	lop3.b32 %r2897, %r2898, %r2904, %r2900, 150;
	// end inline asm
	xor.b32  	%r3307, %r3182, %r3198;
	xor.b32  	%r3308, %r3307, %r3246;
	xor.b32  	%r3309, %r3308, %r3286;
	shf.l.wrap.b32 	%r3310, %r3309, %r3309, 1;
	add.s32 	%r3311, %r3310, %r2897;
	add.s32 	%r3312, %r3311, %r2896;
	add.s32 	%r3313, %r3312, %r3306;
	add.s32 	%r2906, %r3313, 1859775393;
	shf.l.wrap.b32 	%r2908, %r2898, %r2898, 30;
	shf.l.wrap.b32 	%r3314, %r2906, %r2906, 5;
	// begin inline asm
	lop3.b32 %r2901, %r2902, %r2908, %r2904, 150;
	// end inline asm
	xor.b32  	%r3315, %r3206, %r3190;
	xor.b32  	%r3316, %r3315, %r3254;
	xor.b32  	%r3317, %r3316, %r3294;
	shf.l.wrap.b32 	%r3318, %r3317, %r3317, 1;
	add.s32 	%r3319, %r3318, %r2901;
	add.s32 	%r3320, %r3319, %r2900;
	add.s32 	%r3321, %r3320, %r3314;
	add.s32 	%r2910, %r3321, 1859775393;
	shf.l.wrap.b32 	%r2912, %r2902, %r2902, 30;
	shf.l.wrap.b32 	%r3322, %r2910, %r2910, 5;
	// begin inline asm
	lop3.b32 %r2905, %r2906, %r2912, %r2908, 232;
	// end inline asm
	xor.b32  	%r3323, %r3214, %r3198;
	xor.b32  	%r3324, %r3323, %r3262;
	xor.b32  	%r3325, %r3324, %r3302;
	shf.l.wrap.b32 	%r3326, %r3325, %r3325, 1;
	add.s32 	%r3327, %r3326, %r2905;
	add.s32 	%r3328, %r3327, %r2904;
	add.s32 	%r3329, %r3328, %r3322;
	add.s32 	%r2914, %r3329, -1894007588;
	shf.l.wrap.b32 	%r2916, %r2906, %r2906, 30;
	shf.l.wrap.b32 	%r3330, %r2914, %r2914, 5;
	// begin inline asm
	lop3.b32 %r2909, %r2910, %r2916, %r2912, 232;
	// end inline asm
	xor.b32  	%r3331, %r3206, %r3222;
	xor.b32  	%r3332, %r3331, %r3270;
	xor.b32  	%r3333, %r3332, %r3310;
	shf.l.wrap.b32 	%r3334, %r3333, %r3333, 1;
	add.s32 	%r3335, %r3334, %r2909;
	add.s32 	%r3336, %r3335, %r2908;
	add.s32 	%r3337, %r3336, %r3330;
	add.s32 	%r2918, %r3337, -1894007588;
	shf.l.wrap.b32 	%r2920, %r2910, %r2910, 30;
	shf.l.wrap.b32 	%r3338, %r2918, %r2918, 5;
	// begin inline asm
	lop3.b32 %r2913, %r2914, %r2920, %r2916, 232;
	// end inline asm
	xor.b32  	%r3339, %r3230, %r3214;
	xor.b32  	%r3340, %r3339, %r3278;
	xor.b32  	%r3341, %r3340, %r3318;
	shf.l.wrap.b32 	%r3342, %r3341, %r3341, 1;
	add.s32 	%r3343, %r3342, %r2913;
	add.s32 	%r3344, %r3343, %r2912;
	add.s32 	%r3345, %r3344, %r3338;
	add.s32 	%r2922, %r3345, -1894007588;
	shf.l.wrap.b32 	%r2924, %r2914, %r2914, 30;
	shf.l.wrap.b32 	%r3346, %r2922, %r2922, 5;
	// begin inline asm
	lop3.b32 %r2917, %r2918, %r2924, %r2920, 232;
	// end inline asm
	xor.b32  	%r3347, %r3238, %r3222;
	xor.b32  	%r3348, %r3347, %r3286;
	xor.b32  	%r3349, %r3348, %r3326;
	shf.l.wrap.b32 	%r3350, %r3349, %r3349, 1;
	add.s32 	%r3351, %r3350, %r2917;
	add.s32 	%r3352, %r3351, %r2916;
	add.s32 	%r3353, %r3352, %r3346;
	add.s32 	%r2926, %r3353, -1894007588;
	shf.l.wrap.b32 	%r2928, %r2918, %r2918, 30;
	shf.l.wrap.b32 	%r3354, %r2926, %r2926, 5;
	// begin inline asm
	lop3.b32 %r2921, %r2922, %r2928, %r2924, 232;
	// end inline asm
	xor.b32  	%r3355, %r3230, %r3246;
	xor.b32  	%r3356, %r3355, %r3294;
	xor.b32  	%r3357, %r3356, %r3334;
	shf.l.wrap.b32 	%r3358, %r3357, %r3357, 1;
	add.s32 	%r3359, %r3358, %r2921;
	add.s32 	%r3360, %r3359, %r2920;
	add.s32 	%r3361, %r3360, %r3354;
	add.s32 	%r2930, %r3361, -1894007588;
	shf.l.wrap.b32 	%r2932, %r2922, %r2922, 30;
	shf.l.wrap.b32 	%r3362, %r2930, %r2930, 5;
	// begin inline asm
	lop3.b32 %r2925, %r2926, %r2932, %r2928, 232;
	// end inline asm
	xor.b32  	%r3363, %r3254, %r3238;
	xor.b32  	%r3364, %r3363, %r3302;
	xor.b32  	%r3365, %r3364, %r3342;
	shf.l.wrap.b32 	%r3366, %r3365, %r3365, 1;
	add.s32 	%r3367, %r3366, %r2925;
	add.s32 	%r3368, %r3367, %r2924;
	add.s32 	%r3369, %r3368, %r3362;
	add.s32 	%r2934, %r3369, -1894007588;
	shf.l.wrap.b32 	%r2936, %r2926, %r2926, 30;
	shf.l.wrap.b32 	%r3370, %r2934, %r2934, 5;
	// begin inline asm
	lop3.b32 %r2929, %r2930, %r2936, %r2932, 232;
	// end inline asm
	xor.b32  	%r3371, %r3262, %r3246;
	xor.b32  	%r3372, %r3371, %r3310;
	xor.b32  	%r3373, %r3372, %r3350;
	shf.l.wrap.b32 	%r3374, %r3373, %r3373, 1;
	add.s32 	%r3375, %r3374, %r2929;
	add.s32 	%r3376, %r3375, %r2928;
	add.s32 	%r3377, %r3376, %r3370;
	add.s32 	%r2938, %r3377, -1894007588;
	shf.l.wrap.b32 	%r2940, %r2930, %r2930, 30;
	shf.l.wrap.b32 	%r3378, %r2938, %r2938, 5;
	// begin inline asm
	lop3.b32 %r2933, %r2934, %r2940, %r2936, 232;
	// end inline asm
	xor.b32  	%r3379, %r3254, %r3270;
	xor.b32  	%r3380, %r3379, %r3318;
	xor.b32  	%r3381, %r3380, %r3358;
	shf.l.wrap.b32 	%r3382, %r3381, %r3381, 1;
	add.s32 	%r3383, %r3382, %r2933;
	add.s32 	%r3384, %r3383, %r2932;
	add.s32 	%r3385, %r3384, %r3378;
	add.s32 	%r2942, %r3385, -1894007588;
	shf.l.wrap.b32 	%r2944, %r2934, %r2934, 30;
	shf.l.wrap.b32 	%r3386, %r2942, %r2942, 5;
	// begin inline asm
	lop3.b32 %r2937, %r2938, %r2944, %r2940, 232;
	// end inline asm
	xor.b32  	%r3387, %r3278, %r3262;
	xor.b32  	%r3388, %r3387, %r3326;
	xor.b32  	%r3389, %r3388, %r3366;
	shf.l.wrap.b32 	%r3390, %r3389, %r3389, 1;
	add.s32 	%r3391, %r3390, %r2937;
	add.s32 	%r3392, %r3391, %r2936;
	add.s32 	%r3393, %r3392, %r3386;
	add.s32 	%r2946, %r3393, -1894007588;
	shf.l.wrap.b32 	%r2948, %r2938, %r2938, 30;
	shf.l.wrap.b32 	%r3394, %r2946, %r2946, 5;
	// begin inline asm
	lop3.b32 %r2941, %r2942, %r2948, %r2944, 232;
	// end inline asm
	xor.b32  	%r3395, %r3286, %r3270;
	xor.b32  	%r3396, %r3395, %r3334;
	xor.b32  	%r3397, %r3396, %r3374;
	shf.l.wrap.b32 	%r3398, %r3397, %r3397, 1;
	add.s32 	%r3399, %r3398, %r2941;
	add.s32 	%r3400, %r3399, %r2940;
	add.s32 	%r3401, %r3400, %r3394;
	add.s32 	%r2950, %r3401, -1894007588;
	shf.l.wrap.b32 	%r2952, %r2942, %r2942, 30;
	shf.l.wrap.b32 	%r3402, %r2950, %r2950, 5;
	// begin inline asm
	lop3.b32 %r2945, %r2946, %r2952, %r2948, 232;
	// end inline asm
	xor.b32  	%r3403, %r3278, %r3294;
	xor.b32  	%r3404, %r3403, %r3342;
	xor.b32  	%r3405, %r3404, %r3382;
	shf.l.wrap.b32 	%r3406, %r3405, %r3405, 1;
	add.s32 	%r3407, %r3406, %r2945;
	add.s32 	%r3408, %r3407, %r2944;
	add.s32 	%r3409, %r3408, %r3402;
	add.s32 	%r2954, %r3409, -1894007588;
	shf.l.wrap.b32 	%r2956, %r2946, %r2946, 30;
	shf.l.wrap.b32 	%r3410, %r2954, %r2954, 5;
	// begin inline asm
	lop3.b32 %r2949, %r2950, %r2956, %r2952, 232;
	// end inline asm
	xor.b32  	%r3411, %r3302, %r3286;
	xor.b32  	%r3412, %r3411, %r3350;
	xor.b32  	%r3413, %r3412, %r3390;
	shf.l.wrap.b32 	%r3414, %r3413, %r3413, 1;
	add.s32 	%r3415, %r3414, %r2949;
	add.s32 	%r3416, %r3415, %r2948;
	add.s32 	%r3417, %r3416, %r3410;
	add.s32 	%r2958, %r3417, -1894007588;
	shf.l.wrap.b32 	%r2960, %r2950, %r2950, 30;
	shf.l.wrap.b32 	%r3418, %r2958, %r2958, 5;
	// begin inline asm
	lop3.b32 %r2953, %r2954, %r2960, %r2956, 232;
	// end inline asm
	xor.b32  	%r3419, %r3310, %r3294;
	xor.b32  	%r3420, %r3419, %r3358;
	xor.b32  	%r3421, %r3420, %r3398;
	shf.l.wrap.b32 	%r3422, %r3421, %r3421, 1;
	add.s32 	%r3423, %r3422, %r2953;
	add.s32 	%r3424, %r3423, %r2952;
	add.s32 	%r3425, %r3424, %r3418;
	add.s32 	%r2962, %r3425, -1894007588;
	shf.l.wrap.b32 	%r2964, %r2954, %r2954, 30;
	shf.l.wrap.b32 	%r3426, %r2962, %r2962, 5;
	// begin inline asm
	lop3.b32 %r2957, %r2958, %r2964, %r2960, 232;
	// end inline asm
	xor.b32  	%r3427, %r3302, %r3318;
	xor.b32  	%r3428, %r3427, %r3366;
	xor.b32  	%r3429, %r3428, %r3406;
	shf.l.wrap.b32 	%r3430, %r3429, %r3429, 1;
	add.s32 	%r3431, %r3430, %r2957;
	add.s32 	%r3432, %r3431, %r2956;
	add.s32 	%r3433, %r3432, %r3426;
	add.s32 	%r2966, %r3433, -1894007588;
	shf.l.wrap.b32 	%r2968, %r2958, %r2958, 30;
	shf.l.wrap.b32 	%r3434, %r2966, %r2966, 5;
	// begin inline asm
	lop3.b32 %r2961, %r2962, %r2968, %r2964, 232;
	// end inline asm
	xor.b32  	%r3435, %r3326, %r3310;
	xor.b32  	%r3436, %r3435, %r3374;
	xor.b32  	%r3437, %r3436, %r3414;
	shf.l.wrap.b32 	%r3438, %r3437, %r3437, 1;
	add.s32 	%r3439, %r3438, %r2961;
	add.s32 	%r3440, %r3439, %r2960;
	add.s32 	%r3441, %r3440, %r3434;
	add.s32 	%r2970, %r3441, -1894007588;
	shf.l.wrap.b32 	%r2972, %r2962, %r2962, 30;
	shf.l.wrap.b32 	%r3442, %r2970, %r2970, 5;
	// begin inline asm
	lop3.b32 %r2965, %r2966, %r2972, %r2968, 232;
	// end inline asm
	xor.b32  	%r3443, %r3334, %r3318;
	xor.b32  	%r3444, %r3443, %r3382;
	xor.b32  	%r3445, %r3444, %r3422;
	shf.l.wrap.b32 	%r3446, %r3445, %r3445, 1;
	add.s32 	%r3447, %r3446, %r2965;
	add.s32 	%r3448, %r3447, %r2964;
	add.s32 	%r3449, %r3448, %r3442;
	add.s32 	%r2974, %r3449, -1894007588;
	shf.l.wrap.b32 	%r2976, %r2966, %r2966, 30;
	shf.l.wrap.b32 	%r3450, %r2974, %r2974, 5;
	// begin inline asm
	lop3.b32 %r2969, %r2970, %r2976, %r2972, 232;
	// end inline asm
	xor.b32  	%r3451, %r3326, %r3342;
	xor.b32  	%r3452, %r3451, %r3390;
	xor.b32  	%r3453, %r3452, %r3430;
	shf.l.wrap.b32 	%r3454, %r3453, %r3453, 1;
	add.s32 	%r3455, %r3454, %r2969;
	add.s32 	%r3456, %r3455, %r2968;
	add.s32 	%r3457, %r3456, %r3450;
	add.s32 	%r2978, %r3457, -1894007588;
	shf.l.wrap.b32 	%r2980, %r2970, %r2970, 30;
	shf.l.wrap.b32 	%r3458, %r2978, %r2978, 5;
	// begin inline asm
	lop3.b32 %r2973, %r2974, %r2980, %r2976, 232;
	// end inline asm
	xor.b32  	%r3459, %r3350, %r3334;
	xor.b32  	%r3460, %r3459, %r3398;
	xor.b32  	%r3461, %r3460, %r3438;
	shf.l.wrap.b32 	%r3462, %r3461, %r3461, 1;
	add.s32 	%r3463, %r3462, %r2973;
	add.s32 	%r3464, %r3463, %r2972;
	add.s32 	%r3465, %r3464, %r3458;
	add.s32 	%r2982, %r3465, -1894007588;
	shf.l.wrap.b32 	%r2984, %r2974, %r2974, 30;
	shf.l.wrap.b32 	%r3466, %r2982, %r2982, 5;
	// begin inline asm
	lop3.b32 %r2977, %r2978, %r2984, %r2980, 232;
	// end inline asm
	xor.b32  	%r3467, %r3358, %r3342;
	xor.b32  	%r3468, %r3467, %r3406;
	xor.b32  	%r3469, %r3468, %r3446;
	shf.l.wrap.b32 	%r3470, %r3469, %r3469, 1;
	add.s32 	%r3471, %r3470, %r2977;
	add.s32 	%r3472, %r3471, %r2976;
	add.s32 	%r3473, %r3472, %r3466;
	add.s32 	%r2986, %r3473, -1894007588;
	shf.l.wrap.b32 	%r2988, %r2978, %r2978, 30;
	shf.l.wrap.b32 	%r3474, %r2986, %r2986, 5;
	// begin inline asm
	lop3.b32 %r2981, %r2982, %r2988, %r2984, 232;
	// end inline asm
	xor.b32  	%r3475, %r3350, %r3366;
	xor.b32  	%r3476, %r3475, %r3414;
	xor.b32  	%r3477, %r3476, %r3454;
	shf.l.wrap.b32 	%r3478, %r3477, %r3477, 1;
	add.s32 	%r3479, %r3478, %r2981;
	add.s32 	%r3480, %r3479, %r2980;
	add.s32 	%r3481, %r3480, %r3474;
	add.s32 	%r2990, %r3481, -1894007588;
	shf.l.wrap.b32 	%r2992, %r2982, %r2982, 30;
	shf.l.wrap.b32 	%r3482, %r2990, %r2990, 5;
	// begin inline asm
	lop3.b32 %r2985, %r2986, %r2992, %r2988, 150;
	// end inline asm
	xor.b32  	%r3483, %r3374, %r3358;
	xor.b32  	%r3484, %r3483, %r3422;
	xor.b32  	%r3485, %r3484, %r3462;
	shf.l.wrap.b32 	%r3486, %r3485, %r3485, 1;
	add.s32 	%r3487, %r3486, %r2985;
	add.s32 	%r3488, %r3487, %r2984;
	add.s32 	%r3489, %r3488, %r3482;
	add.s32 	%r2994, %r3489, -899497514;
	shf.l.wrap.b32 	%r2996, %r2986, %r2986, 30;
	shf.l.wrap.b32 	%r3490, %r2994, %r2994, 5;
	// begin inline asm
	lop3.b32 %r2989, %r2990, %r2996, %r2992, 150;
	// end inline asm
	xor.b32  	%r3491, %r3382, %r3366;
	xor.b32  	%r3492, %r3491, %r3430;
	xor.b32  	%r3493, %r3492, %r3470;
	shf.l.wrap.b32 	%r3494, %r3493, %r3493, 1;
	add.s32 	%r3495, %r3494, %r2989;
	add.s32 	%r3496, %r3495, %r2988;
	add.s32 	%r3497, %r3496, %r3490;
	add.s32 	%r2998, %r3497, -899497514;
	shf.l.wrap.b32 	%r3000, %r2990, %r2990, 30;
	shf.l.wrap.b32 	%r3498, %r2998, %r2998, 5;
	// begin inline asm
	lop3.b32 %r2993, %r2994, %r3000, %r2996, 150;
	// end inline asm
	xor.b32  	%r3499, %r3374, %r3390;
	xor.b32  	%r3500, %r3499, %r3438;
	xor.b32  	%r3501, %r3500, %r3478;
	shf.l.wrap.b32 	%r3502, %r3501, %r3501, 1;
	add.s32 	%r3503, %r3502, %r2993;
	add.s32 	%r3504, %r3503, %r2992;
	add.s32 	%r3505, %r3504, %r3498;
	add.s32 	%r3002, %r3505, -899497514;
	shf.l.wrap.b32 	%r3004, %r2994, %r2994, 30;
	shf.l.wrap.b32 	%r3506, %r3002, %r3002, 5;
	// begin inline asm
	lop3.b32 %r2997, %r2998, %r3004, %r3000, 150;
	// end inline asm
	xor.b32  	%r3507, %r3398, %r3382;
	xor.b32  	%r3508, %r3507, %r3446;
	xor.b32  	%r3509, %r3508, %r3486;
	shf.l.wrap.b32 	%r3510, %r3509, %r3509, 1;
	add.s32 	%r3511, %r3510, %r2997;
	add.s32 	%r3512, %r3511, %r2996;
	add.s32 	%r3513, %r3512, %r3506;
	add.s32 	%r3006, %r3513, -899497514;
	shf.l.wrap.b32 	%r3008, %r2998, %r2998, 30;
	shf.l.wrap.b32 	%r3514, %r3006, %r3006, 5;
	// begin inline asm
	lop3.b32 %r3001, %r3002, %r3008, %r3004, 150;
	// end inline asm
	xor.b32  	%r3515, %r3406, %r3390;
	xor.b32  	%r3516, %r3515, %r3454;
	xor.b32  	%r3517, %r3516, %r3494;
	shf.l.wrap.b32 	%r3518, %r3517, %r3517, 1;
	add.s32 	%r3519, %r3518, %r3001;
	add.s32 	%r3520, %r3519, %r3000;
	add.s32 	%r3521, %r3520, %r3514;
	add.s32 	%r3010, %r3521, -899497514;
	shf.l.wrap.b32 	%r3012, %r3002, %r3002, 30;
	shf.l.wrap.b32 	%r3522, %r3010, %r3010, 5;
	// begin inline asm
	lop3.b32 %r3005, %r3006, %r3012, %r3008, 150;
	// end inline asm
	xor.b32  	%r3523, %r3398, %r3414;
	xor.b32  	%r3524, %r3523, %r3462;
	xor.b32  	%r3525, %r3524, %r3502;
	shf.l.wrap.b32 	%r3526, %r3525, %r3525, 1;
	add.s32 	%r3527, %r3526, %r3005;
	add.s32 	%r3528, %r3527, %r3004;
	add.s32 	%r3529, %r3528, %r3522;
	add.s32 	%r3014, %r3529, -899497514;
	shf.l.wrap.b32 	%r3016, %r3006, %r3006, 30;
	shf.l.wrap.b32 	%r3530, %r3014, %r3014, 5;
	// begin inline asm
	lop3.b32 %r3009, %r3010, %r3016, %r3012, 150;
	// end inline asm
	xor.b32  	%r3531, %r3422, %r3406;
	xor.b32  	%r3532, %r3531, %r3470;
	xor.b32  	%r3533, %r3532, %r3510;
	shf.l.wrap.b32 	%r3534, %r3533, %r3533, 1;
	add.s32 	%r3535, %r3534, %r3009;
	add.s32 	%r3536, %r3535, %r3008;
	add.s32 	%r3537, %r3536, %r3530;
	add.s32 	%r3018, %r3537, -899497514;
	shf.l.wrap.b32 	%r3020, %r3010, %r3010, 30;
	shf.l.wrap.b32 	%r3538, %r3018, %r3018, 5;
	// begin inline asm
	lop3.b32 %r3013, %r3014, %r3020, %r3016, 150;
	// end inline asm
	xor.b32  	%r3539, %r3430, %r3414;
	xor.b32  	%r3540, %r3539, %r3478;
	xor.b32  	%r3541, %r3540, %r3518;
	shf.l.wrap.b32 	%r3542, %r3541, %r3541, 1;
	add.s32 	%r3543, %r3542, %r3013;
	add.s32 	%r3544, %r3543, %r3012;
	add.s32 	%r3545, %r3544, %r3538;
	add.s32 	%r3022, %r3545, -899497514;
	shf.l.wrap.b32 	%r3024, %r3014, %r3014, 30;
	shf.l.wrap.b32 	%r3546, %r3022, %r3022, 5;
	// begin inline asm
	lop3.b32 %r3017, %r3018, %r3024, %r3020, 150;
	// end inline asm
	xor.b32  	%r3547, %r3422, %r3438;
	xor.b32  	%r3548, %r3547, %r3486;
	xor.b32  	%r3549, %r3548, %r3526;
	shf.l.wrap.b32 	%r3550, %r3549, %r3549, 1;
	add.s32 	%r3551, %r3550, %r3017;
	add.s32 	%r3552, %r3551, %r3016;
	add.s32 	%r3553, %r3552, %r3546;
	add.s32 	%r3026, %r3553, -899497514;
	shf.l.wrap.b32 	%r3028, %r3018, %r3018, 30;
	shf.l.wrap.b32 	%r3554, %r3026, %r3026, 5;
	// begin inline asm
	lop3.b32 %r3021, %r3022, %r3028, %r3024, 150;
	// end inline asm
	xor.b32  	%r3555, %r3446, %r3430;
	xor.b32  	%r3556, %r3555, %r3494;
	xor.b32  	%r3557, %r3556, %r3534;
	shf.l.wrap.b32 	%r3558, %r3557, %r3557, 1;
	add.s32 	%r3559, %r3558, %r3021;
	add.s32 	%r3560, %r3559, %r3020;
	add.s32 	%r3561, %r3560, %r3554;
	add.s32 	%r3030, %r3561, -899497514;
	shf.l.wrap.b32 	%r3032, %r3022, %r3022, 30;
	shf.l.wrap.b32 	%r3562, %r3030, %r3030, 5;
	// begin inline asm
	lop3.b32 %r3025, %r3026, %r3032, %r3028, 150;
	// end inline asm
	xor.b32  	%r3563, %r3454, %r3438;
	xor.b32  	%r3564, %r3563, %r3502;
	xor.b32  	%r3565, %r3564, %r3542;
	shf.l.wrap.b32 	%r3566, %r3565, %r3565, 1;
	add.s32 	%r3567, %r3566, %r3025;
	add.s32 	%r3568, %r3567, %r3024;
	add.s32 	%r3569, %r3568, %r3562;
	add.s32 	%r3034, %r3569, -899497514;
	shf.l.wrap.b32 	%r3036, %r3026, %r3026, 30;
	shf.l.wrap.b32 	%r3570, %r3034, %r3034, 5;
	// begin inline asm
	lop3.b32 %r3029, %r3030, %r3036, %r3032, 150;
	// end inline asm
	xor.b32  	%r3571, %r3446, %r3462;
	xor.b32  	%r3572, %r3571, %r3510;
	xor.b32  	%r3573, %r3572, %r3550;
	shf.l.wrap.b32 	%r3574, %r3573, %r3573, 1;
	add.s32 	%r3575, %r3574, %r3029;
	add.s32 	%r3576, %r3575, %r3028;
	add.s32 	%r3577, %r3576, %r3570;
	add.s32 	%r3038, %r3577, -899497514;
	shf.l.wrap.b32 	%r3040, %r3030, %r3030, 30;
	shf.l.wrap.b32 	%r3578, %r3038, %r3038, 5;
	// begin inline asm
	lop3.b32 %r3033, %r3034, %r3040, %r3036, 150;
	// end inline asm
	xor.b32  	%r3579, %r3470, %r3454;
	xor.b32  	%r3580, %r3579, %r3518;
	xor.b32  	%r3581, %r3580, %r3558;
	shf.l.wrap.b32 	%r3582, %r3581, %r3581, 1;
	add.s32 	%r3583, %r3582, %r3033;
	add.s32 	%r3584, %r3583, %r3032;
	add.s32 	%r3585, %r3584, %r3578;
	add.s32 	%r3042, %r3585, -899497514;
	shf.l.wrap.b32 	%r3044, %r3034, %r3034, 30;
	shf.l.wrap.b32 	%r3586, %r3042, %r3042, 5;
	// begin inline asm
	lop3.b32 %r3037, %r3038, %r3044, %r3040, 150;
	// end inline asm
	xor.b32  	%r3587, %r3478, %r3462;
	xor.b32  	%r3588, %r3587, %r3526;
	xor.b32  	%r3589, %r3588, %r3566;
	shf.l.wrap.b32 	%r3590, %r3589, %r3589, 1;
	add.s32 	%r3591, %r3590, %r3037;
	add.s32 	%r3592, %r3591, %r3036;
	add.s32 	%r3593, %r3592, %r3586;
	add.s32 	%r3046, %r3593, -899497514;
	shf.l.wrap.b32 	%r3048, %r3038, %r3038, 30;
	shf.l.wrap.b32 	%r3594, %r3046, %r3046, 5;
	// begin inline asm
	lop3.b32 %r3041, %r3042, %r3048, %r3044, 150;
	// end inline asm
	xor.b32  	%r3595, %r3470, %r3486;
	xor.b32  	%r3596, %r3595, %r3534;
	xor.b32  	%r3597, %r3596, %r3574;
	shf.l.wrap.b32 	%r3598, %r3597, %r3597, 1;
	add.s32 	%r3599, %r3598, %r3041;
	add.s32 	%r3600, %r3599, %r3040;
	add.s32 	%r3601, %r3600, %r3594;
	add.s32 	%r3050, %r3601, -899497514;
	shf.l.wrap.b32 	%r3052, %r3042, %r3042, 30;
	shf.l.wrap.b32 	%r3602, %r3050, %r3050, 5;
	// begin inline asm
	lop3.b32 %r3045, %r3046, %r3052, %r3048, 150;
	// end inline asm
	xor.b32  	%r3603, %r3494, %r3478;
	xor.b32  	%r3604, %r3603, %r3542;
	xor.b32  	%r3605, %r3604, %r3582;
	shf.l.wrap.b32 	%r3606, %r3605, %r3605, 1;
	add.s32 	%r3607, %r3606, %r3045;
	add.s32 	%r3608, %r3607, %r3044;
	add.s32 	%r3609, %r3608, %r3602;
	add.s32 	%r3054, %r3609, -899497514;
	shf.l.wrap.b32 	%r3056, %r3046, %r3046, 30;
	shf.l.wrap.b32 	%r3610, %r3054, %r3054, 5;
	// begin inline asm
	lop3.b32 %r3049, %r3050, %r3056, %r3052, 150;
	// end inline asm
	xor.b32  	%r3611, %r3502, %r3486;
	xor.b32  	%r3612, %r3611, %r3550;
	xor.b32  	%r3613, %r3612, %r3590;
	shf.l.wrap.b32 	%r3614, %r3613, %r3613, 1;
	add.s32 	%r3615, %r3049, %r3614;
	add.s32 	%r3616, %r3615, %r3048;
	add.s32 	%r3617, %r3616, %r3610;
	add.s32 	%r3058, %r3617, -899497514;
	shf.l.wrap.b32 	%r3060, %r3050, %r3050, 30;
	shf.l.wrap.b32 	%r3618, %r3058, %r3058, 5;
	// begin inline asm
	lop3.b32 %r3053, %r3054, %r3060, %r3056, 150;
	// end inline asm
	xor.b32  	%r3619, %r3494, %r3510;
	xor.b32  	%r3620, %r3619, %r3558;
	xor.b32  	%r3621, %r3620, %r3598;
	shf.l.wrap.b32 	%r3622, %r3621, %r3621, 1;
	add.s32 	%r3623, %r3622, %r3053;
	add.s32 	%r3624, %r3623, %r3052;
	add.s32 	%r3625, %r3624, %r3618;
	add.s32 	%r3062, %r3625, -899497514;
	shf.l.wrap.b32 	%r3064, %r3054, %r3054, 30;
	shf.l.wrap.b32 	%r3626, %r3062, %r3062, 5;
	// begin inline asm
	lop3.b32 %r3057, %r3058, %r3064, %r3060, 150;
	// end inline asm
	xor.b32  	%r3627, %r3518, %r3502;
	xor.b32  	%r3628, %r3627, %r3566;
	xor.b32  	%r3629, %r3628, %r3606;
	shf.l.wrap.b32 	%r3630, %r3629, %r3629, 1;
	add.s32 	%r3631, %r3630, %r3057;
	add.s32 	%r3632, %r3631, %r3056;
	add.s32 	%r3633, %r3632, %r3626;
	add.s32 	%r3634, %r3633, -899497514;
	shf.l.wrap.b32 	%r3063, %r3058, %r3058, 30;
	shf.l.wrap.b32 	%r3635, %r3634, %r3634, 5;
	// begin inline asm
	lop3.b32 %r3061, %r3062, %r3063, %r3064, 150;
	// end inline asm
	xor.b32  	%r3636, %r3526, %r3510;
	xor.b32  	%r3637, %r3636, %r3574;
	xor.b32  	%r3638, %r3637, %r3614;
	shf.l.wrap.b32 	%r3639, %r3638, %r3638, 1;
	shf.l.wrap.b32 	%r3640, %r3062, %r3062, 30;
	add.s32 	%r3641, %r3061, %r3639;
	add.s32 	%r3642, %r3641, %r2750;
	add.s32 	%r3643, %r3642, %r3060;
	add.s32 	%r3644, %r3643, %r3635;
	add.s32 	%r3645, %r3644, -899497514;
	st.local.u32 	[%rd31+4], %r3645;
	add.s32 	%r3646, %r3634, %r2746;
	st.local.u32 	[%rd31+8], %r3646;
	add.s32 	%r3647, %r3640, %r2747;
	st.local.u32 	[%rd31+12], %r3647;
	add.s32 	%r3648, %r3063, %r2748;
	st.local.u32 	[%rd31+16], %r3648;
	add.s32 	%r3649, %r3064, %r3067;
	st.local.u32 	[%rd31+20], %r3649;
	add.s64 	%rd264, %rd264, 64;
	add.s64 	%rd262, %rd262, 64;
	add.s32 	%r8096, %r8096, -64;
	setp.gt.u32 	%p31, %r8096, 63;
	@%p31 bra 	$L__BB4_35;

$L__BB4_39:
	setp.eq.s32 	%p32, %r8096, 0;
	@%p32 bra 	$L__BB4_45;

	cvt.u64.u32 	%rd184, %r8077;
	add.s64 	%rd187, %rd31, %rd184;
	add.s64 	%rd269, %rd187, 24;
	and.b32  	%r8098, %r8096, 3;
	setp.eq.s32 	%p33, %r8098, 0;
	mov.u32 	%r8099, %r8096;
	@%p33 bra 	$L__BB4_43;

	mov.u64 	%rd265, %rd269;
	mov.u64 	%rd266, %rd264;
	mov.u32 	%r8099, %r8096;

$L__BB4_42:
	.pragma "nounroll";
	add.s32 	%r8099, %r8099, -1;
	add.s64 	%rd264, %rd266, 1;
	ld.local.u8 	%rs117, [%rd266];
	add.s64 	%rd269, %rd265, 1;
	st.local.u8 	[%rd265], %rs117;
	add.s32 	%r8098, %r8098, -1;
	setp.ne.s32 	%p34, %r8098, 0;
	mov.u64 	%rd265, %rd269;
	mov.u64 	%rd266, %rd264;
	@%p34 bra 	$L__BB4_42;

$L__BB4_43:
	add.s32 	%r3650, %r8096, -1;
	setp.lt.u32 	%p35, %r3650, 3;
	@%p35 bra 	$L__BB4_45;

$L__BB4_44:
	ld.local.u8 	%rs118, [%rd264];
	st.local.u8 	[%rd269], %rs118;
	ld.local.u8 	%rs119, [%rd264+1];
	st.local.u8 	[%rd269+1], %rs119;
	ld.local.u8 	%rs120, [%rd264+2];
	st.local.u8 	[%rd269+2], %rs120;
	add.s64 	%rd84, %rd264, 4;
	ld.local.u8 	%rs121, [%rd264+3];
	add.s64 	%rd85, %rd269, 4;
	st.local.u8 	[%rd269+3], %rs121;
	add.s32 	%r8099, %r8099, -4;
	setp.ne.s32 	%p36, %r8099, 0;
	mov.u64 	%rd269, %rd85;
	mov.u64 	%rd264, %rd84;
	@%p36 bra 	$L__BB4_44;

$L__BB4_45:
	add.u64 	%rd280, %SP, 16;
	cvta.to.local.u64 	%rd282, %rd280;
	add.s64 	%rd86, %rd282, 1;
	mov.u64 	%rd271, 0;
	mov.u32 	%r8101, 0;

$L__BB4_46:
	add.s64 	%rd191, %rd86, %rd271;
	mov.u16 	%rs122, 0;
	st.local.u8 	[%rd191], %rs122;
	add.s64 	%rd271, %rd271, 1;
	add.s32 	%r8101, %r8101, 1;
	setp.lt.u32 	%p37, %r8101, 63;
	@%p37 bra 	$L__BB4_46;

	mov.u16 	%rs123, 128;
	st.local.u8 	[%rd282], %rs123;
	ld.local.u32 	%r162, [%rd31];
	shr.u32 	%r3652, %r162, 21;
	shr.u32 	%r3653, %r162, 13;
	cvt.u16.u32 	%rs124, %r162;
	shr.u16 	%rs125, %rs124, 5;
	and.b16  	%rs126, %rs125, 255;
	shl.b16 	%rs127, %rs124, 3;
	add.u64 	%rd195, %SPL, 0;
	and.b32  	%r3654, %r3652, 255;
	prmt.b32 	%r3655, %r3653, %r3654, 30212;
	cvt.u16.u32 	%rs128, %r3655;
	cvt.u32.u16 	%r3656, %rs127;
	cvt.u32.u16 	%r3657, %rs126;
	prmt.b32 	%r3658, %r3656, %r3657, 30212;
	cvt.u16.u32 	%rs129, %r3658;
	st.local.v4.u16 	[%rd195], {%rs122, %rs122, %rs128, %rs129};
	and.b32  	%r8106, %r162, 63;
	setp.lt.u32 	%p38, %r8106, 56;
	selp.b32 	%r3659, 56, 120, %p38;
	sub.s32 	%r8125, %r3659, %r8106;
	setp.eq.s32 	%p39, %r8125, 0;
	@%p39 bra 	$L__BB4_67;

	add.s32 	%r3660, %r162, %r8125;
	st.local.u32 	[%rd31], %r3660;
	mov.u32 	%r3661, 64;
	sub.s32 	%r165, %r3661, %r8106;
	setp.lt.u32 	%p40, %r8125, %r165;
	setp.eq.s32 	%p41, %r8106, 0;
	or.pred  	%p42, %p41, %p40;
	@%p42 bra 	$L__BB4_56;

	setp.eq.s32 	%p43, %r165, 0;
	@%p43 bra 	$L__BB4_55;

	cvt.u64.u32 	%rd198, %r8106;
	add.s64 	%rd199, %rd31, %rd198;
	add.s64 	%rd276, %rd199, 24;
	add.u64 	%rd200, %SP, 16;
	add.u64 	%rd277, %SPL, 16;
	and.b32  	%r8103, %r165, 3;
	setp.eq.s32 	%p44, %r8103, 0;
	mov.u32 	%r8104, %r165;
	@%p44 bra 	$L__BB4_53;

	cvta.to.local.u64 	%rd273, %rd200;
	mov.u64 	%rd272, %rd276;
	mov.u32 	%r8104, %r165;

$L__BB4_52:
	.pragma "nounroll";
	add.s32 	%r8104, %r8104, -1;
	add.s64 	%rd277, %rd273, 1;
	ld.local.u8 	%rs131, [%rd273];
	add.s64 	%rd276, %rd272, 1;
	st.local.u8 	[%rd272], %rs131;
	add.s32 	%r8103, %r8103, -1;
	setp.ne.s32 	%p45, %r8103, 0;
	mov.u64 	%rd272, %rd276;
	mov.u64 	%rd273, %rd277;
	@%p45 bra 	$L__BB4_52;

$L__BB4_53:
	xor.b32  	%r3662, %r8106, 63;
	setp.lt.u32 	%p46, %r3662, 3;
	@%p46 bra 	$L__BB4_55;

$L__BB4_54:
	ld.local.u8 	%rs132, [%rd277];
	st.local.u8 	[%rd276], %rs132;
	ld.local.u8 	%rs133, [%rd277+1];
	st.local.u8 	[%rd276+1], %rs133;
	ld.local.u8 	%rs134, [%rd277+2];
	st.local.u8 	[%rd276+2], %rs134;
	add.s64 	%rd102, %rd277, 4;
	ld.local.u8 	%rs135, [%rd277+3];
	add.s64 	%rd103, %rd276, 4;
	st.local.u8 	[%rd276+3], %rs135;
	add.s32 	%r8104, %r8104, -4;
	setp.ne.s32 	%p47, %r8104, 0;
	mov.u64 	%rd276, %rd103;
	mov.u64 	%rd277, %rd102;
	@%p47 bra 	$L__BB4_54;

$L__BB4_55:
	ld.local.u32 	%r3984, [%rd31+24];
	shf.l.wrap.b32 	%r3985, %r3984, %r3984, 16;
	shl.b32 	%r3986, %r3985, 8;
	and.b32  	%r3987, %r3986, -16711936;
	shr.u32 	%r3988, %r3985, 8;
	and.b32  	%r3989, %r3988, 16711935;
	or.b32  	%r3990, %r3987, %r3989;
	ld.local.u32 	%r3991, [%rd31+28];
	shf.l.wrap.b32 	%r3992, %r3991, %r3991, 16;
	shl.b32 	%r3993, %r3992, 8;
	and.b32  	%r3994, %r3993, -16711936;
	shr.u32 	%r3995, %r3992, 8;
	and.b32  	%r3996, %r3995, 16711935;
	or.b32  	%r3997, %r3994, %r3996;
	ld.local.u32 	%r3998, [%rd31+32];
	shf.l.wrap.b32 	%r3999, %r3998, %r3998, 16;
	shl.b32 	%r4000, %r3999, 8;
	and.b32  	%r4001, %r4000, -16711936;
	shr.u32 	%r4002, %r3999, 8;
	and.b32  	%r4003, %r4002, 16711935;
	or.b32  	%r4004, %r4001, %r4003;
	ld.local.u32 	%r4005, [%rd31+36];
	shf.l.wrap.b32 	%r4006, %r4005, %r4005, 16;
	shl.b32 	%r4007, %r4006, 8;
	and.b32  	%r4008, %r4007, -16711936;
	shr.u32 	%r4009, %r4006, 8;
	and.b32  	%r4010, %r4009, 16711935;
	or.b32  	%r4011, %r4008, %r4010;
	ld.local.u32 	%r4012, [%rd31+40];
	shf.l.wrap.b32 	%r4013, %r4012, %r4012, 16;
	shl.b32 	%r4014, %r4013, 8;
	and.b32  	%r4015, %r4014, -16711936;
	shr.u32 	%r4016, %r4013, 8;
	and.b32  	%r4017, %r4016, 16711935;
	or.b32  	%r4018, %r4015, %r4017;
	ld.local.u32 	%r4019, [%rd31+44];
	shf.l.wrap.b32 	%r4020, %r4019, %r4019, 16;
	shl.b32 	%r4021, %r4020, 8;
	and.b32  	%r4022, %r4021, -16711936;
	shr.u32 	%r4023, %r4020, 8;
	and.b32  	%r4024, %r4023, 16711935;
	or.b32  	%r4025, %r4022, %r4024;
	ld.local.u32 	%r4026, [%rd31+48];
	shf.l.wrap.b32 	%r4027, %r4026, %r4026, 16;
	shl.b32 	%r4028, %r4027, 8;
	and.b32  	%r4029, %r4028, -16711936;
	shr.u32 	%r4030, %r4027, 8;
	and.b32  	%r4031, %r4030, 16711935;
	or.b32  	%r4032, %r4029, %r4031;
	ld.local.u32 	%r4033, [%rd31+52];
	shf.l.wrap.b32 	%r4034, %r4033, %r4033, 16;
	shl.b32 	%r4035, %r4034, 8;
	and.b32  	%r4036, %r4035, -16711936;
	shr.u32 	%r4037, %r4034, 8;
	and.b32  	%r4038, %r4037, 16711935;
	or.b32  	%r4039, %r4036, %r4038;
	ld.local.u32 	%r4040, [%rd31+56];
	shf.l.wrap.b32 	%r4041, %r4040, %r4040, 16;
	shl.b32 	%r4042, %r4041, 8;
	and.b32  	%r4043, %r4042, -16711936;
	shr.u32 	%r4044, %r4041, 8;
	and.b32  	%r4045, %r4044, 16711935;
	or.b32  	%r4046, %r4043, %r4045;
	ld.local.u32 	%r4047, [%rd31+60];
	shf.l.wrap.b32 	%r4048, %r4047, %r4047, 16;
	shl.b32 	%r4049, %r4048, 8;
	and.b32  	%r4050, %r4049, -16711936;
	shr.u32 	%r4051, %r4048, 8;
	and.b32  	%r4052, %r4051, 16711935;
	or.b32  	%r4053, %r4050, %r4052;
	ld.local.u32 	%r4054, [%rd31+64];
	shf.l.wrap.b32 	%r4055, %r4054, %r4054, 16;
	shl.b32 	%r4056, %r4055, 8;
	and.b32  	%r4057, %r4056, -16711936;
	shr.u32 	%r4058, %r4055, 8;
	and.b32  	%r4059, %r4058, 16711935;
	or.b32  	%r4060, %r4057, %r4059;
	ld.local.u32 	%r4061, [%rd31+68];
	shf.l.wrap.b32 	%r4062, %r4061, %r4061, 16;
	shl.b32 	%r4063, %r4062, 8;
	and.b32  	%r4064, %r4063, -16711936;
	shr.u32 	%r4065, %r4062, 8;
	and.b32  	%r4066, %r4065, 16711935;
	or.b32  	%r4067, %r4064, %r4066;
	ld.local.u32 	%r4068, [%rd31+72];
	shf.l.wrap.b32 	%r4069, %r4068, %r4068, 16;
	shl.b32 	%r4070, %r4069, 8;
	and.b32  	%r4071, %r4070, -16711936;
	shr.u32 	%r4072, %r4069, 8;
	and.b32  	%r4073, %r4072, 16711935;
	or.b32  	%r4074, %r4071, %r4073;
	ld.local.u32 	%r4075, [%rd31+76];
	shf.l.wrap.b32 	%r4076, %r4075, %r4075, 16;
	shl.b32 	%r4077, %r4076, 8;
	and.b32  	%r4078, %r4077, -16711936;
	shr.u32 	%r4079, %r4076, 8;
	and.b32  	%r4080, %r4079, 16711935;
	or.b32  	%r4081, %r4078, %r4080;
	ld.local.u32 	%r4082, [%rd31+80];
	shf.l.wrap.b32 	%r4083, %r4082, %r4082, 16;
	shl.b32 	%r4084, %r4083, 8;
	and.b32  	%r4085, %r4084, -16711936;
	shr.u32 	%r4086, %r4083, 8;
	and.b32  	%r4087, %r4086, 16711935;
	or.b32  	%r4088, %r4085, %r4087;
	ld.local.u32 	%r4089, [%rd31+84];
	shf.l.wrap.b32 	%r4090, %r4089, %r4089, 16;
	shl.b32 	%r4091, %r4090, 8;
	and.b32  	%r4092, %r4091, -16711936;
	shr.u32 	%r4093, %r4090, 8;
	and.b32  	%r4094, %r4093, 16711935;
	or.b32  	%r4095, %r4092, %r4094;
	ld.local.u32 	%r3668, [%rd31+4];
	shf.l.wrap.b32 	%r4096, %r3668, %r3668, 5;
	ld.local.u32 	%r3666, [%rd31+16];
	ld.local.u32 	%r3665, [%rd31+12];
	ld.local.u32 	%r3664, [%rd31+8];
	// begin inline asm
	lop3.b32 %r3663, %r3664, %r3665, %r3666, 202;
	// end inline asm
	add.s32 	%r4097, %r3990, %r4096;
	ld.local.u32 	%r4098, [%rd31+20];
	add.s32 	%r4099, %r4097, %r4098;
	add.s32 	%r4100, %r4099, %r3663;
	add.s32 	%r3672, %r4100, 1518500249;
	shf.l.wrap.b32 	%r3674, %r3664, %r3664, 30;
	shf.l.wrap.b32 	%r4101, %r3672, %r3672, 5;
	// begin inline asm
	lop3.b32 %r3667, %r3668, %r3674, %r3665, 202;
	// end inline asm
	add.s32 	%r4102, %r3997, %r3666;
	add.s32 	%r4103, %r4102, %r3667;
	add.s32 	%r4104, %r4103, %r4101;
	add.s32 	%r3676, %r4104, 1518500249;
	shf.l.wrap.b32 	%r3678, %r3668, %r3668, 30;
	shf.l.wrap.b32 	%r4105, %r3676, %r3676, 5;
	// begin inline asm
	lop3.b32 %r3671, %r3672, %r3678, %r3674, 202;
	// end inline asm
	add.s32 	%r4106, %r4004, %r3665;
	add.s32 	%r4107, %r4106, %r3671;
	add.s32 	%r4108, %r4107, %r4105;
	add.s32 	%r3680, %r4108, 1518500249;
	shf.l.wrap.b32 	%r3682, %r3672, %r3672, 30;
	shf.l.wrap.b32 	%r4109, %r3680, %r3680, 5;
	// begin inline asm
	lop3.b32 %r3675, %r3676, %r3682, %r3678, 202;
	// end inline asm
	add.s32 	%r4110, %r4011, %r3674;
	add.s32 	%r4111, %r4110, %r3675;
	add.s32 	%r4112, %r4111, %r4109;
	add.s32 	%r3684, %r4112, 1518500249;
	shf.l.wrap.b32 	%r3686, %r3676, %r3676, 30;
	shf.l.wrap.b32 	%r4113, %r3684, %r3684, 5;
	// begin inline asm
	lop3.b32 %r3679, %r3680, %r3686, %r3682, 202;
	// end inline asm
	add.s32 	%r4114, %r4018, %r3678;
	add.s32 	%r4115, %r4114, %r3679;
	add.s32 	%r4116, %r4115, %r4113;
	add.s32 	%r3688, %r4116, 1518500249;
	shf.l.wrap.b32 	%r3690, %r3680, %r3680, 30;
	shf.l.wrap.b32 	%r4117, %r3688, %r3688, 5;
	// begin inline asm
	lop3.b32 %r3683, %r3684, %r3690, %r3686, 202;
	// end inline asm
	add.s32 	%r4118, %r4025, %r3683;
	add.s32 	%r4119, %r4118, %r3682;
	add.s32 	%r4120, %r4119, %r4117;
	add.s32 	%r3692, %r4120, 1518500249;
	shf.l.wrap.b32 	%r3694, %r3684, %r3684, 30;
	shf.l.wrap.b32 	%r4121, %r3692, %r3692, 5;
	// begin inline asm
	lop3.b32 %r3687, %r3688, %r3694, %r3690, 202;
	// end inline asm
	add.s32 	%r4122, %r4032, %r3687;
	add.s32 	%r4123, %r4122, %r3686;
	add.s32 	%r4124, %r4123, %r4121;
	add.s32 	%r3696, %r4124, 1518500249;
	shf.l.wrap.b32 	%r3698, %r3688, %r3688, 30;
	shf.l.wrap.b32 	%r4125, %r3696, %r3696, 5;
	// begin inline asm
	lop3.b32 %r3691, %r3692, %r3698, %r3694, 202;
	// end inline asm
	add.s32 	%r4126, %r4039, %r3691;
	add.s32 	%r4127, %r4126, %r3690;
	add.s32 	%r4128, %r4127, %r4125;
	add.s32 	%r3700, %r4128, 1518500249;
	shf.l.wrap.b32 	%r3702, %r3692, %r3692, 30;
	shf.l.wrap.b32 	%r4129, %r3700, %r3700, 5;
	// begin inline asm
	lop3.b32 %r3695, %r3696, %r3702, %r3698, 202;
	// end inline asm
	add.s32 	%r4130, %r4046, %r3695;
	add.s32 	%r4131, %r4130, %r3694;
	add.s32 	%r4132, %r4131, %r4129;
	add.s32 	%r3704, %r4132, 1518500249;
	shf.l.wrap.b32 	%r3706, %r3696, %r3696, 30;
	shf.l.wrap.b32 	%r4133, %r3704, %r3704, 5;
	// begin inline asm
	lop3.b32 %r3699, %r3700, %r3706, %r3702, 202;
	// end inline asm
	add.s32 	%r4134, %r4053, %r3699;
	add.s32 	%r4135, %r4134, %r3698;
	add.s32 	%r4136, %r4135, %r4133;
	add.s32 	%r3708, %r4136, 1518500249;
	shf.l.wrap.b32 	%r3710, %r3700, %r3700, 30;
	shf.l.wrap.b32 	%r4137, %r3708, %r3708, 5;
	// begin inline asm
	lop3.b32 %r3703, %r3704, %r3710, %r3706, 202;
	// end inline asm
	add.s32 	%r4138, %r4060, %r3703;
	add.s32 	%r4139, %r4138, %r3702;
	add.s32 	%r4140, %r4139, %r4137;
	add.s32 	%r3712, %r4140, 1518500249;
	shf.l.wrap.b32 	%r3714, %r3704, %r3704, 30;
	shf.l.wrap.b32 	%r4141, %r3712, %r3712, 5;
	// begin inline asm
	lop3.b32 %r3707, %r3708, %r3714, %r3710, 202;
	// end inline asm
	add.s32 	%r4142, %r4067, %r3707;
	add.s32 	%r4143, %r4142, %r3706;
	add.s32 	%r4144, %r4143, %r4141;
	add.s32 	%r3716, %r4144, 1518500249;
	shf.l.wrap.b32 	%r3718, %r3708, %r3708, 30;
	shf.l.wrap.b32 	%r4145, %r3716, %r3716, 5;
	// begin inline asm
	lop3.b32 %r3711, %r3712, %r3718, %r3714, 202;
	// end inline asm
	add.s32 	%r4146, %r4074, %r3711;
	add.s32 	%r4147, %r4146, %r3710;
	add.s32 	%r4148, %r4147, %r4145;
	add.s32 	%r3720, %r4148, 1518500249;
	shf.l.wrap.b32 	%r3722, %r3712, %r3712, 30;
	shf.l.wrap.b32 	%r4149, %r3720, %r3720, 5;
	// begin inline asm
	lop3.b32 %r3715, %r3716, %r3722, %r3718, 202;
	// end inline asm
	add.s32 	%r4150, %r4081, %r3715;
	add.s32 	%r4151, %r4150, %r3714;
	add.s32 	%r4152, %r4151, %r4149;
	add.s32 	%r3724, %r4152, 1518500249;
	shf.l.wrap.b32 	%r3726, %r3716, %r3716, 30;
	shf.l.wrap.b32 	%r4153, %r3724, %r3724, 5;
	// begin inline asm
	lop3.b32 %r3719, %r3720, %r3726, %r3722, 202;
	// end inline asm
	add.s32 	%r4154, %r4088, %r3719;
	add.s32 	%r4155, %r4154, %r3718;
	add.s32 	%r4156, %r4155, %r4153;
	add.s32 	%r3728, %r4156, 1518500249;
	shf.l.wrap.b32 	%r3730, %r3720, %r3720, 30;
	shf.l.wrap.b32 	%r4157, %r3728, %r3728, 5;
	// begin inline asm
	lop3.b32 %r3723, %r3724, %r3730, %r3726, 202;
	// end inline asm
	add.s32 	%r4158, %r4095, %r3723;
	add.s32 	%r4159, %r4158, %r3722;
	add.s32 	%r4160, %r4159, %r4157;
	add.s32 	%r3732, %r4160, 1518500249;
	shf.l.wrap.b32 	%r3734, %r3724, %r3724, 30;
	shf.l.wrap.b32 	%r4161, %r3732, %r3732, 5;
	// begin inline asm
	lop3.b32 %r3727, %r3728, %r3734, %r3730, 202;
	// end inline asm
	xor.b32  	%r4162, %r4004, %r3990;
	xor.b32  	%r4163, %r4162, %r4046;
	xor.b32  	%r4164, %r4163, %r4081;
	shf.l.wrap.b32 	%r4165, %r4164, %r4164, 1;
	add.s32 	%r4166, %r4165, %r3727;
	add.s32 	%r4167, %r4166, %r3726;
	add.s32 	%r4168, %r4167, %r4161;
	add.s32 	%r3736, %r4168, 1518500249;
	shf.l.wrap.b32 	%r3738, %r3728, %r3728, 30;
	shf.l.wrap.b32 	%r4169, %r3736, %r3736, 5;
	// begin inline asm
	lop3.b32 %r3731, %r3732, %r3738, %r3734, 202;
	// end inline asm
	xor.b32  	%r4170, %r4011, %r3997;
	xor.b32  	%r4171, %r4170, %r4053;
	xor.b32  	%r4172, %r4171, %r4088;
	shf.l.wrap.b32 	%r4173, %r4172, %r4172, 1;
	add.s32 	%r4174, %r4173, %r3731;
	add.s32 	%r4175, %r4174, %r3730;
	add.s32 	%r4176, %r4175, %r4169;
	add.s32 	%r3740, %r4176, 1518500249;
	shf.l.wrap.b32 	%r3742, %r3732, %r3732, 30;
	shf.l.wrap.b32 	%r4177, %r3740, %r3740, 5;
	// begin inline asm
	lop3.b32 %r3735, %r3736, %r3742, %r3738, 202;
	// end inline asm
	xor.b32  	%r4178, %r4018, %r4004;
	xor.b32  	%r4179, %r4178, %r4060;
	xor.b32  	%r4180, %r4179, %r4095;
	shf.l.wrap.b32 	%r4181, %r4180, %r4180, 1;
	add.s32 	%r4182, %r4181, %r3735;
	add.s32 	%r4183, %r4182, %r3734;
	add.s32 	%r4184, %r4183, %r4177;
	add.s32 	%r3744, %r4184, 1518500249;
	shf.l.wrap.b32 	%r3746, %r3736, %r3736, 30;
	shf.l.wrap.b32 	%r4185, %r3744, %r3744, 5;
	// begin inline asm
	lop3.b32 %r3739, %r3740, %r3746, %r3742, 202;
	// end inline asm
	xor.b32  	%r4186, %r4025, %r4011;
	xor.b32  	%r4187, %r4186, %r4067;
	xor.b32  	%r4188, %r4187, %r4165;
	shf.l.wrap.b32 	%r4189, %r4188, %r4188, 1;
	add.s32 	%r4190, %r4189, %r3739;
	add.s32 	%r4191, %r4190, %r3738;
	add.s32 	%r4192, %r4191, %r4185;
	add.s32 	%r3748, %r4192, 1518500249;
	shf.l.wrap.b32 	%r3750, %r3740, %r3740, 30;
	shf.l.wrap.b32 	%r4193, %r3748, %r3748, 5;
	// begin inline asm
	lop3.b32 %r3743, %r3744, %r3750, %r3746, 150;
	// end inline asm
	xor.b32  	%r4194, %r4032, %r4018;
	xor.b32  	%r4195, %r4194, %r4074;
	xor.b32  	%r4196, %r4195, %r4173;
	shf.l.wrap.b32 	%r4197, %r4196, %r4196, 1;
	add.s32 	%r4198, %r4197, %r3743;
	add.s32 	%r4199, %r4198, %r3742;
	add.s32 	%r4200, %r4199, %r4193;
	add.s32 	%r3752, %r4200, 1859775393;
	shf.l.wrap.b32 	%r3754, %r3744, %r3744, 30;
	shf.l.wrap.b32 	%r4201, %r3752, %r3752, 5;
	// begin inline asm
	lop3.b32 %r3747, %r3748, %r3754, %r3750, 150;
	// end inline asm
	xor.b32  	%r4202, %r4039, %r4025;
	xor.b32  	%r4203, %r4202, %r4081;
	xor.b32  	%r4204, %r4203, %r4181;
	shf.l.wrap.b32 	%r4205, %r4204, %r4204, 1;
	add.s32 	%r4206, %r4205, %r3747;
	add.s32 	%r4207, %r4206, %r3746;
	add.s32 	%r4208, %r4207, %r4201;
	add.s32 	%r3756, %r4208, 1859775393;
	shf.l.wrap.b32 	%r3758, %r3748, %r3748, 30;
	shf.l.wrap.b32 	%r4209, %r3756, %r3756, 5;
	// begin inline asm
	lop3.b32 %r3751, %r3752, %r3758, %r3754, 150;
	// end inline asm
	xor.b32  	%r4210, %r4046, %r4032;
	xor.b32  	%r4211, %r4210, %r4088;
	xor.b32  	%r4212, %r4211, %r4189;
	shf.l.wrap.b32 	%r4213, %r4212, %r4212, 1;
	add.s32 	%r4214, %r4213, %r3751;
	add.s32 	%r4215, %r4214, %r3750;
	add.s32 	%r4216, %r4215, %r4209;
	add.s32 	%r3760, %r4216, 1859775393;
	shf.l.wrap.b32 	%r3762, %r3752, %r3752, 30;
	shf.l.wrap.b32 	%r4217, %r3760, %r3760, 5;
	// begin inline asm
	lop3.b32 %r3755, %r3756, %r3762, %r3758, 150;
	// end inline asm
	xor.b32  	%r4218, %r4053, %r4039;
	xor.b32  	%r4219, %r4218, %r4095;
	xor.b32  	%r4220, %r4219, %r4197;
	shf.l.wrap.b32 	%r4221, %r4220, %r4220, 1;
	add.s32 	%r4222, %r4221, %r3755;
	add.s32 	%r4223, %r4222, %r3754;
	add.s32 	%r4224, %r4223, %r4217;
	add.s32 	%r3764, %r4224, 1859775393;
	shf.l.wrap.b32 	%r3766, %r3756, %r3756, 30;
	shf.l.wrap.b32 	%r4225, %r3764, %r3764, 5;
	// begin inline asm
	lop3.b32 %r3759, %r3760, %r3766, %r3762, 150;
	// end inline asm
	xor.b32  	%r4226, %r4060, %r4046;
	xor.b32  	%r4227, %r4226, %r4165;
	xor.b32  	%r4228, %r4227, %r4205;
	shf.l.wrap.b32 	%r4229, %r4228, %r4228, 1;
	add.s32 	%r4230, %r4229, %r3759;
	add.s32 	%r4231, %r4230, %r3758;
	add.s32 	%r4232, %r4231, %r4225;
	add.s32 	%r3768, %r4232, 1859775393;
	shf.l.wrap.b32 	%r3770, %r3760, %r3760, 30;
	shf.l.wrap.b32 	%r4233, %r3768, %r3768, 5;
	// begin inline asm
	lop3.b32 %r3763, %r3764, %r3770, %r3766, 150;
	// end inline asm
	xor.b32  	%r4234, %r4067, %r4053;
	xor.b32  	%r4235, %r4234, %r4173;
	xor.b32  	%r4236, %r4235, %r4213;
	shf.l.wrap.b32 	%r4237, %r4236, %r4236, 1;
	add.s32 	%r4238, %r4237, %r3763;
	add.s32 	%r4239, %r4238, %r3762;
	add.s32 	%r4240, %r4239, %r4233;
	add.s32 	%r3772, %r4240, 1859775393;
	shf.l.wrap.b32 	%r3774, %r3764, %r3764, 30;
	shf.l.wrap.b32 	%r4241, %r3772, %r3772, 5;
	// begin inline asm
	lop3.b32 %r3767, %r3768, %r3774, %r3770, 150;
	// end inline asm
	xor.b32  	%r4242, %r4074, %r4060;
	xor.b32  	%r4243, %r4242, %r4181;
	xor.b32  	%r4244, %r4243, %r4221;
	shf.l.wrap.b32 	%r4245, %r4244, %r4244, 1;
	add.s32 	%r4246, %r4245, %r3767;
	add.s32 	%r4247, %r4246, %r3766;
	add.s32 	%r4248, %r4247, %r4241;
	add.s32 	%r3776, %r4248, 1859775393;
	shf.l.wrap.b32 	%r3778, %r3768, %r3768, 30;
	shf.l.wrap.b32 	%r4249, %r3776, %r3776, 5;
	// begin inline asm
	lop3.b32 %r3771, %r3772, %r3778, %r3774, 150;
	// end inline asm
	xor.b32  	%r4250, %r4081, %r4067;
	xor.b32  	%r4251, %r4250, %r4189;
	xor.b32  	%r4252, %r4251, %r4229;
	shf.l.wrap.b32 	%r4253, %r4252, %r4252, 1;
	add.s32 	%r4254, %r4253, %r3771;
	add.s32 	%r4255, %r4254, %r3770;
	add.s32 	%r4256, %r4255, %r4249;
	add.s32 	%r3780, %r4256, 1859775393;
	shf.l.wrap.b32 	%r3782, %r3772, %r3772, 30;
	shf.l.wrap.b32 	%r4257, %r3780, %r3780, 5;
	// begin inline asm
	lop3.b32 %r3775, %r3776, %r3782, %r3778, 150;
	// end inline asm
	xor.b32  	%r4258, %r4088, %r4074;
	xor.b32  	%r4259, %r4258, %r4197;
	xor.b32  	%r4260, %r4259, %r4237;
	shf.l.wrap.b32 	%r4261, %r4260, %r4260, 1;
	add.s32 	%r4262, %r4261, %r3775;
	add.s32 	%r4263, %r4262, %r3774;
	add.s32 	%r4264, %r4263, %r4257;
	add.s32 	%r3784, %r4264, 1859775393;
	shf.l.wrap.b32 	%r3786, %r3776, %r3776, 30;
	shf.l.wrap.b32 	%r4265, %r3784, %r3784, 5;
	// begin inline asm
	lop3.b32 %r3779, %r3780, %r3786, %r3782, 150;
	// end inline asm
	xor.b32  	%r4266, %r4095, %r4081;
	xor.b32  	%r4267, %r4266, %r4205;
	xor.b32  	%r4268, %r4267, %r4245;
	shf.l.wrap.b32 	%r4269, %r4268, %r4268, 1;
	add.s32 	%r4270, %r4269, %r3779;
	add.s32 	%r4271, %r4270, %r3778;
	add.s32 	%r4272, %r4271, %r4265;
	add.s32 	%r3788, %r4272, 1859775393;
	shf.l.wrap.b32 	%r3790, %r3780, %r3780, 30;
	shf.l.wrap.b32 	%r4273, %r3788, %r3788, 5;
	// begin inline asm
	lop3.b32 %r3783, %r3784, %r3790, %r3786, 150;
	// end inline asm
	xor.b32  	%r4274, %r4165, %r4088;
	xor.b32  	%r4275, %r4274, %r4213;
	xor.b32  	%r4276, %r4275, %r4253;
	shf.l.wrap.b32 	%r4277, %r4276, %r4276, 1;
	add.s32 	%r4278, %r4277, %r3783;
	add.s32 	%r4279, %r4278, %r3782;
	add.s32 	%r4280, %r4279, %r4273;
	add.s32 	%r3792, %r4280, 1859775393;
	shf.l.wrap.b32 	%r3794, %r3784, %r3784, 30;
	shf.l.wrap.b32 	%r4281, %r3792, %r3792, 5;
	// begin inline asm
	lop3.b32 %r3787, %r3788, %r3794, %r3790, 150;
	// end inline asm
	xor.b32  	%r4282, %r4173, %r4095;
	xor.b32  	%r4283, %r4282, %r4221;
	xor.b32  	%r4284, %r4283, %r4261;
	shf.l.wrap.b32 	%r4285, %r4284, %r4284, 1;
	add.s32 	%r4286, %r4285, %r3787;
	add.s32 	%r4287, %r4286, %r3786;
	add.s32 	%r4288, %r4287, %r4281;
	add.s32 	%r3796, %r4288, 1859775393;
	shf.l.wrap.b32 	%r3798, %r3788, %r3788, 30;
	shf.l.wrap.b32 	%r4289, %r3796, %r3796, 5;
	// begin inline asm
	lop3.b32 %r3791, %r3792, %r3798, %r3794, 150;
	// end inline asm
	xor.b32  	%r4290, %r4181, %r4165;
	xor.b32  	%r4291, %r4290, %r4229;
	xor.b32  	%r4292, %r4291, %r4269;
	shf.l.wrap.b32 	%r4293, %r4292, %r4292, 1;
	add.s32 	%r4294, %r4293, %r3791;
	add.s32 	%r4295, %r4294, %r3790;
	add.s32 	%r4296, %r4295, %r4289;
	add.s32 	%r3800, %r4296, 1859775393;
	shf.l.wrap.b32 	%r3802, %r3792, %r3792, 30;
	shf.l.wrap.b32 	%r4297, %r3800, %r3800, 5;
	// begin inline asm
	lop3.b32 %r3795, %r3796, %r3802, %r3798, 150;
	// end inline asm
	xor.b32  	%r4298, %r4189, %r4173;
	xor.b32  	%r4299, %r4298, %r4237;
	xor.b32  	%r4300, %r4299, %r4277;
	shf.l.wrap.b32 	%r4301, %r4300, %r4300, 1;
	add.s32 	%r4302, %r4301, %r3795;
	add.s32 	%r4303, %r4302, %r3794;
	add.s32 	%r4304, %r4303, %r4297;
	add.s32 	%r3804, %r4304, 1859775393;
	shf.l.wrap.b32 	%r3806, %r3796, %r3796, 30;
	shf.l.wrap.b32 	%r4305, %r3804, %r3804, 5;
	// begin inline asm
	lop3.b32 %r3799, %r3800, %r3806, %r3802, 150;
	// end inline asm
	xor.b32  	%r4306, %r4197, %r4181;
	xor.b32  	%r4307, %r4306, %r4245;
	xor.b32  	%r4308, %r4307, %r4285;
	shf.l.wrap.b32 	%r4309, %r4308, %r4308, 1;
	add.s32 	%r4310, %r4309, %r3799;
	add.s32 	%r4311, %r4310, %r3798;
	add.s32 	%r4312, %r4311, %r4305;
	add.s32 	%r3808, %r4312, 1859775393;
	shf.l.wrap.b32 	%r3810, %r3800, %r3800, 30;
	shf.l.wrap.b32 	%r4313, %r3808, %r3808, 5;
	// begin inline asm
	lop3.b32 %r3803, %r3804, %r3810, %r3806, 150;
	// end inline asm
	xor.b32  	%r4314, %r4205, %r4189;
	xor.b32  	%r4315, %r4314, %r4253;
	xor.b32  	%r4316, %r4315, %r4293;
	shf.l.wrap.b32 	%r4317, %r4316, %r4316, 1;
	add.s32 	%r4318, %r4317, %r3803;
	add.s32 	%r4319, %r4318, %r3802;
	add.s32 	%r4320, %r4319, %r4313;
	add.s32 	%r3812, %r4320, 1859775393;
	shf.l.wrap.b32 	%r3814, %r3804, %r3804, 30;
	shf.l.wrap.b32 	%r4321, %r3812, %r3812, 5;
	// begin inline asm
	lop3.b32 %r3807, %r3808, %r3814, %r3810, 150;
	// end inline asm
	xor.b32  	%r4322, %r4213, %r4197;
	xor.b32  	%r4323, %r4322, %r4261;
	xor.b32  	%r4324, %r4323, %r4301;
	shf.l.wrap.b32 	%r4325, %r4324, %r4324, 1;
	add.s32 	%r4326, %r4325, %r3807;
	add.s32 	%r4327, %r4326, %r3806;
	add.s32 	%r4328, %r4327, %r4321;
	add.s32 	%r3816, %r4328, 1859775393;
	shf.l.wrap.b32 	%r3818, %r3808, %r3808, 30;
	shf.l.wrap.b32 	%r4329, %r3816, %r3816, 5;
	// begin inline asm
	lop3.b32 %r3811, %r3812, %r3818, %r3814, 150;
	// end inline asm
	xor.b32  	%r4330, %r4221, %r4205;
	xor.b32  	%r4331, %r4330, %r4269;
	xor.b32  	%r4332, %r4331, %r4309;
	shf.l.wrap.b32 	%r4333, %r4332, %r4332, 1;
	add.s32 	%r4334, %r4333, %r3811;
	add.s32 	%r4335, %r4334, %r3810;
	add.s32 	%r4336, %r4335, %r4329;
	add.s32 	%r3820, %r4336, 1859775393;
	shf.l.wrap.b32 	%r3822, %r3812, %r3812, 30;
	shf.l.wrap.b32 	%r4337, %r3820, %r3820, 5;
	// begin inline asm
	lop3.b32 %r3815, %r3816, %r3822, %r3818, 150;
	// end inline asm
	xor.b32  	%r4338, %r4229, %r4213;
	xor.b32  	%r4339, %r4338, %r4277;
	xor.b32  	%r4340, %r4339, %r4317;
	shf.l.wrap.b32 	%r4341, %r4340, %r4340, 1;
	add.s32 	%r4342, %r4341, %r3815;
	add.s32 	%r4343, %r4342, %r3814;
	add.s32 	%r4344, %r4343, %r4337;
	add.s32 	%r3824, %r4344, 1859775393;
	shf.l.wrap.b32 	%r3826, %r3816, %r3816, 30;
	shf.l.wrap.b32 	%r4345, %r3824, %r3824, 5;
	// begin inline asm
	lop3.b32 %r3819, %r3820, %r3826, %r3822, 150;
	// end inline asm
	xor.b32  	%r4346, %r4237, %r4221;
	xor.b32  	%r4347, %r4346, %r4285;
	xor.b32  	%r4348, %r4347, %r4325;
	shf.l.wrap.b32 	%r4349, %r4348, %r4348, 1;
	add.s32 	%r4350, %r4349, %r3819;
	add.s32 	%r4351, %r4350, %r3818;
	add.s32 	%r4352, %r4351, %r4345;
	add.s32 	%r3828, %r4352, 1859775393;
	shf.l.wrap.b32 	%r3830, %r3820, %r3820, 30;
	shf.l.wrap.b32 	%r4353, %r3828, %r3828, 5;
	// begin inline asm
	lop3.b32 %r3823, %r3824, %r3830, %r3826, 232;
	// end inline asm
	xor.b32  	%r4354, %r4245, %r4229;
	xor.b32  	%r4355, %r4354, %r4293;
	xor.b32  	%r4356, %r4355, %r4333;
	shf.l.wrap.b32 	%r4357, %r4356, %r4356, 1;
	add.s32 	%r4358, %r4357, %r3823;
	add.s32 	%r4359, %r4358, %r3822;
	add.s32 	%r4360, %r4359, %r4353;
	add.s32 	%r3832, %r4360, -1894007588;
	shf.l.wrap.b32 	%r3834, %r3824, %r3824, 30;
	shf.l.wrap.b32 	%r4361, %r3832, %r3832, 5;
	// begin inline asm
	lop3.b32 %r3827, %r3828, %r3834, %r3830, 232;
	// end inline asm
	xor.b32  	%r4362, %r4253, %r4237;
	xor.b32  	%r4363, %r4362, %r4301;
	xor.b32  	%r4364, %r4363, %r4341;
	shf.l.wrap.b32 	%r4365, %r4364, %r4364, 1;
	add.s32 	%r4366, %r4365, %r3827;
	add.s32 	%r4367, %r4366, %r3826;
	add.s32 	%r4368, %r4367, %r4361;
	add.s32 	%r3836, %r4368, -1894007588;
	shf.l.wrap.b32 	%r3838, %r3828, %r3828, 30;
	shf.l.wrap.b32 	%r4369, %r3836, %r3836, 5;
	// begin inline asm
	lop3.b32 %r3831, %r3832, %r3838, %r3834, 232;
	// end inline asm
	xor.b32  	%r4370, %r4261, %r4245;
	xor.b32  	%r4371, %r4370, %r4309;
	xor.b32  	%r4372, %r4371, %r4349;
	shf.l.wrap.b32 	%r4373, %r4372, %r4372, 1;
	add.s32 	%r4374, %r4373, %r3831;
	add.s32 	%r4375, %r4374, %r3830;
	add.s32 	%r4376, %r4375, %r4369;
	add.s32 	%r3840, %r4376, -1894007588;
	shf.l.wrap.b32 	%r3842, %r3832, %r3832, 30;
	shf.l.wrap.b32 	%r4377, %r3840, %r3840, 5;
	// begin inline asm
	lop3.b32 %r3835, %r3836, %r3842, %r3838, 232;
	// end inline asm
	xor.b32  	%r4378, %r4269, %r4253;
	xor.b32  	%r4379, %r4378, %r4317;
	xor.b32  	%r4380, %r4379, %r4357;
	shf.l.wrap.b32 	%r4381, %r4380, %r4380, 1;
	add.s32 	%r4382, %r4381, %r3835;
	add.s32 	%r4383, %r4382, %r3834;
	add.s32 	%r4384, %r4383, %r4377;
	add.s32 	%r3844, %r4384, -1894007588;
	shf.l.wrap.b32 	%r3846, %r3836, %r3836, 30;
	shf.l.wrap.b32 	%r4385, %r3844, %r3844, 5;
	// begin inline asm
	lop3.b32 %r3839, %r3840, %r3846, %r3842, 232;
	// end inline asm
	xor.b32  	%r4386, %r4277, %r4261;
	xor.b32  	%r4387, %r4386, %r4325;
	xor.b32  	%r4388, %r4387, %r4365;
	shf.l.wrap.b32 	%r4389, %r4388, %r4388, 1;
	add.s32 	%r4390, %r4389, %r3839;
	add.s32 	%r4391, %r4390, %r3838;
	add.s32 	%r4392, %r4391, %r4385;
	add.s32 	%r3848, %r4392, -1894007588;
	shf.l.wrap.b32 	%r3850, %r3840, %r3840, 30;
	shf.l.wrap.b32 	%r4393, %r3848, %r3848, 5;
	// begin inline asm
	lop3.b32 %r3843, %r3844, %r3850, %r3846, 232;
	// end inline asm
	xor.b32  	%r4394, %r4285, %r4269;
	xor.b32  	%r4395, %r4394, %r4333;
	xor.b32  	%r4396, %r4395, %r4373;
	shf.l.wrap.b32 	%r4397, %r4396, %r4396, 1;
	add.s32 	%r4398, %r4397, %r3843;
	add.s32 	%r4399, %r4398, %r3842;
	add.s32 	%r4400, %r4399, %r4393;
	add.s32 	%r3852, %r4400, -1894007588;
	shf.l.wrap.b32 	%r3854, %r3844, %r3844, 30;
	shf.l.wrap.b32 	%r4401, %r3852, %r3852, 5;
	// begin inline asm
	lop3.b32 %r3847, %r3848, %r3854, %r3850, 232;
	// end inline asm
	xor.b32  	%r4402, %r4293, %r4277;
	xor.b32  	%r4403, %r4402, %r4341;
	xor.b32  	%r4404, %r4403, %r4381;
	shf.l.wrap.b32 	%r4405, %r4404, %r4404, 1;
	add.s32 	%r4406, %r4405, %r3847;
	add.s32 	%r4407, %r4406, %r3846;
	add.s32 	%r4408, %r4407, %r4401;
	add.s32 	%r3856, %r4408, -1894007588;
	shf.l.wrap.b32 	%r3858, %r3848, %r3848, 30;
	shf.l.wrap.b32 	%r4409, %r3856, %r3856, 5;
	// begin inline asm
	lop3.b32 %r3851, %r3852, %r3858, %r3854, 232;
	// end inline asm
	xor.b32  	%r4410, %r4301, %r4285;
	xor.b32  	%r4411, %r4410, %r4349;
	xor.b32  	%r4412, %r4411, %r4389;
	shf.l.wrap.b32 	%r4413, %r4412, %r4412, 1;
	add.s32 	%r4414, %r4413, %r3851;
	add.s32 	%r4415, %r4414, %r3850;
	add.s32 	%r4416, %r4415, %r4409;
	add.s32 	%r3860, %r4416, -1894007588;
	shf.l.wrap.b32 	%r3862, %r3852, %r3852, 30;
	shf.l.wrap.b32 	%r4417, %r3860, %r3860, 5;
	// begin inline asm
	lop3.b32 %r3855, %r3856, %r3862, %r3858, 232;
	// end inline asm
	xor.b32  	%r4418, %r4309, %r4293;
	xor.b32  	%r4419, %r4418, %r4357;
	xor.b32  	%r4420, %r4419, %r4397;
	shf.l.wrap.b32 	%r4421, %r4420, %r4420, 1;
	add.s32 	%r4422, %r4421, %r3855;
	add.s32 	%r4423, %r4422, %r3854;
	add.s32 	%r4424, %r4423, %r4417;
	add.s32 	%r3864, %r4424, -1894007588;
	shf.l.wrap.b32 	%r3866, %r3856, %r3856, 30;
	shf.l.wrap.b32 	%r4425, %r3864, %r3864, 5;
	// begin inline asm
	lop3.b32 %r3859, %r3860, %r3866, %r3862, 232;
	// end inline asm
	xor.b32  	%r4426, %r4317, %r4301;
	xor.b32  	%r4427, %r4426, %r4365;
	xor.b32  	%r4428, %r4427, %r4405;
	shf.l.wrap.b32 	%r4429, %r4428, %r4428, 1;
	add.s32 	%r4430, %r4429, %r3859;
	add.s32 	%r4431, %r4430, %r3858;
	add.s32 	%r4432, %r4431, %r4425;
	add.s32 	%r3868, %r4432, -1894007588;
	shf.l.wrap.b32 	%r3870, %r3860, %r3860, 30;
	shf.l.wrap.b32 	%r4433, %r3868, %r3868, 5;
	// begin inline asm
	lop3.b32 %r3863, %r3864, %r3870, %r3866, 232;
	// end inline asm
	xor.b32  	%r4434, %r4325, %r4309;
	xor.b32  	%r4435, %r4434, %r4373;
	xor.b32  	%r4436, %r4435, %r4413;
	shf.l.wrap.b32 	%r4437, %r4436, %r4436, 1;
	add.s32 	%r4438, %r4437, %r3863;
	add.s32 	%r4439, %r4438, %r3862;
	add.s32 	%r4440, %r4439, %r4433;
	add.s32 	%r3872, %r4440, -1894007588;
	shf.l.wrap.b32 	%r3874, %r3864, %r3864, 30;
	shf.l.wrap.b32 	%r4441, %r3872, %r3872, 5;
	// begin inline asm
	lop3.b32 %r3867, %r3868, %r3874, %r3870, 232;
	// end inline asm
	xor.b32  	%r4442, %r4333, %r4317;
	xor.b32  	%r4443, %r4442, %r4381;
	xor.b32  	%r4444, %r4443, %r4421;
	shf.l.wrap.b32 	%r4445, %r4444, %r4444, 1;
	add.s32 	%r4446, %r4445, %r3867;
	add.s32 	%r4447, %r4446, %r3866;
	add.s32 	%r4448, %r4447, %r4441;
	add.s32 	%r3876, %r4448, -1894007588;
	shf.l.wrap.b32 	%r3878, %r3868, %r3868, 30;
	shf.l.wrap.b32 	%r4449, %r3876, %r3876, 5;
	// begin inline asm
	lop3.b32 %r3871, %r3872, %r3878, %r3874, 232;
	// end inline asm
	xor.b32  	%r4450, %r4341, %r4325;
	xor.b32  	%r4451, %r4450, %r4389;
	xor.b32  	%r4452, %r4451, %r4429;
	shf.l.wrap.b32 	%r4453, %r4452, %r4452, 1;
	add.s32 	%r4454, %r4453, %r3871;
	add.s32 	%r4455, %r4454, %r3870;
	add.s32 	%r4456, %r4455, %r4449;
	add.s32 	%r3880, %r4456, -1894007588;
	shf.l.wrap.b32 	%r3882, %r3872, %r3872, 30;
	shf.l.wrap.b32 	%r4457, %r3880, %r3880, 5;
	// begin inline asm
	lop3.b32 %r3875, %r3876, %r3882, %r3878, 232;
	// end inline asm
	xor.b32  	%r4458, %r4349, %r4333;
	xor.b32  	%r4459, %r4458, %r4397;
	xor.b32  	%r4460, %r4459, %r4437;
	shf.l.wrap.b32 	%r4461, %r4460, %r4460, 1;
	add.s32 	%r4462, %r4461, %r3875;
	add.s32 	%r4463, %r4462, %r3874;
	add.s32 	%r4464, %r4463, %r4457;
	add.s32 	%r3884, %r4464, -1894007588;
	shf.l.wrap.b32 	%r3886, %r3876, %r3876, 30;
	shf.l.wrap.b32 	%r4465, %r3884, %r3884, 5;
	// begin inline asm
	lop3.b32 %r3879, %r3880, %r3886, %r3882, 232;
	// end inline asm
	xor.b32  	%r4466, %r4357, %r4341;
	xor.b32  	%r4467, %r4466, %r4405;
	xor.b32  	%r4468, %r4467, %r4445;
	shf.l.wrap.b32 	%r4469, %r4468, %r4468, 1;
	add.s32 	%r4470, %r4469, %r3879;
	add.s32 	%r4471, %r4470, %r3878;
	add.s32 	%r4472, %r4471, %r4465;
	add.s32 	%r3888, %r4472, -1894007588;
	shf.l.wrap.b32 	%r3890, %r3880, %r3880, 30;
	shf.l.wrap.b32 	%r4473, %r3888, %r3888, 5;
	// begin inline asm
	lop3.b32 %r3883, %r3884, %r3890, %r3886, 232;
	// end inline asm
	xor.b32  	%r4474, %r4365, %r4349;
	xor.b32  	%r4475, %r4474, %r4413;
	xor.b32  	%r4476, %r4475, %r4453;
	shf.l.wrap.b32 	%r4477, %r4476, %r4476, 1;
	add.s32 	%r4478, %r4477, %r3883;
	add.s32 	%r4479, %r4478, %r3882;
	add.s32 	%r4480, %r4479, %r4473;
	add.s32 	%r3892, %r4480, -1894007588;
	shf.l.wrap.b32 	%r3894, %r3884, %r3884, 30;
	shf.l.wrap.b32 	%r4481, %r3892, %r3892, 5;
	// begin inline asm
	lop3.b32 %r3887, %r3888, %r3894, %r3890, 232;
	// end inline asm
	xor.b32  	%r4482, %r4373, %r4357;
	xor.b32  	%r4483, %r4482, %r4421;
	xor.b32  	%r4484, %r4483, %r4461;
	shf.l.wrap.b32 	%r4485, %r4484, %r4484, 1;
	add.s32 	%r4486, %r4485, %r3887;
	add.s32 	%r4487, %r4486, %r3886;
	add.s32 	%r4488, %r4487, %r4481;
	add.s32 	%r3896, %r4488, -1894007588;
	shf.l.wrap.b32 	%r3898, %r3888, %r3888, 30;
	shf.l.wrap.b32 	%r4489, %r3896, %r3896, 5;
	// begin inline asm
	lop3.b32 %r3891, %r3892, %r3898, %r3894, 232;
	// end inline asm
	xor.b32  	%r4490, %r4381, %r4365;
	xor.b32  	%r4491, %r4490, %r4429;
	xor.b32  	%r4492, %r4491, %r4469;
	shf.l.wrap.b32 	%r4493, %r4492, %r4492, 1;
	add.s32 	%r4494, %r4493, %r3891;
	add.s32 	%r4495, %r4494, %r3890;
	add.s32 	%r4496, %r4495, %r4489;
	add.s32 	%r3900, %r4496, -1894007588;
	shf.l.wrap.b32 	%r3902, %r3892, %r3892, 30;
	shf.l.wrap.b32 	%r4497, %r3900, %r3900, 5;
	// begin inline asm
	lop3.b32 %r3895, %r3896, %r3902, %r3898, 232;
	// end inline asm
	xor.b32  	%r4498, %r4389, %r4373;
	xor.b32  	%r4499, %r4498, %r4437;
	xor.b32  	%r4500, %r4499, %r4477;
	shf.l.wrap.b32 	%r4501, %r4500, %r4500, 1;
	add.s32 	%r4502, %r4501, %r3895;
	add.s32 	%r4503, %r4502, %r3894;
	add.s32 	%r4504, %r4503, %r4497;
	add.s32 	%r3904, %r4504, -1894007588;
	shf.l.wrap.b32 	%r3906, %r3896, %r3896, 30;
	shf.l.wrap.b32 	%r4505, %r3904, %r3904, 5;
	// begin inline asm
	lop3.b32 %r3899, %r3900, %r3906, %r3902, 232;
	// end inline asm
	xor.b32  	%r4506, %r4397, %r4381;
	xor.b32  	%r4507, %r4506, %r4445;
	xor.b32  	%r4508, %r4507, %r4485;
	shf.l.wrap.b32 	%r4509, %r4508, %r4508, 1;
	add.s32 	%r4510, %r4509, %r3899;
	add.s32 	%r4511, %r4510, %r3898;
	add.s32 	%r4512, %r4511, %r4505;
	add.s32 	%r3908, %r4512, -1894007588;
	shf.l.wrap.b32 	%r3910, %r3900, %r3900, 30;
	shf.l.wrap.b32 	%r4513, %r3908, %r3908, 5;
	// begin inline asm
	lop3.b32 %r3903, %r3904, %r3910, %r3906, 150;
	// end inline asm
	xor.b32  	%r4514, %r4405, %r4389;
	xor.b32  	%r4515, %r4514, %r4453;
	xor.b32  	%r4516, %r4515, %r4493;
	shf.l.wrap.b32 	%r4517, %r4516, %r4516, 1;
	add.s32 	%r4518, %r4517, %r3903;
	add.s32 	%r4519, %r4518, %r3902;
	add.s32 	%r4520, %r4519, %r4513;
	add.s32 	%r3912, %r4520, -899497514;
	shf.l.wrap.b32 	%r3914, %r3904, %r3904, 30;
	shf.l.wrap.b32 	%r4521, %r3912, %r3912, 5;
	// begin inline asm
	lop3.b32 %r3907, %r3908, %r3914, %r3910, 150;
	// end inline asm
	xor.b32  	%r4522, %r4413, %r4397;
	xor.b32  	%r4523, %r4522, %r4461;
	xor.b32  	%r4524, %r4523, %r4501;
	shf.l.wrap.b32 	%r4525, %r4524, %r4524, 1;
	add.s32 	%r4526, %r4525, %r3907;
	add.s32 	%r4527, %r4526, %r3906;
	add.s32 	%r4528, %r4527, %r4521;
	add.s32 	%r3916, %r4528, -899497514;
	shf.l.wrap.b32 	%r3918, %r3908, %r3908, 30;
	shf.l.wrap.b32 	%r4529, %r3916, %r3916, 5;
	// begin inline asm
	lop3.b32 %r3911, %r3912, %r3918, %r3914, 150;
	// end inline asm
	xor.b32  	%r4530, %r4421, %r4405;
	xor.b32  	%r4531, %r4530, %r4469;
	xor.b32  	%r4532, %r4531, %r4509;
	shf.l.wrap.b32 	%r4533, %r4532, %r4532, 1;
	add.s32 	%r4534, %r4533, %r3911;
	add.s32 	%r4535, %r4534, %r3910;
	add.s32 	%r4536, %r4535, %r4529;
	add.s32 	%r3920, %r4536, -899497514;
	shf.l.wrap.b32 	%r3922, %r3912, %r3912, 30;
	shf.l.wrap.b32 	%r4537, %r3920, %r3920, 5;
	// begin inline asm
	lop3.b32 %r3915, %r3916, %r3922, %r3918, 150;
	// end inline asm
	xor.b32  	%r4538, %r4429, %r4413;
	xor.b32  	%r4539, %r4538, %r4477;
	xor.b32  	%r4540, %r4539, %r4517;
	shf.l.wrap.b32 	%r4541, %r4540, %r4540, 1;
	add.s32 	%r4542, %r4541, %r3915;
	add.s32 	%r4543, %r4542, %r3914;
	add.s32 	%r4544, %r4543, %r4537;
	add.s32 	%r3924, %r4544, -899497514;
	shf.l.wrap.b32 	%r3926, %r3916, %r3916, 30;
	shf.l.wrap.b32 	%r4545, %r3924, %r3924, 5;
	// begin inline asm
	lop3.b32 %r3919, %r3920, %r3926, %r3922, 150;
	// end inline asm
	xor.b32  	%r4546, %r4437, %r4421;
	xor.b32  	%r4547, %r4546, %r4485;
	xor.b32  	%r4548, %r4547, %r4525;
	shf.l.wrap.b32 	%r4549, %r4548, %r4548, 1;
	add.s32 	%r4550, %r3919, %r4549;
	add.s32 	%r4551, %r4550, %r3918;
	add.s32 	%r4552, %r4551, %r4545;
	add.s32 	%r3928, %r4552, -899497514;
	shf.l.wrap.b32 	%r3930, %r3920, %r3920, 30;
	shf.l.wrap.b32 	%r4553, %r3928, %r3928, 5;
	// begin inline asm
	lop3.b32 %r3923, %r3924, %r3930, %r3926, 150;
	// end inline asm
	xor.b32  	%r4554, %r4445, %r4429;
	xor.b32  	%r4555, %r4554, %r4493;
	xor.b32  	%r4556, %r4555, %r4533;
	shf.l.wrap.b32 	%r4557, %r4556, %r4556, 1;
	add.s32 	%r4558, %r3923, %r4557;
	add.s32 	%r4559, %r4558, %r3922;
	add.s32 	%r4560, %r4559, %r4553;
	add.s32 	%r3932, %r4560, -899497514;
	shf.l.wrap.b32 	%r3934, %r3924, %r3924, 30;
	shf.l.wrap.b32 	%r4561, %r3932, %r3932, 5;
	// begin inline asm
	lop3.b32 %r3927, %r3928, %r3934, %r3930, 150;
	// end inline asm
	xor.b32  	%r4562, %r4453, %r4437;
	xor.b32  	%r4563, %r4562, %r4501;
	xor.b32  	%r4564, %r4563, %r4541;
	shf.l.wrap.b32 	%r4565, %r4564, %r4564, 1;
	add.s32 	%r4566, %r3927, %r4565;
	add.s32 	%r4567, %r4566, %r3926;
	add.s32 	%r4568, %r4567, %r4561;
	add.s32 	%r3936, %r4568, -899497514;
	shf.l.wrap.b32 	%r3938, %r3928, %r3928, 30;
	shf.l.wrap.b32 	%r4569, %r3936, %r3936, 5;
	// begin inline asm
	lop3.b32 %r3931, %r3932, %r3938, %r3934, 150;
	// end inline asm
	xor.b32  	%r4570, %r4461, %r4445;
	xor.b32  	%r4571, %r4570, %r4509;
	xor.b32  	%r4572, %r4571, %r4549;
	shf.l.wrap.b32 	%r4573, %r4572, %r4572, 1;
	add.s32 	%r4574, %r3931, %r4573;
	add.s32 	%r4575, %r4574, %r3930;
	add.s32 	%r4576, %r4575, %r4569;
	add.s32 	%r3940, %r4576, -899497514;
	shf.l.wrap.b32 	%r3942, %r3932, %r3932, 30;
	shf.l.wrap.b32 	%r4577, %r3940, %r3940, 5;
	// begin inline asm
	lop3.b32 %r3935, %r3936, %r3942, %r3938, 150;
	// end inline asm
	xor.b32  	%r4578, %r4469, %r4453;
	xor.b32  	%r4579, %r4578, %r4517;
	xor.b32  	%r4580, %r4579, %r4557;
	shf.l.wrap.b32 	%r4581, %r4580, %r4580, 1;
	add.s32 	%r4582, %r3935, %r4581;
	add.s32 	%r4583, %r4582, %r3934;
	add.s32 	%r4584, %r4583, %r4577;
	add.s32 	%r3944, %r4584, -899497514;
	shf.l.wrap.b32 	%r3946, %r3936, %r3936, 30;
	shf.l.wrap.b32 	%r4585, %r3944, %r3944, 5;
	// begin inline asm
	lop3.b32 %r3939, %r3940, %r3946, %r3942, 150;
	// end inline asm
	xor.b32  	%r4586, %r4477, %r4461;
	xor.b32  	%r4587, %r4586, %r4525;
	xor.b32  	%r4588, %r4587, %r4565;
	shf.l.wrap.b32 	%r4589, %r4588, %r4588, 1;
	add.s32 	%r4590, %r3939, %r4589;
	add.s32 	%r4591, %r4590, %r3938;
	add.s32 	%r4592, %r4591, %r4585;
	add.s32 	%r3948, %r4592, -899497514;
	shf.l.wrap.b32 	%r3950, %r3940, %r3940, 30;
	shf.l.wrap.b32 	%r4593, %r3948, %r3948, 5;
	// begin inline asm
	lop3.b32 %r3943, %r3944, %r3950, %r3946, 150;
	// end inline asm
	xor.b32  	%r4594, %r4485, %r4469;
	xor.b32  	%r4595, %r4594, %r4533;
	xor.b32  	%r4596, %r4595, %r4573;
	shf.l.wrap.b32 	%r4597, %r4596, %r4596, 1;
	add.s32 	%r4598, %r3943, %r4597;
	add.s32 	%r4599, %r4598, %r3942;
	add.s32 	%r4600, %r4599, %r4593;
	add.s32 	%r3952, %r4600, -899497514;
	shf.l.wrap.b32 	%r3954, %r3944, %r3944, 30;
	shf.l.wrap.b32 	%r4601, %r3952, %r3952, 5;
	// begin inline asm
	lop3.b32 %r3947, %r3948, %r3954, %r3950, 150;
	// end inline asm
	xor.b32  	%r4602, %r4493, %r4477;
	xor.b32  	%r4603, %r4602, %r4541;
	xor.b32  	%r4604, %r4603, %r4581;
	shf.l.wrap.b32 	%r4605, %r4604, %r4604, 1;
	add.s32 	%r4606, %r3947, %r4605;
	add.s32 	%r4607, %r4606, %r3946;
	add.s32 	%r4608, %r4607, %r4601;
	add.s32 	%r3956, %r4608, -899497514;
	shf.l.wrap.b32 	%r3958, %r3948, %r3948, 30;
	shf.l.wrap.b32 	%r4609, %r3956, %r3956, 5;
	// begin inline asm
	lop3.b32 %r3951, %r3952, %r3958, %r3954, 150;
	// end inline asm
	xor.b32  	%r4610, %r4501, %r4485;
	xor.b32  	%r4611, %r4610, %r4549;
	xor.b32  	%r4612, %r4611, %r4589;
	shf.l.wrap.b32 	%r4613, %r4612, %r4612, 1;
	add.s32 	%r4614, %r3951, %r4613;
	add.s32 	%r4615, %r4614, %r3950;
	add.s32 	%r4616, %r4615, %r4609;
	add.s32 	%r3960, %r4616, -899497514;
	shf.l.wrap.b32 	%r3962, %r3952, %r3952, 30;
	shf.l.wrap.b32 	%r4617, %r3960, %r3960, 5;
	// begin inline asm
	lop3.b32 %r3955, %r3956, %r3962, %r3958, 150;
	// end inline asm
	xor.b32  	%r4618, %r4509, %r4493;
	xor.b32  	%r4619, %r4618, %r4557;
	xor.b32  	%r4620, %r4619, %r4597;
	shf.l.wrap.b32 	%r4621, %r4620, %r4620, 1;
	add.s32 	%r4622, %r3955, %r4621;
	add.s32 	%r4623, %r4622, %r3954;
	add.s32 	%r4624, %r4623, %r4617;
	add.s32 	%r3964, %r4624, -899497514;
	shf.l.wrap.b32 	%r3966, %r3956, %r3956, 30;
	shf.l.wrap.b32 	%r4625, %r3964, %r3964, 5;
	// begin inline asm
	lop3.b32 %r3959, %r3960, %r3966, %r3962, 150;
	// end inline asm
	xor.b32  	%r4626, %r4517, %r4501;
	xor.b32  	%r4627, %r4626, %r4565;
	xor.b32  	%r4628, %r4627, %r4605;
	shf.l.wrap.b32 	%r4629, %r4628, %r4628, 1;
	add.s32 	%r4630, %r3959, %r4629;
	add.s32 	%r4631, %r4630, %r3958;
	add.s32 	%r4632, %r4631, %r4625;
	add.s32 	%r3968, %r4632, -899497514;
	shf.l.wrap.b32 	%r3970, %r3960, %r3960, 30;
	shf.l.wrap.b32 	%r4633, %r3968, %r3968, 5;
	// begin inline asm
	lop3.b32 %r3963, %r3964, %r3970, %r3966, 150;
	// end inline asm
	xor.b32  	%r4634, %r4525, %r4509;
	xor.b32  	%r4635, %r4634, %r4573;
	xor.b32  	%r4636, %r4635, %r4613;
	shf.l.wrap.b32 	%r4637, %r4636, %r4636, 1;
	add.s32 	%r4638, %r3963, %r4637;
	add.s32 	%r4639, %r4638, %r3962;
	add.s32 	%r4640, %r4639, %r4633;
	add.s32 	%r3972, %r4640, -899497514;
	shf.l.wrap.b32 	%r3974, %r3964, %r3964, 30;
	shf.l.wrap.b32 	%r4641, %r3972, %r3972, 5;
	// begin inline asm
	lop3.b32 %r3967, %r3968, %r3974, %r3970, 150;
	// end inline asm
	xor.b32  	%r4642, %r4533, %r4517;
	xor.b32  	%r4643, %r4642, %r4581;
	xor.b32  	%r4644, %r4643, %r4621;
	shf.l.wrap.b32 	%r4645, %r4644, %r4644, 1;
	add.s32 	%r4646, %r3967, %r4645;
	add.s32 	%r4647, %r4646, %r3966;
	add.s32 	%r4648, %r4647, %r4641;
	add.s32 	%r3976, %r4648, -899497514;
	shf.l.wrap.b32 	%r3978, %r3968, %r3968, 30;
	shf.l.wrap.b32 	%r4649, %r3976, %r3976, 5;
	// begin inline asm
	lop3.b32 %r3971, %r3972, %r3978, %r3974, 150;
	// end inline asm
	xor.b32  	%r4650, %r4541, %r4525;
	xor.b32  	%r4651, %r4650, %r4589;
	xor.b32  	%r4652, %r4651, %r4629;
	shf.l.wrap.b32 	%r4653, %r4652, %r4652, 1;
	add.s32 	%r4654, %r3971, %r4653;
	add.s32 	%r4655, %r4654, %r3970;
	add.s32 	%r4656, %r4655, %r4649;
	add.s32 	%r3980, %r4656, -899497514;
	shf.l.wrap.b32 	%r3982, %r3972, %r3972, 30;
	shf.l.wrap.b32 	%r4657, %r3980, %r3980, 5;
	// begin inline asm
	lop3.b32 %r3975, %r3976, %r3982, %r3978, 150;
	// end inline asm
	xor.b32  	%r4658, %r4549, %r4533;
	xor.b32  	%r4659, %r4658, %r4597;
	xor.b32  	%r4660, %r4659, %r4637;
	shf.l.wrap.b32 	%r4661, %r4660, %r4660, 1;
	add.s32 	%r4662, %r3975, %r4661;
	add.s32 	%r4663, %r4662, %r3974;
	add.s32 	%r4664, %r4663, %r4657;
	add.s32 	%r4665, %r4664, -899497514;
	shf.l.wrap.b32 	%r3981, %r3976, %r3976, 30;
	shf.l.wrap.b32 	%r4666, %r4665, %r4665, 5;
	// begin inline asm
	lop3.b32 %r3979, %r3980, %r3981, %r3982, 150;
	// end inline asm
	xor.b32  	%r4667, %r4557, %r4541;
	xor.b32  	%r4668, %r4667, %r4605;
	xor.b32  	%r4669, %r4668, %r4645;
	shf.l.wrap.b32 	%r4670, %r4669, %r4669, 1;
	shf.l.wrap.b32 	%r4671, %r3980, %r3980, 30;
	add.s32 	%r4672, %r3979, %r3668;
	add.s32 	%r4673, %r4672, %r4670;
	add.s32 	%r4674, %r4673, %r3978;
	add.s32 	%r4675, %r4674, %r4666;
	add.s32 	%r4676, %r4675, -899497514;
	st.local.u32 	[%rd31+4], %r4676;
	add.s32 	%r4677, %r4665, %r3664;
	st.local.u32 	[%rd31+8], %r4677;
	add.s32 	%r4678, %r4671, %r3665;
	st.local.u32 	[%rd31+12], %r4678;
	add.s32 	%r4679, %r3981, %r3666;
	st.local.u32 	[%rd31+16], %r4679;
	add.s32 	%r4680, %r3982, %r4098;
	st.local.u32 	[%rd31+20], %r4680;
	add.u64 	%rd202, %SP, 16;
	add.u64 	%rd203, %SPL, 16;
	cvt.u64.u32 	%rd204, %r165;
	add.s64 	%rd282, %rd203, %rd204;
	add.s64 	%rd280, %rd202, %rd204;
	sub.s32 	%r8125, %r8125, %r165;
	mov.u32 	%r8106, 0;

$L__BB4_56:
	setp.lt.u32 	%p48, %r8125, 64;
	@%p48 bra 	$L__BB4_61;

$L__BB4_57:
	and.b64  	%rd205, %rd280, 3;
	setp.eq.s64 	%p49, %rd205, 0;
	@%p49 bra 	$L__BB4_59;

	ld.local.u8 	%r4681, [%rd282];
	shl.b32 	%r4682, %r4681, 24;
	ld.local.u8 	%r4683, [%rd282+1];
	shl.b32 	%r4684, %r4683, 16;
	or.b32  	%r4685, %r4684, %r4682;
	ld.local.u8 	%rs136, [%rd282+2];
	mul.wide.u16 	%r4686, %rs136, 256;
	or.b32  	%r4687, %r4685, %r4686;
	ld.local.u8 	%r4688, [%rd282+3];
	or.b32  	%r8124, %r4687, %r4688;
	ld.local.u8 	%r4689, [%rd282+4];
	shl.b32 	%r4690, %r4689, 24;
	ld.local.u8 	%r4691, [%rd282+5];
	shl.b32 	%r4692, %r4691, 16;
	or.b32  	%r4693, %r4692, %r4690;
	ld.local.u8 	%rs137, [%rd282+6];
	mul.wide.u16 	%r4694, %rs137, 256;
	or.b32  	%r4695, %r4693, %r4694;
	ld.local.u8 	%r4696, [%rd282+7];
	or.b32  	%r8123, %r4695, %r4696;
	ld.local.u8 	%r4697, [%rd282+8];
	shl.b32 	%r4698, %r4697, 24;
	ld.local.u8 	%r4699, [%rd282+9];
	shl.b32 	%r4700, %r4699, 16;
	or.b32  	%r4701, %r4700, %r4698;
	ld.local.u8 	%rs138, [%rd282+10];
	mul.wide.u16 	%r4702, %rs138, 256;
	or.b32  	%r4703, %r4701, %r4702;
	ld.local.u8 	%r4704, [%rd282+11];
	or.b32  	%r8122, %r4703, %r4704;
	ld.local.u8 	%r4705, [%rd282+12];
	shl.b32 	%r4706, %r4705, 24;
	ld.local.u8 	%r4707, [%rd282+13];
	shl.b32 	%r4708, %r4707, 16;
	or.b32  	%r4709, %r4708, %r4706;
	ld.local.u8 	%rs139, [%rd282+14];
	mul.wide.u16 	%r4710, %rs139, 256;
	or.b32  	%r4711, %r4709, %r4710;
	ld.local.u8 	%r4712, [%rd282+15];
	or.b32  	%r8121, %r4711, %r4712;
	ld.local.u8 	%r4713, [%rd282+16];
	shl.b32 	%r4714, %r4713, 24;
	ld.local.u8 	%r4715, [%rd282+17];
	shl.b32 	%r4716, %r4715, 16;
	or.b32  	%r4717, %r4716, %r4714;
	ld.local.u8 	%rs140, [%rd282+18];
	mul.wide.u16 	%r4718, %rs140, 256;
	or.b32  	%r4719, %r4717, %r4718;
	ld.local.u8 	%r4720, [%rd282+19];
	or.b32  	%r8120, %r4719, %r4720;
	ld.local.u8 	%r4721, [%rd282+20];
	shl.b32 	%r4722, %r4721, 24;
	ld.local.u8 	%r4723, [%rd282+21];
	shl.b32 	%r4724, %r4723, 16;
	or.b32  	%r4725, %r4724, %r4722;
	ld.local.u8 	%rs141, [%rd282+22];
	mul.wide.u16 	%r4726, %rs141, 256;
	or.b32  	%r4727, %r4725, %r4726;
	ld.local.u8 	%r4728, [%rd282+23];
	or.b32  	%r8119, %r4727, %r4728;
	ld.local.u8 	%r4729, [%rd282+24];
	shl.b32 	%r4730, %r4729, 24;
	ld.local.u8 	%r4731, [%rd282+25];
	shl.b32 	%r4732, %r4731, 16;
	or.b32  	%r4733, %r4732, %r4730;
	ld.local.u8 	%rs142, [%rd282+26];
	mul.wide.u16 	%r4734, %rs142, 256;
	or.b32  	%r4735, %r4733, %r4734;
	ld.local.u8 	%r4736, [%rd282+27];
	or.b32  	%r8118, %r4735, %r4736;
	ld.local.u8 	%r4737, [%rd282+28];
	shl.b32 	%r4738, %r4737, 24;
	ld.local.u8 	%r4739, [%rd282+29];
	shl.b32 	%r4740, %r4739, 16;
	or.b32  	%r4741, %r4740, %r4738;
	ld.local.u8 	%rs143, [%rd282+30];
	mul.wide.u16 	%r4742, %rs143, 256;
	or.b32  	%r4743, %r4741, %r4742;
	ld.local.u8 	%r4744, [%rd282+31];
	or.b32  	%r8117, %r4743, %r4744;
	ld.local.u8 	%r4745, [%rd282+32];
	shl.b32 	%r4746, %r4745, 24;
	ld.local.u8 	%r4747, [%rd282+33];
	shl.b32 	%r4748, %r4747, 16;
	or.b32  	%r4749, %r4748, %r4746;
	ld.local.u8 	%rs144, [%rd282+34];
	mul.wide.u16 	%r4750, %rs144, 256;
	or.b32  	%r4751, %r4749, %r4750;
	ld.local.u8 	%r4752, [%rd282+35];
	or.b32  	%r8116, %r4751, %r4752;
	ld.local.u8 	%r4753, [%rd282+36];
	shl.b32 	%r4754, %r4753, 24;
	ld.local.u8 	%r4755, [%rd282+37];
	shl.b32 	%r4756, %r4755, 16;
	or.b32  	%r4757, %r4756, %r4754;
	ld.local.u8 	%rs145, [%rd282+38];
	mul.wide.u16 	%r4758, %rs145, 256;
	or.b32  	%r4759, %r4757, %r4758;
	ld.local.u8 	%r4760, [%rd282+39];
	or.b32  	%r8115, %r4759, %r4760;
	ld.local.u8 	%r4761, [%rd282+40];
	shl.b32 	%r4762, %r4761, 24;
	ld.local.u8 	%r4763, [%rd282+41];
	shl.b32 	%r4764, %r4763, 16;
	or.b32  	%r4765, %r4764, %r4762;
	ld.local.u8 	%rs146, [%rd282+42];
	mul.wide.u16 	%r4766, %rs146, 256;
	or.b32  	%r4767, %r4765, %r4766;
	ld.local.u8 	%r4768, [%rd282+43];
	or.b32  	%r8114, %r4767, %r4768;
	ld.local.u8 	%r4769, [%rd282+44];
	shl.b32 	%r4770, %r4769, 24;
	ld.local.u8 	%r4771, [%rd282+45];
	shl.b32 	%r4772, %r4771, 16;
	or.b32  	%r4773, %r4772, %r4770;
	ld.local.u8 	%rs147, [%rd282+46];
	mul.wide.u16 	%r4774, %rs147, 256;
	or.b32  	%r4775, %r4773, %r4774;
	ld.local.u8 	%r4776, [%rd282+47];
	or.b32  	%r8113, %r4775, %r4776;
	ld.local.u8 	%r4777, [%rd282+48];
	shl.b32 	%r4778, %r4777, 24;
	ld.local.u8 	%r4779, [%rd282+49];
	shl.b32 	%r4780, %r4779, 16;
	or.b32  	%r4781, %r4780, %r4778;
	ld.local.u8 	%rs148, [%rd282+50];
	mul.wide.u16 	%r4782, %rs148, 256;
	or.b32  	%r4783, %r4781, %r4782;
	ld.local.u8 	%r4784, [%rd282+51];
	or.b32  	%r8112, %r4783, %r4784;
	ld.local.u8 	%r4785, [%rd282+52];
	shl.b32 	%r4786, %r4785, 24;
	ld.local.u8 	%r4787, [%rd282+53];
	shl.b32 	%r4788, %r4787, 16;
	or.b32  	%r4789, %r4788, %r4786;
	ld.local.u8 	%rs149, [%rd282+54];
	mul.wide.u16 	%r4790, %rs149, 256;
	or.b32  	%r4791, %r4789, %r4790;
	ld.local.u8 	%r4792, [%rd282+55];
	or.b32  	%r8111, %r4791, %r4792;
	ld.local.u8 	%r4793, [%rd282+56];
	shl.b32 	%r4794, %r4793, 24;
	ld.local.u8 	%r4795, [%rd282+57];
	shl.b32 	%r4796, %r4795, 16;
	or.b32  	%r4797, %r4796, %r4794;
	ld.local.u8 	%rs150, [%rd282+58];
	mul.wide.u16 	%r4798, %rs150, 256;
	or.b32  	%r4799, %r4797, %r4798;
	ld.local.u8 	%r4800, [%rd282+59];
	or.b32  	%r8110, %r4799, %r4800;
	ld.local.u8 	%r4801, [%rd282+60];
	shl.b32 	%r4802, %r4801, 24;
	ld.local.u8 	%r4803, [%rd282+61];
	shl.b32 	%r4804, %r4803, 16;
	or.b32  	%r4805, %r4804, %r4802;
	ld.local.u8 	%rs151, [%rd282+62];
	mul.wide.u16 	%r4806, %rs151, 256;
	or.b32  	%r4807, %r4805, %r4806;
	ld.local.u8 	%r4808, [%rd282+63];
	or.b32  	%r8109, %r4807, %r4808;
	bra.uni 	$L__BB4_60;

$L__BB4_59:
	ld.local.u32 	%r4809, [%rd282];
	shf.l.wrap.b32 	%r4810, %r4809, %r4809, 16;
	shl.b32 	%r4811, %r4810, 8;
	and.b32  	%r4812, %r4811, -16711936;
	shr.u32 	%r4813, %r4810, 8;
	and.b32  	%r4814, %r4813, 16711935;
	or.b32  	%r8124, %r4812, %r4814;
	ld.local.u32 	%r4815, [%rd282+4];
	shf.l.wrap.b32 	%r4816, %r4815, %r4815, 16;
	shl.b32 	%r4817, %r4816, 8;
	and.b32  	%r4818, %r4817, -16711936;
	shr.u32 	%r4819, %r4816, 8;
	and.b32  	%r4820, %r4819, 16711935;
	or.b32  	%r8123, %r4818, %r4820;
	ld.local.u32 	%r4821, [%rd282+8];
	shf.l.wrap.b32 	%r4822, %r4821, %r4821, 16;
	shl.b32 	%r4823, %r4822, 8;
	and.b32  	%r4824, %r4823, -16711936;
	shr.u32 	%r4825, %r4822, 8;
	and.b32  	%r4826, %r4825, 16711935;
	or.b32  	%r8122, %r4824, %r4826;
	ld.local.u32 	%r4827, [%rd282+12];
	shf.l.wrap.b32 	%r4828, %r4827, %r4827, 16;
	shl.b32 	%r4829, %r4828, 8;
	and.b32  	%r4830, %r4829, -16711936;
	shr.u32 	%r4831, %r4828, 8;
	and.b32  	%r4832, %r4831, 16711935;
	or.b32  	%r8121, %r4830, %r4832;
	ld.local.u32 	%r4833, [%rd282+16];
	shf.l.wrap.b32 	%r4834, %r4833, %r4833, 16;
	shl.b32 	%r4835, %r4834, 8;
	and.b32  	%r4836, %r4835, -16711936;
	shr.u32 	%r4837, %r4834, 8;
	and.b32  	%r4838, %r4837, 16711935;
	or.b32  	%r8120, %r4836, %r4838;
	ld.local.u32 	%r4839, [%rd282+20];
	shf.l.wrap.b32 	%r4840, %r4839, %r4839, 16;
	shl.b32 	%r4841, %r4840, 8;
	and.b32  	%r4842, %r4841, -16711936;
	shr.u32 	%r4843, %r4840, 8;
	and.b32  	%r4844, %r4843, 16711935;
	or.b32  	%r8119, %r4842, %r4844;
	ld.local.u32 	%r4845, [%rd282+24];
	shf.l.wrap.b32 	%r4846, %r4845, %r4845, 16;
	shl.b32 	%r4847, %r4846, 8;
	and.b32  	%r4848, %r4847, -16711936;
	shr.u32 	%r4849, %r4846, 8;
	and.b32  	%r4850, %r4849, 16711935;
	or.b32  	%r8118, %r4848, %r4850;
	ld.local.u32 	%r4851, [%rd282+28];
	shf.l.wrap.b32 	%r4852, %r4851, %r4851, 16;
	shl.b32 	%r4853, %r4852, 8;
	and.b32  	%r4854, %r4853, -16711936;
	shr.u32 	%r4855, %r4852, 8;
	and.b32  	%r4856, %r4855, 16711935;
	or.b32  	%r8117, %r4854, %r4856;
	ld.local.u32 	%r4857, [%rd282+32];
	shf.l.wrap.b32 	%r4858, %r4857, %r4857, 16;
	shl.b32 	%r4859, %r4858, 8;
	and.b32  	%r4860, %r4859, -16711936;
	shr.u32 	%r4861, %r4858, 8;
	and.b32  	%r4862, %r4861, 16711935;
	or.b32  	%r8116, %r4860, %r4862;
	ld.local.u32 	%r4863, [%rd282+36];
	shf.l.wrap.b32 	%r4864, %r4863, %r4863, 16;
	shl.b32 	%r4865, %r4864, 8;
	and.b32  	%r4866, %r4865, -16711936;
	shr.u32 	%r4867, %r4864, 8;
	and.b32  	%r4868, %r4867, 16711935;
	or.b32  	%r8115, %r4866, %r4868;
	ld.local.u32 	%r4869, [%rd282+40];
	shf.l.wrap.b32 	%r4870, %r4869, %r4869, 16;
	shl.b32 	%r4871, %r4870, 8;
	and.b32  	%r4872, %r4871, -16711936;
	shr.u32 	%r4873, %r4870, 8;
	and.b32  	%r4874, %r4873, 16711935;
	or.b32  	%r8114, %r4872, %r4874;
	ld.local.u32 	%r4875, [%rd282+44];
	shf.l.wrap.b32 	%r4876, %r4875, %r4875, 16;
	shl.b32 	%r4877, %r4876, 8;
	and.b32  	%r4878, %r4877, -16711936;
	shr.u32 	%r4879, %r4876, 8;
	and.b32  	%r4880, %r4879, 16711935;
	or.b32  	%r8113, %r4878, %r4880;
	ld.local.u32 	%r4881, [%rd282+48];
	shf.l.wrap.b32 	%r4882, %r4881, %r4881, 16;
	shl.b32 	%r4883, %r4882, 8;
	and.b32  	%r4884, %r4883, -16711936;
	shr.u32 	%r4885, %r4882, 8;
	and.b32  	%r4886, %r4885, 16711935;
	or.b32  	%r8112, %r4884, %r4886;
	ld.local.u32 	%r4887, [%rd282+52];
	shf.l.wrap.b32 	%r4888, %r4887, %r4887, 16;
	shl.b32 	%r4889, %r4888, 8;
	and.b32  	%r4890, %r4889, -16711936;
	shr.u32 	%r4891, %r4888, 8;
	and.b32  	%r4892, %r4891, 16711935;
	or.b32  	%r8111, %r4890, %r4892;
	ld.local.u32 	%r4893, [%rd282+56];
	shf.l.wrap.b32 	%r4894, %r4893, %r4893, 16;
	shl.b32 	%r4895, %r4894, 8;
	and.b32  	%r4896, %r4895, -16711936;
	shr.u32 	%r4897, %r4894, 8;
	and.b32  	%r4898, %r4897, 16711935;
	or.b32  	%r8110, %r4896, %r4898;
	ld.local.u32 	%r4899, [%rd282+60];
	shf.l.wrap.b32 	%r4900, %r4899, %r4899, 16;
	shl.b32 	%r4901, %r4900, 8;
	and.b32  	%r4902, %r4901, -16711936;
	shr.u32 	%r4903, %r4900, 8;
	and.b32  	%r4904, %r4903, 16711935;
	or.b32  	%r8109, %r4902, %r4904;

$L__BB4_60:
	ld.local.u32 	%r4910, [%rd31+4];
	shf.l.wrap.b32 	%r5225, %r4910, %r4910, 5;
	ld.local.u32 	%r4908, [%rd31+16];
	ld.local.u32 	%r4907, [%rd31+12];
	ld.local.u32 	%r4906, [%rd31+8];
	// begin inline asm
	lop3.b32 %r4905, %r4906, %r4907, %r4908, 202;
	// end inline asm
	add.s32 	%r5226, %r8124, %r5225;
	ld.local.u32 	%r5227, [%rd31+20];
	add.s32 	%r5228, %r5226, %r5227;
	add.s32 	%r5229, %r5228, %r4905;
	add.s32 	%r4914, %r5229, 1518500249;
	shf.l.wrap.b32 	%r4916, %r4906, %r4906, 30;
	shf.l.wrap.b32 	%r5230, %r4914, %r4914, 5;
	// begin inline asm
	lop3.b32 %r4909, %r4910, %r4916, %r4907, 202;
	// end inline asm
	add.s32 	%r5231, %r8123, %r4908;
	add.s32 	%r5232, %r5231, %r4909;
	add.s32 	%r5233, %r5232, %r5230;
	add.s32 	%r4918, %r5233, 1518500249;
	shf.l.wrap.b32 	%r4920, %r4910, %r4910, 30;
	shf.l.wrap.b32 	%r5234, %r4918, %r4918, 5;
	// begin inline asm
	lop3.b32 %r4913, %r4914, %r4920, %r4916, 202;
	// end inline asm
	add.s32 	%r5235, %r8122, %r4907;
	add.s32 	%r5236, %r5235, %r4913;
	add.s32 	%r5237, %r5236, %r5234;
	add.s32 	%r4922, %r5237, 1518500249;
	shf.l.wrap.b32 	%r4924, %r4914, %r4914, 30;
	shf.l.wrap.b32 	%r5238, %r4922, %r4922, 5;
	// begin inline asm
	lop3.b32 %r4917, %r4918, %r4924, %r4920, 202;
	// end inline asm
	add.s32 	%r5239, %r8121, %r4916;
	add.s32 	%r5240, %r5239, %r4917;
	add.s32 	%r5241, %r5240, %r5238;
	add.s32 	%r4926, %r5241, 1518500249;
	shf.l.wrap.b32 	%r4928, %r4918, %r4918, 30;
	shf.l.wrap.b32 	%r5242, %r4926, %r4926, 5;
	// begin inline asm
	lop3.b32 %r4921, %r4922, %r4928, %r4924, 202;
	// end inline asm
	add.s32 	%r5243, %r8120, %r4920;
	add.s32 	%r5244, %r5243, %r4921;
	add.s32 	%r5245, %r5244, %r5242;
	add.s32 	%r4930, %r5245, 1518500249;
	shf.l.wrap.b32 	%r4932, %r4922, %r4922, 30;
	shf.l.wrap.b32 	%r5246, %r4930, %r4930, 5;
	// begin inline asm
	lop3.b32 %r4925, %r4926, %r4932, %r4928, 202;
	// end inline asm
	add.s32 	%r5247, %r8119, %r4925;
	add.s32 	%r5248, %r5247, %r4924;
	add.s32 	%r5249, %r5248, %r5246;
	add.s32 	%r4934, %r5249, 1518500249;
	shf.l.wrap.b32 	%r4936, %r4926, %r4926, 30;
	shf.l.wrap.b32 	%r5250, %r4934, %r4934, 5;
	// begin inline asm
	lop3.b32 %r4929, %r4930, %r4936, %r4932, 202;
	// end inline asm
	add.s32 	%r5251, %r8118, %r4929;
	add.s32 	%r5252, %r5251, %r4928;
	add.s32 	%r5253, %r5252, %r5250;
	add.s32 	%r4938, %r5253, 1518500249;
	shf.l.wrap.b32 	%r4940, %r4930, %r4930, 30;
	shf.l.wrap.b32 	%r5254, %r4938, %r4938, 5;
	// begin inline asm
	lop3.b32 %r4933, %r4934, %r4940, %r4936, 202;
	// end inline asm
	add.s32 	%r5255, %r8117, %r4933;
	add.s32 	%r5256, %r5255, %r4932;
	add.s32 	%r5257, %r5256, %r5254;
	add.s32 	%r4942, %r5257, 1518500249;
	shf.l.wrap.b32 	%r4944, %r4934, %r4934, 30;
	shf.l.wrap.b32 	%r5258, %r4942, %r4942, 5;
	// begin inline asm
	lop3.b32 %r4937, %r4938, %r4944, %r4940, 202;
	// end inline asm
	add.s32 	%r5259, %r8116, %r4937;
	add.s32 	%r5260, %r5259, %r4936;
	add.s32 	%r5261, %r5260, %r5258;
	add.s32 	%r4946, %r5261, 1518500249;
	shf.l.wrap.b32 	%r4948, %r4938, %r4938, 30;
	shf.l.wrap.b32 	%r5262, %r4946, %r4946, 5;
	// begin inline asm
	lop3.b32 %r4941, %r4942, %r4948, %r4944, 202;
	// end inline asm
	add.s32 	%r5263, %r8115, %r4941;
	add.s32 	%r5264, %r5263, %r4940;
	add.s32 	%r5265, %r5264, %r5262;
	add.s32 	%r4950, %r5265, 1518500249;
	shf.l.wrap.b32 	%r4952, %r4942, %r4942, 30;
	shf.l.wrap.b32 	%r5266, %r4950, %r4950, 5;
	// begin inline asm
	lop3.b32 %r4945, %r4946, %r4952, %r4948, 202;
	// end inline asm
	add.s32 	%r5267, %r8114, %r4945;
	add.s32 	%r5268, %r5267, %r4944;
	add.s32 	%r5269, %r5268, %r5266;
	add.s32 	%r4954, %r5269, 1518500249;
	shf.l.wrap.b32 	%r4956, %r4946, %r4946, 30;
	shf.l.wrap.b32 	%r5270, %r4954, %r4954, 5;
	// begin inline asm
	lop3.b32 %r4949, %r4950, %r4956, %r4952, 202;
	// end inline asm
	add.s32 	%r5271, %r8113, %r4949;
	add.s32 	%r5272, %r5271, %r4948;
	add.s32 	%r5273, %r5272, %r5270;
	add.s32 	%r4958, %r5273, 1518500249;
	shf.l.wrap.b32 	%r4960, %r4950, %r4950, 30;
	shf.l.wrap.b32 	%r5274, %r4958, %r4958, 5;
	// begin inline asm
	lop3.b32 %r4953, %r4954, %r4960, %r4956, 202;
	// end inline asm
	add.s32 	%r5275, %r8112, %r4953;
	add.s32 	%r5276, %r5275, %r4952;
	add.s32 	%r5277, %r5276, %r5274;
	add.s32 	%r4962, %r5277, 1518500249;
	shf.l.wrap.b32 	%r4964, %r4954, %r4954, 30;
	shf.l.wrap.b32 	%r5278, %r4962, %r4962, 5;
	// begin inline asm
	lop3.b32 %r4957, %r4958, %r4964, %r4960, 202;
	// end inline asm
	add.s32 	%r5279, %r8111, %r4957;
	add.s32 	%r5280, %r5279, %r4956;
	add.s32 	%r5281, %r5280, %r5278;
	add.s32 	%r4966, %r5281, 1518500249;
	shf.l.wrap.b32 	%r4968, %r4958, %r4958, 30;
	shf.l.wrap.b32 	%r5282, %r4966, %r4966, 5;
	// begin inline asm
	lop3.b32 %r4961, %r4962, %r4968, %r4964, 202;
	// end inline asm
	add.s32 	%r5283, %r8110, %r4961;
	add.s32 	%r5284, %r5283, %r4960;
	add.s32 	%r5285, %r5284, %r5282;
	add.s32 	%r4970, %r5285, 1518500249;
	shf.l.wrap.b32 	%r4972, %r4962, %r4962, 30;
	shf.l.wrap.b32 	%r5286, %r4970, %r4970, 5;
	// begin inline asm
	lop3.b32 %r4965, %r4966, %r4972, %r4968, 202;
	// end inline asm
	add.s32 	%r5287, %r8109, %r4965;
	add.s32 	%r5288, %r5287, %r4964;
	add.s32 	%r5289, %r5288, %r5286;
	add.s32 	%r4974, %r5289, 1518500249;
	shf.l.wrap.b32 	%r4976, %r4966, %r4966, 30;
	shf.l.wrap.b32 	%r5290, %r4974, %r4974, 5;
	// begin inline asm
	lop3.b32 %r4969, %r4970, %r4976, %r4972, 202;
	// end inline asm
	xor.b32  	%r5291, %r8116, %r8111;
	xor.b32  	%r5292, %r5291, %r8122;
	xor.b32  	%r5293, %r5292, %r8124;
	shf.l.wrap.b32 	%r5294, %r5293, %r5293, 1;
	add.s32 	%r5295, %r5294, %r4969;
	add.s32 	%r5296, %r5295, %r4968;
	add.s32 	%r5297, %r5296, %r5290;
	add.s32 	%r4978, %r5297, 1518500249;
	shf.l.wrap.b32 	%r4980, %r4970, %r4970, 30;
	shf.l.wrap.b32 	%r5298, %r4978, %r4978, 5;
	// begin inline asm
	lop3.b32 %r4973, %r4974, %r4980, %r4976, 202;
	// end inline asm
	xor.b32  	%r5299, %r8115, %r8110;
	xor.b32  	%r5300, %r5299, %r8121;
	xor.b32  	%r5301, %r5300, %r8123;
	shf.l.wrap.b32 	%r5302, %r5301, %r5301, 1;
	add.s32 	%r5303, %r5302, %r4973;
	add.s32 	%r5304, %r5303, %r4972;
	add.s32 	%r5305, %r5304, %r5298;
	add.s32 	%r4982, %r5305, 1518500249;
	shf.l.wrap.b32 	%r4984, %r4974, %r4974, 30;
	shf.l.wrap.b32 	%r5306, %r4982, %r4982, 5;
	// begin inline asm
	lop3.b32 %r4977, %r4978, %r4984, %r4980, 202;
	// end inline asm
	xor.b32  	%r5307, %r8114, %r8109;
	xor.b32  	%r5308, %r5307, %r8120;
	xor.b32  	%r5309, %r5308, %r8122;
	shf.l.wrap.b32 	%r5310, %r5309, %r5309, 1;
	add.s32 	%r5311, %r5310, %r4977;
	add.s32 	%r5312, %r5311, %r4976;
	add.s32 	%r5313, %r5312, %r5306;
	add.s32 	%r4986, %r5313, 1518500249;
	shf.l.wrap.b32 	%r4988, %r4978, %r4978, 30;
	shf.l.wrap.b32 	%r5314, %r4986, %r4986, 5;
	// begin inline asm
	lop3.b32 %r4981, %r4982, %r4988, %r4984, 202;
	// end inline asm
	xor.b32  	%r5315, %r8119, %r8113;
	xor.b32  	%r5316, %r5315, %r8121;
	xor.b32  	%r5317, %r5316, %r5294;
	shf.l.wrap.b32 	%r5318, %r5317, %r5317, 1;
	add.s32 	%r5319, %r5318, %r4981;
	add.s32 	%r5320, %r5319, %r4980;
	add.s32 	%r5321, %r5320, %r5314;
	add.s32 	%r4990, %r5321, 1518500249;
	shf.l.wrap.b32 	%r4992, %r4982, %r4982, 30;
	shf.l.wrap.b32 	%r5322, %r4990, %r4990, 5;
	// begin inline asm
	lop3.b32 %r4985, %r4986, %r4992, %r4988, 150;
	// end inline asm
	xor.b32  	%r5323, %r8118, %r8112;
	xor.b32  	%r5324, %r5323, %r8120;
	xor.b32  	%r5325, %r5324, %r5302;
	shf.l.wrap.b32 	%r5326, %r5325, %r5325, 1;
	add.s32 	%r5327, %r5326, %r4985;
	add.s32 	%r5328, %r5327, %r4984;
	add.s32 	%r5329, %r5328, %r5322;
	add.s32 	%r4994, %r5329, 1859775393;
	shf.l.wrap.b32 	%r4996, %r4986, %r4986, 30;
	shf.l.wrap.b32 	%r5330, %r4994, %r4994, 5;
	// begin inline asm
	lop3.b32 %r4989, %r4990, %r4996, %r4992, 150;
	// end inline asm
	xor.b32  	%r5331, %r8117, %r8111;
	xor.b32  	%r5332, %r5331, %r8119;
	xor.b32  	%r5333, %r5332, %r5310;
	shf.l.wrap.b32 	%r5334, %r5333, %r5333, 1;
	add.s32 	%r5335, %r5334, %r4989;
	add.s32 	%r5336, %r5335, %r4988;
	add.s32 	%r5337, %r5336, %r5330;
	add.s32 	%r4998, %r5337, 1859775393;
	shf.l.wrap.b32 	%r5000, %r4990, %r4990, 30;
	shf.l.wrap.b32 	%r5338, %r4998, %r4998, 5;
	// begin inline asm
	lop3.b32 %r4993, %r4994, %r5000, %r4996, 150;
	// end inline asm
	xor.b32  	%r5339, %r8116, %r8110;
	xor.b32  	%r5340, %r5339, %r8118;
	xor.b32  	%r5341, %r5340, %r5318;
	shf.l.wrap.b32 	%r5342, %r5341, %r5341, 1;
	add.s32 	%r5343, %r5342, %r4993;
	add.s32 	%r5344, %r5343, %r4992;
	add.s32 	%r5345, %r5344, %r5338;
	add.s32 	%r5002, %r5345, 1859775393;
	shf.l.wrap.b32 	%r5004, %r4994, %r4994, 30;
	shf.l.wrap.b32 	%r5346, %r5002, %r5002, 5;
	// begin inline asm
	lop3.b32 %r4997, %r4998, %r5004, %r5000, 150;
	// end inline asm
	xor.b32  	%r5347, %r8115, %r8109;
	xor.b32  	%r5348, %r5347, %r8117;
	xor.b32  	%r5349, %r5348, %r5326;
	shf.l.wrap.b32 	%r5350, %r5349, %r5349, 1;
	add.s32 	%r5351, %r5350, %r4997;
	add.s32 	%r5352, %r5351, %r4996;
	add.s32 	%r5353, %r5352, %r5346;
	add.s32 	%r5006, %r5353, 1859775393;
	shf.l.wrap.b32 	%r5008, %r4998, %r4998, 30;
	shf.l.wrap.b32 	%r5354, %r5006, %r5006, 5;
	// begin inline asm
	lop3.b32 %r5001, %r5002, %r5008, %r5004, 150;
	// end inline asm
	xor.b32  	%r5355, %r8116, %r8114;
	xor.b32  	%r5356, %r5355, %r5294;
	xor.b32  	%r5357, %r5356, %r5334;
	shf.l.wrap.b32 	%r5358, %r5357, %r5357, 1;
	add.s32 	%r5359, %r5358, %r5001;
	add.s32 	%r5360, %r5359, %r5000;
	add.s32 	%r5361, %r5360, %r5354;
	add.s32 	%r5010, %r5361, 1859775393;
	shf.l.wrap.b32 	%r5012, %r5002, %r5002, 30;
	shf.l.wrap.b32 	%r5362, %r5010, %r5010, 5;
	// begin inline asm
	lop3.b32 %r5005, %r5006, %r5012, %r5008, 150;
	// end inline asm
	xor.b32  	%r5363, %r8115, %r8113;
	xor.b32  	%r5364, %r5363, %r5302;
	xor.b32  	%r5365, %r5364, %r5342;
	shf.l.wrap.b32 	%r5366, %r5365, %r5365, 1;
	add.s32 	%r5367, %r5366, %r5005;
	add.s32 	%r5368, %r5367, %r5004;
	add.s32 	%r5369, %r5368, %r5362;
	add.s32 	%r5014, %r5369, 1859775393;
	shf.l.wrap.b32 	%r5016, %r5006, %r5006, 30;
	shf.l.wrap.b32 	%r5370, %r5014, %r5014, 5;
	// begin inline asm
	lop3.b32 %r5009, %r5010, %r5016, %r5012, 150;
	// end inline asm
	xor.b32  	%r5371, %r8114, %r8112;
	xor.b32  	%r5372, %r5371, %r5310;
	xor.b32  	%r5373, %r5372, %r5350;
	shf.l.wrap.b32 	%r5374, %r5373, %r5373, 1;
	add.s32 	%r5375, %r5374, %r5009;
	add.s32 	%r5376, %r5375, %r5008;
	add.s32 	%r5377, %r5376, %r5370;
	add.s32 	%r5018, %r5377, 1859775393;
	shf.l.wrap.b32 	%r5020, %r5010, %r5010, 30;
	shf.l.wrap.b32 	%r5378, %r5018, %r5018, 5;
	// begin inline asm
	lop3.b32 %r5013, %r5014, %r5020, %r5016, 150;
	// end inline asm
	xor.b32  	%r5379, %r8113, %r8111;
	xor.b32  	%r5380, %r5379, %r5318;
	xor.b32  	%r5381, %r5380, %r5358;
	shf.l.wrap.b32 	%r5382, %r5381, %r5381, 1;
	add.s32 	%r5383, %r5382, %r5013;
	add.s32 	%r5384, %r5383, %r5012;
	add.s32 	%r5385, %r5384, %r5378;
	add.s32 	%r5022, %r5385, 1859775393;
	shf.l.wrap.b32 	%r5024, %r5014, %r5014, 30;
	shf.l.wrap.b32 	%r5386, %r5022, %r5022, 5;
	// begin inline asm
	lop3.b32 %r5017, %r5018, %r5024, %r5020, 150;
	// end inline asm
	xor.b32  	%r5387, %r8112, %r8110;
	xor.b32  	%r5388, %r5387, %r5326;
	xor.b32  	%r5389, %r5388, %r5366;
	shf.l.wrap.b32 	%r5390, %r5389, %r5389, 1;
	add.s32 	%r5391, %r5390, %r5017;
	add.s32 	%r5392, %r5391, %r5016;
	add.s32 	%r5393, %r5392, %r5386;
	add.s32 	%r5026, %r5393, 1859775393;
	shf.l.wrap.b32 	%r5028, %r5018, %r5018, 30;
	shf.l.wrap.b32 	%r5394, %r5026, %r5026, 5;
	// begin inline asm
	lop3.b32 %r5021, %r5022, %r5028, %r5024, 150;
	// end inline asm
	xor.b32  	%r5395, %r8111, %r8109;
	xor.b32  	%r5396, %r5395, %r5334;
	xor.b32  	%r5397, %r5396, %r5374;
	shf.l.wrap.b32 	%r5398, %r5397, %r5397, 1;
	add.s32 	%r5399, %r5398, %r5021;
	add.s32 	%r5400, %r5399, %r5020;
	add.s32 	%r5401, %r5400, %r5394;
	add.s32 	%r5030, %r5401, 1859775393;
	shf.l.wrap.b32 	%r5032, %r5022, %r5022, 30;
	shf.l.wrap.b32 	%r5402, %r5030, %r5030, 5;
	// begin inline asm
	lop3.b32 %r5025, %r5026, %r5032, %r5028, 150;
	// end inline asm
	xor.b32  	%r5403, %r5294, %r8110;
	xor.b32  	%r5404, %r5403, %r5342;
	xor.b32  	%r5405, %r5404, %r5382;
	shf.l.wrap.b32 	%r5406, %r5405, %r5405, 1;
	add.s32 	%r5407, %r5406, %r5025;
	add.s32 	%r5408, %r5407, %r5024;
	add.s32 	%r5409, %r5408, %r5402;
	add.s32 	%r5034, %r5409, 1859775393;
	shf.l.wrap.b32 	%r5036, %r5026, %r5026, 30;
	shf.l.wrap.b32 	%r5410, %r5034, %r5034, 5;
	// begin inline asm
	lop3.b32 %r5029, %r5030, %r5036, %r5032, 150;
	// end inline asm
	xor.b32  	%r5411, %r5302, %r8109;
	xor.b32  	%r5412, %r5411, %r5350;
	xor.b32  	%r5413, %r5412, %r5390;
	shf.l.wrap.b32 	%r5414, %r5413, %r5413, 1;
	add.s32 	%r5415, %r5414, %r5029;
	add.s32 	%r5416, %r5415, %r5028;
	add.s32 	%r5417, %r5416, %r5410;
	add.s32 	%r5038, %r5417, 1859775393;
	shf.l.wrap.b32 	%r5040, %r5030, %r5030, 30;
	shf.l.wrap.b32 	%r5418, %r5038, %r5038, 5;
	// begin inline asm
	lop3.b32 %r5033, %r5034, %r5040, %r5036, 150;
	// end inline asm
	xor.b32  	%r5419, %r5294, %r5310;
	xor.b32  	%r5420, %r5419, %r5358;
	xor.b32  	%r5421, %r5420, %r5398;
	shf.l.wrap.b32 	%r5422, %r5421, %r5421, 1;
	add.s32 	%r5423, %r5422, %r5033;
	add.s32 	%r5424, %r5423, %r5032;
	add.s32 	%r5425, %r5424, %r5418;
	add.s32 	%r5042, %r5425, 1859775393;
	shf.l.wrap.b32 	%r5044, %r5034, %r5034, 30;
	shf.l.wrap.b32 	%r5426, %r5042, %r5042, 5;
	// begin inline asm
	lop3.b32 %r5037, %r5038, %r5044, %r5040, 150;
	// end inline asm
	xor.b32  	%r5427, %r5318, %r5302;
	xor.b32  	%r5428, %r5427, %r5366;
	xor.b32  	%r5429, %r5428, %r5406;
	shf.l.wrap.b32 	%r5430, %r5429, %r5429, 1;
	add.s32 	%r5431, %r5430, %r5037;
	add.s32 	%r5432, %r5431, %r5036;
	add.s32 	%r5433, %r5432, %r5426;
	add.s32 	%r5046, %r5433, 1859775393;
	shf.l.wrap.b32 	%r5048, %r5038, %r5038, 30;
	shf.l.wrap.b32 	%r5434, %r5046, %r5046, 5;
	// begin inline asm
	lop3.b32 %r5041, %r5042, %r5048, %r5044, 150;
	// end inline asm
	xor.b32  	%r5435, %r5326, %r5310;
	xor.b32  	%r5436, %r5435, %r5374;
	xor.b32  	%r5437, %r5436, %r5414;
	shf.l.wrap.b32 	%r5438, %r5437, %r5437, 1;
	add.s32 	%r5439, %r5438, %r5041;
	add.s32 	%r5440, %r5439, %r5040;
	add.s32 	%r5441, %r5440, %r5434;
	add.s32 	%r5050, %r5441, 1859775393;
	shf.l.wrap.b32 	%r5052, %r5042, %r5042, 30;
	shf.l.wrap.b32 	%r5442, %r5050, %r5050, 5;
	// begin inline asm
	lop3.b32 %r5045, %r5046, %r5052, %r5048, 150;
	// end inline asm
	xor.b32  	%r5443, %r5318, %r5334;
	xor.b32  	%r5444, %r5443, %r5382;
	xor.b32  	%r5445, %r5444, %r5422;
	shf.l.wrap.b32 	%r5446, %r5445, %r5445, 1;
	add.s32 	%r5447, %r5446, %r5045;
	add.s32 	%r5448, %r5447, %r5044;
	add.s32 	%r5449, %r5448, %r5442;
	add.s32 	%r5054, %r5449, 1859775393;
	shf.l.wrap.b32 	%r5056, %r5046, %r5046, 30;
	shf.l.wrap.b32 	%r5450, %r5054, %r5054, 5;
	// begin inline asm
	lop3.b32 %r5049, %r5050, %r5056, %r5052, 150;
	// end inline asm
	xor.b32  	%r5451, %r5342, %r5326;
	xor.b32  	%r5452, %r5451, %r5390;
	xor.b32  	%r5453, %r5452, %r5430;
	shf.l.wrap.b32 	%r5454, %r5453, %r5453, 1;
	add.s32 	%r5455, %r5454, %r5049;
	add.s32 	%r5456, %r5455, %r5048;
	add.s32 	%r5457, %r5456, %r5450;
	add.s32 	%r5058, %r5457, 1859775393;
	shf.l.wrap.b32 	%r5060, %r5050, %r5050, 30;
	shf.l.wrap.b32 	%r5458, %r5058, %r5058, 5;
	// begin inline asm
	lop3.b32 %r5053, %r5054, %r5060, %r5056, 150;
	// end inline asm
	xor.b32  	%r5459, %r5350, %r5334;
	xor.b32  	%r5460, %r5459, %r5398;
	xor.b32  	%r5461, %r5460, %r5438;
	shf.l.wrap.b32 	%r5462, %r5461, %r5461, 1;
	add.s32 	%r5463, %r5462, %r5053;
	add.s32 	%r5464, %r5463, %r5052;
	add.s32 	%r5465, %r5464, %r5458;
	add.s32 	%r5062, %r5465, 1859775393;
	shf.l.wrap.b32 	%r5064, %r5054, %r5054, 30;
	shf.l.wrap.b32 	%r5466, %r5062, %r5062, 5;
	// begin inline asm
	lop3.b32 %r5057, %r5058, %r5064, %r5060, 150;
	// end inline asm
	xor.b32  	%r5467, %r5342, %r5358;
	xor.b32  	%r5468, %r5467, %r5406;
	xor.b32  	%r5469, %r5468, %r5446;
	shf.l.wrap.b32 	%r5470, %r5469, %r5469, 1;
	add.s32 	%r5471, %r5470, %r5057;
	add.s32 	%r5472, %r5471, %r5056;
	add.s32 	%r5473, %r5472, %r5466;
	add.s32 	%r5066, %r5473, 1859775393;
	shf.l.wrap.b32 	%r5068, %r5058, %r5058, 30;
	shf.l.wrap.b32 	%r5474, %r5066, %r5066, 5;
	// begin inline asm
	lop3.b32 %r5061, %r5062, %r5068, %r5064, 150;
	// end inline asm
	xor.b32  	%r5475, %r5366, %r5350;
	xor.b32  	%r5476, %r5475, %r5414;
	xor.b32  	%r5477, %r5476, %r5454;
	shf.l.wrap.b32 	%r5478, %r5477, %r5477, 1;
	add.s32 	%r5479, %r5478, %r5061;
	add.s32 	%r5480, %r5479, %r5060;
	add.s32 	%r5481, %r5480, %r5474;
	add.s32 	%r5070, %r5481, 1859775393;
	shf.l.wrap.b32 	%r5072, %r5062, %r5062, 30;
	shf.l.wrap.b32 	%r5482, %r5070, %r5070, 5;
	// begin inline asm
	lop3.b32 %r5065, %r5066, %r5072, %r5068, 232;
	// end inline asm
	xor.b32  	%r5483, %r5374, %r5358;
	xor.b32  	%r5484, %r5483, %r5422;
	xor.b32  	%r5485, %r5484, %r5462;
	shf.l.wrap.b32 	%r5486, %r5485, %r5485, 1;
	add.s32 	%r5487, %r5486, %r5065;
	add.s32 	%r5488, %r5487, %r5064;
	add.s32 	%r5489, %r5488, %r5482;
	add.s32 	%r5074, %r5489, -1894007588;
	shf.l.wrap.b32 	%r5076, %r5066, %r5066, 30;
	shf.l.wrap.b32 	%r5490, %r5074, %r5074, 5;
	// begin inline asm
	lop3.b32 %r5069, %r5070, %r5076, %r5072, 232;
	// end inline asm
	xor.b32  	%r5491, %r5366, %r5382;
	xor.b32  	%r5492, %r5491, %r5430;
	xor.b32  	%r5493, %r5492, %r5470;
	shf.l.wrap.b32 	%r5494, %r5493, %r5493, 1;
	add.s32 	%r5495, %r5494, %r5069;
	add.s32 	%r5496, %r5495, %r5068;
	add.s32 	%r5497, %r5496, %r5490;
	add.s32 	%r5078, %r5497, -1894007588;
	shf.l.wrap.b32 	%r5080, %r5070, %r5070, 30;
	shf.l.wrap.b32 	%r5498, %r5078, %r5078, 5;
	// begin inline asm
	lop3.b32 %r5073, %r5074, %r5080, %r5076, 232;
	// end inline asm
	xor.b32  	%r5499, %r5390, %r5374;
	xor.b32  	%r5500, %r5499, %r5438;
	xor.b32  	%r5501, %r5500, %r5478;
	shf.l.wrap.b32 	%r5502, %r5501, %r5501, 1;
	add.s32 	%r5503, %r5502, %r5073;
	add.s32 	%r5504, %r5503, %r5072;
	add.s32 	%r5505, %r5504, %r5498;
	add.s32 	%r5082, %r5505, -1894007588;
	shf.l.wrap.b32 	%r5084, %r5074, %r5074, 30;
	shf.l.wrap.b32 	%r5506, %r5082, %r5082, 5;
	// begin inline asm
	lop3.b32 %r5077, %r5078, %r5084, %r5080, 232;
	// end inline asm
	xor.b32  	%r5507, %r5398, %r5382;
	xor.b32  	%r5508, %r5507, %r5446;
	xor.b32  	%r5509, %r5508, %r5486;
	shf.l.wrap.b32 	%r5510, %r5509, %r5509, 1;
	add.s32 	%r5511, %r5510, %r5077;
	add.s32 	%r5512, %r5511, %r5076;
	add.s32 	%r5513, %r5512, %r5506;
	add.s32 	%r5086, %r5513, -1894007588;
	shf.l.wrap.b32 	%r5088, %r5078, %r5078, 30;
	shf.l.wrap.b32 	%r5514, %r5086, %r5086, 5;
	// begin inline asm
	lop3.b32 %r5081, %r5082, %r5088, %r5084, 232;
	// end inline asm
	xor.b32  	%r5515, %r5390, %r5406;
	xor.b32  	%r5516, %r5515, %r5454;
	xor.b32  	%r5517, %r5516, %r5494;
	shf.l.wrap.b32 	%r5518, %r5517, %r5517, 1;
	add.s32 	%r5519, %r5518, %r5081;
	add.s32 	%r5520, %r5519, %r5080;
	add.s32 	%r5521, %r5520, %r5514;
	add.s32 	%r5090, %r5521, -1894007588;
	shf.l.wrap.b32 	%r5092, %r5082, %r5082, 30;
	shf.l.wrap.b32 	%r5522, %r5090, %r5090, 5;
	// begin inline asm
	lop3.b32 %r5085, %r5086, %r5092, %r5088, 232;
	// end inline asm
	xor.b32  	%r5523, %r5414, %r5398;
	xor.b32  	%r5524, %r5523, %r5462;
	xor.b32  	%r5525, %r5524, %r5502;
	shf.l.wrap.b32 	%r5526, %r5525, %r5525, 1;
	add.s32 	%r5527, %r5526, %r5085;
	add.s32 	%r5528, %r5527, %r5084;
	add.s32 	%r5529, %r5528, %r5522;
	add.s32 	%r5094, %r5529, -1894007588;
	shf.l.wrap.b32 	%r5096, %r5086, %r5086, 30;
	shf.l.wrap.b32 	%r5530, %r5094, %r5094, 5;
	// begin inline asm
	lop3.b32 %r5089, %r5090, %r5096, %r5092, 232;
	// end inline asm
	xor.b32  	%r5531, %r5422, %r5406;
	xor.b32  	%r5532, %r5531, %r5470;
	xor.b32  	%r5533, %r5532, %r5510;
	shf.l.wrap.b32 	%r5534, %r5533, %r5533, 1;
	add.s32 	%r5535, %r5534, %r5089;
	add.s32 	%r5536, %r5535, %r5088;
	add.s32 	%r5537, %r5536, %r5530;
	add.s32 	%r5098, %r5537, -1894007588;
	shf.l.wrap.b32 	%r5100, %r5090, %r5090, 30;
	shf.l.wrap.b32 	%r5538, %r5098, %r5098, 5;
	// begin inline asm
	lop3.b32 %r5093, %r5094, %r5100, %r5096, 232;
	// end inline asm
	xor.b32  	%r5539, %r5414, %r5430;
	xor.b32  	%r5540, %r5539, %r5478;
	xor.b32  	%r5541, %r5540, %r5518;
	shf.l.wrap.b32 	%r5542, %r5541, %r5541, 1;
	add.s32 	%r5543, %r5542, %r5093;
	add.s32 	%r5544, %r5543, %r5092;
	add.s32 	%r5545, %r5544, %r5538;
	add.s32 	%r5102, %r5545, -1894007588;
	shf.l.wrap.b32 	%r5104, %r5094, %r5094, 30;
	shf.l.wrap.b32 	%r5546, %r5102, %r5102, 5;
	// begin inline asm
	lop3.b32 %r5097, %r5098, %r5104, %r5100, 232;
	// end inline asm
	xor.b32  	%r5547, %r5438, %r5422;
	xor.b32  	%r5548, %r5547, %r5486;
	xor.b32  	%r5549, %r5548, %r5526;
	shf.l.wrap.b32 	%r5550, %r5549, %r5549, 1;
	add.s32 	%r5551, %r5550, %r5097;
	add.s32 	%r5552, %r5551, %r5096;
	add.s32 	%r5553, %r5552, %r5546;
	add.s32 	%r5106, %r5553, -1894007588;
	shf.l.wrap.b32 	%r5108, %r5098, %r5098, 30;
	shf.l.wrap.b32 	%r5554, %r5106, %r5106, 5;
	// begin inline asm
	lop3.b32 %r5101, %r5102, %r5108, %r5104, 232;
	// end inline asm
	xor.b32  	%r5555, %r5446, %r5430;
	xor.b32  	%r5556, %r5555, %r5494;
	xor.b32  	%r5557, %r5556, %r5534;
	shf.l.wrap.b32 	%r5558, %r5557, %r5557, 1;
	add.s32 	%r5559, %r5558, %r5101;
	add.s32 	%r5560, %r5559, %r5100;
	add.s32 	%r5561, %r5560, %r5554;
	add.s32 	%r5110, %r5561, -1894007588;
	shf.l.wrap.b32 	%r5112, %r5102, %r5102, 30;
	shf.l.wrap.b32 	%r5562, %r5110, %r5110, 5;
	// begin inline asm
	lop3.b32 %r5105, %r5106, %r5112, %r5108, 232;
	// end inline asm
	xor.b32  	%r5563, %r5438, %r5454;
	xor.b32  	%r5564, %r5563, %r5502;
	xor.b32  	%r5565, %r5564, %r5542;
	shf.l.wrap.b32 	%r5566, %r5565, %r5565, 1;
	add.s32 	%r5567, %r5566, %r5105;
	add.s32 	%r5568, %r5567, %r5104;
	add.s32 	%r5569, %r5568, %r5562;
	add.s32 	%r5114, %r5569, -1894007588;
	shf.l.wrap.b32 	%r5116, %r5106, %r5106, 30;
	shf.l.wrap.b32 	%r5570, %r5114, %r5114, 5;
	// begin inline asm
	lop3.b32 %r5109, %r5110, %r5116, %r5112, 232;
	// end inline asm
	xor.b32  	%r5571, %r5462, %r5446;
	xor.b32  	%r5572, %r5571, %r5510;
	xor.b32  	%r5573, %r5572, %r5550;
	shf.l.wrap.b32 	%r5574, %r5573, %r5573, 1;
	add.s32 	%r5575, %r5574, %r5109;
	add.s32 	%r5576, %r5575, %r5108;
	add.s32 	%r5577, %r5576, %r5570;
	add.s32 	%r5118, %r5577, -1894007588;
	shf.l.wrap.b32 	%r5120, %r5110, %r5110, 30;
	shf.l.wrap.b32 	%r5578, %r5118, %r5118, 5;
	// begin inline asm
	lop3.b32 %r5113, %r5114, %r5120, %r5116, 232;
	// end inline asm
	xor.b32  	%r5579, %r5470, %r5454;
	xor.b32  	%r5580, %r5579, %r5518;
	xor.b32  	%r5581, %r5580, %r5558;
	shf.l.wrap.b32 	%r5582, %r5581, %r5581, 1;
	add.s32 	%r5583, %r5582, %r5113;
	add.s32 	%r5584, %r5583, %r5112;
	add.s32 	%r5585, %r5584, %r5578;
	add.s32 	%r5122, %r5585, -1894007588;
	shf.l.wrap.b32 	%r5124, %r5114, %r5114, 30;
	shf.l.wrap.b32 	%r5586, %r5122, %r5122, 5;
	// begin inline asm
	lop3.b32 %r5117, %r5118, %r5124, %r5120, 232;
	// end inline asm
	xor.b32  	%r5587, %r5462, %r5478;
	xor.b32  	%r5588, %r5587, %r5526;
	xor.b32  	%r5589, %r5588, %r5566;
	shf.l.wrap.b32 	%r5590, %r5589, %r5589, 1;
	add.s32 	%r5591, %r5590, %r5117;
	add.s32 	%r5592, %r5591, %r5116;
	add.s32 	%r5593, %r5592, %r5586;
	add.s32 	%r5126, %r5593, -1894007588;
	shf.l.wrap.b32 	%r5128, %r5118, %r5118, 30;
	shf.l.wrap.b32 	%r5594, %r5126, %r5126, 5;
	// begin inline asm
	lop3.b32 %r5121, %r5122, %r5128, %r5124, 232;
	// end inline asm
	xor.b32  	%r5595, %r5486, %r5470;
	xor.b32  	%r5596, %r5595, %r5534;
	xor.b32  	%r5597, %r5596, %r5574;
	shf.l.wrap.b32 	%r5598, %r5597, %r5597, 1;
	add.s32 	%r5599, %r5598, %r5121;
	add.s32 	%r5600, %r5599, %r5120;
	add.s32 	%r5601, %r5600, %r5594;
	add.s32 	%r5130, %r5601, -1894007588;
	shf.l.wrap.b32 	%r5132, %r5122, %r5122, 30;
	shf.l.wrap.b32 	%r5602, %r5130, %r5130, 5;
	// begin inline asm
	lop3.b32 %r5125, %r5126, %r5132, %r5128, 232;
	// end inline asm
	xor.b32  	%r5603, %r5494, %r5478;
	xor.b32  	%r5604, %r5603, %r5542;
	xor.b32  	%r5605, %r5604, %r5582;
	shf.l.wrap.b32 	%r5606, %r5605, %r5605, 1;
	add.s32 	%r5607, %r5606, %r5125;
	add.s32 	%r5608, %r5607, %r5124;
	add.s32 	%r5609, %r5608, %r5602;
	add.s32 	%r5134, %r5609, -1894007588;
	shf.l.wrap.b32 	%r5136, %r5126, %r5126, 30;
	shf.l.wrap.b32 	%r5610, %r5134, %r5134, 5;
	// begin inline asm
	lop3.b32 %r5129, %r5130, %r5136, %r5132, 232;
	// end inline asm
	xor.b32  	%r5611, %r5486, %r5502;
	xor.b32  	%r5612, %r5611, %r5550;
	xor.b32  	%r5613, %r5612, %r5590;
	shf.l.wrap.b32 	%r5614, %r5613, %r5613, 1;
	add.s32 	%r5615, %r5614, %r5129;
	add.s32 	%r5616, %r5615, %r5128;
	add.s32 	%r5617, %r5616, %r5610;
	add.s32 	%r5138, %r5617, -1894007588;
	shf.l.wrap.b32 	%r5140, %r5130, %r5130, 30;
	shf.l.wrap.b32 	%r5618, %r5138, %r5138, 5;
	// begin inline asm
	lop3.b32 %r5133, %r5134, %r5140, %r5136, 232;
	// end inline asm
	xor.b32  	%r5619, %r5510, %r5494;
	xor.b32  	%r5620, %r5619, %r5558;
	xor.b32  	%r5621, %r5620, %r5598;
	shf.l.wrap.b32 	%r5622, %r5621, %r5621, 1;
	add.s32 	%r5623, %r5622, %r5133;
	add.s32 	%r5624, %r5623, %r5132;
	add.s32 	%r5625, %r5624, %r5618;
	add.s32 	%r5142, %r5625, -1894007588;
	shf.l.wrap.b32 	%r5144, %r5134, %r5134, 30;
	shf.l.wrap.b32 	%r5626, %r5142, %r5142, 5;
	// begin inline asm
	lop3.b32 %r5137, %r5138, %r5144, %r5140, 232;
	// end inline asm
	xor.b32  	%r5627, %r5518, %r5502;
	xor.b32  	%r5628, %r5627, %r5566;
	xor.b32  	%r5629, %r5628, %r5606;
	shf.l.wrap.b32 	%r5630, %r5629, %r5629, 1;
	add.s32 	%r5631, %r5630, %r5137;
	add.s32 	%r5632, %r5631, %r5136;
	add.s32 	%r5633, %r5632, %r5626;
	add.s32 	%r5146, %r5633, -1894007588;
	shf.l.wrap.b32 	%r5148, %r5138, %r5138, 30;
	shf.l.wrap.b32 	%r5634, %r5146, %r5146, 5;
	// begin inline asm
	lop3.b32 %r5141, %r5142, %r5148, %r5144, 232;
	// end inline asm
	xor.b32  	%r5635, %r5510, %r5526;
	xor.b32  	%r5636, %r5635, %r5574;
	xor.b32  	%r5637, %r5636, %r5614;
	shf.l.wrap.b32 	%r5638, %r5637, %r5637, 1;
	add.s32 	%r5639, %r5638, %r5141;
	add.s32 	%r5640, %r5639, %r5140;
	add.s32 	%r5641, %r5640, %r5634;
	add.s32 	%r5150, %r5641, -1894007588;
	shf.l.wrap.b32 	%r5152, %r5142, %r5142, 30;
	shf.l.wrap.b32 	%r5642, %r5150, %r5150, 5;
	// begin inline asm
	lop3.b32 %r5145, %r5146, %r5152, %r5148, 150;
	// end inline asm
	xor.b32  	%r5643, %r5534, %r5518;
	xor.b32  	%r5644, %r5643, %r5582;
	xor.b32  	%r5645, %r5644, %r5622;
	shf.l.wrap.b32 	%r5646, %r5645, %r5645, 1;
	add.s32 	%r5647, %r5646, %r5145;
	add.s32 	%r5648, %r5647, %r5144;
	add.s32 	%r5649, %r5648, %r5642;
	add.s32 	%r5154, %r5649, -899497514;
	shf.l.wrap.b32 	%r5156, %r5146, %r5146, 30;
	shf.l.wrap.b32 	%r5650, %r5154, %r5154, 5;
	// begin inline asm
	lop3.b32 %r5149, %r5150, %r5156, %r5152, 150;
	// end inline asm
	xor.b32  	%r5651, %r5542, %r5526;
	xor.b32  	%r5652, %r5651, %r5590;
	xor.b32  	%r5653, %r5652, %r5630;
	shf.l.wrap.b32 	%r5654, %r5653, %r5653, 1;
	add.s32 	%r5655, %r5654, %r5149;
	add.s32 	%r5656, %r5655, %r5148;
	add.s32 	%r5657, %r5656, %r5650;
	add.s32 	%r5158, %r5657, -899497514;
	shf.l.wrap.b32 	%r5160, %r5150, %r5150, 30;
	shf.l.wrap.b32 	%r5658, %r5158, %r5158, 5;
	// begin inline asm
	lop3.b32 %r5153, %r5154, %r5160, %r5156, 150;
	// end inline asm
	xor.b32  	%r5659, %r5534, %r5550;
	xor.b32  	%r5660, %r5659, %r5598;
	xor.b32  	%r5661, %r5660, %r5638;
	shf.l.wrap.b32 	%r5662, %r5661, %r5661, 1;
	add.s32 	%r5663, %r5662, %r5153;
	add.s32 	%r5664, %r5663, %r5152;
	add.s32 	%r5665, %r5664, %r5658;
	add.s32 	%r5162, %r5665, -899497514;
	shf.l.wrap.b32 	%r5164, %r5154, %r5154, 30;
	shf.l.wrap.b32 	%r5666, %r5162, %r5162, 5;
	// begin inline asm
	lop3.b32 %r5157, %r5158, %r5164, %r5160, 150;
	// end inline asm
	xor.b32  	%r5667, %r5558, %r5542;
	xor.b32  	%r5668, %r5667, %r5606;
	xor.b32  	%r5669, %r5668, %r5646;
	shf.l.wrap.b32 	%r5670, %r5669, %r5669, 1;
	add.s32 	%r5671, %r5670, %r5157;
	add.s32 	%r5672, %r5671, %r5156;
	add.s32 	%r5673, %r5672, %r5666;
	add.s32 	%r5166, %r5673, -899497514;
	shf.l.wrap.b32 	%r5168, %r5158, %r5158, 30;
	shf.l.wrap.b32 	%r5674, %r5166, %r5166, 5;
	// begin inline asm
	lop3.b32 %r5161, %r5162, %r5168, %r5164, 150;
	// end inline asm
	xor.b32  	%r5675, %r5566, %r5550;
	xor.b32  	%r5676, %r5675, %r5614;
	xor.b32  	%r5677, %r5676, %r5654;
	shf.l.wrap.b32 	%r5678, %r5677, %r5677, 1;
	add.s32 	%r5679, %r5678, %r5161;
	add.s32 	%r5680, %r5679, %r5160;
	add.s32 	%r5681, %r5680, %r5674;
	add.s32 	%r5170, %r5681, -899497514;
	shf.l.wrap.b32 	%r5172, %r5162, %r5162, 30;
	shf.l.wrap.b32 	%r5682, %r5170, %r5170, 5;
	// begin inline asm
	lop3.b32 %r5165, %r5166, %r5172, %r5168, 150;
	// end inline asm
	xor.b32  	%r5683, %r5558, %r5574;
	xor.b32  	%r5684, %r5683, %r5622;
	xor.b32  	%r5685, %r5684, %r5662;
	shf.l.wrap.b32 	%r5686, %r5685, %r5685, 1;
	add.s32 	%r5687, %r5686, %r5165;
	add.s32 	%r5688, %r5687, %r5164;
	add.s32 	%r5689, %r5688, %r5682;
	add.s32 	%r5174, %r5689, -899497514;
	shf.l.wrap.b32 	%r5176, %r5166, %r5166, 30;
	shf.l.wrap.b32 	%r5690, %r5174, %r5174, 5;
	// begin inline asm
	lop3.b32 %r5169, %r5170, %r5176, %r5172, 150;
	// end inline asm
	xor.b32  	%r5691, %r5582, %r5566;
	xor.b32  	%r5692, %r5691, %r5630;
	xor.b32  	%r5693, %r5692, %r5670;
	shf.l.wrap.b32 	%r5694, %r5693, %r5693, 1;
	add.s32 	%r5695, %r5694, %r5169;
	add.s32 	%r5696, %r5695, %r5168;
	add.s32 	%r5697, %r5696, %r5690;
	add.s32 	%r5178, %r5697, -899497514;
	shf.l.wrap.b32 	%r5180, %r5170, %r5170, 30;
	shf.l.wrap.b32 	%r5698, %r5178, %r5178, 5;
	// begin inline asm
	lop3.b32 %r5173, %r5174, %r5180, %r5176, 150;
	// end inline asm
	xor.b32  	%r5699, %r5590, %r5574;
	xor.b32  	%r5700, %r5699, %r5638;
	xor.b32  	%r5701, %r5700, %r5678;
	shf.l.wrap.b32 	%r5702, %r5701, %r5701, 1;
	add.s32 	%r5703, %r5702, %r5173;
	add.s32 	%r5704, %r5703, %r5172;
	add.s32 	%r5705, %r5704, %r5698;
	add.s32 	%r5182, %r5705, -899497514;
	shf.l.wrap.b32 	%r5184, %r5174, %r5174, 30;
	shf.l.wrap.b32 	%r5706, %r5182, %r5182, 5;
	// begin inline asm
	lop3.b32 %r5177, %r5178, %r5184, %r5180, 150;
	// end inline asm
	xor.b32  	%r5707, %r5582, %r5598;
	xor.b32  	%r5708, %r5707, %r5646;
	xor.b32  	%r5709, %r5708, %r5686;
	shf.l.wrap.b32 	%r5710, %r5709, %r5709, 1;
	add.s32 	%r5711, %r5710, %r5177;
	add.s32 	%r5712, %r5711, %r5176;
	add.s32 	%r5713, %r5712, %r5706;
	add.s32 	%r5186, %r5713, -899497514;
	shf.l.wrap.b32 	%r5188, %r5178, %r5178, 30;
	shf.l.wrap.b32 	%r5714, %r5186, %r5186, 5;
	// begin inline asm
	lop3.b32 %r5181, %r5182, %r5188, %r5184, 150;
	// end inline asm
	xor.b32  	%r5715, %r5606, %r5590;
	xor.b32  	%r5716, %r5715, %r5654;
	xor.b32  	%r5717, %r5716, %r5694;
	shf.l.wrap.b32 	%r5718, %r5717, %r5717, 1;
	add.s32 	%r5719, %r5718, %r5181;
	add.s32 	%r5720, %r5719, %r5180;
	add.s32 	%r5721, %r5720, %r5714;
	add.s32 	%r5190, %r5721, -899497514;
	shf.l.wrap.b32 	%r5192, %r5182, %r5182, 30;
	shf.l.wrap.b32 	%r5722, %r5190, %r5190, 5;
	// begin inline asm
	lop3.b32 %r5185, %r5186, %r5192, %r5188, 150;
	// end inline asm
	xor.b32  	%r5723, %r5614, %r5598;
	xor.b32  	%r5724, %r5723, %r5662;
	xor.b32  	%r5725, %r5724, %r5702;
	shf.l.wrap.b32 	%r5726, %r5725, %r5725, 1;
	add.s32 	%r5727, %r5726, %r5185;
	add.s32 	%r5728, %r5727, %r5184;
	add.s32 	%r5729, %r5728, %r5722;
	add.s32 	%r5194, %r5729, -899497514;
	shf.l.wrap.b32 	%r5196, %r5186, %r5186, 30;
	shf.l.wrap.b32 	%r5730, %r5194, %r5194, 5;
	// begin inline asm
	lop3.b32 %r5189, %r5190, %r5196, %r5192, 150;
	// end inline asm
	xor.b32  	%r5731, %r5606, %r5622;
	xor.b32  	%r5732, %r5731, %r5670;
	xor.b32  	%r5733, %r5732, %r5710;
	shf.l.wrap.b32 	%r5734, %r5733, %r5733, 1;
	add.s32 	%r5735, %r5734, %r5189;
	add.s32 	%r5736, %r5735, %r5188;
	add.s32 	%r5737, %r5736, %r5730;
	add.s32 	%r5198, %r5737, -899497514;
	shf.l.wrap.b32 	%r5200, %r5190, %r5190, 30;
	shf.l.wrap.b32 	%r5738, %r5198, %r5198, 5;
	// begin inline asm
	lop3.b32 %r5193, %r5194, %r5200, %r5196, 150;
	// end inline asm
	xor.b32  	%r5739, %r5630, %r5614;
	xor.b32  	%r5740, %r5739, %r5678;
	xor.b32  	%r5741, %r5740, %r5718;
	shf.l.wrap.b32 	%r5742, %r5741, %r5741, 1;
	add.s32 	%r5743, %r5742, %r5193;
	add.s32 	%r5744, %r5743, %r5192;
	add.s32 	%r5745, %r5744, %r5738;
	add.s32 	%r5202, %r5745, -899497514;
	shf.l.wrap.b32 	%r5204, %r5194, %r5194, 30;
	shf.l.wrap.b32 	%r5746, %r5202, %r5202, 5;
	// begin inline asm
	lop3.b32 %r5197, %r5198, %r5204, %r5200, 150;
	// end inline asm
	xor.b32  	%r5747, %r5638, %r5622;
	xor.b32  	%r5748, %r5747, %r5686;
	xor.b32  	%r5749, %r5748, %r5726;
	shf.l.wrap.b32 	%r5750, %r5749, %r5749, 1;
	add.s32 	%r5751, %r5750, %r5197;
	add.s32 	%r5752, %r5751, %r5196;
	add.s32 	%r5753, %r5752, %r5746;
	add.s32 	%r5206, %r5753, -899497514;
	shf.l.wrap.b32 	%r5208, %r5198, %r5198, 30;
	shf.l.wrap.b32 	%r5754, %r5206, %r5206, 5;
	// begin inline asm
	lop3.b32 %r5201, %r5202, %r5208, %r5204, 150;
	// end inline asm
	xor.b32  	%r5755, %r5630, %r5646;
	xor.b32  	%r5756, %r5755, %r5694;
	xor.b32  	%r5757, %r5756, %r5734;
	shf.l.wrap.b32 	%r5758, %r5757, %r5757, 1;
	add.s32 	%r5759, %r5758, %r5201;
	add.s32 	%r5760, %r5759, %r5200;
	add.s32 	%r5761, %r5760, %r5754;
	add.s32 	%r5210, %r5761, -899497514;
	shf.l.wrap.b32 	%r5212, %r5202, %r5202, 30;
	shf.l.wrap.b32 	%r5762, %r5210, %r5210, 5;
	// begin inline asm
	lop3.b32 %r5205, %r5206, %r5212, %r5208, 150;
	// end inline asm
	xor.b32  	%r5763, %r5654, %r5638;
	xor.b32  	%r5764, %r5763, %r5702;
	xor.b32  	%r5765, %r5764, %r5742;
	shf.l.wrap.b32 	%r5766, %r5765, %r5765, 1;
	add.s32 	%r5767, %r5766, %r5205;
	add.s32 	%r5768, %r5767, %r5204;
	add.s32 	%r5769, %r5768, %r5762;
	add.s32 	%r5214, %r5769, -899497514;
	shf.l.wrap.b32 	%r5216, %r5206, %r5206, 30;
	shf.l.wrap.b32 	%r5770, %r5214, %r5214, 5;
	// begin inline asm
	lop3.b32 %r5209, %r5210, %r5216, %r5212, 150;
	// end inline asm
	xor.b32  	%r5771, %r5662, %r5646;
	xor.b32  	%r5772, %r5771, %r5710;
	xor.b32  	%r5773, %r5772, %r5750;
	shf.l.wrap.b32 	%r5774, %r5773, %r5773, 1;
	add.s32 	%r5775, %r5209, %r5774;
	add.s32 	%r5776, %r5775, %r5208;
	add.s32 	%r5777, %r5776, %r5770;
	add.s32 	%r5218, %r5777, -899497514;
	shf.l.wrap.b32 	%r5220, %r5210, %r5210, 30;
	shf.l.wrap.b32 	%r5778, %r5218, %r5218, 5;
	// begin inline asm
	lop3.b32 %r5213, %r5214, %r5220, %r5216, 150;
	// end inline asm
	xor.b32  	%r5779, %r5654, %r5670;
	xor.b32  	%r5780, %r5779, %r5718;
	xor.b32  	%r5781, %r5780, %r5758;
	shf.l.wrap.b32 	%r5782, %r5781, %r5781, 1;
	add.s32 	%r5783, %r5782, %r5213;
	add.s32 	%r5784, %r5783, %r5212;
	add.s32 	%r5785, %r5784, %r5778;
	add.s32 	%r5222, %r5785, -899497514;
	shf.l.wrap.b32 	%r5224, %r5214, %r5214, 30;
	shf.l.wrap.b32 	%r5786, %r5222, %r5222, 5;
	// begin inline asm
	lop3.b32 %r5217, %r5218, %r5224, %r5220, 150;
	// end inline asm
	xor.b32  	%r5787, %r5678, %r5662;
	xor.b32  	%r5788, %r5787, %r5726;
	xor.b32  	%r5789, %r5788, %r5766;
	shf.l.wrap.b32 	%r5790, %r5789, %r5789, 1;
	add.s32 	%r5791, %r5790, %r5217;
	add.s32 	%r5792, %r5791, %r5216;
	add.s32 	%r5793, %r5792, %r5786;
	add.s32 	%r5794, %r5793, -899497514;
	shf.l.wrap.b32 	%r5223, %r5218, %r5218, 30;
	shf.l.wrap.b32 	%r5795, %r5794, %r5794, 5;
	// begin inline asm
	lop3.b32 %r5221, %r5222, %r5223, %r5224, 150;
	// end inline asm
	xor.b32  	%r5796, %r5686, %r5670;
	xor.b32  	%r5797, %r5796, %r5734;
	xor.b32  	%r5798, %r5797, %r5774;
	shf.l.wrap.b32 	%r5799, %r5798, %r5798, 1;
	shf.l.wrap.b32 	%r5800, %r5222, %r5222, 30;
	add.s32 	%r5801, %r5221, %r5799;
	add.s32 	%r5802, %r5801, %r4910;
	add.s32 	%r5803, %r5802, %r5220;
	add.s32 	%r5804, %r5803, %r5795;
	add.s32 	%r5805, %r5804, -899497514;
	st.local.u32 	[%rd31+4], %r5805;
	add.s32 	%r5806, %r5794, %r4906;
	st.local.u32 	[%rd31+8], %r5806;
	add.s32 	%r5807, %r5800, %r4907;
	st.local.u32 	[%rd31+12], %r5807;
	add.s32 	%r5808, %r5223, %r4908;
	st.local.u32 	[%rd31+16], %r5808;
	add.s32 	%r5809, %r5224, %r5227;
	st.local.u32 	[%rd31+20], %r5809;
	add.s64 	%rd282, %rd282, 64;
	add.s64 	%rd280, %rd280, 64;
	add.s32 	%r8125, %r8125, -64;
	setp.gt.u32 	%p50, %r8125, 63;
	@%p50 bra 	$L__BB4_57;

$L__BB4_61:
	setp.eq.s32 	%p51, %r8125, 0;
	@%p51 bra 	$L__BB4_67;

	cvt.u64.u32 	%rd206, %r8106;
	add.s64 	%rd209, %rd31, %rd206;
	add.s64 	%rd287, %rd209, 24;
	and.b32  	%r8127, %r8125, 3;
	setp.eq.s32 	%p52, %r8127, 0;
	mov.u32 	%r8128, %r8125;
	@%p52 bra 	$L__BB4_65;

	mov.u64 	%rd283, %rd287;
	mov.u64 	%rd284, %rd282;
	mov.u32 	%r8128, %r8125;

$L__BB4_64:
	.pragma "nounroll";
	add.s32 	%r8128, %r8128, -1;
	add.s64 	%rd282, %rd284, 1;
	ld.local.u8 	%rs152, [%rd284];
	add.s64 	%rd287, %rd283, 1;
	st.local.u8 	[%rd283], %rs152;
	add.s32 	%r8127, %r8127, -1;
	setp.ne.s32 	%p53, %r8127, 0;
	mov.u64 	%rd283, %rd287;
	mov.u64 	%rd284, %rd282;
	@%p53 bra 	$L__BB4_64;

$L__BB4_65:
	add.s32 	%r5810, %r8125, -1;
	setp.lt.u32 	%p54, %r5810, 3;
	@%p54 bra 	$L__BB4_67;

$L__BB4_66:
	ld.local.u8 	%rs153, [%rd282];
	st.local.u8 	[%rd287], %rs153;
	ld.local.u8 	%rs154, [%rd282+1];
	st.local.u8 	[%rd287+1], %rs154;
	ld.local.u8 	%rs155, [%rd282+2];
	st.local.u8 	[%rd287+2], %rs155;
	add.s64 	%rd123, %rd282, 4;
	ld.local.u8 	%rs156, [%rd282+3];
	add.s64 	%rd124, %rd287, 4;
	st.local.u8 	[%rd287+3], %rs156;
	add.s32 	%r8128, %r8128, -4;
	setp.ne.s32 	%p55, %r8128, 0;
	mov.u64 	%rd287, %rd124;
	mov.u64 	%rd282, %rd123;
	@%p55 bra 	$L__BB4_66;

$L__BB4_67:
	add.u64 	%rd299, %SPL, 0;
	add.u64 	%rd297, %SP, 0;
	ld.local.u32 	%r5812, [%rd31];
	and.b32  	%r8134, %r5812, 63;
	mov.u32 	%r5813, 64;
	sub.s32 	%r237, %r5813, %r8134;
	add.s32 	%r5814, %r5812, 8;
	mov.u32 	%r8153, 8;
	st.local.u32 	[%rd31], %r5814;
	setp.eq.s32 	%p56, %r8134, 0;
	setp.gt.u32 	%p57, %r237, 8;
	or.pred  	%p58, %p56, %p57;
	@%p58 bra 	$L__BB4_75;

	setp.eq.s32 	%p59, %r237, 0;
	@%p59 bra 	$L__BB4_74;

	cvt.u64.u32 	%rd212, %r8134;
	add.s64 	%rd213, %rd31, %rd212;
	add.s64 	%rd293, %rd213, 24;
	add.u64 	%rd214, %SP, 0;
	add.u64 	%rd294, %SPL, 0;
	and.b32  	%r8131, %r237, 3;
	setp.eq.s32 	%p60, %r8131, 0;
	mov.u32 	%r8132, %r237;
	@%p60 bra 	$L__BB4_72;

	cvta.to.local.u64 	%rd290, %rd214;
	mov.u64 	%rd289, %rd293;
	mov.u32 	%r8132, %r237;

$L__BB4_71:
	.pragma "nounroll";
	add.s32 	%r8132, %r8132, -1;
	add.s64 	%rd294, %rd290, 1;
	ld.local.u8 	%rs157, [%rd290];
	add.s64 	%rd293, %rd289, 1;
	st.local.u8 	[%rd289], %rs157;
	add.s32 	%r8131, %r8131, -1;
	setp.ne.s32 	%p61, %r8131, 0;
	mov.u64 	%rd289, %rd293;
	mov.u64 	%rd290, %rd294;
	@%p61 bra 	$L__BB4_71;

$L__BB4_72:
	xor.b32  	%r5815, %r8134, 63;
	setp.lt.u32 	%p62, %r5815, 3;
	@%p62 bra 	$L__BB4_74;

$L__BB4_73:
	ld.local.u8 	%rs158, [%rd294];
	st.local.u8 	[%rd293], %rs158;
	ld.local.u8 	%rs159, [%rd294+1];
	st.local.u8 	[%rd293+1], %rs159;
	ld.local.u8 	%rs160, [%rd294+2];
	st.local.u8 	[%rd293+2], %rs160;
	add.s64 	%rd138, %rd294, 4;
	ld.local.u8 	%rs161, [%rd294+3];
	add.s64 	%rd139, %rd293, 4;
	st.local.u8 	[%rd293+3], %rs161;
	add.s32 	%r8132, %r8132, -4;
	setp.ne.s32 	%p63, %r8132, 0;
	mov.u64 	%rd293, %rd139;
	mov.u64 	%rd294, %rd138;
	@%p63 bra 	$L__BB4_73;

$L__BB4_74:
	ld.local.u32 	%r6137, [%rd31+24];
	shf.l.wrap.b32 	%r6138, %r6137, %r6137, 16;
	shl.b32 	%r6139, %r6138, 8;
	and.b32  	%r6140, %r6139, -16711936;
	mov.u32 	%r6141, 8;
	shr.u32 	%r6142, %r6138, 8;
	and.b32  	%r6143, %r6142, 16711935;
	or.b32  	%r6144, %r6140, %r6143;
	ld.local.u32 	%r6145, [%rd31+28];
	shf.l.wrap.b32 	%r6146, %r6145, %r6145, 16;
	shl.b32 	%r6147, %r6146, 8;
	and.b32  	%r6148, %r6147, -16711936;
	shr.u32 	%r6149, %r6146, 8;
	and.b32  	%r6150, %r6149, 16711935;
	or.b32  	%r6151, %r6148, %r6150;
	ld.local.u32 	%r6152, [%rd31+32];
	shf.l.wrap.b32 	%r6153, %r6152, %r6152, 16;
	shl.b32 	%r6154, %r6153, 8;
	and.b32  	%r6155, %r6154, -16711936;
	shr.u32 	%r6156, %r6153, 8;
	and.b32  	%r6157, %r6156, 16711935;
	or.b32  	%r6158, %r6155, %r6157;
	ld.local.u32 	%r6159, [%rd31+36];
	shf.l.wrap.b32 	%r6160, %r6159, %r6159, 16;
	shl.b32 	%r6161, %r6160, 8;
	and.b32  	%r6162, %r6161, -16711936;
	shr.u32 	%r6163, %r6160, 8;
	and.b32  	%r6164, %r6163, 16711935;
	or.b32  	%r6165, %r6162, %r6164;
	ld.local.u32 	%r6166, [%rd31+40];
	shf.l.wrap.b32 	%r6167, %r6166, %r6166, 16;
	shl.b32 	%r6168, %r6167, 8;
	and.b32  	%r6169, %r6168, -16711936;
	shr.u32 	%r6170, %r6167, 8;
	and.b32  	%r6171, %r6170, 16711935;
	or.b32  	%r6172, %r6169, %r6171;
	ld.local.u32 	%r6173, [%rd31+44];
	shf.l.wrap.b32 	%r6174, %r6173, %r6173, 16;
	shl.b32 	%r6175, %r6174, 8;
	and.b32  	%r6176, %r6175, -16711936;
	shr.u32 	%r6177, %r6174, 8;
	and.b32  	%r6178, %r6177, 16711935;
	or.b32  	%r6179, %r6176, %r6178;
	ld.local.u32 	%r6180, [%rd31+48];
	shf.l.wrap.b32 	%r6181, %r6180, %r6180, 16;
	shl.b32 	%r6182, %r6181, 8;
	and.b32  	%r6183, %r6182, -16711936;
	shr.u32 	%r6184, %r6181, 8;
	and.b32  	%r6185, %r6184, 16711935;
	or.b32  	%r6186, %r6183, %r6185;
	ld.local.u32 	%r6187, [%rd31+52];
	shf.l.wrap.b32 	%r6188, %r6187, %r6187, 16;
	shl.b32 	%r6189, %r6188, 8;
	and.b32  	%r6190, %r6189, -16711936;
	shr.u32 	%r6191, %r6188, 8;
	and.b32  	%r6192, %r6191, 16711935;
	or.b32  	%r6193, %r6190, %r6192;
	ld.local.u32 	%r6194, [%rd31+56];
	shf.l.wrap.b32 	%r6195, %r6194, %r6194, 16;
	shl.b32 	%r6196, %r6195, 8;
	and.b32  	%r6197, %r6196, -16711936;
	shr.u32 	%r6198, %r6195, 8;
	and.b32  	%r6199, %r6198, 16711935;
	or.b32  	%r6200, %r6197, %r6199;
	ld.local.u32 	%r6201, [%rd31+60];
	shf.l.wrap.b32 	%r6202, %r6201, %r6201, 16;
	shl.b32 	%r6203, %r6202, 8;
	and.b32  	%r6204, %r6203, -16711936;
	shr.u32 	%r6205, %r6202, 8;
	and.b32  	%r6206, %r6205, 16711935;
	or.b32  	%r6207, %r6204, %r6206;
	ld.local.u32 	%r6208, [%rd31+64];
	shf.l.wrap.b32 	%r6209, %r6208, %r6208, 16;
	shl.b32 	%r6210, %r6209, 8;
	and.b32  	%r6211, %r6210, -16711936;
	shr.u32 	%r6212, %r6209, 8;
	and.b32  	%r6213, %r6212, 16711935;
	or.b32  	%r6214, %r6211, %r6213;
	ld.local.u32 	%r6215, [%rd31+68];
	shf.l.wrap.b32 	%r6216, %r6215, %r6215, 16;
	shl.b32 	%r6217, %r6216, 8;
	and.b32  	%r6218, %r6217, -16711936;
	shr.u32 	%r6219, %r6216, 8;
	and.b32  	%r6220, %r6219, 16711935;
	or.b32  	%r6221, %r6218, %r6220;
	ld.local.u32 	%r6222, [%rd31+72];
	shf.l.wrap.b32 	%r6223, %r6222, %r6222, 16;
	shl.b32 	%r6224, %r6223, 8;
	and.b32  	%r6225, %r6224, -16711936;
	shr.u32 	%r6226, %r6223, 8;
	and.b32  	%r6227, %r6226, 16711935;
	or.b32  	%r6228, %r6225, %r6227;
	ld.local.u32 	%r6229, [%rd31+76];
	shf.l.wrap.b32 	%r6230, %r6229, %r6229, 16;
	shl.b32 	%r6231, %r6230, 8;
	and.b32  	%r6232, %r6231, -16711936;
	shr.u32 	%r6233, %r6230, 8;
	and.b32  	%r6234, %r6233, 16711935;
	or.b32  	%r6235, %r6232, %r6234;
	ld.local.u32 	%r6236, [%rd31+80];
	shf.l.wrap.b32 	%r6237, %r6236, %r6236, 16;
	shl.b32 	%r6238, %r6237, 8;
	and.b32  	%r6239, %r6238, -16711936;
	shr.u32 	%r6240, %r6237, 8;
	and.b32  	%r6241, %r6240, 16711935;
	or.b32  	%r6242, %r6239, %r6241;
	ld.local.u32 	%r6243, [%rd31+84];
	shf.l.wrap.b32 	%r6244, %r6243, %r6243, 16;
	shl.b32 	%r6245, %r6244, 8;
	and.b32  	%r6246, %r6245, -16711936;
	shr.u32 	%r6247, %r6244, 8;
	and.b32  	%r6248, %r6247, 16711935;
	or.b32  	%r6249, %r6246, %r6248;
	ld.local.u32 	%r5821, [%rd31+4];
	shf.l.wrap.b32 	%r6250, %r5821, %r5821, 5;
	ld.local.u32 	%r5819, [%rd31+16];
	ld.local.u32 	%r5818, [%rd31+12];
	ld.local.u32 	%r5817, [%rd31+8];
	// begin inline asm
	lop3.b32 %r5816, %r5817, %r5818, %r5819, 202;
	// end inline asm
	add.s32 	%r6251, %r6144, %r6250;
	ld.local.u32 	%r6252, [%rd31+20];
	add.s32 	%r6253, %r6251, %r6252;
	add.s32 	%r6254, %r6253, %r5816;
	add.s32 	%r5825, %r6254, 1518500249;
	shf.l.wrap.b32 	%r5827, %r5817, %r5817, 30;
	shf.l.wrap.b32 	%r6255, %r5825, %r5825, 5;
	// begin inline asm
	lop3.b32 %r5820, %r5821, %r5827, %r5818, 202;
	// end inline asm
	add.s32 	%r6256, %r6151, %r5819;
	add.s32 	%r6257, %r6256, %r5820;
	add.s32 	%r6258, %r6257, %r6255;
	add.s32 	%r5829, %r6258, 1518500249;
	shf.l.wrap.b32 	%r5831, %r5821, %r5821, 30;
	shf.l.wrap.b32 	%r6259, %r5829, %r5829, 5;
	// begin inline asm
	lop3.b32 %r5824, %r5825, %r5831, %r5827, 202;
	// end inline asm
	add.s32 	%r6260, %r6158, %r5818;
	add.s32 	%r6261, %r6260, %r5824;
	add.s32 	%r6262, %r6261, %r6259;
	add.s32 	%r5833, %r6262, 1518500249;
	shf.l.wrap.b32 	%r5835, %r5825, %r5825, 30;
	shf.l.wrap.b32 	%r6263, %r5833, %r5833, 5;
	// begin inline asm
	lop3.b32 %r5828, %r5829, %r5835, %r5831, 202;
	// end inline asm
	add.s32 	%r6264, %r6165, %r5827;
	add.s32 	%r6265, %r6264, %r5828;
	add.s32 	%r6266, %r6265, %r6263;
	add.s32 	%r5837, %r6266, 1518500249;
	shf.l.wrap.b32 	%r5839, %r5829, %r5829, 30;
	shf.l.wrap.b32 	%r6267, %r5837, %r5837, 5;
	// begin inline asm
	lop3.b32 %r5832, %r5833, %r5839, %r5835, 202;
	// end inline asm
	add.s32 	%r6268, %r6172, %r5831;
	add.s32 	%r6269, %r6268, %r5832;
	add.s32 	%r6270, %r6269, %r6267;
	add.s32 	%r5841, %r6270, 1518500249;
	shf.l.wrap.b32 	%r5843, %r5833, %r5833, 30;
	shf.l.wrap.b32 	%r6271, %r5841, %r5841, 5;
	// begin inline asm
	lop3.b32 %r5836, %r5837, %r5843, %r5839, 202;
	// end inline asm
	add.s32 	%r6272, %r6179, %r5836;
	add.s32 	%r6273, %r6272, %r5835;
	add.s32 	%r6274, %r6273, %r6271;
	add.s32 	%r5845, %r6274, 1518500249;
	shf.l.wrap.b32 	%r5847, %r5837, %r5837, 30;
	shf.l.wrap.b32 	%r6275, %r5845, %r5845, 5;
	// begin inline asm
	lop3.b32 %r5840, %r5841, %r5847, %r5843, 202;
	// end inline asm
	add.s32 	%r6276, %r6186, %r5840;
	add.s32 	%r6277, %r6276, %r5839;
	add.s32 	%r6278, %r6277, %r6275;
	add.s32 	%r5849, %r6278, 1518500249;
	shf.l.wrap.b32 	%r5851, %r5841, %r5841, 30;
	shf.l.wrap.b32 	%r6279, %r5849, %r5849, 5;
	// begin inline asm
	lop3.b32 %r5844, %r5845, %r5851, %r5847, 202;
	// end inline asm
	add.s32 	%r6280, %r6193, %r5844;
	add.s32 	%r6281, %r6280, %r5843;
	add.s32 	%r6282, %r6281, %r6279;
	add.s32 	%r5853, %r6282, 1518500249;
	shf.l.wrap.b32 	%r5855, %r5845, %r5845, 30;
	shf.l.wrap.b32 	%r6283, %r5853, %r5853, 5;
	// begin inline asm
	lop3.b32 %r5848, %r5849, %r5855, %r5851, 202;
	// end inline asm
	add.s32 	%r6284, %r6200, %r5848;
	add.s32 	%r6285, %r6284, %r5847;
	add.s32 	%r6286, %r6285, %r6283;
	add.s32 	%r5857, %r6286, 1518500249;
	shf.l.wrap.b32 	%r5859, %r5849, %r5849, 30;
	shf.l.wrap.b32 	%r6287, %r5857, %r5857, 5;
	// begin inline asm
	lop3.b32 %r5852, %r5853, %r5859, %r5855, 202;
	// end inline asm
	add.s32 	%r6288, %r6207, %r5852;
	add.s32 	%r6289, %r6288, %r5851;
	add.s32 	%r6290, %r6289, %r6287;
	add.s32 	%r5861, %r6290, 1518500249;
	shf.l.wrap.b32 	%r5863, %r5853, %r5853, 30;
	shf.l.wrap.b32 	%r6291, %r5861, %r5861, 5;
	// begin inline asm
	lop3.b32 %r5856, %r5857, %r5863, %r5859, 202;
	// end inline asm
	add.s32 	%r6292, %r6214, %r5856;
	add.s32 	%r6293, %r6292, %r5855;
	add.s32 	%r6294, %r6293, %r6291;
	add.s32 	%r5865, %r6294, 1518500249;
	shf.l.wrap.b32 	%r5867, %r5857, %r5857, 30;
	shf.l.wrap.b32 	%r6295, %r5865, %r5865, 5;
	// begin inline asm
	lop3.b32 %r5860, %r5861, %r5867, %r5863, 202;
	// end inline asm
	add.s32 	%r6296, %r6221, %r5860;
	add.s32 	%r6297, %r6296, %r5859;
	add.s32 	%r6298, %r6297, %r6295;
	add.s32 	%r5869, %r6298, 1518500249;
	shf.l.wrap.b32 	%r5871, %r5861, %r5861, 30;
	shf.l.wrap.b32 	%r6299, %r5869, %r5869, 5;
	// begin inline asm
	lop3.b32 %r5864, %r5865, %r5871, %r5867, 202;
	// end inline asm
	add.s32 	%r6300, %r6228, %r5864;
	add.s32 	%r6301, %r6300, %r5863;
	add.s32 	%r6302, %r6301, %r6299;
	add.s32 	%r5873, %r6302, 1518500249;
	shf.l.wrap.b32 	%r5875, %r5865, %r5865, 30;
	shf.l.wrap.b32 	%r6303, %r5873, %r5873, 5;
	// begin inline asm
	lop3.b32 %r5868, %r5869, %r5875, %r5871, 202;
	// end inline asm
	add.s32 	%r6304, %r6235, %r5868;
	add.s32 	%r6305, %r6304, %r5867;
	add.s32 	%r6306, %r6305, %r6303;
	add.s32 	%r5877, %r6306, 1518500249;
	shf.l.wrap.b32 	%r5879, %r5869, %r5869, 30;
	shf.l.wrap.b32 	%r6307, %r5877, %r5877, 5;
	// begin inline asm
	lop3.b32 %r5872, %r5873, %r5879, %r5875, 202;
	// end inline asm
	add.s32 	%r6308, %r6242, %r5872;
	add.s32 	%r6309, %r6308, %r5871;
	add.s32 	%r6310, %r6309, %r6307;
	add.s32 	%r5881, %r6310, 1518500249;
	shf.l.wrap.b32 	%r5883, %r5873, %r5873, 30;
	shf.l.wrap.b32 	%r6311, %r5881, %r5881, 5;
	// begin inline asm
	lop3.b32 %r5876, %r5877, %r5883, %r5879, 202;
	// end inline asm
	add.s32 	%r6312, %r6249, %r5876;
	add.s32 	%r6313, %r6312, %r5875;
	add.s32 	%r6314, %r6313, %r6311;
	add.s32 	%r5885, %r6314, 1518500249;
	shf.l.wrap.b32 	%r5887, %r5877, %r5877, 30;
	shf.l.wrap.b32 	%r6315, %r5885, %r5885, 5;
	// begin inline asm
	lop3.b32 %r5880, %r5881, %r5887, %r5883, 202;
	// end inline asm
	xor.b32  	%r6316, %r6158, %r6144;
	xor.b32  	%r6317, %r6316, %r6200;
	xor.b32  	%r6318, %r6317, %r6235;
	shf.l.wrap.b32 	%r6319, %r6318, %r6318, 1;
	add.s32 	%r6320, %r6319, %r5880;
	add.s32 	%r6321, %r6320, %r5879;
	add.s32 	%r6322, %r6321, %r6315;
	add.s32 	%r5889, %r6322, 1518500249;
	shf.l.wrap.b32 	%r5891, %r5881, %r5881, 30;
	shf.l.wrap.b32 	%r6323, %r5889, %r5889, 5;
	// begin inline asm
	lop3.b32 %r5884, %r5885, %r5891, %r5887, 202;
	// end inline asm
	xor.b32  	%r6324, %r6165, %r6151;
	xor.b32  	%r6325, %r6324, %r6207;
	xor.b32  	%r6326, %r6325, %r6242;
	shf.l.wrap.b32 	%r6327, %r6326, %r6326, 1;
	add.s32 	%r6328, %r6327, %r5884;
	add.s32 	%r6329, %r6328, %r5883;
	add.s32 	%r6330, %r6329, %r6323;
	add.s32 	%r5893, %r6330, 1518500249;
	shf.l.wrap.b32 	%r5895, %r5885, %r5885, 30;
	shf.l.wrap.b32 	%r6331, %r5893, %r5893, 5;
	// begin inline asm
	lop3.b32 %r5888, %r5889, %r5895, %r5891, 202;
	// end inline asm
	xor.b32  	%r6332, %r6172, %r6158;
	xor.b32  	%r6333, %r6332, %r6214;
	xor.b32  	%r6334, %r6333, %r6249;
	shf.l.wrap.b32 	%r6335, %r6334, %r6334, 1;
	add.s32 	%r6336, %r6335, %r5888;
	add.s32 	%r6337, %r6336, %r5887;
	add.s32 	%r6338, %r6337, %r6331;
	add.s32 	%r5897, %r6338, 1518500249;
	shf.l.wrap.b32 	%r5899, %r5889, %r5889, 30;
	shf.l.wrap.b32 	%r6339, %r5897, %r5897, 5;
	// begin inline asm
	lop3.b32 %r5892, %r5893, %r5899, %r5895, 202;
	// end inline asm
	xor.b32  	%r6340, %r6179, %r6165;
	xor.b32  	%r6341, %r6340, %r6221;
	xor.b32  	%r6342, %r6341, %r6319;
	shf.l.wrap.b32 	%r6343, %r6342, %r6342, 1;
	add.s32 	%r6344, %r6343, %r5892;
	add.s32 	%r6345, %r6344, %r5891;
	add.s32 	%r6346, %r6345, %r6339;
	add.s32 	%r5901, %r6346, 1518500249;
	shf.l.wrap.b32 	%r5903, %r5893, %r5893, 30;
	shf.l.wrap.b32 	%r6347, %r5901, %r5901, 5;
	// begin inline asm
	lop3.b32 %r5896, %r5897, %r5903, %r5899, 150;
	// end inline asm
	xor.b32  	%r6348, %r6186, %r6172;
	xor.b32  	%r6349, %r6348, %r6228;
	xor.b32  	%r6350, %r6349, %r6327;
	shf.l.wrap.b32 	%r6351, %r6350, %r6350, 1;
	add.s32 	%r6352, %r6351, %r5896;
	add.s32 	%r6353, %r6352, %r5895;
	add.s32 	%r6354, %r6353, %r6347;
	add.s32 	%r5905, %r6354, 1859775393;
	shf.l.wrap.b32 	%r5907, %r5897, %r5897, 30;
	shf.l.wrap.b32 	%r6355, %r5905, %r5905, 5;
	// begin inline asm
	lop3.b32 %r5900, %r5901, %r5907, %r5903, 150;
	// end inline asm
	xor.b32  	%r6356, %r6193, %r6179;
	xor.b32  	%r6357, %r6356, %r6235;
	xor.b32  	%r6358, %r6357, %r6335;
	shf.l.wrap.b32 	%r6359, %r6358, %r6358, 1;
	add.s32 	%r6360, %r6359, %r5900;
	add.s32 	%r6361, %r6360, %r5899;
	add.s32 	%r6362, %r6361, %r6355;
	add.s32 	%r5909, %r6362, 1859775393;
	shf.l.wrap.b32 	%r5911, %r5901, %r5901, 30;
	shf.l.wrap.b32 	%r6363, %r5909, %r5909, 5;
	// begin inline asm
	lop3.b32 %r5904, %r5905, %r5911, %r5907, 150;
	// end inline asm
	xor.b32  	%r6364, %r6200, %r6186;
	xor.b32  	%r6365, %r6364, %r6242;
	xor.b32  	%r6366, %r6365, %r6343;
	shf.l.wrap.b32 	%r6367, %r6366, %r6366, 1;
	add.s32 	%r6368, %r6367, %r5904;
	add.s32 	%r6369, %r6368, %r5903;
	add.s32 	%r6370, %r6369, %r6363;
	add.s32 	%r5913, %r6370, 1859775393;
	shf.l.wrap.b32 	%r5915, %r5905, %r5905, 30;
	shf.l.wrap.b32 	%r6371, %r5913, %r5913, 5;
	// begin inline asm
	lop3.b32 %r5908, %r5909, %r5915, %r5911, 150;
	// end inline asm
	xor.b32  	%r6372, %r6207, %r6193;
	xor.b32  	%r6373, %r6372, %r6249;
	xor.b32  	%r6374, %r6373, %r6351;
	shf.l.wrap.b32 	%r6375, %r6374, %r6374, 1;
	add.s32 	%r6376, %r6375, %r5908;
	add.s32 	%r6377, %r6376, %r5907;
	add.s32 	%r6378, %r6377, %r6371;
	add.s32 	%r5917, %r6378, 1859775393;
	shf.l.wrap.b32 	%r5919, %r5909, %r5909, 30;
	shf.l.wrap.b32 	%r6379, %r5917, %r5917, 5;
	// begin inline asm
	lop3.b32 %r5912, %r5913, %r5919, %r5915, 150;
	// end inline asm
	xor.b32  	%r6380, %r6214, %r6200;
	xor.b32  	%r6381, %r6380, %r6319;
	xor.b32  	%r6382, %r6381, %r6359;
	shf.l.wrap.b32 	%r6383, %r6382, %r6382, 1;
	add.s32 	%r6384, %r6383, %r5912;
	add.s32 	%r6385, %r6384, %r5911;
	add.s32 	%r6386, %r6385, %r6379;
	add.s32 	%r5921, %r6386, 1859775393;
	shf.l.wrap.b32 	%r5923, %r5913, %r5913, 30;
	shf.l.wrap.b32 	%r6387, %r5921, %r5921, 5;
	// begin inline asm
	lop3.b32 %r5916, %r5917, %r5923, %r5919, 150;
	// end inline asm
	xor.b32  	%r6388, %r6221, %r6207;
	xor.b32  	%r6389, %r6388, %r6327;
	xor.b32  	%r6390, %r6389, %r6367;
	shf.l.wrap.b32 	%r6391, %r6390, %r6390, 1;
	add.s32 	%r6392, %r6391, %r5916;
	add.s32 	%r6393, %r6392, %r5915;
	add.s32 	%r6394, %r6393, %r6387;
	add.s32 	%r5925, %r6394, 1859775393;
	shf.l.wrap.b32 	%r5927, %r5917, %r5917, 30;
	shf.l.wrap.b32 	%r6395, %r5925, %r5925, 5;
	// begin inline asm
	lop3.b32 %r5920, %r5921, %r5927, %r5923, 150;
	// end inline asm
	xor.b32  	%r6396, %r6228, %r6214;
	xor.b32  	%r6397, %r6396, %r6335;
	xor.b32  	%r6398, %r6397, %r6375;
	shf.l.wrap.b32 	%r6399, %r6398, %r6398, 1;
	add.s32 	%r6400, %r6399, %r5920;
	add.s32 	%r6401, %r6400, %r5919;
	add.s32 	%r6402, %r6401, %r6395;
	add.s32 	%r5929, %r6402, 1859775393;
	shf.l.wrap.b32 	%r5931, %r5921, %r5921, 30;
	shf.l.wrap.b32 	%r6403, %r5929, %r5929, 5;
	// begin inline asm
	lop3.b32 %r5924, %r5925, %r5931, %r5927, 150;
	// end inline asm
	xor.b32  	%r6404, %r6235, %r6221;
	xor.b32  	%r6405, %r6404, %r6343;
	xor.b32  	%r6406, %r6405, %r6383;
	shf.l.wrap.b32 	%r6407, %r6406, %r6406, 1;
	add.s32 	%r6408, %r6407, %r5924;
	add.s32 	%r6409, %r6408, %r5923;
	add.s32 	%r6410, %r6409, %r6403;
	add.s32 	%r5933, %r6410, 1859775393;
	shf.l.wrap.b32 	%r5935, %r5925, %r5925, 30;
	shf.l.wrap.b32 	%r6411, %r5933, %r5933, 5;
	// begin inline asm
	lop3.b32 %r5928, %r5929, %r5935, %r5931, 150;
	// end inline asm
	xor.b32  	%r6412, %r6242, %r6228;
	xor.b32  	%r6413, %r6412, %r6351;
	xor.b32  	%r6414, %r6413, %r6391;
	shf.l.wrap.b32 	%r6415, %r6414, %r6414, 1;
	add.s32 	%r6416, %r6415, %r5928;
	add.s32 	%r6417, %r6416, %r5927;
	add.s32 	%r6418, %r6417, %r6411;
	add.s32 	%r5937, %r6418, 1859775393;
	shf.l.wrap.b32 	%r5939, %r5929, %r5929, 30;
	shf.l.wrap.b32 	%r6419, %r5937, %r5937, 5;
	// begin inline asm
	lop3.b32 %r5932, %r5933, %r5939, %r5935, 150;
	// end inline asm
	xor.b32  	%r6420, %r6249, %r6235;
	xor.b32  	%r6421, %r6420, %r6359;
	xor.b32  	%r6422, %r6421, %r6399;
	shf.l.wrap.b32 	%r6423, %r6422, %r6422, 1;
	add.s32 	%r6424, %r6423, %r5932;
	add.s32 	%r6425, %r6424, %r5931;
	add.s32 	%r6426, %r6425, %r6419;
	add.s32 	%r5941, %r6426, 1859775393;
	shf.l.wrap.b32 	%r5943, %r5933, %r5933, 30;
	shf.l.wrap.b32 	%r6427, %r5941, %r5941, 5;
	// begin inline asm
	lop3.b32 %r5936, %r5937, %r5943, %r5939, 150;
	// end inline asm
	xor.b32  	%r6428, %r6319, %r6242;
	xor.b32  	%r6429, %r6428, %r6367;
	xor.b32  	%r6430, %r6429, %r6407;
	shf.l.wrap.b32 	%r6431, %r6430, %r6430, 1;
	add.s32 	%r6432, %r6431, %r5936;
	add.s32 	%r6433, %r6432, %r5935;
	add.s32 	%r6434, %r6433, %r6427;
	add.s32 	%r5945, %r6434, 1859775393;
	shf.l.wrap.b32 	%r5947, %r5937, %r5937, 30;
	shf.l.wrap.b32 	%r6435, %r5945, %r5945, 5;
	// begin inline asm
	lop3.b32 %r5940, %r5941, %r5947, %r5943, 150;
	// end inline asm
	xor.b32  	%r6436, %r6327, %r6249;
	xor.b32  	%r6437, %r6436, %r6375;
	xor.b32  	%r6438, %r6437, %r6415;
	shf.l.wrap.b32 	%r6439, %r6438, %r6438, 1;
	add.s32 	%r6440, %r6439, %r5940;
	add.s32 	%r6441, %r6440, %r5939;
	add.s32 	%r6442, %r6441, %r6435;
	add.s32 	%r5949, %r6442, 1859775393;
	shf.l.wrap.b32 	%r5951, %r5941, %r5941, 30;
	shf.l.wrap.b32 	%r6443, %r5949, %r5949, 5;
	// begin inline asm
	lop3.b32 %r5944, %r5945, %r5951, %r5947, 150;
	// end inline asm
	xor.b32  	%r6444, %r6335, %r6319;
	xor.b32  	%r6445, %r6444, %r6383;
	xor.b32  	%r6446, %r6445, %r6423;
	shf.l.wrap.b32 	%r6447, %r6446, %r6446, 1;
	add.s32 	%r6448, %r6447, %r5944;
	add.s32 	%r6449, %r6448, %r5943;
	add.s32 	%r6450, %r6449, %r6443;
	add.s32 	%r5953, %r6450, 1859775393;
	shf.l.wrap.b32 	%r5955, %r5945, %r5945, 30;
	shf.l.wrap.b32 	%r6451, %r5953, %r5953, 5;
	// begin inline asm
	lop3.b32 %r5948, %r5949, %r5955, %r5951, 150;
	// end inline asm
	xor.b32  	%r6452, %r6343, %r6327;
	xor.b32  	%r6453, %r6452, %r6391;
	xor.b32  	%r6454, %r6453, %r6431;
	shf.l.wrap.b32 	%r6455, %r6454, %r6454, 1;
	add.s32 	%r6456, %r6455, %r5948;
	add.s32 	%r6457, %r6456, %r5947;
	add.s32 	%r6458, %r6457, %r6451;
	add.s32 	%r5957, %r6458, 1859775393;
	shf.l.wrap.b32 	%r5959, %r5949, %r5949, 30;
	shf.l.wrap.b32 	%r6459, %r5957, %r5957, 5;
	// begin inline asm
	lop3.b32 %r5952, %r5953, %r5959, %r5955, 150;
	// end inline asm
	xor.b32  	%r6460, %r6351, %r6335;
	xor.b32  	%r6461, %r6460, %r6399;
	xor.b32  	%r6462, %r6461, %r6439;
	shf.l.wrap.b32 	%r6463, %r6462, %r6462, 1;
	add.s32 	%r6464, %r6463, %r5952;
	add.s32 	%r6465, %r6464, %r5951;
	add.s32 	%r6466, %r6465, %r6459;
	add.s32 	%r5961, %r6466, 1859775393;
	shf.l.wrap.b32 	%r5963, %r5953, %r5953, 30;
	shf.l.wrap.b32 	%r6467, %r5961, %r5961, 5;
	// begin inline asm
	lop3.b32 %r5956, %r5957, %r5963, %r5959, 150;
	// end inline asm
	xor.b32  	%r6468, %r6359, %r6343;
	xor.b32  	%r6469, %r6468, %r6407;
	xor.b32  	%r6470, %r6469, %r6447;
	shf.l.wrap.b32 	%r6471, %r6470, %r6470, 1;
	add.s32 	%r6472, %r6471, %r5956;
	add.s32 	%r6473, %r6472, %r5955;
	add.s32 	%r6474, %r6473, %r6467;
	add.s32 	%r5965, %r6474, 1859775393;
	shf.l.wrap.b32 	%r5967, %r5957, %r5957, 30;
	shf.l.wrap.b32 	%r6475, %r5965, %r5965, 5;
	// begin inline asm
	lop3.b32 %r5960, %r5961, %r5967, %r5963, 150;
	// end inline asm
	xor.b32  	%r6476, %r6367, %r6351;
	xor.b32  	%r6477, %r6476, %r6415;
	xor.b32  	%r6478, %r6477, %r6455;
	shf.l.wrap.b32 	%r6479, %r6478, %r6478, 1;
	add.s32 	%r6480, %r6479, %r5960;
	add.s32 	%r6481, %r6480, %r5959;
	add.s32 	%r6482, %r6481, %r6475;
	add.s32 	%r5969, %r6482, 1859775393;
	shf.l.wrap.b32 	%r5971, %r5961, %r5961, 30;
	shf.l.wrap.b32 	%r6483, %r5969, %r5969, 5;
	// begin inline asm
	lop3.b32 %r5964, %r5965, %r5971, %r5967, 150;
	// end inline asm
	xor.b32  	%r6484, %r6375, %r6359;
	xor.b32  	%r6485, %r6484, %r6423;
	xor.b32  	%r6486, %r6485, %r6463;
	shf.l.wrap.b32 	%r6487, %r6486, %r6486, 1;
	add.s32 	%r6488, %r6487, %r5964;
	add.s32 	%r6489, %r6488, %r5963;
	add.s32 	%r6490, %r6489, %r6483;
	add.s32 	%r5973, %r6490, 1859775393;
	shf.l.wrap.b32 	%r5975, %r5965, %r5965, 30;
	shf.l.wrap.b32 	%r6491, %r5973, %r5973, 5;
	// begin inline asm
	lop3.b32 %r5968, %r5969, %r5975, %r5971, 150;
	// end inline asm
	xor.b32  	%r6492, %r6383, %r6367;
	xor.b32  	%r6493, %r6492, %r6431;
	xor.b32  	%r6494, %r6493, %r6471;
	shf.l.wrap.b32 	%r6495, %r6494, %r6494, 1;
	add.s32 	%r6496, %r6495, %r5968;
	add.s32 	%r6497, %r6496, %r5967;
	add.s32 	%r6498, %r6497, %r6491;
	add.s32 	%r5977, %r6498, 1859775393;
	shf.l.wrap.b32 	%r5979, %r5969, %r5969, 30;
	shf.l.wrap.b32 	%r6499, %r5977, %r5977, 5;
	// begin inline asm
	lop3.b32 %r5972, %r5973, %r5979, %r5975, 150;
	// end inline asm
	xor.b32  	%r6500, %r6391, %r6375;
	xor.b32  	%r6501, %r6500, %r6439;
	xor.b32  	%r6502, %r6501, %r6479;
	shf.l.wrap.b32 	%r6503, %r6502, %r6502, 1;
	add.s32 	%r6504, %r6503, %r5972;
	add.s32 	%r6505, %r6504, %r5971;
	add.s32 	%r6506, %r6505, %r6499;
	add.s32 	%r5981, %r6506, 1859775393;
	shf.l.wrap.b32 	%r5983, %r5973, %r5973, 30;
	shf.l.wrap.b32 	%r6507, %r5981, %r5981, 5;
	// begin inline asm
	lop3.b32 %r5976, %r5977, %r5983, %r5979, 232;
	// end inline asm
	xor.b32  	%r6508, %r6399, %r6383;
	xor.b32  	%r6509, %r6508, %r6447;
	xor.b32  	%r6510, %r6509, %r6487;
	shf.l.wrap.b32 	%r6511, %r6510, %r6510, 1;
	add.s32 	%r6512, %r6511, %r5976;
	add.s32 	%r6513, %r6512, %r5975;
	add.s32 	%r6514, %r6513, %r6507;
	add.s32 	%r5985, %r6514, -1894007588;
	shf.l.wrap.b32 	%r5987, %r5977, %r5977, 30;
	shf.l.wrap.b32 	%r6515, %r5985, %r5985, 5;
	// begin inline asm
	lop3.b32 %r5980, %r5981, %r5987, %r5983, 232;
	// end inline asm
	xor.b32  	%r6516, %r6407, %r6391;
	xor.b32  	%r6517, %r6516, %r6455;
	xor.b32  	%r6518, %r6517, %r6495;
	shf.l.wrap.b32 	%r6519, %r6518, %r6518, 1;
	add.s32 	%r6520, %r6519, %r5980;
	add.s32 	%r6521, %r6520, %r5979;
	add.s32 	%r6522, %r6521, %r6515;
	add.s32 	%r5989, %r6522, -1894007588;
	shf.l.wrap.b32 	%r5991, %r5981, %r5981, 30;
	shf.l.wrap.b32 	%r6523, %r5989, %r5989, 5;
	// begin inline asm
	lop3.b32 %r5984, %r5985, %r5991, %r5987, 232;
	// end inline asm
	xor.b32  	%r6524, %r6415, %r6399;
	xor.b32  	%r6525, %r6524, %r6463;
	xor.b32  	%r6526, %r6525, %r6503;
	shf.l.wrap.b32 	%r6527, %r6526, %r6526, 1;
	add.s32 	%r6528, %r6527, %r5984;
	add.s32 	%r6529, %r6528, %r5983;
	add.s32 	%r6530, %r6529, %r6523;
	add.s32 	%r5993, %r6530, -1894007588;
	shf.l.wrap.b32 	%r5995, %r5985, %r5985, 30;
	shf.l.wrap.b32 	%r6531, %r5993, %r5993, 5;
	// begin inline asm
	lop3.b32 %r5988, %r5989, %r5995, %r5991, 232;
	// end inline asm
	xor.b32  	%r6532, %r6423, %r6407;
	xor.b32  	%r6533, %r6532, %r6471;
	xor.b32  	%r6534, %r6533, %r6511;
	shf.l.wrap.b32 	%r6535, %r6534, %r6534, 1;
	add.s32 	%r6536, %r6535, %r5988;
	add.s32 	%r6537, %r6536, %r5987;
	add.s32 	%r6538, %r6537, %r6531;
	add.s32 	%r5997, %r6538, -1894007588;
	shf.l.wrap.b32 	%r5999, %r5989, %r5989, 30;
	shf.l.wrap.b32 	%r6539, %r5997, %r5997, 5;
	// begin inline asm
	lop3.b32 %r5992, %r5993, %r5999, %r5995, 232;
	// end inline asm
	xor.b32  	%r6540, %r6431, %r6415;
	xor.b32  	%r6541, %r6540, %r6479;
	xor.b32  	%r6542, %r6541, %r6519;
	shf.l.wrap.b32 	%r6543, %r6542, %r6542, 1;
	add.s32 	%r6544, %r6543, %r5992;
	add.s32 	%r6545, %r6544, %r5991;
	add.s32 	%r6546, %r6545, %r6539;
	add.s32 	%r6001, %r6546, -1894007588;
	shf.l.wrap.b32 	%r6003, %r5993, %r5993, 30;
	shf.l.wrap.b32 	%r6547, %r6001, %r6001, 5;
	// begin inline asm
	lop3.b32 %r5996, %r5997, %r6003, %r5999, 232;
	// end inline asm
	xor.b32  	%r6548, %r6439, %r6423;
	xor.b32  	%r6549, %r6548, %r6487;
	xor.b32  	%r6550, %r6549, %r6527;
	shf.l.wrap.b32 	%r6551, %r6550, %r6550, 1;
	add.s32 	%r6552, %r6551, %r5996;
	add.s32 	%r6553, %r6552, %r5995;
	add.s32 	%r6554, %r6553, %r6547;
	add.s32 	%r6005, %r6554, -1894007588;
	shf.l.wrap.b32 	%r6007, %r5997, %r5997, 30;
	shf.l.wrap.b32 	%r6555, %r6005, %r6005, 5;
	// begin inline asm
	lop3.b32 %r6000, %r6001, %r6007, %r6003, 232;
	// end inline asm
	xor.b32  	%r6556, %r6447, %r6431;
	xor.b32  	%r6557, %r6556, %r6495;
	xor.b32  	%r6558, %r6557, %r6535;
	shf.l.wrap.b32 	%r6559, %r6558, %r6558, 1;
	add.s32 	%r6560, %r6559, %r6000;
	add.s32 	%r6561, %r6560, %r5999;
	add.s32 	%r6562, %r6561, %r6555;
	add.s32 	%r6009, %r6562, -1894007588;
	shf.l.wrap.b32 	%r6011, %r6001, %r6001, 30;
	shf.l.wrap.b32 	%r6563, %r6009, %r6009, 5;
	// begin inline asm
	lop3.b32 %r6004, %r6005, %r6011, %r6007, 232;
	// end inline asm
	xor.b32  	%r6564, %r6455, %r6439;
	xor.b32  	%r6565, %r6564, %r6503;
	xor.b32  	%r6566, %r6565, %r6543;
	shf.l.wrap.b32 	%r6567, %r6566, %r6566, 1;
	add.s32 	%r6568, %r6567, %r6004;
	add.s32 	%r6569, %r6568, %r6003;
	add.s32 	%r6570, %r6569, %r6563;
	add.s32 	%r6013, %r6570, -1894007588;
	shf.l.wrap.b32 	%r6015, %r6005, %r6005, 30;
	shf.l.wrap.b32 	%r6571, %r6013, %r6013, 5;
	// begin inline asm
	lop3.b32 %r6008, %r6009, %r6015, %r6011, 232;
	// end inline asm
	xor.b32  	%r6572, %r6463, %r6447;
	xor.b32  	%r6573, %r6572, %r6511;
	xor.b32  	%r6574, %r6573, %r6551;
	shf.l.wrap.b32 	%r6575, %r6574, %r6574, 1;
	add.s32 	%r6576, %r6575, %r6008;
	add.s32 	%r6577, %r6576, %r6007;
	add.s32 	%r6578, %r6577, %r6571;
	add.s32 	%r6017, %r6578, -1894007588;
	shf.l.wrap.b32 	%r6019, %r6009, %r6009, 30;
	shf.l.wrap.b32 	%r6579, %r6017, %r6017, 5;
	// begin inline asm
	lop3.b32 %r6012, %r6013, %r6019, %r6015, 232;
	// end inline asm
	xor.b32  	%r6580, %r6471, %r6455;
	xor.b32  	%r6581, %r6580, %r6519;
	xor.b32  	%r6582, %r6581, %r6559;
	shf.l.wrap.b32 	%r6583, %r6582, %r6582, 1;
	add.s32 	%r6584, %r6583, %r6012;
	add.s32 	%r6585, %r6584, %r6011;
	add.s32 	%r6586, %r6585, %r6579;
	add.s32 	%r6021, %r6586, -1894007588;
	shf.l.wrap.b32 	%r6023, %r6013, %r6013, 30;
	shf.l.wrap.b32 	%r6587, %r6021, %r6021, 5;
	// begin inline asm
	lop3.b32 %r6016, %r6017, %r6023, %r6019, 232;
	// end inline asm
	xor.b32  	%r6588, %r6479, %r6463;
	xor.b32  	%r6589, %r6588, %r6527;
	xor.b32  	%r6590, %r6589, %r6567;
	shf.l.wrap.b32 	%r6591, %r6590, %r6590, 1;
	add.s32 	%r6592, %r6591, %r6016;
	add.s32 	%r6593, %r6592, %r6015;
	add.s32 	%r6594, %r6593, %r6587;
	add.s32 	%r6025, %r6594, -1894007588;
	shf.l.wrap.b32 	%r6027, %r6017, %r6017, 30;
	shf.l.wrap.b32 	%r6595, %r6025, %r6025, 5;
	// begin inline asm
	lop3.b32 %r6020, %r6021, %r6027, %r6023, 232;
	// end inline asm
	xor.b32  	%r6596, %r6487, %r6471;
	xor.b32  	%r6597, %r6596, %r6535;
	xor.b32  	%r6598, %r6597, %r6575;
	shf.l.wrap.b32 	%r6599, %r6598, %r6598, 1;
	add.s32 	%r6600, %r6599, %r6020;
	add.s32 	%r6601, %r6600, %r6019;
	add.s32 	%r6602, %r6601, %r6595;
	add.s32 	%r6029, %r6602, -1894007588;
	shf.l.wrap.b32 	%r6031, %r6021, %r6021, 30;
	shf.l.wrap.b32 	%r6603, %r6029, %r6029, 5;
	// begin inline asm
	lop3.b32 %r6024, %r6025, %r6031, %r6027, 232;
	// end inline asm
	xor.b32  	%r6604, %r6495, %r6479;
	xor.b32  	%r6605, %r6604, %r6543;
	xor.b32  	%r6606, %r6605, %r6583;
	shf.l.wrap.b32 	%r6607, %r6606, %r6606, 1;
	add.s32 	%r6608, %r6607, %r6024;
	add.s32 	%r6609, %r6608, %r6023;
	add.s32 	%r6610, %r6609, %r6603;
	add.s32 	%r6033, %r6610, -1894007588;
	shf.l.wrap.b32 	%r6035, %r6025, %r6025, 30;
	shf.l.wrap.b32 	%r6611, %r6033, %r6033, 5;
	// begin inline asm
	lop3.b32 %r6028, %r6029, %r6035, %r6031, 232;
	// end inline asm
	xor.b32  	%r6612, %r6503, %r6487;
	xor.b32  	%r6613, %r6612, %r6551;
	xor.b32  	%r6614, %r6613, %r6591;
	shf.l.wrap.b32 	%r6615, %r6614, %r6614, 1;
	add.s32 	%r6616, %r6615, %r6028;
	add.s32 	%r6617, %r6616, %r6027;
	add.s32 	%r6618, %r6617, %r6611;
	add.s32 	%r6037, %r6618, -1894007588;
	shf.l.wrap.b32 	%r6039, %r6029, %r6029, 30;
	shf.l.wrap.b32 	%r6619, %r6037, %r6037, 5;
	// begin inline asm
	lop3.b32 %r6032, %r6033, %r6039, %r6035, 232;
	// end inline asm
	xor.b32  	%r6620, %r6511, %r6495;
	xor.b32  	%r6621, %r6620, %r6559;
	xor.b32  	%r6622, %r6621, %r6599;
	shf.l.wrap.b32 	%r6623, %r6622, %r6622, 1;
	add.s32 	%r6624, %r6623, %r6032;
	add.s32 	%r6625, %r6624, %r6031;
	add.s32 	%r6626, %r6625, %r6619;
	add.s32 	%r6041, %r6626, -1894007588;
	shf.l.wrap.b32 	%r6043, %r6033, %r6033, 30;
	shf.l.wrap.b32 	%r6627, %r6041, %r6041, 5;
	// begin inline asm
	lop3.b32 %r6036, %r6037, %r6043, %r6039, 232;
	// end inline asm
	xor.b32  	%r6628, %r6519, %r6503;
	xor.b32  	%r6629, %r6628, %r6567;
	xor.b32  	%r6630, %r6629, %r6607;
	shf.l.wrap.b32 	%r6631, %r6630, %r6630, 1;
	add.s32 	%r6632, %r6631, %r6036;
	add.s32 	%r6633, %r6632, %r6035;
	add.s32 	%r6634, %r6633, %r6627;
	add.s32 	%r6045, %r6634, -1894007588;
	shf.l.wrap.b32 	%r6047, %r6037, %r6037, 30;
	shf.l.wrap.b32 	%r6635, %r6045, %r6045, 5;
	// begin inline asm
	lop3.b32 %r6040, %r6041, %r6047, %r6043, 232;
	// end inline asm
	xor.b32  	%r6636, %r6527, %r6511;
	xor.b32  	%r6637, %r6636, %r6575;
	xor.b32  	%r6638, %r6637, %r6615;
	shf.l.wrap.b32 	%r6639, %r6638, %r6638, 1;
	add.s32 	%r6640, %r6639, %r6040;
	add.s32 	%r6641, %r6640, %r6039;
	add.s32 	%r6642, %r6641, %r6635;
	add.s32 	%r6049, %r6642, -1894007588;
	shf.l.wrap.b32 	%r6051, %r6041, %r6041, 30;
	shf.l.wrap.b32 	%r6643, %r6049, %r6049, 5;
	// begin inline asm
	lop3.b32 %r6044, %r6045, %r6051, %r6047, 232;
	// end inline asm
	xor.b32  	%r6644, %r6535, %r6519;
	xor.b32  	%r6645, %r6644, %r6583;
	xor.b32  	%r6646, %r6645, %r6623;
	shf.l.wrap.b32 	%r6647, %r6646, %r6646, 1;
	add.s32 	%r6648, %r6647, %r6044;
	add.s32 	%r6649, %r6648, %r6043;
	add.s32 	%r6650, %r6649, %r6643;
	add.s32 	%r6053, %r6650, -1894007588;
	shf.l.wrap.b32 	%r6055, %r6045, %r6045, 30;
	shf.l.wrap.b32 	%r6651, %r6053, %r6053, 5;
	// begin inline asm
	lop3.b32 %r6048, %r6049, %r6055, %r6051, 232;
	// end inline asm
	xor.b32  	%r6652, %r6543, %r6527;
	xor.b32  	%r6653, %r6652, %r6591;
	xor.b32  	%r6654, %r6653, %r6631;
	shf.l.wrap.b32 	%r6655, %r6654, %r6654, 1;
	add.s32 	%r6656, %r6655, %r6048;
	add.s32 	%r6657, %r6656, %r6047;
	add.s32 	%r6658, %r6657, %r6651;
	add.s32 	%r6057, %r6658, -1894007588;
	shf.l.wrap.b32 	%r6059, %r6049, %r6049, 30;
	shf.l.wrap.b32 	%r6659, %r6057, %r6057, 5;
	// begin inline asm
	lop3.b32 %r6052, %r6053, %r6059, %r6055, 232;
	// end inline asm
	xor.b32  	%r6660, %r6551, %r6535;
	xor.b32  	%r6661, %r6660, %r6599;
	xor.b32  	%r6662, %r6661, %r6639;
	shf.l.wrap.b32 	%r6663, %r6662, %r6662, 1;
	add.s32 	%r6664, %r6663, %r6052;
	add.s32 	%r6665, %r6664, %r6051;
	add.s32 	%r6666, %r6665, %r6659;
	add.s32 	%r6061, %r6666, -1894007588;
	shf.l.wrap.b32 	%r6063, %r6053, %r6053, 30;
	shf.l.wrap.b32 	%r6667, %r6061, %r6061, 5;
	// begin inline asm
	lop3.b32 %r6056, %r6057, %r6063, %r6059, 150;
	// end inline asm
	xor.b32  	%r6668, %r6559, %r6543;
	xor.b32  	%r6669, %r6668, %r6607;
	xor.b32  	%r6670, %r6669, %r6647;
	shf.l.wrap.b32 	%r6671, %r6670, %r6670, 1;
	add.s32 	%r6672, %r6671, %r6056;
	add.s32 	%r6673, %r6672, %r6055;
	add.s32 	%r6674, %r6673, %r6667;
	add.s32 	%r6065, %r6674, -899497514;
	shf.l.wrap.b32 	%r6067, %r6057, %r6057, 30;
	shf.l.wrap.b32 	%r6675, %r6065, %r6065, 5;
	// begin inline asm
	lop3.b32 %r6060, %r6061, %r6067, %r6063, 150;
	// end inline asm
	xor.b32  	%r6676, %r6567, %r6551;
	xor.b32  	%r6677, %r6676, %r6615;
	xor.b32  	%r6678, %r6677, %r6655;
	shf.l.wrap.b32 	%r6679, %r6678, %r6678, 1;
	add.s32 	%r6680, %r6679, %r6060;
	add.s32 	%r6681, %r6680, %r6059;
	add.s32 	%r6682, %r6681, %r6675;
	add.s32 	%r6069, %r6682, -899497514;
	shf.l.wrap.b32 	%r6071, %r6061, %r6061, 30;
	shf.l.wrap.b32 	%r6683, %r6069, %r6069, 5;
	// begin inline asm
	lop3.b32 %r6064, %r6065, %r6071, %r6067, 150;
	// end inline asm
	xor.b32  	%r6684, %r6575, %r6559;
	xor.b32  	%r6685, %r6684, %r6623;
	xor.b32  	%r6686, %r6685, %r6663;
	shf.l.wrap.b32 	%r6687, %r6686, %r6686, 1;
	add.s32 	%r6688, %r6687, %r6064;
	add.s32 	%r6689, %r6688, %r6063;
	add.s32 	%r6690, %r6689, %r6683;
	add.s32 	%r6073, %r6690, -899497514;
	shf.l.wrap.b32 	%r6075, %r6065, %r6065, 30;
	shf.l.wrap.b32 	%r6691, %r6073, %r6073, 5;
	// begin inline asm
	lop3.b32 %r6068, %r6069, %r6075, %r6071, 150;
	// end inline asm
	xor.b32  	%r6692, %r6583, %r6567;
	xor.b32  	%r6693, %r6692, %r6631;
	xor.b32  	%r6694, %r6693, %r6671;
	shf.l.wrap.b32 	%r6695, %r6694, %r6694, 1;
	add.s32 	%r6696, %r6695, %r6068;
	add.s32 	%r6697, %r6696, %r6067;
	add.s32 	%r6698, %r6697, %r6691;
	add.s32 	%r6077, %r6698, -899497514;
	shf.l.wrap.b32 	%r6079, %r6069, %r6069, 30;
	shf.l.wrap.b32 	%r6699, %r6077, %r6077, 5;
	// begin inline asm
	lop3.b32 %r6072, %r6073, %r6079, %r6075, 150;
	// end inline asm
	xor.b32  	%r6700, %r6591, %r6575;
	xor.b32  	%r6701, %r6700, %r6639;
	xor.b32  	%r6702, %r6701, %r6679;
	shf.l.wrap.b32 	%r6703, %r6702, %r6702, 1;
	add.s32 	%r6704, %r6072, %r6703;
	add.s32 	%r6705, %r6704, %r6071;
	add.s32 	%r6706, %r6705, %r6699;
	add.s32 	%r6081, %r6706, -899497514;
	shf.l.wrap.b32 	%r6083, %r6073, %r6073, 30;
	shf.l.wrap.b32 	%r6707, %r6081, %r6081, 5;
	// begin inline asm
	lop3.b32 %r6076, %r6077, %r6083, %r6079, 150;
	// end inline asm
	xor.b32  	%r6708, %r6599, %r6583;
	xor.b32  	%r6709, %r6708, %r6647;
	xor.b32  	%r6710, %r6709, %r6687;
	shf.l.wrap.b32 	%r6711, %r6710, %r6710, 1;
	add.s32 	%r6712, %r6076, %r6711;
	add.s32 	%r6713, %r6712, %r6075;
	add.s32 	%r6714, %r6713, %r6707;
	add.s32 	%r6085, %r6714, -899497514;
	shf.l.wrap.b32 	%r6087, %r6077, %r6077, 30;
	shf.l.wrap.b32 	%r6715, %r6085, %r6085, 5;
	// begin inline asm
	lop3.b32 %r6080, %r6081, %r6087, %r6083, 150;
	// end inline asm
	xor.b32  	%r6716, %r6607, %r6591;
	xor.b32  	%r6717, %r6716, %r6655;
	xor.b32  	%r6718, %r6717, %r6695;
	shf.l.wrap.b32 	%r6719, %r6718, %r6718, 1;
	add.s32 	%r6720, %r6080, %r6719;
	add.s32 	%r6721, %r6720, %r6079;
	add.s32 	%r6722, %r6721, %r6715;
	add.s32 	%r6089, %r6722, -899497514;
	shf.l.wrap.b32 	%r6091, %r6081, %r6081, 30;
	shf.l.wrap.b32 	%r6723, %r6089, %r6089, 5;
	// begin inline asm
	lop3.b32 %r6084, %r6085, %r6091, %r6087, 150;
	// end inline asm
	xor.b32  	%r6724, %r6615, %r6599;
	xor.b32  	%r6725, %r6724, %r6663;
	xor.b32  	%r6726, %r6725, %r6703;
	shf.l.wrap.b32 	%r6727, %r6726, %r6726, 1;
	add.s32 	%r6728, %r6084, %r6727;
	add.s32 	%r6729, %r6728, %r6083;
	add.s32 	%r6730, %r6729, %r6723;
	add.s32 	%r6093, %r6730, -899497514;
	shf.l.wrap.b32 	%r6095, %r6085, %r6085, 30;
	shf.l.wrap.b32 	%r6731, %r6093, %r6093, 5;
	// begin inline asm
	lop3.b32 %r6088, %r6089, %r6095, %r6091, 150;
	// end inline asm
	xor.b32  	%r6732, %r6623, %r6607;
	xor.b32  	%r6733, %r6732, %r6671;
	xor.b32  	%r6734, %r6733, %r6711;
	shf.l.wrap.b32 	%r6735, %r6734, %r6734, 1;
	add.s32 	%r6736, %r6088, %r6735;
	add.s32 	%r6737, %r6736, %r6087;
	add.s32 	%r6738, %r6737, %r6731;
	add.s32 	%r6097, %r6738, -899497514;
	shf.l.wrap.b32 	%r6099, %r6089, %r6089, 30;
	shf.l.wrap.b32 	%r6739, %r6097, %r6097, 5;
	// begin inline asm
	lop3.b32 %r6092, %r6093, %r6099, %r6095, 150;
	// end inline asm
	xor.b32  	%r6740, %r6631, %r6615;
	xor.b32  	%r6741, %r6740, %r6679;
	xor.b32  	%r6742, %r6741, %r6719;
	shf.l.wrap.b32 	%r6743, %r6742, %r6742, 1;
	add.s32 	%r6744, %r6092, %r6743;
	add.s32 	%r6745, %r6744, %r6091;
	add.s32 	%r6746, %r6745, %r6739;
	add.s32 	%r6101, %r6746, -899497514;
	shf.l.wrap.b32 	%r6103, %r6093, %r6093, 30;
	shf.l.wrap.b32 	%r6747, %r6101, %r6101, 5;
	// begin inline asm
	lop3.b32 %r6096, %r6097, %r6103, %r6099, 150;
	// end inline asm
	xor.b32  	%r6748, %r6639, %r6623;
	xor.b32  	%r6749, %r6748, %r6687;
	xor.b32  	%r6750, %r6749, %r6727;
	shf.l.wrap.b32 	%r6751, %r6750, %r6750, 1;
	add.s32 	%r6752, %r6096, %r6751;
	add.s32 	%r6753, %r6752, %r6095;
	add.s32 	%r6754, %r6753, %r6747;
	add.s32 	%r6105, %r6754, -899497514;
	shf.l.wrap.b32 	%r6107, %r6097, %r6097, 30;
	shf.l.wrap.b32 	%r6755, %r6105, %r6105, 5;
	// begin inline asm
	lop3.b32 %r6100, %r6101, %r6107, %r6103, 150;
	// end inline asm
	xor.b32  	%r6756, %r6647, %r6631;
	xor.b32  	%r6757, %r6756, %r6695;
	xor.b32  	%r6758, %r6757, %r6735;
	shf.l.wrap.b32 	%r6759, %r6758, %r6758, 1;
	add.s32 	%r6760, %r6100, %r6759;
	add.s32 	%r6761, %r6760, %r6099;
	add.s32 	%r6762, %r6761, %r6755;
	add.s32 	%r6109, %r6762, -899497514;
	shf.l.wrap.b32 	%r6111, %r6101, %r6101, 30;
	shf.l.wrap.b32 	%r6763, %r6109, %r6109, 5;
	// begin inline asm
	lop3.b32 %r6104, %r6105, %r6111, %r6107, 150;
	// end inline asm
	xor.b32  	%r6764, %r6655, %r6639;
	xor.b32  	%r6765, %r6764, %r6703;
	xor.b32  	%r6766, %r6765, %r6743;
	shf.l.wrap.b32 	%r6767, %r6766, %r6766, 1;
	add.s32 	%r6768, %r6104, %r6767;
	add.s32 	%r6769, %r6768, %r6103;
	add.s32 	%r6770, %r6769, %r6763;
	add.s32 	%r6113, %r6770, -899497514;
	shf.l.wrap.b32 	%r6115, %r6105, %r6105, 30;
	shf.l.wrap.b32 	%r6771, %r6113, %r6113, 5;
	// begin inline asm
	lop3.b32 %r6108, %r6109, %r6115, %r6111, 150;
	// end inline asm
	xor.b32  	%r6772, %r6663, %r6647;
	xor.b32  	%r6773, %r6772, %r6711;
	xor.b32  	%r6774, %r6773, %r6751;
	shf.l.wrap.b32 	%r6775, %r6774, %r6774, 1;
	add.s32 	%r6776, %r6108, %r6775;
	add.s32 	%r6777, %r6776, %r6107;
	add.s32 	%r6778, %r6777, %r6771;
	add.s32 	%r6117, %r6778, -899497514;
	shf.l.wrap.b32 	%r6119, %r6109, %r6109, 30;
	shf.l.wrap.b32 	%r6779, %r6117, %r6117, 5;
	// begin inline asm
	lop3.b32 %r6112, %r6113, %r6119, %r6115, 150;
	// end inline asm
	xor.b32  	%r6780, %r6671, %r6655;
	xor.b32  	%r6781, %r6780, %r6719;
	xor.b32  	%r6782, %r6781, %r6759;
	shf.l.wrap.b32 	%r6783, %r6782, %r6782, 1;
	add.s32 	%r6784, %r6112, %r6783;
	add.s32 	%r6785, %r6784, %r6111;
	add.s32 	%r6786, %r6785, %r6779;
	add.s32 	%r6121, %r6786, -899497514;
	shf.l.wrap.b32 	%r6123, %r6113, %r6113, 30;
	shf.l.wrap.b32 	%r6787, %r6121, %r6121, 5;
	// begin inline asm
	lop3.b32 %r6116, %r6117, %r6123, %r6119, 150;
	// end inline asm
	xor.b32  	%r6788, %r6679, %r6663;
	xor.b32  	%r6789, %r6788, %r6727;
	xor.b32  	%r6790, %r6789, %r6767;
	shf.l.wrap.b32 	%r6791, %r6790, %r6790, 1;
	add.s32 	%r6792, %r6116, %r6791;
	add.s32 	%r6793, %r6792, %r6115;
	add.s32 	%r6794, %r6793, %r6787;
	add.s32 	%r6125, %r6794, -899497514;
	shf.l.wrap.b32 	%r6127, %r6117, %r6117, 30;
	shf.l.wrap.b32 	%r6795, %r6125, %r6125, 5;
	// begin inline asm
	lop3.b32 %r6120, %r6121, %r6127, %r6123, 150;
	// end inline asm
	xor.b32  	%r6796, %r6687, %r6671;
	xor.b32  	%r6797, %r6796, %r6735;
	xor.b32  	%r6798, %r6797, %r6775;
	shf.l.wrap.b32 	%r6799, %r6798, %r6798, 1;
	add.s32 	%r6800, %r6120, %r6799;
	add.s32 	%r6801, %r6800, %r6119;
	add.s32 	%r6802, %r6801, %r6795;
	add.s32 	%r6129, %r6802, -899497514;
	shf.l.wrap.b32 	%r6131, %r6121, %r6121, 30;
	shf.l.wrap.b32 	%r6803, %r6129, %r6129, 5;
	// begin inline asm
	lop3.b32 %r6124, %r6125, %r6131, %r6127, 150;
	// end inline asm
	xor.b32  	%r6804, %r6695, %r6679;
	xor.b32  	%r6805, %r6804, %r6743;
	xor.b32  	%r6806, %r6805, %r6783;
	shf.l.wrap.b32 	%r6807, %r6806, %r6806, 1;
	add.s32 	%r6808, %r6124, %r6807;
	add.s32 	%r6809, %r6808, %r6123;
	add.s32 	%r6810, %r6809, %r6803;
	add.s32 	%r6133, %r6810, -899497514;
	shf.l.wrap.b32 	%r6135, %r6125, %r6125, 30;
	shf.l.wrap.b32 	%r6811, %r6133, %r6133, 5;
	// begin inline asm
	lop3.b32 %r6128, %r6129, %r6135, %r6131, 150;
	// end inline asm
	xor.b32  	%r6812, %r6703, %r6687;
	xor.b32  	%r6813, %r6812, %r6751;
	xor.b32  	%r6814, %r6813, %r6791;
	shf.l.wrap.b32 	%r6815, %r6814, %r6814, 1;
	add.s32 	%r6816, %r6128, %r6815;
	add.s32 	%r6817, %r6816, %r6127;
	add.s32 	%r6818, %r6817, %r6811;
	add.s32 	%r6819, %r6818, -899497514;
	shf.l.wrap.b32 	%r6134, %r6129, %r6129, 30;
	shf.l.wrap.b32 	%r6820, %r6819, %r6819, 5;
	// begin inline asm
	lop3.b32 %r6132, %r6133, %r6134, %r6135, 150;
	// end inline asm
	xor.b32  	%r6821, %r6711, %r6695;
	xor.b32  	%r6822, %r6821, %r6759;
	xor.b32  	%r6823, %r6822, %r6799;
	shf.l.wrap.b32 	%r6824, %r6823, %r6823, 1;
	shf.l.wrap.b32 	%r6825, %r6133, %r6133, 30;
	add.s32 	%r6826, %r6132, %r5821;
	add.s32 	%r6827, %r6826, %r6824;
	add.s32 	%r6828, %r6827, %r6131;
	add.s32 	%r6829, %r6828, %r6820;
	add.s32 	%r6830, %r6829, -899497514;
	st.local.u32 	[%rd31+4], %r6830;
	add.s32 	%r6831, %r6819, %r5817;
	st.local.u32 	[%rd31+8], %r6831;
	add.s32 	%r6832, %r6825, %r5818;
	st.local.u32 	[%rd31+12], %r6832;
	add.s32 	%r6833, %r6134, %r5819;
	st.local.u32 	[%rd31+16], %r6833;
	add.s32 	%r6834, %r6135, %r6252;
	st.local.u32 	[%rd31+20], %r6834;
	add.u64 	%rd216, %SP, 0;
	add.u64 	%rd217, %SPL, 0;
	cvt.u64.u32 	%rd218, %r237;
	add.s64 	%rd299, %rd217, %rd218;
	add.s64 	%rd297, %rd216, %rd218;
	sub.s32 	%r8153, %r6141, %r237;
	mov.u32 	%r8134, 0;

$L__BB4_75:
	setp.lt.u32 	%p64, %r8153, 64;
	@%p64 bra 	$L__BB4_80;

$L__BB4_76:
	and.b64  	%rd219, %rd297, 3;
	setp.eq.s64 	%p65, %rd219, 0;
	@%p65 bra 	$L__BB4_78;

	ld.local.u8 	%r6835, [%rd299];
	shl.b32 	%r6836, %r6835, 24;
	ld.local.u8 	%r6837, [%rd299+1];
	shl.b32 	%r6838, %r6837, 16;
	or.b32  	%r6839, %r6838, %r6836;
	ld.local.u8 	%rs162, [%rd299+2];
	mul.wide.u16 	%r6840, %rs162, 256;
	or.b32  	%r6841, %r6839, %r6840;
	ld.local.u8 	%r6842, [%rd299+3];
	or.b32  	%r8152, %r6841, %r6842;
	ld.local.u8 	%r6843, [%rd299+4];
	shl.b32 	%r6844, %r6843, 24;
	ld.local.u8 	%r6845, [%rd299+5];
	shl.b32 	%r6846, %r6845, 16;
	or.b32  	%r6847, %r6846, %r6844;
	ld.local.u8 	%rs163, [%rd299+6];
	mul.wide.u16 	%r6848, %rs163, 256;
	or.b32  	%r6849, %r6847, %r6848;
	ld.local.u8 	%r6850, [%rd299+7];
	or.b32  	%r8151, %r6849, %r6850;
	ld.local.u8 	%r6851, [%rd299+8];
	shl.b32 	%r6852, %r6851, 24;
	ld.local.u8 	%r6853, [%rd299+9];
	shl.b32 	%r6854, %r6853, 16;
	or.b32  	%r6855, %r6854, %r6852;
	ld.local.u8 	%rs164, [%rd299+10];
	mul.wide.u16 	%r6856, %rs164, 256;
	or.b32  	%r6857, %r6855, %r6856;
	ld.local.u8 	%r6858, [%rd299+11];
	or.b32  	%r8150, %r6857, %r6858;
	ld.local.u8 	%r6859, [%rd299+12];
	shl.b32 	%r6860, %r6859, 24;
	ld.local.u8 	%r6861, [%rd299+13];
	shl.b32 	%r6862, %r6861, 16;
	or.b32  	%r6863, %r6862, %r6860;
	ld.local.u8 	%rs165, [%rd299+14];
	mul.wide.u16 	%r6864, %rs165, 256;
	or.b32  	%r6865, %r6863, %r6864;
	ld.local.u8 	%r6866, [%rd299+15];
	or.b32  	%r8149, %r6865, %r6866;
	ld.local.u8 	%r6867, [%rd299+16];
	shl.b32 	%r6868, %r6867, 24;
	ld.local.u8 	%r6869, [%rd299+17];
	shl.b32 	%r6870, %r6869, 16;
	or.b32  	%r6871, %r6870, %r6868;
	ld.local.u8 	%rs166, [%rd299+18];
	mul.wide.u16 	%r6872, %rs166, 256;
	or.b32  	%r6873, %r6871, %r6872;
	ld.local.u8 	%r6874, [%rd299+19];
	or.b32  	%r8148, %r6873, %r6874;
	ld.local.u8 	%r6875, [%rd299+20];
	shl.b32 	%r6876, %r6875, 24;
	ld.local.u8 	%r6877, [%rd299+21];
	shl.b32 	%r6878, %r6877, 16;
	or.b32  	%r6879, %r6878, %r6876;
	ld.local.u8 	%rs167, [%rd299+22];
	mul.wide.u16 	%r6880, %rs167, 256;
	or.b32  	%r6881, %r6879, %r6880;
	ld.local.u8 	%r6882, [%rd299+23];
	or.b32  	%r8147, %r6881, %r6882;
	ld.local.u8 	%r6883, [%rd299+24];
	shl.b32 	%r6884, %r6883, 24;
	ld.local.u8 	%r6885, [%rd299+25];
	shl.b32 	%r6886, %r6885, 16;
	or.b32  	%r6887, %r6886, %r6884;
	ld.local.u8 	%rs168, [%rd299+26];
	mul.wide.u16 	%r6888, %rs168, 256;
	or.b32  	%r6889, %r6887, %r6888;
	ld.local.u8 	%r6890, [%rd299+27];
	or.b32  	%r8146, %r6889, %r6890;
	ld.local.u8 	%r6891, [%rd299+28];
	shl.b32 	%r6892, %r6891, 24;
	ld.local.u8 	%r6893, [%rd299+29];
	shl.b32 	%r6894, %r6893, 16;
	or.b32  	%r6895, %r6894, %r6892;
	ld.local.u8 	%rs169, [%rd299+30];
	mul.wide.u16 	%r6896, %rs169, 256;
	or.b32  	%r6897, %r6895, %r6896;
	ld.local.u8 	%r6898, [%rd299+31];
	or.b32  	%r8145, %r6897, %r6898;
	ld.local.u8 	%r6899, [%rd299+32];
	shl.b32 	%r6900, %r6899, 24;
	ld.local.u8 	%r6901, [%rd299+33];
	shl.b32 	%r6902, %r6901, 16;
	or.b32  	%r6903, %r6902, %r6900;
	ld.local.u8 	%rs170, [%rd299+34];
	mul.wide.u16 	%r6904, %rs170, 256;
	or.b32  	%r6905, %r6903, %r6904;
	ld.local.u8 	%r6906, [%rd299+35];
	or.b32  	%r8144, %r6905, %r6906;
	ld.local.u8 	%r6907, [%rd299+36];
	shl.b32 	%r6908, %r6907, 24;
	ld.local.u8 	%r6909, [%rd299+37];
	shl.b32 	%r6910, %r6909, 16;
	or.b32  	%r6911, %r6910, %r6908;
	ld.local.u8 	%rs171, [%rd299+38];
	mul.wide.u16 	%r6912, %rs171, 256;
	or.b32  	%r6913, %r6911, %r6912;
	ld.local.u8 	%r6914, [%rd299+39];
	or.b32  	%r8143, %r6913, %r6914;
	ld.local.u8 	%r6915, [%rd299+40];
	shl.b32 	%r6916, %r6915, 24;
	ld.local.u8 	%r6917, [%rd299+41];
	shl.b32 	%r6918, %r6917, 16;
	or.b32  	%r6919, %r6918, %r6916;
	ld.local.u8 	%rs172, [%rd299+42];
	mul.wide.u16 	%r6920, %rs172, 256;
	or.b32  	%r6921, %r6919, %r6920;
	ld.local.u8 	%r6922, [%rd299+43];
	or.b32  	%r8142, %r6921, %r6922;
	ld.local.u8 	%r6923, [%rd299+44];
	shl.b32 	%r6924, %r6923, 24;
	ld.local.u8 	%r6925, [%rd299+45];
	shl.b32 	%r6926, %r6925, 16;
	or.b32  	%r6927, %r6926, %r6924;
	ld.local.u8 	%rs173, [%rd299+46];
	mul.wide.u16 	%r6928, %rs173, 256;
	or.b32  	%r6929, %r6927, %r6928;
	ld.local.u8 	%r6930, [%rd299+47];
	or.b32  	%r8141, %r6929, %r6930;
	ld.local.u8 	%r6931, [%rd299+48];
	shl.b32 	%r6932, %r6931, 24;
	ld.local.u8 	%r6933, [%rd299+49];
	shl.b32 	%r6934, %r6933, 16;
	or.b32  	%r6935, %r6934, %r6932;
	ld.local.u8 	%rs174, [%rd299+50];
	mul.wide.u16 	%r6936, %rs174, 256;
	or.b32  	%r6937, %r6935, %r6936;
	ld.local.u8 	%r6938, [%rd299+51];
	or.b32  	%r8140, %r6937, %r6938;
	ld.local.u8 	%r6939, [%rd299+52];
	shl.b32 	%r6940, %r6939, 24;
	ld.local.u8 	%r6941, [%rd299+53];
	shl.b32 	%r6942, %r6941, 16;
	or.b32  	%r6943, %r6942, %r6940;
	ld.local.u8 	%rs175, [%rd299+54];
	mul.wide.u16 	%r6944, %rs175, 256;
	or.b32  	%r6945, %r6943, %r6944;
	ld.local.u8 	%r6946, [%rd299+55];
	or.b32  	%r8139, %r6945, %r6946;
	ld.local.u8 	%r6947, [%rd299+56];
	shl.b32 	%r6948, %r6947, 24;
	ld.local.u8 	%r6949, [%rd299+57];
	shl.b32 	%r6950, %r6949, 16;
	or.b32  	%r6951, %r6950, %r6948;
	ld.local.u8 	%rs176, [%rd299+58];
	mul.wide.u16 	%r6952, %rs176, 256;
	or.b32  	%r6953, %r6951, %r6952;
	ld.local.u8 	%r6954, [%rd299+59];
	or.b32  	%r8138, %r6953, %r6954;
	ld.local.u8 	%r6955, [%rd299+60];
	shl.b32 	%r6956, %r6955, 24;
	ld.local.u8 	%r6957, [%rd299+61];
	shl.b32 	%r6958, %r6957, 16;
	or.b32  	%r6959, %r6958, %r6956;
	ld.local.u8 	%rs177, [%rd299+62];
	mul.wide.u16 	%r6960, %rs177, 256;
	or.b32  	%r6961, %r6959, %r6960;
	ld.local.u8 	%r6962, [%rd299+63];
	or.b32  	%r8137, %r6961, %r6962;
	bra.uni 	$L__BB4_79;

$L__BB4_78:
	ld.local.u32 	%r6963, [%rd299];
	shf.l.wrap.b32 	%r6964, %r6963, %r6963, 16;
	shl.b32 	%r6965, %r6964, 8;
	and.b32  	%r6966, %r6965, -16711936;
	shr.u32 	%r6967, %r6964, 8;
	and.b32  	%r6968, %r6967, 16711935;
	or.b32  	%r8152, %r6966, %r6968;
	ld.local.u32 	%r6969, [%rd299+4];
	shf.l.wrap.b32 	%r6970, %r6969, %r6969, 16;
	shl.b32 	%r6971, %r6970, 8;
	and.b32  	%r6972, %r6971, -16711936;
	shr.u32 	%r6973, %r6970, 8;
	and.b32  	%r6974, %r6973, 16711935;
	or.b32  	%r8151, %r6972, %r6974;
	ld.local.u32 	%r6975, [%rd299+8];
	shf.l.wrap.b32 	%r6976, %r6975, %r6975, 16;
	shl.b32 	%r6977, %r6976, 8;
	and.b32  	%r6978, %r6977, -16711936;
	shr.u32 	%r6979, %r6976, 8;
	and.b32  	%r6980, %r6979, 16711935;
	or.b32  	%r8150, %r6978, %r6980;
	ld.local.u32 	%r6981, [%rd299+12];
	shf.l.wrap.b32 	%r6982, %r6981, %r6981, 16;
	shl.b32 	%r6983, %r6982, 8;
	and.b32  	%r6984, %r6983, -16711936;
	shr.u32 	%r6985, %r6982, 8;
	and.b32  	%r6986, %r6985, 16711935;
	or.b32  	%r8149, %r6984, %r6986;
	ld.local.u32 	%r6987, [%rd299+16];
	shf.l.wrap.b32 	%r6988, %r6987, %r6987, 16;
	shl.b32 	%r6989, %r6988, 8;
	and.b32  	%r6990, %r6989, -16711936;
	shr.u32 	%r6991, %r6988, 8;
	and.b32  	%r6992, %r6991, 16711935;
	or.b32  	%r8148, %r6990, %r6992;
	ld.local.u32 	%r6993, [%rd299+20];
	shf.l.wrap.b32 	%r6994, %r6993, %r6993, 16;
	shl.b32 	%r6995, %r6994, 8;
	and.b32  	%r6996, %r6995, -16711936;
	shr.u32 	%r6997, %r6994, 8;
	and.b32  	%r6998, %r6997, 16711935;
	or.b32  	%r8147, %r6996, %r6998;
	ld.local.u32 	%r6999, [%rd299+24];
	shf.l.wrap.b32 	%r7000, %r6999, %r6999, 16;
	shl.b32 	%r7001, %r7000, 8;
	and.b32  	%r7002, %r7001, -16711936;
	shr.u32 	%r7003, %r7000, 8;
	and.b32  	%r7004, %r7003, 16711935;
	or.b32  	%r8146, %r7002, %r7004;
	ld.local.u32 	%r7005, [%rd299+28];
	shf.l.wrap.b32 	%r7006, %r7005, %r7005, 16;
	shl.b32 	%r7007, %r7006, 8;
	and.b32  	%r7008, %r7007, -16711936;
	shr.u32 	%r7009, %r7006, 8;
	and.b32  	%r7010, %r7009, 16711935;
	or.b32  	%r8145, %r7008, %r7010;
	ld.local.u32 	%r7011, [%rd299+32];
	shf.l.wrap.b32 	%r7012, %r7011, %r7011, 16;
	shl.b32 	%r7013, %r7012, 8;
	and.b32  	%r7014, %r7013, -16711936;
	shr.u32 	%r7015, %r7012, 8;
	and.b32  	%r7016, %r7015, 16711935;
	or.b32  	%r8144, %r7014, %r7016;
	ld.local.u32 	%r7017, [%rd299+36];
	shf.l.wrap.b32 	%r7018, %r7017, %r7017, 16;
	shl.b32 	%r7019, %r7018, 8;
	and.b32  	%r7020, %r7019, -16711936;
	shr.u32 	%r7021, %r7018, 8;
	and.b32  	%r7022, %r7021, 16711935;
	or.b32  	%r8143, %r7020, %r7022;
	ld.local.u32 	%r7023, [%rd299+40];
	shf.l.wrap.b32 	%r7024, %r7023, %r7023, 16;
	shl.b32 	%r7025, %r7024, 8;
	and.b32  	%r7026, %r7025, -16711936;
	shr.u32 	%r7027, %r7024, 8;
	and.b32  	%r7028, %r7027, 16711935;
	or.b32  	%r8142, %r7026, %r7028;
	ld.local.u32 	%r7029, [%rd299+44];
	shf.l.wrap.b32 	%r7030, %r7029, %r7029, 16;
	shl.b32 	%r7031, %r7030, 8;
	and.b32  	%r7032, %r7031, -16711936;
	shr.u32 	%r7033, %r7030, 8;
	and.b32  	%r7034, %r7033, 16711935;
	or.b32  	%r8141, %r7032, %r7034;
	ld.local.u32 	%r7035, [%rd299+48];
	shf.l.wrap.b32 	%r7036, %r7035, %r7035, 16;
	shl.b32 	%r7037, %r7036, 8;
	and.b32  	%r7038, %r7037, -16711936;
	shr.u32 	%r7039, %r7036, 8;
	and.b32  	%r7040, %r7039, 16711935;
	or.b32  	%r8140, %r7038, %r7040;
	ld.local.u32 	%r7041, [%rd299+52];
	shf.l.wrap.b32 	%r7042, %r7041, %r7041, 16;
	shl.b32 	%r7043, %r7042, 8;
	and.b32  	%r7044, %r7043, -16711936;
	shr.u32 	%r7045, %r7042, 8;
	and.b32  	%r7046, %r7045, 16711935;
	or.b32  	%r8139, %r7044, %r7046;
	ld.local.u32 	%r7047, [%rd299+56];
	shf.l.wrap.b32 	%r7048, %r7047, %r7047, 16;
	shl.b32 	%r7049, %r7048, 8;
	and.b32  	%r7050, %r7049, -16711936;
	shr.u32 	%r7051, %r7048, 8;
	and.b32  	%r7052, %r7051, 16711935;
	or.b32  	%r8138, %r7050, %r7052;
	ld.local.u32 	%r7053, [%rd299+60];
	shf.l.wrap.b32 	%r7054, %r7053, %r7053, 16;
	shl.b32 	%r7055, %r7054, 8;
	and.b32  	%r7056, %r7055, -16711936;
	shr.u32 	%r7057, %r7054, 8;
	and.b32  	%r7058, %r7057, 16711935;
	or.b32  	%r8137, %r7056, %r7058;

$L__BB4_79:
	ld.local.u32 	%r7064, [%rd31+4];
	shf.l.wrap.b32 	%r7379, %r7064, %r7064, 5;
	ld.local.u32 	%r7062, [%rd31+16];
	ld.local.u32 	%r7061, [%rd31+12];
	ld.local.u32 	%r7060, [%rd31+8];
	// begin inline asm
	lop3.b32 %r7059, %r7060, %r7061, %r7062, 202;
	// end inline asm
	add.s32 	%r7380, %r8152, %r7379;
	ld.local.u32 	%r7381, [%rd31+20];
	add.s32 	%r7382, %r7380, %r7381;
	add.s32 	%r7383, %r7382, %r7059;
	add.s32 	%r7068, %r7383, 1518500249;
	shf.l.wrap.b32 	%r7070, %r7060, %r7060, 30;
	shf.l.wrap.b32 	%r7384, %r7068, %r7068, 5;
	// begin inline asm
	lop3.b32 %r7063, %r7064, %r7070, %r7061, 202;
	// end inline asm
	add.s32 	%r7385, %r8151, %r7062;
	add.s32 	%r7386, %r7385, %r7063;
	add.s32 	%r7387, %r7386, %r7384;
	add.s32 	%r7072, %r7387, 1518500249;
	shf.l.wrap.b32 	%r7074, %r7064, %r7064, 30;
	shf.l.wrap.b32 	%r7388, %r7072, %r7072, 5;
	// begin inline asm
	lop3.b32 %r7067, %r7068, %r7074, %r7070, 202;
	// end inline asm
	add.s32 	%r7389, %r8150, %r7061;
	add.s32 	%r7390, %r7389, %r7067;
	add.s32 	%r7391, %r7390, %r7388;
	add.s32 	%r7076, %r7391, 1518500249;
	shf.l.wrap.b32 	%r7078, %r7068, %r7068, 30;
	shf.l.wrap.b32 	%r7392, %r7076, %r7076, 5;
	// begin inline asm
	lop3.b32 %r7071, %r7072, %r7078, %r7074, 202;
	// end inline asm
	add.s32 	%r7393, %r8149, %r7070;
	add.s32 	%r7394, %r7393, %r7071;
	add.s32 	%r7395, %r7394, %r7392;
	add.s32 	%r7080, %r7395, 1518500249;
	shf.l.wrap.b32 	%r7082, %r7072, %r7072, 30;
	shf.l.wrap.b32 	%r7396, %r7080, %r7080, 5;
	// begin inline asm
	lop3.b32 %r7075, %r7076, %r7082, %r7078, 202;
	// end inline asm
	add.s32 	%r7397, %r8148, %r7074;
	add.s32 	%r7398, %r7397, %r7075;
	add.s32 	%r7399, %r7398, %r7396;
	add.s32 	%r7084, %r7399, 1518500249;
	shf.l.wrap.b32 	%r7086, %r7076, %r7076, 30;
	shf.l.wrap.b32 	%r7400, %r7084, %r7084, 5;
	// begin inline asm
	lop3.b32 %r7079, %r7080, %r7086, %r7082, 202;
	// end inline asm
	add.s32 	%r7401, %r8147, %r7079;
	add.s32 	%r7402, %r7401, %r7078;
	add.s32 	%r7403, %r7402, %r7400;
	add.s32 	%r7088, %r7403, 1518500249;
	shf.l.wrap.b32 	%r7090, %r7080, %r7080, 30;
	shf.l.wrap.b32 	%r7404, %r7088, %r7088, 5;
	// begin inline asm
	lop3.b32 %r7083, %r7084, %r7090, %r7086, 202;
	// end inline asm
	add.s32 	%r7405, %r8146, %r7083;
	add.s32 	%r7406, %r7405, %r7082;
	add.s32 	%r7407, %r7406, %r7404;
	add.s32 	%r7092, %r7407, 1518500249;
	shf.l.wrap.b32 	%r7094, %r7084, %r7084, 30;
	shf.l.wrap.b32 	%r7408, %r7092, %r7092, 5;
	// begin inline asm
	lop3.b32 %r7087, %r7088, %r7094, %r7090, 202;
	// end inline asm
	add.s32 	%r7409, %r8145, %r7087;
	add.s32 	%r7410, %r7409, %r7086;
	add.s32 	%r7411, %r7410, %r7408;
	add.s32 	%r7096, %r7411, 1518500249;
	shf.l.wrap.b32 	%r7098, %r7088, %r7088, 30;
	shf.l.wrap.b32 	%r7412, %r7096, %r7096, 5;
	// begin inline asm
	lop3.b32 %r7091, %r7092, %r7098, %r7094, 202;
	// end inline asm
	add.s32 	%r7413, %r8144, %r7091;
	add.s32 	%r7414, %r7413, %r7090;
	add.s32 	%r7415, %r7414, %r7412;
	add.s32 	%r7100, %r7415, 1518500249;
	shf.l.wrap.b32 	%r7102, %r7092, %r7092, 30;
	shf.l.wrap.b32 	%r7416, %r7100, %r7100, 5;
	// begin inline asm
	lop3.b32 %r7095, %r7096, %r7102, %r7098, 202;
	// end inline asm
	add.s32 	%r7417, %r8143, %r7095;
	add.s32 	%r7418, %r7417, %r7094;
	add.s32 	%r7419, %r7418, %r7416;
	add.s32 	%r7104, %r7419, 1518500249;
	shf.l.wrap.b32 	%r7106, %r7096, %r7096, 30;
	shf.l.wrap.b32 	%r7420, %r7104, %r7104, 5;
	// begin inline asm
	lop3.b32 %r7099, %r7100, %r7106, %r7102, 202;
	// end inline asm
	add.s32 	%r7421, %r8142, %r7099;
	add.s32 	%r7422, %r7421, %r7098;
	add.s32 	%r7423, %r7422, %r7420;
	add.s32 	%r7108, %r7423, 1518500249;
	shf.l.wrap.b32 	%r7110, %r7100, %r7100, 30;
	shf.l.wrap.b32 	%r7424, %r7108, %r7108, 5;
	// begin inline asm
	lop3.b32 %r7103, %r7104, %r7110, %r7106, 202;
	// end inline asm
	add.s32 	%r7425, %r8141, %r7103;
	add.s32 	%r7426, %r7425, %r7102;
	add.s32 	%r7427, %r7426, %r7424;
	add.s32 	%r7112, %r7427, 1518500249;
	shf.l.wrap.b32 	%r7114, %r7104, %r7104, 30;
	shf.l.wrap.b32 	%r7428, %r7112, %r7112, 5;
	// begin inline asm
	lop3.b32 %r7107, %r7108, %r7114, %r7110, 202;
	// end inline asm
	add.s32 	%r7429, %r8140, %r7107;
	add.s32 	%r7430, %r7429, %r7106;
	add.s32 	%r7431, %r7430, %r7428;
	add.s32 	%r7116, %r7431, 1518500249;
	shf.l.wrap.b32 	%r7118, %r7108, %r7108, 30;
	shf.l.wrap.b32 	%r7432, %r7116, %r7116, 5;
	// begin inline asm
	lop3.b32 %r7111, %r7112, %r7118, %r7114, 202;
	// end inline asm
	add.s32 	%r7433, %r8139, %r7111;
	add.s32 	%r7434, %r7433, %r7110;
	add.s32 	%r7435, %r7434, %r7432;
	add.s32 	%r7120, %r7435, 1518500249;
	shf.l.wrap.b32 	%r7122, %r7112, %r7112, 30;
	shf.l.wrap.b32 	%r7436, %r7120, %r7120, 5;
	// begin inline asm
	lop3.b32 %r7115, %r7116, %r7122, %r7118, 202;
	// end inline asm
	add.s32 	%r7437, %r8138, %r7115;
	add.s32 	%r7438, %r7437, %r7114;
	add.s32 	%r7439, %r7438, %r7436;
	add.s32 	%r7124, %r7439, 1518500249;
	shf.l.wrap.b32 	%r7126, %r7116, %r7116, 30;
	shf.l.wrap.b32 	%r7440, %r7124, %r7124, 5;
	// begin inline asm
	lop3.b32 %r7119, %r7120, %r7126, %r7122, 202;
	// end inline asm
	add.s32 	%r7441, %r8137, %r7119;
	add.s32 	%r7442, %r7441, %r7118;
	add.s32 	%r7443, %r7442, %r7440;
	add.s32 	%r7128, %r7443, 1518500249;
	shf.l.wrap.b32 	%r7130, %r7120, %r7120, 30;
	shf.l.wrap.b32 	%r7444, %r7128, %r7128, 5;
	// begin inline asm
	lop3.b32 %r7123, %r7124, %r7130, %r7126, 202;
	// end inline asm
	xor.b32  	%r7445, %r8144, %r8139;
	xor.b32  	%r7446, %r7445, %r8150;
	xor.b32  	%r7447, %r7446, %r8152;
	shf.l.wrap.b32 	%r7448, %r7447, %r7447, 1;
	add.s32 	%r7449, %r7448, %r7123;
	add.s32 	%r7450, %r7449, %r7122;
	add.s32 	%r7451, %r7450, %r7444;
	add.s32 	%r7132, %r7451, 1518500249;
	shf.l.wrap.b32 	%r7134, %r7124, %r7124, 30;
	shf.l.wrap.b32 	%r7452, %r7132, %r7132, 5;
	// begin inline asm
	lop3.b32 %r7127, %r7128, %r7134, %r7130, 202;
	// end inline asm
	xor.b32  	%r7453, %r8143, %r8138;
	xor.b32  	%r7454, %r7453, %r8149;
	xor.b32  	%r7455, %r7454, %r8151;
	shf.l.wrap.b32 	%r7456, %r7455, %r7455, 1;
	add.s32 	%r7457, %r7456, %r7127;
	add.s32 	%r7458, %r7457, %r7126;
	add.s32 	%r7459, %r7458, %r7452;
	add.s32 	%r7136, %r7459, 1518500249;
	shf.l.wrap.b32 	%r7138, %r7128, %r7128, 30;
	shf.l.wrap.b32 	%r7460, %r7136, %r7136, 5;
	// begin inline asm
	lop3.b32 %r7131, %r7132, %r7138, %r7134, 202;
	// end inline asm
	xor.b32  	%r7461, %r8142, %r8137;
	xor.b32  	%r7462, %r7461, %r8148;
	xor.b32  	%r7463, %r7462, %r8150;
	shf.l.wrap.b32 	%r7464, %r7463, %r7463, 1;
	add.s32 	%r7465, %r7464, %r7131;
	add.s32 	%r7466, %r7465, %r7130;
	add.s32 	%r7467, %r7466, %r7460;
	add.s32 	%r7140, %r7467, 1518500249;
	shf.l.wrap.b32 	%r7142, %r7132, %r7132, 30;
	shf.l.wrap.b32 	%r7468, %r7140, %r7140, 5;
	// begin inline asm
	lop3.b32 %r7135, %r7136, %r7142, %r7138, 202;
	// end inline asm
	xor.b32  	%r7469, %r8147, %r8141;
	xor.b32  	%r7470, %r7469, %r8149;
	xor.b32  	%r7471, %r7470, %r7448;
	shf.l.wrap.b32 	%r7472, %r7471, %r7471, 1;
	add.s32 	%r7473, %r7472, %r7135;
	add.s32 	%r7474, %r7473, %r7134;
	add.s32 	%r7475, %r7474, %r7468;
	add.s32 	%r7144, %r7475, 1518500249;
	shf.l.wrap.b32 	%r7146, %r7136, %r7136, 30;
	shf.l.wrap.b32 	%r7476, %r7144, %r7144, 5;
	// begin inline asm
	lop3.b32 %r7139, %r7140, %r7146, %r7142, 150;
	// end inline asm
	xor.b32  	%r7477, %r8146, %r8140;
	xor.b32  	%r7478, %r7477, %r8148;
	xor.b32  	%r7479, %r7478, %r7456;
	shf.l.wrap.b32 	%r7480, %r7479, %r7479, 1;
	add.s32 	%r7481, %r7480, %r7139;
	add.s32 	%r7482, %r7481, %r7138;
	add.s32 	%r7483, %r7482, %r7476;
	add.s32 	%r7148, %r7483, 1859775393;
	shf.l.wrap.b32 	%r7150, %r7140, %r7140, 30;
	shf.l.wrap.b32 	%r7484, %r7148, %r7148, 5;
	// begin inline asm
	lop3.b32 %r7143, %r7144, %r7150, %r7146, 150;
	// end inline asm
	xor.b32  	%r7485, %r8145, %r8139;
	xor.b32  	%r7486, %r7485, %r8147;
	xor.b32  	%r7487, %r7486, %r7464;
	shf.l.wrap.b32 	%r7488, %r7487, %r7487, 1;
	add.s32 	%r7489, %r7488, %r7143;
	add.s32 	%r7490, %r7489, %r7142;
	add.s32 	%r7491, %r7490, %r7484;
	add.s32 	%r7152, %r7491, 1859775393;
	shf.l.wrap.b32 	%r7154, %r7144, %r7144, 30;
	shf.l.wrap.b32 	%r7492, %r7152, %r7152, 5;
	// begin inline asm
	lop3.b32 %r7147, %r7148, %r7154, %r7150, 150;
	// end inline asm
	xor.b32  	%r7493, %r8144, %r8138;
	xor.b32  	%r7494, %r7493, %r8146;
	xor.b32  	%r7495, %r7494, %r7472;
	shf.l.wrap.b32 	%r7496, %r7495, %r7495, 1;
	add.s32 	%r7497, %r7496, %r7147;
	add.s32 	%r7498, %r7497, %r7146;
	add.s32 	%r7499, %r7498, %r7492;
	add.s32 	%r7156, %r7499, 1859775393;
	shf.l.wrap.b32 	%r7158, %r7148, %r7148, 30;
	shf.l.wrap.b32 	%r7500, %r7156, %r7156, 5;
	// begin inline asm
	lop3.b32 %r7151, %r7152, %r7158, %r7154, 150;
	// end inline asm
	xor.b32  	%r7501, %r8143, %r8137;
	xor.b32  	%r7502, %r7501, %r8145;
	xor.b32  	%r7503, %r7502, %r7480;
	shf.l.wrap.b32 	%r7504, %r7503, %r7503, 1;
	add.s32 	%r7505, %r7504, %r7151;
	add.s32 	%r7506, %r7505, %r7150;
	add.s32 	%r7507, %r7506, %r7500;
	add.s32 	%r7160, %r7507, 1859775393;
	shf.l.wrap.b32 	%r7162, %r7152, %r7152, 30;
	shf.l.wrap.b32 	%r7508, %r7160, %r7160, 5;
	// begin inline asm
	lop3.b32 %r7155, %r7156, %r7162, %r7158, 150;
	// end inline asm
	xor.b32  	%r7509, %r8144, %r8142;
	xor.b32  	%r7510, %r7509, %r7448;
	xor.b32  	%r7511, %r7510, %r7488;
	shf.l.wrap.b32 	%r7512, %r7511, %r7511, 1;
	add.s32 	%r7513, %r7512, %r7155;
	add.s32 	%r7514, %r7513, %r7154;
	add.s32 	%r7515, %r7514, %r7508;
	add.s32 	%r7164, %r7515, 1859775393;
	shf.l.wrap.b32 	%r7166, %r7156, %r7156, 30;
	shf.l.wrap.b32 	%r7516, %r7164, %r7164, 5;
	// begin inline asm
	lop3.b32 %r7159, %r7160, %r7166, %r7162, 150;
	// end inline asm
	xor.b32  	%r7517, %r8143, %r8141;
	xor.b32  	%r7518, %r7517, %r7456;
	xor.b32  	%r7519, %r7518, %r7496;
	shf.l.wrap.b32 	%r7520, %r7519, %r7519, 1;
	add.s32 	%r7521, %r7520, %r7159;
	add.s32 	%r7522, %r7521, %r7158;
	add.s32 	%r7523, %r7522, %r7516;
	add.s32 	%r7168, %r7523, 1859775393;
	shf.l.wrap.b32 	%r7170, %r7160, %r7160, 30;
	shf.l.wrap.b32 	%r7524, %r7168, %r7168, 5;
	// begin inline asm
	lop3.b32 %r7163, %r7164, %r7170, %r7166, 150;
	// end inline asm
	xor.b32  	%r7525, %r8142, %r8140;
	xor.b32  	%r7526, %r7525, %r7464;
	xor.b32  	%r7527, %r7526, %r7504;
	shf.l.wrap.b32 	%r7528, %r7527, %r7527, 1;
	add.s32 	%r7529, %r7528, %r7163;
	add.s32 	%r7530, %r7529, %r7162;
	add.s32 	%r7531, %r7530, %r7524;
	add.s32 	%r7172, %r7531, 1859775393;
	shf.l.wrap.b32 	%r7174, %r7164, %r7164, 30;
	shf.l.wrap.b32 	%r7532, %r7172, %r7172, 5;
	// begin inline asm
	lop3.b32 %r7167, %r7168, %r7174, %r7170, 150;
	// end inline asm
	xor.b32  	%r7533, %r8141, %r8139;
	xor.b32  	%r7534, %r7533, %r7472;
	xor.b32  	%r7535, %r7534, %r7512;
	shf.l.wrap.b32 	%r7536, %r7535, %r7535, 1;
	add.s32 	%r7537, %r7536, %r7167;
	add.s32 	%r7538, %r7537, %r7166;
	add.s32 	%r7539, %r7538, %r7532;
	add.s32 	%r7176, %r7539, 1859775393;
	shf.l.wrap.b32 	%r7178, %r7168, %r7168, 30;
	shf.l.wrap.b32 	%r7540, %r7176, %r7176, 5;
	// begin inline asm
	lop3.b32 %r7171, %r7172, %r7178, %r7174, 150;
	// end inline asm
	xor.b32  	%r7541, %r8140, %r8138;
	xor.b32  	%r7542, %r7541, %r7480;
	xor.b32  	%r7543, %r7542, %r7520;
	shf.l.wrap.b32 	%r7544, %r7543, %r7543, 1;
	add.s32 	%r7545, %r7544, %r7171;
	add.s32 	%r7546, %r7545, %r7170;
	add.s32 	%r7547, %r7546, %r7540;
	add.s32 	%r7180, %r7547, 1859775393;
	shf.l.wrap.b32 	%r7182, %r7172, %r7172, 30;
	shf.l.wrap.b32 	%r7548, %r7180, %r7180, 5;
	// begin inline asm
	lop3.b32 %r7175, %r7176, %r7182, %r7178, 150;
	// end inline asm
	xor.b32  	%r7549, %r8139, %r8137;
	xor.b32  	%r7550, %r7549, %r7488;
	xor.b32  	%r7551, %r7550, %r7528;
	shf.l.wrap.b32 	%r7552, %r7551, %r7551, 1;
	add.s32 	%r7553, %r7552, %r7175;
	add.s32 	%r7554, %r7553, %r7174;
	add.s32 	%r7555, %r7554, %r7548;
	add.s32 	%r7184, %r7555, 1859775393;
	shf.l.wrap.b32 	%r7186, %r7176, %r7176, 30;
	shf.l.wrap.b32 	%r7556, %r7184, %r7184, 5;
	// begin inline asm
	lop3.b32 %r7179, %r7180, %r7186, %r7182, 150;
	// end inline asm
	xor.b32  	%r7557, %r7448, %r8138;
	xor.b32  	%r7558, %r7557, %r7496;
	xor.b32  	%r7559, %r7558, %r7536;
	shf.l.wrap.b32 	%r7560, %r7559, %r7559, 1;
	add.s32 	%r7561, %r7560, %r7179;
	add.s32 	%r7562, %r7561, %r7178;
	add.s32 	%r7563, %r7562, %r7556;
	add.s32 	%r7188, %r7563, 1859775393;
	shf.l.wrap.b32 	%r7190, %r7180, %r7180, 30;
	shf.l.wrap.b32 	%r7564, %r7188, %r7188, 5;
	// begin inline asm
	lop3.b32 %r7183, %r7184, %r7190, %r7186, 150;
	// end inline asm
	xor.b32  	%r7565, %r7456, %r8137;
	xor.b32  	%r7566, %r7565, %r7504;
	xor.b32  	%r7567, %r7566, %r7544;
	shf.l.wrap.b32 	%r7568, %r7567, %r7567, 1;
	add.s32 	%r7569, %r7568, %r7183;
	add.s32 	%r7570, %r7569, %r7182;
	add.s32 	%r7571, %r7570, %r7564;
	add.s32 	%r7192, %r7571, 1859775393;
	shf.l.wrap.b32 	%r7194, %r7184, %r7184, 30;
	shf.l.wrap.b32 	%r7572, %r7192, %r7192, 5;
	// begin inline asm
	lop3.b32 %r7187, %r7188, %r7194, %r7190, 150;
	// end inline asm
	xor.b32  	%r7573, %r7448, %r7464;
	xor.b32  	%r7574, %r7573, %r7512;
	xor.b32  	%r7575, %r7574, %r7552;
	shf.l.wrap.b32 	%r7576, %r7575, %r7575, 1;
	add.s32 	%r7577, %r7576, %r7187;
	add.s32 	%r7578, %r7577, %r7186;
	add.s32 	%r7579, %r7578, %r7572;
	add.s32 	%r7196, %r7579, 1859775393;
	shf.l.wrap.b32 	%r7198, %r7188, %r7188, 30;
	shf.l.wrap.b32 	%r7580, %r7196, %r7196, 5;
	// begin inline asm
	lop3.b32 %r7191, %r7192, %r7198, %r7194, 150;
	// end inline asm
	xor.b32  	%r7581, %r7472, %r7456;
	xor.b32  	%r7582, %r7581, %r7520;
	xor.b32  	%r7583, %r7582, %r7560;
	shf.l.wrap.b32 	%r7584, %r7583, %r7583, 1;
	add.s32 	%r7585, %r7584, %r7191;
	add.s32 	%r7586, %r7585, %r7190;
	add.s32 	%r7587, %r7586, %r7580;
	add.s32 	%r7200, %r7587, 1859775393;
	shf.l.wrap.b32 	%r7202, %r7192, %r7192, 30;
	shf.l.wrap.b32 	%r7588, %r7200, %r7200, 5;
	// begin inline asm
	lop3.b32 %r7195, %r7196, %r7202, %r7198, 150;
	// end inline asm
	xor.b32  	%r7589, %r7480, %r7464;
	xor.b32  	%r7590, %r7589, %r7528;
	xor.b32  	%r7591, %r7590, %r7568;
	shf.l.wrap.b32 	%r7592, %r7591, %r7591, 1;
	add.s32 	%r7593, %r7592, %r7195;
	add.s32 	%r7594, %r7593, %r7194;
	add.s32 	%r7595, %r7594, %r7588;
	add.s32 	%r7204, %r7595, 1859775393;
	shf.l.wrap.b32 	%r7206, %r7196, %r7196, 30;
	shf.l.wrap.b32 	%r7596, %r7204, %r7204, 5;
	// begin inline asm
	lop3.b32 %r7199, %r7200, %r7206, %r7202, 150;
	// end inline asm
	xor.b32  	%r7597, %r7472, %r7488;
	xor.b32  	%r7598, %r7597, %r7536;
	xor.b32  	%r7599, %r7598, %r7576;
	shf.l.wrap.b32 	%r7600, %r7599, %r7599, 1;
	add.s32 	%r7601, %r7600, %r7199;
	add.s32 	%r7602, %r7601, %r7198;
	add.s32 	%r7603, %r7602, %r7596;
	add.s32 	%r7208, %r7603, 1859775393;
	shf.l.wrap.b32 	%r7210, %r7200, %r7200, 30;
	shf.l.wrap.b32 	%r7604, %r7208, %r7208, 5;
	// begin inline asm
	lop3.b32 %r7203, %r7204, %r7210, %r7206, 150;
	// end inline asm
	xor.b32  	%r7605, %r7496, %r7480;
	xor.b32  	%r7606, %r7605, %r7544;
	xor.b32  	%r7607, %r7606, %r7584;
	shf.l.wrap.b32 	%r7608, %r7607, %r7607, 1;
	add.s32 	%r7609, %r7608, %r7203;
	add.s32 	%r7610, %r7609, %r7202;
	add.s32 	%r7611, %r7610, %r7604;
	add.s32 	%r7212, %r7611, 1859775393;
	shf.l.wrap.b32 	%r7214, %r7204, %r7204, 30;
	shf.l.wrap.b32 	%r7612, %r7212, %r7212, 5;
	// begin inline asm
	lop3.b32 %r7207, %r7208, %r7214, %r7210, 150;
	// end inline asm
	xor.b32  	%r7613, %r7504, %r7488;
	xor.b32  	%r7614, %r7613, %r7552;
	xor.b32  	%r7615, %r7614, %r7592;
	shf.l.wrap.b32 	%r7616, %r7615, %r7615, 1;
	add.s32 	%r7617, %r7616, %r7207;
	add.s32 	%r7618, %r7617, %r7206;
	add.s32 	%r7619, %r7618, %r7612;
	add.s32 	%r7216, %r7619, 1859775393;
	shf.l.wrap.b32 	%r7218, %r7208, %r7208, 30;
	shf.l.wrap.b32 	%r7620, %r7216, %r7216, 5;
	// begin inline asm
	lop3.b32 %r7211, %r7212, %r7218, %r7214, 150;
	// end inline asm
	xor.b32  	%r7621, %r7496, %r7512;
	xor.b32  	%r7622, %r7621, %r7560;
	xor.b32  	%r7623, %r7622, %r7600;
	shf.l.wrap.b32 	%r7624, %r7623, %r7623, 1;
	add.s32 	%r7625, %r7624, %r7211;
	add.s32 	%r7626, %r7625, %r7210;
	add.s32 	%r7627, %r7626, %r7620;
	add.s32 	%r7220, %r7627, 1859775393;
	shf.l.wrap.b32 	%r7222, %r7212, %r7212, 30;
	shf.l.wrap.b32 	%r7628, %r7220, %r7220, 5;
	// begin inline asm
	lop3.b32 %r7215, %r7216, %r7222, %r7218, 150;
	// end inline asm
	xor.b32  	%r7629, %r7520, %r7504;
	xor.b32  	%r7630, %r7629, %r7568;
	xor.b32  	%r7631, %r7630, %r7608;
	shf.l.wrap.b32 	%r7632, %r7631, %r7631, 1;
	add.s32 	%r7633, %r7632, %r7215;
	add.s32 	%r7634, %r7633, %r7214;
	add.s32 	%r7635, %r7634, %r7628;
	add.s32 	%r7224, %r7635, 1859775393;
	shf.l.wrap.b32 	%r7226, %r7216, %r7216, 30;
	shf.l.wrap.b32 	%r7636, %r7224, %r7224, 5;
	// begin inline asm
	lop3.b32 %r7219, %r7220, %r7226, %r7222, 232;
	// end inline asm
	xor.b32  	%r7637, %r7528, %r7512;
	xor.b32  	%r7638, %r7637, %r7576;
	xor.b32  	%r7639, %r7638, %r7616;
	shf.l.wrap.b32 	%r7640, %r7639, %r7639, 1;
	add.s32 	%r7641, %r7640, %r7219;
	add.s32 	%r7642, %r7641, %r7218;
	add.s32 	%r7643, %r7642, %r7636;
	add.s32 	%r7228, %r7643, -1894007588;
	shf.l.wrap.b32 	%r7230, %r7220, %r7220, 30;
	shf.l.wrap.b32 	%r7644, %r7228, %r7228, 5;
	// begin inline asm
	lop3.b32 %r7223, %r7224, %r7230, %r7226, 232;
	// end inline asm
	xor.b32  	%r7645, %r7520, %r7536;
	xor.b32  	%r7646, %r7645, %r7584;
	xor.b32  	%r7647, %r7646, %r7624;
	shf.l.wrap.b32 	%r7648, %r7647, %r7647, 1;
	add.s32 	%r7649, %r7648, %r7223;
	add.s32 	%r7650, %r7649, %r7222;
	add.s32 	%r7651, %r7650, %r7644;
	add.s32 	%r7232, %r7651, -1894007588;
	shf.l.wrap.b32 	%r7234, %r7224, %r7224, 30;
	shf.l.wrap.b32 	%r7652, %r7232, %r7232, 5;
	// begin inline asm
	lop3.b32 %r7227, %r7228, %r7234, %r7230, 232;
	// end inline asm
	xor.b32  	%r7653, %r7544, %r7528;
	xor.b32  	%r7654, %r7653, %r7592;
	xor.b32  	%r7655, %r7654, %r7632;
	shf.l.wrap.b32 	%r7656, %r7655, %r7655, 1;
	add.s32 	%r7657, %r7656, %r7227;
	add.s32 	%r7658, %r7657, %r7226;
	add.s32 	%r7659, %r7658, %r7652;
	add.s32 	%r7236, %r7659, -1894007588;
	shf.l.wrap.b32 	%r7238, %r7228, %r7228, 30;
	shf.l.wrap.b32 	%r7660, %r7236, %r7236, 5;
	// begin inline asm
	lop3.b32 %r7231, %r7232, %r7238, %r7234, 232;
	// end inline asm
	xor.b32  	%r7661, %r7552, %r7536;
	xor.b32  	%r7662, %r7661, %r7600;
	xor.b32  	%r7663, %r7662, %r7640;
	shf.l.wrap.b32 	%r7664, %r7663, %r7663, 1;
	add.s32 	%r7665, %r7664, %r7231;
	add.s32 	%r7666, %r7665, %r7230;
	add.s32 	%r7667, %r7666, %r7660;
	add.s32 	%r7240, %r7667, -1894007588;
	shf.l.wrap.b32 	%r7242, %r7232, %r7232, 30;
	shf.l.wrap.b32 	%r7668, %r7240, %r7240, 5;
	// begin inline asm
	lop3.b32 %r7235, %r7236, %r7242, %r7238, 232;
	// end inline asm
	xor.b32  	%r7669, %r7544, %r7560;
	xor.b32  	%r7670, %r7669, %r7608;
	xor.b32  	%r7671, %r7670, %r7648;
	shf.l.wrap.b32 	%r7672, %r7671, %r7671, 1;
	add.s32 	%r7673, %r7672, %r7235;
	add.s32 	%r7674, %r7673, %r7234;
	add.s32 	%r7675, %r7674, %r7668;
	add.s32 	%r7244, %r7675, -1894007588;
	shf.l.wrap.b32 	%r7246, %r7236, %r7236, 30;
	shf.l.wrap.b32 	%r7676, %r7244, %r7244, 5;
	// begin inline asm
	lop3.b32 %r7239, %r7240, %r7246, %r7242, 232;
	// end inline asm
	xor.b32  	%r7677, %r7568, %r7552;
	xor.b32  	%r7678, %r7677, %r7616;
	xor.b32  	%r7679, %r7678, %r7656;
	shf.l.wrap.b32 	%r7680, %r7679, %r7679, 1;
	add.s32 	%r7681, %r7680, %r7239;
	add.s32 	%r7682, %r7681, %r7238;
	add.s32 	%r7683, %r7682, %r7676;
	add.s32 	%r7248, %r7683, -1894007588;
	shf.l.wrap.b32 	%r7250, %r7240, %r7240, 30;
	shf.l.wrap.b32 	%r7684, %r7248, %r7248, 5;
	// begin inline asm
	lop3.b32 %r7243, %r7244, %r7250, %r7246, 232;
	// end inline asm
	xor.b32  	%r7685, %r7576, %r7560;
	xor.b32  	%r7686, %r7685, %r7624;
	xor.b32  	%r7687, %r7686, %r7664;
	shf.l.wrap.b32 	%r7688, %r7687, %r7687, 1;
	add.s32 	%r7689, %r7688, %r7243;
	add.s32 	%r7690, %r7689, %r7242;
	add.s32 	%r7691, %r7690, %r7684;
	add.s32 	%r7252, %r7691, -1894007588;
	shf.l.wrap.b32 	%r7254, %r7244, %r7244, 30;
	shf.l.wrap.b32 	%r7692, %r7252, %r7252, 5;
	// begin inline asm
	lop3.b32 %r7247, %r7248, %r7254, %r7250, 232;
	// end inline asm
	xor.b32  	%r7693, %r7568, %r7584;
	xor.b32  	%r7694, %r7693, %r7632;
	xor.b32  	%r7695, %r7694, %r7672;
	shf.l.wrap.b32 	%r7696, %r7695, %r7695, 1;
	add.s32 	%r7697, %r7696, %r7247;
	add.s32 	%r7698, %r7697, %r7246;
	add.s32 	%r7699, %r7698, %r7692;
	add.s32 	%r7256, %r7699, -1894007588;
	shf.l.wrap.b32 	%r7258, %r7248, %r7248, 30;
	shf.l.wrap.b32 	%r7700, %r7256, %r7256, 5;
	// begin inline asm
	lop3.b32 %r7251, %r7252, %r7258, %r7254, 232;
	// end inline asm
	xor.b32  	%r7701, %r7592, %r7576;
	xor.b32  	%r7702, %r7701, %r7640;
	xor.b32  	%r7703, %r7702, %r7680;
	shf.l.wrap.b32 	%r7704, %r7703, %r7703, 1;
	add.s32 	%r7705, %r7704, %r7251;
	add.s32 	%r7706, %r7705, %r7250;
	add.s32 	%r7707, %r7706, %r7700;
	add.s32 	%r7260, %r7707, -1894007588;
	shf.l.wrap.b32 	%r7262, %r7252, %r7252, 30;
	shf.l.wrap.b32 	%r7708, %r7260, %r7260, 5;
	// begin inline asm
	lop3.b32 %r7255, %r7256, %r7262, %r7258, 232;
	// end inline asm
	xor.b32  	%r7709, %r7600, %r7584;
	xor.b32  	%r7710, %r7709, %r7648;
	xor.b32  	%r7711, %r7710, %r7688;
	shf.l.wrap.b32 	%r7712, %r7711, %r7711, 1;
	add.s32 	%r7713, %r7712, %r7255;
	add.s32 	%r7714, %r7713, %r7254;
	add.s32 	%r7715, %r7714, %r7708;
	add.s32 	%r7264, %r7715, -1894007588;
	shf.l.wrap.b32 	%r7266, %r7256, %r7256, 30;
	shf.l.wrap.b32 	%r7716, %r7264, %r7264, 5;
	// begin inline asm
	lop3.b32 %r7259, %r7260, %r7266, %r7262, 232;
	// end inline asm
	xor.b32  	%r7717, %r7592, %r7608;
	xor.b32  	%r7718, %r7717, %r7656;
	xor.b32  	%r7719, %r7718, %r7696;
	shf.l.wrap.b32 	%r7720, %r7719, %r7719, 1;
	add.s32 	%r7721, %r7720, %r7259;
	add.s32 	%r7722, %r7721, %r7258;
	add.s32 	%r7723, %r7722, %r7716;
	add.s32 	%r7268, %r7723, -1894007588;
	shf.l.wrap.b32 	%r7270, %r7260, %r7260, 30;
	shf.l.wrap.b32 	%r7724, %r7268, %r7268, 5;
	// begin inline asm
	lop3.b32 %r7263, %r7264, %r7270, %r7266, 232;
	// end inline asm
	xor.b32  	%r7725, %r7616, %r7600;
	xor.b32  	%r7726, %r7725, %r7664;
	xor.b32  	%r7727, %r7726, %r7704;
	shf.l.wrap.b32 	%r7728, %r7727, %r7727, 1;
	add.s32 	%r7729, %r7728, %r7263;
	add.s32 	%r7730, %r7729, %r7262;
	add.s32 	%r7731, %r7730, %r7724;
	add.s32 	%r7272, %r7731, -1894007588;
	shf.l.wrap.b32 	%r7274, %r7264, %r7264, 30;
	shf.l.wrap.b32 	%r7732, %r7272, %r7272, 5;
	// begin inline asm
	lop3.b32 %r7267, %r7268, %r7274, %r7270, 232;
	// end inline asm
	xor.b32  	%r7733, %r7624, %r7608;
	xor.b32  	%r7734, %r7733, %r7672;
	xor.b32  	%r7735, %r7734, %r7712;
	shf.l.wrap.b32 	%r7736, %r7735, %r7735, 1;
	add.s32 	%r7737, %r7736, %r7267;
	add.s32 	%r7738, %r7737, %r7266;
	add.s32 	%r7739, %r7738, %r7732;
	add.s32 	%r7276, %r7739, -1894007588;
	shf.l.wrap.b32 	%r7278, %r7268, %r7268, 30;
	shf.l.wrap.b32 	%r7740, %r7276, %r7276, 5;
	// begin inline asm
	lop3.b32 %r7271, %r7272, %r7278, %r7274, 232;
	// end inline asm
	xor.b32  	%r7741, %r7616, %r7632;
	xor.b32  	%r7742, %r7741, %r7680;
	xor.b32  	%r7743, %r7742, %r7720;
	shf.l.wrap.b32 	%r7744, %r7743, %r7743, 1;
	add.s32 	%r7745, %r7744, %r7271;
	add.s32 	%r7746, %r7745, %r7270;
	add.s32 	%r7747, %r7746, %r7740;
	add.s32 	%r7280, %r7747, -1894007588;
	shf.l.wrap.b32 	%r7282, %r7272, %r7272, 30;
	shf.l.wrap.b32 	%r7748, %r7280, %r7280, 5;
	// begin inline asm
	lop3.b32 %r7275, %r7276, %r7282, %r7278, 232;
	// end inline asm
	xor.b32  	%r7749, %r7640, %r7624;
	xor.b32  	%r7750, %r7749, %r7688;
	xor.b32  	%r7751, %r7750, %r7728;
	shf.l.wrap.b32 	%r7752, %r7751, %r7751, 1;
	add.s32 	%r7753, %r7752, %r7275;
	add.s32 	%r7754, %r7753, %r7274;
	add.s32 	%r7755, %r7754, %r7748;
	add.s32 	%r7284, %r7755, -1894007588;
	shf.l.wrap.b32 	%r7286, %r7276, %r7276, 30;
	shf.l.wrap.b32 	%r7756, %r7284, %r7284, 5;
	// begin inline asm
	lop3.b32 %r7279, %r7280, %r7286, %r7282, 232;
	// end inline asm
	xor.b32  	%r7757, %r7648, %r7632;
	xor.b32  	%r7758, %r7757, %r7696;
	xor.b32  	%r7759, %r7758, %r7736;
	shf.l.wrap.b32 	%r7760, %r7759, %r7759, 1;
	add.s32 	%r7761, %r7760, %r7279;
	add.s32 	%r7762, %r7761, %r7278;
	add.s32 	%r7763, %r7762, %r7756;
	add.s32 	%r7288, %r7763, -1894007588;
	shf.l.wrap.b32 	%r7290, %r7280, %r7280, 30;
	shf.l.wrap.b32 	%r7764, %r7288, %r7288, 5;
	// begin inline asm
	lop3.b32 %r7283, %r7284, %r7290, %r7286, 232;
	// end inline asm
	xor.b32  	%r7765, %r7640, %r7656;
	xor.b32  	%r7766, %r7765, %r7704;
	xor.b32  	%r7767, %r7766, %r7744;
	shf.l.wrap.b32 	%r7768, %r7767, %r7767, 1;
	add.s32 	%r7769, %r7768, %r7283;
	add.s32 	%r7770, %r7769, %r7282;
	add.s32 	%r7771, %r7770, %r7764;
	add.s32 	%r7292, %r7771, -1894007588;
	shf.l.wrap.b32 	%r7294, %r7284, %r7284, 30;
	shf.l.wrap.b32 	%r7772, %r7292, %r7292, 5;
	// begin inline asm
	lop3.b32 %r7287, %r7288, %r7294, %r7290, 232;
	// end inline asm
	xor.b32  	%r7773, %r7664, %r7648;
	xor.b32  	%r7774, %r7773, %r7712;
	xor.b32  	%r7775, %r7774, %r7752;
	shf.l.wrap.b32 	%r7776, %r7775, %r7775, 1;
	add.s32 	%r7777, %r7776, %r7287;
	add.s32 	%r7778, %r7777, %r7286;
	add.s32 	%r7779, %r7778, %r7772;
	add.s32 	%r7296, %r7779, -1894007588;
	shf.l.wrap.b32 	%r7298, %r7288, %r7288, 30;
	shf.l.wrap.b32 	%r7780, %r7296, %r7296, 5;
	// begin inline asm
	lop3.b32 %r7291, %r7292, %r7298, %r7294, 232;
	// end inline asm
	xor.b32  	%r7781, %r7672, %r7656;
	xor.b32  	%r7782, %r7781, %r7720;
	xor.b32  	%r7783, %r7782, %r7760;
	shf.l.wrap.b32 	%r7784, %r7783, %r7783, 1;
	add.s32 	%r7785, %r7784, %r7291;
	add.s32 	%r7786, %r7785, %r7290;
	add.s32 	%r7787, %r7786, %r7780;
	add.s32 	%r7300, %r7787, -1894007588;
	shf.l.wrap.b32 	%r7302, %r7292, %r7292, 30;
	shf.l.wrap.b32 	%r7788, %r7300, %r7300, 5;
	// begin inline asm
	lop3.b32 %r7295, %r7296, %r7302, %r7298, 232;
	// end inline asm
	xor.b32  	%r7789, %r7664, %r7680;
	xor.b32  	%r7790, %r7789, %r7728;
	xor.b32  	%r7791, %r7790, %r7768;
	shf.l.wrap.b32 	%r7792, %r7791, %r7791, 1;
	add.s32 	%r7793, %r7792, %r7295;
	add.s32 	%r7794, %r7793, %r7294;
	add.s32 	%r7795, %r7794, %r7788;
	add.s32 	%r7304, %r7795, -1894007588;
	shf.l.wrap.b32 	%r7306, %r7296, %r7296, 30;
	shf.l.wrap.b32 	%r7796, %r7304, %r7304, 5;
	// begin inline asm
	lop3.b32 %r7299, %r7300, %r7306, %r7302, 150;
	// end inline asm
	xor.b32  	%r7797, %r7688, %r7672;
	xor.b32  	%r7798, %r7797, %r7736;
	xor.b32  	%r7799, %r7798, %r7776;
	shf.l.wrap.b32 	%r7800, %r7799, %r7799, 1;
	add.s32 	%r7801, %r7800, %r7299;
	add.s32 	%r7802, %r7801, %r7298;
	add.s32 	%r7803, %r7802, %r7796;
	add.s32 	%r7308, %r7803, -899497514;
	shf.l.wrap.b32 	%r7310, %r7300, %r7300, 30;
	shf.l.wrap.b32 	%r7804, %r7308, %r7308, 5;
	// begin inline asm
	lop3.b32 %r7303, %r7304, %r7310, %r7306, 150;
	// end inline asm
	xor.b32  	%r7805, %r7696, %r7680;
	xor.b32  	%r7806, %r7805, %r7744;
	xor.b32  	%r7807, %r7806, %r7784;
	shf.l.wrap.b32 	%r7808, %r7807, %r7807, 1;
	add.s32 	%r7809, %r7808, %r7303;
	add.s32 	%r7810, %r7809, %r7302;
	add.s32 	%r7811, %r7810, %r7804;
	add.s32 	%r7312, %r7811, -899497514;
	shf.l.wrap.b32 	%r7314, %r7304, %r7304, 30;
	shf.l.wrap.b32 	%r7812, %r7312, %r7312, 5;
	// begin inline asm
	lop3.b32 %r7307, %r7308, %r7314, %r7310, 150;
	// end inline asm
	xor.b32  	%r7813, %r7688, %r7704;
	xor.b32  	%r7814, %r7813, %r7752;
	xor.b32  	%r7815, %r7814, %r7792;
	shf.l.wrap.b32 	%r7816, %r7815, %r7815, 1;
	add.s32 	%r7817, %r7816, %r7307;
	add.s32 	%r7818, %r7817, %r7306;
	add.s32 	%r7819, %r7818, %r7812;
	add.s32 	%r7316, %r7819, -899497514;
	shf.l.wrap.b32 	%r7318, %r7308, %r7308, 30;
	shf.l.wrap.b32 	%r7820, %r7316, %r7316, 5;
	// begin inline asm
	lop3.b32 %r7311, %r7312, %r7318, %r7314, 150;
	// end inline asm
	xor.b32  	%r7821, %r7712, %r7696;
	xor.b32  	%r7822, %r7821, %r7760;
	xor.b32  	%r7823, %r7822, %r7800;
	shf.l.wrap.b32 	%r7824, %r7823, %r7823, 1;
	add.s32 	%r7825, %r7824, %r7311;
	add.s32 	%r7826, %r7825, %r7310;
	add.s32 	%r7827, %r7826, %r7820;
	add.s32 	%r7320, %r7827, -899497514;
	shf.l.wrap.b32 	%r7322, %r7312, %r7312, 30;
	shf.l.wrap.b32 	%r7828, %r7320, %r7320, 5;
	// begin inline asm
	lop3.b32 %r7315, %r7316, %r7322, %r7318, 150;
	// end inline asm
	xor.b32  	%r7829, %r7720, %r7704;
	xor.b32  	%r7830, %r7829, %r7768;
	xor.b32  	%r7831, %r7830, %r7808;
	shf.l.wrap.b32 	%r7832, %r7831, %r7831, 1;
	add.s32 	%r7833, %r7832, %r7315;
	add.s32 	%r7834, %r7833, %r7314;
	add.s32 	%r7835, %r7834, %r7828;
	add.s32 	%r7324, %r7835, -899497514;
	shf.l.wrap.b32 	%r7326, %r7316, %r7316, 30;
	shf.l.wrap.b32 	%r7836, %r7324, %r7324, 5;
	// begin inline asm
	lop3.b32 %r7319, %r7320, %r7326, %r7322, 150;
	// end inline asm
	xor.b32  	%r7837, %r7712, %r7728;
	xor.b32  	%r7838, %r7837, %r7776;
	xor.b32  	%r7839, %r7838, %r7816;
	shf.l.wrap.b32 	%r7840, %r7839, %r7839, 1;
	add.s32 	%r7841, %r7840, %r7319;
	add.s32 	%r7842, %r7841, %r7318;
	add.s32 	%r7843, %r7842, %r7836;
	add.s32 	%r7328, %r7843, -899497514;
	shf.l.wrap.b32 	%r7330, %r7320, %r7320, 30;
	shf.l.wrap.b32 	%r7844, %r7328, %r7328, 5;
	// begin inline asm
	lop3.b32 %r7323, %r7324, %r7330, %r7326, 150;
	// end inline asm
	xor.b32  	%r7845, %r7736, %r7720;
	xor.b32  	%r7846, %r7845, %r7784;
	xor.b32  	%r7847, %r7846, %r7824;
	shf.l.wrap.b32 	%r7848, %r7847, %r7847, 1;
	add.s32 	%r7849, %r7848, %r7323;
	add.s32 	%r7850, %r7849, %r7322;
	add.s32 	%r7851, %r7850, %r7844;
	add.s32 	%r7332, %r7851, -899497514;
	shf.l.wrap.b32 	%r7334, %r7324, %r7324, 30;
	shf.l.wrap.b32 	%r7852, %r7332, %r7332, 5;
	// begin inline asm
	lop3.b32 %r7327, %r7328, %r7334, %r7330, 150;
	// end inline asm
	xor.b32  	%r7853, %r7744, %r7728;
	xor.b32  	%r7854, %r7853, %r7792;
	xor.b32  	%r7855, %r7854, %r7832;
	shf.l.wrap.b32 	%r7856, %r7855, %r7855, 1;
	add.s32 	%r7857, %r7856, %r7327;
	add.s32 	%r7858, %r7857, %r7326;
	add.s32 	%r7859, %r7858, %r7852;
	add.s32 	%r7336, %r7859, -899497514;
	shf.l.wrap.b32 	%r7338, %r7328, %r7328, 30;
	shf.l.wrap.b32 	%r7860, %r7336, %r7336, 5;
	// begin inline asm
	lop3.b32 %r7331, %r7332, %r7338, %r7334, 150;
	// end inline asm
	xor.b32  	%r7861, %r7736, %r7752;
	xor.b32  	%r7862, %r7861, %r7800;
	xor.b32  	%r7863, %r7862, %r7840;
	shf.l.wrap.b32 	%r7864, %r7863, %r7863, 1;
	add.s32 	%r7865, %r7864, %r7331;
	add.s32 	%r7866, %r7865, %r7330;
	add.s32 	%r7867, %r7866, %r7860;
	add.s32 	%r7340, %r7867, -899497514;
	shf.l.wrap.b32 	%r7342, %r7332, %r7332, 30;
	shf.l.wrap.b32 	%r7868, %r7340, %r7340, 5;
	// begin inline asm
	lop3.b32 %r7335, %r7336, %r7342, %r7338, 150;
	// end inline asm
	xor.b32  	%r7869, %r7760, %r7744;
	xor.b32  	%r7870, %r7869, %r7808;
	xor.b32  	%r7871, %r7870, %r7848;
	shf.l.wrap.b32 	%r7872, %r7871, %r7871, 1;
	add.s32 	%r7873, %r7872, %r7335;
	add.s32 	%r7874, %r7873, %r7334;
	add.s32 	%r7875, %r7874, %r7868;
	add.s32 	%r7344, %r7875, -899497514;
	shf.l.wrap.b32 	%r7346, %r7336, %r7336, 30;
	shf.l.wrap.b32 	%r7876, %r7344, %r7344, 5;
	// begin inline asm
	lop3.b32 %r7339, %r7340, %r7346, %r7342, 150;
	// end inline asm
	xor.b32  	%r7877, %r7768, %r7752;
	xor.b32  	%r7878, %r7877, %r7816;
	xor.b32  	%r7879, %r7878, %r7856;
	shf.l.wrap.b32 	%r7880, %r7879, %r7879, 1;
	add.s32 	%r7881, %r7880, %r7339;
	add.s32 	%r7882, %r7881, %r7338;
	add.s32 	%r7883, %r7882, %r7876;
	add.s32 	%r7348, %r7883, -899497514;
	shf.l.wrap.b32 	%r7350, %r7340, %r7340, 30;
	shf.l.wrap.b32 	%r7884, %r7348, %r7348, 5;
	// begin inline asm
	lop3.b32 %r7343, %r7344, %r7350, %r7346, 150;
	// end inline asm
	xor.b32  	%r7885, %r7760, %r7776;
	xor.b32  	%r7886, %r7885, %r7824;
	xor.b32  	%r7887, %r7886, %r7864;
	shf.l.wrap.b32 	%r7888, %r7887, %r7887, 1;
	add.s32 	%r7889, %r7888, %r7343;
	add.s32 	%r7890, %r7889, %r7342;
	add.s32 	%r7891, %r7890, %r7884;
	add.s32 	%r7352, %r7891, -899497514;
	shf.l.wrap.b32 	%r7354, %r7344, %r7344, 30;
	shf.l.wrap.b32 	%r7892, %r7352, %r7352, 5;
	// begin inline asm
	lop3.b32 %r7347, %r7348, %r7354, %r7350, 150;
	// end inline asm
	xor.b32  	%r7893, %r7784, %r7768;
	xor.b32  	%r7894, %r7893, %r7832;
	xor.b32  	%r7895, %r7894, %r7872;
	shf.l.wrap.b32 	%r7896, %r7895, %r7895, 1;
	add.s32 	%r7897, %r7896, %r7347;
	add.s32 	%r7898, %r7897, %r7346;
	add.s32 	%r7899, %r7898, %r7892;
	add.s32 	%r7356, %r7899, -899497514;
	shf.l.wrap.b32 	%r7358, %r7348, %r7348, 30;
	shf.l.wrap.b32 	%r7900, %r7356, %r7356, 5;
	// begin inline asm
	lop3.b32 %r7351, %r7352, %r7358, %r7354, 150;
	// end inline asm
	xor.b32  	%r7901, %r7792, %r7776;
	xor.b32  	%r7902, %r7901, %r7840;
	xor.b32  	%r7903, %r7902, %r7880;
	shf.l.wrap.b32 	%r7904, %r7903, %r7903, 1;
	add.s32 	%r7905, %r7904, %r7351;
	add.s32 	%r7906, %r7905, %r7350;
	add.s32 	%r7907, %r7906, %r7900;
	add.s32 	%r7360, %r7907, -899497514;
	shf.l.wrap.b32 	%r7362, %r7352, %r7352, 30;
	shf.l.wrap.b32 	%r7908, %r7360, %r7360, 5;
	// begin inline asm
	lop3.b32 %r7355, %r7356, %r7362, %r7358, 150;
	// end inline asm
	xor.b32  	%r7909, %r7784, %r7800;
	xor.b32  	%r7910, %r7909, %r7848;
	xor.b32  	%r7911, %r7910, %r7888;
	shf.l.wrap.b32 	%r7912, %r7911, %r7911, 1;
	add.s32 	%r7913, %r7912, %r7355;
	add.s32 	%r7914, %r7913, %r7354;
	add.s32 	%r7915, %r7914, %r7908;
	add.s32 	%r7364, %r7915, -899497514;
	shf.l.wrap.b32 	%r7366, %r7356, %r7356, 30;
	shf.l.wrap.b32 	%r7916, %r7364, %r7364, 5;
	// begin inline asm
	lop3.b32 %r7359, %r7360, %r7366, %r7362, 150;
	// end inline asm
	xor.b32  	%r7917, %r7808, %r7792;
	xor.b32  	%r7918, %r7917, %r7856;
	xor.b32  	%r7919, %r7918, %r7896;
	shf.l.wrap.b32 	%r7920, %r7919, %r7919, 1;
	add.s32 	%r7921, %r7920, %r7359;
	add.s32 	%r7922, %r7921, %r7358;
	add.s32 	%r7923, %r7922, %r7916;
	add.s32 	%r7368, %r7923, -899497514;
	shf.l.wrap.b32 	%r7370, %r7360, %r7360, 30;
	shf.l.wrap.b32 	%r7924, %r7368, %r7368, 5;
	// begin inline asm
	lop3.b32 %r7363, %r7364, %r7370, %r7366, 150;
	// end inline asm
	xor.b32  	%r7925, %r7816, %r7800;
	xor.b32  	%r7926, %r7925, %r7864;
	xor.b32  	%r7927, %r7926, %r7904;
	shf.l.wrap.b32 	%r7928, %r7927, %r7927, 1;
	add.s32 	%r7929, %r7363, %r7928;
	add.s32 	%r7930, %r7929, %r7362;
	add.s32 	%r7931, %r7930, %r7924;
	add.s32 	%r7372, %r7931, -899497514;
	shf.l.wrap.b32 	%r7374, %r7364, %r7364, 30;
	shf.l.wrap.b32 	%r7932, %r7372, %r7372, 5;
	// begin inline asm
	lop3.b32 %r7367, %r7368, %r7374, %r7370, 150;
	// end inline asm
	xor.b32  	%r7933, %r7808, %r7824;
	xor.b32  	%r7934, %r7933, %r7872;
	xor.b32  	%r7935, %r7934, %r7912;
	shf.l.wrap.b32 	%r7936, %r7935, %r7935, 1;
	add.s32 	%r7937, %r7936, %r7367;
	add.s32 	%r7938, %r7937, %r7366;
	add.s32 	%r7939, %r7938, %r7932;
	add.s32 	%r7376, %r7939, -899497514;
	shf.l.wrap.b32 	%r7378, %r7368, %r7368, 30;
	shf.l.wrap.b32 	%r7940, %r7376, %r7376, 5;
	// begin inline asm
	lop3.b32 %r7371, %r7372, %r7378, %r7374, 150;
	// end inline asm
	xor.b32  	%r7941, %r7832, %r7816;
	xor.b32  	%r7942, %r7941, %r7880;
	xor.b32  	%r7943, %r7942, %r7920;
	shf.l.wrap.b32 	%r7944, %r7943, %r7943, 1;
	add.s32 	%r7945, %r7944, %r7371;
	add.s32 	%r7946, %r7945, %r7370;
	add.s32 	%r7947, %r7946, %r7940;
	add.s32 	%r7948, %r7947, -899497514;
	shf.l.wrap.b32 	%r7377, %r7372, %r7372, 30;
	shf.l.wrap.b32 	%r7949, %r7948, %r7948, 5;
	// begin inline asm
	lop3.b32 %r7375, %r7376, %r7377, %r7378, 150;
	// end inline asm
	xor.b32  	%r7950, %r7840, %r7824;
	xor.b32  	%r7951, %r7950, %r7888;
	xor.b32  	%r7952, %r7951, %r7928;
	shf.l.wrap.b32 	%r7953, %r7952, %r7952, 1;
	shf.l.wrap.b32 	%r7954, %r7376, %r7376, 30;
	add.s32 	%r7955, %r7375, %r7953;
	add.s32 	%r7956, %r7955, %r7064;
	add.s32 	%r7957, %r7956, %r7374;
	add.s32 	%r7958, %r7957, %r7949;
	add.s32 	%r7959, %r7958, -899497514;
	st.local.u32 	[%rd31+4], %r7959;
	add.s32 	%r7960, %r7948, %r7060;
	st.local.u32 	[%rd31+8], %r7960;
	add.s32 	%r7961, %r7954, %r7061;
	st.local.u32 	[%rd31+12], %r7961;
	add.s32 	%r7962, %r7377, %r7062;
	st.local.u32 	[%rd31+16], %r7962;
	add.s32 	%r7963, %r7378, %r7381;
	st.local.u32 	[%rd31+20], %r7963;
	add.s64 	%rd299, %rd299, 64;
	add.s64 	%rd297, %rd297, 64;
	add.s32 	%r8153, %r8153, -64;
	setp.gt.u32 	%p66, %r8153, 63;
	@%p66 bra 	$L__BB4_76;

$L__BB4_80:
	setp.eq.s32 	%p67, %r8153, 0;
	@%p67 bra 	$L__BB4_86;

	cvt.u64.u32 	%rd220, %r8134;
	add.s64 	%rd223, %rd31, %rd220;
	add.s64 	%rd304, %rd223, 24;
	and.b32  	%r8155, %r8153, 3;
	setp.eq.s32 	%p68, %r8155, 0;
	mov.u32 	%r8156, %r8153;
	@%p68 bra 	$L__BB4_84;

	mov.u64 	%rd300, %rd304;
	mov.u64 	%rd301, %rd299;
	mov.u32 	%r8156, %r8153;

$L__BB4_83:
	.pragma "nounroll";
	add.s32 	%r8156, %r8156, -1;
	add.s64 	%rd299, %rd301, 1;
	ld.local.u8 	%rs178, [%rd301];
	add.s64 	%rd304, %rd300, 1;
	st.local.u8 	[%rd300], %rs178;
	add.s32 	%r8155, %r8155, -1;
	setp.ne.s32 	%p69, %r8155, 0;
	mov.u64 	%rd300, %rd304;
	mov.u64 	%rd301, %rd299;
	@%p69 bra 	$L__BB4_83;

$L__BB4_84:
	add.s32 	%r7964, %r8153, -1;
	setp.lt.u32 	%p70, %r7964, 3;
	@%p70 bra 	$L__BB4_86;

$L__BB4_85:
	ld.local.u8 	%rs179, [%rd299];
	st.local.u8 	[%rd304], %rs179;
	ld.local.u8 	%rs180, [%rd299+1];
	st.local.u8 	[%rd304+1], %rs180;
	ld.local.u8 	%rs181, [%rd299+2];
	st.local.u8 	[%rd304+2], %rs181;
	add.s64 	%rd159, %rd299, 4;
	ld.local.u8 	%rs182, [%rd299+3];
	add.s64 	%rd160, %rd304, 4;
	st.local.u8 	[%rd304+3], %rs182;
	add.s32 	%r8156, %r8156, -4;
	setp.ne.s32 	%p71, %r8156, 0;
	mov.u64 	%rd304, %rd160;
	mov.u64 	%rd299, %rd159;
	@%p71 bra 	$L__BB4_85;

$L__BB4_86:
	mov.b32 	%r8037, %envreg3;
	mov.u32 	%r8036, %tid.x;
	add.s32 	%r8035, %r8036, %r8037;
	mov.u32 	%r8034, %ctaid.x;
	mov.u32 	%r8033, %ntid.x;
	mad.lo.s32 	%r8032, %r8033, %r8034, %r8035;
	cvt.u64.u32 	%rd229, %r8032;
	ld.param.u64 	%rd228, [sspr_salted_sha1_param_3];
	ld.param.u64 	%rd227, [sspr_salted_sha1_param_2];
	ld.local.u32 	%r7965, [%rd31+4];
	shf.l.wrap.b32 	%r7966, %r7965, %r7965, 16;
	shl.b32 	%r7967, %r7966, 8;
	and.b32  	%r7968, %r7967, -16711936;
	shr.u32 	%r7969, %r7966, 8;
	and.b32  	%r7970, %r7969, 16711935;
	or.b32  	%r7971, %r7968, %r7970;
	ld.local.u32 	%r7972, [%rd31+8];
	shf.l.wrap.b32 	%r7973, %r7972, %r7972, 16;
	shl.b32 	%r7974, %r7973, 8;
	and.b32  	%r7975, %r7974, -16711936;
	shr.u32 	%r7976, %r7973, 8;
	and.b32  	%r7977, %r7976, 16711935;
	or.b32  	%r7978, %r7975, %r7977;
	ld.local.u32 	%r7979, [%rd31+12];
	shf.l.wrap.b32 	%r7980, %r7979, %r7979, 16;
	shl.b32 	%r7981, %r7980, 8;
	and.b32  	%r7982, %r7981, -16711936;
	shr.u32 	%r7983, %r7980, 8;
	and.b32  	%r7984, %r7983, 16711935;
	or.b32  	%r7985, %r7982, %r7984;
	ld.local.u32 	%r7986, [%rd31+16];
	shf.l.wrap.b32 	%r7987, %r7986, %r7986, 16;
	shl.b32 	%r7988, %r7987, 8;
	and.b32  	%r7989, %r7988, -16711936;
	shr.u32 	%r7990, %r7987, 8;
	and.b32  	%r7991, %r7990, 16711935;
	or.b32  	%r7992, %r7989, %r7991;
	ld.local.u32 	%r7993, [%rd31+20];
	shf.l.wrap.b32 	%r7994, %r7993, %r7993, 16;
	shl.b32 	%r7995, %r7994, 8;
	and.b32  	%r7996, %r7995, -16711936;
	shr.u32 	%r7997, %r7994, 8;
	and.b32  	%r7998, %r7997, 16711935;
	or.b32  	%r7999, %r7996, %r7998;
	shf.l.wrap.b32 	%r8000, %r7971, %r7971, 16;
	shl.b32 	%r8001, %r8000, 8;
	and.b32  	%r8002, %r8001, -16711936;
	shr.u32 	%r8003, %r8000, 8;
	and.b32  	%r8004, %r8003, 16711935;
	shf.l.wrap.b32 	%r8005, %r7978, %r7978, 16;
	shl.b32 	%r8006, %r8005, 8;
	and.b32  	%r8007, %r8006, -16711936;
	shr.u32 	%r8008, %r8005, 8;
	and.b32  	%r8009, %r8008, 16711935;
	or.b32  	%r8010, %r8007, %r8009;
	or.b32  	%r8011, %r8002, %r8004;
	mul.lo.s64 	%rd224, %rd229, 72;
	add.s64 	%rd225, %rd228, %rd224;
	st.global.v2.u32 	[%rd225], {%r8011, %r8010};
	shf.l.wrap.b32 	%r8012, %r7985, %r7985, 16;
	shl.b32 	%r8013, %r8012, 8;
	and.b32  	%r8014, %r8013, -16711936;
	shr.u32 	%r8015, %r8012, 8;
	and.b32  	%r8016, %r8015, 16711935;
	shf.l.wrap.b32 	%r8017, %r7992, %r7992, 16;
	shl.b32 	%r8018, %r8017, 8;
	and.b32  	%r8019, %r8018, -16711936;
	shr.u32 	%r8020, %r8017, 8;
	and.b32  	%r8021, %r8020, 16711935;
	or.b32  	%r8022, %r8019, %r8021;
	or.b32  	%r8023, %r8014, %r8016;
	st.global.v2.u32 	[%rd225+8], {%r8023, %r8022};
	shf.l.wrap.b32 	%r8024, %r7999, %r7999, 16;
	shl.b32 	%r8025, %r8024, 8;
	and.b32  	%r8026, %r8025, -16711936;
	shr.u32 	%r8027, %r8024, 8;
	and.b32  	%r8028, %r8027, 16711935;
	or.b32  	%r8029, %r8026, %r8028;
	st.global.u32 	[%rd225+16], %r8029;
	ld.const.u32 	%r8030, [%rd227+4];
	add.s32 	%r8031, %r8030, -1;
	st.global.u32 	[%rd225+64], %r8031;
	ret;

}
	// .globl	loop_sha256
.entry loop_sha256(
	.param .u64 .ptr .global .align 8 loop_sha256_param_0,
	.param .u64 .ptr .global .align 8 loop_sha256_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<1660>;
	.reg .b64 	%rd<16>;


	ld.param.u64 	%rd4, [loop_sha256_param_1];
	mov.b32 	%r116, %envreg3;
	mov.u32 	%r117, %ctaid.x;
	mov.u32 	%r118, %ntid.x;
	mov.u32 	%r119, %tid.x;
	add.s32 	%r120, %r119, %r116;
	mad.lo.s32 	%r1, %r118, %r117, %r120;
	mul.wide.u32 	%rd5, %r1, 72;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u32 	%r2, [%rd6+64];
	min.u32 	%r121, %r2, 813;
	ld.global.v2.u32 	{%r1659, %r1658}, [%rd6];
	ld.global.u32 	%r1657, [%rd6+8];
	.pragma "used_bytes_mask 240";
	ld.global.v2.u32 	{%r124, %r1656}, [%rd6+8];
	ld.global.u32 	%r1655, [%rd6+16];
	.pragma "used_bytes_mask 240";
	ld.global.v2.u32 	{%r126, %r1654}, [%rd6+16];
	ld.global.v2.u32 	{%r1653, %r1652}, [%rd6+24];
	setp.eq.s32 	%p1, %r121, 0;
	@%p1 bra 	$L__BB5_5;

	mov.u32 	%r131, 1359893119;
	shf.l.wrap.b32 	%r132, %r131, %r131, 18;
	xor.b32  	%r133, %r132, 1359893119;
	shf.l.wrap.b32 	%r134, %r133, %r133, 27;
	xor.b32  	%r135, %r134, 1359893119;
	shf.l.wrap.b32 	%r11, %r135, %r135, 26;
	mov.u32 	%r136, 1779033703;
	shf.l.wrap.b32 	%r137, %r136, %r136, 23;
	xor.b32  	%r138, %r137, 1779033703;
	shf.l.wrap.b32 	%r139, %r138, %r138, 21;
	xor.b32  	%r140, %r139, 1779033703;
	shf.l.wrap.b32 	%r12, %r140, %r140, 30;
	mov.u32 	%r141, 256;
	shf.l.wrap.b32 	%r142, %r141, %r141, 13;
	shf.l.wrap.b32 	%r143, %r141, %r141, 15;
	xor.b32  	%r13, %r143, %r142;
	mov.u32 	%r144, -2147483648;
	shf.l.wrap.b32 	%r145, %r144, %r144, 14;
	shf.l.wrap.b32 	%r146, %r144, %r144, 25;
	xor.b32  	%r147, %r146, %r145;
	xor.b32  	%r14, %r147, 268435456;
	shf.l.wrap.b32 	%r148, %r141, %r141, 14;
	shf.l.wrap.b32 	%r149, %r141, %r141, 25;
	xor.b32  	%r150, %r149, %r148;
	xor.b32  	%r15, %r150, 32;
	mov.u32 	%r1626, 0;
	mov.u64 	%rd7, k;

$L__BB5_2:
	add.s32 	%r152, %r1659, %r11;
	add.s32 	%r153, %r12, %r152;
	add.s32 	%r154, %r152, 1665186679;
	add.s32 	%r155, %r153, -127882076;
	shf.l.wrap.b32 	%r156, %r154, %r154, 18;
	xor.b32  	%r157, %r156, %r154;
	shf.l.wrap.b32 	%r158, %r157, %r157, 27;
	xor.b32  	%r159, %r158, %r154;
	shf.l.wrap.b32 	%r160, %r159, %r159, 26;
	and.b32  	%r161, %r154, -905233677;
	xor.b32  	%r162, %r161, -1694144372;
	add.s32 	%r163, %r1658, %r162;
	add.s32 	%r164, %r163, %r160;
	shf.l.wrap.b32 	%r165, %r155, %r155, 23;
	xor.b32  	%r166, %r165, %r155;
	shf.l.wrap.b32 	%r167, %r166, %r166, 21;
	xor.b32  	%r168, %r167, %r155;
	shf.l.wrap.b32 	%r169, %r168, %r168, 30;
	and.b32  	%r170, %r155, -781301534;
	or.b32  	%r171, %r170, 704751109;
	add.s32 	%r172, %r169, %r171;
	add.s32 	%r173, %r172, %r164;
	add.s32 	%r174, %r164, -852880978;
	add.s32 	%r175, %r173, -1866785220;
	shf.l.wrap.b32 	%r176, %r174, %r174, 18;
	xor.b32  	%r177, %r176, %r174;
	shf.l.wrap.b32 	%r178, %r177, %r177, 27;
	xor.b32  	%r179, %r178, %r174;
	shf.l.wrap.b32 	%r180, %r179, %r179, 26;
	xor.b32  	%r181, %r154, 1359893119;
	and.b32  	%r182, %r174, %r181;
	xor.b32  	%r183, %r182, 1359893119;
	add.s32 	%r184, %r1657, %r183;
	add.s32 	%r185, %r184, %r180;
	shf.l.wrap.b32 	%r186, %r175, %r175, 23;
	xor.b32  	%r187, %r186, %r175;
	shf.l.wrap.b32 	%r188, %r187, %r187, 21;
	xor.b32  	%r189, %r188, %r175;
	shf.l.wrap.b32 	%r190, %r189, %r189, 30;
	and.b32  	%r191, %r175, %r155;
	or.b32  	%r192, %r175, %r155;
	and.b32  	%r193, %r192, 1779033703;
	or.b32  	%r194, %r193, %r191;
	add.s32 	%r195, %r190, %r194;
	add.s32 	%r196, %r195, %r185;
	add.s32 	%r197, %r185, 204346080;
	add.s32 	%r198, %r196, 1355179099;
	shf.l.wrap.b32 	%r199, %r197, %r197, 18;
	xor.b32  	%r200, %r199, %r197;
	shf.l.wrap.b32 	%r201, %r200, %r200, 27;
	xor.b32  	%r202, %r201, %r197;
	shf.l.wrap.b32 	%r203, %r202, %r202, 26;
	xor.b32  	%r204, %r174, %r154;
	and.b32  	%r205, %r197, %r204;
	xor.b32  	%r206, %r205, %r154;
	add.s32 	%r207, %r1656, %r206;
	add.s32 	%r208, %r207, %r203;
	shf.l.wrap.b32 	%r209, %r198, %r198, 23;
	xor.b32  	%r210, %r209, %r198;
	shf.l.wrap.b32 	%r211, %r210, %r210, 21;
	xor.b32  	%r212, %r211, %r198;
	shf.l.wrap.b32 	%r213, %r212, %r212, 30;
	and.b32  	%r214, %r198, %r175;
	or.b32  	%r215, %r198, %r175;
	and.b32  	%r216, %r215, %r155;
	or.b32  	%r217, %r216, %r214;
	add.s32 	%r218, %r213, %r217;
	add.s32 	%r219, %r218, %r208;
	add.s32 	%r220, %r208, -1529998197;
	add.s32 	%r221, %r219, 985935396;
	add.s32 	%r222, %r1655, %r154;
	xor.b32  	%r223, %r197, %r174;
	and.b32  	%r224, %r220, %r223;
	xor.b32  	%r225, %r224, %r174;
	add.s32 	%r226, %r222, %r225;
	shf.l.wrap.b32 	%r227, %r220, %r220, 18;
	xor.b32  	%r228, %r227, %r220;
	shf.l.wrap.b32 	%r229, %r228, %r228, 27;
	xor.b32  	%r230, %r229, %r220;
	shf.l.wrap.b32 	%r231, %r230, %r230, 26;
	add.s32 	%r232, %r226, %r231;
	add.s32 	%r233, %r232, 961987163;
	add.s32 	%r234, %r233, %r155;
	shf.l.wrap.b32 	%r235, %r221, %r221, 23;
	xor.b32  	%r236, %r235, %r221;
	shf.l.wrap.b32 	%r237, %r236, %r236, 21;
	xor.b32  	%r238, %r237, %r221;
	shf.l.wrap.b32 	%r239, %r238, %r238, 30;
	and.b32  	%r240, %r221, %r198;
	or.b32  	%r241, %r221, %r198;
	and.b32  	%r242, %r241, %r175;
	or.b32  	%r243, %r242, %r240;
	add.s32 	%r244, %r239, %r243;
	add.s32 	%r245, %r244, %r233;
	add.s32 	%r246, %r1654, %r174;
	xor.b32  	%r247, %r220, %r197;
	and.b32  	%r248, %r234, %r247;
	xor.b32  	%r249, %r248, %r197;
	add.s32 	%r250, %r246, %r249;
	shf.l.wrap.b32 	%r251, %r234, %r234, 18;
	xor.b32  	%r252, %r251, %r234;
	shf.l.wrap.b32 	%r253, %r252, %r252, 27;
	xor.b32  	%r254, %r253, %r234;
	shf.l.wrap.b32 	%r255, %r254, %r254, 26;
	add.s32 	%r256, %r250, %r255;
	add.s32 	%r257, %r256, 1508970993;
	add.s32 	%r258, %r257, %r175;
	shf.l.wrap.b32 	%r259, %r245, %r245, 23;
	xor.b32  	%r260, %r259, %r245;
	shf.l.wrap.b32 	%r261, %r260, %r260, 21;
	xor.b32  	%r262, %r261, %r245;
	shf.l.wrap.b32 	%r263, %r262, %r262, 30;
	and.b32  	%r264, %r245, %r221;
	or.b32  	%r265, %r245, %r221;
	and.b32  	%r266, %r265, %r198;
	or.b32  	%r267, %r266, %r264;
	add.s32 	%r268, %r263, %r267;
	add.s32 	%r269, %r268, %r257;
	add.s32 	%r270, %r1653, %r197;
	xor.b32  	%r271, %r234, %r220;
	and.b32  	%r272, %r258, %r271;
	xor.b32  	%r273, %r272, %r220;
	add.s32 	%r274, %r270, %r273;
	shf.l.wrap.b32 	%r275, %r258, %r258, 18;
	xor.b32  	%r276, %r275, %r258;
	shf.l.wrap.b32 	%r277, %r276, %r276, 27;
	xor.b32  	%r278, %r277, %r258;
	shf.l.wrap.b32 	%r279, %r278, %r278, 26;
	add.s32 	%r280, %r274, %r279;
	add.s32 	%r281, %r280, -1841331548;
	add.s32 	%r282, %r281, %r198;
	shf.l.wrap.b32 	%r283, %r269, %r269, 23;
	xor.b32  	%r284, %r283, %r269;
	shf.l.wrap.b32 	%r285, %r284, %r284, 21;
	xor.b32  	%r286, %r285, %r269;
	shf.l.wrap.b32 	%r287, %r286, %r286, 30;
	and.b32  	%r288, %r269, %r245;
	or.b32  	%r289, %r269, %r245;
	and.b32  	%r290, %r289, %r221;
	or.b32  	%r291, %r290, %r288;
	add.s32 	%r292, %r287, %r291;
	add.s32 	%r293, %r292, %r281;
	add.s32 	%r294, %r1652, %r220;
	xor.b32  	%r295, %r258, %r234;
	and.b32  	%r296, %r282, %r295;
	xor.b32  	%r297, %r296, %r234;
	add.s32 	%r298, %r294, %r297;
	shf.l.wrap.b32 	%r299, %r282, %r282, 18;
	xor.b32  	%r300, %r299, %r282;
	shf.l.wrap.b32 	%r301, %r300, %r300, 27;
	xor.b32  	%r302, %r301, %r282;
	shf.l.wrap.b32 	%r303, %r302, %r302, 26;
	add.s32 	%r304, %r298, %r303;
	add.s32 	%r305, %r304, -1424204075;
	add.s32 	%r306, %r305, %r221;
	shf.l.wrap.b32 	%r307, %r293, %r293, 23;
	xor.b32  	%r308, %r307, %r293;
	shf.l.wrap.b32 	%r309, %r308, %r308, 21;
	xor.b32  	%r310, %r309, %r293;
	shf.l.wrap.b32 	%r311, %r310, %r310, 30;
	and.b32  	%r312, %r293, %r269;
	or.b32  	%r313, %r293, %r269;
	and.b32  	%r314, %r313, %r245;
	or.b32  	%r315, %r314, %r312;
	add.s32 	%r316, %r311, %r315;
	add.s32 	%r317, %r316, %r305;
	xor.b32  	%r318, %r282, %r258;
	and.b32  	%r319, %r306, %r318;
	xor.b32  	%r320, %r319, %r258;
	add.s32 	%r321, %r234, %r320;
	shf.l.wrap.b32 	%r322, %r306, %r306, 18;
	xor.b32  	%r323, %r322, %r306;
	shf.l.wrap.b32 	%r324, %r323, %r323, 27;
	xor.b32  	%r325, %r324, %r306;
	shf.l.wrap.b32 	%r326, %r325, %r325, 26;
	add.s32 	%r327, %r321, %r326;
	add.s32 	%r328, %r327, 1476897432;
	add.s32 	%r329, %r328, %r245;
	shf.l.wrap.b32 	%r330, %r317, %r317, 23;
	xor.b32  	%r331, %r330, %r317;
	shf.l.wrap.b32 	%r332, %r331, %r331, 21;
	xor.b32  	%r333, %r332, %r317;
	shf.l.wrap.b32 	%r334, %r333, %r333, 30;
	and.b32  	%r335, %r317, %r293;
	or.b32  	%r336, %r317, %r293;
	and.b32  	%r337, %r336, %r269;
	or.b32  	%r338, %r337, %r335;
	add.s32 	%r339, %r334, %r338;
	add.s32 	%r340, %r339, %r328;
	xor.b32  	%r341, %r306, %r282;
	and.b32  	%r342, %r329, %r341;
	xor.b32  	%r343, %r342, %r282;
	add.s32 	%r344, %r258, %r343;
	shf.l.wrap.b32 	%r345, %r329, %r329, 18;
	xor.b32  	%r346, %r345, %r329;
	shf.l.wrap.b32 	%r347, %r346, %r346, 27;
	xor.b32  	%r348, %r347, %r329;
	shf.l.wrap.b32 	%r349, %r348, %r348, 26;
	add.s32 	%r350, %r344, %r349;
	add.s32 	%r351, %r350, 310598401;
	add.s32 	%r352, %r351, %r269;
	shf.l.wrap.b32 	%r353, %r340, %r340, 23;
	xor.b32  	%r354, %r353, %r340;
	shf.l.wrap.b32 	%r355, %r354, %r354, 21;
	xor.b32  	%r356, %r355, %r340;
	shf.l.wrap.b32 	%r357, %r356, %r356, 30;
	and.b32  	%r358, %r340, %r317;
	or.b32  	%r359, %r340, %r317;
	and.b32  	%r360, %r359, %r293;
	or.b32  	%r361, %r360, %r358;
	add.s32 	%r362, %r357, %r361;
	add.s32 	%r363, %r362, %r351;
	xor.b32  	%r364, %r329, %r306;
	and.b32  	%r365, %r352, %r364;
	xor.b32  	%r366, %r365, %r306;
	add.s32 	%r367, %r282, %r366;
	shf.l.wrap.b32 	%r368, %r352, %r352, 18;
	xor.b32  	%r369, %r368, %r352;
	shf.l.wrap.b32 	%r370, %r369, %r369, 27;
	xor.b32  	%r371, %r370, %r352;
	shf.l.wrap.b32 	%r372, %r371, %r371, 26;
	add.s32 	%r373, %r367, %r372;
	add.s32 	%r374, %r373, 607225278;
	add.s32 	%r375, %r374, %r293;
	shf.l.wrap.b32 	%r376, %r363, %r363, 23;
	xor.b32  	%r377, %r376, %r363;
	shf.l.wrap.b32 	%r378, %r377, %r377, 21;
	xor.b32  	%r379, %r378, %r363;
	shf.l.wrap.b32 	%r380, %r379, %r379, 30;
	and.b32  	%r381, %r363, %r340;
	or.b32  	%r382, %r363, %r340;
	and.b32  	%r383, %r382, %r317;
	or.b32  	%r384, %r383, %r381;
	add.s32 	%r385, %r380, %r384;
	add.s32 	%r386, %r385, %r374;
	xor.b32  	%r387, %r352, %r329;
	and.b32  	%r388, %r375, %r387;
	xor.b32  	%r389, %r388, %r329;
	add.s32 	%r390, %r306, %r389;
	shf.l.wrap.b32 	%r391, %r375, %r375, 18;
	xor.b32  	%r392, %r391, %r375;
	shf.l.wrap.b32 	%r393, %r392, %r392, 27;
	xor.b32  	%r394, %r393, %r375;
	shf.l.wrap.b32 	%r395, %r394, %r394, 26;
	add.s32 	%r396, %r390, %r395;
	add.s32 	%r397, %r396, 1426881987;
	add.s32 	%r398, %r397, %r317;
	shf.l.wrap.b32 	%r399, %r386, %r386, 23;
	xor.b32  	%r400, %r399, %r386;
	shf.l.wrap.b32 	%r401, %r400, %r400, 21;
	xor.b32  	%r402, %r401, %r386;
	shf.l.wrap.b32 	%r403, %r402, %r402, 30;
	and.b32  	%r404, %r386, %r363;
	or.b32  	%r405, %r386, %r363;
	and.b32  	%r406, %r405, %r340;
	or.b32  	%r407, %r406, %r404;
	add.s32 	%r408, %r403, %r407;
	add.s32 	%r409, %r408, %r397;
	xor.b32  	%r410, %r375, %r352;
	and.b32  	%r411, %r398, %r410;
	xor.b32  	%r412, %r411, %r352;
	add.s32 	%r413, %r329, %r412;
	shf.l.wrap.b32 	%r414, %r398, %r398, 18;
	xor.b32  	%r415, %r414, %r398;
	shf.l.wrap.b32 	%r416, %r415, %r415, 27;
	xor.b32  	%r417, %r416, %r398;
	shf.l.wrap.b32 	%r418, %r417, %r417, 26;
	add.s32 	%r419, %r413, %r418;
	add.s32 	%r420, %r419, 1925078388;
	add.s32 	%r421, %r420, %r340;
	shf.l.wrap.b32 	%r422, %r409, %r409, 23;
	xor.b32  	%r423, %r422, %r409;
	shf.l.wrap.b32 	%r424, %r423, %r423, 21;
	xor.b32  	%r425, %r424, %r409;
	shf.l.wrap.b32 	%r426, %r425, %r425, 30;
	and.b32  	%r427, %r409, %r386;
	or.b32  	%r428, %r409, %r386;
	and.b32  	%r429, %r428, %r363;
	or.b32  	%r430, %r429, %r427;
	add.s32 	%r431, %r426, %r430;
	add.s32 	%r432, %r431, %r420;
	xor.b32  	%r433, %r398, %r375;
	and.b32  	%r434, %r421, %r433;
	xor.b32  	%r435, %r434, %r375;
	add.s32 	%r436, %r352, %r435;
	shf.l.wrap.b32 	%r437, %r421, %r421, 18;
	xor.b32  	%r438, %r437, %r421;
	shf.l.wrap.b32 	%r439, %r438, %r438, 27;
	xor.b32  	%r440, %r439, %r421;
	shf.l.wrap.b32 	%r441, %r440, %r440, 26;
	add.s32 	%r442, %r436, %r441;
	add.s32 	%r443, %r442, -2132889090;
	add.s32 	%r444, %r443, %r363;
	shf.l.wrap.b32 	%r445, %r432, %r432, 23;
	xor.b32  	%r446, %r445, %r432;
	shf.l.wrap.b32 	%r447, %r446, %r446, 21;
	xor.b32  	%r448, %r447, %r432;
	shf.l.wrap.b32 	%r449, %r448, %r448, 30;
	and.b32  	%r450, %r432, %r409;
	or.b32  	%r451, %r432, %r409;
	and.b32  	%r452, %r451, %r386;
	or.b32  	%r453, %r452, %r450;
	add.s32 	%r454, %r449, %r453;
	add.s32 	%r455, %r454, %r443;
	xor.b32  	%r456, %r421, %r398;
	and.b32  	%r457, %r444, %r456;
	xor.b32  	%r458, %r457, %r398;
	add.s32 	%r459, %r375, %r458;
	shf.l.wrap.b32 	%r460, %r444, %r444, 18;
	xor.b32  	%r461, %r460, %r444;
	shf.l.wrap.b32 	%r462, %r461, %r461, 27;
	xor.b32  	%r463, %r462, %r444;
	shf.l.wrap.b32 	%r464, %r463, %r463, 26;
	add.s32 	%r465, %r459, %r464;
	add.s32 	%r466, %r465, -1680079193;
	add.s32 	%r467, %r466, %r386;
	shf.l.wrap.b32 	%r468, %r455, %r455, 23;
	xor.b32  	%r469, %r468, %r455;
	shf.l.wrap.b32 	%r470, %r469, %r469, 21;
	xor.b32  	%r471, %r470, %r455;
	shf.l.wrap.b32 	%r472, %r471, %r471, 30;
	and.b32  	%r473, %r455, %r432;
	or.b32  	%r474, %r455, %r432;
	and.b32  	%r475, %r474, %r409;
	or.b32  	%r476, %r475, %r473;
	add.s32 	%r477, %r472, %r476;
	add.s32 	%r478, %r477, %r466;
	xor.b32  	%r479, %r444, %r421;
	and.b32  	%r480, %r467, %r479;
	xor.b32  	%r481, %r480, %r421;
	add.s32 	%r482, %r398, %r481;
	shf.l.wrap.b32 	%r483, %r467, %r467, 18;
	xor.b32  	%r484, %r483, %r467;
	shf.l.wrap.b32 	%r485, %r484, %r484, 27;
	xor.b32  	%r486, %r485, %r467;
	shf.l.wrap.b32 	%r487, %r486, %r486, 26;
	add.s32 	%r488, %r482, %r487;
	add.s32 	%r489, %r488, -1046744460;
	add.s32 	%r490, %r489, %r409;
	shf.l.wrap.b32 	%r491, %r478, %r478, 23;
	xor.b32  	%r492, %r491, %r478;
	shf.l.wrap.b32 	%r493, %r492, %r492, 21;
	xor.b32  	%r494, %r493, %r478;
	shf.l.wrap.b32 	%r495, %r494, %r494, 30;
	and.b32  	%r496, %r478, %r455;
	or.b32  	%r497, %r478, %r455;
	and.b32  	%r498, %r497, %r432;
	or.b32  	%r499, %r498, %r496;
	add.s32 	%r500, %r495, %r499;
	add.s32 	%r501, %r500, %r489;
	shf.l.wrap.b32 	%r502, %r1658, %r1658, 14;
	shf.l.wrap.b32 	%r503, %r1658, %r1658, 25;
	xor.b32  	%r504, %r503, %r502;
	shr.u32 	%r505, %r1658, 3;
	xor.b32  	%r506, %r504, %r505;
	add.s32 	%r1640, %r506, %r1659;
	add.s32 	%r507, %r1640, %r421;
	xor.b32  	%r508, %r467, %r444;
	and.b32  	%r509, %r490, %r508;
	xor.b32  	%r510, %r509, %r444;
	add.s32 	%r511, %r507, %r510;
	shf.l.wrap.b32 	%r512, %r490, %r490, 18;
	xor.b32  	%r513, %r512, %r490;
	shf.l.wrap.b32 	%r514, %r513, %r513, 27;
	xor.b32  	%r515, %r514, %r490;
	shf.l.wrap.b32 	%r516, %r515, %r515, 26;
	add.s32 	%r517, %r511, %r516;
	add.s32 	%r518, %r517, -459576895;
	add.s32 	%r519, %r518, %r432;
	shf.l.wrap.b32 	%r520, %r501, %r501, 23;
	xor.b32  	%r521, %r520, %r501;
	shf.l.wrap.b32 	%r522, %r521, %r521, 21;
	xor.b32  	%r523, %r522, %r501;
	shf.l.wrap.b32 	%r524, %r523, %r523, 30;
	and.b32  	%r525, %r501, %r478;
	or.b32  	%r526, %r501, %r478;
	and.b32  	%r527, %r526, %r455;
	or.b32  	%r528, %r527, %r525;
	add.s32 	%r529, %r524, %r528;
	add.s32 	%r530, %r529, %r518;
	shf.l.wrap.b32 	%r531, %r1657, %r1657, 14;
	shf.l.wrap.b32 	%r532, %r1657, %r1657, 25;
	xor.b32  	%r533, %r532, %r531;
	shr.u32 	%r534, %r1657, 3;
	xor.b32  	%r535, %r533, %r534;
	add.s32 	%r536, %r13, %r1658;
	add.s32 	%r1641, %r536, %r535;
	add.s32 	%r537, %r1641, %r444;
	xor.b32  	%r538, %r490, %r467;
	and.b32  	%r539, %r519, %r538;
	xor.b32  	%r540, %r539, %r467;
	add.s32 	%r541, %r537, %r540;
	shf.l.wrap.b32 	%r542, %r519, %r519, 18;
	xor.b32  	%r543, %r542, %r519;
	shf.l.wrap.b32 	%r544, %r543, %r543, 27;
	xor.b32  	%r545, %r544, %r519;
	shf.l.wrap.b32 	%r546, %r545, %r545, 26;
	add.s32 	%r547, %r541, %r546;
	add.s32 	%r548, %r547, -272742522;
	add.s32 	%r549, %r548, %r455;
	shf.l.wrap.b32 	%r550, %r530, %r530, 23;
	xor.b32  	%r551, %r550, %r530;
	shf.l.wrap.b32 	%r552, %r551, %r551, 21;
	xor.b32  	%r553, %r552, %r530;
	shf.l.wrap.b32 	%r554, %r553, %r553, 30;
	and.b32  	%r555, %r530, %r501;
	or.b32  	%r556, %r530, %r501;
	and.b32  	%r557, %r556, %r478;
	or.b32  	%r558, %r557, %r555;
	add.s32 	%r559, %r554, %r558;
	add.s32 	%r560, %r559, %r548;
	shf.l.wrap.b32 	%r561, %r1640, %r1640, 15;
	shf.l.wrap.b32 	%r562, %r1640, %r1640, 13;
	xor.b32  	%r563, %r561, %r562;
	shr.u32 	%r564, %r1640, 10;
	xor.b32  	%r565, %r563, %r564;
	shf.l.wrap.b32 	%r566, %r1656, %r1656, 14;
	shf.l.wrap.b32 	%r567, %r1656, %r1656, 25;
	xor.b32  	%r568, %r567, %r566;
	shr.u32 	%r569, %r1656, 3;
	xor.b32  	%r570, %r568, %r569;
	add.s32 	%r571, %r565, %r1657;
	add.s32 	%r1637, %r571, %r570;
	add.s32 	%r572, %r1637, %r467;
	xor.b32  	%r573, %r519, %r490;
	and.b32  	%r574, %r549, %r573;
	xor.b32  	%r575, %r574, %r490;
	add.s32 	%r576, %r572, %r575;
	shf.l.wrap.b32 	%r577, %r549, %r549, 18;
	xor.b32  	%r578, %r577, %r549;
	shf.l.wrap.b32 	%r579, %r578, %r578, 27;
	xor.b32  	%r580, %r579, %r549;
	shf.l.wrap.b32 	%r581, %r580, %r580, 26;
	add.s32 	%r582, %r576, %r581;
	add.s32 	%r583, %r582, 264347078;
	add.s32 	%r584, %r583, %r478;
	shf.l.wrap.b32 	%r585, %r560, %r560, 23;
	xor.b32  	%r586, %r585, %r560;
	shf.l.wrap.b32 	%r587, %r586, %r586, 21;
	xor.b32  	%r588, %r587, %r560;
	shf.l.wrap.b32 	%r589, %r588, %r588, 30;
	and.b32  	%r590, %r560, %r530;
	or.b32  	%r591, %r560, %r530;
	and.b32  	%r592, %r591, %r501;
	or.b32  	%r593, %r592, %r590;
	add.s32 	%r594, %r589, %r593;
	add.s32 	%r595, %r594, %r583;
	shf.l.wrap.b32 	%r596, %r1641, %r1641, 15;
	shf.l.wrap.b32 	%r597, %r1641, %r1641, 13;
	xor.b32  	%r598, %r596, %r597;
	shr.u32 	%r599, %r1641, 10;
	xor.b32  	%r600, %r598, %r599;
	shf.l.wrap.b32 	%r601, %r1655, %r1655, 14;
	shf.l.wrap.b32 	%r602, %r1655, %r1655, 25;
	xor.b32  	%r603, %r602, %r601;
	shr.u32 	%r604, %r1655, 3;
	xor.b32  	%r605, %r603, %r604;
	add.s32 	%r606, %r600, %r1656;
	add.s32 	%r1635, %r606, %r605;
	add.s32 	%r607, %r1635, %r490;
	xor.b32  	%r608, %r549, %r519;
	and.b32  	%r609, %r584, %r608;
	xor.b32  	%r610, %r609, %r519;
	add.s32 	%r611, %r607, %r610;
	shf.l.wrap.b32 	%r612, %r584, %r584, 18;
	xor.b32  	%r613, %r612, %r584;
	shf.l.wrap.b32 	%r614, %r613, %r613, 27;
	xor.b32  	%r615, %r614, %r584;
	shf.l.wrap.b32 	%r616, %r615, %r615, 26;
	add.s32 	%r617, %r611, %r616;
	add.s32 	%r618, %r617, 604807628;
	add.s32 	%r619, %r618, %r501;
	shf.l.wrap.b32 	%r620, %r595, %r595, 23;
	xor.b32  	%r621, %r620, %r595;
	shf.l.wrap.b32 	%r622, %r621, %r621, 21;
	xor.b32  	%r623, %r622, %r595;
	shf.l.wrap.b32 	%r624, %r623, %r623, 30;
	and.b32  	%r625, %r595, %r560;
	or.b32  	%r626, %r595, %r560;
	and.b32  	%r627, %r626, %r530;
	or.b32  	%r628, %r627, %r625;
	add.s32 	%r629, %r624, %r628;
	add.s32 	%r630, %r629, %r618;
	shf.l.wrap.b32 	%r631, %r1637, %r1637, 15;
	shf.l.wrap.b32 	%r632, %r1637, %r1637, 13;
	xor.b32  	%r633, %r631, %r632;
	shr.u32 	%r634, %r1637, 10;
	xor.b32  	%r635, %r633, %r634;
	shf.l.wrap.b32 	%r636, %r1654, %r1654, 14;
	shf.l.wrap.b32 	%r637, %r1654, %r1654, 25;
	xor.b32  	%r638, %r637, %r636;
	shr.u32 	%r639, %r1654, 3;
	xor.b32  	%r640, %r638, %r639;
	add.s32 	%r641, %r635, %r1655;
	add.s32 	%r1633, %r641, %r640;
	add.s32 	%r642, %r1633, %r519;
	xor.b32  	%r643, %r584, %r549;
	and.b32  	%r644, %r619, %r643;
	xor.b32  	%r645, %r644, %r549;
	add.s32 	%r646, %r642, %r645;
	shf.l.wrap.b32 	%r647, %r619, %r619, 18;
	xor.b32  	%r648, %r647, %r619;
	shf.l.wrap.b32 	%r649, %r648, %r648, 27;
	xor.b32  	%r650, %r649, %r619;
	shf.l.wrap.b32 	%r651, %r650, %r650, 26;
	add.s32 	%r652, %r646, %r651;
	add.s32 	%r653, %r652, 770255983;
	add.s32 	%r654, %r653, %r530;
	shf.l.wrap.b32 	%r655, %r630, %r630, 23;
	xor.b32  	%r656, %r655, %r630;
	shf.l.wrap.b32 	%r657, %r656, %r656, 21;
	xor.b32  	%r658, %r657, %r630;
	shf.l.wrap.b32 	%r659, %r658, %r658, 30;
	and.b32  	%r660, %r630, %r595;
	or.b32  	%r661, %r630, %r595;
	and.b32  	%r662, %r661, %r560;
	or.b32  	%r663, %r662, %r660;
	add.s32 	%r664, %r659, %r663;
	add.s32 	%r665, %r664, %r653;
	shf.l.wrap.b32 	%r666, %r1635, %r1635, 15;
	shf.l.wrap.b32 	%r667, %r1635, %r1635, 13;
	xor.b32  	%r668, %r666, %r667;
	shr.u32 	%r669, %r1635, 10;
	xor.b32  	%r670, %r668, %r669;
	shf.l.wrap.b32 	%r671, %r1653, %r1653, 14;
	shf.l.wrap.b32 	%r672, %r1653, %r1653, 25;
	xor.b32  	%r673, %r672, %r671;
	shr.u32 	%r674, %r1653, 3;
	xor.b32  	%r675, %r673, %r674;
	add.s32 	%r676, %r670, %r1654;
	add.s32 	%r1631, %r676, %r675;
	add.s32 	%r677, %r1631, %r549;
	xor.b32  	%r678, %r619, %r584;
	and.b32  	%r679, %r654, %r678;
	xor.b32  	%r680, %r679, %r584;
	add.s32 	%r681, %r677, %r680;
	shf.l.wrap.b32 	%r682, %r654, %r654, 18;
	xor.b32  	%r683, %r682, %r654;
	shf.l.wrap.b32 	%r684, %r683, %r683, 27;
	xor.b32  	%r685, %r684, %r654;
	shf.l.wrap.b32 	%r686, %r685, %r685, 26;
	add.s32 	%r687, %r681, %r686;
	add.s32 	%r688, %r687, 1249150122;
	add.s32 	%r689, %r688, %r560;
	shf.l.wrap.b32 	%r690, %r665, %r665, 23;
	xor.b32  	%r691, %r690, %r665;
	shf.l.wrap.b32 	%r692, %r691, %r691, 21;
	xor.b32  	%r693, %r692, %r665;
	shf.l.wrap.b32 	%r694, %r693, %r693, 30;
	and.b32  	%r695, %r665, %r630;
	or.b32  	%r696, %r665, %r630;
	and.b32  	%r697, %r696, %r595;
	or.b32  	%r698, %r697, %r695;
	add.s32 	%r699, %r694, %r698;
	add.s32 	%r700, %r699, %r688;
	shf.l.wrap.b32 	%r701, %r1633, %r1633, 15;
	shf.l.wrap.b32 	%r702, %r1633, %r1633, 13;
	xor.b32  	%r703, %r701, %r702;
	shr.u32 	%r704, %r1633, 10;
	xor.b32  	%r705, %r703, %r704;
	shf.l.wrap.b32 	%r706, %r1652, %r1652, 14;
	shf.l.wrap.b32 	%r707, %r1652, %r1652, 25;
	xor.b32  	%r708, %r707, %r706;
	shr.u32 	%r709, %r1652, 3;
	xor.b32  	%r710, %r708, %r709;
	add.s32 	%r711, %r705, %r1653;
	add.s32 	%r712, %r711, %r710;
	add.s32 	%r1629, %r712, 256;
	add.s32 	%r713, %r1629, %r584;
	xor.b32  	%r714, %r654, %r619;
	and.b32  	%r715, %r689, %r714;
	xor.b32  	%r716, %r715, %r619;
	add.s32 	%r717, %r713, %r716;
	shf.l.wrap.b32 	%r718, %r689, %r689, 18;
	xor.b32  	%r719, %r718, %r689;
	shf.l.wrap.b32 	%r720, %r719, %r719, 27;
	xor.b32  	%r721, %r720, %r689;
	shf.l.wrap.b32 	%r722, %r721, %r721, 26;
	add.s32 	%r723, %r717, %r722;
	add.s32 	%r724, %r723, 1555081692;
	add.s32 	%r725, %r724, %r595;
	shf.l.wrap.b32 	%r726, %r700, %r700, 23;
	xor.b32  	%r727, %r726, %r700;
	shf.l.wrap.b32 	%r728, %r727, %r727, 21;
	xor.b32  	%r729, %r728, %r700;
	shf.l.wrap.b32 	%r730, %r729, %r729, 30;
	and.b32  	%r731, %r700, %r665;
	or.b32  	%r732, %r700, %r665;
	and.b32  	%r733, %r732, %r630;
	or.b32  	%r734, %r733, %r731;
	add.s32 	%r735, %r730, %r734;
	add.s32 	%r736, %r735, %r724;
	shf.l.wrap.b32 	%r737, %r1631, %r1631, 15;
	shf.l.wrap.b32 	%r738, %r1631, %r1631, 13;
	xor.b32  	%r739, %r737, %r738;
	shr.u32 	%r740, %r1631, 10;
	xor.b32  	%r741, %r739, %r740;
	add.s32 	%r742, %r741, %r1652;
	add.s32 	%r743, %r742, %r1640;
	add.s32 	%r1628, %r743, %r14;
	add.s32 	%r744, %r1628, %r619;
	xor.b32  	%r745, %r689, %r654;
	and.b32  	%r746, %r725, %r745;
	xor.b32  	%r747, %r746, %r654;
	add.s32 	%r748, %r744, %r747;
	shf.l.wrap.b32 	%r749, %r725, %r725, 18;
	xor.b32  	%r750, %r749, %r725;
	shf.l.wrap.b32 	%r751, %r750, %r750, 27;
	xor.b32  	%r752, %r751, %r725;
	shf.l.wrap.b32 	%r753, %r752, %r752, 26;
	add.s32 	%r754, %r748, %r753;
	add.s32 	%r755, %r754, 1996064986;
	add.s32 	%r756, %r755, %r630;
	shf.l.wrap.b32 	%r757, %r736, %r736, 23;
	xor.b32  	%r758, %r757, %r736;
	shf.l.wrap.b32 	%r759, %r758, %r758, 21;
	xor.b32  	%r760, %r759, %r736;
	shf.l.wrap.b32 	%r761, %r760, %r760, 30;
	and.b32  	%r762, %r736, %r700;
	or.b32  	%r763, %r736, %r700;
	and.b32  	%r764, %r763, %r665;
	or.b32  	%r765, %r764, %r762;
	add.s32 	%r766, %r761, %r765;
	add.s32 	%r767, %r766, %r755;
	shf.l.wrap.b32 	%r768, %r1629, %r1629, 15;
	shf.l.wrap.b32 	%r769, %r1629, %r1629, 13;
	xor.b32  	%r770, %r768, %r769;
	shr.u32 	%r771, %r1629, 10;
	xor.b32  	%r772, %r770, %r771;
	xor.b32  	%r773, %r1641, -2147483648;
	add.s32 	%r1627, %r773, %r772;
	add.s32 	%r774, %r1627, %r654;
	xor.b32  	%r775, %r725, %r689;
	and.b32  	%r776, %r756, %r775;
	xor.b32  	%r777, %r776, %r689;
	add.s32 	%r778, %r774, %r777;
	shf.l.wrap.b32 	%r779, %r756, %r756, 18;
	xor.b32  	%r780, %r779, %r756;
	shf.l.wrap.b32 	%r781, %r780, %r780, 27;
	xor.b32  	%r782, %r781, %r756;
	shf.l.wrap.b32 	%r783, %r782, %r782, 26;
	add.s32 	%r784, %r778, %r783;
	add.s32 	%r785, %r784, -1740746414;
	add.s32 	%r786, %r785, %r665;
	shf.l.wrap.b32 	%r787, %r767, %r767, 23;
	xor.b32  	%r788, %r787, %r767;
	shf.l.wrap.b32 	%r789, %r788, %r788, 21;
	xor.b32  	%r790, %r789, %r767;
	shf.l.wrap.b32 	%r791, %r790, %r790, 30;
	and.b32  	%r792, %r767, %r736;
	or.b32  	%r793, %r767, %r736;
	and.b32  	%r794, %r793, %r700;
	or.b32  	%r795, %r794, %r792;
	add.s32 	%r796, %r791, %r795;
	add.s32 	%r797, %r796, %r785;
	shf.l.wrap.b32 	%r798, %r1628, %r1628, 15;
	shf.l.wrap.b32 	%r799, %r1628, %r1628, 13;
	xor.b32  	%r800, %r798, %r799;
	shr.u32 	%r801, %r1628, 10;
	xor.b32  	%r802, %r800, %r801;
	add.s32 	%r1639, %r802, %r1637;
	add.s32 	%r803, %r1639, %r689;
	xor.b32  	%r804, %r756, %r725;
	and.b32  	%r805, %r786, %r804;
	xor.b32  	%r806, %r805, %r725;
	add.s32 	%r807, %r803, %r806;
	shf.l.wrap.b32 	%r808, %r786, %r786, 18;
	xor.b32  	%r809, %r808, %r786;
	shf.l.wrap.b32 	%r810, %r809, %r809, 27;
	xor.b32  	%r811, %r810, %r786;
	shf.l.wrap.b32 	%r812, %r811, %r811, 26;
	add.s32 	%r813, %r807, %r812;
	add.s32 	%r814, %r813, -1473132947;
	add.s32 	%r815, %r814, %r700;
	shf.l.wrap.b32 	%r816, %r797, %r797, 23;
	xor.b32  	%r817, %r816, %r797;
	shf.l.wrap.b32 	%r818, %r817, %r817, 21;
	xor.b32  	%r819, %r818, %r797;
	shf.l.wrap.b32 	%r820, %r819, %r819, 30;
	and.b32  	%r821, %r797, %r767;
	or.b32  	%r822, %r797, %r767;
	and.b32  	%r823, %r822, %r736;
	or.b32  	%r824, %r823, %r821;
	add.s32 	%r825, %r820, %r824;
	add.s32 	%r826, %r825, %r814;
	shf.l.wrap.b32 	%r827, %r1627, %r1627, 15;
	shf.l.wrap.b32 	%r828, %r1627, %r1627, 13;
	xor.b32  	%r829, %r827, %r828;
	shr.u32 	%r830, %r1627, 10;
	xor.b32  	%r831, %r829, %r830;
	add.s32 	%r1636, %r831, %r1635;
	add.s32 	%r832, %r1636, %r725;
	xor.b32  	%r833, %r786, %r756;
	and.b32  	%r834, %r815, %r833;
	xor.b32  	%r835, %r834, %r756;
	add.s32 	%r836, %r832, %r835;
	shf.l.wrap.b32 	%r837, %r815, %r815, 18;
	xor.b32  	%r838, %r837, %r815;
	shf.l.wrap.b32 	%r839, %r838, %r838, 27;
	xor.b32  	%r840, %r839, %r815;
	shf.l.wrap.b32 	%r841, %r840, %r840, 26;
	add.s32 	%r842, %r836, %r841;
	add.s32 	%r843, %r842, -1341970488;
	add.s32 	%r844, %r843, %r736;
	shf.l.wrap.b32 	%r845, %r826, %r826, 23;
	xor.b32  	%r846, %r845, %r826;
	shf.l.wrap.b32 	%r847, %r846, %r846, 21;
	xor.b32  	%r848, %r847, %r826;
	shf.l.wrap.b32 	%r849, %r848, %r848, 30;
	and.b32  	%r850, %r826, %r797;
	or.b32  	%r851, %r826, %r797;
	and.b32  	%r852, %r851, %r767;
	or.b32  	%r853, %r852, %r850;
	add.s32 	%r854, %r849, %r853;
	add.s32 	%r855, %r854, %r843;
	shf.l.wrap.b32 	%r856, %r1639, %r1639, 15;
	shf.l.wrap.b32 	%r857, %r1639, %r1639, 13;
	xor.b32  	%r858, %r856, %r857;
	shr.u32 	%r859, %r1639, 10;
	xor.b32  	%r860, %r858, %r859;
	add.s32 	%r1634, %r860, %r1633;
	add.s32 	%r861, %r1634, %r756;
	xor.b32  	%r862, %r815, %r786;
	and.b32  	%r863, %r844, %r862;
	xor.b32  	%r864, %r863, %r786;
	add.s32 	%r865, %r861, %r864;
	shf.l.wrap.b32 	%r866, %r844, %r844, 18;
	xor.b32  	%r867, %r866, %r844;
	shf.l.wrap.b32 	%r868, %r867, %r867, 27;
	xor.b32  	%r869, %r868, %r844;
	shf.l.wrap.b32 	%r870, %r869, %r869, 26;
	add.s32 	%r871, %r865, %r870;
	add.s32 	%r872, %r871, -1084653625;
	add.s32 	%r873, %r872, %r767;
	shf.l.wrap.b32 	%r874, %r855, %r855, 23;
	xor.b32  	%r875, %r874, %r855;
	shf.l.wrap.b32 	%r876, %r875, %r875, 21;
	xor.b32  	%r877, %r876, %r855;
	shf.l.wrap.b32 	%r878, %r877, %r877, 30;
	and.b32  	%r879, %r855, %r826;
	or.b32  	%r880, %r855, %r826;
	and.b32  	%r881, %r880, %r797;
	or.b32  	%r882, %r881, %r879;
	add.s32 	%r883, %r878, %r882;
	add.s32 	%r884, %r883, %r872;
	shf.l.wrap.b32 	%r885, %r1636, %r1636, 15;
	shf.l.wrap.b32 	%r886, %r1636, %r1636, 13;
	xor.b32  	%r887, %r885, %r886;
	shr.u32 	%r888, %r1636, 10;
	xor.b32  	%r889, %r887, %r888;
	add.s32 	%r1632, %r889, %r1631;
	add.s32 	%r890, %r1632, %r786;
	xor.b32  	%r891, %r844, %r815;
	and.b32  	%r892, %r873, %r891;
	xor.b32  	%r893, %r892, %r815;
	add.s32 	%r894, %r890, %r893;
	shf.l.wrap.b32 	%r895, %r873, %r873, 18;
	xor.b32  	%r896, %r895, %r873;
	shf.l.wrap.b32 	%r897, %r896, %r896, 27;
	xor.b32  	%r898, %r897, %r873;
	shf.l.wrap.b32 	%r899, %r898, %r898, 26;
	add.s32 	%r900, %r894, %r899;
	add.s32 	%r901, %r900, -958395405;
	add.s32 	%r1644, %r901, %r797;
	shf.l.wrap.b32 	%r902, %r884, %r884, 23;
	xor.b32  	%r903, %r902, %r884;
	shf.l.wrap.b32 	%r904, %r903, %r903, 21;
	xor.b32  	%r905, %r904, %r884;
	shf.l.wrap.b32 	%r906, %r905, %r905, 30;
	and.b32  	%r907, %r884, %r855;
	or.b32  	%r908, %r884, %r855;
	and.b32  	%r909, %r908, %r826;
	or.b32  	%r910, %r909, %r907;
	add.s32 	%r911, %r906, %r910;
	add.s32 	%r1649, %r911, %r901;
	shf.l.wrap.b32 	%r912, %r1634, %r1634, 15;
	shf.l.wrap.b32 	%r913, %r1634, %r1634, 13;
	xor.b32  	%r914, %r912, %r913;
	shr.u32 	%r915, %r1634, 10;
	xor.b32  	%r916, %r914, %r915;
	add.s32 	%r1630, %r916, %r1629;
	add.s32 	%r917, %r1630, %r815;
	xor.b32  	%r918, %r873, %r844;
	and.b32  	%r919, %r1644, %r918;
	xor.b32  	%r920, %r919, %r844;
	add.s32 	%r921, %r917, %r920;
	shf.l.wrap.b32 	%r922, %r1644, %r1644, 18;
	xor.b32  	%r923, %r922, %r1644;
	shf.l.wrap.b32 	%r924, %r923, %r923, 27;
	xor.b32  	%r925, %r924, %r1644;
	shf.l.wrap.b32 	%r926, %r925, %r925, 26;
	add.s32 	%r927, %r921, %r926;
	add.s32 	%r928, %r927, -710438585;
	add.s32 	%r1645, %r928, %r826;
	shf.l.wrap.b32 	%r929, %r1649, %r1649, 23;
	xor.b32  	%r930, %r929, %r1649;
	shf.l.wrap.b32 	%r931, %r930, %r930, 21;
	xor.b32  	%r932, %r931, %r1649;
	shf.l.wrap.b32 	%r933, %r932, %r932, 30;
	and.b32  	%r934, %r1649, %r884;
	or.b32  	%r935, %r1649, %r884;
	and.b32  	%r936, %r935, %r855;
	or.b32  	%r937, %r936, %r934;
	add.s32 	%r938, %r933, %r937;
	add.s32 	%r1648, %r938, %r928;
	shf.l.wrap.b32 	%r939, %r1632, %r1632, 15;
	shf.l.wrap.b32 	%r940, %r1632, %r1632, 13;
	xor.b32  	%r941, %r939, %r940;
	shr.u32 	%r942, %r1632, 10;
	xor.b32  	%r943, %r941, %r942;
	add.s32 	%r944, %r943, %r1628;
	add.s32 	%r1642, %r944, %r15;
	add.s32 	%r945, %r1642, %r844;
	xor.b32  	%r946, %r1644, %r873;
	and.b32  	%r947, %r1645, %r946;
	xor.b32  	%r948, %r947, %r873;
	add.s32 	%r949, %r945, %r948;
	shf.l.wrap.b32 	%r950, %r1645, %r1645, 18;
	xor.b32  	%r951, %r950, %r1645;
	shf.l.wrap.b32 	%r952, %r951, %r951, 27;
	xor.b32  	%r953, %r952, %r1645;
	shf.l.wrap.b32 	%r954, %r953, %r953, 26;
	add.s32 	%r955, %r949, %r954;
	add.s32 	%r956, %r955, 113926993;
	add.s32 	%r1651, %r956, %r855;
	shf.l.wrap.b32 	%r957, %r1648, %r1648, 23;
	xor.b32  	%r958, %r957, %r1648;
	shf.l.wrap.b32 	%r959, %r958, %r958, 21;
	xor.b32  	%r960, %r959, %r1648;
	shf.l.wrap.b32 	%r961, %r960, %r960, 30;
	and.b32  	%r962, %r1648, %r1649;
	or.b32  	%r963, %r1648, %r1649;
	and.b32  	%r964, %r963, %r884;
	or.b32  	%r965, %r964, %r962;
	add.s32 	%r966, %r961, %r965;
	add.s32 	%r1647, %r966, %r956;
	shf.l.wrap.b32 	%r967, %r1630, %r1630, 15;
	shf.l.wrap.b32 	%r968, %r1630, %r1630, 13;
	xor.b32  	%r969, %r967, %r968;
	shr.u32 	%r970, %r1630, 10;
	xor.b32  	%r971, %r969, %r970;
	shf.l.wrap.b32 	%r972, %r1640, %r1640, 25;
	shf.l.wrap.b32 	%r973, %r1640, %r1640, 14;
	xor.b32  	%r974, %r972, %r973;
	shr.u32 	%r975, %r1640, 3;
	xor.b32  	%r976, %r974, %r975;
	add.s32 	%r977, %r971, %r1627;
	add.s32 	%r978, %r977, %r976;
	add.s32 	%r1638, %r978, 256;
	add.s32 	%r979, %r1638, %r873;
	xor.b32  	%r980, %r1645, %r1644;
	and.b32  	%r981, %r1651, %r980;
	xor.b32  	%r982, %r981, %r1644;
	add.s32 	%r983, %r979, %r982;
	shf.l.wrap.b32 	%r984, %r1651, %r1651, 18;
	xor.b32  	%r985, %r984, %r1651;
	shf.l.wrap.b32 	%r986, %r985, %r985, 27;
	xor.b32  	%r987, %r986, %r1651;
	shf.l.wrap.b32 	%r988, %r987, %r987, 26;
	add.s32 	%r989, %r983, %r988;
	add.s32 	%r990, %r989, 338241895;
	add.s32 	%r1650, %r990, %r884;
	shf.l.wrap.b32 	%r991, %r1647, %r1647, 23;
	xor.b32  	%r992, %r991, %r1647;
	shf.l.wrap.b32 	%r993, %r992, %r992, 21;
	xor.b32  	%r994, %r993, %r1647;
	shf.l.wrap.b32 	%r995, %r994, %r994, 30;
	and.b32  	%r996, %r1647, %r1648;
	or.b32  	%r997, %r1647, %r1648;
	and.b32  	%r998, %r997, %r1649;
	or.b32  	%r999, %r998, %r996;
	add.s32 	%r1000, %r995, %r999;
	add.s32 	%r1646, %r1000, %r990;
	mov.u32 	%r1643, 32;
	mov.u64 	%rd15, %rd7;

$L__BB5_3:
	shf.l.wrap.b32 	%r1001, %r1642, %r1642, 13;
	shf.l.wrap.b32 	%r1002, %r1642, %r1642, 15;
	xor.b32  	%r1003, %r1002, %r1001;
	shr.u32 	%r1004, %r1642, 10;
	xor.b32  	%r1005, %r1003, %r1004;
	shf.l.wrap.b32 	%r1006, %r1641, %r1641, 14;
	shf.l.wrap.b32 	%r1007, %r1641, %r1641, 25;
	xor.b32  	%r1008, %r1007, %r1006;
	shr.u32 	%r1009, %r1641, 3;
	xor.b32  	%r1010, %r1008, %r1009;
	add.s32 	%r1011, %r1005, %r1640;
	add.s32 	%r1012, %r1011, %r1639;
	add.s32 	%r1640, %r1012, %r1010;
	shf.l.wrap.b32 	%r1013, %r1650, %r1650, 18;
	xor.b32  	%r1014, %r1013, %r1650;
	shf.l.wrap.b32 	%r1015, %r1014, %r1014, 27;
	xor.b32  	%r1016, %r1015, %r1650;
	shf.l.wrap.b32 	%r1017, %r1016, %r1016, 26;
	xor.b32  	%r1018, %r1645, %r1651;
	and.b32  	%r1019, %r1018, %r1650;
	xor.b32  	%r1020, %r1019, %r1645;
	add.s32 	%r1021, %r1644, %r1017;
	add.s32 	%r1022, %r1021, %r1020;
	ld.const.u32 	%r1023, [%rd15+128];
	add.s32 	%r1024, %r1022, %r1023;
	add.s32 	%r1025, %r1024, %r1640;
	add.s32 	%r1026, %r1025, %r1649;
	shf.l.wrap.b32 	%r1027, %r1646, %r1646, 23;
	xor.b32  	%r1028, %r1027, %r1646;
	shf.l.wrap.b32 	%r1029, %r1028, %r1028, 21;
	xor.b32  	%r1030, %r1029, %r1646;
	shf.l.wrap.b32 	%r1031, %r1030, %r1030, 30;
	or.b32  	%r1032, %r1646, %r1647;
	and.b32  	%r1033, %r1032, %r1648;
	and.b32  	%r1034, %r1646, %r1647;
	or.b32  	%r1035, %r1033, %r1034;
	add.s32 	%r1036, %r1031, %r1035;
	add.s32 	%r1037, %r1036, %r1025;
	shf.l.wrap.b32 	%r1038, %r1638, %r1638, 13;
	shf.l.wrap.b32 	%r1039, %r1638, %r1638, 15;
	xor.b32  	%r1040, %r1039, %r1038;
	shr.u32 	%r1041, %r1638, 10;
	xor.b32  	%r1042, %r1040, %r1041;
	shf.l.wrap.b32 	%r1043, %r1637, %r1637, 14;
	shf.l.wrap.b32 	%r1044, %r1637, %r1637, 25;
	xor.b32  	%r1045, %r1044, %r1043;
	shr.u32 	%r1046, %r1637, 3;
	xor.b32  	%r1047, %r1045, %r1046;
	add.s32 	%r1048, %r1042, %r1641;
	add.s32 	%r1049, %r1048, %r1636;
	add.s32 	%r1641, %r1049, %r1047;
	shf.l.wrap.b32 	%r1050, %r1026, %r1026, 18;
	xor.b32  	%r1051, %r1050, %r1026;
	shf.l.wrap.b32 	%r1052, %r1051, %r1051, 27;
	xor.b32  	%r1053, %r1052, %r1026;
	shf.l.wrap.b32 	%r1054, %r1053, %r1053, 26;
	xor.b32  	%r1055, %r1650, %r1651;
	and.b32  	%r1056, %r1026, %r1055;
	xor.b32  	%r1057, %r1056, %r1651;
	ld.const.u32 	%r1058, [%rd15+132];
	add.s32 	%r1059, %r1058, %r1645;
	add.s32 	%r1060, %r1059, %r1641;
	add.s32 	%r1061, %r1060, %r1057;
	add.s32 	%r1062, %r1061, %r1054;
	add.s32 	%r1063, %r1062, %r1648;
	shf.l.wrap.b32 	%r1064, %r1037, %r1037, 23;
	xor.b32  	%r1065, %r1064, %r1037;
	shf.l.wrap.b32 	%r1066, %r1065, %r1065, 21;
	xor.b32  	%r1067, %r1066, %r1037;
	shf.l.wrap.b32 	%r1068, %r1067, %r1067, 30;
	and.b32  	%r1069, %r1037, %r1646;
	or.b32  	%r1070, %r1037, %r1646;
	and.b32  	%r1071, %r1070, %r1647;
	or.b32  	%r1072, %r1071, %r1069;
	add.s32 	%r1073, %r1068, %r1072;
	add.s32 	%r1074, %r1073, %r1062;
	shf.l.wrap.b32 	%r1075, %r1640, %r1640, 15;
	shf.l.wrap.b32 	%r1076, %r1640, %r1640, 13;
	xor.b32  	%r1077, %r1075, %r1076;
	shr.u32 	%r1078, %r1640, 10;
	xor.b32  	%r1079, %r1077, %r1078;
	shf.l.wrap.b32 	%r1080, %r1635, %r1635, 14;
	shf.l.wrap.b32 	%r1081, %r1635, %r1635, 25;
	xor.b32  	%r1082, %r1081, %r1080;
	shr.u32 	%r1083, %r1635, 3;
	xor.b32  	%r1084, %r1082, %r1083;
	add.s32 	%r1085, %r1079, %r1637;
	add.s32 	%r1086, %r1085, %r1634;
	add.s32 	%r1637, %r1086, %r1084;
	shf.l.wrap.b32 	%r1087, %r1063, %r1063, 18;
	xor.b32  	%r1088, %r1087, %r1063;
	shf.l.wrap.b32 	%r1089, %r1088, %r1088, 27;
	xor.b32  	%r1090, %r1089, %r1063;
	shf.l.wrap.b32 	%r1091, %r1090, %r1090, 26;
	xor.b32  	%r1092, %r1026, %r1650;
	and.b32  	%r1093, %r1063, %r1092;
	xor.b32  	%r1094, %r1093, %r1650;
	ld.const.u32 	%r1095, [%rd15+136];
	add.s32 	%r1096, %r1095, %r1651;
	add.s32 	%r1097, %r1096, %r1637;
	add.s32 	%r1098, %r1097, %r1094;
	add.s32 	%r1099, %r1098, %r1091;
	add.s32 	%r1100, %r1099, %r1647;
	shf.l.wrap.b32 	%r1101, %r1074, %r1074, 23;
	xor.b32  	%r1102, %r1101, %r1074;
	shf.l.wrap.b32 	%r1103, %r1102, %r1102, 21;
	xor.b32  	%r1104, %r1103, %r1074;
	shf.l.wrap.b32 	%r1105, %r1104, %r1104, 30;
	and.b32  	%r1106, %r1074, %r1037;
	or.b32  	%r1107, %r1074, %r1037;
	and.b32  	%r1108, %r1107, %r1646;
	or.b32  	%r1109, %r1108, %r1106;
	add.s32 	%r1110, %r1105, %r1109;
	add.s32 	%r1111, %r1110, %r1099;
	shf.l.wrap.b32 	%r1112, %r1641, %r1641, 15;
	shf.l.wrap.b32 	%r1113, %r1641, %r1641, 13;
	xor.b32  	%r1114, %r1112, %r1113;
	shr.u32 	%r1115, %r1641, 10;
	xor.b32  	%r1116, %r1114, %r1115;
	shf.l.wrap.b32 	%r1117, %r1633, %r1633, 14;
	shf.l.wrap.b32 	%r1118, %r1633, %r1633, 25;
	xor.b32  	%r1119, %r1118, %r1117;
	shr.u32 	%r1120, %r1633, 3;
	xor.b32  	%r1121, %r1119, %r1120;
	add.s32 	%r1122, %r1116, %r1635;
	add.s32 	%r1123, %r1122, %r1632;
	add.s32 	%r1635, %r1123, %r1121;
	shf.l.wrap.b32 	%r1124, %r1100, %r1100, 18;
	xor.b32  	%r1125, %r1124, %r1100;
	shf.l.wrap.b32 	%r1126, %r1125, %r1125, 27;
	xor.b32  	%r1127, %r1126, %r1100;
	shf.l.wrap.b32 	%r1128, %r1127, %r1127, 26;
	xor.b32  	%r1129, %r1063, %r1026;
	and.b32  	%r1130, %r1100, %r1129;
	xor.b32  	%r1131, %r1130, %r1026;
	ld.const.u32 	%r1132, [%rd15+140];
	add.s32 	%r1133, %r1132, %r1650;
	add.s32 	%r1134, %r1133, %r1635;
	add.s32 	%r1135, %r1134, %r1131;
	add.s32 	%r1136, %r1135, %r1128;
	add.s32 	%r1137, %r1136, %r1646;
	shf.l.wrap.b32 	%r1138, %r1111, %r1111, 23;
	xor.b32  	%r1139, %r1138, %r1111;
	shf.l.wrap.b32 	%r1140, %r1139, %r1139, 21;
	xor.b32  	%r1141, %r1140, %r1111;
	shf.l.wrap.b32 	%r1142, %r1141, %r1141, 30;
	and.b32  	%r1143, %r1111, %r1074;
	or.b32  	%r1144, %r1111, %r1074;
	and.b32  	%r1145, %r1144, %r1037;
	or.b32  	%r1146, %r1145, %r1143;
	add.s32 	%r1147, %r1142, %r1146;
	add.s32 	%r1148, %r1147, %r1136;
	shf.l.wrap.b32 	%r1149, %r1637, %r1637, 15;
	shf.l.wrap.b32 	%r1150, %r1637, %r1637, 13;
	xor.b32  	%r1151, %r1149, %r1150;
	shr.u32 	%r1152, %r1637, 10;
	xor.b32  	%r1153, %r1151, %r1152;
	shf.l.wrap.b32 	%r1154, %r1631, %r1631, 14;
	shf.l.wrap.b32 	%r1155, %r1631, %r1631, 25;
	xor.b32  	%r1156, %r1155, %r1154;
	shr.u32 	%r1157, %r1631, 3;
	xor.b32  	%r1158, %r1156, %r1157;
	add.s32 	%r1159, %r1153, %r1633;
	add.s32 	%r1160, %r1159, %r1630;
	add.s32 	%r1633, %r1160, %r1158;
	shf.l.wrap.b32 	%r1161, %r1137, %r1137, 18;
	xor.b32  	%r1162, %r1161, %r1137;
	shf.l.wrap.b32 	%r1163, %r1162, %r1162, 27;
	xor.b32  	%r1164, %r1163, %r1137;
	shf.l.wrap.b32 	%r1165, %r1164, %r1164, 26;
	xor.b32  	%r1166, %r1100, %r1063;
	and.b32  	%r1167, %r1137, %r1166;
	xor.b32  	%r1168, %r1167, %r1063;
	ld.const.u32 	%r1169, [%rd15+144];
	add.s32 	%r1170, %r1169, %r1026;
	add.s32 	%r1171, %r1170, %r1633;
	add.s32 	%r1172, %r1171, %r1168;
	add.s32 	%r1173, %r1172, %r1165;
	add.s32 	%r1174, %r1173, %r1037;
	shf.l.wrap.b32 	%r1175, %r1148, %r1148, 23;
	xor.b32  	%r1176, %r1175, %r1148;
	shf.l.wrap.b32 	%r1177, %r1176, %r1176, 21;
	xor.b32  	%r1178, %r1177, %r1148;
	shf.l.wrap.b32 	%r1179, %r1178, %r1178, 30;
	and.b32  	%r1180, %r1148, %r1111;
	or.b32  	%r1181, %r1148, %r1111;
	and.b32  	%r1182, %r1181, %r1074;
	or.b32  	%r1183, %r1182, %r1180;
	add.s32 	%r1184, %r1179, %r1183;
	add.s32 	%r1185, %r1184, %r1173;
	shf.l.wrap.b32 	%r1186, %r1635, %r1635, 15;
	shf.l.wrap.b32 	%r1187, %r1635, %r1635, 13;
	xor.b32  	%r1188, %r1186, %r1187;
	shr.u32 	%r1189, %r1635, 10;
	xor.b32  	%r1190, %r1188, %r1189;
	shf.l.wrap.b32 	%r1191, %r1629, %r1629, 14;
	shf.l.wrap.b32 	%r1192, %r1629, %r1629, 25;
	xor.b32  	%r1193, %r1192, %r1191;
	shr.u32 	%r1194, %r1629, 3;
	xor.b32  	%r1195, %r1193, %r1194;
	add.s32 	%r1196, %r1190, %r1631;
	add.s32 	%r1197, %r1196, %r1642;
	add.s32 	%r1631, %r1197, %r1195;
	shf.l.wrap.b32 	%r1198, %r1174, %r1174, 18;
	xor.b32  	%r1199, %r1198, %r1174;
	shf.l.wrap.b32 	%r1200, %r1199, %r1199, 27;
	xor.b32  	%r1201, %r1200, %r1174;
	shf.l.wrap.b32 	%r1202, %r1201, %r1201, 26;
	xor.b32  	%r1203, %r1137, %r1100;
	and.b32  	%r1204, %r1174, %r1203;
	xor.b32  	%r1205, %r1204, %r1100;
	ld.const.u32 	%r1206, [%rd15+148];
	add.s32 	%r1207, %r1206, %r1063;
	add.s32 	%r1208, %r1207, %r1631;
	add.s32 	%r1209, %r1208, %r1205;
	add.s32 	%r1210, %r1209, %r1202;
	add.s32 	%r1211, %r1210, %r1074;
	shf.l.wrap.b32 	%r1212, %r1185, %r1185, 23;
	xor.b32  	%r1213, %r1212, %r1185;
	shf.l.wrap.b32 	%r1214, %r1213, %r1213, 21;
	xor.b32  	%r1215, %r1214, %r1185;
	shf.l.wrap.b32 	%r1216, %r1215, %r1215, 30;
	and.b32  	%r1217, %r1185, %r1148;
	or.b32  	%r1218, %r1185, %r1148;
	and.b32  	%r1219, %r1218, %r1111;
	or.b32  	%r1220, %r1219, %r1217;
	add.s32 	%r1221, %r1216, %r1220;
	add.s32 	%r1222, %r1221, %r1210;
	shf.l.wrap.b32 	%r1223, %r1633, %r1633, 15;
	shf.l.wrap.b32 	%r1224, %r1633, %r1633, 13;
	xor.b32  	%r1225, %r1223, %r1224;
	shr.u32 	%r1226, %r1633, 10;
	xor.b32  	%r1227, %r1225, %r1226;
	shf.l.wrap.b32 	%r1228, %r1628, %r1628, 14;
	shf.l.wrap.b32 	%r1229, %r1628, %r1628, 25;
	xor.b32  	%r1230, %r1229, %r1228;
	shr.u32 	%r1231, %r1628, 3;
	xor.b32  	%r1232, %r1230, %r1231;
	add.s32 	%r1233, %r1227, %r1629;
	add.s32 	%r1234, %r1233, %r1638;
	add.s32 	%r1629, %r1234, %r1232;
	shf.l.wrap.b32 	%r1235, %r1211, %r1211, 18;
	xor.b32  	%r1236, %r1235, %r1211;
	shf.l.wrap.b32 	%r1237, %r1236, %r1236, 27;
	xor.b32  	%r1238, %r1237, %r1211;
	shf.l.wrap.b32 	%r1239, %r1238, %r1238, 26;
	xor.b32  	%r1240, %r1174, %r1137;
	and.b32  	%r1241, %r1211, %r1240;
	xor.b32  	%r1242, %r1241, %r1137;
	ld.const.u32 	%r1243, [%rd15+152];
	add.s32 	%r1244, %r1243, %r1100;
	add.s32 	%r1245, %r1244, %r1629;
	add.s32 	%r1246, %r1245, %r1242;
	add.s32 	%r1247, %r1246, %r1239;
	add.s32 	%r1248, %r1247, %r1111;
	shf.l.wrap.b32 	%r1249, %r1222, %r1222, 23;
	xor.b32  	%r1250, %r1249, %r1222;
	shf.l.wrap.b32 	%r1251, %r1250, %r1250, 21;
	xor.b32  	%r1252, %r1251, %r1222;
	shf.l.wrap.b32 	%r1253, %r1252, %r1252, 30;
	and.b32  	%r1254, %r1222, %r1185;
	or.b32  	%r1255, %r1222, %r1185;
	and.b32  	%r1256, %r1255, %r1148;
	or.b32  	%r1257, %r1256, %r1254;
	add.s32 	%r1258, %r1253, %r1257;
	add.s32 	%r1259, %r1258, %r1247;
	shf.l.wrap.b32 	%r1260, %r1631, %r1631, 15;
	shf.l.wrap.b32 	%r1261, %r1631, %r1631, 13;
	xor.b32  	%r1262, %r1260, %r1261;
	shr.u32 	%r1263, %r1631, 10;
	xor.b32  	%r1264, %r1262, %r1263;
	shf.l.wrap.b32 	%r1265, %r1627, %r1627, 14;
	shf.l.wrap.b32 	%r1266, %r1627, %r1627, 25;
	xor.b32  	%r1267, %r1266, %r1265;
	shr.u32 	%r1268, %r1627, 3;
	xor.b32  	%r1269, %r1267, %r1268;
	add.s32 	%r1270, %r1264, %r1628;
	add.s32 	%r1271, %r1270, %r1640;
	add.s32 	%r1628, %r1271, %r1269;
	shf.l.wrap.b32 	%r1272, %r1248, %r1248, 18;
	xor.b32  	%r1273, %r1272, %r1248;
	shf.l.wrap.b32 	%r1274, %r1273, %r1273, 27;
	xor.b32  	%r1275, %r1274, %r1248;
	shf.l.wrap.b32 	%r1276, %r1275, %r1275, 26;
	xor.b32  	%r1277, %r1211, %r1174;
	and.b32  	%r1278, %r1248, %r1277;
	xor.b32  	%r1279, %r1278, %r1174;
	ld.const.u32 	%r1280, [%rd15+156];
	add.s32 	%r1281, %r1280, %r1137;
	add.s32 	%r1282, %r1281, %r1628;
	add.s32 	%r1283, %r1282, %r1279;
	add.s32 	%r1284, %r1283, %r1276;
	add.s32 	%r1285, %r1284, %r1148;
	shf.l.wrap.b32 	%r1286, %r1259, %r1259, 23;
	xor.b32  	%r1287, %r1286, %r1259;
	shf.l.wrap.b32 	%r1288, %r1287, %r1287, 21;
	xor.b32  	%r1289, %r1288, %r1259;
	shf.l.wrap.b32 	%r1290, %r1289, %r1289, 30;
	and.b32  	%r1291, %r1259, %r1222;
	or.b32  	%r1292, %r1259, %r1222;
	and.b32  	%r1293, %r1292, %r1185;
	or.b32  	%r1294, %r1293, %r1291;
	add.s32 	%r1295, %r1290, %r1294;
	add.s32 	%r1296, %r1295, %r1284;
	shf.l.wrap.b32 	%r1297, %r1629, %r1629, 15;
	shf.l.wrap.b32 	%r1298, %r1629, %r1629, 13;
	xor.b32  	%r1299, %r1297, %r1298;
	shr.u32 	%r1300, %r1629, 10;
	xor.b32  	%r1301, %r1299, %r1300;
	shf.l.wrap.b32 	%r1302, %r1639, %r1639, 14;
	shf.l.wrap.b32 	%r1303, %r1639, %r1639, 25;
	xor.b32  	%r1304, %r1303, %r1302;
	shr.u32 	%r1305, %r1639, 3;
	xor.b32  	%r1306, %r1304, %r1305;
	add.s32 	%r1307, %r1301, %r1627;
	add.s32 	%r1308, %r1307, %r1641;
	add.s32 	%r1627, %r1308, %r1306;
	shf.l.wrap.b32 	%r1309, %r1285, %r1285, 18;
	xor.b32  	%r1310, %r1309, %r1285;
	shf.l.wrap.b32 	%r1311, %r1310, %r1310, 27;
	xor.b32  	%r1312, %r1311, %r1285;
	shf.l.wrap.b32 	%r1313, %r1312, %r1312, 26;
	xor.b32  	%r1314, %r1248, %r1211;
	and.b32  	%r1315, %r1285, %r1314;
	xor.b32  	%r1316, %r1315, %r1211;
	ld.const.u32 	%r1317, [%rd15+160];
	add.s32 	%r1318, %r1317, %r1174;
	add.s32 	%r1319, %r1318, %r1627;
	add.s32 	%r1320, %r1319, %r1316;
	add.s32 	%r1321, %r1320, %r1313;
	add.s32 	%r1322, %r1321, %r1185;
	shf.l.wrap.b32 	%r1323, %r1296, %r1296, 23;
	xor.b32  	%r1324, %r1323, %r1296;
	shf.l.wrap.b32 	%r1325, %r1324, %r1324, 21;
	xor.b32  	%r1326, %r1325, %r1296;
	shf.l.wrap.b32 	%r1327, %r1326, %r1326, 30;
	and.b32  	%r1328, %r1296, %r1259;
	or.b32  	%r1329, %r1296, %r1259;
	and.b32  	%r1330, %r1329, %r1222;
	or.b32  	%r1331, %r1330, %r1328;
	add.s32 	%r1332, %r1327, %r1331;
	add.s32 	%r1333, %r1332, %r1321;
	shf.l.wrap.b32 	%r1334, %r1628, %r1628, 15;
	shf.l.wrap.b32 	%r1335, %r1628, %r1628, 13;
	xor.b32  	%r1336, %r1334, %r1335;
	shr.u32 	%r1337, %r1628, 10;
	xor.b32  	%r1338, %r1336, %r1337;
	shf.l.wrap.b32 	%r1339, %r1636, %r1636, 14;
	shf.l.wrap.b32 	%r1340, %r1636, %r1636, 25;
	xor.b32  	%r1341, %r1340, %r1339;
	shr.u32 	%r1342, %r1636, 3;
	xor.b32  	%r1343, %r1341, %r1342;
	add.s32 	%r1344, %r1338, %r1639;
	add.s32 	%r1345, %r1344, %r1637;
	add.s32 	%r1639, %r1345, %r1343;
	shf.l.wrap.b32 	%r1346, %r1322, %r1322, 18;
	xor.b32  	%r1347, %r1346, %r1322;
	shf.l.wrap.b32 	%r1348, %r1347, %r1347, 27;
	xor.b32  	%r1349, %r1348, %r1322;
	shf.l.wrap.b32 	%r1350, %r1349, %r1349, 26;
	xor.b32  	%r1351, %r1285, %r1248;
	and.b32  	%r1352, %r1322, %r1351;
	xor.b32  	%r1353, %r1352, %r1248;
	ld.const.u32 	%r1354, [%rd15+164];
	add.s32 	%r1355, %r1354, %r1211;
	add.s32 	%r1356, %r1355, %r1639;
	add.s32 	%r1357, %r1356, %r1353;
	add.s32 	%r1358, %r1357, %r1350;
	add.s32 	%r1359, %r1358, %r1222;
	shf.l.wrap.b32 	%r1360, %r1333, %r1333, 23;
	xor.b32  	%r1361, %r1360, %r1333;
	shf.l.wrap.b32 	%r1362, %r1361, %r1361, 21;
	xor.b32  	%r1363, %r1362, %r1333;
	shf.l.wrap.b32 	%r1364, %r1363, %r1363, 30;
	and.b32  	%r1365, %r1333, %r1296;
	or.b32  	%r1366, %r1333, %r1296;
	and.b32  	%r1367, %r1366, %r1259;
	or.b32  	%r1368, %r1367, %r1365;
	add.s32 	%r1369, %r1364, %r1368;
	add.s32 	%r1370, %r1369, %r1358;
	shf.l.wrap.b32 	%r1371, %r1627, %r1627, 15;
	shf.l.wrap.b32 	%r1372, %r1627, %r1627, 13;
	xor.b32  	%r1373, %r1371, %r1372;
	shr.u32 	%r1374, %r1627, 10;
	xor.b32  	%r1375, %r1373, %r1374;
	shf.l.wrap.b32 	%r1376, %r1634, %r1634, 14;
	shf.l.wrap.b32 	%r1377, %r1634, %r1634, 25;
	xor.b32  	%r1378, %r1377, %r1376;
	shr.u32 	%r1379, %r1634, 3;
	xor.b32  	%r1380, %r1378, %r1379;
	add.s32 	%r1381, %r1375, %r1636;
	add.s32 	%r1382, %r1381, %r1635;
	add.s32 	%r1636, %r1382, %r1380;
	shf.l.wrap.b32 	%r1383, %r1359, %r1359, 18;
	xor.b32  	%r1384, %r1383, %r1359;
	shf.l.wrap.b32 	%r1385, %r1384, %r1384, 27;
	xor.b32  	%r1386, %r1385, %r1359;
	shf.l.wrap.b32 	%r1387, %r1386, %r1386, 26;
	xor.b32  	%r1388, %r1322, %r1285;
	and.b32  	%r1389, %r1359, %r1388;
	xor.b32  	%r1390, %r1389, %r1285;
	ld.const.u32 	%r1391, [%rd15+168];
	add.s32 	%r1392, %r1391, %r1248;
	add.s32 	%r1393, %r1392, %r1636;
	add.s32 	%r1394, %r1393, %r1390;
	add.s32 	%r1395, %r1394, %r1387;
	add.s32 	%r1396, %r1395, %r1259;
	shf.l.wrap.b32 	%r1397, %r1370, %r1370, 23;
	xor.b32  	%r1398, %r1397, %r1370;
	shf.l.wrap.b32 	%r1399, %r1398, %r1398, 21;
	xor.b32  	%r1400, %r1399, %r1370;
	shf.l.wrap.b32 	%r1401, %r1400, %r1400, 30;
	and.b32  	%r1402, %r1370, %r1333;
	or.b32  	%r1403, %r1370, %r1333;
	and.b32  	%r1404, %r1403, %r1296;
	or.b32  	%r1405, %r1404, %r1402;
	add.s32 	%r1406, %r1401, %r1405;
	add.s32 	%r1407, %r1406, %r1395;
	shf.l.wrap.b32 	%r1408, %r1639, %r1639, 15;
	shf.l.wrap.b32 	%r1409, %r1639, %r1639, 13;
	xor.b32  	%r1410, %r1408, %r1409;
	shr.u32 	%r1411, %r1639, 10;
	xor.b32  	%r1412, %r1410, %r1411;
	shf.l.wrap.b32 	%r1413, %r1632, %r1632, 14;
	shf.l.wrap.b32 	%r1414, %r1632, %r1632, 25;
	xor.b32  	%r1415, %r1414, %r1413;
	shr.u32 	%r1416, %r1632, 3;
	xor.b32  	%r1417, %r1415, %r1416;
	add.s32 	%r1418, %r1412, %r1634;
	add.s32 	%r1419, %r1418, %r1633;
	add.s32 	%r1634, %r1419, %r1417;
	shf.l.wrap.b32 	%r1420, %r1396, %r1396, 18;
	xor.b32  	%r1421, %r1420, %r1396;
	shf.l.wrap.b32 	%r1422, %r1421, %r1421, 27;
	xor.b32  	%r1423, %r1422, %r1396;
	shf.l.wrap.b32 	%r1424, %r1423, %r1423, 26;
	xor.b32  	%r1425, %r1359, %r1322;
	and.b32  	%r1426, %r1396, %r1425;
	xor.b32  	%r1427, %r1426, %r1322;
	ld.const.u32 	%r1428, [%rd15+172];
	add.s32 	%r1429, %r1428, %r1285;
	add.s32 	%r1430, %r1429, %r1634;
	add.s32 	%r1431, %r1430, %r1427;
	add.s32 	%r1432, %r1431, %r1424;
	add.s32 	%r1433, %r1432, %r1296;
	shf.l.wrap.b32 	%r1434, %r1407, %r1407, 23;
	xor.b32  	%r1435, %r1434, %r1407;
	shf.l.wrap.b32 	%r1436, %r1435, %r1435, 21;
	xor.b32  	%r1437, %r1436, %r1407;
	shf.l.wrap.b32 	%r1438, %r1437, %r1437, 30;
	and.b32  	%r1439, %r1407, %r1370;
	or.b32  	%r1440, %r1407, %r1370;
	and.b32  	%r1441, %r1440, %r1333;
	or.b32  	%r1442, %r1441, %r1439;
	add.s32 	%r1443, %r1438, %r1442;
	add.s32 	%r1444, %r1443, %r1432;
	shf.l.wrap.b32 	%r1445, %r1636, %r1636, 15;
	shf.l.wrap.b32 	%r1446, %r1636, %r1636, 13;
	xor.b32  	%r1447, %r1445, %r1446;
	shr.u32 	%r1448, %r1636, 10;
	xor.b32  	%r1449, %r1447, %r1448;
	shf.l.wrap.b32 	%r1450, %r1630, %r1630, 14;
	shf.l.wrap.b32 	%r1451, %r1630, %r1630, 25;
	xor.b32  	%r1452, %r1451, %r1450;
	shr.u32 	%r1453, %r1630, 3;
	xor.b32  	%r1454, %r1452, %r1453;
	add.s32 	%r1455, %r1449, %r1632;
	add.s32 	%r1456, %r1455, %r1631;
	add.s32 	%r1632, %r1456, %r1454;
	shf.l.wrap.b32 	%r1457, %r1433, %r1433, 18;
	xor.b32  	%r1458, %r1457, %r1433;
	shf.l.wrap.b32 	%r1459, %r1458, %r1458, 27;
	xor.b32  	%r1460, %r1459, %r1433;
	shf.l.wrap.b32 	%r1461, %r1460, %r1460, 26;
	xor.b32  	%r1462, %r1396, %r1359;
	and.b32  	%r1463, %r1433, %r1462;
	xor.b32  	%r1464, %r1463, %r1359;
	ld.const.u32 	%r1465, [%rd15+176];
	add.s32 	%r1466, %r1465, %r1322;
	add.s32 	%r1467, %r1466, %r1632;
	add.s32 	%r1468, %r1467, %r1464;
	add.s32 	%r1469, %r1468, %r1461;
	add.s32 	%r1644, %r1469, %r1333;
	shf.l.wrap.b32 	%r1470, %r1444, %r1444, 23;
	xor.b32  	%r1471, %r1470, %r1444;
	shf.l.wrap.b32 	%r1472, %r1471, %r1471, 21;
	xor.b32  	%r1473, %r1472, %r1444;
	shf.l.wrap.b32 	%r1474, %r1473, %r1473, 30;
	and.b32  	%r1475, %r1444, %r1407;
	or.b32  	%r1476, %r1444, %r1407;
	and.b32  	%r1477, %r1476, %r1370;
	or.b32  	%r1478, %r1477, %r1475;
	add.s32 	%r1479, %r1474, %r1478;
	add.s32 	%r1649, %r1479, %r1469;
	shf.l.wrap.b32 	%r1480, %r1634, %r1634, 15;
	shf.l.wrap.b32 	%r1481, %r1634, %r1634, 13;
	xor.b32  	%r1482, %r1480, %r1481;
	shr.u32 	%r1483, %r1634, 10;
	xor.b32  	%r1484, %r1482, %r1483;
	shf.l.wrap.b32 	%r1485, %r1642, %r1642, 14;
	shf.l.wrap.b32 	%r1486, %r1642, %r1642, 25;
	xor.b32  	%r1487, %r1486, %r1485;
	shr.u32 	%r1488, %r1642, 3;
	xor.b32  	%r1489, %r1487, %r1488;
	add.s32 	%r1490, %r1484, %r1630;
	add.s32 	%r1491, %r1490, %r1629;
	add.s32 	%r1630, %r1491, %r1489;
	shf.l.wrap.b32 	%r1492, %r1644, %r1644, 18;
	xor.b32  	%r1493, %r1492, %r1644;
	shf.l.wrap.b32 	%r1494, %r1493, %r1493, 27;
	xor.b32  	%r1495, %r1494, %r1644;
	shf.l.wrap.b32 	%r1496, %r1495, %r1495, 26;
	xor.b32  	%r1497, %r1433, %r1396;
	and.b32  	%r1498, %r1644, %r1497;
	xor.b32  	%r1499, %r1498, %r1396;
	ld.const.u32 	%r1500, [%rd15+180];
	add.s32 	%r1501, %r1359, %r1500;
	add.s32 	%r1502, %r1501, %r1630;
	add.s32 	%r1503, %r1502, %r1499;
	add.s32 	%r1504, %r1503, %r1496;
	add.s32 	%r1645, %r1504, %r1370;
	shf.l.wrap.b32 	%r1505, %r1649, %r1649, 23;
	xor.b32  	%r1506, %r1505, %r1649;
	shf.l.wrap.b32 	%r1507, %r1506, %r1506, 21;
	xor.b32  	%r1508, %r1507, %r1649;
	shf.l.wrap.b32 	%r1509, %r1508, %r1508, 30;
	and.b32  	%r1510, %r1649, %r1444;
	or.b32  	%r1511, %r1649, %r1444;
	and.b32  	%r1512, %r1511, %r1407;
	or.b32  	%r1513, %r1512, %r1510;
	add.s32 	%r1514, %r1509, %r1513;
	add.s32 	%r1648, %r1514, %r1504;
	shf.l.wrap.b32 	%r1515, %r1632, %r1632, 15;
	shf.l.wrap.b32 	%r1516, %r1632, %r1632, 13;
	xor.b32  	%r1517, %r1515, %r1516;
	shr.u32 	%r1518, %r1632, 10;
	xor.b32  	%r1519, %r1517, %r1518;
	shf.l.wrap.b32 	%r1520, %r1638, %r1638, 14;
	shf.l.wrap.b32 	%r1521, %r1638, %r1638, 25;
	xor.b32  	%r1522, %r1521, %r1520;
	shr.u32 	%r1523, %r1638, 3;
	xor.b32  	%r1524, %r1522, %r1523;
	add.s32 	%r1525, %r1519, %r1642;
	add.s32 	%r1526, %r1525, %r1628;
	add.s32 	%r1642, %r1526, %r1524;
	ld.const.u32 	%r1527, [%rd15+184];
	add.s32 	%r1528, %r1642, %r1527;
	add.s32 	%r1529, %r1528, %r1396;
	shf.l.wrap.b32 	%r1530, %r1645, %r1645, 18;
	xor.b32  	%r1531, %r1530, %r1645;
	shf.l.wrap.b32 	%r1532, %r1531, %r1531, 27;
	xor.b32  	%r1533, %r1532, %r1645;
	shf.l.wrap.b32 	%r1534, %r1533, %r1533, 26;
	xor.b32  	%r1535, %r1644, %r1433;
	and.b32  	%r1536, %r1645, %r1535;
	xor.b32  	%r1537, %r1536, %r1433;
	add.s32 	%r1538, %r1529, %r1537;
	add.s32 	%r1539, %r1538, %r1534;
	add.s32 	%r1651, %r1539, %r1407;
	shf.l.wrap.b32 	%r1540, %r1648, %r1648, 23;
	xor.b32  	%r1541, %r1540, %r1648;
	shf.l.wrap.b32 	%r1542, %r1541, %r1541, 21;
	xor.b32  	%r1543, %r1542, %r1648;
	shf.l.wrap.b32 	%r1544, %r1543, %r1543, 30;
	and.b32  	%r1545, %r1648, %r1649;
	or.b32  	%r1546, %r1648, %r1649;
	and.b32  	%r1547, %r1546, %r1444;
	or.b32  	%r1548, %r1547, %r1545;
	add.s32 	%r1549, %r1544, %r1548;
	add.s32 	%r1647, %r1549, %r1539;
	shf.l.wrap.b32 	%r1550, %r1630, %r1630, 15;
	shf.l.wrap.b32 	%r1551, %r1630, %r1630, 13;
	xor.b32  	%r1552, %r1550, %r1551;
	shr.u32 	%r1553, %r1630, 10;
	xor.b32  	%r1554, %r1552, %r1553;
	shf.l.wrap.b32 	%r1555, %r1640, %r1640, 25;
	shf.l.wrap.b32 	%r1556, %r1640, %r1640, 14;
	xor.b32  	%r1557, %r1555, %r1556;
	shr.u32 	%r1558, %r1640, 3;
	xor.b32  	%r1559, %r1557, %r1558;
	add.s32 	%r1560, %r1554, %r1638;
	add.s32 	%r1561, %r1560, %r1627;
	add.s32 	%r1638, %r1561, %r1559;
	ld.const.u32 	%r1562, [%rd15+188];
	add.s32 	%r1563, %r1638, %r1562;
	add.s32 	%r1564, %r1563, %r1433;
	shf.l.wrap.b32 	%r1565, %r1651, %r1651, 18;
	xor.b32  	%r1566, %r1565, %r1651;
	shf.l.wrap.b32 	%r1567, %r1566, %r1566, 27;
	xor.b32  	%r1568, %r1567, %r1651;
	shf.l.wrap.b32 	%r1569, %r1568, %r1568, 26;
	xor.b32  	%r1570, %r1645, %r1644;
	and.b32  	%r1571, %r1651, %r1570;
	xor.b32  	%r1572, %r1571, %r1644;
	add.s32 	%r1573, %r1564, %r1572;
	add.s32 	%r1574, %r1573, %r1569;
	add.s32 	%r1650, %r1574, %r1444;
	shf.l.wrap.b32 	%r1575, %r1647, %r1647, 23;
	xor.b32  	%r1576, %r1575, %r1647;
	shf.l.wrap.b32 	%r1577, %r1576, %r1576, 21;
	xor.b32  	%r1578, %r1577, %r1647;
	shf.l.wrap.b32 	%r1579, %r1578, %r1578, 30;
	and.b32  	%r1580, %r1647, %r1648;
	or.b32  	%r1581, %r1647, %r1648;
	and.b32  	%r1582, %r1581, %r1649;
	or.b32  	%r1583, %r1582, %r1580;
	add.s32 	%r1584, %r1579, %r1583;
	add.s32 	%r1646, %r1584, %r1574;
	add.s64 	%rd15, %rd15, 64;
	add.s32 	%r1643, %r1643, 16;
	setp.lt.u32 	%p2, %r1643, 49;
	@%p2 bra 	$L__BB5_3;

	add.s32 	%r1659, %r1646, 1779033703;
	add.s32 	%r1658, %r1647, -1150833019;
	add.s32 	%r1657, %r1648, 1013904242;
	add.s32 	%r1656, %r1649, -1521486534;
	add.s32 	%r1655, %r1650, 1359893119;
	add.s32 	%r1654, %r1651, -1694144372;
	add.s32 	%r1653, %r1645, 528734635;
	add.s32 	%r1652, %r1644, 1541459225;
	add.s32 	%r1626, %r1626, 1;
	setp.lt.u32 	%p3, %r1626, %r121;
	@%p3 bra 	$L__BB5_2;

$L__BB5_5:
	sub.s32 	%r1587, %r2, %r121;
	st.global.u32 	[%rd6+64], %r1587;
	setp.eq.s32 	%p4, %r1587, 0;
	@%p4 bra 	$L__BB5_7;

	st.global.v2.u32 	[%rd6], {%r1659, %r1658};
	st.global.v2.u32 	[%rd6+8], {%r1657, %r1656};
	st.global.v2.u32 	[%rd6+16], {%r1655, %r1654};
	st.global.v2.u32 	[%rd6+24], {%r1653, %r1652};
	bra.uni 	$L__BB5_8;

$L__BB5_7:
	mov.b32 	%r1617, %envreg3;
	mov.u32 	%r1616, %tid.x;
	add.s32 	%r1615, %r1616, %r1617;
	mov.u32 	%r1614, %ctaid.x;
	mov.u32 	%r1613, %ntid.x;
	mad.lo.s32 	%r1612, %r1613, %r1614, %r1615;
	ld.param.u64 	%rd14, [loop_sha256_param_0];
	mul.wide.u32 	%rd12, %r1612, 16;
	add.s64 	%rd13, %rd14, %rd12;
	shf.l.wrap.b32 	%r1588, %r1659, %r1659, 16;
	shl.b32 	%r1589, %r1588, 8;
	and.b32  	%r1590, %r1589, -16711936;
	shr.u32 	%r1591, %r1588, 8;
	and.b32  	%r1592, %r1591, 16711935;
	shf.l.wrap.b32 	%r1593, %r1658, %r1658, 16;
	shl.b32 	%r1594, %r1593, 8;
	and.b32  	%r1595, %r1594, -16711936;
	shr.u32 	%r1596, %r1593, 8;
	and.b32  	%r1597, %r1596, 16711935;
	or.b32  	%r1598, %r1595, %r1597;
	or.b32  	%r1599, %r1590, %r1592;
	st.global.v2.u32 	[%rd13], {%r1599, %r1598};
	shf.l.wrap.b32 	%r1600, %r1657, %r1657, 16;
	shl.b32 	%r1601, %r1600, 8;
	and.b32  	%r1602, %r1601, -16711936;
	shr.u32 	%r1603, %r1600, 8;
	and.b32  	%r1604, %r1603, 16711935;
	shf.l.wrap.b32 	%r1605, %r1656, %r1656, 16;
	shl.b32 	%r1606, %r1605, 8;
	and.b32  	%r1607, %r1606, -16711936;
	shr.u32 	%r1608, %r1605, 8;
	and.b32  	%r1609, %r1608, 16711935;
	or.b32  	%r1610, %r1607, %r1609;
	or.b32  	%r1611, %r1602, %r1604;
	st.global.v2.u32 	[%rd13+8], {%r1611, %r1610};

$L__BB5_8:
	ret;

}
	// .globl	sspr_salted_sha256
.entry sspr_salted_sha256(
	.param .u64 .ptr .global .align 4 sspr_salted_sha256_param_0,
	.param .u64 .ptr .global .align 8 sspr_salted_sha256_param_1,
	.param .u64 .ptr .const .align 4 sspr_salted_sha256_param_2,
	.param .u64 .ptr .global .align 8 sspr_salted_sha256_param_3
)
{
	.local .align 16 .b8 	__local_depot6[288];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<73>;
	.reg .b16 	%rs<183>;
	.reg .b32 	%r<17099>;
	.reg .b64 	%rd<297>;


	mov.u64 	%SPL, __local_depot6;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd162, [sspr_salted_sha256_param_0];
	ld.param.u64 	%rd163, [sspr_salted_sha256_param_2];
	add.u64 	%rd273, %SPL, 16;
	add.u64 	%rd234, %SPL, 80;
	add.u64 	%rd236, %SP, 144;
	cvta.to.local.u64 	%rd238, %rd236;
	add.u64 	%rd5, %SPL, 176;
	mov.u32 	%r314, %ctaid.x;
	mov.u32 	%r315, %ntid.x;
	mov.u32 	%r316, %tid.x;
	mov.b32 	%r317, %envreg3;
	add.s32 	%r318, %r316, %r317;
	mad.lo.s32 	%r319, %r315, %r314, %r318;
	cvt.u64.u32 	%rd6, %r319;
	ld.const.u32 	%r17009, [%rd163];
	setp.eq.s32 	%p1, %r17009, 0;
	@%p1 bra 	$L__BB6_6;

	add.s64 	%rd229, %rd163, 8;
	and.b32  	%r16977, %r17009, 3;
	setp.eq.s32 	%p2, %r16977, 0;
	mov.u64 	%rd228, %rd238;
	mov.u32 	%r16978, %r17009;
	@%p2 bra 	$L__BB6_4;

	mov.u64 	%rd224, %rd238;
	mov.u64 	%rd225, %rd229;
	mov.u32 	%r16978, %r17009;

$L__BB6_3:
	.pragma "nounroll";
	add.s32 	%r16978, %r16978, -1;
	add.s64 	%rd229, %rd225, 1;
	ld.const.u8 	%rs1, [%rd225];
	add.s64 	%rd228, %rd224, 1;
	st.local.u8 	[%rd224], %rs1;
	add.s32 	%r16977, %r16977, -1;
	setp.ne.s32 	%p3, %r16977, 0;
	mov.u64 	%rd224, %rd228;
	mov.u64 	%rd225, %rd229;
	@%p3 bra 	$L__BB6_3;

$L__BB6_4:
	add.s32 	%r320, %r17009, -1;
	setp.lt.u32 	%p4, %r320, 3;
	@%p4 bra 	$L__BB6_6;

$L__BB6_5:
	ld.const.u8 	%rs2, [%rd229];
	st.local.u8 	[%rd228], %rs2;
	ld.const.u8 	%rs3, [%rd229+1];
	st.local.u8 	[%rd228+1], %rs3;
	ld.const.u8 	%rs4, [%rd229+2];
	st.local.u8 	[%rd228+2], %rs4;
	add.s64 	%rd19, %rd229, 4;
	ld.const.u8 	%rs5, [%rd229+3];
	add.s64 	%rd20, %rd228, 4;
	st.local.u8 	[%rd228+3], %rs5;
	add.s32 	%r16978, %r16978, -4;
	setp.ne.s32 	%p5, %r16978, 0;
	mov.u64 	%rd228, %rd20;
	mov.u64 	%rd229, %rd19;
	@%p5 bra 	$L__BB6_5;

$L__BB6_6:
	mul.lo.s64 	%rd170, %rd6, 68;
	add.s64 	%rd171, %rd162, %rd170;
	ld.global.u32 	%r17037, [%rd171];
	setp.eq.s32 	%p6, %r17037, 0;
	@%p6 bra 	$L__BB6_12;

	add.s64 	%rd235, %rd171, 4;
	and.b32  	%r16981, %r17037, 3;
	setp.eq.s32 	%p7, %r16981, 0;
	mov.u32 	%r16982, %r17037;
	@%p7 bra 	$L__BB6_10;

	mov.u64 	%rd230, %rd234;
	mov.u64 	%rd231, %rd235;
	mov.u32 	%r16982, %r17037;

$L__BB6_9:
	.pragma "nounroll";
	add.s32 	%r16982, %r16982, -1;
	add.s64 	%rd235, %rd231, 1;
	ld.global.u8 	%rs6, [%rd231];
	add.s64 	%rd234, %rd230, 1;
	st.local.u8 	[%rd230], %rs6;
	add.s32 	%r16981, %r16981, -1;
	setp.ne.s32 	%p8, %r16981, 0;
	mov.u64 	%rd230, %rd234;
	mov.u64 	%rd231, %rd235;
	@%p8 bra 	$L__BB6_9;

$L__BB6_10:
	add.s32 	%r321, %r17037, -1;
	setp.lt.u32 	%p9, %r321, 3;
	@%p9 bra 	$L__BB6_12;

$L__BB6_11:
	ld.global.u8 	%rs7, [%rd235];
	st.local.u8 	[%rd234], %rs7;
	ld.global.u8 	%rs8, [%rd235+1];
	st.local.u8 	[%rd234+1], %rs8;
	ld.global.u8 	%rs9, [%rd235+2];
	st.local.u8 	[%rd234+2], %rs9;
	add.s64 	%rd32, %rd235, 4;
	ld.global.u8 	%rs10, [%rd235+3];
	add.s64 	%rd33, %rd234, 4;
	st.local.u8 	[%rd234+3], %rs10;
	add.s32 	%r16982, %r16982, -4;
	setp.ne.s32 	%p10, %r16982, 0;
	mov.u64 	%rd234, %rd33;
	mov.u64 	%rd235, %rd32;
	@%p10 bra 	$L__BB6_11;

$L__BB6_12:
	mov.u32 	%r322, 0;
	st.local.u32 	[%rd5], %r322;
	mov.u32 	%r323, 1779033703;
	st.local.u32 	[%rd5+4], %r323;
	mov.u32 	%r324, -1150833019;
	st.local.u32 	[%rd5+8], %r324;
	mov.u32 	%r325, 1013904242;
	st.local.u32 	[%rd5+12], %r325;
	mov.u32 	%r326, -1521486534;
	st.local.u32 	[%rd5+16], %r326;
	mov.u32 	%r327, 1359893119;
	st.local.u32 	[%rd5+20], %r327;
	mov.u32 	%r328, -1694144372;
	st.local.u32 	[%rd5+24], %r328;
	mov.u32 	%r329, 528734635;
	st.local.u32 	[%rd5+28], %r329;
	mov.u32 	%r330, 1541459225;
	st.local.u32 	[%rd5+32], %r330;
	@%p1 bra 	$L__BB6_25;

	st.local.u32 	[%rd5], %r17009;
	setp.lt.u32 	%p12, %r17009, 64;
	@%p12 bra 	$L__BB6_19;

	mov.u32 	%r16991, 1779033703;
	mov.u32 	%r16990, -1150833019;
	mov.u32 	%r16989, 1013904242;
	mov.u32 	%r16988, -1521486534;
	mov.u32 	%r16987, 1359893119;
	mov.u32 	%r16986, -1694144372;
	mov.u32 	%r16985, 528734635;
	mov.u32 	%r16984, 1541459225;

$L__BB6_15:
	and.b64  	%rd174, %rd236, 3;
	setp.eq.s64 	%p13, %rd174, 0;
	@%p13 bra 	$L__BB6_17;

	ld.local.v4.u32 	{%r339, %r340, %r341, %r342}, [%rd238];
	mov.b32 	{%rs11, %rs12}, %r339;
	shr.u16 	%rs13, %rs11, 8;
	shr.u16 	%rs14, %rs12, 8;
	mov.b32 	{%rs15, %rs16}, %r340;
	shr.u16 	%rs17, %rs15, 8;
	shr.u16 	%rs18, %rs16, 8;
	mov.b32 	{%rs19, %rs20}, %r341;
	shr.u16 	%rs21, %rs19, 8;
	shr.u16 	%rs22, %rs20, 8;
	mov.b32 	{%rs23, %rs24}, %r342;
	shr.u16 	%rs25, %rs23, 8;
	shr.u16 	%rs26, %rs24, 8;
	cvt.u32.u16 	%r347, %rs11;
	shl.b32 	%r348, %r347, 24;
	cvt.u32.u16 	%r349, %rs13;
	shl.b32 	%r350, %r349, 16;
	or.b32  	%r351, %r350, %r348;
	and.b16  	%rs27, %rs12, 255;
	mul.wide.u16 	%r352, %rs27, 256;
	or.b32  	%r353, %r351, %r352;
	cvt.u32.u16 	%r354, %rs14;
	or.b32  	%r17008, %r353, %r354;
	cvt.u32.u16 	%r355, %rs15;
	shl.b32 	%r356, %r355, 24;
	cvt.u32.u16 	%r357, %rs17;
	shl.b32 	%r358, %r357, 16;
	or.b32  	%r359, %r358, %r356;
	and.b16  	%rs28, %rs16, 255;
	mul.wide.u16 	%r360, %rs28, 256;
	or.b32  	%r361, %r359, %r360;
	cvt.u32.u16 	%r362, %rs18;
	or.b32  	%r17007, %r361, %r362;
	cvt.u32.u16 	%r363, %rs19;
	shl.b32 	%r364, %r363, 24;
	cvt.u32.u16 	%r365, %rs21;
	shl.b32 	%r366, %r365, 16;
	or.b32  	%r367, %r366, %r364;
	and.b16  	%rs29, %rs20, 255;
	mul.wide.u16 	%r368, %rs29, 256;
	or.b32  	%r369, %r367, %r368;
	cvt.u32.u16 	%r370, %rs22;
	or.b32  	%r17006, %r369, %r370;
	cvt.u32.u16 	%r371, %rs23;
	shl.b32 	%r372, %r371, 24;
	cvt.u32.u16 	%r373, %rs25;
	shl.b32 	%r374, %r373, 16;
	or.b32  	%r375, %r374, %r372;
	and.b16  	%rs30, %rs24, 255;
	mul.wide.u16 	%r376, %rs30, 256;
	or.b32  	%r377, %r375, %r376;
	cvt.u32.u16 	%r378, %rs26;
	or.b32  	%r17005, %r377, %r378;
	ld.local.v4.u32 	{%r379, %r380, %r381, %r382}, [%rd238+16];
	mov.b32 	{%rs31, %rs32}, %r379;
	shr.u16 	%rs33, %rs31, 8;
	shr.u16 	%rs34, %rs32, 8;
	mov.b32 	{%rs35, %rs36}, %r380;
	shr.u16 	%rs37, %rs35, 8;
	shr.u16 	%rs38, %rs36, 8;
	mov.b32 	{%rs39, %rs40}, %r381;
	shr.u16 	%rs41, %rs39, 8;
	shr.u16 	%rs42, %rs40, 8;
	mov.b32 	{%rs43, %rs44}, %r382;
	shr.u16 	%rs45, %rs43, 8;
	shr.u16 	%rs46, %rs44, 8;
	cvt.u32.u16 	%r387, %rs31;
	shl.b32 	%r388, %r387, 24;
	cvt.u32.u16 	%r389, %rs33;
	shl.b32 	%r390, %r389, 16;
	or.b32  	%r391, %r390, %r388;
	and.b16  	%rs47, %rs32, 255;
	mul.wide.u16 	%r392, %rs47, 256;
	or.b32  	%r393, %r391, %r392;
	cvt.u32.u16 	%r394, %rs34;
	or.b32  	%r17004, %r393, %r394;
	cvt.u32.u16 	%r395, %rs35;
	shl.b32 	%r396, %r395, 24;
	cvt.u32.u16 	%r397, %rs37;
	shl.b32 	%r398, %r397, 16;
	or.b32  	%r399, %r398, %r396;
	and.b16  	%rs48, %rs36, 255;
	mul.wide.u16 	%r400, %rs48, 256;
	or.b32  	%r401, %r399, %r400;
	cvt.u32.u16 	%r402, %rs38;
	or.b32  	%r17003, %r401, %r402;
	cvt.u32.u16 	%r403, %rs39;
	shl.b32 	%r404, %r403, 24;
	cvt.u32.u16 	%r405, %rs41;
	shl.b32 	%r406, %r405, 16;
	or.b32  	%r407, %r406, %r404;
	and.b16  	%rs49, %rs40, 255;
	mul.wide.u16 	%r408, %rs49, 256;
	or.b32  	%r409, %r407, %r408;
	cvt.u32.u16 	%r410, %rs42;
	or.b32  	%r17002, %r409, %r410;
	cvt.u32.u16 	%r411, %rs43;
	shl.b32 	%r412, %r411, 24;
	cvt.u32.u16 	%r413, %rs45;
	shl.b32 	%r414, %r413, 16;
	or.b32  	%r415, %r414, %r412;
	and.b16  	%rs50, %rs44, 255;
	mul.wide.u16 	%r416, %rs50, 256;
	or.b32  	%r417, %r415, %r416;
	cvt.u32.u16 	%r418, %rs46;
	or.b32  	%r17001, %r417, %r418;
	ld.local.v4.u32 	{%r419, %r420, %r421, %r422}, [%rd238+32];
	mov.b32 	{%rs51, %rs52}, %r419;
	shr.u16 	%rs53, %rs51, 8;
	shr.u16 	%rs54, %rs52, 8;
	mov.b32 	{%rs55, %rs56}, %r420;
	shr.u16 	%rs57, %rs55, 8;
	shr.u16 	%rs58, %rs56, 8;
	mov.b32 	{%rs59, %rs60}, %r421;
	shr.u16 	%rs61, %rs59, 8;
	shr.u16 	%rs62, %rs60, 8;
	mov.b32 	{%rs63, %rs64}, %r422;
	shr.u16 	%rs65, %rs63, 8;
	shr.u16 	%rs66, %rs64, 8;
	cvt.u32.u16 	%r427, %rs51;
	shl.b32 	%r428, %r427, 24;
	cvt.u32.u16 	%r429, %rs53;
	shl.b32 	%r430, %r429, 16;
	or.b32  	%r431, %r430, %r428;
	and.b16  	%rs67, %rs52, 255;
	mul.wide.u16 	%r432, %rs67, 256;
	or.b32  	%r433, %r431, %r432;
	cvt.u32.u16 	%r434, %rs54;
	or.b32  	%r17000, %r433, %r434;
	cvt.u32.u16 	%r435, %rs55;
	shl.b32 	%r436, %r435, 24;
	cvt.u32.u16 	%r437, %rs57;
	shl.b32 	%r438, %r437, 16;
	or.b32  	%r439, %r438, %r436;
	and.b16  	%rs68, %rs56, 255;
	mul.wide.u16 	%r440, %rs68, 256;
	or.b32  	%r441, %r439, %r440;
	cvt.u32.u16 	%r442, %rs58;
	or.b32  	%r16999, %r441, %r442;
	cvt.u32.u16 	%r443, %rs59;
	shl.b32 	%r444, %r443, 24;
	cvt.u32.u16 	%r445, %rs61;
	shl.b32 	%r446, %r445, 16;
	or.b32  	%r447, %r446, %r444;
	and.b16  	%rs69, %rs60, 255;
	mul.wide.u16 	%r448, %rs69, 256;
	or.b32  	%r449, %r447, %r448;
	cvt.u32.u16 	%r450, %rs62;
	or.b32  	%r16998, %r449, %r450;
	cvt.u32.u16 	%r451, %rs63;
	shl.b32 	%r452, %r451, 24;
	cvt.u32.u16 	%r453, %rs65;
	shl.b32 	%r454, %r453, 16;
	or.b32  	%r455, %r454, %r452;
	and.b16  	%rs70, %rs64, 255;
	mul.wide.u16 	%r456, %rs70, 256;
	or.b32  	%r457, %r455, %r456;
	cvt.u32.u16 	%r458, %rs66;
	or.b32  	%r16997, %r457, %r458;
	ld.local.v4.u32 	{%r459, %r460, %r461, %r462}, [%rd238+48];
	mov.b32 	{%rs71, %rs72}, %r459;
	shr.u16 	%rs73, %rs71, 8;
	shr.u16 	%rs74, %rs72, 8;
	mov.b32 	{%rs75, %rs76}, %r460;
	shr.u16 	%rs77, %rs75, 8;
	shr.u16 	%rs78, %rs76, 8;
	mov.b32 	{%rs79, %rs80}, %r461;
	shr.u16 	%rs81, %rs79, 8;
	shr.u16 	%rs82, %rs80, 8;
	mov.b32 	{%rs83, %rs84}, %r462;
	shr.u16 	%rs85, %rs83, 8;
	shr.u16 	%rs86, %rs84, 8;
	cvt.u32.u16 	%r467, %rs71;
	shl.b32 	%r468, %r467, 24;
	cvt.u32.u16 	%r469, %rs73;
	shl.b32 	%r470, %r469, 16;
	or.b32  	%r471, %r470, %r468;
	and.b16  	%rs87, %rs72, 255;
	mul.wide.u16 	%r472, %rs87, 256;
	or.b32  	%r473, %r471, %r472;
	cvt.u32.u16 	%r474, %rs74;
	or.b32  	%r16996, %r473, %r474;
	cvt.u32.u16 	%r475, %rs75;
	shl.b32 	%r476, %r475, 24;
	cvt.u32.u16 	%r477, %rs77;
	shl.b32 	%r478, %r477, 16;
	or.b32  	%r479, %r478, %r476;
	and.b16  	%rs88, %rs76, 255;
	mul.wide.u16 	%r480, %rs88, 256;
	or.b32  	%r481, %r479, %r480;
	cvt.u32.u16 	%r482, %rs78;
	or.b32  	%r16995, %r481, %r482;
	cvt.u32.u16 	%r483, %rs79;
	shl.b32 	%r484, %r483, 24;
	cvt.u32.u16 	%r485, %rs81;
	shl.b32 	%r486, %r485, 16;
	or.b32  	%r487, %r486, %r484;
	and.b16  	%rs89, %rs80, 255;
	mul.wide.u16 	%r488, %rs89, 256;
	or.b32  	%r489, %r487, %r488;
	cvt.u32.u16 	%r490, %rs82;
	or.b32  	%r16994, %r489, %r490;
	cvt.u32.u16 	%r491, %rs83;
	shl.b32 	%r492, %r491, 24;
	cvt.u32.u16 	%r493, %rs85;
	shl.b32 	%r494, %r493, 16;
	or.b32  	%r495, %r494, %r492;
	and.b16  	%rs90, %rs84, 255;
	mul.wide.u16 	%r496, %rs90, 256;
	or.b32  	%r497, %r495, %r496;
	cvt.u32.u16 	%r498, %rs86;
	or.b32  	%r16993, %r497, %r498;
	bra.uni 	$L__BB6_18;

$L__BB6_17:
	ld.local.v4.u32 	{%r499, %r500, %r501, %r502}, [%rd238];
	shf.l.wrap.b32 	%r507, %r499, %r499, 16;
	shl.b32 	%r508, %r507, 8;
	and.b32  	%r509, %r508, -16711936;
	shr.u32 	%r510, %r507, 8;
	and.b32  	%r511, %r510, 16711935;
	or.b32  	%r17008, %r509, %r511;
	shf.l.wrap.b32 	%r512, %r500, %r500, 16;
	shl.b32 	%r513, %r512, 8;
	and.b32  	%r514, %r513, -16711936;
	shr.u32 	%r515, %r512, 8;
	and.b32  	%r516, %r515, 16711935;
	or.b32  	%r17007, %r514, %r516;
	shf.l.wrap.b32 	%r517, %r501, %r501, 16;
	shl.b32 	%r518, %r517, 8;
	and.b32  	%r519, %r518, -16711936;
	shr.u32 	%r520, %r517, 8;
	and.b32  	%r521, %r520, 16711935;
	or.b32  	%r17006, %r519, %r521;
	shf.l.wrap.b32 	%r522, %r502, %r502, 16;
	shl.b32 	%r523, %r522, 8;
	and.b32  	%r524, %r523, -16711936;
	shr.u32 	%r525, %r522, 8;
	and.b32  	%r526, %r525, 16711935;
	or.b32  	%r17005, %r524, %r526;
	ld.local.v4.u32 	{%r527, %r528, %r529, %r530}, [%rd238+16];
	shf.l.wrap.b32 	%r535, %r527, %r527, 16;
	shl.b32 	%r536, %r535, 8;
	and.b32  	%r537, %r536, -16711936;
	shr.u32 	%r538, %r535, 8;
	and.b32  	%r539, %r538, 16711935;
	or.b32  	%r17004, %r537, %r539;
	shf.l.wrap.b32 	%r540, %r528, %r528, 16;
	shl.b32 	%r541, %r540, 8;
	and.b32  	%r542, %r541, -16711936;
	shr.u32 	%r543, %r540, 8;
	and.b32  	%r544, %r543, 16711935;
	or.b32  	%r17003, %r542, %r544;
	shf.l.wrap.b32 	%r545, %r529, %r529, 16;
	shl.b32 	%r546, %r545, 8;
	and.b32  	%r547, %r546, -16711936;
	shr.u32 	%r548, %r545, 8;
	and.b32  	%r549, %r548, 16711935;
	or.b32  	%r17002, %r547, %r549;
	shf.l.wrap.b32 	%r550, %r530, %r530, 16;
	shl.b32 	%r551, %r550, 8;
	and.b32  	%r552, %r551, -16711936;
	shr.u32 	%r553, %r550, 8;
	and.b32  	%r554, %r553, 16711935;
	or.b32  	%r17001, %r552, %r554;
	ld.local.v4.u32 	{%r555, %r556, %r557, %r558}, [%rd238+32];
	shf.l.wrap.b32 	%r563, %r555, %r555, 16;
	shl.b32 	%r564, %r563, 8;
	and.b32  	%r565, %r564, -16711936;
	shr.u32 	%r566, %r563, 8;
	and.b32  	%r567, %r566, 16711935;
	or.b32  	%r17000, %r565, %r567;
	shf.l.wrap.b32 	%r568, %r556, %r556, 16;
	shl.b32 	%r569, %r568, 8;
	and.b32  	%r570, %r569, -16711936;
	shr.u32 	%r571, %r568, 8;
	and.b32  	%r572, %r571, 16711935;
	or.b32  	%r16999, %r570, %r572;
	shf.l.wrap.b32 	%r573, %r557, %r557, 16;
	shl.b32 	%r574, %r573, 8;
	and.b32  	%r575, %r574, -16711936;
	shr.u32 	%r576, %r573, 8;
	and.b32  	%r577, %r576, 16711935;
	or.b32  	%r16998, %r575, %r577;
	shf.l.wrap.b32 	%r578, %r558, %r558, 16;
	shl.b32 	%r579, %r578, 8;
	and.b32  	%r580, %r579, -16711936;
	shr.u32 	%r581, %r578, 8;
	and.b32  	%r582, %r581, 16711935;
	or.b32  	%r16997, %r580, %r582;
	ld.local.v4.u32 	{%r583, %r584, %r585, %r586}, [%rd238+48];
	shf.l.wrap.b32 	%r591, %r583, %r583, 16;
	shl.b32 	%r592, %r591, 8;
	and.b32  	%r593, %r592, -16711936;
	shr.u32 	%r594, %r591, 8;
	and.b32  	%r595, %r594, 16711935;
	or.b32  	%r16996, %r593, %r595;
	shf.l.wrap.b32 	%r596, %r584, %r584, 16;
	shl.b32 	%r597, %r596, 8;
	and.b32  	%r598, %r597, -16711936;
	shr.u32 	%r599, %r596, 8;
	and.b32  	%r600, %r599, 16711935;
	or.b32  	%r16995, %r598, %r600;
	shf.l.wrap.b32 	%r601, %r585, %r585, 16;
	shl.b32 	%r602, %r601, 8;
	and.b32  	%r603, %r602, -16711936;
	shr.u32 	%r604, %r601, 8;
	and.b32  	%r605, %r604, 16711935;
	or.b32  	%r16994, %r603, %r605;
	shf.l.wrap.b32 	%r606, %r586, %r586, 16;
	shl.b32 	%r607, %r606, 8;
	and.b32  	%r608, %r607, -16711936;
	shr.u32 	%r609, %r606, 8;
	and.b32  	%r610, %r609, 16711935;
	or.b32  	%r16993, %r608, %r610;

$L__BB6_18:
	add.s32 	%r611, %r17008, %r16984;
	shf.l.wrap.b32 	%r612, %r16987, %r16987, 18;
	xor.b32  	%r613, %r612, %r16987;
	shf.l.wrap.b32 	%r614, %r613, %r613, 27;
	xor.b32  	%r615, %r614, %r16987;
	shf.l.wrap.b32 	%r616, %r615, %r615, 26;
	add.s32 	%r617, %r611, %r616;
	xor.b32  	%r618, %r16985, %r16986;
	and.b32  	%r619, %r618, %r16987;
	xor.b32  	%r620, %r619, %r16985;
	add.s32 	%r621, %r617, %r620;
	add.s32 	%r622, %r621, 1116352408;
	add.s32 	%r623, %r622, %r16988;
	shf.l.wrap.b32 	%r624, %r16991, %r16991, 23;
	xor.b32  	%r625, %r624, %r16991;
	shf.l.wrap.b32 	%r626, %r625, %r625, 21;
	xor.b32  	%r627, %r626, %r16991;
	shf.l.wrap.b32 	%r628, %r627, %r627, 30;
	or.b32  	%r629, %r16990, %r16991;
	and.b32  	%r630, %r16989, %r629;
	and.b32  	%r631, %r16990, %r16991;
	or.b32  	%r632, %r630, %r631;
	add.s32 	%r633, %r628, %r632;
	add.s32 	%r634, %r633, %r622;
	add.s32 	%r635, %r17007, %r16985;
	xor.b32  	%r636, %r16986, %r16987;
	and.b32  	%r637, %r623, %r636;
	xor.b32  	%r638, %r637, %r16986;
	add.s32 	%r639, %r635, %r638;
	shf.l.wrap.b32 	%r640, %r623, %r623, 18;
	xor.b32  	%r641, %r640, %r623;
	shf.l.wrap.b32 	%r642, %r641, %r641, 27;
	xor.b32  	%r643, %r642, %r623;
	shf.l.wrap.b32 	%r644, %r643, %r643, 26;
	add.s32 	%r645, %r639, %r644;
	add.s32 	%r646, %r645, 1899447441;
	add.s32 	%r647, %r646, %r16989;
	shf.l.wrap.b32 	%r648, %r634, %r634, 23;
	xor.b32  	%r649, %r648, %r634;
	shf.l.wrap.b32 	%r650, %r649, %r649, 21;
	xor.b32  	%r651, %r650, %r634;
	shf.l.wrap.b32 	%r652, %r651, %r651, 30;
	and.b32  	%r653, %r634, %r16991;
	or.b32  	%r654, %r634, %r16991;
	and.b32  	%r655, %r654, %r16990;
	or.b32  	%r656, %r655, %r653;
	add.s32 	%r657, %r652, %r656;
	add.s32 	%r658, %r657, %r646;
	add.s32 	%r659, %r17006, %r16986;
	xor.b32  	%r660, %r623, %r16987;
	and.b32  	%r661, %r647, %r660;
	xor.b32  	%r662, %r661, %r16987;
	add.s32 	%r663, %r659, %r662;
	shf.l.wrap.b32 	%r664, %r647, %r647, 18;
	xor.b32  	%r665, %r664, %r647;
	shf.l.wrap.b32 	%r666, %r665, %r665, 27;
	xor.b32  	%r667, %r666, %r647;
	shf.l.wrap.b32 	%r668, %r667, %r667, 26;
	add.s32 	%r669, %r663, %r668;
	add.s32 	%r670, %r669, -1245643825;
	add.s32 	%r671, %r670, %r16990;
	shf.l.wrap.b32 	%r672, %r658, %r658, 23;
	xor.b32  	%r673, %r672, %r658;
	shf.l.wrap.b32 	%r674, %r673, %r673, 21;
	xor.b32  	%r675, %r674, %r658;
	shf.l.wrap.b32 	%r676, %r675, %r675, 30;
	and.b32  	%r677, %r658, %r634;
	or.b32  	%r678, %r658, %r634;
	and.b32  	%r679, %r678, %r16991;
	or.b32  	%r680, %r679, %r677;
	add.s32 	%r681, %r676, %r680;
	add.s32 	%r682, %r681, %r670;
	add.s32 	%r683, %r17005, %r16987;
	xor.b32  	%r684, %r647, %r623;
	and.b32  	%r685, %r671, %r684;
	xor.b32  	%r686, %r685, %r623;
	add.s32 	%r687, %r683, %r686;
	shf.l.wrap.b32 	%r688, %r671, %r671, 18;
	xor.b32  	%r689, %r688, %r671;
	shf.l.wrap.b32 	%r690, %r689, %r689, 27;
	xor.b32  	%r691, %r690, %r671;
	shf.l.wrap.b32 	%r692, %r691, %r691, 26;
	add.s32 	%r693, %r687, %r692;
	add.s32 	%r694, %r693, -373957723;
	add.s32 	%r695, %r694, %r16991;
	shf.l.wrap.b32 	%r696, %r682, %r682, 23;
	xor.b32  	%r697, %r696, %r682;
	shf.l.wrap.b32 	%r698, %r697, %r697, 21;
	xor.b32  	%r699, %r698, %r682;
	shf.l.wrap.b32 	%r700, %r699, %r699, 30;
	and.b32  	%r701, %r682, %r658;
	or.b32  	%r702, %r682, %r658;
	and.b32  	%r703, %r702, %r634;
	or.b32  	%r704, %r703, %r701;
	add.s32 	%r705, %r700, %r704;
	add.s32 	%r706, %r705, %r694;
	add.s32 	%r707, %r17004, %r623;
	xor.b32  	%r708, %r671, %r647;
	and.b32  	%r709, %r695, %r708;
	xor.b32  	%r710, %r709, %r647;
	add.s32 	%r711, %r707, %r710;
	shf.l.wrap.b32 	%r712, %r695, %r695, 18;
	xor.b32  	%r713, %r712, %r695;
	shf.l.wrap.b32 	%r714, %r713, %r713, 27;
	xor.b32  	%r715, %r714, %r695;
	shf.l.wrap.b32 	%r716, %r715, %r715, 26;
	add.s32 	%r717, %r711, %r716;
	add.s32 	%r718, %r717, 961987163;
	add.s32 	%r719, %r718, %r634;
	shf.l.wrap.b32 	%r720, %r706, %r706, 23;
	xor.b32  	%r721, %r720, %r706;
	shf.l.wrap.b32 	%r722, %r721, %r721, 21;
	xor.b32  	%r723, %r722, %r706;
	shf.l.wrap.b32 	%r724, %r723, %r723, 30;
	and.b32  	%r725, %r706, %r682;
	or.b32  	%r726, %r706, %r682;
	and.b32  	%r727, %r726, %r658;
	or.b32  	%r728, %r727, %r725;
	add.s32 	%r729, %r724, %r728;
	add.s32 	%r730, %r729, %r718;
	add.s32 	%r731, %r17003, %r647;
	xor.b32  	%r732, %r695, %r671;
	and.b32  	%r733, %r719, %r732;
	xor.b32  	%r734, %r733, %r671;
	add.s32 	%r735, %r731, %r734;
	shf.l.wrap.b32 	%r736, %r719, %r719, 18;
	xor.b32  	%r737, %r736, %r719;
	shf.l.wrap.b32 	%r738, %r737, %r737, 27;
	xor.b32  	%r739, %r738, %r719;
	shf.l.wrap.b32 	%r740, %r739, %r739, 26;
	add.s32 	%r741, %r735, %r740;
	add.s32 	%r742, %r741, 1508970993;
	add.s32 	%r743, %r742, %r658;
	shf.l.wrap.b32 	%r744, %r730, %r730, 23;
	xor.b32  	%r745, %r744, %r730;
	shf.l.wrap.b32 	%r746, %r745, %r745, 21;
	xor.b32  	%r747, %r746, %r730;
	shf.l.wrap.b32 	%r748, %r747, %r747, 30;
	and.b32  	%r749, %r730, %r706;
	or.b32  	%r750, %r730, %r706;
	and.b32  	%r751, %r750, %r682;
	or.b32  	%r752, %r751, %r749;
	add.s32 	%r753, %r748, %r752;
	add.s32 	%r754, %r753, %r742;
	add.s32 	%r755, %r17002, %r671;
	xor.b32  	%r756, %r719, %r695;
	and.b32  	%r757, %r743, %r756;
	xor.b32  	%r758, %r757, %r695;
	add.s32 	%r759, %r755, %r758;
	shf.l.wrap.b32 	%r760, %r743, %r743, 18;
	xor.b32  	%r761, %r760, %r743;
	shf.l.wrap.b32 	%r762, %r761, %r761, 27;
	xor.b32  	%r763, %r762, %r743;
	shf.l.wrap.b32 	%r764, %r763, %r763, 26;
	add.s32 	%r765, %r759, %r764;
	add.s32 	%r766, %r765, -1841331548;
	add.s32 	%r767, %r766, %r682;
	shf.l.wrap.b32 	%r768, %r754, %r754, 23;
	xor.b32  	%r769, %r768, %r754;
	shf.l.wrap.b32 	%r770, %r769, %r769, 21;
	xor.b32  	%r771, %r770, %r754;
	shf.l.wrap.b32 	%r772, %r771, %r771, 30;
	and.b32  	%r773, %r754, %r730;
	or.b32  	%r774, %r754, %r730;
	and.b32  	%r775, %r774, %r706;
	or.b32  	%r776, %r775, %r773;
	add.s32 	%r777, %r772, %r776;
	add.s32 	%r778, %r777, %r766;
	add.s32 	%r779, %r17001, %r695;
	xor.b32  	%r780, %r743, %r719;
	and.b32  	%r781, %r767, %r780;
	xor.b32  	%r782, %r781, %r719;
	add.s32 	%r783, %r779, %r782;
	shf.l.wrap.b32 	%r784, %r767, %r767, 18;
	xor.b32  	%r785, %r784, %r767;
	shf.l.wrap.b32 	%r786, %r785, %r785, 27;
	xor.b32  	%r787, %r786, %r767;
	shf.l.wrap.b32 	%r788, %r787, %r787, 26;
	add.s32 	%r789, %r783, %r788;
	add.s32 	%r790, %r789, -1424204075;
	add.s32 	%r791, %r790, %r706;
	shf.l.wrap.b32 	%r792, %r778, %r778, 23;
	xor.b32  	%r793, %r792, %r778;
	shf.l.wrap.b32 	%r794, %r793, %r793, 21;
	xor.b32  	%r795, %r794, %r778;
	shf.l.wrap.b32 	%r796, %r795, %r795, 30;
	and.b32  	%r797, %r778, %r754;
	or.b32  	%r798, %r778, %r754;
	and.b32  	%r799, %r798, %r730;
	or.b32  	%r800, %r799, %r797;
	add.s32 	%r801, %r796, %r800;
	add.s32 	%r802, %r801, %r790;
	add.s32 	%r803, %r17000, %r719;
	xor.b32  	%r804, %r767, %r743;
	and.b32  	%r805, %r791, %r804;
	xor.b32  	%r806, %r805, %r743;
	add.s32 	%r807, %r803, %r806;
	shf.l.wrap.b32 	%r808, %r791, %r791, 18;
	xor.b32  	%r809, %r808, %r791;
	shf.l.wrap.b32 	%r810, %r809, %r809, 27;
	xor.b32  	%r811, %r810, %r791;
	shf.l.wrap.b32 	%r812, %r811, %r811, 26;
	add.s32 	%r813, %r807, %r812;
	add.s32 	%r814, %r813, -670586216;
	add.s32 	%r815, %r814, %r730;
	shf.l.wrap.b32 	%r816, %r802, %r802, 23;
	xor.b32  	%r817, %r816, %r802;
	shf.l.wrap.b32 	%r818, %r817, %r817, 21;
	xor.b32  	%r819, %r818, %r802;
	shf.l.wrap.b32 	%r820, %r819, %r819, 30;
	and.b32  	%r821, %r802, %r778;
	or.b32  	%r822, %r802, %r778;
	and.b32  	%r823, %r822, %r754;
	or.b32  	%r824, %r823, %r821;
	add.s32 	%r825, %r820, %r824;
	add.s32 	%r826, %r825, %r814;
	add.s32 	%r827, %r16999, %r743;
	xor.b32  	%r828, %r791, %r767;
	and.b32  	%r829, %r815, %r828;
	xor.b32  	%r830, %r829, %r767;
	add.s32 	%r831, %r827, %r830;
	shf.l.wrap.b32 	%r832, %r815, %r815, 18;
	xor.b32  	%r833, %r832, %r815;
	shf.l.wrap.b32 	%r834, %r833, %r833, 27;
	xor.b32  	%r835, %r834, %r815;
	shf.l.wrap.b32 	%r836, %r835, %r835, 26;
	add.s32 	%r837, %r831, %r836;
	add.s32 	%r838, %r837, 310598401;
	add.s32 	%r839, %r838, %r754;
	shf.l.wrap.b32 	%r840, %r826, %r826, 23;
	xor.b32  	%r841, %r840, %r826;
	shf.l.wrap.b32 	%r842, %r841, %r841, 21;
	xor.b32  	%r843, %r842, %r826;
	shf.l.wrap.b32 	%r844, %r843, %r843, 30;
	and.b32  	%r845, %r826, %r802;
	or.b32  	%r846, %r826, %r802;
	and.b32  	%r847, %r846, %r778;
	or.b32  	%r848, %r847, %r845;
	add.s32 	%r849, %r844, %r848;
	add.s32 	%r850, %r849, %r838;
	add.s32 	%r851, %r16998, %r767;
	xor.b32  	%r852, %r815, %r791;
	and.b32  	%r853, %r839, %r852;
	xor.b32  	%r854, %r853, %r791;
	add.s32 	%r855, %r851, %r854;
	shf.l.wrap.b32 	%r856, %r839, %r839, 18;
	xor.b32  	%r857, %r856, %r839;
	shf.l.wrap.b32 	%r858, %r857, %r857, 27;
	xor.b32  	%r859, %r858, %r839;
	shf.l.wrap.b32 	%r860, %r859, %r859, 26;
	add.s32 	%r861, %r855, %r860;
	add.s32 	%r862, %r861, 607225278;
	add.s32 	%r863, %r862, %r778;
	shf.l.wrap.b32 	%r864, %r850, %r850, 23;
	xor.b32  	%r865, %r864, %r850;
	shf.l.wrap.b32 	%r866, %r865, %r865, 21;
	xor.b32  	%r867, %r866, %r850;
	shf.l.wrap.b32 	%r868, %r867, %r867, 30;
	and.b32  	%r869, %r850, %r826;
	or.b32  	%r870, %r850, %r826;
	and.b32  	%r871, %r870, %r802;
	or.b32  	%r872, %r871, %r869;
	add.s32 	%r873, %r868, %r872;
	add.s32 	%r874, %r873, %r862;
	add.s32 	%r875, %r16997, %r791;
	xor.b32  	%r876, %r839, %r815;
	and.b32  	%r877, %r863, %r876;
	xor.b32  	%r878, %r877, %r815;
	add.s32 	%r879, %r875, %r878;
	shf.l.wrap.b32 	%r880, %r863, %r863, 18;
	xor.b32  	%r881, %r880, %r863;
	shf.l.wrap.b32 	%r882, %r881, %r881, 27;
	xor.b32  	%r883, %r882, %r863;
	shf.l.wrap.b32 	%r884, %r883, %r883, 26;
	add.s32 	%r885, %r879, %r884;
	add.s32 	%r886, %r885, 1426881987;
	add.s32 	%r887, %r886, %r802;
	shf.l.wrap.b32 	%r888, %r874, %r874, 23;
	xor.b32  	%r889, %r888, %r874;
	shf.l.wrap.b32 	%r890, %r889, %r889, 21;
	xor.b32  	%r891, %r890, %r874;
	shf.l.wrap.b32 	%r892, %r891, %r891, 30;
	and.b32  	%r893, %r874, %r850;
	or.b32  	%r894, %r874, %r850;
	and.b32  	%r895, %r894, %r826;
	or.b32  	%r896, %r895, %r893;
	add.s32 	%r897, %r892, %r896;
	add.s32 	%r898, %r897, %r886;
	add.s32 	%r899, %r16996, %r815;
	xor.b32  	%r900, %r863, %r839;
	and.b32  	%r901, %r887, %r900;
	xor.b32  	%r902, %r901, %r839;
	add.s32 	%r903, %r899, %r902;
	shf.l.wrap.b32 	%r904, %r887, %r887, 18;
	xor.b32  	%r905, %r904, %r887;
	shf.l.wrap.b32 	%r906, %r905, %r905, 27;
	xor.b32  	%r907, %r906, %r887;
	shf.l.wrap.b32 	%r908, %r907, %r907, 26;
	add.s32 	%r909, %r903, %r908;
	add.s32 	%r910, %r909, 1925078388;
	add.s32 	%r911, %r910, %r826;
	shf.l.wrap.b32 	%r912, %r898, %r898, 23;
	xor.b32  	%r913, %r912, %r898;
	shf.l.wrap.b32 	%r914, %r913, %r913, 21;
	xor.b32  	%r915, %r914, %r898;
	shf.l.wrap.b32 	%r916, %r915, %r915, 30;
	and.b32  	%r917, %r898, %r874;
	or.b32  	%r918, %r898, %r874;
	and.b32  	%r919, %r918, %r850;
	or.b32  	%r920, %r919, %r917;
	add.s32 	%r921, %r916, %r920;
	add.s32 	%r922, %r921, %r910;
	add.s32 	%r923, %r16995, %r839;
	xor.b32  	%r924, %r887, %r863;
	and.b32  	%r925, %r911, %r924;
	xor.b32  	%r926, %r925, %r863;
	add.s32 	%r927, %r923, %r926;
	shf.l.wrap.b32 	%r928, %r911, %r911, 18;
	xor.b32  	%r929, %r928, %r911;
	shf.l.wrap.b32 	%r930, %r929, %r929, 27;
	xor.b32  	%r931, %r930, %r911;
	shf.l.wrap.b32 	%r932, %r931, %r931, 26;
	add.s32 	%r933, %r927, %r932;
	add.s32 	%r934, %r933, -2132889090;
	add.s32 	%r935, %r934, %r850;
	shf.l.wrap.b32 	%r936, %r922, %r922, 23;
	xor.b32  	%r937, %r936, %r922;
	shf.l.wrap.b32 	%r938, %r937, %r937, 21;
	xor.b32  	%r939, %r938, %r922;
	shf.l.wrap.b32 	%r940, %r939, %r939, 30;
	and.b32  	%r941, %r922, %r898;
	or.b32  	%r942, %r922, %r898;
	and.b32  	%r943, %r942, %r874;
	or.b32  	%r944, %r943, %r941;
	add.s32 	%r945, %r940, %r944;
	add.s32 	%r946, %r945, %r934;
	add.s32 	%r947, %r16994, %r863;
	xor.b32  	%r948, %r911, %r887;
	and.b32  	%r949, %r935, %r948;
	xor.b32  	%r950, %r949, %r887;
	add.s32 	%r951, %r947, %r950;
	shf.l.wrap.b32 	%r952, %r935, %r935, 18;
	xor.b32  	%r953, %r952, %r935;
	shf.l.wrap.b32 	%r954, %r953, %r953, 27;
	xor.b32  	%r955, %r954, %r935;
	shf.l.wrap.b32 	%r956, %r955, %r955, 26;
	add.s32 	%r957, %r951, %r956;
	add.s32 	%r958, %r957, -1680079193;
	add.s32 	%r959, %r958, %r874;
	shf.l.wrap.b32 	%r960, %r946, %r946, 23;
	xor.b32  	%r961, %r960, %r946;
	shf.l.wrap.b32 	%r962, %r961, %r961, 21;
	xor.b32  	%r963, %r962, %r946;
	shf.l.wrap.b32 	%r964, %r963, %r963, 30;
	and.b32  	%r965, %r946, %r922;
	or.b32  	%r966, %r946, %r922;
	and.b32  	%r967, %r966, %r898;
	or.b32  	%r968, %r967, %r965;
	add.s32 	%r969, %r964, %r968;
	add.s32 	%r970, %r969, %r958;
	add.s32 	%r971, %r16993, %r887;
	xor.b32  	%r972, %r935, %r911;
	and.b32  	%r973, %r959, %r972;
	xor.b32  	%r974, %r973, %r911;
	add.s32 	%r975, %r971, %r974;
	shf.l.wrap.b32 	%r976, %r959, %r959, 18;
	xor.b32  	%r977, %r976, %r959;
	shf.l.wrap.b32 	%r978, %r977, %r977, 27;
	xor.b32  	%r979, %r978, %r959;
	shf.l.wrap.b32 	%r980, %r979, %r979, 26;
	add.s32 	%r981, %r975, %r980;
	add.s32 	%r982, %r981, -1046744716;
	add.s32 	%r983, %r982, %r898;
	shf.l.wrap.b32 	%r984, %r970, %r970, 23;
	xor.b32  	%r985, %r984, %r970;
	shf.l.wrap.b32 	%r986, %r985, %r985, 21;
	xor.b32  	%r987, %r986, %r970;
	shf.l.wrap.b32 	%r988, %r987, %r987, 30;
	and.b32  	%r989, %r970, %r946;
	or.b32  	%r990, %r970, %r946;
	and.b32  	%r991, %r990, %r922;
	or.b32  	%r992, %r991, %r989;
	add.s32 	%r993, %r988, %r992;
	add.s32 	%r994, %r993, %r982;
	shf.l.wrap.b32 	%r995, %r16994, %r16994, 13;
	shf.l.wrap.b32 	%r996, %r16994, %r16994, 15;
	xor.b32  	%r997, %r996, %r995;
	shr.u32 	%r998, %r16994, 10;
	xor.b32  	%r999, %r997, %r998;
	shf.l.wrap.b32 	%r1000, %r17007, %r17007, 14;
	shf.l.wrap.b32 	%r1001, %r17007, %r17007, 25;
	xor.b32  	%r1002, %r1001, %r1000;
	shr.u32 	%r1003, %r17007, 3;
	xor.b32  	%r1004, %r1002, %r1003;
	add.s32 	%r1005, %r16999, %r999;
	add.s32 	%r1006, %r1005, %r17008;
	add.s32 	%r1007, %r1006, %r1004;
	add.s32 	%r1008, %r1007, %r911;
	xor.b32  	%r1009, %r959, %r935;
	and.b32  	%r1010, %r983, %r1009;
	xor.b32  	%r1011, %r1010, %r935;
	add.s32 	%r1012, %r1008, %r1011;
	shf.l.wrap.b32 	%r1013, %r983, %r983, 18;
	xor.b32  	%r1014, %r1013, %r983;
	shf.l.wrap.b32 	%r1015, %r1014, %r1014, 27;
	xor.b32  	%r1016, %r1015, %r983;
	shf.l.wrap.b32 	%r1017, %r1016, %r1016, 26;
	add.s32 	%r1018, %r1012, %r1017;
	add.s32 	%r1019, %r1018, -459576895;
	add.s32 	%r1020, %r1019, %r922;
	shf.l.wrap.b32 	%r1021, %r994, %r994, 23;
	xor.b32  	%r1022, %r1021, %r994;
	shf.l.wrap.b32 	%r1023, %r1022, %r1022, 21;
	xor.b32  	%r1024, %r1023, %r994;
	shf.l.wrap.b32 	%r1025, %r1024, %r1024, 30;
	and.b32  	%r1026, %r994, %r970;
	or.b32  	%r1027, %r994, %r970;
	and.b32  	%r1028, %r1027, %r946;
	or.b32  	%r1029, %r1028, %r1026;
	add.s32 	%r1030, %r1025, %r1029;
	add.s32 	%r1031, %r1030, %r1019;
	shf.l.wrap.b32 	%r1032, %r16993, %r16993, 13;
	shf.l.wrap.b32 	%r1033, %r16993, %r16993, 15;
	xor.b32  	%r1034, %r1033, %r1032;
	shr.u32 	%r1035, %r16993, 10;
	xor.b32  	%r1036, %r1034, %r1035;
	shf.l.wrap.b32 	%r1037, %r17006, %r17006, 14;
	shf.l.wrap.b32 	%r1038, %r17006, %r17006, 25;
	xor.b32  	%r1039, %r1038, %r1037;
	shr.u32 	%r1040, %r17006, 3;
	xor.b32  	%r1041, %r1039, %r1040;
	add.s32 	%r1042, %r16998, %r1036;
	add.s32 	%r1043, %r1042, %r17007;
	add.s32 	%r1044, %r1043, %r1041;
	add.s32 	%r1045, %r1044, %r935;
	xor.b32  	%r1046, %r983, %r959;
	and.b32  	%r1047, %r1020, %r1046;
	xor.b32  	%r1048, %r1047, %r959;
	add.s32 	%r1049, %r1045, %r1048;
	shf.l.wrap.b32 	%r1050, %r1020, %r1020, 18;
	xor.b32  	%r1051, %r1050, %r1020;
	shf.l.wrap.b32 	%r1052, %r1051, %r1051, 27;
	xor.b32  	%r1053, %r1052, %r1020;
	shf.l.wrap.b32 	%r1054, %r1053, %r1053, 26;
	add.s32 	%r1055, %r1049, %r1054;
	add.s32 	%r1056, %r1055, -272742522;
	add.s32 	%r1057, %r1056, %r946;
	shf.l.wrap.b32 	%r1058, %r1031, %r1031, 23;
	xor.b32  	%r1059, %r1058, %r1031;
	shf.l.wrap.b32 	%r1060, %r1059, %r1059, 21;
	xor.b32  	%r1061, %r1060, %r1031;
	shf.l.wrap.b32 	%r1062, %r1061, %r1061, 30;
	and.b32  	%r1063, %r1031, %r994;
	or.b32  	%r1064, %r1031, %r994;
	and.b32  	%r1065, %r1064, %r970;
	or.b32  	%r1066, %r1065, %r1063;
	add.s32 	%r1067, %r1062, %r1066;
	add.s32 	%r1068, %r1067, %r1056;
	shf.l.wrap.b32 	%r1069, %r1007, %r1007, 15;
	shf.l.wrap.b32 	%r1070, %r1007, %r1007, 13;
	xor.b32  	%r1071, %r1069, %r1070;
	shr.u32 	%r1072, %r1007, 10;
	xor.b32  	%r1073, %r1071, %r1072;
	shf.l.wrap.b32 	%r1074, %r17005, %r17005, 14;
	shf.l.wrap.b32 	%r1075, %r17005, %r17005, 25;
	xor.b32  	%r1076, %r1075, %r1074;
	shr.u32 	%r1077, %r17005, 3;
	xor.b32  	%r1078, %r1076, %r1077;
	add.s32 	%r1079, %r17006, %r16997;
	add.s32 	%r1080, %r1079, %r1078;
	add.s32 	%r1081, %r1080, %r1073;
	add.s32 	%r1082, %r1081, %r959;
	xor.b32  	%r1083, %r1020, %r983;
	and.b32  	%r1084, %r1057, %r1083;
	xor.b32  	%r1085, %r1084, %r983;
	add.s32 	%r1086, %r1082, %r1085;
	shf.l.wrap.b32 	%r1087, %r1057, %r1057, 18;
	xor.b32  	%r1088, %r1087, %r1057;
	shf.l.wrap.b32 	%r1089, %r1088, %r1088, 27;
	xor.b32  	%r1090, %r1089, %r1057;
	shf.l.wrap.b32 	%r1091, %r1090, %r1090, 26;
	add.s32 	%r1092, %r1086, %r1091;
	add.s32 	%r1093, %r1092, 264347078;
	add.s32 	%r1094, %r1093, %r970;
	shf.l.wrap.b32 	%r1095, %r1068, %r1068, 23;
	xor.b32  	%r1096, %r1095, %r1068;
	shf.l.wrap.b32 	%r1097, %r1096, %r1096, 21;
	xor.b32  	%r1098, %r1097, %r1068;
	shf.l.wrap.b32 	%r1099, %r1098, %r1098, 30;
	and.b32  	%r1100, %r1068, %r1031;
	or.b32  	%r1101, %r1068, %r1031;
	and.b32  	%r1102, %r1101, %r994;
	or.b32  	%r1103, %r1102, %r1100;
	add.s32 	%r1104, %r1099, %r1103;
	add.s32 	%r1105, %r1104, %r1093;
	shf.l.wrap.b32 	%r1106, %r1044, %r1044, 15;
	shf.l.wrap.b32 	%r1107, %r1044, %r1044, 13;
	xor.b32  	%r1108, %r1106, %r1107;
	shr.u32 	%r1109, %r1044, 10;
	xor.b32  	%r1110, %r1108, %r1109;
	shf.l.wrap.b32 	%r1111, %r17004, %r17004, 14;
	shf.l.wrap.b32 	%r1112, %r17004, %r17004, 25;
	xor.b32  	%r1113, %r1112, %r1111;
	shr.u32 	%r1114, %r17004, 3;
	xor.b32  	%r1115, %r1113, %r1114;
	add.s32 	%r1116, %r17005, %r16996;
	add.s32 	%r1117, %r1116, %r1115;
	add.s32 	%r1118, %r1117, %r1110;
	add.s32 	%r1119, %r1118, %r983;
	xor.b32  	%r1120, %r1057, %r1020;
	and.b32  	%r1121, %r1094, %r1120;
	xor.b32  	%r1122, %r1121, %r1020;
	add.s32 	%r1123, %r1119, %r1122;
	shf.l.wrap.b32 	%r1124, %r1094, %r1094, 18;
	xor.b32  	%r1125, %r1124, %r1094;
	shf.l.wrap.b32 	%r1126, %r1125, %r1125, 27;
	xor.b32  	%r1127, %r1126, %r1094;
	shf.l.wrap.b32 	%r1128, %r1127, %r1127, 26;
	add.s32 	%r1129, %r1123, %r1128;
	add.s32 	%r1130, %r1129, 604807628;
	add.s32 	%r1131, %r1130, %r994;
	shf.l.wrap.b32 	%r1132, %r1105, %r1105, 23;
	xor.b32  	%r1133, %r1132, %r1105;
	shf.l.wrap.b32 	%r1134, %r1133, %r1133, 21;
	xor.b32  	%r1135, %r1134, %r1105;
	shf.l.wrap.b32 	%r1136, %r1135, %r1135, 30;
	and.b32  	%r1137, %r1105, %r1068;
	or.b32  	%r1138, %r1105, %r1068;
	and.b32  	%r1139, %r1138, %r1031;
	or.b32  	%r1140, %r1139, %r1137;
	add.s32 	%r1141, %r1136, %r1140;
	add.s32 	%r1142, %r1141, %r1130;
	shf.l.wrap.b32 	%r1143, %r1081, %r1081, 15;
	shf.l.wrap.b32 	%r1144, %r1081, %r1081, 13;
	xor.b32  	%r1145, %r1143, %r1144;
	shr.u32 	%r1146, %r1081, 10;
	xor.b32  	%r1147, %r1145, %r1146;
	shf.l.wrap.b32 	%r1148, %r17003, %r17003, 14;
	shf.l.wrap.b32 	%r1149, %r17003, %r17003, 25;
	xor.b32  	%r1150, %r1149, %r1148;
	shr.u32 	%r1151, %r17003, 3;
	xor.b32  	%r1152, %r1150, %r1151;
	add.s32 	%r1153, %r17004, %r16995;
	add.s32 	%r1154, %r1153, %r1152;
	add.s32 	%r1155, %r1154, %r1147;
	add.s32 	%r1156, %r1155, %r1020;
	xor.b32  	%r1157, %r1094, %r1057;
	and.b32  	%r1158, %r1131, %r1157;
	xor.b32  	%r1159, %r1158, %r1057;
	add.s32 	%r1160, %r1156, %r1159;
	shf.l.wrap.b32 	%r1161, %r1131, %r1131, 18;
	xor.b32  	%r1162, %r1161, %r1131;
	shf.l.wrap.b32 	%r1163, %r1162, %r1162, 27;
	xor.b32  	%r1164, %r1163, %r1131;
	shf.l.wrap.b32 	%r1165, %r1164, %r1164, 26;
	add.s32 	%r1166, %r1160, %r1165;
	add.s32 	%r1167, %r1166, 770255983;
	add.s32 	%r1168, %r1167, %r1031;
	shf.l.wrap.b32 	%r1169, %r1142, %r1142, 23;
	xor.b32  	%r1170, %r1169, %r1142;
	shf.l.wrap.b32 	%r1171, %r1170, %r1170, 21;
	xor.b32  	%r1172, %r1171, %r1142;
	shf.l.wrap.b32 	%r1173, %r1172, %r1172, 30;
	and.b32  	%r1174, %r1142, %r1105;
	or.b32  	%r1175, %r1142, %r1105;
	and.b32  	%r1176, %r1175, %r1068;
	or.b32  	%r1177, %r1176, %r1174;
	add.s32 	%r1178, %r1173, %r1177;
	add.s32 	%r1179, %r1178, %r1167;
	shf.l.wrap.b32 	%r1180, %r1118, %r1118, 15;
	shf.l.wrap.b32 	%r1181, %r1118, %r1118, 13;
	xor.b32  	%r1182, %r1180, %r1181;
	shr.u32 	%r1183, %r1118, 10;
	xor.b32  	%r1184, %r1182, %r1183;
	shf.l.wrap.b32 	%r1185, %r17002, %r17002, 14;
	shf.l.wrap.b32 	%r1186, %r17002, %r17002, 25;
	xor.b32  	%r1187, %r1186, %r1185;
	shr.u32 	%r1188, %r17002, 3;
	xor.b32  	%r1189, %r1187, %r1188;
	add.s32 	%r1190, %r17003, %r16994;
	add.s32 	%r1191, %r1190, %r1189;
	add.s32 	%r1192, %r1191, %r1184;
	add.s32 	%r1193, %r1192, %r1057;
	xor.b32  	%r1194, %r1131, %r1094;
	and.b32  	%r1195, %r1168, %r1194;
	xor.b32  	%r1196, %r1195, %r1094;
	add.s32 	%r1197, %r1193, %r1196;
	shf.l.wrap.b32 	%r1198, %r1168, %r1168, 18;
	xor.b32  	%r1199, %r1198, %r1168;
	shf.l.wrap.b32 	%r1200, %r1199, %r1199, 27;
	xor.b32  	%r1201, %r1200, %r1168;
	shf.l.wrap.b32 	%r1202, %r1201, %r1201, 26;
	add.s32 	%r1203, %r1197, %r1202;
	add.s32 	%r1204, %r1203, 1249150122;
	add.s32 	%r1205, %r1204, %r1068;
	shf.l.wrap.b32 	%r1206, %r1179, %r1179, 23;
	xor.b32  	%r1207, %r1206, %r1179;
	shf.l.wrap.b32 	%r1208, %r1207, %r1207, 21;
	xor.b32  	%r1209, %r1208, %r1179;
	shf.l.wrap.b32 	%r1210, %r1209, %r1209, 30;
	and.b32  	%r1211, %r1179, %r1142;
	or.b32  	%r1212, %r1179, %r1142;
	and.b32  	%r1213, %r1212, %r1105;
	or.b32  	%r1214, %r1213, %r1211;
	add.s32 	%r1215, %r1210, %r1214;
	add.s32 	%r1216, %r1215, %r1204;
	shf.l.wrap.b32 	%r1217, %r1155, %r1155, 15;
	shf.l.wrap.b32 	%r1218, %r1155, %r1155, 13;
	xor.b32  	%r1219, %r1217, %r1218;
	shr.u32 	%r1220, %r1155, 10;
	xor.b32  	%r1221, %r1219, %r1220;
	shf.l.wrap.b32 	%r1222, %r17001, %r17001, 14;
	shf.l.wrap.b32 	%r1223, %r17001, %r17001, 25;
	xor.b32  	%r1224, %r1223, %r1222;
	shr.u32 	%r1225, %r17001, 3;
	xor.b32  	%r1226, %r1224, %r1225;
	add.s32 	%r1227, %r17002, %r16993;
	add.s32 	%r1228, %r1227, %r1226;
	add.s32 	%r1229, %r1228, %r1221;
	add.s32 	%r1230, %r1229, %r1094;
	xor.b32  	%r1231, %r1168, %r1131;
	and.b32  	%r1232, %r1205, %r1231;
	xor.b32  	%r1233, %r1232, %r1131;
	add.s32 	%r1234, %r1230, %r1233;
	shf.l.wrap.b32 	%r1235, %r1205, %r1205, 18;
	xor.b32  	%r1236, %r1235, %r1205;
	shf.l.wrap.b32 	%r1237, %r1236, %r1236, 27;
	xor.b32  	%r1238, %r1237, %r1205;
	shf.l.wrap.b32 	%r1239, %r1238, %r1238, 26;
	add.s32 	%r1240, %r1234, %r1239;
	add.s32 	%r1241, %r1240, 1555081692;
	add.s32 	%r1242, %r1241, %r1105;
	shf.l.wrap.b32 	%r1243, %r1216, %r1216, 23;
	xor.b32  	%r1244, %r1243, %r1216;
	shf.l.wrap.b32 	%r1245, %r1244, %r1244, 21;
	xor.b32  	%r1246, %r1245, %r1216;
	shf.l.wrap.b32 	%r1247, %r1246, %r1246, 30;
	and.b32  	%r1248, %r1216, %r1179;
	or.b32  	%r1249, %r1216, %r1179;
	and.b32  	%r1250, %r1249, %r1142;
	or.b32  	%r1251, %r1250, %r1248;
	add.s32 	%r1252, %r1247, %r1251;
	add.s32 	%r1253, %r1252, %r1241;
	shf.l.wrap.b32 	%r1254, %r1192, %r1192, 15;
	shf.l.wrap.b32 	%r1255, %r1192, %r1192, 13;
	xor.b32  	%r1256, %r1254, %r1255;
	shr.u32 	%r1257, %r1192, 10;
	xor.b32  	%r1258, %r1256, %r1257;
	shf.l.wrap.b32 	%r1259, %r17000, %r17000, 14;
	shf.l.wrap.b32 	%r1260, %r17000, %r17000, 25;
	xor.b32  	%r1261, %r1260, %r1259;
	shr.u32 	%r1262, %r17000, 3;
	xor.b32  	%r1263, %r1261, %r1262;
	add.s32 	%r1264, %r1263, %r17001;
	add.s32 	%r1265, %r1264, %r1007;
	add.s32 	%r1266, %r1265, %r1258;
	add.s32 	%r1267, %r1266, %r1131;
	xor.b32  	%r1268, %r1205, %r1168;
	and.b32  	%r1269, %r1242, %r1268;
	xor.b32  	%r1270, %r1269, %r1168;
	add.s32 	%r1271, %r1267, %r1270;
	shf.l.wrap.b32 	%r1272, %r1242, %r1242, 18;
	xor.b32  	%r1273, %r1272, %r1242;
	shf.l.wrap.b32 	%r1274, %r1273, %r1273, 27;
	xor.b32  	%r1275, %r1274, %r1242;
	shf.l.wrap.b32 	%r1276, %r1275, %r1275, 26;
	add.s32 	%r1277, %r1271, %r1276;
	add.s32 	%r1278, %r1277, 1996064986;
	add.s32 	%r1279, %r1278, %r1142;
	shf.l.wrap.b32 	%r1280, %r1253, %r1253, 23;
	xor.b32  	%r1281, %r1280, %r1253;
	shf.l.wrap.b32 	%r1282, %r1281, %r1281, 21;
	xor.b32  	%r1283, %r1282, %r1253;
	shf.l.wrap.b32 	%r1284, %r1283, %r1283, 30;
	and.b32  	%r1285, %r1253, %r1216;
	or.b32  	%r1286, %r1253, %r1216;
	and.b32  	%r1287, %r1286, %r1179;
	or.b32  	%r1288, %r1287, %r1285;
	add.s32 	%r1289, %r1284, %r1288;
	add.s32 	%r1290, %r1289, %r1278;
	shf.l.wrap.b32 	%r1291, %r1229, %r1229, 15;
	shf.l.wrap.b32 	%r1292, %r1229, %r1229, 13;
	xor.b32  	%r1293, %r1291, %r1292;
	shr.u32 	%r1294, %r1229, 10;
	xor.b32  	%r1295, %r1293, %r1294;
	shf.l.wrap.b32 	%r1296, %r16999, %r16999, 14;
	shf.l.wrap.b32 	%r1297, %r16999, %r16999, 25;
	xor.b32  	%r1298, %r1297, %r1296;
	shr.u32 	%r1299, %r16999, 3;
	xor.b32  	%r1300, %r1298, %r1299;
	add.s32 	%r1301, %r1300, %r17000;
	add.s32 	%r1302, %r1301, %r1044;
	add.s32 	%r1303, %r1302, %r1295;
	add.s32 	%r1304, %r1303, %r1168;
	xor.b32  	%r1305, %r1242, %r1205;
	and.b32  	%r1306, %r1279, %r1305;
	xor.b32  	%r1307, %r1306, %r1205;
	add.s32 	%r1308, %r1304, %r1307;
	shf.l.wrap.b32 	%r1309, %r1279, %r1279, 18;
	xor.b32  	%r1310, %r1309, %r1279;
	shf.l.wrap.b32 	%r1311, %r1310, %r1310, 27;
	xor.b32  	%r1312, %r1311, %r1279;
	shf.l.wrap.b32 	%r1313, %r1312, %r1312, 26;
	add.s32 	%r1314, %r1308, %r1313;
	add.s32 	%r1315, %r1314, -1740746414;
	add.s32 	%r1316, %r1315, %r1179;
	shf.l.wrap.b32 	%r1317, %r1290, %r1290, 23;
	xor.b32  	%r1318, %r1317, %r1290;
	shf.l.wrap.b32 	%r1319, %r1318, %r1318, 21;
	xor.b32  	%r1320, %r1319, %r1290;
	shf.l.wrap.b32 	%r1321, %r1320, %r1320, 30;
	and.b32  	%r1322, %r1290, %r1253;
	or.b32  	%r1323, %r1290, %r1253;
	and.b32  	%r1324, %r1323, %r1216;
	or.b32  	%r1325, %r1324, %r1322;
	add.s32 	%r1326, %r1321, %r1325;
	add.s32 	%r1327, %r1326, %r1315;
	shf.l.wrap.b32 	%r1328, %r1266, %r1266, 15;
	shf.l.wrap.b32 	%r1329, %r1266, %r1266, 13;
	xor.b32  	%r1330, %r1328, %r1329;
	shr.u32 	%r1331, %r1266, 10;
	xor.b32  	%r1332, %r1330, %r1331;
	shf.l.wrap.b32 	%r1333, %r16998, %r16998, 14;
	shf.l.wrap.b32 	%r1334, %r16998, %r16998, 25;
	xor.b32  	%r1335, %r1334, %r1333;
	shr.u32 	%r1336, %r16998, 3;
	xor.b32  	%r1337, %r1335, %r1336;
	add.s32 	%r1338, %r1337, %r16999;
	add.s32 	%r1339, %r1338, %r1081;
	add.s32 	%r1340, %r1339, %r1332;
	add.s32 	%r1341, %r1340, %r1205;
	xor.b32  	%r1342, %r1279, %r1242;
	and.b32  	%r1343, %r1316, %r1342;
	xor.b32  	%r1344, %r1343, %r1242;
	add.s32 	%r1345, %r1341, %r1344;
	shf.l.wrap.b32 	%r1346, %r1316, %r1316, 18;
	xor.b32  	%r1347, %r1346, %r1316;
	shf.l.wrap.b32 	%r1348, %r1347, %r1347, 27;
	xor.b32  	%r1349, %r1348, %r1316;
	shf.l.wrap.b32 	%r1350, %r1349, %r1349, 26;
	add.s32 	%r1351, %r1345, %r1350;
	add.s32 	%r1352, %r1351, -1473132947;
	add.s32 	%r1353, %r1352, %r1216;
	shf.l.wrap.b32 	%r1354, %r1327, %r1327, 23;
	xor.b32  	%r1355, %r1354, %r1327;
	shf.l.wrap.b32 	%r1356, %r1355, %r1355, 21;
	xor.b32  	%r1357, %r1356, %r1327;
	shf.l.wrap.b32 	%r1358, %r1357, %r1357, 30;
	and.b32  	%r1359, %r1327, %r1290;
	or.b32  	%r1360, %r1327, %r1290;
	and.b32  	%r1361, %r1360, %r1253;
	or.b32  	%r1362, %r1361, %r1359;
	add.s32 	%r1363, %r1358, %r1362;
	add.s32 	%r1364, %r1363, %r1352;
	shf.l.wrap.b32 	%r1365, %r1303, %r1303, 15;
	shf.l.wrap.b32 	%r1366, %r1303, %r1303, 13;
	xor.b32  	%r1367, %r1365, %r1366;
	shr.u32 	%r1368, %r1303, 10;
	xor.b32  	%r1369, %r1367, %r1368;
	shf.l.wrap.b32 	%r1370, %r16997, %r16997, 14;
	shf.l.wrap.b32 	%r1371, %r16997, %r16997, 25;
	xor.b32  	%r1372, %r1371, %r1370;
	shr.u32 	%r1373, %r16997, 3;
	xor.b32  	%r1374, %r1372, %r1373;
	add.s32 	%r1375, %r1374, %r16998;
	add.s32 	%r1376, %r1375, %r1118;
	add.s32 	%r1377, %r1376, %r1369;
	add.s32 	%r1378, %r1377, %r1242;
	xor.b32  	%r1379, %r1316, %r1279;
	and.b32  	%r1380, %r1353, %r1379;
	xor.b32  	%r1381, %r1380, %r1279;
	add.s32 	%r1382, %r1378, %r1381;
	shf.l.wrap.b32 	%r1383, %r1353, %r1353, 18;
	xor.b32  	%r1384, %r1383, %r1353;
	shf.l.wrap.b32 	%r1385, %r1384, %r1384, 27;
	xor.b32  	%r1386, %r1385, %r1353;
	shf.l.wrap.b32 	%r1387, %r1386, %r1386, 26;
	add.s32 	%r1388, %r1382, %r1387;
	add.s32 	%r1389, %r1388, -1341970488;
	add.s32 	%r1390, %r1389, %r1253;
	shf.l.wrap.b32 	%r1391, %r1364, %r1364, 23;
	xor.b32  	%r1392, %r1391, %r1364;
	shf.l.wrap.b32 	%r1393, %r1392, %r1392, 21;
	xor.b32  	%r1394, %r1393, %r1364;
	shf.l.wrap.b32 	%r1395, %r1394, %r1394, 30;
	and.b32  	%r1396, %r1364, %r1327;
	or.b32  	%r1397, %r1364, %r1327;
	and.b32  	%r1398, %r1397, %r1290;
	or.b32  	%r1399, %r1398, %r1396;
	add.s32 	%r1400, %r1395, %r1399;
	add.s32 	%r1401, %r1400, %r1389;
	shf.l.wrap.b32 	%r1402, %r1340, %r1340, 15;
	shf.l.wrap.b32 	%r1403, %r1340, %r1340, 13;
	xor.b32  	%r1404, %r1402, %r1403;
	shr.u32 	%r1405, %r1340, 10;
	xor.b32  	%r1406, %r1404, %r1405;
	shf.l.wrap.b32 	%r1407, %r16996, %r16996, 14;
	shf.l.wrap.b32 	%r1408, %r16996, %r16996, 25;
	xor.b32  	%r1409, %r1408, %r1407;
	shr.u32 	%r1410, %r16996, 3;
	xor.b32  	%r1411, %r1409, %r1410;
	add.s32 	%r1412, %r1411, %r16997;
	add.s32 	%r1413, %r1412, %r1155;
	add.s32 	%r1414, %r1413, %r1406;
	add.s32 	%r1415, %r1414, %r1279;
	xor.b32  	%r1416, %r1353, %r1316;
	and.b32  	%r1417, %r1390, %r1416;
	xor.b32  	%r1418, %r1417, %r1316;
	add.s32 	%r1419, %r1415, %r1418;
	shf.l.wrap.b32 	%r1420, %r1390, %r1390, 18;
	xor.b32  	%r1421, %r1420, %r1390;
	shf.l.wrap.b32 	%r1422, %r1421, %r1421, 27;
	xor.b32  	%r1423, %r1422, %r1390;
	shf.l.wrap.b32 	%r1424, %r1423, %r1423, 26;
	add.s32 	%r1425, %r1419, %r1424;
	add.s32 	%r1426, %r1425, -1084653625;
	add.s32 	%r1427, %r1426, %r1290;
	shf.l.wrap.b32 	%r1428, %r1401, %r1401, 23;
	xor.b32  	%r1429, %r1428, %r1401;
	shf.l.wrap.b32 	%r1430, %r1429, %r1429, 21;
	xor.b32  	%r1431, %r1430, %r1401;
	shf.l.wrap.b32 	%r1432, %r1431, %r1431, 30;
	and.b32  	%r1433, %r1401, %r1364;
	or.b32  	%r1434, %r1401, %r1364;
	and.b32  	%r1435, %r1434, %r1327;
	or.b32  	%r1436, %r1435, %r1433;
	add.s32 	%r1437, %r1432, %r1436;
	add.s32 	%r1438, %r1437, %r1426;
	shf.l.wrap.b32 	%r1439, %r1377, %r1377, 15;
	shf.l.wrap.b32 	%r1440, %r1377, %r1377, 13;
	xor.b32  	%r1441, %r1439, %r1440;
	shr.u32 	%r1442, %r1377, 10;
	xor.b32  	%r1443, %r1441, %r1442;
	shf.l.wrap.b32 	%r1444, %r16995, %r16995, 14;
	shf.l.wrap.b32 	%r1445, %r16995, %r16995, 25;
	xor.b32  	%r1446, %r1445, %r1444;
	shr.u32 	%r1447, %r16995, 3;
	xor.b32  	%r1448, %r1446, %r1447;
	add.s32 	%r1449, %r1448, %r16996;
	add.s32 	%r1450, %r1449, %r1192;
	add.s32 	%r1451, %r1450, %r1443;
	add.s32 	%r1452, %r1451, %r1316;
	xor.b32  	%r1453, %r1390, %r1353;
	and.b32  	%r1454, %r1427, %r1453;
	xor.b32  	%r1455, %r1454, %r1353;
	add.s32 	%r1456, %r1452, %r1455;
	shf.l.wrap.b32 	%r1457, %r1427, %r1427, 18;
	xor.b32  	%r1458, %r1457, %r1427;
	shf.l.wrap.b32 	%r1459, %r1458, %r1458, 27;
	xor.b32  	%r1460, %r1459, %r1427;
	shf.l.wrap.b32 	%r1461, %r1460, %r1460, 26;
	add.s32 	%r1462, %r1456, %r1461;
	add.s32 	%r1463, %r1462, -958395405;
	add.s32 	%r1464, %r1463, %r1327;
	shf.l.wrap.b32 	%r1465, %r1438, %r1438, 23;
	xor.b32  	%r1466, %r1465, %r1438;
	shf.l.wrap.b32 	%r1467, %r1466, %r1466, 21;
	xor.b32  	%r1468, %r1467, %r1438;
	shf.l.wrap.b32 	%r1469, %r1468, %r1468, 30;
	and.b32  	%r1470, %r1438, %r1401;
	or.b32  	%r1471, %r1438, %r1401;
	and.b32  	%r1472, %r1471, %r1364;
	or.b32  	%r1473, %r1472, %r1470;
	add.s32 	%r1474, %r1469, %r1473;
	add.s32 	%r1475, %r1474, %r1463;
	shf.l.wrap.b32 	%r1476, %r1414, %r1414, 15;
	shf.l.wrap.b32 	%r1477, %r1414, %r1414, 13;
	xor.b32  	%r1478, %r1476, %r1477;
	shr.u32 	%r1479, %r1414, 10;
	xor.b32  	%r1480, %r1478, %r1479;
	shf.l.wrap.b32 	%r1481, %r16994, %r16994, 14;
	shf.l.wrap.b32 	%r1482, %r16994, %r16994, 25;
	xor.b32  	%r1483, %r1482, %r1481;
	shr.u32 	%r1484, %r16994, 3;
	xor.b32  	%r1485, %r1483, %r1484;
	add.s32 	%r1486, %r1485, %r16995;
	add.s32 	%r1487, %r1486, %r1229;
	add.s32 	%r1488, %r1487, %r1480;
	add.s32 	%r1489, %r1488, %r1353;
	xor.b32  	%r1490, %r1427, %r1390;
	and.b32  	%r1491, %r1464, %r1490;
	xor.b32  	%r1492, %r1491, %r1390;
	add.s32 	%r1493, %r1489, %r1492;
	shf.l.wrap.b32 	%r1494, %r1464, %r1464, 18;
	xor.b32  	%r1495, %r1494, %r1464;
	shf.l.wrap.b32 	%r1496, %r1495, %r1495, 27;
	xor.b32  	%r1497, %r1496, %r1464;
	shf.l.wrap.b32 	%r1498, %r1497, %r1497, 26;
	add.s32 	%r1499, %r1493, %r1498;
	add.s32 	%r1500, %r1499, -710438585;
	add.s32 	%r1501, %r1500, %r1364;
	shf.l.wrap.b32 	%r1502, %r1475, %r1475, 23;
	xor.b32  	%r1503, %r1502, %r1475;
	shf.l.wrap.b32 	%r1504, %r1503, %r1503, 21;
	xor.b32  	%r1505, %r1504, %r1475;
	shf.l.wrap.b32 	%r1506, %r1505, %r1505, 30;
	and.b32  	%r1507, %r1475, %r1438;
	or.b32  	%r1508, %r1475, %r1438;
	and.b32  	%r1509, %r1508, %r1401;
	or.b32  	%r1510, %r1509, %r1507;
	add.s32 	%r1511, %r1506, %r1510;
	add.s32 	%r1512, %r1511, %r1500;
	shf.l.wrap.b32 	%r1513, %r1451, %r1451, 15;
	shf.l.wrap.b32 	%r1514, %r1451, %r1451, 13;
	xor.b32  	%r1515, %r1513, %r1514;
	shr.u32 	%r1516, %r1451, 10;
	xor.b32  	%r1517, %r1515, %r1516;
	shf.l.wrap.b32 	%r1518, %r16993, %r16993, 14;
	shf.l.wrap.b32 	%r1519, %r16993, %r16993, 25;
	xor.b32  	%r1520, %r1519, %r1518;
	shr.u32 	%r1521, %r16993, 3;
	xor.b32  	%r1522, %r1520, %r1521;
	add.s32 	%r1523, %r1522, %r16994;
	add.s32 	%r1524, %r1523, %r1266;
	add.s32 	%r1525, %r1524, %r1517;
	add.s32 	%r1526, %r1525, %r1390;
	xor.b32  	%r1527, %r1464, %r1427;
	and.b32  	%r1528, %r1501, %r1527;
	xor.b32  	%r1529, %r1528, %r1427;
	add.s32 	%r1530, %r1526, %r1529;
	shf.l.wrap.b32 	%r1531, %r1501, %r1501, 18;
	xor.b32  	%r1532, %r1531, %r1501;
	shf.l.wrap.b32 	%r1533, %r1532, %r1532, 27;
	xor.b32  	%r1534, %r1533, %r1501;
	shf.l.wrap.b32 	%r1535, %r1534, %r1534, 26;
	add.s32 	%r1536, %r1530, %r1535;
	add.s32 	%r1537, %r1536, 113926993;
	add.s32 	%r1538, %r1537, %r1401;
	shf.l.wrap.b32 	%r1539, %r1512, %r1512, 23;
	xor.b32  	%r1540, %r1539, %r1512;
	shf.l.wrap.b32 	%r1541, %r1540, %r1540, 21;
	xor.b32  	%r1542, %r1541, %r1512;
	shf.l.wrap.b32 	%r1543, %r1542, %r1542, 30;
	and.b32  	%r1544, %r1512, %r1475;
	or.b32  	%r1545, %r1512, %r1475;
	and.b32  	%r1546, %r1545, %r1438;
	or.b32  	%r1547, %r1546, %r1544;
	add.s32 	%r1548, %r1543, %r1547;
	add.s32 	%r1549, %r1548, %r1537;
	shf.l.wrap.b32 	%r1550, %r1488, %r1488, 15;
	shf.l.wrap.b32 	%r1551, %r1488, %r1488, 13;
	xor.b32  	%r1552, %r1550, %r1551;
	shr.u32 	%r1553, %r1488, 10;
	xor.b32  	%r1554, %r1552, %r1553;
	shf.l.wrap.b32 	%r1555, %r1007, %r1007, 25;
	shf.l.wrap.b32 	%r1556, %r1007, %r1007, 14;
	xor.b32  	%r1557, %r1555, %r1556;
	shr.u32 	%r1558, %r1007, 3;
	xor.b32  	%r1559, %r1557, %r1558;
	add.s32 	%r1560, %r1559, %r16993;
	add.s32 	%r1561, %r1560, %r1303;
	add.s32 	%r1562, %r1561, %r1554;
	add.s32 	%r1563, %r1562, %r1427;
	xor.b32  	%r1564, %r1501, %r1464;
	and.b32  	%r1565, %r1538, %r1564;
	xor.b32  	%r1566, %r1565, %r1464;
	add.s32 	%r1567, %r1563, %r1566;
	shf.l.wrap.b32 	%r1568, %r1538, %r1538, 18;
	xor.b32  	%r1569, %r1568, %r1538;
	shf.l.wrap.b32 	%r1570, %r1569, %r1569, 27;
	xor.b32  	%r1571, %r1570, %r1538;
	shf.l.wrap.b32 	%r1572, %r1571, %r1571, 26;
	add.s32 	%r1573, %r1567, %r1572;
	add.s32 	%r1574, %r1573, 338241895;
	add.s32 	%r1575, %r1574, %r1438;
	shf.l.wrap.b32 	%r1576, %r1549, %r1549, 23;
	xor.b32  	%r1577, %r1576, %r1549;
	shf.l.wrap.b32 	%r1578, %r1577, %r1577, 21;
	xor.b32  	%r1579, %r1578, %r1549;
	shf.l.wrap.b32 	%r1580, %r1579, %r1579, 30;
	and.b32  	%r1581, %r1549, %r1512;
	or.b32  	%r1582, %r1549, %r1512;
	and.b32  	%r1583, %r1582, %r1475;
	or.b32  	%r1584, %r1583, %r1581;
	add.s32 	%r1585, %r1580, %r1584;
	add.s32 	%r1586, %r1585, %r1574;
	shf.l.wrap.b32 	%r1587, %r1525, %r1525, 15;
	shf.l.wrap.b32 	%r1588, %r1525, %r1525, 13;
	xor.b32  	%r1589, %r1587, %r1588;
	shr.u32 	%r1590, %r1525, 10;
	xor.b32  	%r1591, %r1589, %r1590;
	shf.l.wrap.b32 	%r1592, %r1044, %r1044, 25;
	shf.l.wrap.b32 	%r1593, %r1044, %r1044, 14;
	xor.b32  	%r1594, %r1592, %r1593;
	shr.u32 	%r1595, %r1044, 3;
	xor.b32  	%r1596, %r1594, %r1595;
	add.s32 	%r1597, %r1596, %r1007;
	add.s32 	%r1598, %r1597, %r1340;
	add.s32 	%r1599, %r1598, %r1591;
	add.s32 	%r1600, %r1599, %r1464;
	xor.b32  	%r1601, %r1538, %r1501;
	and.b32  	%r1602, %r1575, %r1601;
	xor.b32  	%r1603, %r1602, %r1501;
	add.s32 	%r1604, %r1600, %r1603;
	shf.l.wrap.b32 	%r1605, %r1575, %r1575, 18;
	xor.b32  	%r1606, %r1605, %r1575;
	shf.l.wrap.b32 	%r1607, %r1606, %r1606, 27;
	xor.b32  	%r1608, %r1607, %r1575;
	shf.l.wrap.b32 	%r1609, %r1608, %r1608, 26;
	add.s32 	%r1610, %r1604, %r1609;
	add.s32 	%r1611, %r1610, 666307205;
	add.s32 	%r1612, %r1611, %r1475;
	shf.l.wrap.b32 	%r1613, %r1586, %r1586, 23;
	xor.b32  	%r1614, %r1613, %r1586;
	shf.l.wrap.b32 	%r1615, %r1614, %r1614, 21;
	xor.b32  	%r1616, %r1615, %r1586;
	shf.l.wrap.b32 	%r1617, %r1616, %r1616, 30;
	and.b32  	%r1618, %r1586, %r1549;
	or.b32  	%r1619, %r1586, %r1549;
	and.b32  	%r1620, %r1619, %r1512;
	or.b32  	%r1621, %r1620, %r1618;
	add.s32 	%r1622, %r1617, %r1621;
	add.s32 	%r1623, %r1622, %r1611;
	shf.l.wrap.b32 	%r1624, %r1562, %r1562, 15;
	shf.l.wrap.b32 	%r1625, %r1562, %r1562, 13;
	xor.b32  	%r1626, %r1624, %r1625;
	shr.u32 	%r1627, %r1562, 10;
	xor.b32  	%r1628, %r1626, %r1627;
	shf.l.wrap.b32 	%r1629, %r1081, %r1081, 25;
	shf.l.wrap.b32 	%r1630, %r1081, %r1081, 14;
	xor.b32  	%r1631, %r1629, %r1630;
	shr.u32 	%r1632, %r1081, 3;
	xor.b32  	%r1633, %r1631, %r1632;
	add.s32 	%r1634, %r1633, %r1044;
	add.s32 	%r1635, %r1634, %r1377;
	add.s32 	%r1636, %r1635, %r1628;
	add.s32 	%r1637, %r1636, %r1501;
	xor.b32  	%r1638, %r1575, %r1538;
	and.b32  	%r1639, %r1612, %r1638;
	xor.b32  	%r1640, %r1639, %r1538;
	add.s32 	%r1641, %r1637, %r1640;
	shf.l.wrap.b32 	%r1642, %r1612, %r1612, 18;
	xor.b32  	%r1643, %r1642, %r1612;
	shf.l.wrap.b32 	%r1644, %r1643, %r1643, 27;
	xor.b32  	%r1645, %r1644, %r1612;
	shf.l.wrap.b32 	%r1646, %r1645, %r1645, 26;
	add.s32 	%r1647, %r1641, %r1646;
	add.s32 	%r1648, %r1647, 773529912;
	add.s32 	%r1649, %r1648, %r1512;
	shf.l.wrap.b32 	%r1650, %r1623, %r1623, 23;
	xor.b32  	%r1651, %r1650, %r1623;
	shf.l.wrap.b32 	%r1652, %r1651, %r1651, 21;
	xor.b32  	%r1653, %r1652, %r1623;
	shf.l.wrap.b32 	%r1654, %r1653, %r1653, 30;
	and.b32  	%r1655, %r1623, %r1586;
	or.b32  	%r1656, %r1623, %r1586;
	and.b32  	%r1657, %r1656, %r1549;
	or.b32  	%r1658, %r1657, %r1655;
	add.s32 	%r1659, %r1654, %r1658;
	add.s32 	%r1660, %r1659, %r1648;
	shf.l.wrap.b32 	%r1661, %r1599, %r1599, 15;
	shf.l.wrap.b32 	%r1662, %r1599, %r1599, 13;
	xor.b32  	%r1663, %r1661, %r1662;
	shr.u32 	%r1664, %r1599, 10;
	xor.b32  	%r1665, %r1663, %r1664;
	shf.l.wrap.b32 	%r1666, %r1118, %r1118, 25;
	shf.l.wrap.b32 	%r1667, %r1118, %r1118, 14;
	xor.b32  	%r1668, %r1666, %r1667;
	shr.u32 	%r1669, %r1118, 3;
	xor.b32  	%r1670, %r1668, %r1669;
	add.s32 	%r1671, %r1670, %r1081;
	add.s32 	%r1672, %r1671, %r1414;
	add.s32 	%r1673, %r1672, %r1665;
	add.s32 	%r1674, %r1673, %r1538;
	xor.b32  	%r1675, %r1612, %r1575;
	and.b32  	%r1676, %r1649, %r1675;
	xor.b32  	%r1677, %r1676, %r1575;
	add.s32 	%r1678, %r1674, %r1677;
	shf.l.wrap.b32 	%r1679, %r1649, %r1649, 18;
	xor.b32  	%r1680, %r1679, %r1649;
	shf.l.wrap.b32 	%r1681, %r1680, %r1680, 27;
	xor.b32  	%r1682, %r1681, %r1649;
	shf.l.wrap.b32 	%r1683, %r1682, %r1682, 26;
	add.s32 	%r1684, %r1678, %r1683;
	add.s32 	%r1685, %r1684, 1294757372;
	add.s32 	%r1686, %r1685, %r1549;
	shf.l.wrap.b32 	%r1687, %r1660, %r1660, 23;
	xor.b32  	%r1688, %r1687, %r1660;
	shf.l.wrap.b32 	%r1689, %r1688, %r1688, 21;
	xor.b32  	%r1690, %r1689, %r1660;
	shf.l.wrap.b32 	%r1691, %r1690, %r1690, 30;
	and.b32  	%r1692, %r1660, %r1623;
	or.b32  	%r1693, %r1660, %r1623;
	and.b32  	%r1694, %r1693, %r1586;
	or.b32  	%r1695, %r1694, %r1692;
	add.s32 	%r1696, %r1691, %r1695;
	add.s32 	%r1697, %r1696, %r1685;
	shf.l.wrap.b32 	%r1698, %r1636, %r1636, 15;
	shf.l.wrap.b32 	%r1699, %r1636, %r1636, 13;
	xor.b32  	%r1700, %r1698, %r1699;
	shr.u32 	%r1701, %r1636, 10;
	xor.b32  	%r1702, %r1700, %r1701;
	shf.l.wrap.b32 	%r1703, %r1155, %r1155, 25;
	shf.l.wrap.b32 	%r1704, %r1155, %r1155, 14;
	xor.b32  	%r1705, %r1703, %r1704;
	shr.u32 	%r1706, %r1155, 3;
	xor.b32  	%r1707, %r1705, %r1706;
	add.s32 	%r1708, %r1707, %r1118;
	add.s32 	%r1709, %r1708, %r1451;
	add.s32 	%r1710, %r1709, %r1702;
	add.s32 	%r1711, %r1710, %r1575;
	xor.b32  	%r1712, %r1649, %r1612;
	and.b32  	%r1713, %r1686, %r1712;
	xor.b32  	%r1714, %r1713, %r1612;
	add.s32 	%r1715, %r1711, %r1714;
	shf.l.wrap.b32 	%r1716, %r1686, %r1686, 18;
	xor.b32  	%r1717, %r1716, %r1686;
	shf.l.wrap.b32 	%r1718, %r1717, %r1717, 27;
	xor.b32  	%r1719, %r1718, %r1686;
	shf.l.wrap.b32 	%r1720, %r1719, %r1719, 26;
	add.s32 	%r1721, %r1715, %r1720;
	add.s32 	%r1722, %r1721, 1396182291;
	add.s32 	%r1723, %r1722, %r1586;
	shf.l.wrap.b32 	%r1724, %r1697, %r1697, 23;
	xor.b32  	%r1725, %r1724, %r1697;
	shf.l.wrap.b32 	%r1726, %r1725, %r1725, 21;
	xor.b32  	%r1727, %r1726, %r1697;
	shf.l.wrap.b32 	%r1728, %r1727, %r1727, 30;
	and.b32  	%r1729, %r1697, %r1660;
	or.b32  	%r1730, %r1697, %r1660;
	and.b32  	%r1731, %r1730, %r1623;
	or.b32  	%r1732, %r1731, %r1729;
	add.s32 	%r1733, %r1728, %r1732;
	add.s32 	%r1734, %r1733, %r1722;
	shf.l.wrap.b32 	%r1735, %r1673, %r1673, 15;
	shf.l.wrap.b32 	%r1736, %r1673, %r1673, 13;
	xor.b32  	%r1737, %r1735, %r1736;
	shr.u32 	%r1738, %r1673, 10;
	xor.b32  	%r1739, %r1737, %r1738;
	shf.l.wrap.b32 	%r1740, %r1192, %r1192, 25;
	shf.l.wrap.b32 	%r1741, %r1192, %r1192, 14;
	xor.b32  	%r1742, %r1740, %r1741;
	shr.u32 	%r1743, %r1192, 3;
	xor.b32  	%r1744, %r1742, %r1743;
	add.s32 	%r1745, %r1744, %r1155;
	add.s32 	%r1746, %r1745, %r1488;
	add.s32 	%r1747, %r1746, %r1739;
	add.s32 	%r1748, %r1747, %r1612;
	xor.b32  	%r1749, %r1686, %r1649;
	and.b32  	%r1750, %r1723, %r1749;
	xor.b32  	%r1751, %r1750, %r1649;
	add.s32 	%r1752, %r1748, %r1751;
	shf.l.wrap.b32 	%r1753, %r1723, %r1723, 18;
	xor.b32  	%r1754, %r1753, %r1723;
	shf.l.wrap.b32 	%r1755, %r1754, %r1754, 27;
	xor.b32  	%r1756, %r1755, %r1723;
	shf.l.wrap.b32 	%r1757, %r1756, %r1756, 26;
	add.s32 	%r1758, %r1752, %r1757;
	add.s32 	%r1759, %r1758, 1695183700;
	add.s32 	%r1760, %r1759, %r1623;
	shf.l.wrap.b32 	%r1761, %r1734, %r1734, 23;
	xor.b32  	%r1762, %r1761, %r1734;
	shf.l.wrap.b32 	%r1763, %r1762, %r1762, 21;
	xor.b32  	%r1764, %r1763, %r1734;
	shf.l.wrap.b32 	%r1765, %r1764, %r1764, 30;
	and.b32  	%r1766, %r1734, %r1697;
	or.b32  	%r1767, %r1734, %r1697;
	and.b32  	%r1768, %r1767, %r1660;
	or.b32  	%r1769, %r1768, %r1766;
	add.s32 	%r1770, %r1765, %r1769;
	add.s32 	%r1771, %r1770, %r1759;
	shf.l.wrap.b32 	%r1772, %r1710, %r1710, 15;
	shf.l.wrap.b32 	%r1773, %r1710, %r1710, 13;
	xor.b32  	%r1774, %r1772, %r1773;
	shr.u32 	%r1775, %r1710, 10;
	xor.b32  	%r1776, %r1774, %r1775;
	shf.l.wrap.b32 	%r1777, %r1229, %r1229, 25;
	shf.l.wrap.b32 	%r1778, %r1229, %r1229, 14;
	xor.b32  	%r1779, %r1777, %r1778;
	shr.u32 	%r1780, %r1229, 3;
	xor.b32  	%r1781, %r1779, %r1780;
	add.s32 	%r1782, %r1781, %r1192;
	add.s32 	%r1783, %r1782, %r1525;
	add.s32 	%r1784, %r1783, %r1776;
	add.s32 	%r1785, %r1784, %r1649;
	xor.b32  	%r1786, %r1723, %r1686;
	and.b32  	%r1787, %r1760, %r1786;
	xor.b32  	%r1788, %r1787, %r1686;
	add.s32 	%r1789, %r1785, %r1788;
	shf.l.wrap.b32 	%r1790, %r1760, %r1760, 18;
	xor.b32  	%r1791, %r1790, %r1760;
	shf.l.wrap.b32 	%r1792, %r1791, %r1791, 27;
	xor.b32  	%r1793, %r1792, %r1760;
	shf.l.wrap.b32 	%r1794, %r1793, %r1793, 26;
	add.s32 	%r1795, %r1789, %r1794;
	add.s32 	%r1796, %r1795, 1986661051;
	add.s32 	%r1797, %r1796, %r1660;
	shf.l.wrap.b32 	%r1798, %r1771, %r1771, 23;
	xor.b32  	%r1799, %r1798, %r1771;
	shf.l.wrap.b32 	%r1800, %r1799, %r1799, 21;
	xor.b32  	%r1801, %r1800, %r1771;
	shf.l.wrap.b32 	%r1802, %r1801, %r1801, 30;
	and.b32  	%r1803, %r1771, %r1734;
	or.b32  	%r1804, %r1771, %r1734;
	and.b32  	%r1805, %r1804, %r1697;
	or.b32  	%r1806, %r1805, %r1803;
	add.s32 	%r1807, %r1802, %r1806;
	add.s32 	%r1808, %r1807, %r1796;
	shf.l.wrap.b32 	%r1809, %r1747, %r1747, 15;
	shf.l.wrap.b32 	%r1810, %r1747, %r1747, 13;
	xor.b32  	%r1811, %r1809, %r1810;
	shr.u32 	%r1812, %r1747, 10;
	xor.b32  	%r1813, %r1811, %r1812;
	shf.l.wrap.b32 	%r1814, %r1266, %r1266, 25;
	shf.l.wrap.b32 	%r1815, %r1266, %r1266, 14;
	xor.b32  	%r1816, %r1814, %r1815;
	shr.u32 	%r1817, %r1266, 3;
	xor.b32  	%r1818, %r1816, %r1817;
	add.s32 	%r1819, %r1818, %r1229;
	add.s32 	%r1820, %r1819, %r1562;
	add.s32 	%r1821, %r1820, %r1813;
	add.s32 	%r1822, %r1821, %r1686;
	xor.b32  	%r1823, %r1760, %r1723;
	and.b32  	%r1824, %r1797, %r1823;
	xor.b32  	%r1825, %r1824, %r1723;
	add.s32 	%r1826, %r1822, %r1825;
	shf.l.wrap.b32 	%r1827, %r1797, %r1797, 18;
	xor.b32  	%r1828, %r1827, %r1797;
	shf.l.wrap.b32 	%r1829, %r1828, %r1828, 27;
	xor.b32  	%r1830, %r1829, %r1797;
	shf.l.wrap.b32 	%r1831, %r1830, %r1830, 26;
	add.s32 	%r1832, %r1826, %r1831;
	add.s32 	%r1833, %r1832, -2117940946;
	add.s32 	%r1834, %r1833, %r1697;
	shf.l.wrap.b32 	%r1835, %r1808, %r1808, 23;
	xor.b32  	%r1836, %r1835, %r1808;
	shf.l.wrap.b32 	%r1837, %r1836, %r1836, 21;
	xor.b32  	%r1838, %r1837, %r1808;
	shf.l.wrap.b32 	%r1839, %r1838, %r1838, 30;
	and.b32  	%r1840, %r1808, %r1771;
	or.b32  	%r1841, %r1808, %r1771;
	and.b32  	%r1842, %r1841, %r1734;
	or.b32  	%r1843, %r1842, %r1840;
	add.s32 	%r1844, %r1839, %r1843;
	add.s32 	%r1845, %r1844, %r1833;
	shf.l.wrap.b32 	%r1846, %r1784, %r1784, 15;
	shf.l.wrap.b32 	%r1847, %r1784, %r1784, 13;
	xor.b32  	%r1848, %r1846, %r1847;
	shr.u32 	%r1849, %r1784, 10;
	xor.b32  	%r1850, %r1848, %r1849;
	shf.l.wrap.b32 	%r1851, %r1303, %r1303, 25;
	shf.l.wrap.b32 	%r1852, %r1303, %r1303, 14;
	xor.b32  	%r1853, %r1851, %r1852;
	shr.u32 	%r1854, %r1303, 3;
	xor.b32  	%r1855, %r1853, %r1854;
	add.s32 	%r1856, %r1855, %r1266;
	add.s32 	%r1857, %r1856, %r1599;
	add.s32 	%r1858, %r1857, %r1850;
	add.s32 	%r1859, %r1858, %r1723;
	xor.b32  	%r1860, %r1797, %r1760;
	and.b32  	%r1861, %r1834, %r1860;
	xor.b32  	%r1862, %r1861, %r1760;
	add.s32 	%r1863, %r1859, %r1862;
	shf.l.wrap.b32 	%r1864, %r1834, %r1834, 18;
	xor.b32  	%r1865, %r1864, %r1834;
	shf.l.wrap.b32 	%r1866, %r1865, %r1865, 27;
	xor.b32  	%r1867, %r1866, %r1834;
	shf.l.wrap.b32 	%r1868, %r1867, %r1867, 26;
	add.s32 	%r1869, %r1863, %r1868;
	add.s32 	%r1870, %r1869, -1838011259;
	add.s32 	%r1871, %r1870, %r1734;
	shf.l.wrap.b32 	%r1872, %r1845, %r1845, 23;
	xor.b32  	%r1873, %r1872, %r1845;
	shf.l.wrap.b32 	%r1874, %r1873, %r1873, 21;
	xor.b32  	%r1875, %r1874, %r1845;
	shf.l.wrap.b32 	%r1876, %r1875, %r1875, 30;
	and.b32  	%r1877, %r1845, %r1808;
	or.b32  	%r1878, %r1845, %r1808;
	and.b32  	%r1879, %r1878, %r1771;
	or.b32  	%r1880, %r1879, %r1877;
	add.s32 	%r1881, %r1876, %r1880;
	add.s32 	%r1882, %r1881, %r1870;
	shf.l.wrap.b32 	%r1883, %r1821, %r1821, 15;
	shf.l.wrap.b32 	%r1884, %r1821, %r1821, 13;
	xor.b32  	%r1885, %r1883, %r1884;
	shr.u32 	%r1886, %r1821, 10;
	xor.b32  	%r1887, %r1885, %r1886;
	shf.l.wrap.b32 	%r1888, %r1340, %r1340, 25;
	shf.l.wrap.b32 	%r1889, %r1340, %r1340, 14;
	xor.b32  	%r1890, %r1888, %r1889;
	shr.u32 	%r1891, %r1340, 3;
	xor.b32  	%r1892, %r1890, %r1891;
	add.s32 	%r1893, %r1892, %r1303;
	add.s32 	%r1894, %r1893, %r1636;
	add.s32 	%r1895, %r1894, %r1887;
	add.s32 	%r1896, %r1895, %r1760;
	xor.b32  	%r1897, %r1834, %r1797;
	and.b32  	%r1898, %r1871, %r1897;
	xor.b32  	%r1899, %r1898, %r1797;
	add.s32 	%r1900, %r1896, %r1899;
	shf.l.wrap.b32 	%r1901, %r1871, %r1871, 18;
	xor.b32  	%r1902, %r1901, %r1871;
	shf.l.wrap.b32 	%r1903, %r1902, %r1902, 27;
	xor.b32  	%r1904, %r1903, %r1871;
	shf.l.wrap.b32 	%r1905, %r1904, %r1904, 26;
	add.s32 	%r1906, %r1900, %r1905;
	add.s32 	%r1907, %r1906, -1564481375;
	add.s32 	%r1908, %r1907, %r1771;
	shf.l.wrap.b32 	%r1909, %r1882, %r1882, 23;
	xor.b32  	%r1910, %r1909, %r1882;
	shf.l.wrap.b32 	%r1911, %r1910, %r1910, 21;
	xor.b32  	%r1912, %r1911, %r1882;
	shf.l.wrap.b32 	%r1913, %r1912, %r1912, 30;
	and.b32  	%r1914, %r1882, %r1845;
	or.b32  	%r1915, %r1882, %r1845;
	and.b32  	%r1916, %r1915, %r1808;
	or.b32  	%r1917, %r1916, %r1914;
	add.s32 	%r1918, %r1913, %r1917;
	add.s32 	%r1919, %r1918, %r1907;
	shf.l.wrap.b32 	%r1920, %r1858, %r1858, 15;
	shf.l.wrap.b32 	%r1921, %r1858, %r1858, 13;
	xor.b32  	%r1922, %r1920, %r1921;
	shr.u32 	%r1923, %r1858, 10;
	xor.b32  	%r1924, %r1922, %r1923;
	shf.l.wrap.b32 	%r1925, %r1377, %r1377, 25;
	shf.l.wrap.b32 	%r1926, %r1377, %r1377, 14;
	xor.b32  	%r1927, %r1925, %r1926;
	shr.u32 	%r1928, %r1377, 3;
	xor.b32  	%r1929, %r1927, %r1928;
	add.s32 	%r1930, %r1929, %r1340;
	add.s32 	%r1931, %r1930, %r1673;
	add.s32 	%r1932, %r1931, %r1924;
	add.s32 	%r1933, %r1932, %r1797;
	xor.b32  	%r1934, %r1871, %r1834;
	and.b32  	%r1935, %r1908, %r1934;
	xor.b32  	%r1936, %r1935, %r1834;
	add.s32 	%r1937, %r1933, %r1936;
	shf.l.wrap.b32 	%r1938, %r1908, %r1908, 18;
	xor.b32  	%r1939, %r1938, %r1908;
	shf.l.wrap.b32 	%r1940, %r1939, %r1939, 27;
	xor.b32  	%r1941, %r1940, %r1908;
	shf.l.wrap.b32 	%r1942, %r1941, %r1941, 26;
	add.s32 	%r1943, %r1937, %r1942;
	add.s32 	%r1944, %r1943, -1474664885;
	add.s32 	%r1945, %r1944, %r1808;
	shf.l.wrap.b32 	%r1946, %r1919, %r1919, 23;
	xor.b32  	%r1947, %r1946, %r1919;
	shf.l.wrap.b32 	%r1948, %r1947, %r1947, 21;
	xor.b32  	%r1949, %r1948, %r1919;
	shf.l.wrap.b32 	%r1950, %r1949, %r1949, 30;
	and.b32  	%r1951, %r1919, %r1882;
	or.b32  	%r1952, %r1919, %r1882;
	and.b32  	%r1953, %r1952, %r1845;
	or.b32  	%r1954, %r1953, %r1951;
	add.s32 	%r1955, %r1950, %r1954;
	add.s32 	%r1956, %r1955, %r1944;
	shf.l.wrap.b32 	%r1957, %r1895, %r1895, 15;
	shf.l.wrap.b32 	%r1958, %r1895, %r1895, 13;
	xor.b32  	%r1959, %r1957, %r1958;
	shr.u32 	%r1960, %r1895, 10;
	xor.b32  	%r1961, %r1959, %r1960;
	shf.l.wrap.b32 	%r1962, %r1414, %r1414, 25;
	shf.l.wrap.b32 	%r1963, %r1414, %r1414, 14;
	xor.b32  	%r1964, %r1962, %r1963;
	shr.u32 	%r1965, %r1414, 3;
	xor.b32  	%r1966, %r1964, %r1965;
	add.s32 	%r1967, %r1966, %r1377;
	add.s32 	%r1968, %r1967, %r1710;
	add.s32 	%r1969, %r1968, %r1961;
	add.s32 	%r1970, %r1969, %r1834;
	xor.b32  	%r1971, %r1908, %r1871;
	and.b32  	%r1972, %r1945, %r1971;
	xor.b32  	%r1973, %r1972, %r1871;
	add.s32 	%r1974, %r1970, %r1973;
	shf.l.wrap.b32 	%r1975, %r1945, %r1945, 18;
	xor.b32  	%r1976, %r1975, %r1945;
	shf.l.wrap.b32 	%r1977, %r1976, %r1976, 27;
	xor.b32  	%r1978, %r1977, %r1945;
	shf.l.wrap.b32 	%r1979, %r1978, %r1978, 26;
	add.s32 	%r1980, %r1974, %r1979;
	add.s32 	%r1981, %r1980, -1035236496;
	add.s32 	%r1982, %r1981, %r1845;
	shf.l.wrap.b32 	%r1983, %r1956, %r1956, 23;
	xor.b32  	%r1984, %r1983, %r1956;
	shf.l.wrap.b32 	%r1985, %r1984, %r1984, 21;
	xor.b32  	%r1986, %r1985, %r1956;
	shf.l.wrap.b32 	%r1987, %r1986, %r1986, 30;
	and.b32  	%r1988, %r1956, %r1919;
	or.b32  	%r1989, %r1956, %r1919;
	and.b32  	%r1990, %r1989, %r1882;
	or.b32  	%r1991, %r1990, %r1988;
	add.s32 	%r1992, %r1987, %r1991;
	add.s32 	%r1993, %r1992, %r1981;
	shf.l.wrap.b32 	%r1994, %r1932, %r1932, 15;
	shf.l.wrap.b32 	%r1995, %r1932, %r1932, 13;
	xor.b32  	%r1996, %r1994, %r1995;
	shr.u32 	%r1997, %r1932, 10;
	xor.b32  	%r1998, %r1996, %r1997;
	shf.l.wrap.b32 	%r1999, %r1451, %r1451, 25;
	shf.l.wrap.b32 	%r2000, %r1451, %r1451, 14;
	xor.b32  	%r2001, %r1999, %r2000;
	shr.u32 	%r2002, %r1451, 3;
	xor.b32  	%r2003, %r2001, %r2002;
	add.s32 	%r2004, %r2003, %r1414;
	add.s32 	%r2005, %r2004, %r1747;
	add.s32 	%r2006, %r2005, %r1998;
	add.s32 	%r2007, %r2006, %r1871;
	xor.b32  	%r2008, %r1945, %r1908;
	and.b32  	%r2009, %r1982, %r2008;
	xor.b32  	%r2010, %r2009, %r1908;
	add.s32 	%r2011, %r2007, %r2010;
	shf.l.wrap.b32 	%r2012, %r1982, %r1982, 18;
	xor.b32  	%r2013, %r2012, %r1982;
	shf.l.wrap.b32 	%r2014, %r2013, %r2013, 27;
	xor.b32  	%r2015, %r2014, %r1982;
	shf.l.wrap.b32 	%r2016, %r2015, %r2015, 26;
	add.s32 	%r2017, %r2011, %r2016;
	add.s32 	%r2018, %r2017, -949202525;
	add.s32 	%r2019, %r2018, %r1882;
	shf.l.wrap.b32 	%r2020, %r1993, %r1993, 23;
	xor.b32  	%r2021, %r2020, %r1993;
	shf.l.wrap.b32 	%r2022, %r2021, %r2021, 21;
	xor.b32  	%r2023, %r2022, %r1993;
	shf.l.wrap.b32 	%r2024, %r2023, %r2023, 30;
	and.b32  	%r2025, %r1993, %r1956;
	or.b32  	%r2026, %r1993, %r1956;
	and.b32  	%r2027, %r2026, %r1919;
	or.b32  	%r2028, %r2027, %r2025;
	add.s32 	%r2029, %r2024, %r2028;
	add.s32 	%r2030, %r2029, %r2018;
	shf.l.wrap.b32 	%r2031, %r1969, %r1969, 15;
	shf.l.wrap.b32 	%r2032, %r1969, %r1969, 13;
	xor.b32  	%r2033, %r2031, %r2032;
	shr.u32 	%r2034, %r1969, 10;
	xor.b32  	%r2035, %r2033, %r2034;
	shf.l.wrap.b32 	%r2036, %r1488, %r1488, 25;
	shf.l.wrap.b32 	%r2037, %r1488, %r1488, 14;
	xor.b32  	%r2038, %r2036, %r2037;
	shr.u32 	%r2039, %r1488, 3;
	xor.b32  	%r2040, %r2038, %r2039;
	add.s32 	%r2041, %r2040, %r1451;
	add.s32 	%r2042, %r2041, %r1784;
	add.s32 	%r2043, %r2042, %r2035;
	add.s32 	%r2044, %r2043, %r1908;
	xor.b32  	%r2045, %r1982, %r1945;
	and.b32  	%r2046, %r2019, %r2045;
	xor.b32  	%r2047, %r2046, %r1945;
	add.s32 	%r2048, %r2044, %r2047;
	shf.l.wrap.b32 	%r2049, %r2019, %r2019, 18;
	xor.b32  	%r2050, %r2049, %r2019;
	shf.l.wrap.b32 	%r2051, %r2050, %r2050, 27;
	xor.b32  	%r2052, %r2051, %r2019;
	shf.l.wrap.b32 	%r2053, %r2052, %r2052, 26;
	add.s32 	%r2054, %r2048, %r2053;
	add.s32 	%r2055, %r2054, -778901479;
	add.s32 	%r2056, %r2055, %r1919;
	shf.l.wrap.b32 	%r2057, %r2030, %r2030, 23;
	xor.b32  	%r2058, %r2057, %r2030;
	shf.l.wrap.b32 	%r2059, %r2058, %r2058, 21;
	xor.b32  	%r2060, %r2059, %r2030;
	shf.l.wrap.b32 	%r2061, %r2060, %r2060, 30;
	and.b32  	%r2062, %r2030, %r1993;
	or.b32  	%r2063, %r2030, %r1993;
	and.b32  	%r2064, %r2063, %r1956;
	or.b32  	%r2065, %r2064, %r2062;
	add.s32 	%r2066, %r2061, %r2065;
	add.s32 	%r2067, %r2066, %r2055;
	shf.l.wrap.b32 	%r2068, %r2006, %r2006, 15;
	shf.l.wrap.b32 	%r2069, %r2006, %r2006, 13;
	xor.b32  	%r2070, %r2068, %r2069;
	shr.u32 	%r2071, %r2006, 10;
	xor.b32  	%r2072, %r2070, %r2071;
	shf.l.wrap.b32 	%r2073, %r1525, %r1525, 25;
	shf.l.wrap.b32 	%r2074, %r1525, %r1525, 14;
	xor.b32  	%r2075, %r2073, %r2074;
	shr.u32 	%r2076, %r1525, 3;
	xor.b32  	%r2077, %r2075, %r2076;
	add.s32 	%r2078, %r2077, %r1488;
	add.s32 	%r2079, %r2078, %r1821;
	add.s32 	%r2080, %r2079, %r2072;
	add.s32 	%r2081, %r2080, %r1945;
	xor.b32  	%r2082, %r2019, %r1982;
	and.b32  	%r2083, %r2056, %r2082;
	xor.b32  	%r2084, %r2083, %r1982;
	add.s32 	%r2085, %r2081, %r2084;
	shf.l.wrap.b32 	%r2086, %r2056, %r2056, 18;
	xor.b32  	%r2087, %r2086, %r2056;
	shf.l.wrap.b32 	%r2088, %r2087, %r2087, 27;
	xor.b32  	%r2089, %r2088, %r2056;
	shf.l.wrap.b32 	%r2090, %r2089, %r2089, 26;
	add.s32 	%r2091, %r2085, %r2090;
	add.s32 	%r2092, %r2091, -694614492;
	add.s32 	%r2093, %r2092, %r1956;
	shf.l.wrap.b32 	%r2094, %r2067, %r2067, 23;
	xor.b32  	%r2095, %r2094, %r2067;
	shf.l.wrap.b32 	%r2096, %r2095, %r2095, 21;
	xor.b32  	%r2097, %r2096, %r2067;
	shf.l.wrap.b32 	%r2098, %r2097, %r2097, 30;
	and.b32  	%r2099, %r2067, %r2030;
	or.b32  	%r2100, %r2067, %r2030;
	and.b32  	%r2101, %r2100, %r1993;
	or.b32  	%r2102, %r2101, %r2099;
	add.s32 	%r2103, %r2098, %r2102;
	add.s32 	%r2104, %r2103, %r2092;
	shf.l.wrap.b32 	%r2105, %r2043, %r2043, 15;
	shf.l.wrap.b32 	%r2106, %r2043, %r2043, 13;
	xor.b32  	%r2107, %r2105, %r2106;
	shr.u32 	%r2108, %r2043, 10;
	xor.b32  	%r2109, %r2107, %r2108;
	shf.l.wrap.b32 	%r2110, %r1562, %r1562, 25;
	shf.l.wrap.b32 	%r2111, %r1562, %r1562, 14;
	xor.b32  	%r2112, %r2110, %r2111;
	shr.u32 	%r2113, %r1562, 3;
	xor.b32  	%r2114, %r2112, %r2113;
	add.s32 	%r2115, %r2114, %r1525;
	add.s32 	%r2116, %r2115, %r1858;
	add.s32 	%r2117, %r2116, %r2109;
	add.s32 	%r2118, %r2117, %r1982;
	xor.b32  	%r2119, %r2056, %r2019;
	and.b32  	%r2120, %r2093, %r2119;
	xor.b32  	%r2121, %r2120, %r2019;
	add.s32 	%r2122, %r2118, %r2121;
	shf.l.wrap.b32 	%r2123, %r2093, %r2093, 18;
	xor.b32  	%r2124, %r2123, %r2093;
	shf.l.wrap.b32 	%r2125, %r2124, %r2124, 27;
	xor.b32  	%r2126, %r2125, %r2093;
	shf.l.wrap.b32 	%r2127, %r2126, %r2126, 26;
	add.s32 	%r2128, %r2122, %r2127;
	add.s32 	%r2129, %r2128, -200395387;
	add.s32 	%r2130, %r2129, %r1993;
	shf.l.wrap.b32 	%r2131, %r2104, %r2104, 23;
	xor.b32  	%r2132, %r2131, %r2104;
	shf.l.wrap.b32 	%r2133, %r2132, %r2132, 21;
	xor.b32  	%r2134, %r2133, %r2104;
	shf.l.wrap.b32 	%r2135, %r2134, %r2134, 30;
	and.b32  	%r2136, %r2104, %r2067;
	or.b32  	%r2137, %r2104, %r2067;
	and.b32  	%r2138, %r2137, %r2030;
	or.b32  	%r2139, %r2138, %r2136;
	add.s32 	%r2140, %r2135, %r2139;
	add.s32 	%r2141, %r2140, %r2129;
	shf.l.wrap.b32 	%r2142, %r2080, %r2080, 15;
	shf.l.wrap.b32 	%r2143, %r2080, %r2080, 13;
	xor.b32  	%r2144, %r2142, %r2143;
	shr.u32 	%r2145, %r2080, 10;
	xor.b32  	%r2146, %r2144, %r2145;
	shf.l.wrap.b32 	%r2147, %r1599, %r1599, 25;
	shf.l.wrap.b32 	%r2148, %r1599, %r1599, 14;
	xor.b32  	%r2149, %r2147, %r2148;
	shr.u32 	%r2150, %r1599, 3;
	xor.b32  	%r2151, %r2149, %r2150;
	add.s32 	%r2152, %r2151, %r1562;
	add.s32 	%r2153, %r2152, %r1895;
	add.s32 	%r2154, %r2153, %r2146;
	add.s32 	%r2155, %r2154, %r2019;
	xor.b32  	%r2156, %r2093, %r2056;
	and.b32  	%r2157, %r2130, %r2156;
	xor.b32  	%r2158, %r2157, %r2056;
	add.s32 	%r2159, %r2155, %r2158;
	shf.l.wrap.b32 	%r2160, %r2130, %r2130, 18;
	xor.b32  	%r2161, %r2160, %r2130;
	shf.l.wrap.b32 	%r2162, %r2161, %r2161, 27;
	xor.b32  	%r2163, %r2162, %r2130;
	shf.l.wrap.b32 	%r2164, %r2163, %r2163, 26;
	add.s32 	%r2165, %r2159, %r2164;
	add.s32 	%r2166, %r2165, 275423344;
	add.s32 	%r2167, %r2166, %r2030;
	shf.l.wrap.b32 	%r2168, %r2141, %r2141, 23;
	xor.b32  	%r2169, %r2168, %r2141;
	shf.l.wrap.b32 	%r2170, %r2169, %r2169, 21;
	xor.b32  	%r2171, %r2170, %r2141;
	shf.l.wrap.b32 	%r2172, %r2171, %r2171, 30;
	and.b32  	%r2173, %r2141, %r2104;
	or.b32  	%r2174, %r2141, %r2104;
	and.b32  	%r2175, %r2174, %r2067;
	or.b32  	%r2176, %r2175, %r2173;
	add.s32 	%r2177, %r2172, %r2176;
	add.s32 	%r2178, %r2177, %r2166;
	shf.l.wrap.b32 	%r2179, %r2117, %r2117, 15;
	shf.l.wrap.b32 	%r2180, %r2117, %r2117, 13;
	xor.b32  	%r2181, %r2179, %r2180;
	shr.u32 	%r2182, %r2117, 10;
	xor.b32  	%r2183, %r2181, %r2182;
	shf.l.wrap.b32 	%r2184, %r1636, %r1636, 25;
	shf.l.wrap.b32 	%r2185, %r1636, %r1636, 14;
	xor.b32  	%r2186, %r2184, %r2185;
	shr.u32 	%r2187, %r1636, 3;
	xor.b32  	%r2188, %r2186, %r2187;
	add.s32 	%r2189, %r2188, %r1599;
	add.s32 	%r2190, %r2189, %r1932;
	add.s32 	%r2191, %r2190, %r2183;
	add.s32 	%r2192, %r2191, %r2056;
	xor.b32  	%r2193, %r2130, %r2093;
	and.b32  	%r2194, %r2167, %r2193;
	xor.b32  	%r2195, %r2194, %r2093;
	add.s32 	%r2196, %r2192, %r2195;
	shf.l.wrap.b32 	%r2197, %r2167, %r2167, 18;
	xor.b32  	%r2198, %r2197, %r2167;
	shf.l.wrap.b32 	%r2199, %r2198, %r2198, 27;
	xor.b32  	%r2200, %r2199, %r2167;
	shf.l.wrap.b32 	%r2201, %r2200, %r2200, 26;
	add.s32 	%r2202, %r2196, %r2201;
	add.s32 	%r2203, %r2202, 430227734;
	add.s32 	%r2204, %r2203, %r2067;
	shf.l.wrap.b32 	%r2205, %r2178, %r2178, 23;
	xor.b32  	%r2206, %r2205, %r2178;
	shf.l.wrap.b32 	%r2207, %r2206, %r2206, 21;
	xor.b32  	%r2208, %r2207, %r2178;
	shf.l.wrap.b32 	%r2209, %r2208, %r2208, 30;
	and.b32  	%r2210, %r2178, %r2141;
	or.b32  	%r2211, %r2178, %r2141;
	and.b32  	%r2212, %r2211, %r2104;
	or.b32  	%r2213, %r2212, %r2210;
	add.s32 	%r2214, %r2209, %r2213;
	add.s32 	%r2215, %r2214, %r2203;
	shf.l.wrap.b32 	%r2216, %r2154, %r2154, 15;
	shf.l.wrap.b32 	%r2217, %r2154, %r2154, 13;
	xor.b32  	%r2218, %r2216, %r2217;
	shr.u32 	%r2219, %r2154, 10;
	xor.b32  	%r2220, %r2218, %r2219;
	shf.l.wrap.b32 	%r2221, %r1673, %r1673, 25;
	shf.l.wrap.b32 	%r2222, %r1673, %r1673, 14;
	xor.b32  	%r2223, %r2221, %r2222;
	shr.u32 	%r2224, %r1673, 3;
	xor.b32  	%r2225, %r2223, %r2224;
	add.s32 	%r2226, %r2225, %r1636;
	add.s32 	%r2227, %r2226, %r1969;
	add.s32 	%r2228, %r2227, %r2220;
	add.s32 	%r2229, %r2228, %r2093;
	xor.b32  	%r2230, %r2167, %r2130;
	and.b32  	%r2231, %r2204, %r2230;
	xor.b32  	%r2232, %r2231, %r2130;
	add.s32 	%r2233, %r2229, %r2232;
	shf.l.wrap.b32 	%r2234, %r2204, %r2204, 18;
	xor.b32  	%r2235, %r2234, %r2204;
	shf.l.wrap.b32 	%r2236, %r2235, %r2235, 27;
	xor.b32  	%r2237, %r2236, %r2204;
	shf.l.wrap.b32 	%r2238, %r2237, %r2237, 26;
	add.s32 	%r2239, %r2233, %r2238;
	add.s32 	%r2240, %r2239, 506948616;
	add.s32 	%r2241, %r2240, %r2104;
	shf.l.wrap.b32 	%r2242, %r2215, %r2215, 23;
	xor.b32  	%r2243, %r2242, %r2215;
	shf.l.wrap.b32 	%r2244, %r2243, %r2243, 21;
	xor.b32  	%r2245, %r2244, %r2215;
	shf.l.wrap.b32 	%r2246, %r2245, %r2245, 30;
	and.b32  	%r2247, %r2215, %r2178;
	or.b32  	%r2248, %r2215, %r2178;
	and.b32  	%r2249, %r2248, %r2141;
	or.b32  	%r2250, %r2249, %r2247;
	add.s32 	%r2251, %r2246, %r2250;
	add.s32 	%r2252, %r2251, %r2240;
	shf.l.wrap.b32 	%r2253, %r2191, %r2191, 15;
	shf.l.wrap.b32 	%r2254, %r2191, %r2191, 13;
	xor.b32  	%r2255, %r2253, %r2254;
	shr.u32 	%r2256, %r2191, 10;
	xor.b32  	%r2257, %r2255, %r2256;
	shf.l.wrap.b32 	%r2258, %r1710, %r1710, 25;
	shf.l.wrap.b32 	%r2259, %r1710, %r1710, 14;
	xor.b32  	%r2260, %r2258, %r2259;
	shr.u32 	%r2261, %r1710, 3;
	xor.b32  	%r2262, %r2260, %r2261;
	add.s32 	%r2263, %r2262, %r1673;
	add.s32 	%r2264, %r2263, %r2006;
	add.s32 	%r2265, %r2264, %r2257;
	add.s32 	%r2266, %r2265, %r2130;
	xor.b32  	%r2267, %r2204, %r2167;
	and.b32  	%r2268, %r2241, %r2267;
	xor.b32  	%r2269, %r2268, %r2167;
	add.s32 	%r2270, %r2266, %r2269;
	shf.l.wrap.b32 	%r2271, %r2241, %r2241, 18;
	xor.b32  	%r2272, %r2271, %r2241;
	shf.l.wrap.b32 	%r2273, %r2272, %r2272, 27;
	xor.b32  	%r2274, %r2273, %r2241;
	shf.l.wrap.b32 	%r2275, %r2274, %r2274, 26;
	add.s32 	%r2276, %r2270, %r2275;
	add.s32 	%r2277, %r2276, 659060556;
	add.s32 	%r2278, %r2277, %r2141;
	shf.l.wrap.b32 	%r2279, %r2252, %r2252, 23;
	xor.b32  	%r2280, %r2279, %r2252;
	shf.l.wrap.b32 	%r2281, %r2280, %r2280, 21;
	xor.b32  	%r2282, %r2281, %r2252;
	shf.l.wrap.b32 	%r2283, %r2282, %r2282, 30;
	and.b32  	%r2284, %r2252, %r2215;
	or.b32  	%r2285, %r2252, %r2215;
	and.b32  	%r2286, %r2285, %r2178;
	or.b32  	%r2287, %r2286, %r2284;
	add.s32 	%r2288, %r2283, %r2287;
	add.s32 	%r2289, %r2288, %r2277;
	shf.l.wrap.b32 	%r2290, %r2228, %r2228, 15;
	shf.l.wrap.b32 	%r2291, %r2228, %r2228, 13;
	xor.b32  	%r2292, %r2290, %r2291;
	shr.u32 	%r2293, %r2228, 10;
	xor.b32  	%r2294, %r2292, %r2293;
	shf.l.wrap.b32 	%r2295, %r1747, %r1747, 25;
	shf.l.wrap.b32 	%r2296, %r1747, %r1747, 14;
	xor.b32  	%r2297, %r2295, %r2296;
	shr.u32 	%r2298, %r1747, 3;
	xor.b32  	%r2299, %r2297, %r2298;
	add.s32 	%r2300, %r2299, %r1710;
	add.s32 	%r2301, %r2300, %r2043;
	add.s32 	%r2302, %r2301, %r2294;
	add.s32 	%r2303, %r2302, %r2167;
	xor.b32  	%r2304, %r2241, %r2204;
	and.b32  	%r2305, %r2278, %r2304;
	xor.b32  	%r2306, %r2305, %r2204;
	add.s32 	%r2307, %r2303, %r2306;
	shf.l.wrap.b32 	%r2308, %r2278, %r2278, 18;
	xor.b32  	%r2309, %r2308, %r2278;
	shf.l.wrap.b32 	%r2310, %r2309, %r2309, 27;
	xor.b32  	%r2311, %r2310, %r2278;
	shf.l.wrap.b32 	%r2312, %r2311, %r2311, 26;
	add.s32 	%r2313, %r2307, %r2312;
	add.s32 	%r2314, %r2313, 883997877;
	add.s32 	%r2315, %r2314, %r2178;
	shf.l.wrap.b32 	%r2316, %r2289, %r2289, 23;
	xor.b32  	%r2317, %r2316, %r2289;
	shf.l.wrap.b32 	%r2318, %r2317, %r2317, 21;
	xor.b32  	%r2319, %r2318, %r2289;
	shf.l.wrap.b32 	%r2320, %r2319, %r2319, 30;
	and.b32  	%r2321, %r2289, %r2252;
	or.b32  	%r2322, %r2289, %r2252;
	and.b32  	%r2323, %r2322, %r2215;
	or.b32  	%r2324, %r2323, %r2321;
	add.s32 	%r2325, %r2320, %r2324;
	add.s32 	%r2326, %r2325, %r2314;
	shf.l.wrap.b32 	%r2327, %r2265, %r2265, 15;
	shf.l.wrap.b32 	%r2328, %r2265, %r2265, 13;
	xor.b32  	%r2329, %r2327, %r2328;
	shr.u32 	%r2330, %r2265, 10;
	xor.b32  	%r2331, %r2329, %r2330;
	shf.l.wrap.b32 	%r2332, %r1784, %r1784, 25;
	shf.l.wrap.b32 	%r2333, %r1784, %r1784, 14;
	xor.b32  	%r2334, %r2332, %r2333;
	shr.u32 	%r2335, %r1784, 3;
	xor.b32  	%r2336, %r2334, %r2335;
	add.s32 	%r2337, %r2336, %r1747;
	add.s32 	%r2338, %r2337, %r2080;
	add.s32 	%r2339, %r2338, %r2331;
	add.s32 	%r2340, %r2339, %r2204;
	xor.b32  	%r2341, %r2278, %r2241;
	and.b32  	%r2342, %r2315, %r2341;
	xor.b32  	%r2343, %r2342, %r2241;
	add.s32 	%r2344, %r2340, %r2343;
	shf.l.wrap.b32 	%r2345, %r2315, %r2315, 18;
	xor.b32  	%r2346, %r2345, %r2315;
	shf.l.wrap.b32 	%r2347, %r2346, %r2346, 27;
	xor.b32  	%r2348, %r2347, %r2315;
	shf.l.wrap.b32 	%r2349, %r2348, %r2348, 26;
	add.s32 	%r2350, %r2344, %r2349;
	add.s32 	%r2351, %r2350, 958139571;
	add.s32 	%r2352, %r2351, %r2215;
	shf.l.wrap.b32 	%r2353, %r2326, %r2326, 23;
	xor.b32  	%r2354, %r2353, %r2326;
	shf.l.wrap.b32 	%r2355, %r2354, %r2354, 21;
	xor.b32  	%r2356, %r2355, %r2326;
	shf.l.wrap.b32 	%r2357, %r2356, %r2356, 30;
	and.b32  	%r2358, %r2326, %r2289;
	or.b32  	%r2359, %r2326, %r2289;
	and.b32  	%r2360, %r2359, %r2252;
	or.b32  	%r2361, %r2360, %r2358;
	add.s32 	%r2362, %r2357, %r2361;
	add.s32 	%r2363, %r2362, %r2351;
	shf.l.wrap.b32 	%r2364, %r2302, %r2302, 15;
	shf.l.wrap.b32 	%r2365, %r2302, %r2302, 13;
	xor.b32  	%r2366, %r2364, %r2365;
	shr.u32 	%r2367, %r2302, 10;
	xor.b32  	%r2368, %r2366, %r2367;
	shf.l.wrap.b32 	%r2369, %r1821, %r1821, 25;
	shf.l.wrap.b32 	%r2370, %r1821, %r1821, 14;
	xor.b32  	%r2371, %r2369, %r2370;
	shr.u32 	%r2372, %r1821, 3;
	xor.b32  	%r2373, %r2371, %r2372;
	add.s32 	%r2374, %r2373, %r1784;
	add.s32 	%r2375, %r2374, %r2117;
	add.s32 	%r2376, %r2375, %r2368;
	add.s32 	%r2377, %r2376, %r2241;
	xor.b32  	%r2378, %r2315, %r2278;
	and.b32  	%r2379, %r2352, %r2378;
	xor.b32  	%r2380, %r2379, %r2278;
	add.s32 	%r2381, %r2377, %r2380;
	shf.l.wrap.b32 	%r2382, %r2352, %r2352, 18;
	xor.b32  	%r2383, %r2382, %r2352;
	shf.l.wrap.b32 	%r2384, %r2383, %r2383, 27;
	xor.b32  	%r2385, %r2384, %r2352;
	shf.l.wrap.b32 	%r2386, %r2385, %r2385, 26;
	add.s32 	%r2387, %r2381, %r2386;
	add.s32 	%r2388, %r2387, 1322822218;
	add.s32 	%r2389, %r2388, %r2252;
	shf.l.wrap.b32 	%r2390, %r2363, %r2363, 23;
	xor.b32  	%r2391, %r2390, %r2363;
	shf.l.wrap.b32 	%r2392, %r2391, %r2391, 21;
	xor.b32  	%r2393, %r2392, %r2363;
	shf.l.wrap.b32 	%r2394, %r2393, %r2393, 30;
	and.b32  	%r2395, %r2363, %r2326;
	or.b32  	%r2396, %r2363, %r2326;
	and.b32  	%r2397, %r2396, %r2289;
	or.b32  	%r2398, %r2397, %r2395;
	add.s32 	%r2399, %r2394, %r2398;
	add.s32 	%r2400, %r2399, %r2388;
	shf.l.wrap.b32 	%r2401, %r2339, %r2339, 15;
	shf.l.wrap.b32 	%r2402, %r2339, %r2339, 13;
	xor.b32  	%r2403, %r2401, %r2402;
	shr.u32 	%r2404, %r2339, 10;
	xor.b32  	%r2405, %r2403, %r2404;
	shf.l.wrap.b32 	%r2406, %r1858, %r1858, 25;
	shf.l.wrap.b32 	%r2407, %r1858, %r1858, 14;
	xor.b32  	%r2408, %r2406, %r2407;
	shr.u32 	%r2409, %r1858, 3;
	xor.b32  	%r2410, %r2408, %r2409;
	add.s32 	%r2411, %r2410, %r1821;
	add.s32 	%r2412, %r2411, %r2154;
	add.s32 	%r2413, %r2412, %r2405;
	add.s32 	%r2414, %r2413, %r2278;
	xor.b32  	%r2415, %r2352, %r2315;
	and.b32  	%r2416, %r2389, %r2415;
	xor.b32  	%r2417, %r2416, %r2315;
	add.s32 	%r2418, %r2414, %r2417;
	shf.l.wrap.b32 	%r2419, %r2389, %r2389, 18;
	xor.b32  	%r2420, %r2419, %r2389;
	shf.l.wrap.b32 	%r2421, %r2420, %r2420, 27;
	xor.b32  	%r2422, %r2421, %r2389;
	shf.l.wrap.b32 	%r2423, %r2422, %r2422, 26;
	add.s32 	%r2424, %r2418, %r2423;
	add.s32 	%r2425, %r2424, 1537002063;
	add.s32 	%r2426, %r2425, %r2289;
	shf.l.wrap.b32 	%r2427, %r2400, %r2400, 23;
	xor.b32  	%r2428, %r2427, %r2400;
	shf.l.wrap.b32 	%r2429, %r2428, %r2428, 21;
	xor.b32  	%r2430, %r2429, %r2400;
	shf.l.wrap.b32 	%r2431, %r2430, %r2430, 30;
	and.b32  	%r2432, %r2400, %r2363;
	or.b32  	%r2433, %r2400, %r2363;
	and.b32  	%r2434, %r2433, %r2326;
	or.b32  	%r2435, %r2434, %r2432;
	add.s32 	%r2436, %r2431, %r2435;
	add.s32 	%r2437, %r2436, %r2425;
	shf.l.wrap.b32 	%r2438, %r2376, %r2376, 15;
	shf.l.wrap.b32 	%r2439, %r2376, %r2376, 13;
	xor.b32  	%r2440, %r2438, %r2439;
	shr.u32 	%r2441, %r2376, 10;
	xor.b32  	%r2442, %r2440, %r2441;
	shf.l.wrap.b32 	%r2443, %r1895, %r1895, 25;
	shf.l.wrap.b32 	%r2444, %r1895, %r1895, 14;
	xor.b32  	%r2445, %r2443, %r2444;
	shr.u32 	%r2446, %r1895, 3;
	xor.b32  	%r2447, %r2445, %r2446;
	add.s32 	%r2448, %r2447, %r1858;
	add.s32 	%r2449, %r2448, %r2191;
	add.s32 	%r2450, %r2449, %r2442;
	add.s32 	%r2451, %r2450, %r2315;
	xor.b32  	%r2452, %r2389, %r2352;
	and.b32  	%r2453, %r2426, %r2452;
	xor.b32  	%r2454, %r2453, %r2352;
	add.s32 	%r2455, %r2451, %r2454;
	shf.l.wrap.b32 	%r2456, %r2426, %r2426, 18;
	xor.b32  	%r2457, %r2456, %r2426;
	shf.l.wrap.b32 	%r2458, %r2457, %r2457, 27;
	xor.b32  	%r2459, %r2458, %r2426;
	shf.l.wrap.b32 	%r2460, %r2459, %r2459, 26;
	add.s32 	%r2461, %r2455, %r2460;
	add.s32 	%r2462, %r2461, 1747873779;
	add.s32 	%r2463, %r2462, %r2326;
	shf.l.wrap.b32 	%r2464, %r2437, %r2437, 23;
	xor.b32  	%r2465, %r2464, %r2437;
	shf.l.wrap.b32 	%r2466, %r2465, %r2465, 21;
	xor.b32  	%r2467, %r2466, %r2437;
	shf.l.wrap.b32 	%r2468, %r2467, %r2467, 30;
	and.b32  	%r2469, %r2437, %r2400;
	or.b32  	%r2470, %r2437, %r2400;
	and.b32  	%r2471, %r2470, %r2363;
	or.b32  	%r2472, %r2471, %r2469;
	add.s32 	%r2473, %r2468, %r2472;
	add.s32 	%r2474, %r2473, %r2462;
	shf.l.wrap.b32 	%r2475, %r2413, %r2413, 15;
	shf.l.wrap.b32 	%r2476, %r2413, %r2413, 13;
	xor.b32  	%r2477, %r2475, %r2476;
	shr.u32 	%r2478, %r2413, 10;
	xor.b32  	%r2479, %r2477, %r2478;
	shf.l.wrap.b32 	%r2480, %r1932, %r1932, 25;
	shf.l.wrap.b32 	%r2481, %r1932, %r1932, 14;
	xor.b32  	%r2482, %r2480, %r2481;
	shr.u32 	%r2483, %r1932, 3;
	xor.b32  	%r2484, %r2482, %r2483;
	add.s32 	%r2485, %r2484, %r1895;
	add.s32 	%r2486, %r2485, %r2228;
	add.s32 	%r2487, %r2486, %r2479;
	add.s32 	%r2488, %r2487, %r2352;
	xor.b32  	%r2489, %r2426, %r2389;
	and.b32  	%r2490, %r2463, %r2489;
	xor.b32  	%r2491, %r2490, %r2389;
	add.s32 	%r2492, %r2488, %r2491;
	shf.l.wrap.b32 	%r2493, %r2463, %r2463, 18;
	xor.b32  	%r2494, %r2493, %r2463;
	shf.l.wrap.b32 	%r2495, %r2494, %r2494, 27;
	xor.b32  	%r2496, %r2495, %r2463;
	shf.l.wrap.b32 	%r2497, %r2496, %r2496, 26;
	add.s32 	%r2498, %r2492, %r2497;
	add.s32 	%r2499, %r2498, 1955562222;
	add.s32 	%r2500, %r2499, %r2363;
	shf.l.wrap.b32 	%r2501, %r2474, %r2474, 23;
	xor.b32  	%r2502, %r2501, %r2474;
	shf.l.wrap.b32 	%r2503, %r2502, %r2502, 21;
	xor.b32  	%r2504, %r2503, %r2474;
	shf.l.wrap.b32 	%r2505, %r2504, %r2504, 30;
	and.b32  	%r2506, %r2474, %r2437;
	or.b32  	%r2507, %r2474, %r2437;
	and.b32  	%r2508, %r2507, %r2400;
	or.b32  	%r2509, %r2508, %r2506;
	add.s32 	%r2510, %r2505, %r2509;
	add.s32 	%r2511, %r2510, %r2499;
	shf.l.wrap.b32 	%r2512, %r2450, %r2450, 15;
	shf.l.wrap.b32 	%r2513, %r2450, %r2450, 13;
	xor.b32  	%r2514, %r2512, %r2513;
	shr.u32 	%r2515, %r2450, 10;
	xor.b32  	%r2516, %r2514, %r2515;
	shf.l.wrap.b32 	%r2517, %r1969, %r1969, 25;
	shf.l.wrap.b32 	%r2518, %r1969, %r1969, 14;
	xor.b32  	%r2519, %r2517, %r2518;
	shr.u32 	%r2520, %r1969, 3;
	xor.b32  	%r2521, %r2519, %r2520;
	add.s32 	%r2522, %r2521, %r1932;
	add.s32 	%r2523, %r2522, %r2265;
	add.s32 	%r2524, %r2523, %r2516;
	add.s32 	%r2525, %r2524, %r2389;
	xor.b32  	%r2526, %r2463, %r2426;
	and.b32  	%r2527, %r2500, %r2526;
	xor.b32  	%r2528, %r2527, %r2426;
	add.s32 	%r2529, %r2525, %r2528;
	shf.l.wrap.b32 	%r2530, %r2500, %r2500, 18;
	xor.b32  	%r2531, %r2530, %r2500;
	shf.l.wrap.b32 	%r2532, %r2531, %r2531, 27;
	xor.b32  	%r2533, %r2532, %r2500;
	shf.l.wrap.b32 	%r2534, %r2533, %r2533, 26;
	add.s32 	%r2535, %r2529, %r2534;
	add.s32 	%r2536, %r2535, 2024104815;
	add.s32 	%r2537, %r2536, %r2400;
	shf.l.wrap.b32 	%r2538, %r2511, %r2511, 23;
	xor.b32  	%r2539, %r2538, %r2511;
	shf.l.wrap.b32 	%r2540, %r2539, %r2539, 21;
	xor.b32  	%r2541, %r2540, %r2511;
	shf.l.wrap.b32 	%r2542, %r2541, %r2541, 30;
	and.b32  	%r2543, %r2511, %r2474;
	or.b32  	%r2544, %r2511, %r2474;
	and.b32  	%r2545, %r2544, %r2437;
	or.b32  	%r2546, %r2545, %r2543;
	add.s32 	%r2547, %r2542, %r2546;
	add.s32 	%r2548, %r2547, %r2536;
	shf.l.wrap.b32 	%r2549, %r2487, %r2487, 15;
	shf.l.wrap.b32 	%r2550, %r2487, %r2487, 13;
	xor.b32  	%r2551, %r2549, %r2550;
	shr.u32 	%r2552, %r2487, 10;
	xor.b32  	%r2553, %r2551, %r2552;
	shf.l.wrap.b32 	%r2554, %r2006, %r2006, 25;
	shf.l.wrap.b32 	%r2555, %r2006, %r2006, 14;
	xor.b32  	%r2556, %r2554, %r2555;
	shr.u32 	%r2557, %r2006, 3;
	xor.b32  	%r2558, %r2556, %r2557;
	add.s32 	%r2559, %r2558, %r1969;
	add.s32 	%r2560, %r2559, %r2302;
	add.s32 	%r2561, %r2560, %r2553;
	add.s32 	%r2562, %r2561, %r2426;
	xor.b32  	%r2563, %r2500, %r2463;
	and.b32  	%r2564, %r2537, %r2563;
	xor.b32  	%r2565, %r2564, %r2463;
	add.s32 	%r2566, %r2562, %r2565;
	shf.l.wrap.b32 	%r2567, %r2537, %r2537, 18;
	xor.b32  	%r2568, %r2567, %r2537;
	shf.l.wrap.b32 	%r2569, %r2568, %r2568, 27;
	xor.b32  	%r2570, %r2569, %r2537;
	shf.l.wrap.b32 	%r2571, %r2570, %r2570, 26;
	add.s32 	%r2572, %r2566, %r2571;
	add.s32 	%r2573, %r2572, -2067236844;
	add.s32 	%r2574, %r2573, %r2437;
	shf.l.wrap.b32 	%r2575, %r2548, %r2548, 23;
	xor.b32  	%r2576, %r2575, %r2548;
	shf.l.wrap.b32 	%r2577, %r2576, %r2576, 21;
	xor.b32  	%r2578, %r2577, %r2548;
	shf.l.wrap.b32 	%r2579, %r2578, %r2578, 30;
	and.b32  	%r2580, %r2548, %r2511;
	or.b32  	%r2581, %r2548, %r2511;
	and.b32  	%r2582, %r2581, %r2474;
	or.b32  	%r2583, %r2582, %r2580;
	add.s32 	%r2584, %r2579, %r2583;
	add.s32 	%r2585, %r2584, %r2573;
	shf.l.wrap.b32 	%r2586, %r2524, %r2524, 15;
	shf.l.wrap.b32 	%r2587, %r2524, %r2524, 13;
	xor.b32  	%r2588, %r2586, %r2587;
	shr.u32 	%r2589, %r2524, 10;
	xor.b32  	%r2590, %r2588, %r2589;
	shf.l.wrap.b32 	%r2591, %r2043, %r2043, 25;
	shf.l.wrap.b32 	%r2592, %r2043, %r2043, 14;
	xor.b32  	%r2593, %r2591, %r2592;
	shr.u32 	%r2594, %r2043, 3;
	xor.b32  	%r2595, %r2593, %r2594;
	add.s32 	%r2596, %r2595, %r2006;
	add.s32 	%r2597, %r2596, %r2339;
	add.s32 	%r2598, %r2597, %r2590;
	add.s32 	%r2599, %r2598, %r2463;
	xor.b32  	%r2600, %r2537, %r2500;
	and.b32  	%r2601, %r2574, %r2600;
	xor.b32  	%r2602, %r2601, %r2500;
	add.s32 	%r2603, %r2599, %r2602;
	shf.l.wrap.b32 	%r2604, %r2574, %r2574, 18;
	xor.b32  	%r2605, %r2604, %r2574;
	shf.l.wrap.b32 	%r2606, %r2605, %r2605, 27;
	xor.b32  	%r2607, %r2606, %r2574;
	shf.l.wrap.b32 	%r2608, %r2607, %r2607, 26;
	add.s32 	%r2609, %r2603, %r2608;
	add.s32 	%r2610, %r2609, -1933114872;
	add.s32 	%r2611, %r2610, %r2474;
	shf.l.wrap.b32 	%r2612, %r2585, %r2585, 23;
	xor.b32  	%r2613, %r2612, %r2585;
	shf.l.wrap.b32 	%r2614, %r2613, %r2613, 21;
	xor.b32  	%r2615, %r2614, %r2585;
	shf.l.wrap.b32 	%r2616, %r2615, %r2615, 30;
	and.b32  	%r2617, %r2585, %r2548;
	or.b32  	%r2618, %r2585, %r2548;
	and.b32  	%r2619, %r2618, %r2511;
	or.b32  	%r2620, %r2619, %r2617;
	add.s32 	%r2621, %r2616, %r2620;
	add.s32 	%r2622, %r2621, %r2610;
	shf.l.wrap.b32 	%r2623, %r2561, %r2561, 15;
	shf.l.wrap.b32 	%r2624, %r2561, %r2561, 13;
	xor.b32  	%r2625, %r2623, %r2624;
	shr.u32 	%r2626, %r2561, 10;
	xor.b32  	%r2627, %r2625, %r2626;
	shf.l.wrap.b32 	%r2628, %r2080, %r2080, 25;
	shf.l.wrap.b32 	%r2629, %r2080, %r2080, 14;
	xor.b32  	%r2630, %r2628, %r2629;
	shr.u32 	%r2631, %r2080, 3;
	xor.b32  	%r2632, %r2630, %r2631;
	add.s32 	%r2633, %r2632, %r2043;
	add.s32 	%r2634, %r2633, %r2376;
	add.s32 	%r2635, %r2634, %r2627;
	add.s32 	%r2636, %r2635, %r2500;
	xor.b32  	%r2637, %r2574, %r2537;
	and.b32  	%r2638, %r2611, %r2637;
	xor.b32  	%r2639, %r2638, %r2537;
	add.s32 	%r2640, %r2636, %r2639;
	shf.l.wrap.b32 	%r2641, %r2611, %r2611, 18;
	xor.b32  	%r2642, %r2641, %r2611;
	shf.l.wrap.b32 	%r2643, %r2642, %r2642, 27;
	xor.b32  	%r2644, %r2643, %r2611;
	shf.l.wrap.b32 	%r2645, %r2644, %r2644, 26;
	add.s32 	%r2646, %r2640, %r2645;
	add.s32 	%r2647, %r2646, -1866530822;
	add.s32 	%r2648, %r2647, %r2511;
	shf.l.wrap.b32 	%r2649, %r2622, %r2622, 23;
	xor.b32  	%r2650, %r2649, %r2622;
	shf.l.wrap.b32 	%r2651, %r2650, %r2650, 21;
	xor.b32  	%r2652, %r2651, %r2622;
	shf.l.wrap.b32 	%r2653, %r2652, %r2652, 30;
	and.b32  	%r2654, %r2622, %r2585;
	or.b32  	%r2655, %r2622, %r2585;
	and.b32  	%r2656, %r2655, %r2548;
	or.b32  	%r2657, %r2656, %r2654;
	add.s32 	%r2658, %r2653, %r2657;
	add.s32 	%r2659, %r2658, %r2647;
	shf.l.wrap.b32 	%r2660, %r2598, %r2598, 15;
	shf.l.wrap.b32 	%r2661, %r2598, %r2598, 13;
	xor.b32  	%r2662, %r2660, %r2661;
	shr.u32 	%r2663, %r2598, 10;
	xor.b32  	%r2664, %r2662, %r2663;
	shf.l.wrap.b32 	%r2665, %r2117, %r2117, 25;
	shf.l.wrap.b32 	%r2666, %r2117, %r2117, 14;
	xor.b32  	%r2667, %r2665, %r2666;
	shr.u32 	%r2668, %r2117, 3;
	xor.b32  	%r2669, %r2667, %r2668;
	add.s32 	%r2670, %r2669, %r2080;
	add.s32 	%r2671, %r2670, %r2413;
	add.s32 	%r2672, %r2671, %r2664;
	add.s32 	%r2673, %r2672, %r2537;
	xor.b32  	%r2674, %r2611, %r2574;
	and.b32  	%r2675, %r2648, %r2674;
	xor.b32  	%r2676, %r2675, %r2574;
	add.s32 	%r2677, %r2673, %r2676;
	shf.l.wrap.b32 	%r2678, %r2648, %r2648, 18;
	xor.b32  	%r2679, %r2678, %r2648;
	shf.l.wrap.b32 	%r2680, %r2679, %r2679, 27;
	xor.b32  	%r2681, %r2680, %r2648;
	shf.l.wrap.b32 	%r2682, %r2681, %r2681, 26;
	add.s32 	%r2683, %r2677, %r2682;
	add.s32 	%r2684, %r2683, -1538233109;
	add.s32 	%r2685, %r2684, %r2548;
	shf.l.wrap.b32 	%r2686, %r2659, %r2659, 23;
	xor.b32  	%r2687, %r2686, %r2659;
	shf.l.wrap.b32 	%r2688, %r2687, %r2687, 21;
	xor.b32  	%r2689, %r2688, %r2659;
	shf.l.wrap.b32 	%r2690, %r2689, %r2689, 30;
	and.b32  	%r2691, %r2659, %r2622;
	or.b32  	%r2692, %r2659, %r2622;
	and.b32  	%r2693, %r2692, %r2585;
	or.b32  	%r2694, %r2693, %r2691;
	add.s32 	%r2695, %r2690, %r2694;
	add.s32 	%r2696, %r2695, %r2684;
	shf.l.wrap.b32 	%r2697, %r2635, %r2635, 15;
	shf.l.wrap.b32 	%r2698, %r2635, %r2635, 13;
	xor.b32  	%r2699, %r2697, %r2698;
	shr.u32 	%r2700, %r2635, 10;
	xor.b32  	%r2701, %r2699, %r2700;
	shf.l.wrap.b32 	%r2702, %r2154, %r2154, 25;
	shf.l.wrap.b32 	%r2703, %r2154, %r2154, 14;
	xor.b32  	%r2704, %r2702, %r2703;
	shr.u32 	%r2705, %r2154, 3;
	xor.b32  	%r2706, %r2704, %r2705;
	shf.l.wrap.b32 	%r2707, %r2685, %r2685, 18;
	xor.b32  	%r2708, %r2707, %r2685;
	shf.l.wrap.b32 	%r2709, %r2708, %r2708, 27;
	xor.b32  	%r2710, %r2709, %r2685;
	shf.l.wrap.b32 	%r2711, %r2710, %r2710, 26;
	xor.b32  	%r2712, %r2648, %r2611;
	and.b32  	%r2713, %r2685, %r2712;
	xor.b32  	%r2714, %r2713, %r2611;
	add.s32 	%r2715, %r2117, %r2706;
	add.s32 	%r2716, %r2715, %r2450;
	add.s32 	%r2717, %r2716, %r2701;
	add.s32 	%r2718, %r2717, %r2574;
	add.s32 	%r2719, %r2718, %r2714;
	add.s32 	%r2720, %r2719, %r2711;
	add.s32 	%r2721, %r2720, -1090935817;
	add.s32 	%r2722, %r2721, %r2585;
	shf.l.wrap.b32 	%r2723, %r2696, %r2696, 23;
	xor.b32  	%r2724, %r2723, %r2696;
	shf.l.wrap.b32 	%r2725, %r2724, %r2724, 21;
	xor.b32  	%r2726, %r2725, %r2696;
	shf.l.wrap.b32 	%r2727, %r2726, %r2726, 30;
	and.b32  	%r2728, %r2696, %r2659;
	or.b32  	%r2729, %r2696, %r2659;
	and.b32  	%r2730, %r2729, %r2622;
	or.b32  	%r2731, %r2730, %r2728;
	add.s32 	%r2732, %r2727, %r2731;
	add.s32 	%r2733, %r2732, %r2721;
	shf.l.wrap.b32 	%r2734, %r2672, %r2672, 15;
	shf.l.wrap.b32 	%r2735, %r2672, %r2672, 13;
	xor.b32  	%r2736, %r2734, %r2735;
	shr.u32 	%r2737, %r2672, 10;
	xor.b32  	%r2738, %r2736, %r2737;
	shf.l.wrap.b32 	%r2739, %r2191, %r2191, 25;
	shf.l.wrap.b32 	%r2740, %r2191, %r2191, 14;
	xor.b32  	%r2741, %r2739, %r2740;
	shr.u32 	%r2742, %r2191, 3;
	xor.b32  	%r2743, %r2741, %r2742;
	shf.l.wrap.b32 	%r2744, %r2722, %r2722, 18;
	xor.b32  	%r2745, %r2744, %r2722;
	shf.l.wrap.b32 	%r2746, %r2745, %r2745, 27;
	xor.b32  	%r2747, %r2746, %r2722;
	shf.l.wrap.b32 	%r2748, %r2747, %r2747, 26;
	xor.b32  	%r2749, %r2685, %r2648;
	and.b32  	%r2750, %r2722, %r2749;
	xor.b32  	%r2751, %r2750, %r2648;
	add.s32 	%r2752, %r2154, %r2743;
	add.s32 	%r2753, %r2752, %r2487;
	add.s32 	%r2754, %r2753, %r2738;
	add.s32 	%r2755, %r2754, %r2611;
	add.s32 	%r2756, %r2755, %r2751;
	add.s32 	%r2757, %r2756, %r2748;
	add.s32 	%r2758, %r2757, -965641998;
	shf.l.wrap.b32 	%r2759, %r2733, %r2733, 23;
	xor.b32  	%r2760, %r2759, %r2733;
	shf.l.wrap.b32 	%r2761, %r2760, %r2760, 21;
	xor.b32  	%r2762, %r2761, %r2733;
	shf.l.wrap.b32 	%r2763, %r2762, %r2762, 30;
	and.b32  	%r2764, %r2733, %r2696;
	or.b32  	%r2765, %r2733, %r2696;
	and.b32  	%r2766, %r2765, %r2659;
	or.b32  	%r2767, %r2766, %r2764;
	add.s32 	%r2768, %r2767, %r16991;
	add.s32 	%r2769, %r2768, %r2763;
	add.s32 	%r16991, %r2769, %r2758;
	st.local.u32 	[%rd5+4], %r16991;
	add.s32 	%r16990, %r2733, %r16990;
	st.local.u32 	[%rd5+8], %r16990;
	add.s32 	%r16989, %r2696, %r16989;
	st.local.u32 	[%rd5+12], %r16989;
	add.s32 	%r16988, %r2659, %r16988;
	st.local.u32 	[%rd5+16], %r16988;
	add.s32 	%r2770, %r2622, %r16987;
	add.s32 	%r16987, %r2770, %r2758;
	st.local.u32 	[%rd5+20], %r16987;
	add.s32 	%r16986, %r2722, %r16986;
	st.local.u32 	[%rd5+24], %r16986;
	add.s32 	%r16985, %r2685, %r16985;
	st.local.u32 	[%rd5+28], %r16985;
	add.s32 	%r16984, %r2648, %r16984;
	st.local.u32 	[%rd5+32], %r16984;
	add.s64 	%rd238, %rd238, 64;
	add.s64 	%rd236, %rd236, 64;
	add.s32 	%r17009, %r17009, -64;
	setp.gt.u32 	%p14, %r17009, 63;
	@%p14 bra 	$L__BB6_15;

$L__BB6_19:
	setp.eq.s32 	%p15, %r17009, 0;
	@%p15 bra 	$L__BB6_25;

	add.s64 	%rd243, %rd5, 36;
	and.b32  	%r17011, %r17009, 3;
	setp.eq.s32 	%p16, %r17011, 0;
	mov.u32 	%r17012, %r17009;
	@%p16 bra 	$L__BB6_23;

	mov.u64 	%rd239, %rd243;
	mov.u64 	%rd240, %rd238;
	mov.u32 	%r17012, %r17009;

$L__BB6_22:
	.pragma "nounroll";
	add.s32 	%r17012, %r17012, -1;
	add.s64 	%rd238, %rd240, 1;
	ld.local.u8 	%rs91, [%rd240];
	add.s64 	%rd243, %rd239, 1;
	st.local.u8 	[%rd239], %rs91;
	add.s32 	%r17011, %r17011, -1;
	setp.ne.s32 	%p17, %r17011, 0;
	mov.u64 	%rd239, %rd243;
	mov.u64 	%rd240, %rd238;
	@%p17 bra 	$L__BB6_22;

$L__BB6_23:
	add.s32 	%r2771, %r17009, -1;
	setp.lt.u32 	%p18, %r2771, 3;
	@%p18 bra 	$L__BB6_25;

$L__BB6_24:
	ld.local.u8 	%rs92, [%rd238];
	st.local.u8 	[%rd243], %rs92;
	ld.local.u8 	%rs93, [%rd238+1];
	st.local.u8 	[%rd243+1], %rs93;
	ld.local.u8 	%rs94, [%rd238+2];
	st.local.u8 	[%rd243+2], %rs94;
	add.s64 	%rd52, %rd238, 4;
	ld.local.u8 	%rs95, [%rd238+3];
	add.s64 	%rd53, %rd243, 4;
	st.local.u8 	[%rd243+3], %rs95;
	add.s32 	%r17012, %r17012, -4;
	setp.ne.s32 	%p19, %r17012, 0;
	mov.u64 	%rd243, %rd53;
	mov.u64 	%rd238, %rd52;
	@%p19 bra 	$L__BB6_24;

$L__BB6_25:
	setp.eq.s32 	%p72, %r17037, 0;
	@%p72 bra 	$L__BB6_45;

	add.u64 	%rd255, %SPL, 80;
	add.u64 	%rd254, %SP, 80;
	ld.local.u32 	%r2772, [%rd5];
	and.b32  	%r17018, %r2772, 63;
	mov.u32 	%r2773, 64;
	sub.s32 	%r95, %r2773, %r17018;
	add.s32 	%r2774, %r2772, %r17037;
	st.local.u32 	[%rd5], %r2774;
	setp.eq.s32 	%p21, %r17018, 0;
	setp.lt.u32 	%p22, %r17037, %r95;
	or.pred  	%p23, %p21, %p22;
	@%p23 bra 	$L__BB6_34;

	setp.eq.s32 	%p24, %r95, 0;
	@%p24 bra 	$L__BB6_33;

	add.u64 	%rd250, %SPL, 80;
	cvt.u64.u32 	%rd175, %r17018;
	add.s64 	%rd176, %rd5, %rd175;
	add.s64 	%rd249, %rd176, 36;
	and.b32  	%r17015, %r95, 3;
	setp.eq.s32 	%p25, %r17015, 0;
	mov.u32 	%r17016, %r95;
	@%p25 bra 	$L__BB6_31;

	add.u64 	%rd246, %SPL, 80;
	mov.u64 	%rd245, %rd249;
	mov.u32 	%r17016, %r95;

$L__BB6_30:
	.pragma "nounroll";
	add.s32 	%r17016, %r17016, -1;
	add.s64 	%rd250, %rd246, 1;
	ld.local.u8 	%rs96, [%rd246];
	add.s64 	%rd249, %rd245, 1;
	st.local.u8 	[%rd245], %rs96;
	add.s32 	%r17015, %r17015, -1;
	setp.ne.s32 	%p26, %r17015, 0;
	mov.u64 	%rd245, %rd249;
	mov.u64 	%rd246, %rd250;
	@%p26 bra 	$L__BB6_30;

$L__BB6_31:
	xor.b32  	%r2775, %r17018, 63;
	setp.lt.u32 	%p27, %r2775, 3;
	@%p27 bra 	$L__BB6_33;

$L__BB6_32:
	ld.local.u8 	%rs97, [%rd250];
	st.local.u8 	[%rd249], %rs97;
	ld.local.u8 	%rs98, [%rd250+1];
	st.local.u8 	[%rd249+1], %rs98;
	ld.local.u8 	%rs99, [%rd250+2];
	st.local.u8 	[%rd249+2], %rs99;
	add.s64 	%rd67, %rd250, 4;
	ld.local.u8 	%rs100, [%rd250+3];
	add.s64 	%rd68, %rd249, 4;
	st.local.u8 	[%rd249+3], %rs100;
	add.s32 	%r17016, %r17016, -4;
	setp.ne.s32 	%p28, %r17016, 0;
	mov.u64 	%rd249, %rd68;
	mov.u64 	%rd250, %rd67;
	@%p28 bra 	$L__BB6_32;

$L__BB6_33:
	add.u64 	%rd222, %SPL, 80;
	ld.local.u32 	%r2777, [%rd5+36];
	shf.l.wrap.b32 	%r2778, %r2777, %r2777, 16;
	shl.b32 	%r2779, %r2778, 8;
	and.b32  	%r2780, %r2779, -16711936;
	shr.u32 	%r2781, %r2778, 8;
	and.b32  	%r2782, %r2781, 16711935;
	or.b32  	%r2783, %r2780, %r2782;
	ld.local.u32 	%r2784, [%rd5+40];
	shf.l.wrap.b32 	%r2785, %r2784, %r2784, 16;
	shl.b32 	%r2786, %r2785, 8;
	and.b32  	%r2787, %r2786, -16711936;
	shr.u32 	%r2788, %r2785, 8;
	and.b32  	%r2789, %r2788, 16711935;
	or.b32  	%r2790, %r2787, %r2789;
	ld.local.u32 	%r2791, [%rd5+44];
	shf.l.wrap.b32 	%r2792, %r2791, %r2791, 16;
	shl.b32 	%r2793, %r2792, 8;
	and.b32  	%r2794, %r2793, -16711936;
	shr.u32 	%r2795, %r2792, 8;
	and.b32  	%r2796, %r2795, 16711935;
	or.b32  	%r2797, %r2794, %r2796;
	ld.local.u32 	%r2798, [%rd5+48];
	shf.l.wrap.b32 	%r2799, %r2798, %r2798, 16;
	shl.b32 	%r2800, %r2799, 8;
	and.b32  	%r2801, %r2800, -16711936;
	shr.u32 	%r2802, %r2799, 8;
	and.b32  	%r2803, %r2802, 16711935;
	or.b32  	%r2804, %r2801, %r2803;
	ld.local.u32 	%r2805, [%rd5+52];
	shf.l.wrap.b32 	%r2806, %r2805, %r2805, 16;
	shl.b32 	%r2807, %r2806, 8;
	and.b32  	%r2808, %r2807, -16711936;
	shr.u32 	%r2809, %r2806, 8;
	and.b32  	%r2810, %r2809, 16711935;
	or.b32  	%r2811, %r2808, %r2810;
	ld.local.u32 	%r2812, [%rd5+56];
	shf.l.wrap.b32 	%r2813, %r2812, %r2812, 16;
	shl.b32 	%r2814, %r2813, 8;
	and.b32  	%r2815, %r2814, -16711936;
	shr.u32 	%r2816, %r2813, 8;
	and.b32  	%r2817, %r2816, 16711935;
	or.b32  	%r2818, %r2815, %r2817;
	ld.local.u32 	%r2819, [%rd5+60];
	shf.l.wrap.b32 	%r2820, %r2819, %r2819, 16;
	shl.b32 	%r2821, %r2820, 8;
	and.b32  	%r2822, %r2821, -16711936;
	shr.u32 	%r2823, %r2820, 8;
	and.b32  	%r2824, %r2823, 16711935;
	or.b32  	%r2825, %r2822, %r2824;
	ld.local.u32 	%r2826, [%rd5+64];
	shf.l.wrap.b32 	%r2827, %r2826, %r2826, 16;
	shl.b32 	%r2828, %r2827, 8;
	and.b32  	%r2829, %r2828, -16711936;
	shr.u32 	%r2830, %r2827, 8;
	and.b32  	%r2831, %r2830, 16711935;
	or.b32  	%r2832, %r2829, %r2831;
	ld.local.u32 	%r2833, [%rd5+68];
	shf.l.wrap.b32 	%r2834, %r2833, %r2833, 16;
	shl.b32 	%r2835, %r2834, 8;
	and.b32  	%r2836, %r2835, -16711936;
	shr.u32 	%r2837, %r2834, 8;
	and.b32  	%r2838, %r2837, 16711935;
	or.b32  	%r2839, %r2836, %r2838;
	ld.local.u32 	%r2840, [%rd5+72];
	shf.l.wrap.b32 	%r2841, %r2840, %r2840, 16;
	shl.b32 	%r2842, %r2841, 8;
	and.b32  	%r2843, %r2842, -16711936;
	shr.u32 	%r2844, %r2841, 8;
	and.b32  	%r2845, %r2844, 16711935;
	or.b32  	%r2846, %r2843, %r2845;
	ld.local.u32 	%r2847, [%rd5+76];
	shf.l.wrap.b32 	%r2848, %r2847, %r2847, 16;
	shl.b32 	%r2849, %r2848, 8;
	and.b32  	%r2850, %r2849, -16711936;
	shr.u32 	%r2851, %r2848, 8;
	and.b32  	%r2852, %r2851, 16711935;
	or.b32  	%r2853, %r2850, %r2852;
	ld.local.u32 	%r2854, [%rd5+80];
	shf.l.wrap.b32 	%r2855, %r2854, %r2854, 16;
	shl.b32 	%r2856, %r2855, 8;
	and.b32  	%r2857, %r2856, -16711936;
	shr.u32 	%r2858, %r2855, 8;
	and.b32  	%r2859, %r2858, 16711935;
	or.b32  	%r2860, %r2857, %r2859;
	ld.local.u32 	%r2861, [%rd5+84];
	shf.l.wrap.b32 	%r2862, %r2861, %r2861, 16;
	shl.b32 	%r2863, %r2862, 8;
	and.b32  	%r2864, %r2863, -16711936;
	shr.u32 	%r2865, %r2862, 8;
	and.b32  	%r2866, %r2865, 16711935;
	or.b32  	%r2867, %r2864, %r2866;
	ld.local.u32 	%r2868, [%rd5+88];
	shf.l.wrap.b32 	%r2869, %r2868, %r2868, 16;
	shl.b32 	%r2870, %r2869, 8;
	and.b32  	%r2871, %r2870, -16711936;
	shr.u32 	%r2872, %r2869, 8;
	and.b32  	%r2873, %r2872, 16711935;
	or.b32  	%r2874, %r2871, %r2873;
	ld.local.u32 	%r2875, [%rd5+92];
	shf.l.wrap.b32 	%r2876, %r2875, %r2875, 16;
	shl.b32 	%r2877, %r2876, 8;
	and.b32  	%r2878, %r2877, -16711936;
	shr.u32 	%r2879, %r2876, 8;
	and.b32  	%r2880, %r2879, 16711935;
	or.b32  	%r2881, %r2878, %r2880;
	ld.local.u32 	%r2882, [%rd5+96];
	shf.l.wrap.b32 	%r2883, %r2882, %r2882, 16;
	shl.b32 	%r2884, %r2883, 8;
	and.b32  	%r2885, %r2884, -16711936;
	shr.u32 	%r2886, %r2883, 8;
	and.b32  	%r2887, %r2886, 16711935;
	or.b32  	%r2888, %r2885, %r2887;
	ld.local.u32 	%r2889, [%rd5+32];
	add.s32 	%r2890, %r2783, %r2889;
	ld.local.u32 	%r2891, [%rd5+20];
	shf.l.wrap.b32 	%r2892, %r2891, %r2891, 18;
	xor.b32  	%r2893, %r2892, %r2891;
	shf.l.wrap.b32 	%r2894, %r2893, %r2893, 27;
	xor.b32  	%r2895, %r2894, %r2891;
	shf.l.wrap.b32 	%r2896, %r2895, %r2895, 26;
	add.s32 	%r2897, %r2890, %r2896;
	ld.local.u32 	%r2898, [%rd5+28];
	ld.local.u32 	%r2899, [%rd5+24];
	xor.b32  	%r2900, %r2898, %r2899;
	and.b32  	%r2901, %r2900, %r2891;
	xor.b32  	%r2902, %r2901, %r2898;
	add.s32 	%r2903, %r2897, %r2902;
	add.s32 	%r2904, %r2903, 1116352408;
	ld.local.u32 	%r2905, [%rd5+16];
	add.s32 	%r2906, %r2904, %r2905;
	ld.local.u32 	%r2907, [%rd5+4];
	shf.l.wrap.b32 	%r2908, %r2907, %r2907, 23;
	xor.b32  	%r2909, %r2908, %r2907;
	shf.l.wrap.b32 	%r2910, %r2909, %r2909, 21;
	xor.b32  	%r2911, %r2910, %r2907;
	shf.l.wrap.b32 	%r2912, %r2911, %r2911, 30;
	ld.local.u32 	%r2913, [%rd5+8];
	and.b32  	%r2914, %r2913, %r2907;
	or.b32  	%r2915, %r2913, %r2907;
	ld.local.u32 	%r2916, [%rd5+12];
	and.b32  	%r2917, %r2916, %r2915;
	or.b32  	%r2918, %r2917, %r2914;
	add.s32 	%r2919, %r2912, %r2918;
	add.s32 	%r2920, %r2919, %r2904;
	add.s32 	%r2921, %r2790, %r2898;
	xor.b32  	%r2922, %r2899, %r2891;
	and.b32  	%r2923, %r2906, %r2922;
	xor.b32  	%r2924, %r2923, %r2899;
	add.s32 	%r2925, %r2921, %r2924;
	shf.l.wrap.b32 	%r2926, %r2906, %r2906, 18;
	xor.b32  	%r2927, %r2926, %r2906;
	shf.l.wrap.b32 	%r2928, %r2927, %r2927, 27;
	xor.b32  	%r2929, %r2928, %r2906;
	shf.l.wrap.b32 	%r2930, %r2929, %r2929, 26;
	add.s32 	%r2931, %r2925, %r2930;
	add.s32 	%r2932, %r2931, 1899447441;
	add.s32 	%r2933, %r2932, %r2916;
	shf.l.wrap.b32 	%r2934, %r2920, %r2920, 23;
	xor.b32  	%r2935, %r2934, %r2920;
	shf.l.wrap.b32 	%r2936, %r2935, %r2935, 21;
	xor.b32  	%r2937, %r2936, %r2920;
	shf.l.wrap.b32 	%r2938, %r2937, %r2937, 30;
	and.b32  	%r2939, %r2920, %r2907;
	or.b32  	%r2940, %r2920, %r2907;
	and.b32  	%r2941, %r2940, %r2913;
	or.b32  	%r2942, %r2941, %r2939;
	add.s32 	%r2943, %r2938, %r2942;
	add.s32 	%r2944, %r2943, %r2932;
	add.s32 	%r2945, %r2797, %r2899;
	xor.b32  	%r2946, %r2906, %r2891;
	and.b32  	%r2947, %r2933, %r2946;
	xor.b32  	%r2948, %r2947, %r2891;
	add.s32 	%r2949, %r2945, %r2948;
	shf.l.wrap.b32 	%r2950, %r2933, %r2933, 18;
	xor.b32  	%r2951, %r2950, %r2933;
	shf.l.wrap.b32 	%r2952, %r2951, %r2951, 27;
	xor.b32  	%r2953, %r2952, %r2933;
	shf.l.wrap.b32 	%r2954, %r2953, %r2953, 26;
	add.s32 	%r2955, %r2949, %r2954;
	add.s32 	%r2956, %r2955, -1245643825;
	add.s32 	%r2957, %r2956, %r2913;
	shf.l.wrap.b32 	%r2958, %r2944, %r2944, 23;
	xor.b32  	%r2959, %r2958, %r2944;
	shf.l.wrap.b32 	%r2960, %r2959, %r2959, 21;
	xor.b32  	%r2961, %r2960, %r2944;
	shf.l.wrap.b32 	%r2962, %r2961, %r2961, 30;
	and.b32  	%r2963, %r2944, %r2920;
	or.b32  	%r2964, %r2944, %r2920;
	and.b32  	%r2965, %r2964, %r2907;
	or.b32  	%r2966, %r2965, %r2963;
	add.s32 	%r2967, %r2962, %r2966;
	add.s32 	%r2968, %r2967, %r2956;
	add.s32 	%r2969, %r2804, %r2891;
	xor.b32  	%r2970, %r2933, %r2906;
	and.b32  	%r2971, %r2957, %r2970;
	xor.b32  	%r2972, %r2971, %r2906;
	add.s32 	%r2973, %r2969, %r2972;
	shf.l.wrap.b32 	%r2974, %r2957, %r2957, 18;
	xor.b32  	%r2975, %r2974, %r2957;
	shf.l.wrap.b32 	%r2976, %r2975, %r2975, 27;
	xor.b32  	%r2977, %r2976, %r2957;
	shf.l.wrap.b32 	%r2978, %r2977, %r2977, 26;
	add.s32 	%r2979, %r2973, %r2978;
	add.s32 	%r2980, %r2979, -373957723;
	add.s32 	%r2981, %r2980, %r2907;
	shf.l.wrap.b32 	%r2982, %r2968, %r2968, 23;
	xor.b32  	%r2983, %r2982, %r2968;
	shf.l.wrap.b32 	%r2984, %r2983, %r2983, 21;
	xor.b32  	%r2985, %r2984, %r2968;
	shf.l.wrap.b32 	%r2986, %r2985, %r2985, 30;
	and.b32  	%r2987, %r2968, %r2944;
	or.b32  	%r2988, %r2968, %r2944;
	and.b32  	%r2989, %r2988, %r2920;
	or.b32  	%r2990, %r2989, %r2987;
	add.s32 	%r2991, %r2986, %r2990;
	add.s32 	%r2992, %r2991, %r2980;
	add.s32 	%r2993, %r2811, %r2906;
	xor.b32  	%r2994, %r2957, %r2933;
	and.b32  	%r2995, %r2981, %r2994;
	xor.b32  	%r2996, %r2995, %r2933;
	add.s32 	%r2997, %r2993, %r2996;
	shf.l.wrap.b32 	%r2998, %r2981, %r2981, 18;
	xor.b32  	%r2999, %r2998, %r2981;
	shf.l.wrap.b32 	%r3000, %r2999, %r2999, 27;
	xor.b32  	%r3001, %r3000, %r2981;
	shf.l.wrap.b32 	%r3002, %r3001, %r3001, 26;
	add.s32 	%r3003, %r2997, %r3002;
	add.s32 	%r3004, %r3003, 961987163;
	add.s32 	%r3005, %r3004, %r2920;
	shf.l.wrap.b32 	%r3006, %r2992, %r2992, 23;
	xor.b32  	%r3007, %r3006, %r2992;
	shf.l.wrap.b32 	%r3008, %r3007, %r3007, 21;
	xor.b32  	%r3009, %r3008, %r2992;
	shf.l.wrap.b32 	%r3010, %r3009, %r3009, 30;
	and.b32  	%r3011, %r2992, %r2968;
	or.b32  	%r3012, %r2992, %r2968;
	and.b32  	%r3013, %r3012, %r2944;
	or.b32  	%r3014, %r3013, %r3011;
	add.s32 	%r3015, %r3010, %r3014;
	add.s32 	%r3016, %r3015, %r3004;
	add.s32 	%r3017, %r2818, %r2933;
	xor.b32  	%r3018, %r2981, %r2957;
	and.b32  	%r3019, %r3005, %r3018;
	xor.b32  	%r3020, %r3019, %r2957;
	add.s32 	%r3021, %r3017, %r3020;
	shf.l.wrap.b32 	%r3022, %r3005, %r3005, 18;
	xor.b32  	%r3023, %r3022, %r3005;
	shf.l.wrap.b32 	%r3024, %r3023, %r3023, 27;
	xor.b32  	%r3025, %r3024, %r3005;
	shf.l.wrap.b32 	%r3026, %r3025, %r3025, 26;
	add.s32 	%r3027, %r3021, %r3026;
	add.s32 	%r3028, %r3027, 1508970993;
	add.s32 	%r3029, %r3028, %r2944;
	shf.l.wrap.b32 	%r3030, %r3016, %r3016, 23;
	xor.b32  	%r3031, %r3030, %r3016;
	shf.l.wrap.b32 	%r3032, %r3031, %r3031, 21;
	xor.b32  	%r3033, %r3032, %r3016;
	shf.l.wrap.b32 	%r3034, %r3033, %r3033, 30;
	and.b32  	%r3035, %r3016, %r2992;
	or.b32  	%r3036, %r3016, %r2992;
	and.b32  	%r3037, %r3036, %r2968;
	or.b32  	%r3038, %r3037, %r3035;
	add.s32 	%r3039, %r3034, %r3038;
	add.s32 	%r3040, %r3039, %r3028;
	add.s32 	%r3041, %r2825, %r2957;
	xor.b32  	%r3042, %r3005, %r2981;
	and.b32  	%r3043, %r3029, %r3042;
	xor.b32  	%r3044, %r3043, %r2981;
	add.s32 	%r3045, %r3041, %r3044;
	shf.l.wrap.b32 	%r3046, %r3029, %r3029, 18;
	xor.b32  	%r3047, %r3046, %r3029;
	shf.l.wrap.b32 	%r3048, %r3047, %r3047, 27;
	xor.b32  	%r3049, %r3048, %r3029;
	shf.l.wrap.b32 	%r3050, %r3049, %r3049, 26;
	add.s32 	%r3051, %r3045, %r3050;
	add.s32 	%r3052, %r3051, -1841331548;
	add.s32 	%r3053, %r3052, %r2968;
	shf.l.wrap.b32 	%r3054, %r3040, %r3040, 23;
	xor.b32  	%r3055, %r3054, %r3040;
	shf.l.wrap.b32 	%r3056, %r3055, %r3055, 21;
	xor.b32  	%r3057, %r3056, %r3040;
	shf.l.wrap.b32 	%r3058, %r3057, %r3057, 30;
	and.b32  	%r3059, %r3040, %r3016;
	or.b32  	%r3060, %r3040, %r3016;
	and.b32  	%r3061, %r3060, %r2992;
	or.b32  	%r3062, %r3061, %r3059;
	add.s32 	%r3063, %r3058, %r3062;
	add.s32 	%r3064, %r3063, %r3052;
	add.s32 	%r3065, %r2832, %r2981;
	xor.b32  	%r3066, %r3029, %r3005;
	and.b32  	%r3067, %r3053, %r3066;
	xor.b32  	%r3068, %r3067, %r3005;
	add.s32 	%r3069, %r3065, %r3068;
	shf.l.wrap.b32 	%r3070, %r3053, %r3053, 18;
	xor.b32  	%r3071, %r3070, %r3053;
	shf.l.wrap.b32 	%r3072, %r3071, %r3071, 27;
	xor.b32  	%r3073, %r3072, %r3053;
	shf.l.wrap.b32 	%r3074, %r3073, %r3073, 26;
	add.s32 	%r3075, %r3069, %r3074;
	add.s32 	%r3076, %r3075, -1424204075;
	add.s32 	%r3077, %r3076, %r2992;
	shf.l.wrap.b32 	%r3078, %r3064, %r3064, 23;
	xor.b32  	%r3079, %r3078, %r3064;
	shf.l.wrap.b32 	%r3080, %r3079, %r3079, 21;
	xor.b32  	%r3081, %r3080, %r3064;
	shf.l.wrap.b32 	%r3082, %r3081, %r3081, 30;
	and.b32  	%r3083, %r3064, %r3040;
	or.b32  	%r3084, %r3064, %r3040;
	and.b32  	%r3085, %r3084, %r3016;
	or.b32  	%r3086, %r3085, %r3083;
	add.s32 	%r3087, %r3082, %r3086;
	add.s32 	%r3088, %r3087, %r3076;
	add.s32 	%r3089, %r2839, %r3005;
	xor.b32  	%r3090, %r3053, %r3029;
	and.b32  	%r3091, %r3077, %r3090;
	xor.b32  	%r3092, %r3091, %r3029;
	add.s32 	%r3093, %r3089, %r3092;
	shf.l.wrap.b32 	%r3094, %r3077, %r3077, 18;
	xor.b32  	%r3095, %r3094, %r3077;
	shf.l.wrap.b32 	%r3096, %r3095, %r3095, 27;
	xor.b32  	%r3097, %r3096, %r3077;
	shf.l.wrap.b32 	%r3098, %r3097, %r3097, 26;
	add.s32 	%r3099, %r3093, %r3098;
	add.s32 	%r3100, %r3099, -670586216;
	add.s32 	%r3101, %r3100, %r3016;
	shf.l.wrap.b32 	%r3102, %r3088, %r3088, 23;
	xor.b32  	%r3103, %r3102, %r3088;
	shf.l.wrap.b32 	%r3104, %r3103, %r3103, 21;
	xor.b32  	%r3105, %r3104, %r3088;
	shf.l.wrap.b32 	%r3106, %r3105, %r3105, 30;
	and.b32  	%r3107, %r3088, %r3064;
	or.b32  	%r3108, %r3088, %r3064;
	and.b32  	%r3109, %r3108, %r3040;
	or.b32  	%r3110, %r3109, %r3107;
	add.s32 	%r3111, %r3106, %r3110;
	add.s32 	%r3112, %r3111, %r3100;
	add.s32 	%r3113, %r2846, %r3029;
	xor.b32  	%r3114, %r3077, %r3053;
	and.b32  	%r3115, %r3101, %r3114;
	xor.b32  	%r3116, %r3115, %r3053;
	add.s32 	%r3117, %r3113, %r3116;
	shf.l.wrap.b32 	%r3118, %r3101, %r3101, 18;
	xor.b32  	%r3119, %r3118, %r3101;
	shf.l.wrap.b32 	%r3120, %r3119, %r3119, 27;
	xor.b32  	%r3121, %r3120, %r3101;
	shf.l.wrap.b32 	%r3122, %r3121, %r3121, 26;
	add.s32 	%r3123, %r3117, %r3122;
	add.s32 	%r3124, %r3123, 310598401;
	add.s32 	%r3125, %r3124, %r3040;
	shf.l.wrap.b32 	%r3126, %r3112, %r3112, 23;
	xor.b32  	%r3127, %r3126, %r3112;
	shf.l.wrap.b32 	%r3128, %r3127, %r3127, 21;
	xor.b32  	%r3129, %r3128, %r3112;
	shf.l.wrap.b32 	%r3130, %r3129, %r3129, 30;
	and.b32  	%r3131, %r3112, %r3088;
	or.b32  	%r3132, %r3112, %r3088;
	and.b32  	%r3133, %r3132, %r3064;
	or.b32  	%r3134, %r3133, %r3131;
	add.s32 	%r3135, %r3130, %r3134;
	add.s32 	%r3136, %r3135, %r3124;
	add.s32 	%r3137, %r2853, %r3053;
	xor.b32  	%r3138, %r3101, %r3077;
	and.b32  	%r3139, %r3125, %r3138;
	xor.b32  	%r3140, %r3139, %r3077;
	add.s32 	%r3141, %r3137, %r3140;
	shf.l.wrap.b32 	%r3142, %r3125, %r3125, 18;
	xor.b32  	%r3143, %r3142, %r3125;
	shf.l.wrap.b32 	%r3144, %r3143, %r3143, 27;
	xor.b32  	%r3145, %r3144, %r3125;
	shf.l.wrap.b32 	%r3146, %r3145, %r3145, 26;
	add.s32 	%r3147, %r3141, %r3146;
	add.s32 	%r3148, %r3147, 607225278;
	add.s32 	%r3149, %r3148, %r3064;
	shf.l.wrap.b32 	%r3150, %r3136, %r3136, 23;
	xor.b32  	%r3151, %r3150, %r3136;
	shf.l.wrap.b32 	%r3152, %r3151, %r3151, 21;
	xor.b32  	%r3153, %r3152, %r3136;
	shf.l.wrap.b32 	%r3154, %r3153, %r3153, 30;
	and.b32  	%r3155, %r3136, %r3112;
	or.b32  	%r3156, %r3136, %r3112;
	and.b32  	%r3157, %r3156, %r3088;
	or.b32  	%r3158, %r3157, %r3155;
	add.s32 	%r3159, %r3154, %r3158;
	add.s32 	%r3160, %r3159, %r3148;
	add.s32 	%r3161, %r2860, %r3077;
	xor.b32  	%r3162, %r3125, %r3101;
	and.b32  	%r3163, %r3149, %r3162;
	xor.b32  	%r3164, %r3163, %r3101;
	add.s32 	%r3165, %r3161, %r3164;
	shf.l.wrap.b32 	%r3166, %r3149, %r3149, 18;
	xor.b32  	%r3167, %r3166, %r3149;
	shf.l.wrap.b32 	%r3168, %r3167, %r3167, 27;
	xor.b32  	%r3169, %r3168, %r3149;
	shf.l.wrap.b32 	%r3170, %r3169, %r3169, 26;
	add.s32 	%r3171, %r3165, %r3170;
	add.s32 	%r3172, %r3171, 1426881987;
	add.s32 	%r3173, %r3172, %r3088;
	shf.l.wrap.b32 	%r3174, %r3160, %r3160, 23;
	xor.b32  	%r3175, %r3174, %r3160;
	shf.l.wrap.b32 	%r3176, %r3175, %r3175, 21;
	xor.b32  	%r3177, %r3176, %r3160;
	shf.l.wrap.b32 	%r3178, %r3177, %r3177, 30;
	and.b32  	%r3179, %r3160, %r3136;
	or.b32  	%r3180, %r3160, %r3136;
	and.b32  	%r3181, %r3180, %r3112;
	or.b32  	%r3182, %r3181, %r3179;
	add.s32 	%r3183, %r3178, %r3182;
	add.s32 	%r3184, %r3183, %r3172;
	add.s32 	%r3185, %r2867, %r3101;
	xor.b32  	%r3186, %r3149, %r3125;
	and.b32  	%r3187, %r3173, %r3186;
	xor.b32  	%r3188, %r3187, %r3125;
	add.s32 	%r3189, %r3185, %r3188;
	shf.l.wrap.b32 	%r3190, %r3173, %r3173, 18;
	xor.b32  	%r3191, %r3190, %r3173;
	shf.l.wrap.b32 	%r3192, %r3191, %r3191, 27;
	xor.b32  	%r3193, %r3192, %r3173;
	shf.l.wrap.b32 	%r3194, %r3193, %r3193, 26;
	add.s32 	%r3195, %r3189, %r3194;
	add.s32 	%r3196, %r3195, 1925078388;
	add.s32 	%r3197, %r3196, %r3112;
	shf.l.wrap.b32 	%r3198, %r3184, %r3184, 23;
	xor.b32  	%r3199, %r3198, %r3184;
	shf.l.wrap.b32 	%r3200, %r3199, %r3199, 21;
	xor.b32  	%r3201, %r3200, %r3184;
	shf.l.wrap.b32 	%r3202, %r3201, %r3201, 30;
	and.b32  	%r3203, %r3184, %r3160;
	or.b32  	%r3204, %r3184, %r3160;
	and.b32  	%r3205, %r3204, %r3136;
	or.b32  	%r3206, %r3205, %r3203;
	add.s32 	%r3207, %r3202, %r3206;
	add.s32 	%r3208, %r3207, %r3196;
	add.s32 	%r3209, %r2874, %r3125;
	xor.b32  	%r3210, %r3173, %r3149;
	and.b32  	%r3211, %r3197, %r3210;
	xor.b32  	%r3212, %r3211, %r3149;
	add.s32 	%r3213, %r3209, %r3212;
	shf.l.wrap.b32 	%r3214, %r3197, %r3197, 18;
	xor.b32  	%r3215, %r3214, %r3197;
	shf.l.wrap.b32 	%r3216, %r3215, %r3215, 27;
	xor.b32  	%r3217, %r3216, %r3197;
	shf.l.wrap.b32 	%r3218, %r3217, %r3217, 26;
	add.s32 	%r3219, %r3213, %r3218;
	add.s32 	%r3220, %r3219, -2132889090;
	add.s32 	%r3221, %r3220, %r3136;
	shf.l.wrap.b32 	%r3222, %r3208, %r3208, 23;
	xor.b32  	%r3223, %r3222, %r3208;
	shf.l.wrap.b32 	%r3224, %r3223, %r3223, 21;
	xor.b32  	%r3225, %r3224, %r3208;
	shf.l.wrap.b32 	%r3226, %r3225, %r3225, 30;
	and.b32  	%r3227, %r3208, %r3184;
	or.b32  	%r3228, %r3208, %r3184;
	and.b32  	%r3229, %r3228, %r3160;
	or.b32  	%r3230, %r3229, %r3227;
	add.s32 	%r3231, %r3226, %r3230;
	add.s32 	%r3232, %r3231, %r3220;
	add.s32 	%r3233, %r2881, %r3149;
	xor.b32  	%r3234, %r3197, %r3173;
	and.b32  	%r3235, %r3221, %r3234;
	xor.b32  	%r3236, %r3235, %r3173;
	add.s32 	%r3237, %r3233, %r3236;
	shf.l.wrap.b32 	%r3238, %r3221, %r3221, 18;
	xor.b32  	%r3239, %r3238, %r3221;
	shf.l.wrap.b32 	%r3240, %r3239, %r3239, 27;
	xor.b32  	%r3241, %r3240, %r3221;
	shf.l.wrap.b32 	%r3242, %r3241, %r3241, 26;
	add.s32 	%r3243, %r3237, %r3242;
	add.s32 	%r3244, %r3243, -1680079193;
	add.s32 	%r3245, %r3244, %r3160;
	shf.l.wrap.b32 	%r3246, %r3232, %r3232, 23;
	xor.b32  	%r3247, %r3246, %r3232;
	shf.l.wrap.b32 	%r3248, %r3247, %r3247, 21;
	xor.b32  	%r3249, %r3248, %r3232;
	shf.l.wrap.b32 	%r3250, %r3249, %r3249, 30;
	and.b32  	%r3251, %r3232, %r3208;
	or.b32  	%r3252, %r3232, %r3208;
	and.b32  	%r3253, %r3252, %r3184;
	or.b32  	%r3254, %r3253, %r3251;
	add.s32 	%r3255, %r3250, %r3254;
	add.s32 	%r3256, %r3255, %r3244;
	add.s32 	%r3257, %r2888, %r3173;
	xor.b32  	%r3258, %r3221, %r3197;
	and.b32  	%r3259, %r3245, %r3258;
	xor.b32  	%r3260, %r3259, %r3197;
	add.s32 	%r3261, %r3257, %r3260;
	shf.l.wrap.b32 	%r3262, %r3245, %r3245, 18;
	xor.b32  	%r3263, %r3262, %r3245;
	shf.l.wrap.b32 	%r3264, %r3263, %r3263, 27;
	xor.b32  	%r3265, %r3264, %r3245;
	shf.l.wrap.b32 	%r3266, %r3265, %r3265, 26;
	add.s32 	%r3267, %r3261, %r3266;
	add.s32 	%r3268, %r3267, -1046744716;
	add.s32 	%r3269, %r3268, %r3184;
	shf.l.wrap.b32 	%r3270, %r3256, %r3256, 23;
	xor.b32  	%r3271, %r3270, %r3256;
	shf.l.wrap.b32 	%r3272, %r3271, %r3271, 21;
	xor.b32  	%r3273, %r3272, %r3256;
	shf.l.wrap.b32 	%r3274, %r3273, %r3273, 30;
	and.b32  	%r3275, %r3256, %r3232;
	or.b32  	%r3276, %r3256, %r3232;
	and.b32  	%r3277, %r3276, %r3208;
	or.b32  	%r3278, %r3277, %r3275;
	add.s32 	%r3279, %r3274, %r3278;
	add.s32 	%r3280, %r3279, %r3268;
	shf.l.wrap.b32 	%r3281, %r2881, %r2881, 15;
	shf.l.wrap.b32 	%r3282, %r2881, %r2881, 13;
	xor.b32  	%r3283, %r3281, %r3282;
	shr.u32 	%r3284, %r2881, 10;
	xor.b32  	%r3285, %r3283, %r3284;
	shf.l.wrap.b32 	%r3286, %r2790, %r2790, 25;
	shf.l.wrap.b32 	%r3287, %r2790, %r2790, 14;
	xor.b32  	%r3288, %r3286, %r3287;
	shr.u32 	%r3289, %r2790, 3;
	xor.b32  	%r3290, %r3288, %r3289;
	add.s32 	%r3291, %r3290, %r2783;
	add.s32 	%r3292, %r3291, %r2846;
	add.s32 	%r3293, %r3292, %r3285;
	add.s32 	%r3294, %r3293, %r3197;
	xor.b32  	%r3295, %r3245, %r3221;
	and.b32  	%r3296, %r3269, %r3295;
	xor.b32  	%r3297, %r3296, %r3221;
	add.s32 	%r3298, %r3294, %r3297;
	shf.l.wrap.b32 	%r3299, %r3269, %r3269, 18;
	xor.b32  	%r3300, %r3299, %r3269;
	shf.l.wrap.b32 	%r3301, %r3300, %r3300, 27;
	xor.b32  	%r3302, %r3301, %r3269;
	shf.l.wrap.b32 	%r3303, %r3302, %r3302, 26;
	add.s32 	%r3304, %r3298, %r3303;
	add.s32 	%r3305, %r3304, -459576895;
	add.s32 	%r3306, %r3305, %r3208;
	shf.l.wrap.b32 	%r3307, %r3280, %r3280, 23;
	xor.b32  	%r3308, %r3307, %r3280;
	shf.l.wrap.b32 	%r3309, %r3308, %r3308, 21;
	xor.b32  	%r3310, %r3309, %r3280;
	shf.l.wrap.b32 	%r3311, %r3310, %r3310, 30;
	and.b32  	%r3312, %r3280, %r3256;
	or.b32  	%r3313, %r3280, %r3256;
	and.b32  	%r3314, %r3313, %r3232;
	or.b32  	%r3315, %r3314, %r3312;
	add.s32 	%r3316, %r3311, %r3315;
	add.s32 	%r3317, %r3316, %r3305;
	shf.l.wrap.b32 	%r3318, %r2888, %r2888, 15;
	shf.l.wrap.b32 	%r3319, %r2888, %r2888, 13;
	xor.b32  	%r3320, %r3318, %r3319;
	shr.u32 	%r3321, %r2888, 10;
	xor.b32  	%r3322, %r3320, %r3321;
	shf.l.wrap.b32 	%r3323, %r2797, %r2797, 25;
	shf.l.wrap.b32 	%r3324, %r2797, %r2797, 14;
	xor.b32  	%r3325, %r3323, %r3324;
	shr.u32 	%r3326, %r2797, 3;
	xor.b32  	%r3327, %r3325, %r3326;
	add.s32 	%r3328, %r3327, %r2790;
	add.s32 	%r3329, %r3328, %r2853;
	add.s32 	%r3330, %r3329, %r3322;
	add.s32 	%r3331, %r3330, %r3221;
	xor.b32  	%r3332, %r3269, %r3245;
	and.b32  	%r3333, %r3306, %r3332;
	xor.b32  	%r3334, %r3333, %r3245;
	add.s32 	%r3335, %r3331, %r3334;
	shf.l.wrap.b32 	%r3336, %r3306, %r3306, 18;
	xor.b32  	%r3337, %r3336, %r3306;
	shf.l.wrap.b32 	%r3338, %r3337, %r3337, 27;
	xor.b32  	%r3339, %r3338, %r3306;
	shf.l.wrap.b32 	%r3340, %r3339, %r3339, 26;
	add.s32 	%r3341, %r3335, %r3340;
	add.s32 	%r3342, %r3341, -272742522;
	add.s32 	%r3343, %r3342, %r3232;
	shf.l.wrap.b32 	%r3344, %r3317, %r3317, 23;
	xor.b32  	%r3345, %r3344, %r3317;
	shf.l.wrap.b32 	%r3346, %r3345, %r3345, 21;
	xor.b32  	%r3347, %r3346, %r3317;
	shf.l.wrap.b32 	%r3348, %r3347, %r3347, 30;
	and.b32  	%r3349, %r3317, %r3280;
	or.b32  	%r3350, %r3317, %r3280;
	and.b32  	%r3351, %r3350, %r3256;
	or.b32  	%r3352, %r3351, %r3349;
	add.s32 	%r3353, %r3348, %r3352;
	add.s32 	%r3354, %r3353, %r3342;
	shf.l.wrap.b32 	%r3355, %r3293, %r3293, 15;
	shf.l.wrap.b32 	%r3356, %r3293, %r3293, 13;
	xor.b32  	%r3357, %r3355, %r3356;
	shr.u32 	%r3358, %r3293, 10;
	xor.b32  	%r3359, %r3357, %r3358;
	shf.l.wrap.b32 	%r3360, %r2804, %r2804, 25;
	shf.l.wrap.b32 	%r3361, %r2804, %r2804, 14;
	xor.b32  	%r3362, %r3360, %r3361;
	shr.u32 	%r3363, %r2804, 3;
	xor.b32  	%r3364, %r3362, %r3363;
	add.s32 	%r3365, %r3364, %r2797;
	add.s32 	%r3366, %r3365, %r2860;
	add.s32 	%r3367, %r3366, %r3359;
	add.s32 	%r3368, %r3367, %r3245;
	xor.b32  	%r3369, %r3306, %r3269;
	and.b32  	%r3370, %r3343, %r3369;
	xor.b32  	%r3371, %r3370, %r3269;
	add.s32 	%r3372, %r3368, %r3371;
	shf.l.wrap.b32 	%r3373, %r3343, %r3343, 18;
	xor.b32  	%r3374, %r3373, %r3343;
	shf.l.wrap.b32 	%r3375, %r3374, %r3374, 27;
	xor.b32  	%r3376, %r3375, %r3343;
	shf.l.wrap.b32 	%r3377, %r3376, %r3376, 26;
	add.s32 	%r3378, %r3372, %r3377;
	add.s32 	%r3379, %r3378, 264347078;
	add.s32 	%r3380, %r3379, %r3256;
	shf.l.wrap.b32 	%r3381, %r3354, %r3354, 23;
	xor.b32  	%r3382, %r3381, %r3354;
	shf.l.wrap.b32 	%r3383, %r3382, %r3382, 21;
	xor.b32  	%r3384, %r3383, %r3354;
	shf.l.wrap.b32 	%r3385, %r3384, %r3384, 30;
	and.b32  	%r3386, %r3354, %r3317;
	or.b32  	%r3387, %r3354, %r3317;
	and.b32  	%r3388, %r3387, %r3280;
	or.b32  	%r3389, %r3388, %r3386;
	add.s32 	%r3390, %r3385, %r3389;
	add.s32 	%r3391, %r3390, %r3379;
	shf.l.wrap.b32 	%r3392, %r3330, %r3330, 15;
	shf.l.wrap.b32 	%r3393, %r3330, %r3330, 13;
	xor.b32  	%r3394, %r3392, %r3393;
	shr.u32 	%r3395, %r3330, 10;
	xor.b32  	%r3396, %r3394, %r3395;
	shf.l.wrap.b32 	%r3397, %r2811, %r2811, 25;
	shf.l.wrap.b32 	%r3398, %r2811, %r2811, 14;
	xor.b32  	%r3399, %r3397, %r3398;
	shr.u32 	%r3400, %r2811, 3;
	xor.b32  	%r3401, %r3399, %r3400;
	add.s32 	%r3402, %r3401, %r2804;
	add.s32 	%r3403, %r3402, %r2867;
	add.s32 	%r3404, %r3403, %r3396;
	add.s32 	%r3405, %r3404, %r3269;
	xor.b32  	%r3406, %r3343, %r3306;
	and.b32  	%r3407, %r3380, %r3406;
	xor.b32  	%r3408, %r3407, %r3306;
	add.s32 	%r3409, %r3405, %r3408;
	shf.l.wrap.b32 	%r3410, %r3380, %r3380, 18;
	xor.b32  	%r3411, %r3410, %r3380;
	shf.l.wrap.b32 	%r3412, %r3411, %r3411, 27;
	xor.b32  	%r3413, %r3412, %r3380;
	shf.l.wrap.b32 	%r3414, %r3413, %r3413, 26;
	add.s32 	%r3415, %r3409, %r3414;
	add.s32 	%r3416, %r3415, 604807628;
	add.s32 	%r3417, %r3416, %r3280;
	shf.l.wrap.b32 	%r3418, %r3391, %r3391, 23;
	xor.b32  	%r3419, %r3418, %r3391;
	shf.l.wrap.b32 	%r3420, %r3419, %r3419, 21;
	xor.b32  	%r3421, %r3420, %r3391;
	shf.l.wrap.b32 	%r3422, %r3421, %r3421, 30;
	and.b32  	%r3423, %r3391, %r3354;
	or.b32  	%r3424, %r3391, %r3354;
	and.b32  	%r3425, %r3424, %r3317;
	or.b32  	%r3426, %r3425, %r3423;
	add.s32 	%r3427, %r3422, %r3426;
	add.s32 	%r3428, %r3427, %r3416;
	shf.l.wrap.b32 	%r3429, %r3367, %r3367, 15;
	shf.l.wrap.b32 	%r3430, %r3367, %r3367, 13;
	xor.b32  	%r3431, %r3429, %r3430;
	shr.u32 	%r3432, %r3367, 10;
	xor.b32  	%r3433, %r3431, %r3432;
	shf.l.wrap.b32 	%r3434, %r2818, %r2818, 25;
	shf.l.wrap.b32 	%r3435, %r2818, %r2818, 14;
	xor.b32  	%r3436, %r3434, %r3435;
	shr.u32 	%r3437, %r2818, 3;
	xor.b32  	%r3438, %r3436, %r3437;
	add.s32 	%r3439, %r3438, %r2811;
	add.s32 	%r3440, %r3439, %r2874;
	add.s32 	%r3441, %r3440, %r3433;
	add.s32 	%r3442, %r3441, %r3306;
	xor.b32  	%r3443, %r3380, %r3343;
	and.b32  	%r3444, %r3417, %r3443;
	xor.b32  	%r3445, %r3444, %r3343;
	add.s32 	%r3446, %r3442, %r3445;
	shf.l.wrap.b32 	%r3447, %r3417, %r3417, 18;
	xor.b32  	%r3448, %r3447, %r3417;
	shf.l.wrap.b32 	%r3449, %r3448, %r3448, 27;
	xor.b32  	%r3450, %r3449, %r3417;
	shf.l.wrap.b32 	%r3451, %r3450, %r3450, 26;
	add.s32 	%r3452, %r3446, %r3451;
	add.s32 	%r3453, %r3452, 770255983;
	add.s32 	%r3454, %r3453, %r3317;
	shf.l.wrap.b32 	%r3455, %r3428, %r3428, 23;
	xor.b32  	%r3456, %r3455, %r3428;
	shf.l.wrap.b32 	%r3457, %r3456, %r3456, 21;
	xor.b32  	%r3458, %r3457, %r3428;
	shf.l.wrap.b32 	%r3459, %r3458, %r3458, 30;
	and.b32  	%r3460, %r3428, %r3391;
	or.b32  	%r3461, %r3428, %r3391;
	and.b32  	%r3462, %r3461, %r3354;
	or.b32  	%r3463, %r3462, %r3460;
	add.s32 	%r3464, %r3459, %r3463;
	add.s32 	%r3465, %r3464, %r3453;
	shf.l.wrap.b32 	%r3466, %r3404, %r3404, 15;
	shf.l.wrap.b32 	%r3467, %r3404, %r3404, 13;
	xor.b32  	%r3468, %r3466, %r3467;
	shr.u32 	%r3469, %r3404, 10;
	xor.b32  	%r3470, %r3468, %r3469;
	shf.l.wrap.b32 	%r3471, %r2825, %r2825, 25;
	shf.l.wrap.b32 	%r3472, %r2825, %r2825, 14;
	xor.b32  	%r3473, %r3471, %r3472;
	shr.u32 	%r3474, %r2825, 3;
	xor.b32  	%r3475, %r3473, %r3474;
	add.s32 	%r3476, %r3475, %r2818;
	add.s32 	%r3477, %r3476, %r2881;
	add.s32 	%r3478, %r3477, %r3470;
	add.s32 	%r3479, %r3478, %r3343;
	xor.b32  	%r3480, %r3417, %r3380;
	and.b32  	%r3481, %r3454, %r3480;
	xor.b32  	%r3482, %r3481, %r3380;
	add.s32 	%r3483, %r3479, %r3482;
	shf.l.wrap.b32 	%r3484, %r3454, %r3454, 18;
	xor.b32  	%r3485, %r3484, %r3454;
	shf.l.wrap.b32 	%r3486, %r3485, %r3485, 27;
	xor.b32  	%r3487, %r3486, %r3454;
	shf.l.wrap.b32 	%r3488, %r3487, %r3487, 26;
	add.s32 	%r3489, %r3483, %r3488;
	add.s32 	%r3490, %r3489, 1249150122;
	add.s32 	%r3491, %r3490, %r3354;
	shf.l.wrap.b32 	%r3492, %r3465, %r3465, 23;
	xor.b32  	%r3493, %r3492, %r3465;
	shf.l.wrap.b32 	%r3494, %r3493, %r3493, 21;
	xor.b32  	%r3495, %r3494, %r3465;
	shf.l.wrap.b32 	%r3496, %r3495, %r3495, 30;
	and.b32  	%r3497, %r3465, %r3428;
	or.b32  	%r3498, %r3465, %r3428;
	and.b32  	%r3499, %r3498, %r3391;
	or.b32  	%r3500, %r3499, %r3497;
	add.s32 	%r3501, %r3496, %r3500;
	add.s32 	%r3502, %r3501, %r3490;
	shf.l.wrap.b32 	%r3503, %r3441, %r3441, 15;
	shf.l.wrap.b32 	%r3504, %r3441, %r3441, 13;
	xor.b32  	%r3505, %r3503, %r3504;
	shr.u32 	%r3506, %r3441, 10;
	xor.b32  	%r3507, %r3505, %r3506;
	shf.l.wrap.b32 	%r3508, %r2832, %r2832, 25;
	shf.l.wrap.b32 	%r3509, %r2832, %r2832, 14;
	xor.b32  	%r3510, %r3508, %r3509;
	shr.u32 	%r3511, %r2832, 3;
	xor.b32  	%r3512, %r3510, %r3511;
	add.s32 	%r3513, %r3512, %r2825;
	add.s32 	%r3514, %r3513, %r2888;
	add.s32 	%r3515, %r3514, %r3507;
	add.s32 	%r3516, %r3515, %r3380;
	xor.b32  	%r3517, %r3454, %r3417;
	and.b32  	%r3518, %r3491, %r3517;
	xor.b32  	%r3519, %r3518, %r3417;
	add.s32 	%r3520, %r3516, %r3519;
	shf.l.wrap.b32 	%r3521, %r3491, %r3491, 18;
	xor.b32  	%r3522, %r3521, %r3491;
	shf.l.wrap.b32 	%r3523, %r3522, %r3522, 27;
	xor.b32  	%r3524, %r3523, %r3491;
	shf.l.wrap.b32 	%r3525, %r3524, %r3524, 26;
	add.s32 	%r3526, %r3520, %r3525;
	add.s32 	%r3527, %r3526, 1555081692;
	add.s32 	%r3528, %r3527, %r3391;
	shf.l.wrap.b32 	%r3529, %r3502, %r3502, 23;
	xor.b32  	%r3530, %r3529, %r3502;
	shf.l.wrap.b32 	%r3531, %r3530, %r3530, 21;
	xor.b32  	%r3532, %r3531, %r3502;
	shf.l.wrap.b32 	%r3533, %r3532, %r3532, 30;
	and.b32  	%r3534, %r3502, %r3465;
	or.b32  	%r3535, %r3502, %r3465;
	and.b32  	%r3536, %r3535, %r3428;
	or.b32  	%r3537, %r3536, %r3534;
	add.s32 	%r3538, %r3533, %r3537;
	add.s32 	%r3539, %r3538, %r3527;
	shf.l.wrap.b32 	%r3540, %r3478, %r3478, 15;
	shf.l.wrap.b32 	%r3541, %r3478, %r3478, 13;
	xor.b32  	%r3542, %r3540, %r3541;
	shr.u32 	%r3543, %r3478, 10;
	xor.b32  	%r3544, %r3542, %r3543;
	shf.l.wrap.b32 	%r3545, %r2839, %r2839, 25;
	shf.l.wrap.b32 	%r3546, %r2839, %r2839, 14;
	xor.b32  	%r3547, %r3545, %r3546;
	shr.u32 	%r3548, %r2839, 3;
	xor.b32  	%r3549, %r3547, %r3548;
	add.s32 	%r3550, %r3549, %r2832;
	add.s32 	%r3551, %r3550, %r3293;
	add.s32 	%r3552, %r3551, %r3544;
	add.s32 	%r3553, %r3552, %r3417;
	xor.b32  	%r3554, %r3491, %r3454;
	and.b32  	%r3555, %r3528, %r3554;
	xor.b32  	%r3556, %r3555, %r3454;
	add.s32 	%r3557, %r3553, %r3556;
	shf.l.wrap.b32 	%r3558, %r3528, %r3528, 18;
	xor.b32  	%r3559, %r3558, %r3528;
	shf.l.wrap.b32 	%r3560, %r3559, %r3559, 27;
	xor.b32  	%r3561, %r3560, %r3528;
	shf.l.wrap.b32 	%r3562, %r3561, %r3561, 26;
	add.s32 	%r3563, %r3557, %r3562;
	add.s32 	%r3564, %r3563, 1996064986;
	add.s32 	%r3565, %r3564, %r3428;
	shf.l.wrap.b32 	%r3566, %r3539, %r3539, 23;
	xor.b32  	%r3567, %r3566, %r3539;
	shf.l.wrap.b32 	%r3568, %r3567, %r3567, 21;
	xor.b32  	%r3569, %r3568, %r3539;
	shf.l.wrap.b32 	%r3570, %r3569, %r3569, 30;
	and.b32  	%r3571, %r3539, %r3502;
	or.b32  	%r3572, %r3539, %r3502;
	and.b32  	%r3573, %r3572, %r3465;
	or.b32  	%r3574, %r3573, %r3571;
	add.s32 	%r3575, %r3570, %r3574;
	add.s32 	%r3576, %r3575, %r3564;
	shf.l.wrap.b32 	%r3577, %r3515, %r3515, 15;
	shf.l.wrap.b32 	%r3578, %r3515, %r3515, 13;
	xor.b32  	%r3579, %r3577, %r3578;
	shr.u32 	%r3580, %r3515, 10;
	xor.b32  	%r3581, %r3579, %r3580;
	shf.l.wrap.b32 	%r3582, %r2846, %r2846, 25;
	shf.l.wrap.b32 	%r3583, %r2846, %r2846, 14;
	xor.b32  	%r3584, %r3582, %r3583;
	shr.u32 	%r3585, %r2846, 3;
	xor.b32  	%r3586, %r3584, %r3585;
	add.s32 	%r3587, %r3586, %r2839;
	add.s32 	%r3588, %r3587, %r3330;
	add.s32 	%r3589, %r3588, %r3581;
	add.s32 	%r3590, %r3589, %r3454;
	xor.b32  	%r3591, %r3528, %r3491;
	and.b32  	%r3592, %r3565, %r3591;
	xor.b32  	%r3593, %r3592, %r3491;
	add.s32 	%r3594, %r3590, %r3593;
	shf.l.wrap.b32 	%r3595, %r3565, %r3565, 18;
	xor.b32  	%r3596, %r3595, %r3565;
	shf.l.wrap.b32 	%r3597, %r3596, %r3596, 27;
	xor.b32  	%r3598, %r3597, %r3565;
	shf.l.wrap.b32 	%r3599, %r3598, %r3598, 26;
	add.s32 	%r3600, %r3594, %r3599;
	add.s32 	%r3601, %r3600, -1740746414;
	add.s32 	%r3602, %r3601, %r3465;
	shf.l.wrap.b32 	%r3603, %r3576, %r3576, 23;
	xor.b32  	%r3604, %r3603, %r3576;
	shf.l.wrap.b32 	%r3605, %r3604, %r3604, 21;
	xor.b32  	%r3606, %r3605, %r3576;
	shf.l.wrap.b32 	%r3607, %r3606, %r3606, 30;
	and.b32  	%r3608, %r3576, %r3539;
	or.b32  	%r3609, %r3576, %r3539;
	and.b32  	%r3610, %r3609, %r3502;
	or.b32  	%r3611, %r3610, %r3608;
	add.s32 	%r3612, %r3607, %r3611;
	add.s32 	%r3613, %r3612, %r3601;
	shf.l.wrap.b32 	%r3614, %r3552, %r3552, 15;
	shf.l.wrap.b32 	%r3615, %r3552, %r3552, 13;
	xor.b32  	%r3616, %r3614, %r3615;
	shr.u32 	%r3617, %r3552, 10;
	xor.b32  	%r3618, %r3616, %r3617;
	shf.l.wrap.b32 	%r3619, %r2853, %r2853, 25;
	shf.l.wrap.b32 	%r3620, %r2853, %r2853, 14;
	xor.b32  	%r3621, %r3619, %r3620;
	shr.u32 	%r3622, %r2853, 3;
	xor.b32  	%r3623, %r3621, %r3622;
	add.s32 	%r3624, %r3623, %r2846;
	add.s32 	%r3625, %r3624, %r3367;
	add.s32 	%r3626, %r3625, %r3618;
	add.s32 	%r3627, %r3626, %r3491;
	xor.b32  	%r3628, %r3565, %r3528;
	and.b32  	%r3629, %r3602, %r3628;
	xor.b32  	%r3630, %r3629, %r3528;
	add.s32 	%r3631, %r3627, %r3630;
	shf.l.wrap.b32 	%r3632, %r3602, %r3602, 18;
	xor.b32  	%r3633, %r3632, %r3602;
	shf.l.wrap.b32 	%r3634, %r3633, %r3633, 27;
	xor.b32  	%r3635, %r3634, %r3602;
	shf.l.wrap.b32 	%r3636, %r3635, %r3635, 26;
	add.s32 	%r3637, %r3631, %r3636;
	add.s32 	%r3638, %r3637, -1473132947;
	add.s32 	%r3639, %r3638, %r3502;
	shf.l.wrap.b32 	%r3640, %r3613, %r3613, 23;
	xor.b32  	%r3641, %r3640, %r3613;
	shf.l.wrap.b32 	%r3642, %r3641, %r3641, 21;
	xor.b32  	%r3643, %r3642, %r3613;
	shf.l.wrap.b32 	%r3644, %r3643, %r3643, 30;
	and.b32  	%r3645, %r3613, %r3576;
	or.b32  	%r3646, %r3613, %r3576;
	and.b32  	%r3647, %r3646, %r3539;
	or.b32  	%r3648, %r3647, %r3645;
	add.s32 	%r3649, %r3644, %r3648;
	add.s32 	%r3650, %r3649, %r3638;
	shf.l.wrap.b32 	%r3651, %r3589, %r3589, 15;
	shf.l.wrap.b32 	%r3652, %r3589, %r3589, 13;
	xor.b32  	%r3653, %r3651, %r3652;
	shr.u32 	%r3654, %r3589, 10;
	xor.b32  	%r3655, %r3653, %r3654;
	shf.l.wrap.b32 	%r3656, %r2860, %r2860, 25;
	shf.l.wrap.b32 	%r3657, %r2860, %r2860, 14;
	xor.b32  	%r3658, %r3656, %r3657;
	shr.u32 	%r3659, %r2860, 3;
	xor.b32  	%r3660, %r3658, %r3659;
	add.s32 	%r3661, %r3660, %r2853;
	add.s32 	%r3662, %r3661, %r3404;
	add.s32 	%r3663, %r3662, %r3655;
	add.s32 	%r3664, %r3663, %r3528;
	xor.b32  	%r3665, %r3602, %r3565;
	and.b32  	%r3666, %r3639, %r3665;
	xor.b32  	%r3667, %r3666, %r3565;
	add.s32 	%r3668, %r3664, %r3667;
	shf.l.wrap.b32 	%r3669, %r3639, %r3639, 18;
	xor.b32  	%r3670, %r3669, %r3639;
	shf.l.wrap.b32 	%r3671, %r3670, %r3670, 27;
	xor.b32  	%r3672, %r3671, %r3639;
	shf.l.wrap.b32 	%r3673, %r3672, %r3672, 26;
	add.s32 	%r3674, %r3668, %r3673;
	add.s32 	%r3675, %r3674, -1341970488;
	add.s32 	%r3676, %r3675, %r3539;
	shf.l.wrap.b32 	%r3677, %r3650, %r3650, 23;
	xor.b32  	%r3678, %r3677, %r3650;
	shf.l.wrap.b32 	%r3679, %r3678, %r3678, 21;
	xor.b32  	%r3680, %r3679, %r3650;
	shf.l.wrap.b32 	%r3681, %r3680, %r3680, 30;
	and.b32  	%r3682, %r3650, %r3613;
	or.b32  	%r3683, %r3650, %r3613;
	and.b32  	%r3684, %r3683, %r3576;
	or.b32  	%r3685, %r3684, %r3682;
	add.s32 	%r3686, %r3681, %r3685;
	add.s32 	%r3687, %r3686, %r3675;
	shf.l.wrap.b32 	%r3688, %r3626, %r3626, 15;
	shf.l.wrap.b32 	%r3689, %r3626, %r3626, 13;
	xor.b32  	%r3690, %r3688, %r3689;
	shr.u32 	%r3691, %r3626, 10;
	xor.b32  	%r3692, %r3690, %r3691;
	shf.l.wrap.b32 	%r3693, %r2867, %r2867, 25;
	shf.l.wrap.b32 	%r3694, %r2867, %r2867, 14;
	xor.b32  	%r3695, %r3693, %r3694;
	shr.u32 	%r3696, %r2867, 3;
	xor.b32  	%r3697, %r3695, %r3696;
	add.s32 	%r3698, %r3697, %r2860;
	add.s32 	%r3699, %r3698, %r3441;
	add.s32 	%r3700, %r3699, %r3692;
	add.s32 	%r3701, %r3700, %r3565;
	xor.b32  	%r3702, %r3639, %r3602;
	and.b32  	%r3703, %r3676, %r3702;
	xor.b32  	%r3704, %r3703, %r3602;
	add.s32 	%r3705, %r3701, %r3704;
	shf.l.wrap.b32 	%r3706, %r3676, %r3676, 18;
	xor.b32  	%r3707, %r3706, %r3676;
	shf.l.wrap.b32 	%r3708, %r3707, %r3707, 27;
	xor.b32  	%r3709, %r3708, %r3676;
	shf.l.wrap.b32 	%r3710, %r3709, %r3709, 26;
	add.s32 	%r3711, %r3705, %r3710;
	add.s32 	%r3712, %r3711, -1084653625;
	add.s32 	%r3713, %r3712, %r3576;
	shf.l.wrap.b32 	%r3714, %r3687, %r3687, 23;
	xor.b32  	%r3715, %r3714, %r3687;
	shf.l.wrap.b32 	%r3716, %r3715, %r3715, 21;
	xor.b32  	%r3717, %r3716, %r3687;
	shf.l.wrap.b32 	%r3718, %r3717, %r3717, 30;
	and.b32  	%r3719, %r3687, %r3650;
	or.b32  	%r3720, %r3687, %r3650;
	and.b32  	%r3721, %r3720, %r3613;
	or.b32  	%r3722, %r3721, %r3719;
	add.s32 	%r3723, %r3718, %r3722;
	add.s32 	%r3724, %r3723, %r3712;
	shf.l.wrap.b32 	%r3725, %r3663, %r3663, 15;
	shf.l.wrap.b32 	%r3726, %r3663, %r3663, 13;
	xor.b32  	%r3727, %r3725, %r3726;
	shr.u32 	%r3728, %r3663, 10;
	xor.b32  	%r3729, %r3727, %r3728;
	shf.l.wrap.b32 	%r3730, %r2874, %r2874, 25;
	shf.l.wrap.b32 	%r3731, %r2874, %r2874, 14;
	xor.b32  	%r3732, %r3730, %r3731;
	shr.u32 	%r3733, %r2874, 3;
	xor.b32  	%r3734, %r3732, %r3733;
	add.s32 	%r3735, %r3734, %r2867;
	add.s32 	%r3736, %r3735, %r3478;
	add.s32 	%r3737, %r3736, %r3729;
	add.s32 	%r3738, %r3737, %r3602;
	xor.b32  	%r3739, %r3676, %r3639;
	and.b32  	%r3740, %r3713, %r3739;
	xor.b32  	%r3741, %r3740, %r3639;
	add.s32 	%r3742, %r3738, %r3741;
	shf.l.wrap.b32 	%r3743, %r3713, %r3713, 18;
	xor.b32  	%r3744, %r3743, %r3713;
	shf.l.wrap.b32 	%r3745, %r3744, %r3744, 27;
	xor.b32  	%r3746, %r3745, %r3713;
	shf.l.wrap.b32 	%r3747, %r3746, %r3746, 26;
	add.s32 	%r3748, %r3742, %r3747;
	add.s32 	%r3749, %r3748, -958395405;
	add.s32 	%r3750, %r3749, %r3613;
	shf.l.wrap.b32 	%r3751, %r3724, %r3724, 23;
	xor.b32  	%r3752, %r3751, %r3724;
	shf.l.wrap.b32 	%r3753, %r3752, %r3752, 21;
	xor.b32  	%r3754, %r3753, %r3724;
	shf.l.wrap.b32 	%r3755, %r3754, %r3754, 30;
	and.b32  	%r3756, %r3724, %r3687;
	or.b32  	%r3757, %r3724, %r3687;
	and.b32  	%r3758, %r3757, %r3650;
	or.b32  	%r3759, %r3758, %r3756;
	add.s32 	%r3760, %r3755, %r3759;
	add.s32 	%r3761, %r3760, %r3749;
	shf.l.wrap.b32 	%r3762, %r3700, %r3700, 15;
	shf.l.wrap.b32 	%r3763, %r3700, %r3700, 13;
	xor.b32  	%r3764, %r3762, %r3763;
	shr.u32 	%r3765, %r3700, 10;
	xor.b32  	%r3766, %r3764, %r3765;
	shf.l.wrap.b32 	%r3767, %r2881, %r2881, 25;
	shf.l.wrap.b32 	%r3768, %r2881, %r2881, 14;
	xor.b32  	%r3769, %r3767, %r3768;
	shr.u32 	%r3770, %r2881, 3;
	xor.b32  	%r3771, %r3769, %r3770;
	add.s32 	%r3772, %r3771, %r2874;
	add.s32 	%r3773, %r3772, %r3515;
	add.s32 	%r3774, %r3773, %r3766;
	add.s32 	%r3775, %r3774, %r3639;
	xor.b32  	%r3776, %r3713, %r3676;
	and.b32  	%r3777, %r3750, %r3776;
	xor.b32  	%r3778, %r3777, %r3676;
	add.s32 	%r3779, %r3775, %r3778;
	shf.l.wrap.b32 	%r3780, %r3750, %r3750, 18;
	xor.b32  	%r3781, %r3780, %r3750;
	shf.l.wrap.b32 	%r3782, %r3781, %r3781, 27;
	xor.b32  	%r3783, %r3782, %r3750;
	shf.l.wrap.b32 	%r3784, %r3783, %r3783, 26;
	add.s32 	%r3785, %r3779, %r3784;
	add.s32 	%r3786, %r3785, -710438585;
	add.s32 	%r3787, %r3786, %r3650;
	shf.l.wrap.b32 	%r3788, %r3761, %r3761, 23;
	xor.b32  	%r3789, %r3788, %r3761;
	shf.l.wrap.b32 	%r3790, %r3789, %r3789, 21;
	xor.b32  	%r3791, %r3790, %r3761;
	shf.l.wrap.b32 	%r3792, %r3791, %r3791, 30;
	and.b32  	%r3793, %r3761, %r3724;
	or.b32  	%r3794, %r3761, %r3724;
	and.b32  	%r3795, %r3794, %r3687;
	or.b32  	%r3796, %r3795, %r3793;
	add.s32 	%r3797, %r3792, %r3796;
	add.s32 	%r3798, %r3797, %r3786;
	shf.l.wrap.b32 	%r3799, %r3737, %r3737, 15;
	shf.l.wrap.b32 	%r3800, %r3737, %r3737, 13;
	xor.b32  	%r3801, %r3799, %r3800;
	shr.u32 	%r3802, %r3737, 10;
	xor.b32  	%r3803, %r3801, %r3802;
	shf.l.wrap.b32 	%r3804, %r2888, %r2888, 25;
	shf.l.wrap.b32 	%r3805, %r2888, %r2888, 14;
	xor.b32  	%r3806, %r3804, %r3805;
	shr.u32 	%r3807, %r2888, 3;
	xor.b32  	%r3808, %r3806, %r3807;
	add.s32 	%r3809, %r3808, %r2881;
	add.s32 	%r3810, %r3809, %r3552;
	add.s32 	%r3811, %r3810, %r3803;
	add.s32 	%r3812, %r3811, %r3676;
	xor.b32  	%r3813, %r3750, %r3713;
	and.b32  	%r3814, %r3787, %r3813;
	xor.b32  	%r3815, %r3814, %r3713;
	add.s32 	%r3816, %r3812, %r3815;
	shf.l.wrap.b32 	%r3817, %r3787, %r3787, 18;
	xor.b32  	%r3818, %r3817, %r3787;
	shf.l.wrap.b32 	%r3819, %r3818, %r3818, 27;
	xor.b32  	%r3820, %r3819, %r3787;
	shf.l.wrap.b32 	%r3821, %r3820, %r3820, 26;
	add.s32 	%r3822, %r3816, %r3821;
	add.s32 	%r3823, %r3822, 113926993;
	add.s32 	%r3824, %r3823, %r3687;
	shf.l.wrap.b32 	%r3825, %r3798, %r3798, 23;
	xor.b32  	%r3826, %r3825, %r3798;
	shf.l.wrap.b32 	%r3827, %r3826, %r3826, 21;
	xor.b32  	%r3828, %r3827, %r3798;
	shf.l.wrap.b32 	%r3829, %r3828, %r3828, 30;
	and.b32  	%r3830, %r3798, %r3761;
	or.b32  	%r3831, %r3798, %r3761;
	and.b32  	%r3832, %r3831, %r3724;
	or.b32  	%r3833, %r3832, %r3830;
	add.s32 	%r3834, %r3829, %r3833;
	add.s32 	%r3835, %r3834, %r3823;
	shf.l.wrap.b32 	%r3836, %r3774, %r3774, 15;
	shf.l.wrap.b32 	%r3837, %r3774, %r3774, 13;
	xor.b32  	%r3838, %r3836, %r3837;
	shr.u32 	%r3839, %r3774, 10;
	xor.b32  	%r3840, %r3838, %r3839;
	shf.l.wrap.b32 	%r3841, %r3293, %r3293, 25;
	shf.l.wrap.b32 	%r3842, %r3293, %r3293, 14;
	xor.b32  	%r3843, %r3841, %r3842;
	shr.u32 	%r3844, %r3293, 3;
	xor.b32  	%r3845, %r3843, %r3844;
	add.s32 	%r3846, %r3845, %r2888;
	add.s32 	%r3847, %r3846, %r3589;
	add.s32 	%r3848, %r3847, %r3840;
	add.s32 	%r3849, %r3848, %r3713;
	xor.b32  	%r3850, %r3787, %r3750;
	and.b32  	%r3851, %r3824, %r3850;
	xor.b32  	%r3852, %r3851, %r3750;
	add.s32 	%r3853, %r3849, %r3852;
	shf.l.wrap.b32 	%r3854, %r3824, %r3824, 18;
	xor.b32  	%r3855, %r3854, %r3824;
	shf.l.wrap.b32 	%r3856, %r3855, %r3855, 27;
	xor.b32  	%r3857, %r3856, %r3824;
	shf.l.wrap.b32 	%r3858, %r3857, %r3857, 26;
	add.s32 	%r3859, %r3853, %r3858;
	add.s32 	%r3860, %r3859, 338241895;
	add.s32 	%r3861, %r3860, %r3724;
	shf.l.wrap.b32 	%r3862, %r3835, %r3835, 23;
	xor.b32  	%r3863, %r3862, %r3835;
	shf.l.wrap.b32 	%r3864, %r3863, %r3863, 21;
	xor.b32  	%r3865, %r3864, %r3835;
	shf.l.wrap.b32 	%r3866, %r3865, %r3865, 30;
	and.b32  	%r3867, %r3835, %r3798;
	or.b32  	%r3868, %r3835, %r3798;
	and.b32  	%r3869, %r3868, %r3761;
	or.b32  	%r3870, %r3869, %r3867;
	add.s32 	%r3871, %r3866, %r3870;
	add.s32 	%r3872, %r3871, %r3860;
	shf.l.wrap.b32 	%r3873, %r3811, %r3811, 15;
	shf.l.wrap.b32 	%r3874, %r3811, %r3811, 13;
	xor.b32  	%r3875, %r3873, %r3874;
	shr.u32 	%r3876, %r3811, 10;
	xor.b32  	%r3877, %r3875, %r3876;
	shf.l.wrap.b32 	%r3878, %r3330, %r3330, 25;
	shf.l.wrap.b32 	%r3879, %r3330, %r3330, 14;
	xor.b32  	%r3880, %r3878, %r3879;
	shr.u32 	%r3881, %r3330, 3;
	xor.b32  	%r3882, %r3880, %r3881;
	add.s32 	%r3883, %r3882, %r3293;
	add.s32 	%r3884, %r3883, %r3626;
	add.s32 	%r3885, %r3884, %r3877;
	add.s32 	%r3886, %r3885, %r3750;
	xor.b32  	%r3887, %r3824, %r3787;
	and.b32  	%r3888, %r3861, %r3887;
	xor.b32  	%r3889, %r3888, %r3787;
	add.s32 	%r3890, %r3886, %r3889;
	shf.l.wrap.b32 	%r3891, %r3861, %r3861, 18;
	xor.b32  	%r3892, %r3891, %r3861;
	shf.l.wrap.b32 	%r3893, %r3892, %r3892, 27;
	xor.b32  	%r3894, %r3893, %r3861;
	shf.l.wrap.b32 	%r3895, %r3894, %r3894, 26;
	add.s32 	%r3896, %r3890, %r3895;
	add.s32 	%r3897, %r3896, 666307205;
	add.s32 	%r3898, %r3897, %r3761;
	shf.l.wrap.b32 	%r3899, %r3872, %r3872, 23;
	xor.b32  	%r3900, %r3899, %r3872;
	shf.l.wrap.b32 	%r3901, %r3900, %r3900, 21;
	xor.b32  	%r3902, %r3901, %r3872;
	shf.l.wrap.b32 	%r3903, %r3902, %r3902, 30;
	and.b32  	%r3904, %r3872, %r3835;
	or.b32  	%r3905, %r3872, %r3835;
	and.b32  	%r3906, %r3905, %r3798;
	or.b32  	%r3907, %r3906, %r3904;
	add.s32 	%r3908, %r3903, %r3907;
	add.s32 	%r3909, %r3908, %r3897;
	shf.l.wrap.b32 	%r3910, %r3848, %r3848, 15;
	shf.l.wrap.b32 	%r3911, %r3848, %r3848, 13;
	xor.b32  	%r3912, %r3910, %r3911;
	shr.u32 	%r3913, %r3848, 10;
	xor.b32  	%r3914, %r3912, %r3913;
	shf.l.wrap.b32 	%r3915, %r3367, %r3367, 25;
	shf.l.wrap.b32 	%r3916, %r3367, %r3367, 14;
	xor.b32  	%r3917, %r3915, %r3916;
	shr.u32 	%r3918, %r3367, 3;
	xor.b32  	%r3919, %r3917, %r3918;
	add.s32 	%r3920, %r3919, %r3330;
	add.s32 	%r3921, %r3920, %r3663;
	add.s32 	%r3922, %r3921, %r3914;
	add.s32 	%r3923, %r3922, %r3787;
	xor.b32  	%r3924, %r3861, %r3824;
	and.b32  	%r3925, %r3898, %r3924;
	xor.b32  	%r3926, %r3925, %r3824;
	add.s32 	%r3927, %r3923, %r3926;
	shf.l.wrap.b32 	%r3928, %r3898, %r3898, 18;
	xor.b32  	%r3929, %r3928, %r3898;
	shf.l.wrap.b32 	%r3930, %r3929, %r3929, 27;
	xor.b32  	%r3931, %r3930, %r3898;
	shf.l.wrap.b32 	%r3932, %r3931, %r3931, 26;
	add.s32 	%r3933, %r3927, %r3932;
	add.s32 	%r3934, %r3933, 773529912;
	add.s32 	%r3935, %r3934, %r3798;
	shf.l.wrap.b32 	%r3936, %r3909, %r3909, 23;
	xor.b32  	%r3937, %r3936, %r3909;
	shf.l.wrap.b32 	%r3938, %r3937, %r3937, 21;
	xor.b32  	%r3939, %r3938, %r3909;
	shf.l.wrap.b32 	%r3940, %r3939, %r3939, 30;
	and.b32  	%r3941, %r3909, %r3872;
	or.b32  	%r3942, %r3909, %r3872;
	and.b32  	%r3943, %r3942, %r3835;
	or.b32  	%r3944, %r3943, %r3941;
	add.s32 	%r3945, %r3940, %r3944;
	add.s32 	%r3946, %r3945, %r3934;
	shf.l.wrap.b32 	%r3947, %r3885, %r3885, 15;
	shf.l.wrap.b32 	%r3948, %r3885, %r3885, 13;
	xor.b32  	%r3949, %r3947, %r3948;
	shr.u32 	%r3950, %r3885, 10;
	xor.b32  	%r3951, %r3949, %r3950;
	shf.l.wrap.b32 	%r3952, %r3404, %r3404, 25;
	shf.l.wrap.b32 	%r3953, %r3404, %r3404, 14;
	xor.b32  	%r3954, %r3952, %r3953;
	shr.u32 	%r3955, %r3404, 3;
	xor.b32  	%r3956, %r3954, %r3955;
	add.s32 	%r3957, %r3956, %r3367;
	add.s32 	%r3958, %r3957, %r3700;
	add.s32 	%r3959, %r3958, %r3951;
	add.s32 	%r3960, %r3959, %r3824;
	xor.b32  	%r3961, %r3898, %r3861;
	and.b32  	%r3962, %r3935, %r3961;
	xor.b32  	%r3963, %r3962, %r3861;
	add.s32 	%r3964, %r3960, %r3963;
	shf.l.wrap.b32 	%r3965, %r3935, %r3935, 18;
	xor.b32  	%r3966, %r3965, %r3935;
	shf.l.wrap.b32 	%r3967, %r3966, %r3966, 27;
	xor.b32  	%r3968, %r3967, %r3935;
	shf.l.wrap.b32 	%r3969, %r3968, %r3968, 26;
	add.s32 	%r3970, %r3964, %r3969;
	add.s32 	%r3971, %r3970, 1294757372;
	add.s32 	%r3972, %r3971, %r3835;
	shf.l.wrap.b32 	%r3973, %r3946, %r3946, 23;
	xor.b32  	%r3974, %r3973, %r3946;
	shf.l.wrap.b32 	%r3975, %r3974, %r3974, 21;
	xor.b32  	%r3976, %r3975, %r3946;
	shf.l.wrap.b32 	%r3977, %r3976, %r3976, 30;
	and.b32  	%r3978, %r3946, %r3909;
	or.b32  	%r3979, %r3946, %r3909;
	and.b32  	%r3980, %r3979, %r3872;
	or.b32  	%r3981, %r3980, %r3978;
	add.s32 	%r3982, %r3977, %r3981;
	add.s32 	%r3983, %r3982, %r3971;
	shf.l.wrap.b32 	%r3984, %r3922, %r3922, 15;
	shf.l.wrap.b32 	%r3985, %r3922, %r3922, 13;
	xor.b32  	%r3986, %r3984, %r3985;
	shr.u32 	%r3987, %r3922, 10;
	xor.b32  	%r3988, %r3986, %r3987;
	shf.l.wrap.b32 	%r3989, %r3441, %r3441, 25;
	shf.l.wrap.b32 	%r3990, %r3441, %r3441, 14;
	xor.b32  	%r3991, %r3989, %r3990;
	shr.u32 	%r3992, %r3441, 3;
	xor.b32  	%r3993, %r3991, %r3992;
	add.s32 	%r3994, %r3993, %r3404;
	add.s32 	%r3995, %r3994, %r3737;
	add.s32 	%r3996, %r3995, %r3988;
	add.s32 	%r3997, %r3996, %r3861;
	xor.b32  	%r3998, %r3935, %r3898;
	and.b32  	%r3999, %r3972, %r3998;
	xor.b32  	%r4000, %r3999, %r3898;
	add.s32 	%r4001, %r3997, %r4000;
	shf.l.wrap.b32 	%r4002, %r3972, %r3972, 18;
	xor.b32  	%r4003, %r4002, %r3972;
	shf.l.wrap.b32 	%r4004, %r4003, %r4003, 27;
	xor.b32  	%r4005, %r4004, %r3972;
	shf.l.wrap.b32 	%r4006, %r4005, %r4005, 26;
	add.s32 	%r4007, %r4001, %r4006;
	add.s32 	%r4008, %r4007, 1396182291;
	add.s32 	%r4009, %r4008, %r3872;
	shf.l.wrap.b32 	%r4010, %r3983, %r3983, 23;
	xor.b32  	%r4011, %r4010, %r3983;
	shf.l.wrap.b32 	%r4012, %r4011, %r4011, 21;
	xor.b32  	%r4013, %r4012, %r3983;
	shf.l.wrap.b32 	%r4014, %r4013, %r4013, 30;
	and.b32  	%r4015, %r3983, %r3946;
	or.b32  	%r4016, %r3983, %r3946;
	and.b32  	%r4017, %r4016, %r3909;
	or.b32  	%r4018, %r4017, %r4015;
	add.s32 	%r4019, %r4014, %r4018;
	add.s32 	%r4020, %r4019, %r4008;
	shf.l.wrap.b32 	%r4021, %r3959, %r3959, 15;
	shf.l.wrap.b32 	%r4022, %r3959, %r3959, 13;
	xor.b32  	%r4023, %r4021, %r4022;
	shr.u32 	%r4024, %r3959, 10;
	xor.b32  	%r4025, %r4023, %r4024;
	shf.l.wrap.b32 	%r4026, %r3478, %r3478, 25;
	shf.l.wrap.b32 	%r4027, %r3478, %r3478, 14;
	xor.b32  	%r4028, %r4026, %r4027;
	shr.u32 	%r4029, %r3478, 3;
	xor.b32  	%r4030, %r4028, %r4029;
	add.s32 	%r4031, %r4030, %r3441;
	add.s32 	%r4032, %r4031, %r3774;
	add.s32 	%r4033, %r4032, %r4025;
	add.s32 	%r4034, %r4033, %r3898;
	xor.b32  	%r4035, %r3972, %r3935;
	and.b32  	%r4036, %r4009, %r4035;
	xor.b32  	%r4037, %r4036, %r3935;
	add.s32 	%r4038, %r4034, %r4037;
	shf.l.wrap.b32 	%r4039, %r4009, %r4009, 18;
	xor.b32  	%r4040, %r4039, %r4009;
	shf.l.wrap.b32 	%r4041, %r4040, %r4040, 27;
	xor.b32  	%r4042, %r4041, %r4009;
	shf.l.wrap.b32 	%r4043, %r4042, %r4042, 26;
	add.s32 	%r4044, %r4038, %r4043;
	add.s32 	%r4045, %r4044, 1695183700;
	add.s32 	%r4046, %r4045, %r3909;
	shf.l.wrap.b32 	%r4047, %r4020, %r4020, 23;
	xor.b32  	%r4048, %r4047, %r4020;
	shf.l.wrap.b32 	%r4049, %r4048, %r4048, 21;
	xor.b32  	%r4050, %r4049, %r4020;
	shf.l.wrap.b32 	%r4051, %r4050, %r4050, 30;
	and.b32  	%r4052, %r4020, %r3983;
	or.b32  	%r4053, %r4020, %r3983;
	and.b32  	%r4054, %r4053, %r3946;
	or.b32  	%r4055, %r4054, %r4052;
	add.s32 	%r4056, %r4051, %r4055;
	add.s32 	%r4057, %r4056, %r4045;
	shf.l.wrap.b32 	%r4058, %r3996, %r3996, 15;
	shf.l.wrap.b32 	%r4059, %r3996, %r3996, 13;
	xor.b32  	%r4060, %r4058, %r4059;
	shr.u32 	%r4061, %r3996, 10;
	xor.b32  	%r4062, %r4060, %r4061;
	shf.l.wrap.b32 	%r4063, %r3515, %r3515, 25;
	shf.l.wrap.b32 	%r4064, %r3515, %r3515, 14;
	xor.b32  	%r4065, %r4063, %r4064;
	shr.u32 	%r4066, %r3515, 3;
	xor.b32  	%r4067, %r4065, %r4066;
	add.s32 	%r4068, %r4067, %r3478;
	add.s32 	%r4069, %r4068, %r3811;
	add.s32 	%r4070, %r4069, %r4062;
	add.s32 	%r4071, %r4070, %r3935;
	xor.b32  	%r4072, %r4009, %r3972;
	and.b32  	%r4073, %r4046, %r4072;
	xor.b32  	%r4074, %r4073, %r3972;
	add.s32 	%r4075, %r4071, %r4074;
	shf.l.wrap.b32 	%r4076, %r4046, %r4046, 18;
	xor.b32  	%r4077, %r4076, %r4046;
	shf.l.wrap.b32 	%r4078, %r4077, %r4077, 27;
	xor.b32  	%r4079, %r4078, %r4046;
	shf.l.wrap.b32 	%r4080, %r4079, %r4079, 26;
	add.s32 	%r4081, %r4075, %r4080;
	add.s32 	%r4082, %r4081, 1986661051;
	add.s32 	%r4083, %r4082, %r3946;
	shf.l.wrap.b32 	%r4084, %r4057, %r4057, 23;
	xor.b32  	%r4085, %r4084, %r4057;
	shf.l.wrap.b32 	%r4086, %r4085, %r4085, 21;
	xor.b32  	%r4087, %r4086, %r4057;
	shf.l.wrap.b32 	%r4088, %r4087, %r4087, 30;
	and.b32  	%r4089, %r4057, %r4020;
	or.b32  	%r4090, %r4057, %r4020;
	and.b32  	%r4091, %r4090, %r3983;
	or.b32  	%r4092, %r4091, %r4089;
	add.s32 	%r4093, %r4088, %r4092;
	add.s32 	%r4094, %r4093, %r4082;
	shf.l.wrap.b32 	%r4095, %r4033, %r4033, 15;
	shf.l.wrap.b32 	%r4096, %r4033, %r4033, 13;
	xor.b32  	%r4097, %r4095, %r4096;
	shr.u32 	%r4098, %r4033, 10;
	xor.b32  	%r4099, %r4097, %r4098;
	shf.l.wrap.b32 	%r4100, %r3552, %r3552, 25;
	shf.l.wrap.b32 	%r4101, %r3552, %r3552, 14;
	xor.b32  	%r4102, %r4100, %r4101;
	shr.u32 	%r4103, %r3552, 3;
	xor.b32  	%r4104, %r4102, %r4103;
	add.s32 	%r4105, %r4104, %r3515;
	add.s32 	%r4106, %r4105, %r3848;
	add.s32 	%r4107, %r4106, %r4099;
	add.s32 	%r4108, %r4107, %r3972;
	xor.b32  	%r4109, %r4046, %r4009;
	and.b32  	%r4110, %r4083, %r4109;
	xor.b32  	%r4111, %r4110, %r4009;
	add.s32 	%r4112, %r4108, %r4111;
	shf.l.wrap.b32 	%r4113, %r4083, %r4083, 18;
	xor.b32  	%r4114, %r4113, %r4083;
	shf.l.wrap.b32 	%r4115, %r4114, %r4114, 27;
	xor.b32  	%r4116, %r4115, %r4083;
	shf.l.wrap.b32 	%r4117, %r4116, %r4116, 26;
	add.s32 	%r4118, %r4112, %r4117;
	add.s32 	%r4119, %r4118, -2117940946;
	add.s32 	%r4120, %r4119, %r3983;
	shf.l.wrap.b32 	%r4121, %r4094, %r4094, 23;
	xor.b32  	%r4122, %r4121, %r4094;
	shf.l.wrap.b32 	%r4123, %r4122, %r4122, 21;
	xor.b32  	%r4124, %r4123, %r4094;
	shf.l.wrap.b32 	%r4125, %r4124, %r4124, 30;
	and.b32  	%r4126, %r4094, %r4057;
	or.b32  	%r4127, %r4094, %r4057;
	and.b32  	%r4128, %r4127, %r4020;
	or.b32  	%r4129, %r4128, %r4126;
	add.s32 	%r4130, %r4125, %r4129;
	add.s32 	%r4131, %r4130, %r4119;
	shf.l.wrap.b32 	%r4132, %r4070, %r4070, 15;
	shf.l.wrap.b32 	%r4133, %r4070, %r4070, 13;
	xor.b32  	%r4134, %r4132, %r4133;
	shr.u32 	%r4135, %r4070, 10;
	xor.b32  	%r4136, %r4134, %r4135;
	shf.l.wrap.b32 	%r4137, %r3589, %r3589, 25;
	shf.l.wrap.b32 	%r4138, %r3589, %r3589, 14;
	xor.b32  	%r4139, %r4137, %r4138;
	shr.u32 	%r4140, %r3589, 3;
	xor.b32  	%r4141, %r4139, %r4140;
	add.s32 	%r4142, %r4141, %r3552;
	add.s32 	%r4143, %r4142, %r3885;
	add.s32 	%r4144, %r4143, %r4136;
	add.s32 	%r4145, %r4144, %r4009;
	xor.b32  	%r4146, %r4083, %r4046;
	and.b32  	%r4147, %r4120, %r4146;
	xor.b32  	%r4148, %r4147, %r4046;
	add.s32 	%r4149, %r4145, %r4148;
	shf.l.wrap.b32 	%r4150, %r4120, %r4120, 18;
	xor.b32  	%r4151, %r4150, %r4120;
	shf.l.wrap.b32 	%r4152, %r4151, %r4151, 27;
	xor.b32  	%r4153, %r4152, %r4120;
	shf.l.wrap.b32 	%r4154, %r4153, %r4153, 26;
	add.s32 	%r4155, %r4149, %r4154;
	add.s32 	%r4156, %r4155, -1838011259;
	add.s32 	%r4157, %r4156, %r4020;
	shf.l.wrap.b32 	%r4158, %r4131, %r4131, 23;
	xor.b32  	%r4159, %r4158, %r4131;
	shf.l.wrap.b32 	%r4160, %r4159, %r4159, 21;
	xor.b32  	%r4161, %r4160, %r4131;
	shf.l.wrap.b32 	%r4162, %r4161, %r4161, 30;
	and.b32  	%r4163, %r4131, %r4094;
	or.b32  	%r4164, %r4131, %r4094;
	and.b32  	%r4165, %r4164, %r4057;
	or.b32  	%r4166, %r4165, %r4163;
	add.s32 	%r4167, %r4162, %r4166;
	add.s32 	%r4168, %r4167, %r4156;
	shf.l.wrap.b32 	%r4169, %r4107, %r4107, 15;
	shf.l.wrap.b32 	%r4170, %r4107, %r4107, 13;
	xor.b32  	%r4171, %r4169, %r4170;
	shr.u32 	%r4172, %r4107, 10;
	xor.b32  	%r4173, %r4171, %r4172;
	shf.l.wrap.b32 	%r4174, %r3626, %r3626, 25;
	shf.l.wrap.b32 	%r4175, %r3626, %r3626, 14;
	xor.b32  	%r4176, %r4174, %r4175;
	shr.u32 	%r4177, %r3626, 3;
	xor.b32  	%r4178, %r4176, %r4177;
	add.s32 	%r4179, %r4178, %r3589;
	add.s32 	%r4180, %r4179, %r3922;
	add.s32 	%r4181, %r4180, %r4173;
	add.s32 	%r4182, %r4181, %r4046;
	xor.b32  	%r4183, %r4120, %r4083;
	and.b32  	%r4184, %r4157, %r4183;
	xor.b32  	%r4185, %r4184, %r4083;
	add.s32 	%r4186, %r4182, %r4185;
	shf.l.wrap.b32 	%r4187, %r4157, %r4157, 18;
	xor.b32  	%r4188, %r4187, %r4157;
	shf.l.wrap.b32 	%r4189, %r4188, %r4188, 27;
	xor.b32  	%r4190, %r4189, %r4157;
	shf.l.wrap.b32 	%r4191, %r4190, %r4190, 26;
	add.s32 	%r4192, %r4186, %r4191;
	add.s32 	%r4193, %r4192, -1564481375;
	add.s32 	%r4194, %r4193, %r4057;
	shf.l.wrap.b32 	%r4195, %r4168, %r4168, 23;
	xor.b32  	%r4196, %r4195, %r4168;
	shf.l.wrap.b32 	%r4197, %r4196, %r4196, 21;
	xor.b32  	%r4198, %r4197, %r4168;
	shf.l.wrap.b32 	%r4199, %r4198, %r4198, 30;
	and.b32  	%r4200, %r4168, %r4131;
	or.b32  	%r4201, %r4168, %r4131;
	and.b32  	%r4202, %r4201, %r4094;
	or.b32  	%r4203, %r4202, %r4200;
	add.s32 	%r4204, %r4199, %r4203;
	add.s32 	%r4205, %r4204, %r4193;
	shf.l.wrap.b32 	%r4206, %r4144, %r4144, 15;
	shf.l.wrap.b32 	%r4207, %r4144, %r4144, 13;
	xor.b32  	%r4208, %r4206, %r4207;
	shr.u32 	%r4209, %r4144, 10;
	xor.b32  	%r4210, %r4208, %r4209;
	shf.l.wrap.b32 	%r4211, %r3663, %r3663, 25;
	shf.l.wrap.b32 	%r4212, %r3663, %r3663, 14;
	xor.b32  	%r4213, %r4211, %r4212;
	shr.u32 	%r4214, %r3663, 3;
	xor.b32  	%r4215, %r4213, %r4214;
	add.s32 	%r4216, %r4215, %r3626;
	add.s32 	%r4217, %r4216, %r3959;
	add.s32 	%r4218, %r4217, %r4210;
	add.s32 	%r4219, %r4218, %r4083;
	xor.b32  	%r4220, %r4157, %r4120;
	and.b32  	%r4221, %r4194, %r4220;
	xor.b32  	%r4222, %r4221, %r4120;
	add.s32 	%r4223, %r4219, %r4222;
	shf.l.wrap.b32 	%r4224, %r4194, %r4194, 18;
	xor.b32  	%r4225, %r4224, %r4194;
	shf.l.wrap.b32 	%r4226, %r4225, %r4225, 27;
	xor.b32  	%r4227, %r4226, %r4194;
	shf.l.wrap.b32 	%r4228, %r4227, %r4227, 26;
	add.s32 	%r4229, %r4223, %r4228;
	add.s32 	%r4230, %r4229, -1474664885;
	add.s32 	%r4231, %r4230, %r4094;
	shf.l.wrap.b32 	%r4232, %r4205, %r4205, 23;
	xor.b32  	%r4233, %r4232, %r4205;
	shf.l.wrap.b32 	%r4234, %r4233, %r4233, 21;
	xor.b32  	%r4235, %r4234, %r4205;
	shf.l.wrap.b32 	%r4236, %r4235, %r4235, 30;
	and.b32  	%r4237, %r4205, %r4168;
	or.b32  	%r4238, %r4205, %r4168;
	and.b32  	%r4239, %r4238, %r4131;
	or.b32  	%r4240, %r4239, %r4237;
	add.s32 	%r4241, %r4236, %r4240;
	add.s32 	%r4242, %r4241, %r4230;
	shf.l.wrap.b32 	%r4243, %r4181, %r4181, 15;
	shf.l.wrap.b32 	%r4244, %r4181, %r4181, 13;
	xor.b32  	%r4245, %r4243, %r4244;
	shr.u32 	%r4246, %r4181, 10;
	xor.b32  	%r4247, %r4245, %r4246;
	shf.l.wrap.b32 	%r4248, %r3700, %r3700, 25;
	shf.l.wrap.b32 	%r4249, %r3700, %r3700, 14;
	xor.b32  	%r4250, %r4248, %r4249;
	shr.u32 	%r4251, %r3700, 3;
	xor.b32  	%r4252, %r4250, %r4251;
	add.s32 	%r4253, %r4252, %r3663;
	add.s32 	%r4254, %r4253, %r3996;
	add.s32 	%r4255, %r4254, %r4247;
	add.s32 	%r4256, %r4255, %r4120;
	xor.b32  	%r4257, %r4194, %r4157;
	and.b32  	%r4258, %r4231, %r4257;
	xor.b32  	%r4259, %r4258, %r4157;
	add.s32 	%r4260, %r4256, %r4259;
	shf.l.wrap.b32 	%r4261, %r4231, %r4231, 18;
	xor.b32  	%r4262, %r4261, %r4231;
	shf.l.wrap.b32 	%r4263, %r4262, %r4262, 27;
	xor.b32  	%r4264, %r4263, %r4231;
	shf.l.wrap.b32 	%r4265, %r4264, %r4264, 26;
	add.s32 	%r4266, %r4260, %r4265;
	add.s32 	%r4267, %r4266, -1035236496;
	add.s32 	%r4268, %r4267, %r4131;
	shf.l.wrap.b32 	%r4269, %r4242, %r4242, 23;
	xor.b32  	%r4270, %r4269, %r4242;
	shf.l.wrap.b32 	%r4271, %r4270, %r4270, 21;
	xor.b32  	%r4272, %r4271, %r4242;
	shf.l.wrap.b32 	%r4273, %r4272, %r4272, 30;
	and.b32  	%r4274, %r4242, %r4205;
	or.b32  	%r4275, %r4242, %r4205;
	and.b32  	%r4276, %r4275, %r4168;
	or.b32  	%r4277, %r4276, %r4274;
	add.s32 	%r4278, %r4273, %r4277;
	add.s32 	%r4279, %r4278, %r4267;
	shf.l.wrap.b32 	%r4280, %r4218, %r4218, 15;
	shf.l.wrap.b32 	%r4281, %r4218, %r4218, 13;
	xor.b32  	%r4282, %r4280, %r4281;
	shr.u32 	%r4283, %r4218, 10;
	xor.b32  	%r4284, %r4282, %r4283;
	shf.l.wrap.b32 	%r4285, %r3737, %r3737, 25;
	shf.l.wrap.b32 	%r4286, %r3737, %r3737, 14;
	xor.b32  	%r4287, %r4285, %r4286;
	shr.u32 	%r4288, %r3737, 3;
	xor.b32  	%r4289, %r4287, %r4288;
	add.s32 	%r4290, %r4289, %r3700;
	add.s32 	%r4291, %r4290, %r4033;
	add.s32 	%r4292, %r4291, %r4284;
	add.s32 	%r4293, %r4292, %r4157;
	xor.b32  	%r4294, %r4231, %r4194;
	and.b32  	%r4295, %r4268, %r4294;
	xor.b32  	%r4296, %r4295, %r4194;
	add.s32 	%r4297, %r4293, %r4296;
	shf.l.wrap.b32 	%r4298, %r4268, %r4268, 18;
	xor.b32  	%r4299, %r4298, %r4268;
	shf.l.wrap.b32 	%r4300, %r4299, %r4299, 27;
	xor.b32  	%r4301, %r4300, %r4268;
	shf.l.wrap.b32 	%r4302, %r4301, %r4301, 26;
	add.s32 	%r4303, %r4297, %r4302;
	add.s32 	%r4304, %r4303, -949202525;
	add.s32 	%r4305, %r4304, %r4168;
	shf.l.wrap.b32 	%r4306, %r4279, %r4279, 23;
	xor.b32  	%r4307, %r4306, %r4279;
	shf.l.wrap.b32 	%r4308, %r4307, %r4307, 21;
	xor.b32  	%r4309, %r4308, %r4279;
	shf.l.wrap.b32 	%r4310, %r4309, %r4309, 30;
	and.b32  	%r4311, %r4279, %r4242;
	or.b32  	%r4312, %r4279, %r4242;
	and.b32  	%r4313, %r4312, %r4205;
	or.b32  	%r4314, %r4313, %r4311;
	add.s32 	%r4315, %r4310, %r4314;
	add.s32 	%r4316, %r4315, %r4304;
	shf.l.wrap.b32 	%r4317, %r4255, %r4255, 15;
	shf.l.wrap.b32 	%r4318, %r4255, %r4255, 13;
	xor.b32  	%r4319, %r4317, %r4318;
	shr.u32 	%r4320, %r4255, 10;
	xor.b32  	%r4321, %r4319, %r4320;
	shf.l.wrap.b32 	%r4322, %r3774, %r3774, 25;
	shf.l.wrap.b32 	%r4323, %r3774, %r3774, 14;
	xor.b32  	%r4324, %r4322, %r4323;
	shr.u32 	%r4325, %r3774, 3;
	xor.b32  	%r4326, %r4324, %r4325;
	add.s32 	%r4327, %r4326, %r3737;
	add.s32 	%r4328, %r4327, %r4070;
	add.s32 	%r4329, %r4328, %r4321;
	add.s32 	%r4330, %r4329, %r4194;
	xor.b32  	%r4331, %r4268, %r4231;
	and.b32  	%r4332, %r4305, %r4331;
	xor.b32  	%r4333, %r4332, %r4231;
	add.s32 	%r4334, %r4330, %r4333;
	shf.l.wrap.b32 	%r4335, %r4305, %r4305, 18;
	xor.b32  	%r4336, %r4335, %r4305;
	shf.l.wrap.b32 	%r4337, %r4336, %r4336, 27;
	xor.b32  	%r4338, %r4337, %r4305;
	shf.l.wrap.b32 	%r4339, %r4338, %r4338, 26;
	add.s32 	%r4340, %r4334, %r4339;
	add.s32 	%r4341, %r4340, -778901479;
	add.s32 	%r4342, %r4341, %r4205;
	shf.l.wrap.b32 	%r4343, %r4316, %r4316, 23;
	xor.b32  	%r4344, %r4343, %r4316;
	shf.l.wrap.b32 	%r4345, %r4344, %r4344, 21;
	xor.b32  	%r4346, %r4345, %r4316;
	shf.l.wrap.b32 	%r4347, %r4346, %r4346, 30;
	and.b32  	%r4348, %r4316, %r4279;
	or.b32  	%r4349, %r4316, %r4279;
	and.b32  	%r4350, %r4349, %r4242;
	or.b32  	%r4351, %r4350, %r4348;
	add.s32 	%r4352, %r4347, %r4351;
	add.s32 	%r4353, %r4352, %r4341;
	shf.l.wrap.b32 	%r4354, %r4292, %r4292, 15;
	shf.l.wrap.b32 	%r4355, %r4292, %r4292, 13;
	xor.b32  	%r4356, %r4354, %r4355;
	shr.u32 	%r4357, %r4292, 10;
	xor.b32  	%r4358, %r4356, %r4357;
	shf.l.wrap.b32 	%r4359, %r3811, %r3811, 25;
	shf.l.wrap.b32 	%r4360, %r3811, %r3811, 14;
	xor.b32  	%r4361, %r4359, %r4360;
	shr.u32 	%r4362, %r3811, 3;
	xor.b32  	%r4363, %r4361, %r4362;
	add.s32 	%r4364, %r4363, %r3774;
	add.s32 	%r4365, %r4364, %r4107;
	add.s32 	%r4366, %r4365, %r4358;
	add.s32 	%r4367, %r4366, %r4231;
	xor.b32  	%r4368, %r4305, %r4268;
	and.b32  	%r4369, %r4342, %r4368;
	xor.b32  	%r4370, %r4369, %r4268;
	add.s32 	%r4371, %r4367, %r4370;
	shf.l.wrap.b32 	%r4372, %r4342, %r4342, 18;
	xor.b32  	%r4373, %r4372, %r4342;
	shf.l.wrap.b32 	%r4374, %r4373, %r4373, 27;
	xor.b32  	%r4375, %r4374, %r4342;
	shf.l.wrap.b32 	%r4376, %r4375, %r4375, 26;
	add.s32 	%r4377, %r4371, %r4376;
	add.s32 	%r4378, %r4377, -694614492;
	add.s32 	%r4379, %r4378, %r4242;
	shf.l.wrap.b32 	%r4380, %r4353, %r4353, 23;
	xor.b32  	%r4381, %r4380, %r4353;
	shf.l.wrap.b32 	%r4382, %r4381, %r4381, 21;
	xor.b32  	%r4383, %r4382, %r4353;
	shf.l.wrap.b32 	%r4384, %r4383, %r4383, 30;
	and.b32  	%r4385, %r4353, %r4316;
	or.b32  	%r4386, %r4353, %r4316;
	and.b32  	%r4387, %r4386, %r4279;
	or.b32  	%r4388, %r4387, %r4385;
	add.s32 	%r4389, %r4384, %r4388;
	add.s32 	%r4390, %r4389, %r4378;
	shf.l.wrap.b32 	%r4391, %r4329, %r4329, 15;
	shf.l.wrap.b32 	%r4392, %r4329, %r4329, 13;
	xor.b32  	%r4393, %r4391, %r4392;
	shr.u32 	%r4394, %r4329, 10;
	xor.b32  	%r4395, %r4393, %r4394;
	shf.l.wrap.b32 	%r4396, %r3848, %r3848, 25;
	shf.l.wrap.b32 	%r4397, %r3848, %r3848, 14;
	xor.b32  	%r4398, %r4396, %r4397;
	shr.u32 	%r4399, %r3848, 3;
	xor.b32  	%r4400, %r4398, %r4399;
	add.s32 	%r4401, %r4400, %r3811;
	add.s32 	%r4402, %r4401, %r4144;
	add.s32 	%r4403, %r4402, %r4395;
	add.s32 	%r4404, %r4403, %r4268;
	xor.b32  	%r4405, %r4342, %r4305;
	and.b32  	%r4406, %r4379, %r4405;
	xor.b32  	%r4407, %r4406, %r4305;
	add.s32 	%r4408, %r4404, %r4407;
	shf.l.wrap.b32 	%r4409, %r4379, %r4379, 18;
	xor.b32  	%r4410, %r4409, %r4379;
	shf.l.wrap.b32 	%r4411, %r4410, %r4410, 27;
	xor.b32  	%r4412, %r4411, %r4379;
	shf.l.wrap.b32 	%r4413, %r4412, %r4412, 26;
	add.s32 	%r4414, %r4408, %r4413;
	add.s32 	%r4415, %r4414, -200395387;
	add.s32 	%r4416, %r4415, %r4279;
	shf.l.wrap.b32 	%r4417, %r4390, %r4390, 23;
	xor.b32  	%r4418, %r4417, %r4390;
	shf.l.wrap.b32 	%r4419, %r4418, %r4418, 21;
	xor.b32  	%r4420, %r4419, %r4390;
	shf.l.wrap.b32 	%r4421, %r4420, %r4420, 30;
	and.b32  	%r4422, %r4390, %r4353;
	or.b32  	%r4423, %r4390, %r4353;
	and.b32  	%r4424, %r4423, %r4316;
	or.b32  	%r4425, %r4424, %r4422;
	add.s32 	%r4426, %r4421, %r4425;
	add.s32 	%r4427, %r4426, %r4415;
	shf.l.wrap.b32 	%r4428, %r4366, %r4366, 15;
	shf.l.wrap.b32 	%r4429, %r4366, %r4366, 13;
	xor.b32  	%r4430, %r4428, %r4429;
	shr.u32 	%r4431, %r4366, 10;
	xor.b32  	%r4432, %r4430, %r4431;
	shf.l.wrap.b32 	%r4433, %r3885, %r3885, 25;
	shf.l.wrap.b32 	%r4434, %r3885, %r3885, 14;
	xor.b32  	%r4435, %r4433, %r4434;
	shr.u32 	%r4436, %r3885, 3;
	xor.b32  	%r4437, %r4435, %r4436;
	add.s32 	%r4438, %r4437, %r3848;
	add.s32 	%r4439, %r4438, %r4181;
	add.s32 	%r4440, %r4439, %r4432;
	add.s32 	%r4441, %r4440, %r4305;
	xor.b32  	%r4442, %r4379, %r4342;
	and.b32  	%r4443, %r4416, %r4442;
	xor.b32  	%r4444, %r4443, %r4342;
	add.s32 	%r4445, %r4441, %r4444;
	shf.l.wrap.b32 	%r4446, %r4416, %r4416, 18;
	xor.b32  	%r4447, %r4446, %r4416;
	shf.l.wrap.b32 	%r4448, %r4447, %r4447, 27;
	xor.b32  	%r4449, %r4448, %r4416;
	shf.l.wrap.b32 	%r4450, %r4449, %r4449, 26;
	add.s32 	%r4451, %r4445, %r4450;
	add.s32 	%r4452, %r4451, 275423344;
	add.s32 	%r4453, %r4452, %r4316;
	shf.l.wrap.b32 	%r4454, %r4427, %r4427, 23;
	xor.b32  	%r4455, %r4454, %r4427;
	shf.l.wrap.b32 	%r4456, %r4455, %r4455, 21;
	xor.b32  	%r4457, %r4456, %r4427;
	shf.l.wrap.b32 	%r4458, %r4457, %r4457, 30;
	and.b32  	%r4459, %r4427, %r4390;
	or.b32  	%r4460, %r4427, %r4390;
	and.b32  	%r4461, %r4460, %r4353;
	or.b32  	%r4462, %r4461, %r4459;
	add.s32 	%r4463, %r4458, %r4462;
	add.s32 	%r4464, %r4463, %r4452;
	shf.l.wrap.b32 	%r4465, %r4403, %r4403, 15;
	shf.l.wrap.b32 	%r4466, %r4403, %r4403, 13;
	xor.b32  	%r4467, %r4465, %r4466;
	shr.u32 	%r4468, %r4403, 10;
	xor.b32  	%r4469, %r4467, %r4468;
	shf.l.wrap.b32 	%r4470, %r3922, %r3922, 25;
	shf.l.wrap.b32 	%r4471, %r3922, %r3922, 14;
	xor.b32  	%r4472, %r4470, %r4471;
	shr.u32 	%r4473, %r3922, 3;
	xor.b32  	%r4474, %r4472, %r4473;
	add.s32 	%r4475, %r4474, %r3885;
	add.s32 	%r4476, %r4475, %r4218;
	add.s32 	%r4477, %r4476, %r4469;
	add.s32 	%r4478, %r4477, %r4342;
	xor.b32  	%r4479, %r4416, %r4379;
	and.b32  	%r4480, %r4453, %r4479;
	xor.b32  	%r4481, %r4480, %r4379;
	add.s32 	%r4482, %r4478, %r4481;
	shf.l.wrap.b32 	%r4483, %r4453, %r4453, 18;
	xor.b32  	%r4484, %r4483, %r4453;
	shf.l.wrap.b32 	%r4485, %r4484, %r4484, 27;
	xor.b32  	%r4486, %r4485, %r4453;
	shf.l.wrap.b32 	%r4487, %r4486, %r4486, 26;
	add.s32 	%r4488, %r4482, %r4487;
	add.s32 	%r4489, %r4488, 430227734;
	add.s32 	%r4490, %r4489, %r4353;
	shf.l.wrap.b32 	%r4491, %r4464, %r4464, 23;
	xor.b32  	%r4492, %r4491, %r4464;
	shf.l.wrap.b32 	%r4493, %r4492, %r4492, 21;
	xor.b32  	%r4494, %r4493, %r4464;
	shf.l.wrap.b32 	%r4495, %r4494, %r4494, 30;
	and.b32  	%r4496, %r4464, %r4427;
	or.b32  	%r4497, %r4464, %r4427;
	and.b32  	%r4498, %r4497, %r4390;
	or.b32  	%r4499, %r4498, %r4496;
	add.s32 	%r4500, %r4495, %r4499;
	add.s32 	%r4501, %r4500, %r4489;
	shf.l.wrap.b32 	%r4502, %r4440, %r4440, 15;
	shf.l.wrap.b32 	%r4503, %r4440, %r4440, 13;
	xor.b32  	%r4504, %r4502, %r4503;
	shr.u32 	%r4505, %r4440, 10;
	xor.b32  	%r4506, %r4504, %r4505;
	shf.l.wrap.b32 	%r4507, %r3959, %r3959, 25;
	shf.l.wrap.b32 	%r4508, %r3959, %r3959, 14;
	xor.b32  	%r4509, %r4507, %r4508;
	shr.u32 	%r4510, %r3959, 3;
	xor.b32  	%r4511, %r4509, %r4510;
	add.s32 	%r4512, %r4511, %r3922;
	add.s32 	%r4513, %r4512, %r4255;
	add.s32 	%r4514, %r4513, %r4506;
	add.s32 	%r4515, %r4514, %r4379;
	xor.b32  	%r4516, %r4453, %r4416;
	and.b32  	%r4517, %r4490, %r4516;
	xor.b32  	%r4518, %r4517, %r4416;
	add.s32 	%r4519, %r4515, %r4518;
	shf.l.wrap.b32 	%r4520, %r4490, %r4490, 18;
	xor.b32  	%r4521, %r4520, %r4490;
	shf.l.wrap.b32 	%r4522, %r4521, %r4521, 27;
	xor.b32  	%r4523, %r4522, %r4490;
	shf.l.wrap.b32 	%r4524, %r4523, %r4523, 26;
	add.s32 	%r4525, %r4519, %r4524;
	add.s32 	%r4526, %r4525, 506948616;
	add.s32 	%r4527, %r4526, %r4390;
	shf.l.wrap.b32 	%r4528, %r4501, %r4501, 23;
	xor.b32  	%r4529, %r4528, %r4501;
	shf.l.wrap.b32 	%r4530, %r4529, %r4529, 21;
	xor.b32  	%r4531, %r4530, %r4501;
	shf.l.wrap.b32 	%r4532, %r4531, %r4531, 30;
	and.b32  	%r4533, %r4501, %r4464;
	or.b32  	%r4534, %r4501, %r4464;
	and.b32  	%r4535, %r4534, %r4427;
	or.b32  	%r4536, %r4535, %r4533;
	add.s32 	%r4537, %r4532, %r4536;
	add.s32 	%r4538, %r4537, %r4526;
	shf.l.wrap.b32 	%r4539, %r4477, %r4477, 15;
	shf.l.wrap.b32 	%r4540, %r4477, %r4477, 13;
	xor.b32  	%r4541, %r4539, %r4540;
	shr.u32 	%r4542, %r4477, 10;
	xor.b32  	%r4543, %r4541, %r4542;
	shf.l.wrap.b32 	%r4544, %r3996, %r3996, 25;
	shf.l.wrap.b32 	%r4545, %r3996, %r3996, 14;
	xor.b32  	%r4546, %r4544, %r4545;
	shr.u32 	%r4547, %r3996, 3;
	xor.b32  	%r4548, %r4546, %r4547;
	add.s32 	%r4549, %r4548, %r3959;
	add.s32 	%r4550, %r4549, %r4292;
	add.s32 	%r4551, %r4550, %r4543;
	add.s32 	%r4552, %r4551, %r4416;
	xor.b32  	%r4553, %r4490, %r4453;
	and.b32  	%r4554, %r4527, %r4553;
	xor.b32  	%r4555, %r4554, %r4453;
	add.s32 	%r4556, %r4552, %r4555;
	shf.l.wrap.b32 	%r4557, %r4527, %r4527, 18;
	xor.b32  	%r4558, %r4557, %r4527;
	shf.l.wrap.b32 	%r4559, %r4558, %r4558, 27;
	xor.b32  	%r4560, %r4559, %r4527;
	shf.l.wrap.b32 	%r4561, %r4560, %r4560, 26;
	add.s32 	%r4562, %r4556, %r4561;
	add.s32 	%r4563, %r4562, 659060556;
	add.s32 	%r4564, %r4563, %r4427;
	shf.l.wrap.b32 	%r4565, %r4538, %r4538, 23;
	xor.b32  	%r4566, %r4565, %r4538;
	shf.l.wrap.b32 	%r4567, %r4566, %r4566, 21;
	xor.b32  	%r4568, %r4567, %r4538;
	shf.l.wrap.b32 	%r4569, %r4568, %r4568, 30;
	and.b32  	%r4570, %r4538, %r4501;
	or.b32  	%r4571, %r4538, %r4501;
	and.b32  	%r4572, %r4571, %r4464;
	or.b32  	%r4573, %r4572, %r4570;
	add.s32 	%r4574, %r4569, %r4573;
	add.s32 	%r4575, %r4574, %r4563;
	shf.l.wrap.b32 	%r4576, %r4514, %r4514, 15;
	shf.l.wrap.b32 	%r4577, %r4514, %r4514, 13;
	xor.b32  	%r4578, %r4576, %r4577;
	shr.u32 	%r4579, %r4514, 10;
	xor.b32  	%r4580, %r4578, %r4579;
	shf.l.wrap.b32 	%r4581, %r4033, %r4033, 25;
	shf.l.wrap.b32 	%r4582, %r4033, %r4033, 14;
	xor.b32  	%r4583, %r4581, %r4582;
	shr.u32 	%r4584, %r4033, 3;
	xor.b32  	%r4585, %r4583, %r4584;
	add.s32 	%r4586, %r4585, %r3996;
	add.s32 	%r4587, %r4586, %r4329;
	add.s32 	%r4588, %r4587, %r4580;
	add.s32 	%r4589, %r4588, %r4453;
	xor.b32  	%r4590, %r4527, %r4490;
	and.b32  	%r4591, %r4564, %r4590;
	xor.b32  	%r4592, %r4591, %r4490;
	add.s32 	%r4593, %r4589, %r4592;
	shf.l.wrap.b32 	%r4594, %r4564, %r4564, 18;
	xor.b32  	%r4595, %r4594, %r4564;
	shf.l.wrap.b32 	%r4596, %r4595, %r4595, 27;
	xor.b32  	%r4597, %r4596, %r4564;
	shf.l.wrap.b32 	%r4598, %r4597, %r4597, 26;
	add.s32 	%r4599, %r4593, %r4598;
	add.s32 	%r4600, %r4599, 883997877;
	add.s32 	%r4601, %r4600, %r4464;
	shf.l.wrap.b32 	%r4602, %r4575, %r4575, 23;
	xor.b32  	%r4603, %r4602, %r4575;
	shf.l.wrap.b32 	%r4604, %r4603, %r4603, 21;
	xor.b32  	%r4605, %r4604, %r4575;
	shf.l.wrap.b32 	%r4606, %r4605, %r4605, 30;
	and.b32  	%r4607, %r4575, %r4538;
	or.b32  	%r4608, %r4575, %r4538;
	and.b32  	%r4609, %r4608, %r4501;
	or.b32  	%r4610, %r4609, %r4607;
	add.s32 	%r4611, %r4606, %r4610;
	add.s32 	%r4612, %r4611, %r4600;
	shf.l.wrap.b32 	%r4613, %r4551, %r4551, 15;
	shf.l.wrap.b32 	%r4614, %r4551, %r4551, 13;
	xor.b32  	%r4615, %r4613, %r4614;
	shr.u32 	%r4616, %r4551, 10;
	xor.b32  	%r4617, %r4615, %r4616;
	shf.l.wrap.b32 	%r4618, %r4070, %r4070, 25;
	shf.l.wrap.b32 	%r4619, %r4070, %r4070, 14;
	xor.b32  	%r4620, %r4618, %r4619;
	shr.u32 	%r4621, %r4070, 3;
	xor.b32  	%r4622, %r4620, %r4621;
	add.s32 	%r4623, %r4622, %r4033;
	add.s32 	%r4624, %r4623, %r4366;
	add.s32 	%r4625, %r4624, %r4617;
	add.s32 	%r4626, %r4625, %r4490;
	xor.b32  	%r4627, %r4564, %r4527;
	and.b32  	%r4628, %r4601, %r4627;
	xor.b32  	%r4629, %r4628, %r4527;
	add.s32 	%r4630, %r4626, %r4629;
	shf.l.wrap.b32 	%r4631, %r4601, %r4601, 18;
	xor.b32  	%r4632, %r4631, %r4601;
	shf.l.wrap.b32 	%r4633, %r4632, %r4632, 27;
	xor.b32  	%r4634, %r4633, %r4601;
	shf.l.wrap.b32 	%r4635, %r4634, %r4634, 26;
	add.s32 	%r4636, %r4630, %r4635;
	add.s32 	%r4637, %r4636, 958139571;
	add.s32 	%r4638, %r4637, %r4501;
	shf.l.wrap.b32 	%r4639, %r4612, %r4612, 23;
	xor.b32  	%r4640, %r4639, %r4612;
	shf.l.wrap.b32 	%r4641, %r4640, %r4640, 21;
	xor.b32  	%r4642, %r4641, %r4612;
	shf.l.wrap.b32 	%r4643, %r4642, %r4642, 30;
	and.b32  	%r4644, %r4612, %r4575;
	or.b32  	%r4645, %r4612, %r4575;
	and.b32  	%r4646, %r4645, %r4538;
	or.b32  	%r4647, %r4646, %r4644;
	add.s32 	%r4648, %r4643, %r4647;
	add.s32 	%r4649, %r4648, %r4637;
	shf.l.wrap.b32 	%r4650, %r4588, %r4588, 15;
	shf.l.wrap.b32 	%r4651, %r4588, %r4588, 13;
	xor.b32  	%r4652, %r4650, %r4651;
	shr.u32 	%r4653, %r4588, 10;
	xor.b32  	%r4654, %r4652, %r4653;
	shf.l.wrap.b32 	%r4655, %r4107, %r4107, 25;
	shf.l.wrap.b32 	%r4656, %r4107, %r4107, 14;
	xor.b32  	%r4657, %r4655, %r4656;
	shr.u32 	%r4658, %r4107, 3;
	xor.b32  	%r4659, %r4657, %r4658;
	add.s32 	%r4660, %r4659, %r4070;
	add.s32 	%r4661, %r4660, %r4403;
	add.s32 	%r4662, %r4661, %r4654;
	add.s32 	%r4663, %r4662, %r4527;
	xor.b32  	%r4664, %r4601, %r4564;
	and.b32  	%r4665, %r4638, %r4664;
	xor.b32  	%r4666, %r4665, %r4564;
	add.s32 	%r4667, %r4663, %r4666;
	shf.l.wrap.b32 	%r4668, %r4638, %r4638, 18;
	xor.b32  	%r4669, %r4668, %r4638;
	shf.l.wrap.b32 	%r4670, %r4669, %r4669, 27;
	xor.b32  	%r4671, %r4670, %r4638;
	shf.l.wrap.b32 	%r4672, %r4671, %r4671, 26;
	add.s32 	%r4673, %r4667, %r4672;
	add.s32 	%r4674, %r4673, 1322822218;
	add.s32 	%r4675, %r4674, %r4538;
	shf.l.wrap.b32 	%r4676, %r4649, %r4649, 23;
	xor.b32  	%r4677, %r4676, %r4649;
	shf.l.wrap.b32 	%r4678, %r4677, %r4677, 21;
	xor.b32  	%r4679, %r4678, %r4649;
	shf.l.wrap.b32 	%r4680, %r4679, %r4679, 30;
	and.b32  	%r4681, %r4649, %r4612;
	or.b32  	%r4682, %r4649, %r4612;
	and.b32  	%r4683, %r4682, %r4575;
	or.b32  	%r4684, %r4683, %r4681;
	add.s32 	%r4685, %r4680, %r4684;
	add.s32 	%r4686, %r4685, %r4674;
	shf.l.wrap.b32 	%r4687, %r4625, %r4625, 15;
	shf.l.wrap.b32 	%r4688, %r4625, %r4625, 13;
	xor.b32  	%r4689, %r4687, %r4688;
	shr.u32 	%r4690, %r4625, 10;
	xor.b32  	%r4691, %r4689, %r4690;
	shf.l.wrap.b32 	%r4692, %r4144, %r4144, 25;
	shf.l.wrap.b32 	%r4693, %r4144, %r4144, 14;
	xor.b32  	%r4694, %r4692, %r4693;
	shr.u32 	%r4695, %r4144, 3;
	xor.b32  	%r4696, %r4694, %r4695;
	add.s32 	%r4697, %r4696, %r4107;
	add.s32 	%r4698, %r4697, %r4440;
	add.s32 	%r4699, %r4698, %r4691;
	add.s32 	%r4700, %r4699, %r4564;
	xor.b32  	%r4701, %r4638, %r4601;
	and.b32  	%r4702, %r4675, %r4701;
	xor.b32  	%r4703, %r4702, %r4601;
	add.s32 	%r4704, %r4700, %r4703;
	shf.l.wrap.b32 	%r4705, %r4675, %r4675, 18;
	xor.b32  	%r4706, %r4705, %r4675;
	shf.l.wrap.b32 	%r4707, %r4706, %r4706, 27;
	xor.b32  	%r4708, %r4707, %r4675;
	shf.l.wrap.b32 	%r4709, %r4708, %r4708, 26;
	add.s32 	%r4710, %r4704, %r4709;
	add.s32 	%r4711, %r4710, 1537002063;
	add.s32 	%r4712, %r4711, %r4575;
	shf.l.wrap.b32 	%r4713, %r4686, %r4686, 23;
	xor.b32  	%r4714, %r4713, %r4686;
	shf.l.wrap.b32 	%r4715, %r4714, %r4714, 21;
	xor.b32  	%r4716, %r4715, %r4686;
	shf.l.wrap.b32 	%r4717, %r4716, %r4716, 30;
	and.b32  	%r4718, %r4686, %r4649;
	or.b32  	%r4719, %r4686, %r4649;
	and.b32  	%r4720, %r4719, %r4612;
	or.b32  	%r4721, %r4720, %r4718;
	add.s32 	%r4722, %r4717, %r4721;
	add.s32 	%r4723, %r4722, %r4711;
	shf.l.wrap.b32 	%r4724, %r4662, %r4662, 15;
	shf.l.wrap.b32 	%r4725, %r4662, %r4662, 13;
	xor.b32  	%r4726, %r4724, %r4725;
	shr.u32 	%r4727, %r4662, 10;
	xor.b32  	%r4728, %r4726, %r4727;
	shf.l.wrap.b32 	%r4729, %r4181, %r4181, 25;
	shf.l.wrap.b32 	%r4730, %r4181, %r4181, 14;
	xor.b32  	%r4731, %r4729, %r4730;
	shr.u32 	%r4732, %r4181, 3;
	xor.b32  	%r4733, %r4731, %r4732;
	add.s32 	%r4734, %r4733, %r4144;
	add.s32 	%r4735, %r4734, %r4477;
	add.s32 	%r4736, %r4735, %r4728;
	add.s32 	%r4737, %r4736, %r4601;
	xor.b32  	%r4738, %r4675, %r4638;
	and.b32  	%r4739, %r4712, %r4738;
	xor.b32  	%r4740, %r4739, %r4638;
	add.s32 	%r4741, %r4737, %r4740;
	shf.l.wrap.b32 	%r4742, %r4712, %r4712, 18;
	xor.b32  	%r4743, %r4742, %r4712;
	shf.l.wrap.b32 	%r4744, %r4743, %r4743, 27;
	xor.b32  	%r4745, %r4744, %r4712;
	shf.l.wrap.b32 	%r4746, %r4745, %r4745, 26;
	add.s32 	%r4747, %r4741, %r4746;
	add.s32 	%r4748, %r4747, 1747873779;
	add.s32 	%r4749, %r4748, %r4612;
	shf.l.wrap.b32 	%r4750, %r4723, %r4723, 23;
	xor.b32  	%r4751, %r4750, %r4723;
	shf.l.wrap.b32 	%r4752, %r4751, %r4751, 21;
	xor.b32  	%r4753, %r4752, %r4723;
	shf.l.wrap.b32 	%r4754, %r4753, %r4753, 30;
	and.b32  	%r4755, %r4723, %r4686;
	or.b32  	%r4756, %r4723, %r4686;
	and.b32  	%r4757, %r4756, %r4649;
	or.b32  	%r4758, %r4757, %r4755;
	add.s32 	%r4759, %r4754, %r4758;
	add.s32 	%r4760, %r4759, %r4748;
	shf.l.wrap.b32 	%r4761, %r4699, %r4699, 15;
	shf.l.wrap.b32 	%r4762, %r4699, %r4699, 13;
	xor.b32  	%r4763, %r4761, %r4762;
	shr.u32 	%r4764, %r4699, 10;
	xor.b32  	%r4765, %r4763, %r4764;
	shf.l.wrap.b32 	%r4766, %r4218, %r4218, 25;
	shf.l.wrap.b32 	%r4767, %r4218, %r4218, 14;
	xor.b32  	%r4768, %r4766, %r4767;
	shr.u32 	%r4769, %r4218, 3;
	xor.b32  	%r4770, %r4768, %r4769;
	add.s32 	%r4771, %r4770, %r4181;
	add.s32 	%r4772, %r4771, %r4514;
	add.s32 	%r4773, %r4772, %r4765;
	add.s32 	%r4774, %r4773, %r4638;
	xor.b32  	%r4775, %r4712, %r4675;
	and.b32  	%r4776, %r4749, %r4775;
	xor.b32  	%r4777, %r4776, %r4675;
	add.s32 	%r4778, %r4774, %r4777;
	shf.l.wrap.b32 	%r4779, %r4749, %r4749, 18;
	xor.b32  	%r4780, %r4779, %r4749;
	shf.l.wrap.b32 	%r4781, %r4780, %r4780, 27;
	xor.b32  	%r4782, %r4781, %r4749;
	shf.l.wrap.b32 	%r4783, %r4782, %r4782, 26;
	add.s32 	%r4784, %r4778, %r4783;
	add.s32 	%r4785, %r4784, 1955562222;
	add.s32 	%r4786, %r4785, %r4649;
	shf.l.wrap.b32 	%r4787, %r4760, %r4760, 23;
	xor.b32  	%r4788, %r4787, %r4760;
	shf.l.wrap.b32 	%r4789, %r4788, %r4788, 21;
	xor.b32  	%r4790, %r4789, %r4760;
	shf.l.wrap.b32 	%r4791, %r4790, %r4790, 30;
	and.b32  	%r4792, %r4760, %r4723;
	or.b32  	%r4793, %r4760, %r4723;
	and.b32  	%r4794, %r4793, %r4686;
	or.b32  	%r4795, %r4794, %r4792;
	add.s32 	%r4796, %r4791, %r4795;
	add.s32 	%r4797, %r4796, %r4785;
	shf.l.wrap.b32 	%r4798, %r4736, %r4736, 15;
	shf.l.wrap.b32 	%r4799, %r4736, %r4736, 13;
	xor.b32  	%r4800, %r4798, %r4799;
	shr.u32 	%r4801, %r4736, 10;
	xor.b32  	%r4802, %r4800, %r4801;
	shf.l.wrap.b32 	%r4803, %r4255, %r4255, 25;
	shf.l.wrap.b32 	%r4804, %r4255, %r4255, 14;
	xor.b32  	%r4805, %r4803, %r4804;
	shr.u32 	%r4806, %r4255, 3;
	xor.b32  	%r4807, %r4805, %r4806;
	add.s32 	%r4808, %r4807, %r4218;
	add.s32 	%r4809, %r4808, %r4551;
	add.s32 	%r4810, %r4809, %r4802;
	add.s32 	%r4811, %r4810, %r4675;
	xor.b32  	%r4812, %r4749, %r4712;
	and.b32  	%r4813, %r4786, %r4812;
	xor.b32  	%r4814, %r4813, %r4712;
	add.s32 	%r4815, %r4811, %r4814;
	shf.l.wrap.b32 	%r4816, %r4786, %r4786, 18;
	xor.b32  	%r4817, %r4816, %r4786;
	shf.l.wrap.b32 	%r4818, %r4817, %r4817, 27;
	xor.b32  	%r4819, %r4818, %r4786;
	shf.l.wrap.b32 	%r4820, %r4819, %r4819, 26;
	add.s32 	%r4821, %r4815, %r4820;
	add.s32 	%r4822, %r4821, 2024104815;
	add.s32 	%r4823, %r4822, %r4686;
	shf.l.wrap.b32 	%r4824, %r4797, %r4797, 23;
	xor.b32  	%r4825, %r4824, %r4797;
	shf.l.wrap.b32 	%r4826, %r4825, %r4825, 21;
	xor.b32  	%r4827, %r4826, %r4797;
	shf.l.wrap.b32 	%r4828, %r4827, %r4827, 30;
	and.b32  	%r4829, %r4797, %r4760;
	or.b32  	%r4830, %r4797, %r4760;
	and.b32  	%r4831, %r4830, %r4723;
	or.b32  	%r4832, %r4831, %r4829;
	add.s32 	%r4833, %r4828, %r4832;
	add.s32 	%r4834, %r4833, %r4822;
	shf.l.wrap.b32 	%r4835, %r4773, %r4773, 15;
	shf.l.wrap.b32 	%r4836, %r4773, %r4773, 13;
	xor.b32  	%r4837, %r4835, %r4836;
	shr.u32 	%r4838, %r4773, 10;
	xor.b32  	%r4839, %r4837, %r4838;
	shf.l.wrap.b32 	%r4840, %r4292, %r4292, 25;
	shf.l.wrap.b32 	%r4841, %r4292, %r4292, 14;
	xor.b32  	%r4842, %r4840, %r4841;
	shr.u32 	%r4843, %r4292, 3;
	xor.b32  	%r4844, %r4842, %r4843;
	add.s32 	%r4845, %r4844, %r4255;
	add.s32 	%r4846, %r4845, %r4588;
	add.s32 	%r4847, %r4846, %r4839;
	add.s32 	%r4848, %r4847, %r4712;
	xor.b32  	%r4849, %r4786, %r4749;
	and.b32  	%r4850, %r4823, %r4849;
	xor.b32  	%r4851, %r4850, %r4749;
	add.s32 	%r4852, %r4848, %r4851;
	shf.l.wrap.b32 	%r4853, %r4823, %r4823, 18;
	xor.b32  	%r4854, %r4853, %r4823;
	shf.l.wrap.b32 	%r4855, %r4854, %r4854, 27;
	xor.b32  	%r4856, %r4855, %r4823;
	shf.l.wrap.b32 	%r4857, %r4856, %r4856, 26;
	add.s32 	%r4858, %r4852, %r4857;
	add.s32 	%r4859, %r4858, -2067236844;
	add.s32 	%r4860, %r4859, %r4723;
	shf.l.wrap.b32 	%r4861, %r4834, %r4834, 23;
	xor.b32  	%r4862, %r4861, %r4834;
	shf.l.wrap.b32 	%r4863, %r4862, %r4862, 21;
	xor.b32  	%r4864, %r4863, %r4834;
	shf.l.wrap.b32 	%r4865, %r4864, %r4864, 30;
	and.b32  	%r4866, %r4834, %r4797;
	or.b32  	%r4867, %r4834, %r4797;
	and.b32  	%r4868, %r4867, %r4760;
	or.b32  	%r4869, %r4868, %r4866;
	add.s32 	%r4870, %r4865, %r4869;
	add.s32 	%r4871, %r4870, %r4859;
	shf.l.wrap.b32 	%r4872, %r4810, %r4810, 15;
	shf.l.wrap.b32 	%r4873, %r4810, %r4810, 13;
	xor.b32  	%r4874, %r4872, %r4873;
	shr.u32 	%r4875, %r4810, 10;
	xor.b32  	%r4876, %r4874, %r4875;
	shf.l.wrap.b32 	%r4877, %r4329, %r4329, 25;
	shf.l.wrap.b32 	%r4878, %r4329, %r4329, 14;
	xor.b32  	%r4879, %r4877, %r4878;
	shr.u32 	%r4880, %r4329, 3;
	xor.b32  	%r4881, %r4879, %r4880;
	add.s32 	%r4882, %r4881, %r4292;
	add.s32 	%r4883, %r4882, %r4625;
	add.s32 	%r4884, %r4883, %r4876;
	add.s32 	%r4885, %r4884, %r4749;
	xor.b32  	%r4886, %r4823, %r4786;
	and.b32  	%r4887, %r4860, %r4886;
	xor.b32  	%r4888, %r4887, %r4786;
	add.s32 	%r4889, %r4885, %r4888;
	shf.l.wrap.b32 	%r4890, %r4860, %r4860, 18;
	xor.b32  	%r4891, %r4890, %r4860;
	shf.l.wrap.b32 	%r4892, %r4891, %r4891, 27;
	xor.b32  	%r4893, %r4892, %r4860;
	shf.l.wrap.b32 	%r4894, %r4893, %r4893, 26;
	add.s32 	%r4895, %r4889, %r4894;
	add.s32 	%r4896, %r4895, -1933114872;
	add.s32 	%r4897, %r4896, %r4760;
	shf.l.wrap.b32 	%r4898, %r4871, %r4871, 23;
	xor.b32  	%r4899, %r4898, %r4871;
	shf.l.wrap.b32 	%r4900, %r4899, %r4899, 21;
	xor.b32  	%r4901, %r4900, %r4871;
	shf.l.wrap.b32 	%r4902, %r4901, %r4901, 30;
	and.b32  	%r4903, %r4871, %r4834;
	or.b32  	%r4904, %r4871, %r4834;
	and.b32  	%r4905, %r4904, %r4797;
	or.b32  	%r4906, %r4905, %r4903;
	add.s32 	%r4907, %r4902, %r4906;
	add.s32 	%r4908, %r4907, %r4896;
	shf.l.wrap.b32 	%r4909, %r4847, %r4847, 15;
	shf.l.wrap.b32 	%r4910, %r4847, %r4847, 13;
	xor.b32  	%r4911, %r4909, %r4910;
	shr.u32 	%r4912, %r4847, 10;
	xor.b32  	%r4913, %r4911, %r4912;
	shf.l.wrap.b32 	%r4914, %r4366, %r4366, 25;
	shf.l.wrap.b32 	%r4915, %r4366, %r4366, 14;
	xor.b32  	%r4916, %r4914, %r4915;
	shr.u32 	%r4917, %r4366, 3;
	xor.b32  	%r4918, %r4916, %r4917;
	add.s32 	%r4919, %r4918, %r4329;
	add.s32 	%r4920, %r4919, %r4662;
	add.s32 	%r4921, %r4920, %r4913;
	add.s32 	%r4922, %r4921, %r4786;
	xor.b32  	%r4923, %r4860, %r4823;
	and.b32  	%r4924, %r4897, %r4923;
	xor.b32  	%r4925, %r4924, %r4823;
	add.s32 	%r4926, %r4922, %r4925;
	shf.l.wrap.b32 	%r4927, %r4897, %r4897, 18;
	xor.b32  	%r4928, %r4927, %r4897;
	shf.l.wrap.b32 	%r4929, %r4928, %r4928, 27;
	xor.b32  	%r4930, %r4929, %r4897;
	shf.l.wrap.b32 	%r4931, %r4930, %r4930, 26;
	add.s32 	%r4932, %r4926, %r4931;
	add.s32 	%r4933, %r4932, -1866530822;
	add.s32 	%r4934, %r4933, %r4797;
	shf.l.wrap.b32 	%r4935, %r4908, %r4908, 23;
	xor.b32  	%r4936, %r4935, %r4908;
	shf.l.wrap.b32 	%r4937, %r4936, %r4936, 21;
	xor.b32  	%r4938, %r4937, %r4908;
	shf.l.wrap.b32 	%r4939, %r4938, %r4938, 30;
	and.b32  	%r4940, %r4908, %r4871;
	or.b32  	%r4941, %r4908, %r4871;
	and.b32  	%r4942, %r4941, %r4834;
	or.b32  	%r4943, %r4942, %r4940;
	add.s32 	%r4944, %r4939, %r4943;
	add.s32 	%r4945, %r4944, %r4933;
	shf.l.wrap.b32 	%r4946, %r4884, %r4884, 15;
	shf.l.wrap.b32 	%r4947, %r4884, %r4884, 13;
	xor.b32  	%r4948, %r4946, %r4947;
	shr.u32 	%r4949, %r4884, 10;
	xor.b32  	%r4950, %r4948, %r4949;
	shf.l.wrap.b32 	%r4951, %r4403, %r4403, 25;
	shf.l.wrap.b32 	%r4952, %r4403, %r4403, 14;
	xor.b32  	%r4953, %r4951, %r4952;
	shr.u32 	%r4954, %r4403, 3;
	xor.b32  	%r4955, %r4953, %r4954;
	add.s32 	%r4956, %r4955, %r4366;
	add.s32 	%r4957, %r4956, %r4699;
	add.s32 	%r4958, %r4957, %r4950;
	add.s32 	%r4959, %r4958, %r4823;
	xor.b32  	%r4960, %r4897, %r4860;
	and.b32  	%r4961, %r4934, %r4960;
	xor.b32  	%r4962, %r4961, %r4860;
	add.s32 	%r4963, %r4959, %r4962;
	shf.l.wrap.b32 	%r4964, %r4934, %r4934, 18;
	xor.b32  	%r4965, %r4964, %r4934;
	shf.l.wrap.b32 	%r4966, %r4965, %r4965, 27;
	xor.b32  	%r4967, %r4966, %r4934;
	shf.l.wrap.b32 	%r4968, %r4967, %r4967, 26;
	add.s32 	%r4969, %r4963, %r4968;
	add.s32 	%r4970, %r4969, -1538233109;
	add.s32 	%r4971, %r4970, %r4834;
	shf.l.wrap.b32 	%r4972, %r4945, %r4945, 23;
	xor.b32  	%r4973, %r4972, %r4945;
	shf.l.wrap.b32 	%r4974, %r4973, %r4973, 21;
	xor.b32  	%r4975, %r4974, %r4945;
	shf.l.wrap.b32 	%r4976, %r4975, %r4975, 30;
	and.b32  	%r4977, %r4945, %r4908;
	or.b32  	%r4978, %r4945, %r4908;
	and.b32  	%r4979, %r4978, %r4871;
	or.b32  	%r4980, %r4979, %r4977;
	add.s32 	%r4981, %r4976, %r4980;
	add.s32 	%r4982, %r4981, %r4970;
	shf.l.wrap.b32 	%r4983, %r4921, %r4921, 15;
	shf.l.wrap.b32 	%r4984, %r4921, %r4921, 13;
	xor.b32  	%r4985, %r4983, %r4984;
	shr.u32 	%r4986, %r4921, 10;
	xor.b32  	%r4987, %r4985, %r4986;
	shf.l.wrap.b32 	%r4988, %r4440, %r4440, 25;
	shf.l.wrap.b32 	%r4989, %r4440, %r4440, 14;
	xor.b32  	%r4990, %r4988, %r4989;
	shr.u32 	%r4991, %r4440, 3;
	xor.b32  	%r4992, %r4990, %r4991;
	shf.l.wrap.b32 	%r4993, %r4971, %r4971, 18;
	xor.b32  	%r4994, %r4993, %r4971;
	shf.l.wrap.b32 	%r4995, %r4994, %r4994, 27;
	xor.b32  	%r4996, %r4995, %r4971;
	shf.l.wrap.b32 	%r4997, %r4996, %r4996, 26;
	xor.b32  	%r4998, %r4934, %r4897;
	and.b32  	%r4999, %r4971, %r4998;
	xor.b32  	%r5000, %r4999, %r4897;
	add.s32 	%r5001, %r4403, %r4992;
	add.s32 	%r5002, %r5001, %r4736;
	add.s32 	%r5003, %r5002, %r4987;
	add.s32 	%r5004, %r5003, %r4860;
	add.s32 	%r5005, %r5004, %r5000;
	add.s32 	%r5006, %r5005, %r4997;
	add.s32 	%r5007, %r5006, -1090935817;
	add.s32 	%r5008, %r5007, %r4871;
	shf.l.wrap.b32 	%r5009, %r4982, %r4982, 23;
	xor.b32  	%r5010, %r5009, %r4982;
	shf.l.wrap.b32 	%r5011, %r5010, %r5010, 21;
	xor.b32  	%r5012, %r5011, %r4982;
	shf.l.wrap.b32 	%r5013, %r5012, %r5012, 30;
	and.b32  	%r5014, %r4982, %r4945;
	or.b32  	%r5015, %r4982, %r4945;
	and.b32  	%r5016, %r5015, %r4908;
	or.b32  	%r5017, %r5016, %r5014;
	add.s32 	%r5018, %r5013, %r5017;
	add.s32 	%r5019, %r5018, %r5007;
	shf.l.wrap.b32 	%r5020, %r4958, %r4958, 15;
	shf.l.wrap.b32 	%r5021, %r4958, %r4958, 13;
	xor.b32  	%r5022, %r5020, %r5021;
	shr.u32 	%r5023, %r4958, 10;
	xor.b32  	%r5024, %r5022, %r5023;
	shf.l.wrap.b32 	%r5025, %r4477, %r4477, 25;
	shf.l.wrap.b32 	%r5026, %r4477, %r4477, 14;
	xor.b32  	%r5027, %r5025, %r5026;
	shr.u32 	%r5028, %r4477, 3;
	xor.b32  	%r5029, %r5027, %r5028;
	shf.l.wrap.b32 	%r5030, %r5008, %r5008, 18;
	xor.b32  	%r5031, %r5030, %r5008;
	shf.l.wrap.b32 	%r5032, %r5031, %r5031, 27;
	xor.b32  	%r5033, %r5032, %r5008;
	shf.l.wrap.b32 	%r5034, %r5033, %r5033, 26;
	xor.b32  	%r5035, %r4971, %r4934;
	and.b32  	%r5036, %r5008, %r5035;
	xor.b32  	%r5037, %r5036, %r4934;
	add.s32 	%r5038, %r4440, %r5029;
	add.s32 	%r5039, %r5038, %r4773;
	add.s32 	%r5040, %r5039, %r5024;
	add.s32 	%r5041, %r5040, %r4897;
	add.s32 	%r5042, %r5041, %r5037;
	add.s32 	%r5043, %r5042, %r5034;
	add.s32 	%r5044, %r5043, -965641998;
	shf.l.wrap.b32 	%r5045, %r5019, %r5019, 23;
	xor.b32  	%r5046, %r5045, %r5019;
	shf.l.wrap.b32 	%r5047, %r5046, %r5046, 21;
	xor.b32  	%r5048, %r5047, %r5019;
	shf.l.wrap.b32 	%r5049, %r5048, %r5048, 30;
	and.b32  	%r5050, %r5019, %r4982;
	or.b32  	%r5051, %r5019, %r4982;
	and.b32  	%r5052, %r5051, %r4945;
	or.b32  	%r5053, %r5052, %r5050;
	add.s32 	%r5054, %r5053, %r2907;
	add.s32 	%r5055, %r5054, %r5049;
	add.s32 	%r5056, %r5055, %r5044;
	st.local.u32 	[%rd5+4], %r5056;
	add.s32 	%r5057, %r5019, %r2913;
	st.local.u32 	[%rd5+8], %r5057;
	add.s32 	%r5058, %r4982, %r2916;
	st.local.u32 	[%rd5+12], %r5058;
	add.s32 	%r5059, %r4945, %r2905;
	st.local.u32 	[%rd5+16], %r5059;
	add.s32 	%r5060, %r4908, %r2891;
	add.s32 	%r5061, %r5060, %r5044;
	st.local.u32 	[%rd5+20], %r5061;
	add.s32 	%r5062, %r5008, %r2899;
	st.local.u32 	[%rd5+24], %r5062;
	add.s32 	%r5063, %r4971, %r2898;
	st.local.u32 	[%rd5+28], %r5063;
	add.s32 	%r5064, %r4934, %r2889;
	st.local.u32 	[%rd5+32], %r5064;
	cvt.u64.u32 	%rd177, %r95;
	add.s64 	%rd255, %rd222, %rd177;
	add.u64 	%rd178, %SP, 80;
	add.s64 	%rd254, %rd178, %rd177;
	sub.s32 	%r17037, %r17037, %r95;
	mov.u32 	%r17018, 0;

$L__BB6_34:
	setp.lt.u32 	%p29, %r17037, 64;
	@%p29 bra 	$L__BB6_39;

$L__BB6_35:
	and.b64  	%rd179, %rd254, 3;
	setp.eq.s64 	%p30, %rd179, 0;
	@%p30 bra 	$L__BB6_37;

	ld.local.u8 	%r5065, [%rd255];
	shl.b32 	%r5066, %r5065, 24;
	ld.local.u8 	%r5067, [%rd255+1];
	shl.b32 	%r5068, %r5067, 16;
	or.b32  	%r5069, %r5068, %r5066;
	ld.local.u8 	%rs101, [%rd255+2];
	mul.wide.u16 	%r5070, %rs101, 256;
	or.b32  	%r5071, %r5069, %r5070;
	ld.local.u8 	%r5072, [%rd255+3];
	or.b32  	%r17036, %r5071, %r5072;
	ld.local.u8 	%r5073, [%rd255+4];
	shl.b32 	%r5074, %r5073, 24;
	ld.local.u8 	%r5075, [%rd255+5];
	shl.b32 	%r5076, %r5075, 16;
	or.b32  	%r5077, %r5076, %r5074;
	ld.local.u8 	%rs102, [%rd255+6];
	mul.wide.u16 	%r5078, %rs102, 256;
	or.b32  	%r5079, %r5077, %r5078;
	ld.local.u8 	%r5080, [%rd255+7];
	or.b32  	%r17035, %r5079, %r5080;
	ld.local.u8 	%r5081, [%rd255+8];
	shl.b32 	%r5082, %r5081, 24;
	ld.local.u8 	%r5083, [%rd255+9];
	shl.b32 	%r5084, %r5083, 16;
	or.b32  	%r5085, %r5084, %r5082;
	ld.local.u8 	%rs103, [%rd255+10];
	mul.wide.u16 	%r5086, %rs103, 256;
	or.b32  	%r5087, %r5085, %r5086;
	ld.local.u8 	%r5088, [%rd255+11];
	or.b32  	%r17034, %r5087, %r5088;
	ld.local.u8 	%r5089, [%rd255+12];
	shl.b32 	%r5090, %r5089, 24;
	ld.local.u8 	%r5091, [%rd255+13];
	shl.b32 	%r5092, %r5091, 16;
	or.b32  	%r5093, %r5092, %r5090;
	ld.local.u8 	%rs104, [%rd255+14];
	mul.wide.u16 	%r5094, %rs104, 256;
	or.b32  	%r5095, %r5093, %r5094;
	ld.local.u8 	%r5096, [%rd255+15];
	or.b32  	%r17033, %r5095, %r5096;
	ld.local.u8 	%r5097, [%rd255+16];
	shl.b32 	%r5098, %r5097, 24;
	ld.local.u8 	%r5099, [%rd255+17];
	shl.b32 	%r5100, %r5099, 16;
	or.b32  	%r5101, %r5100, %r5098;
	ld.local.u8 	%rs105, [%rd255+18];
	mul.wide.u16 	%r5102, %rs105, 256;
	or.b32  	%r5103, %r5101, %r5102;
	ld.local.u8 	%r5104, [%rd255+19];
	or.b32  	%r17032, %r5103, %r5104;
	ld.local.u8 	%r5105, [%rd255+20];
	shl.b32 	%r5106, %r5105, 24;
	ld.local.u8 	%r5107, [%rd255+21];
	shl.b32 	%r5108, %r5107, 16;
	or.b32  	%r5109, %r5108, %r5106;
	ld.local.u8 	%rs106, [%rd255+22];
	mul.wide.u16 	%r5110, %rs106, 256;
	or.b32  	%r5111, %r5109, %r5110;
	ld.local.u8 	%r5112, [%rd255+23];
	or.b32  	%r17031, %r5111, %r5112;
	ld.local.u8 	%r5113, [%rd255+24];
	shl.b32 	%r5114, %r5113, 24;
	ld.local.u8 	%r5115, [%rd255+25];
	shl.b32 	%r5116, %r5115, 16;
	or.b32  	%r5117, %r5116, %r5114;
	ld.local.u8 	%rs107, [%rd255+26];
	mul.wide.u16 	%r5118, %rs107, 256;
	or.b32  	%r5119, %r5117, %r5118;
	ld.local.u8 	%r5120, [%rd255+27];
	or.b32  	%r17030, %r5119, %r5120;
	ld.local.u8 	%r5121, [%rd255+28];
	shl.b32 	%r5122, %r5121, 24;
	ld.local.u8 	%r5123, [%rd255+29];
	shl.b32 	%r5124, %r5123, 16;
	or.b32  	%r5125, %r5124, %r5122;
	ld.local.u8 	%rs108, [%rd255+30];
	mul.wide.u16 	%r5126, %rs108, 256;
	or.b32  	%r5127, %r5125, %r5126;
	ld.local.u8 	%r5128, [%rd255+31];
	or.b32  	%r17029, %r5127, %r5128;
	ld.local.u8 	%r5129, [%rd255+32];
	shl.b32 	%r5130, %r5129, 24;
	ld.local.u8 	%r5131, [%rd255+33];
	shl.b32 	%r5132, %r5131, 16;
	or.b32  	%r5133, %r5132, %r5130;
	ld.local.u8 	%rs109, [%rd255+34];
	mul.wide.u16 	%r5134, %rs109, 256;
	or.b32  	%r5135, %r5133, %r5134;
	ld.local.u8 	%r5136, [%rd255+35];
	or.b32  	%r17028, %r5135, %r5136;
	ld.local.u8 	%r5137, [%rd255+36];
	shl.b32 	%r5138, %r5137, 24;
	ld.local.u8 	%r5139, [%rd255+37];
	shl.b32 	%r5140, %r5139, 16;
	or.b32  	%r5141, %r5140, %r5138;
	ld.local.u8 	%rs110, [%rd255+38];
	mul.wide.u16 	%r5142, %rs110, 256;
	or.b32  	%r5143, %r5141, %r5142;
	ld.local.u8 	%r5144, [%rd255+39];
	or.b32  	%r17027, %r5143, %r5144;
	ld.local.u8 	%r5145, [%rd255+40];
	shl.b32 	%r5146, %r5145, 24;
	ld.local.u8 	%r5147, [%rd255+41];
	shl.b32 	%r5148, %r5147, 16;
	or.b32  	%r5149, %r5148, %r5146;
	ld.local.u8 	%rs111, [%rd255+42];
	mul.wide.u16 	%r5150, %rs111, 256;
	or.b32  	%r5151, %r5149, %r5150;
	ld.local.u8 	%r5152, [%rd255+43];
	or.b32  	%r17026, %r5151, %r5152;
	ld.local.u8 	%r5153, [%rd255+44];
	shl.b32 	%r5154, %r5153, 24;
	ld.local.u8 	%r5155, [%rd255+45];
	shl.b32 	%r5156, %r5155, 16;
	or.b32  	%r5157, %r5156, %r5154;
	ld.local.u8 	%rs112, [%rd255+46];
	mul.wide.u16 	%r5158, %rs112, 256;
	or.b32  	%r5159, %r5157, %r5158;
	ld.local.u8 	%r5160, [%rd255+47];
	or.b32  	%r17025, %r5159, %r5160;
	ld.local.u8 	%r5161, [%rd255+48];
	shl.b32 	%r5162, %r5161, 24;
	ld.local.u8 	%r5163, [%rd255+49];
	shl.b32 	%r5164, %r5163, 16;
	or.b32  	%r5165, %r5164, %r5162;
	ld.local.u8 	%rs113, [%rd255+50];
	mul.wide.u16 	%r5166, %rs113, 256;
	or.b32  	%r5167, %r5165, %r5166;
	ld.local.u8 	%r5168, [%rd255+51];
	or.b32  	%r17024, %r5167, %r5168;
	ld.local.u8 	%r5169, [%rd255+52];
	shl.b32 	%r5170, %r5169, 24;
	ld.local.u8 	%r5171, [%rd255+53];
	shl.b32 	%r5172, %r5171, 16;
	or.b32  	%r5173, %r5172, %r5170;
	ld.local.u8 	%rs114, [%rd255+54];
	mul.wide.u16 	%r5174, %rs114, 256;
	or.b32  	%r5175, %r5173, %r5174;
	ld.local.u8 	%r5176, [%rd255+55];
	or.b32  	%r17023, %r5175, %r5176;
	ld.local.u8 	%r5177, [%rd255+56];
	shl.b32 	%r5178, %r5177, 24;
	ld.local.u8 	%r5179, [%rd255+57];
	shl.b32 	%r5180, %r5179, 16;
	or.b32  	%r5181, %r5180, %r5178;
	ld.local.u8 	%rs115, [%rd255+58];
	mul.wide.u16 	%r5182, %rs115, 256;
	or.b32  	%r5183, %r5181, %r5182;
	ld.local.u8 	%r5184, [%rd255+59];
	or.b32  	%r17022, %r5183, %r5184;
	ld.local.u8 	%r5185, [%rd255+60];
	shl.b32 	%r5186, %r5185, 24;
	ld.local.u8 	%r5187, [%rd255+61];
	shl.b32 	%r5188, %r5187, 16;
	or.b32  	%r5189, %r5188, %r5186;
	ld.local.u8 	%rs116, [%rd255+62];
	mul.wide.u16 	%r5190, %rs116, 256;
	or.b32  	%r5191, %r5189, %r5190;
	ld.local.u8 	%r5192, [%rd255+63];
	or.b32  	%r17021, %r5191, %r5192;
	bra.uni 	$L__BB6_38;

$L__BB6_37:
	ld.local.u32 	%r5193, [%rd255];
	shf.l.wrap.b32 	%r5194, %r5193, %r5193, 16;
	shl.b32 	%r5195, %r5194, 8;
	and.b32  	%r5196, %r5195, -16711936;
	shr.u32 	%r5197, %r5194, 8;
	and.b32  	%r5198, %r5197, 16711935;
	or.b32  	%r17036, %r5196, %r5198;
	ld.local.u32 	%r5199, [%rd255+4];
	shf.l.wrap.b32 	%r5200, %r5199, %r5199, 16;
	shl.b32 	%r5201, %r5200, 8;
	and.b32  	%r5202, %r5201, -16711936;
	shr.u32 	%r5203, %r5200, 8;
	and.b32  	%r5204, %r5203, 16711935;
	or.b32  	%r17035, %r5202, %r5204;
	ld.local.u32 	%r5205, [%rd255+8];
	shf.l.wrap.b32 	%r5206, %r5205, %r5205, 16;
	shl.b32 	%r5207, %r5206, 8;
	and.b32  	%r5208, %r5207, -16711936;
	shr.u32 	%r5209, %r5206, 8;
	and.b32  	%r5210, %r5209, 16711935;
	or.b32  	%r17034, %r5208, %r5210;
	ld.local.u32 	%r5211, [%rd255+12];
	shf.l.wrap.b32 	%r5212, %r5211, %r5211, 16;
	shl.b32 	%r5213, %r5212, 8;
	and.b32  	%r5214, %r5213, -16711936;
	shr.u32 	%r5215, %r5212, 8;
	and.b32  	%r5216, %r5215, 16711935;
	or.b32  	%r17033, %r5214, %r5216;
	ld.local.u32 	%r5217, [%rd255+16];
	shf.l.wrap.b32 	%r5218, %r5217, %r5217, 16;
	shl.b32 	%r5219, %r5218, 8;
	and.b32  	%r5220, %r5219, -16711936;
	shr.u32 	%r5221, %r5218, 8;
	and.b32  	%r5222, %r5221, 16711935;
	or.b32  	%r17032, %r5220, %r5222;
	ld.local.u32 	%r5223, [%rd255+20];
	shf.l.wrap.b32 	%r5224, %r5223, %r5223, 16;
	shl.b32 	%r5225, %r5224, 8;
	and.b32  	%r5226, %r5225, -16711936;
	shr.u32 	%r5227, %r5224, 8;
	and.b32  	%r5228, %r5227, 16711935;
	or.b32  	%r17031, %r5226, %r5228;
	ld.local.u32 	%r5229, [%rd255+24];
	shf.l.wrap.b32 	%r5230, %r5229, %r5229, 16;
	shl.b32 	%r5231, %r5230, 8;
	and.b32  	%r5232, %r5231, -16711936;
	shr.u32 	%r5233, %r5230, 8;
	and.b32  	%r5234, %r5233, 16711935;
	or.b32  	%r17030, %r5232, %r5234;
	ld.local.u32 	%r5235, [%rd255+28];
	shf.l.wrap.b32 	%r5236, %r5235, %r5235, 16;
	shl.b32 	%r5237, %r5236, 8;
	and.b32  	%r5238, %r5237, -16711936;
	shr.u32 	%r5239, %r5236, 8;
	and.b32  	%r5240, %r5239, 16711935;
	or.b32  	%r17029, %r5238, %r5240;
	ld.local.u32 	%r5241, [%rd255+32];
	shf.l.wrap.b32 	%r5242, %r5241, %r5241, 16;
	shl.b32 	%r5243, %r5242, 8;
	and.b32  	%r5244, %r5243, -16711936;
	shr.u32 	%r5245, %r5242, 8;
	and.b32  	%r5246, %r5245, 16711935;
	or.b32  	%r17028, %r5244, %r5246;
	ld.local.u32 	%r5247, [%rd255+36];
	shf.l.wrap.b32 	%r5248, %r5247, %r5247, 16;
	shl.b32 	%r5249, %r5248, 8;
	and.b32  	%r5250, %r5249, -16711936;
	shr.u32 	%r5251, %r5248, 8;
	and.b32  	%r5252, %r5251, 16711935;
	or.b32  	%r17027, %r5250, %r5252;
	ld.local.u32 	%r5253, [%rd255+40];
	shf.l.wrap.b32 	%r5254, %r5253, %r5253, 16;
	shl.b32 	%r5255, %r5254, 8;
	and.b32  	%r5256, %r5255, -16711936;
	shr.u32 	%r5257, %r5254, 8;
	and.b32  	%r5258, %r5257, 16711935;
	or.b32  	%r17026, %r5256, %r5258;
	ld.local.u32 	%r5259, [%rd255+44];
	shf.l.wrap.b32 	%r5260, %r5259, %r5259, 16;
	shl.b32 	%r5261, %r5260, 8;
	and.b32  	%r5262, %r5261, -16711936;
	shr.u32 	%r5263, %r5260, 8;
	and.b32  	%r5264, %r5263, 16711935;
	or.b32  	%r17025, %r5262, %r5264;
	ld.local.u32 	%r5265, [%rd255+48];
	shf.l.wrap.b32 	%r5266, %r5265, %r5265, 16;
	shl.b32 	%r5267, %r5266, 8;
	and.b32  	%r5268, %r5267, -16711936;
	shr.u32 	%r5269, %r5266, 8;
	and.b32  	%r5270, %r5269, 16711935;
	or.b32  	%r17024, %r5268, %r5270;
	ld.local.u32 	%r5271, [%rd255+52];
	shf.l.wrap.b32 	%r5272, %r5271, %r5271, 16;
	shl.b32 	%r5273, %r5272, 8;
	and.b32  	%r5274, %r5273, -16711936;
	shr.u32 	%r5275, %r5272, 8;
	and.b32  	%r5276, %r5275, 16711935;
	or.b32  	%r17023, %r5274, %r5276;
	ld.local.u32 	%r5277, [%rd255+56];
	shf.l.wrap.b32 	%r5278, %r5277, %r5277, 16;
	shl.b32 	%r5279, %r5278, 8;
	and.b32  	%r5280, %r5279, -16711936;
	shr.u32 	%r5281, %r5278, 8;
	and.b32  	%r5282, %r5281, 16711935;
	or.b32  	%r17022, %r5280, %r5282;
	ld.local.u32 	%r5283, [%rd255+60];
	shf.l.wrap.b32 	%r5284, %r5283, %r5283, 16;
	shl.b32 	%r5285, %r5284, 8;
	and.b32  	%r5286, %r5285, -16711936;
	shr.u32 	%r5287, %r5284, 8;
	and.b32  	%r5288, %r5287, 16711935;
	or.b32  	%r17021, %r5286, %r5288;

$L__BB6_38:
	ld.local.u32 	%r5289, [%rd5+32];
	add.s32 	%r5290, %r17036, %r5289;
	ld.local.u32 	%r5291, [%rd5+20];
	shf.l.wrap.b32 	%r5292, %r5291, %r5291, 18;
	xor.b32  	%r5293, %r5292, %r5291;
	shf.l.wrap.b32 	%r5294, %r5293, %r5293, 27;
	xor.b32  	%r5295, %r5294, %r5291;
	shf.l.wrap.b32 	%r5296, %r5295, %r5295, 26;
	add.s32 	%r5297, %r5290, %r5296;
	ld.local.u32 	%r5298, [%rd5+28];
	ld.local.u32 	%r5299, [%rd5+24];
	xor.b32  	%r5300, %r5298, %r5299;
	and.b32  	%r5301, %r5300, %r5291;
	xor.b32  	%r5302, %r5301, %r5298;
	add.s32 	%r5303, %r5297, %r5302;
	add.s32 	%r5304, %r5303, 1116352408;
	ld.local.u32 	%r5305, [%rd5+16];
	add.s32 	%r5306, %r5304, %r5305;
	ld.local.u32 	%r5307, [%rd5+4];
	shf.l.wrap.b32 	%r5308, %r5307, %r5307, 23;
	xor.b32  	%r5309, %r5308, %r5307;
	shf.l.wrap.b32 	%r5310, %r5309, %r5309, 21;
	xor.b32  	%r5311, %r5310, %r5307;
	shf.l.wrap.b32 	%r5312, %r5311, %r5311, 30;
	ld.local.u32 	%r5313, [%rd5+8];
	and.b32  	%r5314, %r5313, %r5307;
	or.b32  	%r5315, %r5313, %r5307;
	ld.local.u32 	%r5316, [%rd5+12];
	and.b32  	%r5317, %r5316, %r5315;
	or.b32  	%r5318, %r5317, %r5314;
	add.s32 	%r5319, %r5312, %r5318;
	add.s32 	%r5320, %r5319, %r5304;
	add.s32 	%r5321, %r17035, %r5298;
	xor.b32  	%r5322, %r5299, %r5291;
	and.b32  	%r5323, %r5306, %r5322;
	xor.b32  	%r5324, %r5323, %r5299;
	add.s32 	%r5325, %r5321, %r5324;
	shf.l.wrap.b32 	%r5326, %r5306, %r5306, 18;
	xor.b32  	%r5327, %r5326, %r5306;
	shf.l.wrap.b32 	%r5328, %r5327, %r5327, 27;
	xor.b32  	%r5329, %r5328, %r5306;
	shf.l.wrap.b32 	%r5330, %r5329, %r5329, 26;
	add.s32 	%r5331, %r5325, %r5330;
	add.s32 	%r5332, %r5331, 1899447441;
	add.s32 	%r5333, %r5332, %r5316;
	shf.l.wrap.b32 	%r5334, %r5320, %r5320, 23;
	xor.b32  	%r5335, %r5334, %r5320;
	shf.l.wrap.b32 	%r5336, %r5335, %r5335, 21;
	xor.b32  	%r5337, %r5336, %r5320;
	shf.l.wrap.b32 	%r5338, %r5337, %r5337, 30;
	and.b32  	%r5339, %r5320, %r5307;
	or.b32  	%r5340, %r5320, %r5307;
	and.b32  	%r5341, %r5340, %r5313;
	or.b32  	%r5342, %r5341, %r5339;
	add.s32 	%r5343, %r5338, %r5342;
	add.s32 	%r5344, %r5343, %r5332;
	add.s32 	%r5345, %r17034, %r5299;
	xor.b32  	%r5346, %r5306, %r5291;
	and.b32  	%r5347, %r5333, %r5346;
	xor.b32  	%r5348, %r5347, %r5291;
	add.s32 	%r5349, %r5345, %r5348;
	shf.l.wrap.b32 	%r5350, %r5333, %r5333, 18;
	xor.b32  	%r5351, %r5350, %r5333;
	shf.l.wrap.b32 	%r5352, %r5351, %r5351, 27;
	xor.b32  	%r5353, %r5352, %r5333;
	shf.l.wrap.b32 	%r5354, %r5353, %r5353, 26;
	add.s32 	%r5355, %r5349, %r5354;
	add.s32 	%r5356, %r5355, -1245643825;
	add.s32 	%r5357, %r5356, %r5313;
	shf.l.wrap.b32 	%r5358, %r5344, %r5344, 23;
	xor.b32  	%r5359, %r5358, %r5344;
	shf.l.wrap.b32 	%r5360, %r5359, %r5359, 21;
	xor.b32  	%r5361, %r5360, %r5344;
	shf.l.wrap.b32 	%r5362, %r5361, %r5361, 30;
	and.b32  	%r5363, %r5344, %r5320;
	or.b32  	%r5364, %r5344, %r5320;
	and.b32  	%r5365, %r5364, %r5307;
	or.b32  	%r5366, %r5365, %r5363;
	add.s32 	%r5367, %r5362, %r5366;
	add.s32 	%r5368, %r5367, %r5356;
	add.s32 	%r5369, %r17033, %r5291;
	xor.b32  	%r5370, %r5333, %r5306;
	and.b32  	%r5371, %r5357, %r5370;
	xor.b32  	%r5372, %r5371, %r5306;
	add.s32 	%r5373, %r5369, %r5372;
	shf.l.wrap.b32 	%r5374, %r5357, %r5357, 18;
	xor.b32  	%r5375, %r5374, %r5357;
	shf.l.wrap.b32 	%r5376, %r5375, %r5375, 27;
	xor.b32  	%r5377, %r5376, %r5357;
	shf.l.wrap.b32 	%r5378, %r5377, %r5377, 26;
	add.s32 	%r5379, %r5373, %r5378;
	add.s32 	%r5380, %r5379, -373957723;
	add.s32 	%r5381, %r5380, %r5307;
	shf.l.wrap.b32 	%r5382, %r5368, %r5368, 23;
	xor.b32  	%r5383, %r5382, %r5368;
	shf.l.wrap.b32 	%r5384, %r5383, %r5383, 21;
	xor.b32  	%r5385, %r5384, %r5368;
	shf.l.wrap.b32 	%r5386, %r5385, %r5385, 30;
	and.b32  	%r5387, %r5368, %r5344;
	or.b32  	%r5388, %r5368, %r5344;
	and.b32  	%r5389, %r5388, %r5320;
	or.b32  	%r5390, %r5389, %r5387;
	add.s32 	%r5391, %r5386, %r5390;
	add.s32 	%r5392, %r5391, %r5380;
	add.s32 	%r5393, %r17032, %r5306;
	xor.b32  	%r5394, %r5357, %r5333;
	and.b32  	%r5395, %r5381, %r5394;
	xor.b32  	%r5396, %r5395, %r5333;
	add.s32 	%r5397, %r5393, %r5396;
	shf.l.wrap.b32 	%r5398, %r5381, %r5381, 18;
	xor.b32  	%r5399, %r5398, %r5381;
	shf.l.wrap.b32 	%r5400, %r5399, %r5399, 27;
	xor.b32  	%r5401, %r5400, %r5381;
	shf.l.wrap.b32 	%r5402, %r5401, %r5401, 26;
	add.s32 	%r5403, %r5397, %r5402;
	add.s32 	%r5404, %r5403, 961987163;
	add.s32 	%r5405, %r5404, %r5320;
	shf.l.wrap.b32 	%r5406, %r5392, %r5392, 23;
	xor.b32  	%r5407, %r5406, %r5392;
	shf.l.wrap.b32 	%r5408, %r5407, %r5407, 21;
	xor.b32  	%r5409, %r5408, %r5392;
	shf.l.wrap.b32 	%r5410, %r5409, %r5409, 30;
	and.b32  	%r5411, %r5392, %r5368;
	or.b32  	%r5412, %r5392, %r5368;
	and.b32  	%r5413, %r5412, %r5344;
	or.b32  	%r5414, %r5413, %r5411;
	add.s32 	%r5415, %r5410, %r5414;
	add.s32 	%r5416, %r5415, %r5404;
	add.s32 	%r5417, %r17031, %r5333;
	xor.b32  	%r5418, %r5381, %r5357;
	and.b32  	%r5419, %r5405, %r5418;
	xor.b32  	%r5420, %r5419, %r5357;
	add.s32 	%r5421, %r5417, %r5420;
	shf.l.wrap.b32 	%r5422, %r5405, %r5405, 18;
	xor.b32  	%r5423, %r5422, %r5405;
	shf.l.wrap.b32 	%r5424, %r5423, %r5423, 27;
	xor.b32  	%r5425, %r5424, %r5405;
	shf.l.wrap.b32 	%r5426, %r5425, %r5425, 26;
	add.s32 	%r5427, %r5421, %r5426;
	add.s32 	%r5428, %r5427, 1508970993;
	add.s32 	%r5429, %r5428, %r5344;
	shf.l.wrap.b32 	%r5430, %r5416, %r5416, 23;
	xor.b32  	%r5431, %r5430, %r5416;
	shf.l.wrap.b32 	%r5432, %r5431, %r5431, 21;
	xor.b32  	%r5433, %r5432, %r5416;
	shf.l.wrap.b32 	%r5434, %r5433, %r5433, 30;
	and.b32  	%r5435, %r5416, %r5392;
	or.b32  	%r5436, %r5416, %r5392;
	and.b32  	%r5437, %r5436, %r5368;
	or.b32  	%r5438, %r5437, %r5435;
	add.s32 	%r5439, %r5434, %r5438;
	add.s32 	%r5440, %r5439, %r5428;
	add.s32 	%r5441, %r17030, %r5357;
	xor.b32  	%r5442, %r5405, %r5381;
	and.b32  	%r5443, %r5429, %r5442;
	xor.b32  	%r5444, %r5443, %r5381;
	add.s32 	%r5445, %r5441, %r5444;
	shf.l.wrap.b32 	%r5446, %r5429, %r5429, 18;
	xor.b32  	%r5447, %r5446, %r5429;
	shf.l.wrap.b32 	%r5448, %r5447, %r5447, 27;
	xor.b32  	%r5449, %r5448, %r5429;
	shf.l.wrap.b32 	%r5450, %r5449, %r5449, 26;
	add.s32 	%r5451, %r5445, %r5450;
	add.s32 	%r5452, %r5451, -1841331548;
	add.s32 	%r5453, %r5452, %r5368;
	shf.l.wrap.b32 	%r5454, %r5440, %r5440, 23;
	xor.b32  	%r5455, %r5454, %r5440;
	shf.l.wrap.b32 	%r5456, %r5455, %r5455, 21;
	xor.b32  	%r5457, %r5456, %r5440;
	shf.l.wrap.b32 	%r5458, %r5457, %r5457, 30;
	and.b32  	%r5459, %r5440, %r5416;
	or.b32  	%r5460, %r5440, %r5416;
	and.b32  	%r5461, %r5460, %r5392;
	or.b32  	%r5462, %r5461, %r5459;
	add.s32 	%r5463, %r5458, %r5462;
	add.s32 	%r5464, %r5463, %r5452;
	add.s32 	%r5465, %r17029, %r5381;
	xor.b32  	%r5466, %r5429, %r5405;
	and.b32  	%r5467, %r5453, %r5466;
	xor.b32  	%r5468, %r5467, %r5405;
	add.s32 	%r5469, %r5465, %r5468;
	shf.l.wrap.b32 	%r5470, %r5453, %r5453, 18;
	xor.b32  	%r5471, %r5470, %r5453;
	shf.l.wrap.b32 	%r5472, %r5471, %r5471, 27;
	xor.b32  	%r5473, %r5472, %r5453;
	shf.l.wrap.b32 	%r5474, %r5473, %r5473, 26;
	add.s32 	%r5475, %r5469, %r5474;
	add.s32 	%r5476, %r5475, -1424204075;
	add.s32 	%r5477, %r5476, %r5392;
	shf.l.wrap.b32 	%r5478, %r5464, %r5464, 23;
	xor.b32  	%r5479, %r5478, %r5464;
	shf.l.wrap.b32 	%r5480, %r5479, %r5479, 21;
	xor.b32  	%r5481, %r5480, %r5464;
	shf.l.wrap.b32 	%r5482, %r5481, %r5481, 30;
	and.b32  	%r5483, %r5464, %r5440;
	or.b32  	%r5484, %r5464, %r5440;
	and.b32  	%r5485, %r5484, %r5416;
	or.b32  	%r5486, %r5485, %r5483;
	add.s32 	%r5487, %r5482, %r5486;
	add.s32 	%r5488, %r5487, %r5476;
	add.s32 	%r5489, %r17028, %r5405;
	xor.b32  	%r5490, %r5453, %r5429;
	and.b32  	%r5491, %r5477, %r5490;
	xor.b32  	%r5492, %r5491, %r5429;
	add.s32 	%r5493, %r5489, %r5492;
	shf.l.wrap.b32 	%r5494, %r5477, %r5477, 18;
	xor.b32  	%r5495, %r5494, %r5477;
	shf.l.wrap.b32 	%r5496, %r5495, %r5495, 27;
	xor.b32  	%r5497, %r5496, %r5477;
	shf.l.wrap.b32 	%r5498, %r5497, %r5497, 26;
	add.s32 	%r5499, %r5493, %r5498;
	add.s32 	%r5500, %r5499, -670586216;
	add.s32 	%r5501, %r5500, %r5416;
	shf.l.wrap.b32 	%r5502, %r5488, %r5488, 23;
	xor.b32  	%r5503, %r5502, %r5488;
	shf.l.wrap.b32 	%r5504, %r5503, %r5503, 21;
	xor.b32  	%r5505, %r5504, %r5488;
	shf.l.wrap.b32 	%r5506, %r5505, %r5505, 30;
	and.b32  	%r5507, %r5488, %r5464;
	or.b32  	%r5508, %r5488, %r5464;
	and.b32  	%r5509, %r5508, %r5440;
	or.b32  	%r5510, %r5509, %r5507;
	add.s32 	%r5511, %r5506, %r5510;
	add.s32 	%r5512, %r5511, %r5500;
	add.s32 	%r5513, %r17027, %r5429;
	xor.b32  	%r5514, %r5477, %r5453;
	and.b32  	%r5515, %r5501, %r5514;
	xor.b32  	%r5516, %r5515, %r5453;
	add.s32 	%r5517, %r5513, %r5516;
	shf.l.wrap.b32 	%r5518, %r5501, %r5501, 18;
	xor.b32  	%r5519, %r5518, %r5501;
	shf.l.wrap.b32 	%r5520, %r5519, %r5519, 27;
	xor.b32  	%r5521, %r5520, %r5501;
	shf.l.wrap.b32 	%r5522, %r5521, %r5521, 26;
	add.s32 	%r5523, %r5517, %r5522;
	add.s32 	%r5524, %r5523, 310598401;
	add.s32 	%r5525, %r5524, %r5440;
	shf.l.wrap.b32 	%r5526, %r5512, %r5512, 23;
	xor.b32  	%r5527, %r5526, %r5512;
	shf.l.wrap.b32 	%r5528, %r5527, %r5527, 21;
	xor.b32  	%r5529, %r5528, %r5512;
	shf.l.wrap.b32 	%r5530, %r5529, %r5529, 30;
	and.b32  	%r5531, %r5512, %r5488;
	or.b32  	%r5532, %r5512, %r5488;
	and.b32  	%r5533, %r5532, %r5464;
	or.b32  	%r5534, %r5533, %r5531;
	add.s32 	%r5535, %r5530, %r5534;
	add.s32 	%r5536, %r5535, %r5524;
	add.s32 	%r5537, %r17026, %r5453;
	xor.b32  	%r5538, %r5501, %r5477;
	and.b32  	%r5539, %r5525, %r5538;
	xor.b32  	%r5540, %r5539, %r5477;
	add.s32 	%r5541, %r5537, %r5540;
	shf.l.wrap.b32 	%r5542, %r5525, %r5525, 18;
	xor.b32  	%r5543, %r5542, %r5525;
	shf.l.wrap.b32 	%r5544, %r5543, %r5543, 27;
	xor.b32  	%r5545, %r5544, %r5525;
	shf.l.wrap.b32 	%r5546, %r5545, %r5545, 26;
	add.s32 	%r5547, %r5541, %r5546;
	add.s32 	%r5548, %r5547, 607225278;
	add.s32 	%r5549, %r5548, %r5464;
	shf.l.wrap.b32 	%r5550, %r5536, %r5536, 23;
	xor.b32  	%r5551, %r5550, %r5536;
	shf.l.wrap.b32 	%r5552, %r5551, %r5551, 21;
	xor.b32  	%r5553, %r5552, %r5536;
	shf.l.wrap.b32 	%r5554, %r5553, %r5553, 30;
	and.b32  	%r5555, %r5536, %r5512;
	or.b32  	%r5556, %r5536, %r5512;
	and.b32  	%r5557, %r5556, %r5488;
	or.b32  	%r5558, %r5557, %r5555;
	add.s32 	%r5559, %r5554, %r5558;
	add.s32 	%r5560, %r5559, %r5548;
	add.s32 	%r5561, %r17025, %r5477;
	xor.b32  	%r5562, %r5525, %r5501;
	and.b32  	%r5563, %r5549, %r5562;
	xor.b32  	%r5564, %r5563, %r5501;
	add.s32 	%r5565, %r5561, %r5564;
	shf.l.wrap.b32 	%r5566, %r5549, %r5549, 18;
	xor.b32  	%r5567, %r5566, %r5549;
	shf.l.wrap.b32 	%r5568, %r5567, %r5567, 27;
	xor.b32  	%r5569, %r5568, %r5549;
	shf.l.wrap.b32 	%r5570, %r5569, %r5569, 26;
	add.s32 	%r5571, %r5565, %r5570;
	add.s32 	%r5572, %r5571, 1426881987;
	add.s32 	%r5573, %r5572, %r5488;
	shf.l.wrap.b32 	%r5574, %r5560, %r5560, 23;
	xor.b32  	%r5575, %r5574, %r5560;
	shf.l.wrap.b32 	%r5576, %r5575, %r5575, 21;
	xor.b32  	%r5577, %r5576, %r5560;
	shf.l.wrap.b32 	%r5578, %r5577, %r5577, 30;
	and.b32  	%r5579, %r5560, %r5536;
	or.b32  	%r5580, %r5560, %r5536;
	and.b32  	%r5581, %r5580, %r5512;
	or.b32  	%r5582, %r5581, %r5579;
	add.s32 	%r5583, %r5578, %r5582;
	add.s32 	%r5584, %r5583, %r5572;
	add.s32 	%r5585, %r17024, %r5501;
	xor.b32  	%r5586, %r5549, %r5525;
	and.b32  	%r5587, %r5573, %r5586;
	xor.b32  	%r5588, %r5587, %r5525;
	add.s32 	%r5589, %r5585, %r5588;
	shf.l.wrap.b32 	%r5590, %r5573, %r5573, 18;
	xor.b32  	%r5591, %r5590, %r5573;
	shf.l.wrap.b32 	%r5592, %r5591, %r5591, 27;
	xor.b32  	%r5593, %r5592, %r5573;
	shf.l.wrap.b32 	%r5594, %r5593, %r5593, 26;
	add.s32 	%r5595, %r5589, %r5594;
	add.s32 	%r5596, %r5595, 1925078388;
	add.s32 	%r5597, %r5596, %r5512;
	shf.l.wrap.b32 	%r5598, %r5584, %r5584, 23;
	xor.b32  	%r5599, %r5598, %r5584;
	shf.l.wrap.b32 	%r5600, %r5599, %r5599, 21;
	xor.b32  	%r5601, %r5600, %r5584;
	shf.l.wrap.b32 	%r5602, %r5601, %r5601, 30;
	and.b32  	%r5603, %r5584, %r5560;
	or.b32  	%r5604, %r5584, %r5560;
	and.b32  	%r5605, %r5604, %r5536;
	or.b32  	%r5606, %r5605, %r5603;
	add.s32 	%r5607, %r5602, %r5606;
	add.s32 	%r5608, %r5607, %r5596;
	add.s32 	%r5609, %r17023, %r5525;
	xor.b32  	%r5610, %r5573, %r5549;
	and.b32  	%r5611, %r5597, %r5610;
	xor.b32  	%r5612, %r5611, %r5549;
	add.s32 	%r5613, %r5609, %r5612;
	shf.l.wrap.b32 	%r5614, %r5597, %r5597, 18;
	xor.b32  	%r5615, %r5614, %r5597;
	shf.l.wrap.b32 	%r5616, %r5615, %r5615, 27;
	xor.b32  	%r5617, %r5616, %r5597;
	shf.l.wrap.b32 	%r5618, %r5617, %r5617, 26;
	add.s32 	%r5619, %r5613, %r5618;
	add.s32 	%r5620, %r5619, -2132889090;
	add.s32 	%r5621, %r5620, %r5536;
	shf.l.wrap.b32 	%r5622, %r5608, %r5608, 23;
	xor.b32  	%r5623, %r5622, %r5608;
	shf.l.wrap.b32 	%r5624, %r5623, %r5623, 21;
	xor.b32  	%r5625, %r5624, %r5608;
	shf.l.wrap.b32 	%r5626, %r5625, %r5625, 30;
	and.b32  	%r5627, %r5608, %r5584;
	or.b32  	%r5628, %r5608, %r5584;
	and.b32  	%r5629, %r5628, %r5560;
	or.b32  	%r5630, %r5629, %r5627;
	add.s32 	%r5631, %r5626, %r5630;
	add.s32 	%r5632, %r5631, %r5620;
	add.s32 	%r5633, %r17022, %r5549;
	xor.b32  	%r5634, %r5597, %r5573;
	and.b32  	%r5635, %r5621, %r5634;
	xor.b32  	%r5636, %r5635, %r5573;
	add.s32 	%r5637, %r5633, %r5636;
	shf.l.wrap.b32 	%r5638, %r5621, %r5621, 18;
	xor.b32  	%r5639, %r5638, %r5621;
	shf.l.wrap.b32 	%r5640, %r5639, %r5639, 27;
	xor.b32  	%r5641, %r5640, %r5621;
	shf.l.wrap.b32 	%r5642, %r5641, %r5641, 26;
	add.s32 	%r5643, %r5637, %r5642;
	add.s32 	%r5644, %r5643, -1680079193;
	add.s32 	%r5645, %r5644, %r5560;
	shf.l.wrap.b32 	%r5646, %r5632, %r5632, 23;
	xor.b32  	%r5647, %r5646, %r5632;
	shf.l.wrap.b32 	%r5648, %r5647, %r5647, 21;
	xor.b32  	%r5649, %r5648, %r5632;
	shf.l.wrap.b32 	%r5650, %r5649, %r5649, 30;
	and.b32  	%r5651, %r5632, %r5608;
	or.b32  	%r5652, %r5632, %r5608;
	and.b32  	%r5653, %r5652, %r5584;
	or.b32  	%r5654, %r5653, %r5651;
	add.s32 	%r5655, %r5650, %r5654;
	add.s32 	%r5656, %r5655, %r5644;
	add.s32 	%r5657, %r17021, %r5573;
	xor.b32  	%r5658, %r5621, %r5597;
	and.b32  	%r5659, %r5645, %r5658;
	xor.b32  	%r5660, %r5659, %r5597;
	add.s32 	%r5661, %r5657, %r5660;
	shf.l.wrap.b32 	%r5662, %r5645, %r5645, 18;
	xor.b32  	%r5663, %r5662, %r5645;
	shf.l.wrap.b32 	%r5664, %r5663, %r5663, 27;
	xor.b32  	%r5665, %r5664, %r5645;
	shf.l.wrap.b32 	%r5666, %r5665, %r5665, 26;
	add.s32 	%r5667, %r5661, %r5666;
	add.s32 	%r5668, %r5667, -1046744716;
	add.s32 	%r5669, %r5668, %r5584;
	shf.l.wrap.b32 	%r5670, %r5656, %r5656, 23;
	xor.b32  	%r5671, %r5670, %r5656;
	shf.l.wrap.b32 	%r5672, %r5671, %r5671, 21;
	xor.b32  	%r5673, %r5672, %r5656;
	shf.l.wrap.b32 	%r5674, %r5673, %r5673, 30;
	and.b32  	%r5675, %r5656, %r5632;
	or.b32  	%r5676, %r5656, %r5632;
	and.b32  	%r5677, %r5676, %r5608;
	or.b32  	%r5678, %r5677, %r5675;
	add.s32 	%r5679, %r5674, %r5678;
	add.s32 	%r5680, %r5679, %r5668;
	shf.l.wrap.b32 	%r5681, %r17022, %r17022, 13;
	shf.l.wrap.b32 	%r5682, %r17022, %r17022, 15;
	xor.b32  	%r5683, %r5682, %r5681;
	shr.u32 	%r5684, %r17022, 10;
	xor.b32  	%r5685, %r5683, %r5684;
	shf.l.wrap.b32 	%r5686, %r17035, %r17035, 14;
	shf.l.wrap.b32 	%r5687, %r17035, %r17035, 25;
	xor.b32  	%r5688, %r5687, %r5686;
	shr.u32 	%r5689, %r17035, 3;
	xor.b32  	%r5690, %r5688, %r5689;
	add.s32 	%r5691, %r17027, %r5685;
	add.s32 	%r5692, %r5691, %r17036;
	add.s32 	%r5693, %r5692, %r5690;
	add.s32 	%r5694, %r5693, %r5597;
	xor.b32  	%r5695, %r5645, %r5621;
	and.b32  	%r5696, %r5669, %r5695;
	xor.b32  	%r5697, %r5696, %r5621;
	add.s32 	%r5698, %r5694, %r5697;
	shf.l.wrap.b32 	%r5699, %r5669, %r5669, 18;
	xor.b32  	%r5700, %r5699, %r5669;
	shf.l.wrap.b32 	%r5701, %r5700, %r5700, 27;
	xor.b32  	%r5702, %r5701, %r5669;
	shf.l.wrap.b32 	%r5703, %r5702, %r5702, 26;
	add.s32 	%r5704, %r5698, %r5703;
	add.s32 	%r5705, %r5704, -459576895;
	add.s32 	%r5706, %r5705, %r5608;
	shf.l.wrap.b32 	%r5707, %r5680, %r5680, 23;
	xor.b32  	%r5708, %r5707, %r5680;
	shf.l.wrap.b32 	%r5709, %r5708, %r5708, 21;
	xor.b32  	%r5710, %r5709, %r5680;
	shf.l.wrap.b32 	%r5711, %r5710, %r5710, 30;
	and.b32  	%r5712, %r5680, %r5656;
	or.b32  	%r5713, %r5680, %r5656;
	and.b32  	%r5714, %r5713, %r5632;
	or.b32  	%r5715, %r5714, %r5712;
	add.s32 	%r5716, %r5711, %r5715;
	add.s32 	%r5717, %r5716, %r5705;
	shf.l.wrap.b32 	%r5718, %r17021, %r17021, 13;
	shf.l.wrap.b32 	%r5719, %r17021, %r17021, 15;
	xor.b32  	%r5720, %r5719, %r5718;
	shr.u32 	%r5721, %r17021, 10;
	xor.b32  	%r5722, %r5720, %r5721;
	shf.l.wrap.b32 	%r5723, %r17034, %r17034, 14;
	shf.l.wrap.b32 	%r5724, %r17034, %r17034, 25;
	xor.b32  	%r5725, %r5724, %r5723;
	shr.u32 	%r5726, %r17034, 3;
	xor.b32  	%r5727, %r5725, %r5726;
	add.s32 	%r5728, %r17026, %r5722;
	add.s32 	%r5729, %r5728, %r17035;
	add.s32 	%r5730, %r5729, %r5727;
	add.s32 	%r5731, %r5730, %r5621;
	xor.b32  	%r5732, %r5669, %r5645;
	and.b32  	%r5733, %r5706, %r5732;
	xor.b32  	%r5734, %r5733, %r5645;
	add.s32 	%r5735, %r5731, %r5734;
	shf.l.wrap.b32 	%r5736, %r5706, %r5706, 18;
	xor.b32  	%r5737, %r5736, %r5706;
	shf.l.wrap.b32 	%r5738, %r5737, %r5737, 27;
	xor.b32  	%r5739, %r5738, %r5706;
	shf.l.wrap.b32 	%r5740, %r5739, %r5739, 26;
	add.s32 	%r5741, %r5735, %r5740;
	add.s32 	%r5742, %r5741, -272742522;
	add.s32 	%r5743, %r5742, %r5632;
	shf.l.wrap.b32 	%r5744, %r5717, %r5717, 23;
	xor.b32  	%r5745, %r5744, %r5717;
	shf.l.wrap.b32 	%r5746, %r5745, %r5745, 21;
	xor.b32  	%r5747, %r5746, %r5717;
	shf.l.wrap.b32 	%r5748, %r5747, %r5747, 30;
	and.b32  	%r5749, %r5717, %r5680;
	or.b32  	%r5750, %r5717, %r5680;
	and.b32  	%r5751, %r5750, %r5656;
	or.b32  	%r5752, %r5751, %r5749;
	add.s32 	%r5753, %r5748, %r5752;
	add.s32 	%r5754, %r5753, %r5742;
	shf.l.wrap.b32 	%r5755, %r5693, %r5693, 15;
	shf.l.wrap.b32 	%r5756, %r5693, %r5693, 13;
	xor.b32  	%r5757, %r5755, %r5756;
	shr.u32 	%r5758, %r5693, 10;
	xor.b32  	%r5759, %r5757, %r5758;
	shf.l.wrap.b32 	%r5760, %r17033, %r17033, 14;
	shf.l.wrap.b32 	%r5761, %r17033, %r17033, 25;
	xor.b32  	%r5762, %r5761, %r5760;
	shr.u32 	%r5763, %r17033, 3;
	xor.b32  	%r5764, %r5762, %r5763;
	add.s32 	%r5765, %r17034, %r17025;
	add.s32 	%r5766, %r5765, %r5764;
	add.s32 	%r5767, %r5766, %r5759;
	add.s32 	%r5768, %r5767, %r5645;
	xor.b32  	%r5769, %r5706, %r5669;
	and.b32  	%r5770, %r5743, %r5769;
	xor.b32  	%r5771, %r5770, %r5669;
	add.s32 	%r5772, %r5768, %r5771;
	shf.l.wrap.b32 	%r5773, %r5743, %r5743, 18;
	xor.b32  	%r5774, %r5773, %r5743;
	shf.l.wrap.b32 	%r5775, %r5774, %r5774, 27;
	xor.b32  	%r5776, %r5775, %r5743;
	shf.l.wrap.b32 	%r5777, %r5776, %r5776, 26;
	add.s32 	%r5778, %r5772, %r5777;
	add.s32 	%r5779, %r5778, 264347078;
	add.s32 	%r5780, %r5779, %r5656;
	shf.l.wrap.b32 	%r5781, %r5754, %r5754, 23;
	xor.b32  	%r5782, %r5781, %r5754;
	shf.l.wrap.b32 	%r5783, %r5782, %r5782, 21;
	xor.b32  	%r5784, %r5783, %r5754;
	shf.l.wrap.b32 	%r5785, %r5784, %r5784, 30;
	and.b32  	%r5786, %r5754, %r5717;
	or.b32  	%r5787, %r5754, %r5717;
	and.b32  	%r5788, %r5787, %r5680;
	or.b32  	%r5789, %r5788, %r5786;
	add.s32 	%r5790, %r5785, %r5789;
	add.s32 	%r5791, %r5790, %r5779;
	shf.l.wrap.b32 	%r5792, %r5730, %r5730, 15;
	shf.l.wrap.b32 	%r5793, %r5730, %r5730, 13;
	xor.b32  	%r5794, %r5792, %r5793;
	shr.u32 	%r5795, %r5730, 10;
	xor.b32  	%r5796, %r5794, %r5795;
	shf.l.wrap.b32 	%r5797, %r17032, %r17032, 14;
	shf.l.wrap.b32 	%r5798, %r17032, %r17032, 25;
	xor.b32  	%r5799, %r5798, %r5797;
	shr.u32 	%r5800, %r17032, 3;
	xor.b32  	%r5801, %r5799, %r5800;
	add.s32 	%r5802, %r17033, %r17024;
	add.s32 	%r5803, %r5802, %r5801;
	add.s32 	%r5804, %r5803, %r5796;
	add.s32 	%r5805, %r5804, %r5669;
	xor.b32  	%r5806, %r5743, %r5706;
	and.b32  	%r5807, %r5780, %r5806;
	xor.b32  	%r5808, %r5807, %r5706;
	add.s32 	%r5809, %r5805, %r5808;
	shf.l.wrap.b32 	%r5810, %r5780, %r5780, 18;
	xor.b32  	%r5811, %r5810, %r5780;
	shf.l.wrap.b32 	%r5812, %r5811, %r5811, 27;
	xor.b32  	%r5813, %r5812, %r5780;
	shf.l.wrap.b32 	%r5814, %r5813, %r5813, 26;
	add.s32 	%r5815, %r5809, %r5814;
	add.s32 	%r5816, %r5815, 604807628;
	add.s32 	%r5817, %r5816, %r5680;
	shf.l.wrap.b32 	%r5818, %r5791, %r5791, 23;
	xor.b32  	%r5819, %r5818, %r5791;
	shf.l.wrap.b32 	%r5820, %r5819, %r5819, 21;
	xor.b32  	%r5821, %r5820, %r5791;
	shf.l.wrap.b32 	%r5822, %r5821, %r5821, 30;
	and.b32  	%r5823, %r5791, %r5754;
	or.b32  	%r5824, %r5791, %r5754;
	and.b32  	%r5825, %r5824, %r5717;
	or.b32  	%r5826, %r5825, %r5823;
	add.s32 	%r5827, %r5822, %r5826;
	add.s32 	%r5828, %r5827, %r5816;
	shf.l.wrap.b32 	%r5829, %r5767, %r5767, 15;
	shf.l.wrap.b32 	%r5830, %r5767, %r5767, 13;
	xor.b32  	%r5831, %r5829, %r5830;
	shr.u32 	%r5832, %r5767, 10;
	xor.b32  	%r5833, %r5831, %r5832;
	shf.l.wrap.b32 	%r5834, %r17031, %r17031, 14;
	shf.l.wrap.b32 	%r5835, %r17031, %r17031, 25;
	xor.b32  	%r5836, %r5835, %r5834;
	shr.u32 	%r5837, %r17031, 3;
	xor.b32  	%r5838, %r5836, %r5837;
	add.s32 	%r5839, %r17032, %r17023;
	add.s32 	%r5840, %r5839, %r5838;
	add.s32 	%r5841, %r5840, %r5833;
	add.s32 	%r5842, %r5841, %r5706;
	xor.b32  	%r5843, %r5780, %r5743;
	and.b32  	%r5844, %r5817, %r5843;
	xor.b32  	%r5845, %r5844, %r5743;
	add.s32 	%r5846, %r5842, %r5845;
	shf.l.wrap.b32 	%r5847, %r5817, %r5817, 18;
	xor.b32  	%r5848, %r5847, %r5817;
	shf.l.wrap.b32 	%r5849, %r5848, %r5848, 27;
	xor.b32  	%r5850, %r5849, %r5817;
	shf.l.wrap.b32 	%r5851, %r5850, %r5850, 26;
	add.s32 	%r5852, %r5846, %r5851;
	add.s32 	%r5853, %r5852, 770255983;
	add.s32 	%r5854, %r5853, %r5717;
	shf.l.wrap.b32 	%r5855, %r5828, %r5828, 23;
	xor.b32  	%r5856, %r5855, %r5828;
	shf.l.wrap.b32 	%r5857, %r5856, %r5856, 21;
	xor.b32  	%r5858, %r5857, %r5828;
	shf.l.wrap.b32 	%r5859, %r5858, %r5858, 30;
	and.b32  	%r5860, %r5828, %r5791;
	or.b32  	%r5861, %r5828, %r5791;
	and.b32  	%r5862, %r5861, %r5754;
	or.b32  	%r5863, %r5862, %r5860;
	add.s32 	%r5864, %r5859, %r5863;
	add.s32 	%r5865, %r5864, %r5853;
	shf.l.wrap.b32 	%r5866, %r5804, %r5804, 15;
	shf.l.wrap.b32 	%r5867, %r5804, %r5804, 13;
	xor.b32  	%r5868, %r5866, %r5867;
	shr.u32 	%r5869, %r5804, 10;
	xor.b32  	%r5870, %r5868, %r5869;
	shf.l.wrap.b32 	%r5871, %r17030, %r17030, 14;
	shf.l.wrap.b32 	%r5872, %r17030, %r17030, 25;
	xor.b32  	%r5873, %r5872, %r5871;
	shr.u32 	%r5874, %r17030, 3;
	xor.b32  	%r5875, %r5873, %r5874;
	add.s32 	%r5876, %r17031, %r17022;
	add.s32 	%r5877, %r5876, %r5875;
	add.s32 	%r5878, %r5877, %r5870;
	add.s32 	%r5879, %r5878, %r5743;
	xor.b32  	%r5880, %r5817, %r5780;
	and.b32  	%r5881, %r5854, %r5880;
	xor.b32  	%r5882, %r5881, %r5780;
	add.s32 	%r5883, %r5879, %r5882;
	shf.l.wrap.b32 	%r5884, %r5854, %r5854, 18;
	xor.b32  	%r5885, %r5884, %r5854;
	shf.l.wrap.b32 	%r5886, %r5885, %r5885, 27;
	xor.b32  	%r5887, %r5886, %r5854;
	shf.l.wrap.b32 	%r5888, %r5887, %r5887, 26;
	add.s32 	%r5889, %r5883, %r5888;
	add.s32 	%r5890, %r5889, 1249150122;
	add.s32 	%r5891, %r5890, %r5754;
	shf.l.wrap.b32 	%r5892, %r5865, %r5865, 23;
	xor.b32  	%r5893, %r5892, %r5865;
	shf.l.wrap.b32 	%r5894, %r5893, %r5893, 21;
	xor.b32  	%r5895, %r5894, %r5865;
	shf.l.wrap.b32 	%r5896, %r5895, %r5895, 30;
	and.b32  	%r5897, %r5865, %r5828;
	or.b32  	%r5898, %r5865, %r5828;
	and.b32  	%r5899, %r5898, %r5791;
	or.b32  	%r5900, %r5899, %r5897;
	add.s32 	%r5901, %r5896, %r5900;
	add.s32 	%r5902, %r5901, %r5890;
	shf.l.wrap.b32 	%r5903, %r5841, %r5841, 15;
	shf.l.wrap.b32 	%r5904, %r5841, %r5841, 13;
	xor.b32  	%r5905, %r5903, %r5904;
	shr.u32 	%r5906, %r5841, 10;
	xor.b32  	%r5907, %r5905, %r5906;
	shf.l.wrap.b32 	%r5908, %r17029, %r17029, 14;
	shf.l.wrap.b32 	%r5909, %r17029, %r17029, 25;
	xor.b32  	%r5910, %r5909, %r5908;
	shr.u32 	%r5911, %r17029, 3;
	xor.b32  	%r5912, %r5910, %r5911;
	add.s32 	%r5913, %r17030, %r17021;
	add.s32 	%r5914, %r5913, %r5912;
	add.s32 	%r5915, %r5914, %r5907;
	add.s32 	%r5916, %r5915, %r5780;
	xor.b32  	%r5917, %r5854, %r5817;
	and.b32  	%r5918, %r5891, %r5917;
	xor.b32  	%r5919, %r5918, %r5817;
	add.s32 	%r5920, %r5916, %r5919;
	shf.l.wrap.b32 	%r5921, %r5891, %r5891, 18;
	xor.b32  	%r5922, %r5921, %r5891;
	shf.l.wrap.b32 	%r5923, %r5922, %r5922, 27;
	xor.b32  	%r5924, %r5923, %r5891;
	shf.l.wrap.b32 	%r5925, %r5924, %r5924, 26;
	add.s32 	%r5926, %r5920, %r5925;
	add.s32 	%r5927, %r5926, 1555081692;
	add.s32 	%r5928, %r5927, %r5791;
	shf.l.wrap.b32 	%r5929, %r5902, %r5902, 23;
	xor.b32  	%r5930, %r5929, %r5902;
	shf.l.wrap.b32 	%r5931, %r5930, %r5930, 21;
	xor.b32  	%r5932, %r5931, %r5902;
	shf.l.wrap.b32 	%r5933, %r5932, %r5932, 30;
	and.b32  	%r5934, %r5902, %r5865;
	or.b32  	%r5935, %r5902, %r5865;
	and.b32  	%r5936, %r5935, %r5828;
	or.b32  	%r5937, %r5936, %r5934;
	add.s32 	%r5938, %r5933, %r5937;
	add.s32 	%r5939, %r5938, %r5927;
	shf.l.wrap.b32 	%r5940, %r5878, %r5878, 15;
	shf.l.wrap.b32 	%r5941, %r5878, %r5878, 13;
	xor.b32  	%r5942, %r5940, %r5941;
	shr.u32 	%r5943, %r5878, 10;
	xor.b32  	%r5944, %r5942, %r5943;
	shf.l.wrap.b32 	%r5945, %r17028, %r17028, 14;
	shf.l.wrap.b32 	%r5946, %r17028, %r17028, 25;
	xor.b32  	%r5947, %r5946, %r5945;
	shr.u32 	%r5948, %r17028, 3;
	xor.b32  	%r5949, %r5947, %r5948;
	add.s32 	%r5950, %r5949, %r17029;
	add.s32 	%r5951, %r5950, %r5693;
	add.s32 	%r5952, %r5951, %r5944;
	add.s32 	%r5953, %r5952, %r5817;
	xor.b32  	%r5954, %r5891, %r5854;
	and.b32  	%r5955, %r5928, %r5954;
	xor.b32  	%r5956, %r5955, %r5854;
	add.s32 	%r5957, %r5953, %r5956;
	shf.l.wrap.b32 	%r5958, %r5928, %r5928, 18;
	xor.b32  	%r5959, %r5958, %r5928;
	shf.l.wrap.b32 	%r5960, %r5959, %r5959, 27;
	xor.b32  	%r5961, %r5960, %r5928;
	shf.l.wrap.b32 	%r5962, %r5961, %r5961, 26;
	add.s32 	%r5963, %r5957, %r5962;
	add.s32 	%r5964, %r5963, 1996064986;
	add.s32 	%r5965, %r5964, %r5828;
	shf.l.wrap.b32 	%r5966, %r5939, %r5939, 23;
	xor.b32  	%r5967, %r5966, %r5939;
	shf.l.wrap.b32 	%r5968, %r5967, %r5967, 21;
	xor.b32  	%r5969, %r5968, %r5939;
	shf.l.wrap.b32 	%r5970, %r5969, %r5969, 30;
	and.b32  	%r5971, %r5939, %r5902;
	or.b32  	%r5972, %r5939, %r5902;
	and.b32  	%r5973, %r5972, %r5865;
	or.b32  	%r5974, %r5973, %r5971;
	add.s32 	%r5975, %r5970, %r5974;
	add.s32 	%r5976, %r5975, %r5964;
	shf.l.wrap.b32 	%r5977, %r5915, %r5915, 15;
	shf.l.wrap.b32 	%r5978, %r5915, %r5915, 13;
	xor.b32  	%r5979, %r5977, %r5978;
	shr.u32 	%r5980, %r5915, 10;
	xor.b32  	%r5981, %r5979, %r5980;
	shf.l.wrap.b32 	%r5982, %r17027, %r17027, 14;
	shf.l.wrap.b32 	%r5983, %r17027, %r17027, 25;
	xor.b32  	%r5984, %r5983, %r5982;
	shr.u32 	%r5985, %r17027, 3;
	xor.b32  	%r5986, %r5984, %r5985;
	add.s32 	%r5987, %r5986, %r17028;
	add.s32 	%r5988, %r5987, %r5730;
	add.s32 	%r5989, %r5988, %r5981;
	add.s32 	%r5990, %r5989, %r5854;
	xor.b32  	%r5991, %r5928, %r5891;
	and.b32  	%r5992, %r5965, %r5991;
	xor.b32  	%r5993, %r5992, %r5891;
	add.s32 	%r5994, %r5990, %r5993;
	shf.l.wrap.b32 	%r5995, %r5965, %r5965, 18;
	xor.b32  	%r5996, %r5995, %r5965;
	shf.l.wrap.b32 	%r5997, %r5996, %r5996, 27;
	xor.b32  	%r5998, %r5997, %r5965;
	shf.l.wrap.b32 	%r5999, %r5998, %r5998, 26;
	add.s32 	%r6000, %r5994, %r5999;
	add.s32 	%r6001, %r6000, -1740746414;
	add.s32 	%r6002, %r6001, %r5865;
	shf.l.wrap.b32 	%r6003, %r5976, %r5976, 23;
	xor.b32  	%r6004, %r6003, %r5976;
	shf.l.wrap.b32 	%r6005, %r6004, %r6004, 21;
	xor.b32  	%r6006, %r6005, %r5976;
	shf.l.wrap.b32 	%r6007, %r6006, %r6006, 30;
	and.b32  	%r6008, %r5976, %r5939;
	or.b32  	%r6009, %r5976, %r5939;
	and.b32  	%r6010, %r6009, %r5902;
	or.b32  	%r6011, %r6010, %r6008;
	add.s32 	%r6012, %r6007, %r6011;
	add.s32 	%r6013, %r6012, %r6001;
	shf.l.wrap.b32 	%r6014, %r5952, %r5952, 15;
	shf.l.wrap.b32 	%r6015, %r5952, %r5952, 13;
	xor.b32  	%r6016, %r6014, %r6015;
	shr.u32 	%r6017, %r5952, 10;
	xor.b32  	%r6018, %r6016, %r6017;
	shf.l.wrap.b32 	%r6019, %r17026, %r17026, 14;
	shf.l.wrap.b32 	%r6020, %r17026, %r17026, 25;
	xor.b32  	%r6021, %r6020, %r6019;
	shr.u32 	%r6022, %r17026, 3;
	xor.b32  	%r6023, %r6021, %r6022;
	add.s32 	%r6024, %r6023, %r17027;
	add.s32 	%r6025, %r6024, %r5767;
	add.s32 	%r6026, %r6025, %r6018;
	add.s32 	%r6027, %r6026, %r5891;
	xor.b32  	%r6028, %r5965, %r5928;
	and.b32  	%r6029, %r6002, %r6028;
	xor.b32  	%r6030, %r6029, %r5928;
	add.s32 	%r6031, %r6027, %r6030;
	shf.l.wrap.b32 	%r6032, %r6002, %r6002, 18;
	xor.b32  	%r6033, %r6032, %r6002;
	shf.l.wrap.b32 	%r6034, %r6033, %r6033, 27;
	xor.b32  	%r6035, %r6034, %r6002;
	shf.l.wrap.b32 	%r6036, %r6035, %r6035, 26;
	add.s32 	%r6037, %r6031, %r6036;
	add.s32 	%r6038, %r6037, -1473132947;
	add.s32 	%r6039, %r6038, %r5902;
	shf.l.wrap.b32 	%r6040, %r6013, %r6013, 23;
	xor.b32  	%r6041, %r6040, %r6013;
	shf.l.wrap.b32 	%r6042, %r6041, %r6041, 21;
	xor.b32  	%r6043, %r6042, %r6013;
	shf.l.wrap.b32 	%r6044, %r6043, %r6043, 30;
	and.b32  	%r6045, %r6013, %r5976;
	or.b32  	%r6046, %r6013, %r5976;
	and.b32  	%r6047, %r6046, %r5939;
	or.b32  	%r6048, %r6047, %r6045;
	add.s32 	%r6049, %r6044, %r6048;
	add.s32 	%r6050, %r6049, %r6038;
	shf.l.wrap.b32 	%r6051, %r5989, %r5989, 15;
	shf.l.wrap.b32 	%r6052, %r5989, %r5989, 13;
	xor.b32  	%r6053, %r6051, %r6052;
	shr.u32 	%r6054, %r5989, 10;
	xor.b32  	%r6055, %r6053, %r6054;
	shf.l.wrap.b32 	%r6056, %r17025, %r17025, 14;
	shf.l.wrap.b32 	%r6057, %r17025, %r17025, 25;
	xor.b32  	%r6058, %r6057, %r6056;
	shr.u32 	%r6059, %r17025, 3;
	xor.b32  	%r6060, %r6058, %r6059;
	add.s32 	%r6061, %r6060, %r17026;
	add.s32 	%r6062, %r6061, %r5804;
	add.s32 	%r6063, %r6062, %r6055;
	add.s32 	%r6064, %r6063, %r5928;
	xor.b32  	%r6065, %r6002, %r5965;
	and.b32  	%r6066, %r6039, %r6065;
	xor.b32  	%r6067, %r6066, %r5965;
	add.s32 	%r6068, %r6064, %r6067;
	shf.l.wrap.b32 	%r6069, %r6039, %r6039, 18;
	xor.b32  	%r6070, %r6069, %r6039;
	shf.l.wrap.b32 	%r6071, %r6070, %r6070, 27;
	xor.b32  	%r6072, %r6071, %r6039;
	shf.l.wrap.b32 	%r6073, %r6072, %r6072, 26;
	add.s32 	%r6074, %r6068, %r6073;
	add.s32 	%r6075, %r6074, -1341970488;
	add.s32 	%r6076, %r6075, %r5939;
	shf.l.wrap.b32 	%r6077, %r6050, %r6050, 23;
	xor.b32  	%r6078, %r6077, %r6050;
	shf.l.wrap.b32 	%r6079, %r6078, %r6078, 21;
	xor.b32  	%r6080, %r6079, %r6050;
	shf.l.wrap.b32 	%r6081, %r6080, %r6080, 30;
	and.b32  	%r6082, %r6050, %r6013;
	or.b32  	%r6083, %r6050, %r6013;
	and.b32  	%r6084, %r6083, %r5976;
	or.b32  	%r6085, %r6084, %r6082;
	add.s32 	%r6086, %r6081, %r6085;
	add.s32 	%r6087, %r6086, %r6075;
	shf.l.wrap.b32 	%r6088, %r6026, %r6026, 15;
	shf.l.wrap.b32 	%r6089, %r6026, %r6026, 13;
	xor.b32  	%r6090, %r6088, %r6089;
	shr.u32 	%r6091, %r6026, 10;
	xor.b32  	%r6092, %r6090, %r6091;
	shf.l.wrap.b32 	%r6093, %r17024, %r17024, 14;
	shf.l.wrap.b32 	%r6094, %r17024, %r17024, 25;
	xor.b32  	%r6095, %r6094, %r6093;
	shr.u32 	%r6096, %r17024, 3;
	xor.b32  	%r6097, %r6095, %r6096;
	add.s32 	%r6098, %r6097, %r17025;
	add.s32 	%r6099, %r6098, %r5841;
	add.s32 	%r6100, %r6099, %r6092;
	add.s32 	%r6101, %r6100, %r5965;
	xor.b32  	%r6102, %r6039, %r6002;
	and.b32  	%r6103, %r6076, %r6102;
	xor.b32  	%r6104, %r6103, %r6002;
	add.s32 	%r6105, %r6101, %r6104;
	shf.l.wrap.b32 	%r6106, %r6076, %r6076, 18;
	xor.b32  	%r6107, %r6106, %r6076;
	shf.l.wrap.b32 	%r6108, %r6107, %r6107, 27;
	xor.b32  	%r6109, %r6108, %r6076;
	shf.l.wrap.b32 	%r6110, %r6109, %r6109, 26;
	add.s32 	%r6111, %r6105, %r6110;
	add.s32 	%r6112, %r6111, -1084653625;
	add.s32 	%r6113, %r6112, %r5976;
	shf.l.wrap.b32 	%r6114, %r6087, %r6087, 23;
	xor.b32  	%r6115, %r6114, %r6087;
	shf.l.wrap.b32 	%r6116, %r6115, %r6115, 21;
	xor.b32  	%r6117, %r6116, %r6087;
	shf.l.wrap.b32 	%r6118, %r6117, %r6117, 30;
	and.b32  	%r6119, %r6087, %r6050;
	or.b32  	%r6120, %r6087, %r6050;
	and.b32  	%r6121, %r6120, %r6013;
	or.b32  	%r6122, %r6121, %r6119;
	add.s32 	%r6123, %r6118, %r6122;
	add.s32 	%r6124, %r6123, %r6112;
	shf.l.wrap.b32 	%r6125, %r6063, %r6063, 15;
	shf.l.wrap.b32 	%r6126, %r6063, %r6063, 13;
	xor.b32  	%r6127, %r6125, %r6126;
	shr.u32 	%r6128, %r6063, 10;
	xor.b32  	%r6129, %r6127, %r6128;
	shf.l.wrap.b32 	%r6130, %r17023, %r17023, 14;
	shf.l.wrap.b32 	%r6131, %r17023, %r17023, 25;
	xor.b32  	%r6132, %r6131, %r6130;
	shr.u32 	%r6133, %r17023, 3;
	xor.b32  	%r6134, %r6132, %r6133;
	add.s32 	%r6135, %r6134, %r17024;
	add.s32 	%r6136, %r6135, %r5878;
	add.s32 	%r6137, %r6136, %r6129;
	add.s32 	%r6138, %r6137, %r6002;
	xor.b32  	%r6139, %r6076, %r6039;
	and.b32  	%r6140, %r6113, %r6139;
	xor.b32  	%r6141, %r6140, %r6039;
	add.s32 	%r6142, %r6138, %r6141;
	shf.l.wrap.b32 	%r6143, %r6113, %r6113, 18;
	xor.b32  	%r6144, %r6143, %r6113;
	shf.l.wrap.b32 	%r6145, %r6144, %r6144, 27;
	xor.b32  	%r6146, %r6145, %r6113;
	shf.l.wrap.b32 	%r6147, %r6146, %r6146, 26;
	add.s32 	%r6148, %r6142, %r6147;
	add.s32 	%r6149, %r6148, -958395405;
	add.s32 	%r6150, %r6149, %r6013;
	shf.l.wrap.b32 	%r6151, %r6124, %r6124, 23;
	xor.b32  	%r6152, %r6151, %r6124;
	shf.l.wrap.b32 	%r6153, %r6152, %r6152, 21;
	xor.b32  	%r6154, %r6153, %r6124;
	shf.l.wrap.b32 	%r6155, %r6154, %r6154, 30;
	and.b32  	%r6156, %r6124, %r6087;
	or.b32  	%r6157, %r6124, %r6087;
	and.b32  	%r6158, %r6157, %r6050;
	or.b32  	%r6159, %r6158, %r6156;
	add.s32 	%r6160, %r6155, %r6159;
	add.s32 	%r6161, %r6160, %r6149;
	shf.l.wrap.b32 	%r6162, %r6100, %r6100, 15;
	shf.l.wrap.b32 	%r6163, %r6100, %r6100, 13;
	xor.b32  	%r6164, %r6162, %r6163;
	shr.u32 	%r6165, %r6100, 10;
	xor.b32  	%r6166, %r6164, %r6165;
	shf.l.wrap.b32 	%r6167, %r17022, %r17022, 14;
	shf.l.wrap.b32 	%r6168, %r17022, %r17022, 25;
	xor.b32  	%r6169, %r6168, %r6167;
	shr.u32 	%r6170, %r17022, 3;
	xor.b32  	%r6171, %r6169, %r6170;
	add.s32 	%r6172, %r6171, %r17023;
	add.s32 	%r6173, %r6172, %r5915;
	add.s32 	%r6174, %r6173, %r6166;
	add.s32 	%r6175, %r6174, %r6039;
	xor.b32  	%r6176, %r6113, %r6076;
	and.b32  	%r6177, %r6150, %r6176;
	xor.b32  	%r6178, %r6177, %r6076;
	add.s32 	%r6179, %r6175, %r6178;
	shf.l.wrap.b32 	%r6180, %r6150, %r6150, 18;
	xor.b32  	%r6181, %r6180, %r6150;
	shf.l.wrap.b32 	%r6182, %r6181, %r6181, 27;
	xor.b32  	%r6183, %r6182, %r6150;
	shf.l.wrap.b32 	%r6184, %r6183, %r6183, 26;
	add.s32 	%r6185, %r6179, %r6184;
	add.s32 	%r6186, %r6185, -710438585;
	add.s32 	%r6187, %r6186, %r6050;
	shf.l.wrap.b32 	%r6188, %r6161, %r6161, 23;
	xor.b32  	%r6189, %r6188, %r6161;
	shf.l.wrap.b32 	%r6190, %r6189, %r6189, 21;
	xor.b32  	%r6191, %r6190, %r6161;
	shf.l.wrap.b32 	%r6192, %r6191, %r6191, 30;
	and.b32  	%r6193, %r6161, %r6124;
	or.b32  	%r6194, %r6161, %r6124;
	and.b32  	%r6195, %r6194, %r6087;
	or.b32  	%r6196, %r6195, %r6193;
	add.s32 	%r6197, %r6192, %r6196;
	add.s32 	%r6198, %r6197, %r6186;
	shf.l.wrap.b32 	%r6199, %r6137, %r6137, 15;
	shf.l.wrap.b32 	%r6200, %r6137, %r6137, 13;
	xor.b32  	%r6201, %r6199, %r6200;
	shr.u32 	%r6202, %r6137, 10;
	xor.b32  	%r6203, %r6201, %r6202;
	shf.l.wrap.b32 	%r6204, %r17021, %r17021, 14;
	shf.l.wrap.b32 	%r6205, %r17021, %r17021, 25;
	xor.b32  	%r6206, %r6205, %r6204;
	shr.u32 	%r6207, %r17021, 3;
	xor.b32  	%r6208, %r6206, %r6207;
	add.s32 	%r6209, %r6208, %r17022;
	add.s32 	%r6210, %r6209, %r5952;
	add.s32 	%r6211, %r6210, %r6203;
	add.s32 	%r6212, %r6211, %r6076;
	xor.b32  	%r6213, %r6150, %r6113;
	and.b32  	%r6214, %r6187, %r6213;
	xor.b32  	%r6215, %r6214, %r6113;
	add.s32 	%r6216, %r6212, %r6215;
	shf.l.wrap.b32 	%r6217, %r6187, %r6187, 18;
	xor.b32  	%r6218, %r6217, %r6187;
	shf.l.wrap.b32 	%r6219, %r6218, %r6218, 27;
	xor.b32  	%r6220, %r6219, %r6187;
	shf.l.wrap.b32 	%r6221, %r6220, %r6220, 26;
	add.s32 	%r6222, %r6216, %r6221;
	add.s32 	%r6223, %r6222, 113926993;
	add.s32 	%r6224, %r6223, %r6087;
	shf.l.wrap.b32 	%r6225, %r6198, %r6198, 23;
	xor.b32  	%r6226, %r6225, %r6198;
	shf.l.wrap.b32 	%r6227, %r6226, %r6226, 21;
	xor.b32  	%r6228, %r6227, %r6198;
	shf.l.wrap.b32 	%r6229, %r6228, %r6228, 30;
	and.b32  	%r6230, %r6198, %r6161;
	or.b32  	%r6231, %r6198, %r6161;
	and.b32  	%r6232, %r6231, %r6124;
	or.b32  	%r6233, %r6232, %r6230;
	add.s32 	%r6234, %r6229, %r6233;
	add.s32 	%r6235, %r6234, %r6223;
	shf.l.wrap.b32 	%r6236, %r6174, %r6174, 15;
	shf.l.wrap.b32 	%r6237, %r6174, %r6174, 13;
	xor.b32  	%r6238, %r6236, %r6237;
	shr.u32 	%r6239, %r6174, 10;
	xor.b32  	%r6240, %r6238, %r6239;
	shf.l.wrap.b32 	%r6241, %r5693, %r5693, 25;
	shf.l.wrap.b32 	%r6242, %r5693, %r5693, 14;
	xor.b32  	%r6243, %r6241, %r6242;
	shr.u32 	%r6244, %r5693, 3;
	xor.b32  	%r6245, %r6243, %r6244;
	add.s32 	%r6246, %r6245, %r17021;
	add.s32 	%r6247, %r6246, %r5989;
	add.s32 	%r6248, %r6247, %r6240;
	add.s32 	%r6249, %r6248, %r6113;
	xor.b32  	%r6250, %r6187, %r6150;
	and.b32  	%r6251, %r6224, %r6250;
	xor.b32  	%r6252, %r6251, %r6150;
	add.s32 	%r6253, %r6249, %r6252;
	shf.l.wrap.b32 	%r6254, %r6224, %r6224, 18;
	xor.b32  	%r6255, %r6254, %r6224;
	shf.l.wrap.b32 	%r6256, %r6255, %r6255, 27;
	xor.b32  	%r6257, %r6256, %r6224;
	shf.l.wrap.b32 	%r6258, %r6257, %r6257, 26;
	add.s32 	%r6259, %r6253, %r6258;
	add.s32 	%r6260, %r6259, 338241895;
	add.s32 	%r6261, %r6260, %r6124;
	shf.l.wrap.b32 	%r6262, %r6235, %r6235, 23;
	xor.b32  	%r6263, %r6262, %r6235;
	shf.l.wrap.b32 	%r6264, %r6263, %r6263, 21;
	xor.b32  	%r6265, %r6264, %r6235;
	shf.l.wrap.b32 	%r6266, %r6265, %r6265, 30;
	and.b32  	%r6267, %r6235, %r6198;
	or.b32  	%r6268, %r6235, %r6198;
	and.b32  	%r6269, %r6268, %r6161;
	or.b32  	%r6270, %r6269, %r6267;
	add.s32 	%r6271, %r6266, %r6270;
	add.s32 	%r6272, %r6271, %r6260;
	shf.l.wrap.b32 	%r6273, %r6211, %r6211, 15;
	shf.l.wrap.b32 	%r6274, %r6211, %r6211, 13;
	xor.b32  	%r6275, %r6273, %r6274;
	shr.u32 	%r6276, %r6211, 10;
	xor.b32  	%r6277, %r6275, %r6276;
	shf.l.wrap.b32 	%r6278, %r5730, %r5730, 25;
	shf.l.wrap.b32 	%r6279, %r5730, %r5730, 14;
	xor.b32  	%r6280, %r6278, %r6279;
	shr.u32 	%r6281, %r5730, 3;
	xor.b32  	%r6282, %r6280, %r6281;
	add.s32 	%r6283, %r6282, %r5693;
	add.s32 	%r6284, %r6283, %r6026;
	add.s32 	%r6285, %r6284, %r6277;
	add.s32 	%r6286, %r6285, %r6150;
	xor.b32  	%r6287, %r6224, %r6187;
	and.b32  	%r6288, %r6261, %r6287;
	xor.b32  	%r6289, %r6288, %r6187;
	add.s32 	%r6290, %r6286, %r6289;
	shf.l.wrap.b32 	%r6291, %r6261, %r6261, 18;
	xor.b32  	%r6292, %r6291, %r6261;
	shf.l.wrap.b32 	%r6293, %r6292, %r6292, 27;
	xor.b32  	%r6294, %r6293, %r6261;
	shf.l.wrap.b32 	%r6295, %r6294, %r6294, 26;
	add.s32 	%r6296, %r6290, %r6295;
	add.s32 	%r6297, %r6296, 666307205;
	add.s32 	%r6298, %r6297, %r6161;
	shf.l.wrap.b32 	%r6299, %r6272, %r6272, 23;
	xor.b32  	%r6300, %r6299, %r6272;
	shf.l.wrap.b32 	%r6301, %r6300, %r6300, 21;
	xor.b32  	%r6302, %r6301, %r6272;
	shf.l.wrap.b32 	%r6303, %r6302, %r6302, 30;
	and.b32  	%r6304, %r6272, %r6235;
	or.b32  	%r6305, %r6272, %r6235;
	and.b32  	%r6306, %r6305, %r6198;
	or.b32  	%r6307, %r6306, %r6304;
	add.s32 	%r6308, %r6303, %r6307;
	add.s32 	%r6309, %r6308, %r6297;
	shf.l.wrap.b32 	%r6310, %r6248, %r6248, 15;
	shf.l.wrap.b32 	%r6311, %r6248, %r6248, 13;
	xor.b32  	%r6312, %r6310, %r6311;
	shr.u32 	%r6313, %r6248, 10;
	xor.b32  	%r6314, %r6312, %r6313;
	shf.l.wrap.b32 	%r6315, %r5767, %r5767, 25;
	shf.l.wrap.b32 	%r6316, %r5767, %r5767, 14;
	xor.b32  	%r6317, %r6315, %r6316;
	shr.u32 	%r6318, %r5767, 3;
	xor.b32  	%r6319, %r6317, %r6318;
	add.s32 	%r6320, %r6319, %r5730;
	add.s32 	%r6321, %r6320, %r6063;
	add.s32 	%r6322, %r6321, %r6314;
	add.s32 	%r6323, %r6322, %r6187;
	xor.b32  	%r6324, %r6261, %r6224;
	and.b32  	%r6325, %r6298, %r6324;
	xor.b32  	%r6326, %r6325, %r6224;
	add.s32 	%r6327, %r6323, %r6326;
	shf.l.wrap.b32 	%r6328, %r6298, %r6298, 18;
	xor.b32  	%r6329, %r6328, %r6298;
	shf.l.wrap.b32 	%r6330, %r6329, %r6329, 27;
	xor.b32  	%r6331, %r6330, %r6298;
	shf.l.wrap.b32 	%r6332, %r6331, %r6331, 26;
	add.s32 	%r6333, %r6327, %r6332;
	add.s32 	%r6334, %r6333, 773529912;
	add.s32 	%r6335, %r6334, %r6198;
	shf.l.wrap.b32 	%r6336, %r6309, %r6309, 23;
	xor.b32  	%r6337, %r6336, %r6309;
	shf.l.wrap.b32 	%r6338, %r6337, %r6337, 21;
	xor.b32  	%r6339, %r6338, %r6309;
	shf.l.wrap.b32 	%r6340, %r6339, %r6339, 30;
	and.b32  	%r6341, %r6309, %r6272;
	or.b32  	%r6342, %r6309, %r6272;
	and.b32  	%r6343, %r6342, %r6235;
	or.b32  	%r6344, %r6343, %r6341;
	add.s32 	%r6345, %r6340, %r6344;
	add.s32 	%r6346, %r6345, %r6334;
	shf.l.wrap.b32 	%r6347, %r6285, %r6285, 15;
	shf.l.wrap.b32 	%r6348, %r6285, %r6285, 13;
	xor.b32  	%r6349, %r6347, %r6348;
	shr.u32 	%r6350, %r6285, 10;
	xor.b32  	%r6351, %r6349, %r6350;
	shf.l.wrap.b32 	%r6352, %r5804, %r5804, 25;
	shf.l.wrap.b32 	%r6353, %r5804, %r5804, 14;
	xor.b32  	%r6354, %r6352, %r6353;
	shr.u32 	%r6355, %r5804, 3;
	xor.b32  	%r6356, %r6354, %r6355;
	add.s32 	%r6357, %r6356, %r5767;
	add.s32 	%r6358, %r6357, %r6100;
	add.s32 	%r6359, %r6358, %r6351;
	add.s32 	%r6360, %r6359, %r6224;
	xor.b32  	%r6361, %r6298, %r6261;
	and.b32  	%r6362, %r6335, %r6361;
	xor.b32  	%r6363, %r6362, %r6261;
	add.s32 	%r6364, %r6360, %r6363;
	shf.l.wrap.b32 	%r6365, %r6335, %r6335, 18;
	xor.b32  	%r6366, %r6365, %r6335;
	shf.l.wrap.b32 	%r6367, %r6366, %r6366, 27;
	xor.b32  	%r6368, %r6367, %r6335;
	shf.l.wrap.b32 	%r6369, %r6368, %r6368, 26;
	add.s32 	%r6370, %r6364, %r6369;
	add.s32 	%r6371, %r6370, 1294757372;
	add.s32 	%r6372, %r6371, %r6235;
	shf.l.wrap.b32 	%r6373, %r6346, %r6346, 23;
	xor.b32  	%r6374, %r6373, %r6346;
	shf.l.wrap.b32 	%r6375, %r6374, %r6374, 21;
	xor.b32  	%r6376, %r6375, %r6346;
	shf.l.wrap.b32 	%r6377, %r6376, %r6376, 30;
	and.b32  	%r6378, %r6346, %r6309;
	or.b32  	%r6379, %r6346, %r6309;
	and.b32  	%r6380, %r6379, %r6272;
	or.b32  	%r6381, %r6380, %r6378;
	add.s32 	%r6382, %r6377, %r6381;
	add.s32 	%r6383, %r6382, %r6371;
	shf.l.wrap.b32 	%r6384, %r6322, %r6322, 15;
	shf.l.wrap.b32 	%r6385, %r6322, %r6322, 13;
	xor.b32  	%r6386, %r6384, %r6385;
	shr.u32 	%r6387, %r6322, 10;
	xor.b32  	%r6388, %r6386, %r6387;
	shf.l.wrap.b32 	%r6389, %r5841, %r5841, 25;
	shf.l.wrap.b32 	%r6390, %r5841, %r5841, 14;
	xor.b32  	%r6391, %r6389, %r6390;
	shr.u32 	%r6392, %r5841, 3;
	xor.b32  	%r6393, %r6391, %r6392;
	add.s32 	%r6394, %r6393, %r5804;
	add.s32 	%r6395, %r6394, %r6137;
	add.s32 	%r6396, %r6395, %r6388;
	add.s32 	%r6397, %r6396, %r6261;
	xor.b32  	%r6398, %r6335, %r6298;
	and.b32  	%r6399, %r6372, %r6398;
	xor.b32  	%r6400, %r6399, %r6298;
	add.s32 	%r6401, %r6397, %r6400;
	shf.l.wrap.b32 	%r6402, %r6372, %r6372, 18;
	xor.b32  	%r6403, %r6402, %r6372;
	shf.l.wrap.b32 	%r6404, %r6403, %r6403, 27;
	xor.b32  	%r6405, %r6404, %r6372;
	shf.l.wrap.b32 	%r6406, %r6405, %r6405, 26;
	add.s32 	%r6407, %r6401, %r6406;
	add.s32 	%r6408, %r6407, 1396182291;
	add.s32 	%r6409, %r6408, %r6272;
	shf.l.wrap.b32 	%r6410, %r6383, %r6383, 23;
	xor.b32  	%r6411, %r6410, %r6383;
	shf.l.wrap.b32 	%r6412, %r6411, %r6411, 21;
	xor.b32  	%r6413, %r6412, %r6383;
	shf.l.wrap.b32 	%r6414, %r6413, %r6413, 30;
	and.b32  	%r6415, %r6383, %r6346;
	or.b32  	%r6416, %r6383, %r6346;
	and.b32  	%r6417, %r6416, %r6309;
	or.b32  	%r6418, %r6417, %r6415;
	add.s32 	%r6419, %r6414, %r6418;
	add.s32 	%r6420, %r6419, %r6408;
	shf.l.wrap.b32 	%r6421, %r6359, %r6359, 15;
	shf.l.wrap.b32 	%r6422, %r6359, %r6359, 13;
	xor.b32  	%r6423, %r6421, %r6422;
	shr.u32 	%r6424, %r6359, 10;
	xor.b32  	%r6425, %r6423, %r6424;
	shf.l.wrap.b32 	%r6426, %r5878, %r5878, 25;
	shf.l.wrap.b32 	%r6427, %r5878, %r5878, 14;
	xor.b32  	%r6428, %r6426, %r6427;
	shr.u32 	%r6429, %r5878, 3;
	xor.b32  	%r6430, %r6428, %r6429;
	add.s32 	%r6431, %r6430, %r5841;
	add.s32 	%r6432, %r6431, %r6174;
	add.s32 	%r6433, %r6432, %r6425;
	add.s32 	%r6434, %r6433, %r6298;
	xor.b32  	%r6435, %r6372, %r6335;
	and.b32  	%r6436, %r6409, %r6435;
	xor.b32  	%r6437, %r6436, %r6335;
	add.s32 	%r6438, %r6434, %r6437;
	shf.l.wrap.b32 	%r6439, %r6409, %r6409, 18;
	xor.b32  	%r6440, %r6439, %r6409;
	shf.l.wrap.b32 	%r6441, %r6440, %r6440, 27;
	xor.b32  	%r6442, %r6441, %r6409;
	shf.l.wrap.b32 	%r6443, %r6442, %r6442, 26;
	add.s32 	%r6444, %r6438, %r6443;
	add.s32 	%r6445, %r6444, 1695183700;
	add.s32 	%r6446, %r6445, %r6309;
	shf.l.wrap.b32 	%r6447, %r6420, %r6420, 23;
	xor.b32  	%r6448, %r6447, %r6420;
	shf.l.wrap.b32 	%r6449, %r6448, %r6448, 21;
	xor.b32  	%r6450, %r6449, %r6420;
	shf.l.wrap.b32 	%r6451, %r6450, %r6450, 30;
	and.b32  	%r6452, %r6420, %r6383;
	or.b32  	%r6453, %r6420, %r6383;
	and.b32  	%r6454, %r6453, %r6346;
	or.b32  	%r6455, %r6454, %r6452;
	add.s32 	%r6456, %r6451, %r6455;
	add.s32 	%r6457, %r6456, %r6445;
	shf.l.wrap.b32 	%r6458, %r6396, %r6396, 15;
	shf.l.wrap.b32 	%r6459, %r6396, %r6396, 13;
	xor.b32  	%r6460, %r6458, %r6459;
	shr.u32 	%r6461, %r6396, 10;
	xor.b32  	%r6462, %r6460, %r6461;
	shf.l.wrap.b32 	%r6463, %r5915, %r5915, 25;
	shf.l.wrap.b32 	%r6464, %r5915, %r5915, 14;
	xor.b32  	%r6465, %r6463, %r6464;
	shr.u32 	%r6466, %r5915, 3;
	xor.b32  	%r6467, %r6465, %r6466;
	add.s32 	%r6468, %r6467, %r5878;
	add.s32 	%r6469, %r6468, %r6211;
	add.s32 	%r6470, %r6469, %r6462;
	add.s32 	%r6471, %r6470, %r6335;
	xor.b32  	%r6472, %r6409, %r6372;
	and.b32  	%r6473, %r6446, %r6472;
	xor.b32  	%r6474, %r6473, %r6372;
	add.s32 	%r6475, %r6471, %r6474;
	shf.l.wrap.b32 	%r6476, %r6446, %r6446, 18;
	xor.b32  	%r6477, %r6476, %r6446;
	shf.l.wrap.b32 	%r6478, %r6477, %r6477, 27;
	xor.b32  	%r6479, %r6478, %r6446;
	shf.l.wrap.b32 	%r6480, %r6479, %r6479, 26;
	add.s32 	%r6481, %r6475, %r6480;
	add.s32 	%r6482, %r6481, 1986661051;
	add.s32 	%r6483, %r6482, %r6346;
	shf.l.wrap.b32 	%r6484, %r6457, %r6457, 23;
	xor.b32  	%r6485, %r6484, %r6457;
	shf.l.wrap.b32 	%r6486, %r6485, %r6485, 21;
	xor.b32  	%r6487, %r6486, %r6457;
	shf.l.wrap.b32 	%r6488, %r6487, %r6487, 30;
	and.b32  	%r6489, %r6457, %r6420;
	or.b32  	%r6490, %r6457, %r6420;
	and.b32  	%r6491, %r6490, %r6383;
	or.b32  	%r6492, %r6491, %r6489;
	add.s32 	%r6493, %r6488, %r6492;
	add.s32 	%r6494, %r6493, %r6482;
	shf.l.wrap.b32 	%r6495, %r6433, %r6433, 15;
	shf.l.wrap.b32 	%r6496, %r6433, %r6433, 13;
	xor.b32  	%r6497, %r6495, %r6496;
	shr.u32 	%r6498, %r6433, 10;
	xor.b32  	%r6499, %r6497, %r6498;
	shf.l.wrap.b32 	%r6500, %r5952, %r5952, 25;
	shf.l.wrap.b32 	%r6501, %r5952, %r5952, 14;
	xor.b32  	%r6502, %r6500, %r6501;
	shr.u32 	%r6503, %r5952, 3;
	xor.b32  	%r6504, %r6502, %r6503;
	add.s32 	%r6505, %r6504, %r5915;
	add.s32 	%r6506, %r6505, %r6248;
	add.s32 	%r6507, %r6506, %r6499;
	add.s32 	%r6508, %r6507, %r6372;
	xor.b32  	%r6509, %r6446, %r6409;
	and.b32  	%r6510, %r6483, %r6509;
	xor.b32  	%r6511, %r6510, %r6409;
	add.s32 	%r6512, %r6508, %r6511;
	shf.l.wrap.b32 	%r6513, %r6483, %r6483, 18;
	xor.b32  	%r6514, %r6513, %r6483;
	shf.l.wrap.b32 	%r6515, %r6514, %r6514, 27;
	xor.b32  	%r6516, %r6515, %r6483;
	shf.l.wrap.b32 	%r6517, %r6516, %r6516, 26;
	add.s32 	%r6518, %r6512, %r6517;
	add.s32 	%r6519, %r6518, -2117940946;
	add.s32 	%r6520, %r6519, %r6383;
	shf.l.wrap.b32 	%r6521, %r6494, %r6494, 23;
	xor.b32  	%r6522, %r6521, %r6494;
	shf.l.wrap.b32 	%r6523, %r6522, %r6522, 21;
	xor.b32  	%r6524, %r6523, %r6494;
	shf.l.wrap.b32 	%r6525, %r6524, %r6524, 30;
	and.b32  	%r6526, %r6494, %r6457;
	or.b32  	%r6527, %r6494, %r6457;
	and.b32  	%r6528, %r6527, %r6420;
	or.b32  	%r6529, %r6528, %r6526;
	add.s32 	%r6530, %r6525, %r6529;
	add.s32 	%r6531, %r6530, %r6519;
	shf.l.wrap.b32 	%r6532, %r6470, %r6470, 15;
	shf.l.wrap.b32 	%r6533, %r6470, %r6470, 13;
	xor.b32  	%r6534, %r6532, %r6533;
	shr.u32 	%r6535, %r6470, 10;
	xor.b32  	%r6536, %r6534, %r6535;
	shf.l.wrap.b32 	%r6537, %r5989, %r5989, 25;
	shf.l.wrap.b32 	%r6538, %r5989, %r5989, 14;
	xor.b32  	%r6539, %r6537, %r6538;
	shr.u32 	%r6540, %r5989, 3;
	xor.b32  	%r6541, %r6539, %r6540;
	add.s32 	%r6542, %r6541, %r5952;
	add.s32 	%r6543, %r6542, %r6285;
	add.s32 	%r6544, %r6543, %r6536;
	add.s32 	%r6545, %r6544, %r6409;
	xor.b32  	%r6546, %r6483, %r6446;
	and.b32  	%r6547, %r6520, %r6546;
	xor.b32  	%r6548, %r6547, %r6446;
	add.s32 	%r6549, %r6545, %r6548;
	shf.l.wrap.b32 	%r6550, %r6520, %r6520, 18;
	xor.b32  	%r6551, %r6550, %r6520;
	shf.l.wrap.b32 	%r6552, %r6551, %r6551, 27;
	xor.b32  	%r6553, %r6552, %r6520;
	shf.l.wrap.b32 	%r6554, %r6553, %r6553, 26;
	add.s32 	%r6555, %r6549, %r6554;
	add.s32 	%r6556, %r6555, -1838011259;
	add.s32 	%r6557, %r6556, %r6420;
	shf.l.wrap.b32 	%r6558, %r6531, %r6531, 23;
	xor.b32  	%r6559, %r6558, %r6531;
	shf.l.wrap.b32 	%r6560, %r6559, %r6559, 21;
	xor.b32  	%r6561, %r6560, %r6531;
	shf.l.wrap.b32 	%r6562, %r6561, %r6561, 30;
	and.b32  	%r6563, %r6531, %r6494;
	or.b32  	%r6564, %r6531, %r6494;
	and.b32  	%r6565, %r6564, %r6457;
	or.b32  	%r6566, %r6565, %r6563;
	add.s32 	%r6567, %r6562, %r6566;
	add.s32 	%r6568, %r6567, %r6556;
	shf.l.wrap.b32 	%r6569, %r6507, %r6507, 15;
	shf.l.wrap.b32 	%r6570, %r6507, %r6507, 13;
	xor.b32  	%r6571, %r6569, %r6570;
	shr.u32 	%r6572, %r6507, 10;
	xor.b32  	%r6573, %r6571, %r6572;
	shf.l.wrap.b32 	%r6574, %r6026, %r6026, 25;
	shf.l.wrap.b32 	%r6575, %r6026, %r6026, 14;
	xor.b32  	%r6576, %r6574, %r6575;
	shr.u32 	%r6577, %r6026, 3;
	xor.b32  	%r6578, %r6576, %r6577;
	add.s32 	%r6579, %r6578, %r5989;
	add.s32 	%r6580, %r6579, %r6322;
	add.s32 	%r6581, %r6580, %r6573;
	add.s32 	%r6582, %r6581, %r6446;
	xor.b32  	%r6583, %r6520, %r6483;
	and.b32  	%r6584, %r6557, %r6583;
	xor.b32  	%r6585, %r6584, %r6483;
	add.s32 	%r6586, %r6582, %r6585;
	shf.l.wrap.b32 	%r6587, %r6557, %r6557, 18;
	xor.b32  	%r6588, %r6587, %r6557;
	shf.l.wrap.b32 	%r6589, %r6588, %r6588, 27;
	xor.b32  	%r6590, %r6589, %r6557;
	shf.l.wrap.b32 	%r6591, %r6590, %r6590, 26;
	add.s32 	%r6592, %r6586, %r6591;
	add.s32 	%r6593, %r6592, -1564481375;
	add.s32 	%r6594, %r6593, %r6457;
	shf.l.wrap.b32 	%r6595, %r6568, %r6568, 23;
	xor.b32  	%r6596, %r6595, %r6568;
	shf.l.wrap.b32 	%r6597, %r6596, %r6596, 21;
	xor.b32  	%r6598, %r6597, %r6568;
	shf.l.wrap.b32 	%r6599, %r6598, %r6598, 30;
	and.b32  	%r6600, %r6568, %r6531;
	or.b32  	%r6601, %r6568, %r6531;
	and.b32  	%r6602, %r6601, %r6494;
	or.b32  	%r6603, %r6602, %r6600;
	add.s32 	%r6604, %r6599, %r6603;
	add.s32 	%r6605, %r6604, %r6593;
	shf.l.wrap.b32 	%r6606, %r6544, %r6544, 15;
	shf.l.wrap.b32 	%r6607, %r6544, %r6544, 13;
	xor.b32  	%r6608, %r6606, %r6607;
	shr.u32 	%r6609, %r6544, 10;
	xor.b32  	%r6610, %r6608, %r6609;
	shf.l.wrap.b32 	%r6611, %r6063, %r6063, 25;
	shf.l.wrap.b32 	%r6612, %r6063, %r6063, 14;
	xor.b32  	%r6613, %r6611, %r6612;
	shr.u32 	%r6614, %r6063, 3;
	xor.b32  	%r6615, %r6613, %r6614;
	add.s32 	%r6616, %r6615, %r6026;
	add.s32 	%r6617, %r6616, %r6359;
	add.s32 	%r6618, %r6617, %r6610;
	add.s32 	%r6619, %r6618, %r6483;
	xor.b32  	%r6620, %r6557, %r6520;
	and.b32  	%r6621, %r6594, %r6620;
	xor.b32  	%r6622, %r6621, %r6520;
	add.s32 	%r6623, %r6619, %r6622;
	shf.l.wrap.b32 	%r6624, %r6594, %r6594, 18;
	xor.b32  	%r6625, %r6624, %r6594;
	shf.l.wrap.b32 	%r6626, %r6625, %r6625, 27;
	xor.b32  	%r6627, %r6626, %r6594;
	shf.l.wrap.b32 	%r6628, %r6627, %r6627, 26;
	add.s32 	%r6629, %r6623, %r6628;
	add.s32 	%r6630, %r6629, -1474664885;
	add.s32 	%r6631, %r6630, %r6494;
	shf.l.wrap.b32 	%r6632, %r6605, %r6605, 23;
	xor.b32  	%r6633, %r6632, %r6605;
	shf.l.wrap.b32 	%r6634, %r6633, %r6633, 21;
	xor.b32  	%r6635, %r6634, %r6605;
	shf.l.wrap.b32 	%r6636, %r6635, %r6635, 30;
	and.b32  	%r6637, %r6605, %r6568;
	or.b32  	%r6638, %r6605, %r6568;
	and.b32  	%r6639, %r6638, %r6531;
	or.b32  	%r6640, %r6639, %r6637;
	add.s32 	%r6641, %r6636, %r6640;
	add.s32 	%r6642, %r6641, %r6630;
	shf.l.wrap.b32 	%r6643, %r6581, %r6581, 15;
	shf.l.wrap.b32 	%r6644, %r6581, %r6581, 13;
	xor.b32  	%r6645, %r6643, %r6644;
	shr.u32 	%r6646, %r6581, 10;
	xor.b32  	%r6647, %r6645, %r6646;
	shf.l.wrap.b32 	%r6648, %r6100, %r6100, 25;
	shf.l.wrap.b32 	%r6649, %r6100, %r6100, 14;
	xor.b32  	%r6650, %r6648, %r6649;
	shr.u32 	%r6651, %r6100, 3;
	xor.b32  	%r6652, %r6650, %r6651;
	add.s32 	%r6653, %r6652, %r6063;
	add.s32 	%r6654, %r6653, %r6396;
	add.s32 	%r6655, %r6654, %r6647;
	add.s32 	%r6656, %r6655, %r6520;
	xor.b32  	%r6657, %r6594, %r6557;
	and.b32  	%r6658, %r6631, %r6657;
	xor.b32  	%r6659, %r6658, %r6557;
	add.s32 	%r6660, %r6656, %r6659;
	shf.l.wrap.b32 	%r6661, %r6631, %r6631, 18;
	xor.b32  	%r6662, %r6661, %r6631;
	shf.l.wrap.b32 	%r6663, %r6662, %r6662, 27;
	xor.b32  	%r6664, %r6663, %r6631;
	shf.l.wrap.b32 	%r6665, %r6664, %r6664, 26;
	add.s32 	%r6666, %r6660, %r6665;
	add.s32 	%r6667, %r6666, -1035236496;
	add.s32 	%r6668, %r6667, %r6531;
	shf.l.wrap.b32 	%r6669, %r6642, %r6642, 23;
	xor.b32  	%r6670, %r6669, %r6642;
	shf.l.wrap.b32 	%r6671, %r6670, %r6670, 21;
	xor.b32  	%r6672, %r6671, %r6642;
	shf.l.wrap.b32 	%r6673, %r6672, %r6672, 30;
	and.b32  	%r6674, %r6642, %r6605;
	or.b32  	%r6675, %r6642, %r6605;
	and.b32  	%r6676, %r6675, %r6568;
	or.b32  	%r6677, %r6676, %r6674;
	add.s32 	%r6678, %r6673, %r6677;
	add.s32 	%r6679, %r6678, %r6667;
	shf.l.wrap.b32 	%r6680, %r6618, %r6618, 15;
	shf.l.wrap.b32 	%r6681, %r6618, %r6618, 13;
	xor.b32  	%r6682, %r6680, %r6681;
	shr.u32 	%r6683, %r6618, 10;
	xor.b32  	%r6684, %r6682, %r6683;
	shf.l.wrap.b32 	%r6685, %r6137, %r6137, 25;
	shf.l.wrap.b32 	%r6686, %r6137, %r6137, 14;
	xor.b32  	%r6687, %r6685, %r6686;
	shr.u32 	%r6688, %r6137, 3;
	xor.b32  	%r6689, %r6687, %r6688;
	add.s32 	%r6690, %r6689, %r6100;
	add.s32 	%r6691, %r6690, %r6433;
	add.s32 	%r6692, %r6691, %r6684;
	add.s32 	%r6693, %r6692, %r6557;
	xor.b32  	%r6694, %r6631, %r6594;
	and.b32  	%r6695, %r6668, %r6694;
	xor.b32  	%r6696, %r6695, %r6594;
	add.s32 	%r6697, %r6693, %r6696;
	shf.l.wrap.b32 	%r6698, %r6668, %r6668, 18;
	xor.b32  	%r6699, %r6698, %r6668;
	shf.l.wrap.b32 	%r6700, %r6699, %r6699, 27;
	xor.b32  	%r6701, %r6700, %r6668;
	shf.l.wrap.b32 	%r6702, %r6701, %r6701, 26;
	add.s32 	%r6703, %r6697, %r6702;
	add.s32 	%r6704, %r6703, -949202525;
	add.s32 	%r6705, %r6704, %r6568;
	shf.l.wrap.b32 	%r6706, %r6679, %r6679, 23;
	xor.b32  	%r6707, %r6706, %r6679;
	shf.l.wrap.b32 	%r6708, %r6707, %r6707, 21;
	xor.b32  	%r6709, %r6708, %r6679;
	shf.l.wrap.b32 	%r6710, %r6709, %r6709, 30;
	and.b32  	%r6711, %r6679, %r6642;
	or.b32  	%r6712, %r6679, %r6642;
	and.b32  	%r6713, %r6712, %r6605;
	or.b32  	%r6714, %r6713, %r6711;
	add.s32 	%r6715, %r6710, %r6714;
	add.s32 	%r6716, %r6715, %r6704;
	shf.l.wrap.b32 	%r6717, %r6655, %r6655, 15;
	shf.l.wrap.b32 	%r6718, %r6655, %r6655, 13;
	xor.b32  	%r6719, %r6717, %r6718;
	shr.u32 	%r6720, %r6655, 10;
	xor.b32  	%r6721, %r6719, %r6720;
	shf.l.wrap.b32 	%r6722, %r6174, %r6174, 25;
	shf.l.wrap.b32 	%r6723, %r6174, %r6174, 14;
	xor.b32  	%r6724, %r6722, %r6723;
	shr.u32 	%r6725, %r6174, 3;
	xor.b32  	%r6726, %r6724, %r6725;
	add.s32 	%r6727, %r6726, %r6137;
	add.s32 	%r6728, %r6727, %r6470;
	add.s32 	%r6729, %r6728, %r6721;
	add.s32 	%r6730, %r6729, %r6594;
	xor.b32  	%r6731, %r6668, %r6631;
	and.b32  	%r6732, %r6705, %r6731;
	xor.b32  	%r6733, %r6732, %r6631;
	add.s32 	%r6734, %r6730, %r6733;
	shf.l.wrap.b32 	%r6735, %r6705, %r6705, 18;
	xor.b32  	%r6736, %r6735, %r6705;
	shf.l.wrap.b32 	%r6737, %r6736, %r6736, 27;
	xor.b32  	%r6738, %r6737, %r6705;
	shf.l.wrap.b32 	%r6739, %r6738, %r6738, 26;
	add.s32 	%r6740, %r6734, %r6739;
	add.s32 	%r6741, %r6740, -778901479;
	add.s32 	%r6742, %r6741, %r6605;
	shf.l.wrap.b32 	%r6743, %r6716, %r6716, 23;
	xor.b32  	%r6744, %r6743, %r6716;
	shf.l.wrap.b32 	%r6745, %r6744, %r6744, 21;
	xor.b32  	%r6746, %r6745, %r6716;
	shf.l.wrap.b32 	%r6747, %r6746, %r6746, 30;
	and.b32  	%r6748, %r6716, %r6679;
	or.b32  	%r6749, %r6716, %r6679;
	and.b32  	%r6750, %r6749, %r6642;
	or.b32  	%r6751, %r6750, %r6748;
	add.s32 	%r6752, %r6747, %r6751;
	add.s32 	%r6753, %r6752, %r6741;
	shf.l.wrap.b32 	%r6754, %r6692, %r6692, 15;
	shf.l.wrap.b32 	%r6755, %r6692, %r6692, 13;
	xor.b32  	%r6756, %r6754, %r6755;
	shr.u32 	%r6757, %r6692, 10;
	xor.b32  	%r6758, %r6756, %r6757;
	shf.l.wrap.b32 	%r6759, %r6211, %r6211, 25;
	shf.l.wrap.b32 	%r6760, %r6211, %r6211, 14;
	xor.b32  	%r6761, %r6759, %r6760;
	shr.u32 	%r6762, %r6211, 3;
	xor.b32  	%r6763, %r6761, %r6762;
	add.s32 	%r6764, %r6763, %r6174;
	add.s32 	%r6765, %r6764, %r6507;
	add.s32 	%r6766, %r6765, %r6758;
	add.s32 	%r6767, %r6766, %r6631;
	xor.b32  	%r6768, %r6705, %r6668;
	and.b32  	%r6769, %r6742, %r6768;
	xor.b32  	%r6770, %r6769, %r6668;
	add.s32 	%r6771, %r6767, %r6770;
	shf.l.wrap.b32 	%r6772, %r6742, %r6742, 18;
	xor.b32  	%r6773, %r6772, %r6742;
	shf.l.wrap.b32 	%r6774, %r6773, %r6773, 27;
	xor.b32  	%r6775, %r6774, %r6742;
	shf.l.wrap.b32 	%r6776, %r6775, %r6775, 26;
	add.s32 	%r6777, %r6771, %r6776;
	add.s32 	%r6778, %r6777, -694614492;
	add.s32 	%r6779, %r6778, %r6642;
	shf.l.wrap.b32 	%r6780, %r6753, %r6753, 23;
	xor.b32  	%r6781, %r6780, %r6753;
	shf.l.wrap.b32 	%r6782, %r6781, %r6781, 21;
	xor.b32  	%r6783, %r6782, %r6753;
	shf.l.wrap.b32 	%r6784, %r6783, %r6783, 30;
	and.b32  	%r6785, %r6753, %r6716;
	or.b32  	%r6786, %r6753, %r6716;
	and.b32  	%r6787, %r6786, %r6679;
	or.b32  	%r6788, %r6787, %r6785;
	add.s32 	%r6789, %r6784, %r6788;
	add.s32 	%r6790, %r6789, %r6778;
	shf.l.wrap.b32 	%r6791, %r6729, %r6729, 15;
	shf.l.wrap.b32 	%r6792, %r6729, %r6729, 13;
	xor.b32  	%r6793, %r6791, %r6792;
	shr.u32 	%r6794, %r6729, 10;
	xor.b32  	%r6795, %r6793, %r6794;
	shf.l.wrap.b32 	%r6796, %r6248, %r6248, 25;
	shf.l.wrap.b32 	%r6797, %r6248, %r6248, 14;
	xor.b32  	%r6798, %r6796, %r6797;
	shr.u32 	%r6799, %r6248, 3;
	xor.b32  	%r6800, %r6798, %r6799;
	add.s32 	%r6801, %r6800, %r6211;
	add.s32 	%r6802, %r6801, %r6544;
	add.s32 	%r6803, %r6802, %r6795;
	add.s32 	%r6804, %r6803, %r6668;
	xor.b32  	%r6805, %r6742, %r6705;
	and.b32  	%r6806, %r6779, %r6805;
	xor.b32  	%r6807, %r6806, %r6705;
	add.s32 	%r6808, %r6804, %r6807;
	shf.l.wrap.b32 	%r6809, %r6779, %r6779, 18;
	xor.b32  	%r6810, %r6809, %r6779;
	shf.l.wrap.b32 	%r6811, %r6810, %r6810, 27;
	xor.b32  	%r6812, %r6811, %r6779;
	shf.l.wrap.b32 	%r6813, %r6812, %r6812, 26;
	add.s32 	%r6814, %r6808, %r6813;
	add.s32 	%r6815, %r6814, -200395387;
	add.s32 	%r6816, %r6815, %r6679;
	shf.l.wrap.b32 	%r6817, %r6790, %r6790, 23;
	xor.b32  	%r6818, %r6817, %r6790;
	shf.l.wrap.b32 	%r6819, %r6818, %r6818, 21;
	xor.b32  	%r6820, %r6819, %r6790;
	shf.l.wrap.b32 	%r6821, %r6820, %r6820, 30;
	and.b32  	%r6822, %r6790, %r6753;
	or.b32  	%r6823, %r6790, %r6753;
	and.b32  	%r6824, %r6823, %r6716;
	or.b32  	%r6825, %r6824, %r6822;
	add.s32 	%r6826, %r6821, %r6825;
	add.s32 	%r6827, %r6826, %r6815;
	shf.l.wrap.b32 	%r6828, %r6766, %r6766, 15;
	shf.l.wrap.b32 	%r6829, %r6766, %r6766, 13;
	xor.b32  	%r6830, %r6828, %r6829;
	shr.u32 	%r6831, %r6766, 10;
	xor.b32  	%r6832, %r6830, %r6831;
	shf.l.wrap.b32 	%r6833, %r6285, %r6285, 25;
	shf.l.wrap.b32 	%r6834, %r6285, %r6285, 14;
	xor.b32  	%r6835, %r6833, %r6834;
	shr.u32 	%r6836, %r6285, 3;
	xor.b32  	%r6837, %r6835, %r6836;
	add.s32 	%r6838, %r6837, %r6248;
	add.s32 	%r6839, %r6838, %r6581;
	add.s32 	%r6840, %r6839, %r6832;
	add.s32 	%r6841, %r6840, %r6705;
	xor.b32  	%r6842, %r6779, %r6742;
	and.b32  	%r6843, %r6816, %r6842;
	xor.b32  	%r6844, %r6843, %r6742;
	add.s32 	%r6845, %r6841, %r6844;
	shf.l.wrap.b32 	%r6846, %r6816, %r6816, 18;
	xor.b32  	%r6847, %r6846, %r6816;
	shf.l.wrap.b32 	%r6848, %r6847, %r6847, 27;
	xor.b32  	%r6849, %r6848, %r6816;
	shf.l.wrap.b32 	%r6850, %r6849, %r6849, 26;
	add.s32 	%r6851, %r6845, %r6850;
	add.s32 	%r6852, %r6851, 275423344;
	add.s32 	%r6853, %r6852, %r6716;
	shf.l.wrap.b32 	%r6854, %r6827, %r6827, 23;
	xor.b32  	%r6855, %r6854, %r6827;
	shf.l.wrap.b32 	%r6856, %r6855, %r6855, 21;
	xor.b32  	%r6857, %r6856, %r6827;
	shf.l.wrap.b32 	%r6858, %r6857, %r6857, 30;
	and.b32  	%r6859, %r6827, %r6790;
	or.b32  	%r6860, %r6827, %r6790;
	and.b32  	%r6861, %r6860, %r6753;
	or.b32  	%r6862, %r6861, %r6859;
	add.s32 	%r6863, %r6858, %r6862;
	add.s32 	%r6864, %r6863, %r6852;
	shf.l.wrap.b32 	%r6865, %r6803, %r6803, 15;
	shf.l.wrap.b32 	%r6866, %r6803, %r6803, 13;
	xor.b32  	%r6867, %r6865, %r6866;
	shr.u32 	%r6868, %r6803, 10;
	xor.b32  	%r6869, %r6867, %r6868;
	shf.l.wrap.b32 	%r6870, %r6322, %r6322, 25;
	shf.l.wrap.b32 	%r6871, %r6322, %r6322, 14;
	xor.b32  	%r6872, %r6870, %r6871;
	shr.u32 	%r6873, %r6322, 3;
	xor.b32  	%r6874, %r6872, %r6873;
	add.s32 	%r6875, %r6874, %r6285;
	add.s32 	%r6876, %r6875, %r6618;
	add.s32 	%r6877, %r6876, %r6869;
	add.s32 	%r6878, %r6877, %r6742;
	xor.b32  	%r6879, %r6816, %r6779;
	and.b32  	%r6880, %r6853, %r6879;
	xor.b32  	%r6881, %r6880, %r6779;
	add.s32 	%r6882, %r6878, %r6881;
	shf.l.wrap.b32 	%r6883, %r6853, %r6853, 18;
	xor.b32  	%r6884, %r6883, %r6853;
	shf.l.wrap.b32 	%r6885, %r6884, %r6884, 27;
	xor.b32  	%r6886, %r6885, %r6853;
	shf.l.wrap.b32 	%r6887, %r6886, %r6886, 26;
	add.s32 	%r6888, %r6882, %r6887;
	add.s32 	%r6889, %r6888, 430227734;
	add.s32 	%r6890, %r6889, %r6753;
	shf.l.wrap.b32 	%r6891, %r6864, %r6864, 23;
	xor.b32  	%r6892, %r6891, %r6864;
	shf.l.wrap.b32 	%r6893, %r6892, %r6892, 21;
	xor.b32  	%r6894, %r6893, %r6864;
	shf.l.wrap.b32 	%r6895, %r6894, %r6894, 30;
	and.b32  	%r6896, %r6864, %r6827;
	or.b32  	%r6897, %r6864, %r6827;
	and.b32  	%r6898, %r6897, %r6790;
	or.b32  	%r6899, %r6898, %r6896;
	add.s32 	%r6900, %r6895, %r6899;
	add.s32 	%r6901, %r6900, %r6889;
	shf.l.wrap.b32 	%r6902, %r6840, %r6840, 15;
	shf.l.wrap.b32 	%r6903, %r6840, %r6840, 13;
	xor.b32  	%r6904, %r6902, %r6903;
	shr.u32 	%r6905, %r6840, 10;
	xor.b32  	%r6906, %r6904, %r6905;
	shf.l.wrap.b32 	%r6907, %r6359, %r6359, 25;
	shf.l.wrap.b32 	%r6908, %r6359, %r6359, 14;
	xor.b32  	%r6909, %r6907, %r6908;
	shr.u32 	%r6910, %r6359, 3;
	xor.b32  	%r6911, %r6909, %r6910;
	add.s32 	%r6912, %r6911, %r6322;
	add.s32 	%r6913, %r6912, %r6655;
	add.s32 	%r6914, %r6913, %r6906;
	add.s32 	%r6915, %r6914, %r6779;
	xor.b32  	%r6916, %r6853, %r6816;
	and.b32  	%r6917, %r6890, %r6916;
	xor.b32  	%r6918, %r6917, %r6816;
	add.s32 	%r6919, %r6915, %r6918;
	shf.l.wrap.b32 	%r6920, %r6890, %r6890, 18;
	xor.b32  	%r6921, %r6920, %r6890;
	shf.l.wrap.b32 	%r6922, %r6921, %r6921, 27;
	xor.b32  	%r6923, %r6922, %r6890;
	shf.l.wrap.b32 	%r6924, %r6923, %r6923, 26;
	add.s32 	%r6925, %r6919, %r6924;
	add.s32 	%r6926, %r6925, 506948616;
	add.s32 	%r6927, %r6926, %r6790;
	shf.l.wrap.b32 	%r6928, %r6901, %r6901, 23;
	xor.b32  	%r6929, %r6928, %r6901;
	shf.l.wrap.b32 	%r6930, %r6929, %r6929, 21;
	xor.b32  	%r6931, %r6930, %r6901;
	shf.l.wrap.b32 	%r6932, %r6931, %r6931, 30;
	and.b32  	%r6933, %r6901, %r6864;
	or.b32  	%r6934, %r6901, %r6864;
	and.b32  	%r6935, %r6934, %r6827;
	or.b32  	%r6936, %r6935, %r6933;
	add.s32 	%r6937, %r6932, %r6936;
	add.s32 	%r6938, %r6937, %r6926;
	shf.l.wrap.b32 	%r6939, %r6877, %r6877, 15;
	shf.l.wrap.b32 	%r6940, %r6877, %r6877, 13;
	xor.b32  	%r6941, %r6939, %r6940;
	shr.u32 	%r6942, %r6877, 10;
	xor.b32  	%r6943, %r6941, %r6942;
	shf.l.wrap.b32 	%r6944, %r6396, %r6396, 25;
	shf.l.wrap.b32 	%r6945, %r6396, %r6396, 14;
	xor.b32  	%r6946, %r6944, %r6945;
	shr.u32 	%r6947, %r6396, 3;
	xor.b32  	%r6948, %r6946, %r6947;
	add.s32 	%r6949, %r6948, %r6359;
	add.s32 	%r6950, %r6949, %r6692;
	add.s32 	%r6951, %r6950, %r6943;
	add.s32 	%r6952, %r6951, %r6816;
	xor.b32  	%r6953, %r6890, %r6853;
	and.b32  	%r6954, %r6927, %r6953;
	xor.b32  	%r6955, %r6954, %r6853;
	add.s32 	%r6956, %r6952, %r6955;
	shf.l.wrap.b32 	%r6957, %r6927, %r6927, 18;
	xor.b32  	%r6958, %r6957, %r6927;
	shf.l.wrap.b32 	%r6959, %r6958, %r6958, 27;
	xor.b32  	%r6960, %r6959, %r6927;
	shf.l.wrap.b32 	%r6961, %r6960, %r6960, 26;
	add.s32 	%r6962, %r6956, %r6961;
	add.s32 	%r6963, %r6962, 659060556;
	add.s32 	%r6964, %r6963, %r6827;
	shf.l.wrap.b32 	%r6965, %r6938, %r6938, 23;
	xor.b32  	%r6966, %r6965, %r6938;
	shf.l.wrap.b32 	%r6967, %r6966, %r6966, 21;
	xor.b32  	%r6968, %r6967, %r6938;
	shf.l.wrap.b32 	%r6969, %r6968, %r6968, 30;
	and.b32  	%r6970, %r6938, %r6901;
	or.b32  	%r6971, %r6938, %r6901;
	and.b32  	%r6972, %r6971, %r6864;
	or.b32  	%r6973, %r6972, %r6970;
	add.s32 	%r6974, %r6969, %r6973;
	add.s32 	%r6975, %r6974, %r6963;
	shf.l.wrap.b32 	%r6976, %r6914, %r6914, 15;
	shf.l.wrap.b32 	%r6977, %r6914, %r6914, 13;
	xor.b32  	%r6978, %r6976, %r6977;
	shr.u32 	%r6979, %r6914, 10;
	xor.b32  	%r6980, %r6978, %r6979;
	shf.l.wrap.b32 	%r6981, %r6433, %r6433, 25;
	shf.l.wrap.b32 	%r6982, %r6433, %r6433, 14;
	xor.b32  	%r6983, %r6981, %r6982;
	shr.u32 	%r6984, %r6433, 3;
	xor.b32  	%r6985, %r6983, %r6984;
	add.s32 	%r6986, %r6985, %r6396;
	add.s32 	%r6987, %r6986, %r6729;
	add.s32 	%r6988, %r6987, %r6980;
	add.s32 	%r6989, %r6988, %r6853;
	xor.b32  	%r6990, %r6927, %r6890;
	and.b32  	%r6991, %r6964, %r6990;
	xor.b32  	%r6992, %r6991, %r6890;
	add.s32 	%r6993, %r6989, %r6992;
	shf.l.wrap.b32 	%r6994, %r6964, %r6964, 18;
	xor.b32  	%r6995, %r6994, %r6964;
	shf.l.wrap.b32 	%r6996, %r6995, %r6995, 27;
	xor.b32  	%r6997, %r6996, %r6964;
	shf.l.wrap.b32 	%r6998, %r6997, %r6997, 26;
	add.s32 	%r6999, %r6993, %r6998;
	add.s32 	%r7000, %r6999, 883997877;
	add.s32 	%r7001, %r7000, %r6864;
	shf.l.wrap.b32 	%r7002, %r6975, %r6975, 23;
	xor.b32  	%r7003, %r7002, %r6975;
	shf.l.wrap.b32 	%r7004, %r7003, %r7003, 21;
	xor.b32  	%r7005, %r7004, %r6975;
	shf.l.wrap.b32 	%r7006, %r7005, %r7005, 30;
	and.b32  	%r7007, %r6975, %r6938;
	or.b32  	%r7008, %r6975, %r6938;
	and.b32  	%r7009, %r7008, %r6901;
	or.b32  	%r7010, %r7009, %r7007;
	add.s32 	%r7011, %r7006, %r7010;
	add.s32 	%r7012, %r7011, %r7000;
	shf.l.wrap.b32 	%r7013, %r6951, %r6951, 15;
	shf.l.wrap.b32 	%r7014, %r6951, %r6951, 13;
	xor.b32  	%r7015, %r7013, %r7014;
	shr.u32 	%r7016, %r6951, 10;
	xor.b32  	%r7017, %r7015, %r7016;
	shf.l.wrap.b32 	%r7018, %r6470, %r6470, 25;
	shf.l.wrap.b32 	%r7019, %r6470, %r6470, 14;
	xor.b32  	%r7020, %r7018, %r7019;
	shr.u32 	%r7021, %r6470, 3;
	xor.b32  	%r7022, %r7020, %r7021;
	add.s32 	%r7023, %r7022, %r6433;
	add.s32 	%r7024, %r7023, %r6766;
	add.s32 	%r7025, %r7024, %r7017;
	add.s32 	%r7026, %r7025, %r6890;
	xor.b32  	%r7027, %r6964, %r6927;
	and.b32  	%r7028, %r7001, %r7027;
	xor.b32  	%r7029, %r7028, %r6927;
	add.s32 	%r7030, %r7026, %r7029;
	shf.l.wrap.b32 	%r7031, %r7001, %r7001, 18;
	xor.b32  	%r7032, %r7031, %r7001;
	shf.l.wrap.b32 	%r7033, %r7032, %r7032, 27;
	xor.b32  	%r7034, %r7033, %r7001;
	shf.l.wrap.b32 	%r7035, %r7034, %r7034, 26;
	add.s32 	%r7036, %r7030, %r7035;
	add.s32 	%r7037, %r7036, 958139571;
	add.s32 	%r7038, %r7037, %r6901;
	shf.l.wrap.b32 	%r7039, %r7012, %r7012, 23;
	xor.b32  	%r7040, %r7039, %r7012;
	shf.l.wrap.b32 	%r7041, %r7040, %r7040, 21;
	xor.b32  	%r7042, %r7041, %r7012;
	shf.l.wrap.b32 	%r7043, %r7042, %r7042, 30;
	and.b32  	%r7044, %r7012, %r6975;
	or.b32  	%r7045, %r7012, %r6975;
	and.b32  	%r7046, %r7045, %r6938;
	or.b32  	%r7047, %r7046, %r7044;
	add.s32 	%r7048, %r7043, %r7047;
	add.s32 	%r7049, %r7048, %r7037;
	shf.l.wrap.b32 	%r7050, %r6988, %r6988, 15;
	shf.l.wrap.b32 	%r7051, %r6988, %r6988, 13;
	xor.b32  	%r7052, %r7050, %r7051;
	shr.u32 	%r7053, %r6988, 10;
	xor.b32  	%r7054, %r7052, %r7053;
	shf.l.wrap.b32 	%r7055, %r6507, %r6507, 25;
	shf.l.wrap.b32 	%r7056, %r6507, %r6507, 14;
	xor.b32  	%r7057, %r7055, %r7056;
	shr.u32 	%r7058, %r6507, 3;
	xor.b32  	%r7059, %r7057, %r7058;
	add.s32 	%r7060, %r7059, %r6470;
	add.s32 	%r7061, %r7060, %r6803;
	add.s32 	%r7062, %r7061, %r7054;
	add.s32 	%r7063, %r7062, %r6927;
	xor.b32  	%r7064, %r7001, %r6964;
	and.b32  	%r7065, %r7038, %r7064;
	xor.b32  	%r7066, %r7065, %r6964;
	add.s32 	%r7067, %r7063, %r7066;
	shf.l.wrap.b32 	%r7068, %r7038, %r7038, 18;
	xor.b32  	%r7069, %r7068, %r7038;
	shf.l.wrap.b32 	%r7070, %r7069, %r7069, 27;
	xor.b32  	%r7071, %r7070, %r7038;
	shf.l.wrap.b32 	%r7072, %r7071, %r7071, 26;
	add.s32 	%r7073, %r7067, %r7072;
	add.s32 	%r7074, %r7073, 1322822218;
	add.s32 	%r7075, %r7074, %r6938;
	shf.l.wrap.b32 	%r7076, %r7049, %r7049, 23;
	xor.b32  	%r7077, %r7076, %r7049;
	shf.l.wrap.b32 	%r7078, %r7077, %r7077, 21;
	xor.b32  	%r7079, %r7078, %r7049;
	shf.l.wrap.b32 	%r7080, %r7079, %r7079, 30;
	and.b32  	%r7081, %r7049, %r7012;
	or.b32  	%r7082, %r7049, %r7012;
	and.b32  	%r7083, %r7082, %r6975;
	or.b32  	%r7084, %r7083, %r7081;
	add.s32 	%r7085, %r7080, %r7084;
	add.s32 	%r7086, %r7085, %r7074;
	shf.l.wrap.b32 	%r7087, %r7025, %r7025, 15;
	shf.l.wrap.b32 	%r7088, %r7025, %r7025, 13;
	xor.b32  	%r7089, %r7087, %r7088;
	shr.u32 	%r7090, %r7025, 10;
	xor.b32  	%r7091, %r7089, %r7090;
	shf.l.wrap.b32 	%r7092, %r6544, %r6544, 25;
	shf.l.wrap.b32 	%r7093, %r6544, %r6544, 14;
	xor.b32  	%r7094, %r7092, %r7093;
	shr.u32 	%r7095, %r6544, 3;
	xor.b32  	%r7096, %r7094, %r7095;
	add.s32 	%r7097, %r7096, %r6507;
	add.s32 	%r7098, %r7097, %r6840;
	add.s32 	%r7099, %r7098, %r7091;
	add.s32 	%r7100, %r7099, %r6964;
	xor.b32  	%r7101, %r7038, %r7001;
	and.b32  	%r7102, %r7075, %r7101;
	xor.b32  	%r7103, %r7102, %r7001;
	add.s32 	%r7104, %r7100, %r7103;
	shf.l.wrap.b32 	%r7105, %r7075, %r7075, 18;
	xor.b32  	%r7106, %r7105, %r7075;
	shf.l.wrap.b32 	%r7107, %r7106, %r7106, 27;
	xor.b32  	%r7108, %r7107, %r7075;
	shf.l.wrap.b32 	%r7109, %r7108, %r7108, 26;
	add.s32 	%r7110, %r7104, %r7109;
	add.s32 	%r7111, %r7110, 1537002063;
	add.s32 	%r7112, %r7111, %r6975;
	shf.l.wrap.b32 	%r7113, %r7086, %r7086, 23;
	xor.b32  	%r7114, %r7113, %r7086;
	shf.l.wrap.b32 	%r7115, %r7114, %r7114, 21;
	xor.b32  	%r7116, %r7115, %r7086;
	shf.l.wrap.b32 	%r7117, %r7116, %r7116, 30;
	and.b32  	%r7118, %r7086, %r7049;
	or.b32  	%r7119, %r7086, %r7049;
	and.b32  	%r7120, %r7119, %r7012;
	or.b32  	%r7121, %r7120, %r7118;
	add.s32 	%r7122, %r7117, %r7121;
	add.s32 	%r7123, %r7122, %r7111;
	shf.l.wrap.b32 	%r7124, %r7062, %r7062, 15;
	shf.l.wrap.b32 	%r7125, %r7062, %r7062, 13;
	xor.b32  	%r7126, %r7124, %r7125;
	shr.u32 	%r7127, %r7062, 10;
	xor.b32  	%r7128, %r7126, %r7127;
	shf.l.wrap.b32 	%r7129, %r6581, %r6581, 25;
	shf.l.wrap.b32 	%r7130, %r6581, %r6581, 14;
	xor.b32  	%r7131, %r7129, %r7130;
	shr.u32 	%r7132, %r6581, 3;
	xor.b32  	%r7133, %r7131, %r7132;
	add.s32 	%r7134, %r7133, %r6544;
	add.s32 	%r7135, %r7134, %r6877;
	add.s32 	%r7136, %r7135, %r7128;
	add.s32 	%r7137, %r7136, %r7001;
	xor.b32  	%r7138, %r7075, %r7038;
	and.b32  	%r7139, %r7112, %r7138;
	xor.b32  	%r7140, %r7139, %r7038;
	add.s32 	%r7141, %r7137, %r7140;
	shf.l.wrap.b32 	%r7142, %r7112, %r7112, 18;
	xor.b32  	%r7143, %r7142, %r7112;
	shf.l.wrap.b32 	%r7144, %r7143, %r7143, 27;
	xor.b32  	%r7145, %r7144, %r7112;
	shf.l.wrap.b32 	%r7146, %r7145, %r7145, 26;
	add.s32 	%r7147, %r7141, %r7146;
	add.s32 	%r7148, %r7147, 1747873779;
	add.s32 	%r7149, %r7148, %r7012;
	shf.l.wrap.b32 	%r7150, %r7123, %r7123, 23;
	xor.b32  	%r7151, %r7150, %r7123;
	shf.l.wrap.b32 	%r7152, %r7151, %r7151, 21;
	xor.b32  	%r7153, %r7152, %r7123;
	shf.l.wrap.b32 	%r7154, %r7153, %r7153, 30;
	and.b32  	%r7155, %r7123, %r7086;
	or.b32  	%r7156, %r7123, %r7086;
	and.b32  	%r7157, %r7156, %r7049;
	or.b32  	%r7158, %r7157, %r7155;
	add.s32 	%r7159, %r7154, %r7158;
	add.s32 	%r7160, %r7159, %r7148;
	shf.l.wrap.b32 	%r7161, %r7099, %r7099, 15;
	shf.l.wrap.b32 	%r7162, %r7099, %r7099, 13;
	xor.b32  	%r7163, %r7161, %r7162;
	shr.u32 	%r7164, %r7099, 10;
	xor.b32  	%r7165, %r7163, %r7164;
	shf.l.wrap.b32 	%r7166, %r6618, %r6618, 25;
	shf.l.wrap.b32 	%r7167, %r6618, %r6618, 14;
	xor.b32  	%r7168, %r7166, %r7167;
	shr.u32 	%r7169, %r6618, 3;
	xor.b32  	%r7170, %r7168, %r7169;
	add.s32 	%r7171, %r7170, %r6581;
	add.s32 	%r7172, %r7171, %r6914;
	add.s32 	%r7173, %r7172, %r7165;
	add.s32 	%r7174, %r7173, %r7038;
	xor.b32  	%r7175, %r7112, %r7075;
	and.b32  	%r7176, %r7149, %r7175;
	xor.b32  	%r7177, %r7176, %r7075;
	add.s32 	%r7178, %r7174, %r7177;
	shf.l.wrap.b32 	%r7179, %r7149, %r7149, 18;
	xor.b32  	%r7180, %r7179, %r7149;
	shf.l.wrap.b32 	%r7181, %r7180, %r7180, 27;
	xor.b32  	%r7182, %r7181, %r7149;
	shf.l.wrap.b32 	%r7183, %r7182, %r7182, 26;
	add.s32 	%r7184, %r7178, %r7183;
	add.s32 	%r7185, %r7184, 1955562222;
	add.s32 	%r7186, %r7185, %r7049;
	shf.l.wrap.b32 	%r7187, %r7160, %r7160, 23;
	xor.b32  	%r7188, %r7187, %r7160;
	shf.l.wrap.b32 	%r7189, %r7188, %r7188, 21;
	xor.b32  	%r7190, %r7189, %r7160;
	shf.l.wrap.b32 	%r7191, %r7190, %r7190, 30;
	and.b32  	%r7192, %r7160, %r7123;
	or.b32  	%r7193, %r7160, %r7123;
	and.b32  	%r7194, %r7193, %r7086;
	or.b32  	%r7195, %r7194, %r7192;
	add.s32 	%r7196, %r7191, %r7195;
	add.s32 	%r7197, %r7196, %r7185;
	shf.l.wrap.b32 	%r7198, %r7136, %r7136, 15;
	shf.l.wrap.b32 	%r7199, %r7136, %r7136, 13;
	xor.b32  	%r7200, %r7198, %r7199;
	shr.u32 	%r7201, %r7136, 10;
	xor.b32  	%r7202, %r7200, %r7201;
	shf.l.wrap.b32 	%r7203, %r6655, %r6655, 25;
	shf.l.wrap.b32 	%r7204, %r6655, %r6655, 14;
	xor.b32  	%r7205, %r7203, %r7204;
	shr.u32 	%r7206, %r6655, 3;
	xor.b32  	%r7207, %r7205, %r7206;
	add.s32 	%r7208, %r7207, %r6618;
	add.s32 	%r7209, %r7208, %r6951;
	add.s32 	%r7210, %r7209, %r7202;
	add.s32 	%r7211, %r7210, %r7075;
	xor.b32  	%r7212, %r7149, %r7112;
	and.b32  	%r7213, %r7186, %r7212;
	xor.b32  	%r7214, %r7213, %r7112;
	add.s32 	%r7215, %r7211, %r7214;
	shf.l.wrap.b32 	%r7216, %r7186, %r7186, 18;
	xor.b32  	%r7217, %r7216, %r7186;
	shf.l.wrap.b32 	%r7218, %r7217, %r7217, 27;
	xor.b32  	%r7219, %r7218, %r7186;
	shf.l.wrap.b32 	%r7220, %r7219, %r7219, 26;
	add.s32 	%r7221, %r7215, %r7220;
	add.s32 	%r7222, %r7221, 2024104815;
	add.s32 	%r7223, %r7222, %r7086;
	shf.l.wrap.b32 	%r7224, %r7197, %r7197, 23;
	xor.b32  	%r7225, %r7224, %r7197;
	shf.l.wrap.b32 	%r7226, %r7225, %r7225, 21;
	xor.b32  	%r7227, %r7226, %r7197;
	shf.l.wrap.b32 	%r7228, %r7227, %r7227, 30;
	and.b32  	%r7229, %r7197, %r7160;
	or.b32  	%r7230, %r7197, %r7160;
	and.b32  	%r7231, %r7230, %r7123;
	or.b32  	%r7232, %r7231, %r7229;
	add.s32 	%r7233, %r7228, %r7232;
	add.s32 	%r7234, %r7233, %r7222;
	shf.l.wrap.b32 	%r7235, %r7173, %r7173, 15;
	shf.l.wrap.b32 	%r7236, %r7173, %r7173, 13;
	xor.b32  	%r7237, %r7235, %r7236;
	shr.u32 	%r7238, %r7173, 10;
	xor.b32  	%r7239, %r7237, %r7238;
	shf.l.wrap.b32 	%r7240, %r6692, %r6692, 25;
	shf.l.wrap.b32 	%r7241, %r6692, %r6692, 14;
	xor.b32  	%r7242, %r7240, %r7241;
	shr.u32 	%r7243, %r6692, 3;
	xor.b32  	%r7244, %r7242, %r7243;
	add.s32 	%r7245, %r7244, %r6655;
	add.s32 	%r7246, %r7245, %r6988;
	add.s32 	%r7247, %r7246, %r7239;
	add.s32 	%r7248, %r7247, %r7112;
	xor.b32  	%r7249, %r7186, %r7149;
	and.b32  	%r7250, %r7223, %r7249;
	xor.b32  	%r7251, %r7250, %r7149;
	add.s32 	%r7252, %r7248, %r7251;
	shf.l.wrap.b32 	%r7253, %r7223, %r7223, 18;
	xor.b32  	%r7254, %r7253, %r7223;
	shf.l.wrap.b32 	%r7255, %r7254, %r7254, 27;
	xor.b32  	%r7256, %r7255, %r7223;
	shf.l.wrap.b32 	%r7257, %r7256, %r7256, 26;
	add.s32 	%r7258, %r7252, %r7257;
	add.s32 	%r7259, %r7258, -2067236844;
	add.s32 	%r7260, %r7259, %r7123;
	shf.l.wrap.b32 	%r7261, %r7234, %r7234, 23;
	xor.b32  	%r7262, %r7261, %r7234;
	shf.l.wrap.b32 	%r7263, %r7262, %r7262, 21;
	xor.b32  	%r7264, %r7263, %r7234;
	shf.l.wrap.b32 	%r7265, %r7264, %r7264, 30;
	and.b32  	%r7266, %r7234, %r7197;
	or.b32  	%r7267, %r7234, %r7197;
	and.b32  	%r7268, %r7267, %r7160;
	or.b32  	%r7269, %r7268, %r7266;
	add.s32 	%r7270, %r7265, %r7269;
	add.s32 	%r7271, %r7270, %r7259;
	shf.l.wrap.b32 	%r7272, %r7210, %r7210, 15;
	shf.l.wrap.b32 	%r7273, %r7210, %r7210, 13;
	xor.b32  	%r7274, %r7272, %r7273;
	shr.u32 	%r7275, %r7210, 10;
	xor.b32  	%r7276, %r7274, %r7275;
	shf.l.wrap.b32 	%r7277, %r6729, %r6729, 25;
	shf.l.wrap.b32 	%r7278, %r6729, %r6729, 14;
	xor.b32  	%r7279, %r7277, %r7278;
	shr.u32 	%r7280, %r6729, 3;
	xor.b32  	%r7281, %r7279, %r7280;
	add.s32 	%r7282, %r7281, %r6692;
	add.s32 	%r7283, %r7282, %r7025;
	add.s32 	%r7284, %r7283, %r7276;
	add.s32 	%r7285, %r7284, %r7149;
	xor.b32  	%r7286, %r7223, %r7186;
	and.b32  	%r7287, %r7260, %r7286;
	xor.b32  	%r7288, %r7287, %r7186;
	add.s32 	%r7289, %r7285, %r7288;
	shf.l.wrap.b32 	%r7290, %r7260, %r7260, 18;
	xor.b32  	%r7291, %r7290, %r7260;
	shf.l.wrap.b32 	%r7292, %r7291, %r7291, 27;
	xor.b32  	%r7293, %r7292, %r7260;
	shf.l.wrap.b32 	%r7294, %r7293, %r7293, 26;
	add.s32 	%r7295, %r7289, %r7294;
	add.s32 	%r7296, %r7295, -1933114872;
	add.s32 	%r7297, %r7296, %r7160;
	shf.l.wrap.b32 	%r7298, %r7271, %r7271, 23;
	xor.b32  	%r7299, %r7298, %r7271;
	shf.l.wrap.b32 	%r7300, %r7299, %r7299, 21;
	xor.b32  	%r7301, %r7300, %r7271;
	shf.l.wrap.b32 	%r7302, %r7301, %r7301, 30;
	and.b32  	%r7303, %r7271, %r7234;
	or.b32  	%r7304, %r7271, %r7234;
	and.b32  	%r7305, %r7304, %r7197;
	or.b32  	%r7306, %r7305, %r7303;
	add.s32 	%r7307, %r7302, %r7306;
	add.s32 	%r7308, %r7307, %r7296;
	shf.l.wrap.b32 	%r7309, %r7247, %r7247, 15;
	shf.l.wrap.b32 	%r7310, %r7247, %r7247, 13;
	xor.b32  	%r7311, %r7309, %r7310;
	shr.u32 	%r7312, %r7247, 10;
	xor.b32  	%r7313, %r7311, %r7312;
	shf.l.wrap.b32 	%r7314, %r6766, %r6766, 25;
	shf.l.wrap.b32 	%r7315, %r6766, %r6766, 14;
	xor.b32  	%r7316, %r7314, %r7315;
	shr.u32 	%r7317, %r6766, 3;
	xor.b32  	%r7318, %r7316, %r7317;
	add.s32 	%r7319, %r7318, %r6729;
	add.s32 	%r7320, %r7319, %r7062;
	add.s32 	%r7321, %r7320, %r7313;
	add.s32 	%r7322, %r7321, %r7186;
	xor.b32  	%r7323, %r7260, %r7223;
	and.b32  	%r7324, %r7297, %r7323;
	xor.b32  	%r7325, %r7324, %r7223;
	add.s32 	%r7326, %r7322, %r7325;
	shf.l.wrap.b32 	%r7327, %r7297, %r7297, 18;
	xor.b32  	%r7328, %r7327, %r7297;
	shf.l.wrap.b32 	%r7329, %r7328, %r7328, 27;
	xor.b32  	%r7330, %r7329, %r7297;
	shf.l.wrap.b32 	%r7331, %r7330, %r7330, 26;
	add.s32 	%r7332, %r7326, %r7331;
	add.s32 	%r7333, %r7332, -1866530822;
	add.s32 	%r7334, %r7333, %r7197;
	shf.l.wrap.b32 	%r7335, %r7308, %r7308, 23;
	xor.b32  	%r7336, %r7335, %r7308;
	shf.l.wrap.b32 	%r7337, %r7336, %r7336, 21;
	xor.b32  	%r7338, %r7337, %r7308;
	shf.l.wrap.b32 	%r7339, %r7338, %r7338, 30;
	and.b32  	%r7340, %r7308, %r7271;
	or.b32  	%r7341, %r7308, %r7271;
	and.b32  	%r7342, %r7341, %r7234;
	or.b32  	%r7343, %r7342, %r7340;
	add.s32 	%r7344, %r7339, %r7343;
	add.s32 	%r7345, %r7344, %r7333;
	shf.l.wrap.b32 	%r7346, %r7284, %r7284, 15;
	shf.l.wrap.b32 	%r7347, %r7284, %r7284, 13;
	xor.b32  	%r7348, %r7346, %r7347;
	shr.u32 	%r7349, %r7284, 10;
	xor.b32  	%r7350, %r7348, %r7349;
	shf.l.wrap.b32 	%r7351, %r6803, %r6803, 25;
	shf.l.wrap.b32 	%r7352, %r6803, %r6803, 14;
	xor.b32  	%r7353, %r7351, %r7352;
	shr.u32 	%r7354, %r6803, 3;
	xor.b32  	%r7355, %r7353, %r7354;
	add.s32 	%r7356, %r7355, %r6766;
	add.s32 	%r7357, %r7356, %r7099;
	add.s32 	%r7358, %r7357, %r7350;
	add.s32 	%r7359, %r7358, %r7223;
	xor.b32  	%r7360, %r7297, %r7260;
	and.b32  	%r7361, %r7334, %r7360;
	xor.b32  	%r7362, %r7361, %r7260;
	add.s32 	%r7363, %r7359, %r7362;
	shf.l.wrap.b32 	%r7364, %r7334, %r7334, 18;
	xor.b32  	%r7365, %r7364, %r7334;
	shf.l.wrap.b32 	%r7366, %r7365, %r7365, 27;
	xor.b32  	%r7367, %r7366, %r7334;
	shf.l.wrap.b32 	%r7368, %r7367, %r7367, 26;
	add.s32 	%r7369, %r7363, %r7368;
	add.s32 	%r7370, %r7369, -1538233109;
	add.s32 	%r7371, %r7370, %r7234;
	shf.l.wrap.b32 	%r7372, %r7345, %r7345, 23;
	xor.b32  	%r7373, %r7372, %r7345;
	shf.l.wrap.b32 	%r7374, %r7373, %r7373, 21;
	xor.b32  	%r7375, %r7374, %r7345;
	shf.l.wrap.b32 	%r7376, %r7375, %r7375, 30;
	and.b32  	%r7377, %r7345, %r7308;
	or.b32  	%r7378, %r7345, %r7308;
	and.b32  	%r7379, %r7378, %r7271;
	or.b32  	%r7380, %r7379, %r7377;
	add.s32 	%r7381, %r7376, %r7380;
	add.s32 	%r7382, %r7381, %r7370;
	shf.l.wrap.b32 	%r7383, %r7321, %r7321, 15;
	shf.l.wrap.b32 	%r7384, %r7321, %r7321, 13;
	xor.b32  	%r7385, %r7383, %r7384;
	shr.u32 	%r7386, %r7321, 10;
	xor.b32  	%r7387, %r7385, %r7386;
	shf.l.wrap.b32 	%r7388, %r6840, %r6840, 25;
	shf.l.wrap.b32 	%r7389, %r6840, %r6840, 14;
	xor.b32  	%r7390, %r7388, %r7389;
	shr.u32 	%r7391, %r6840, 3;
	xor.b32  	%r7392, %r7390, %r7391;
	shf.l.wrap.b32 	%r7393, %r7371, %r7371, 18;
	xor.b32  	%r7394, %r7393, %r7371;
	shf.l.wrap.b32 	%r7395, %r7394, %r7394, 27;
	xor.b32  	%r7396, %r7395, %r7371;
	shf.l.wrap.b32 	%r7397, %r7396, %r7396, 26;
	xor.b32  	%r7398, %r7334, %r7297;
	and.b32  	%r7399, %r7371, %r7398;
	xor.b32  	%r7400, %r7399, %r7297;
	add.s32 	%r7401, %r6803, %r7392;
	add.s32 	%r7402, %r7401, %r7136;
	add.s32 	%r7403, %r7402, %r7387;
	add.s32 	%r7404, %r7403, %r7260;
	add.s32 	%r7405, %r7404, %r7400;
	add.s32 	%r7406, %r7405, %r7397;
	add.s32 	%r7407, %r7406, -1090935817;
	add.s32 	%r7408, %r7407, %r7271;
	shf.l.wrap.b32 	%r7409, %r7382, %r7382, 23;
	xor.b32  	%r7410, %r7409, %r7382;
	shf.l.wrap.b32 	%r7411, %r7410, %r7410, 21;
	xor.b32  	%r7412, %r7411, %r7382;
	shf.l.wrap.b32 	%r7413, %r7412, %r7412, 30;
	and.b32  	%r7414, %r7382, %r7345;
	or.b32  	%r7415, %r7382, %r7345;
	and.b32  	%r7416, %r7415, %r7308;
	or.b32  	%r7417, %r7416, %r7414;
	add.s32 	%r7418, %r7413, %r7417;
	add.s32 	%r7419, %r7418, %r7407;
	shf.l.wrap.b32 	%r7420, %r7358, %r7358, 15;
	shf.l.wrap.b32 	%r7421, %r7358, %r7358, 13;
	xor.b32  	%r7422, %r7420, %r7421;
	shr.u32 	%r7423, %r7358, 10;
	xor.b32  	%r7424, %r7422, %r7423;
	shf.l.wrap.b32 	%r7425, %r6877, %r6877, 25;
	shf.l.wrap.b32 	%r7426, %r6877, %r6877, 14;
	xor.b32  	%r7427, %r7425, %r7426;
	shr.u32 	%r7428, %r6877, 3;
	xor.b32  	%r7429, %r7427, %r7428;
	shf.l.wrap.b32 	%r7430, %r7408, %r7408, 18;
	xor.b32  	%r7431, %r7430, %r7408;
	shf.l.wrap.b32 	%r7432, %r7431, %r7431, 27;
	xor.b32  	%r7433, %r7432, %r7408;
	shf.l.wrap.b32 	%r7434, %r7433, %r7433, 26;
	xor.b32  	%r7435, %r7371, %r7334;
	and.b32  	%r7436, %r7408, %r7435;
	xor.b32  	%r7437, %r7436, %r7334;
	add.s32 	%r7438, %r6840, %r7429;
	add.s32 	%r7439, %r7438, %r7173;
	add.s32 	%r7440, %r7439, %r7424;
	add.s32 	%r7441, %r7440, %r7297;
	add.s32 	%r7442, %r7441, %r7437;
	add.s32 	%r7443, %r7442, %r7434;
	add.s32 	%r7444, %r7443, -965641998;
	shf.l.wrap.b32 	%r7445, %r7419, %r7419, 23;
	xor.b32  	%r7446, %r7445, %r7419;
	shf.l.wrap.b32 	%r7447, %r7446, %r7446, 21;
	xor.b32  	%r7448, %r7447, %r7419;
	shf.l.wrap.b32 	%r7449, %r7448, %r7448, 30;
	and.b32  	%r7450, %r7419, %r7382;
	or.b32  	%r7451, %r7419, %r7382;
	and.b32  	%r7452, %r7451, %r7345;
	or.b32  	%r7453, %r7452, %r7450;
	add.s32 	%r7454, %r7453, %r5307;
	add.s32 	%r7455, %r7454, %r7449;
	add.s32 	%r7456, %r7455, %r7444;
	st.local.u32 	[%rd5+4], %r7456;
	add.s32 	%r7457, %r7419, %r5313;
	st.local.u32 	[%rd5+8], %r7457;
	add.s32 	%r7458, %r7382, %r5316;
	st.local.u32 	[%rd5+12], %r7458;
	add.s32 	%r7459, %r7345, %r5305;
	st.local.u32 	[%rd5+16], %r7459;
	add.s32 	%r7460, %r7308, %r5291;
	add.s32 	%r7461, %r7460, %r7444;
	st.local.u32 	[%rd5+20], %r7461;
	add.s32 	%r7462, %r7408, %r5299;
	st.local.u32 	[%rd5+24], %r7462;
	add.s32 	%r7463, %r7371, %r5298;
	st.local.u32 	[%rd5+28], %r7463;
	add.s32 	%r7464, %r7334, %r5289;
	st.local.u32 	[%rd5+32], %r7464;
	add.s64 	%rd255, %rd255, 64;
	add.s64 	%rd254, %rd254, 64;
	add.s32 	%r17037, %r17037, -64;
	setp.gt.u32 	%p31, %r17037, 63;
	@%p31 bra 	$L__BB6_35;

$L__BB6_39:
	setp.eq.s32 	%p32, %r17037, 0;
	@%p32 bra 	$L__BB6_45;

	cvt.u64.u32 	%rd180, %r17018;
	add.s64 	%rd181, %rd5, %rd180;
	add.s64 	%rd260, %rd181, 36;
	and.b32  	%r17039, %r17037, 3;
	setp.eq.s32 	%p33, %r17039, 0;
	mov.u32 	%r17040, %r17037;
	@%p33 bra 	$L__BB6_43;

	mov.u64 	%rd256, %rd260;
	mov.u64 	%rd257, %rd255;
	mov.u32 	%r17040, %r17037;

$L__BB6_42:
	.pragma "nounroll";
	add.s32 	%r17040, %r17040, -1;
	add.s64 	%rd255, %rd257, 1;
	ld.local.u8 	%rs117, [%rd257];
	add.s64 	%rd260, %rd256, 1;
	st.local.u8 	[%rd256], %rs117;
	add.s32 	%r17039, %r17039, -1;
	setp.ne.s32 	%p34, %r17039, 0;
	mov.u64 	%rd256, %rd260;
	mov.u64 	%rd257, %rd255;
	@%p34 bra 	$L__BB6_42;

$L__BB6_43:
	add.s32 	%r7465, %r17037, -1;
	setp.lt.u32 	%p35, %r7465, 3;
	@%p35 bra 	$L__BB6_45;

$L__BB6_44:
	ld.local.u8 	%rs118, [%rd255];
	st.local.u8 	[%rd260], %rs118;
	ld.local.u8 	%rs119, [%rd255+1];
	st.local.u8 	[%rd260+1], %rs119;
	ld.local.u8 	%rs120, [%rd255+2];
	st.local.u8 	[%rd260+2], %rs120;
	add.s64 	%rd87, %rd255, 4;
	ld.local.u8 	%rs121, [%rd255+3];
	add.s64 	%rd88, %rd260, 4;
	st.local.u8 	[%rd260+3], %rs121;
	add.s32 	%r17040, %r17040, -4;
	setp.ne.s32 	%p36, %r17040, 0;
	mov.u64 	%rd260, %rd88;
	mov.u64 	%rd255, %rd87;
	@%p36 bra 	$L__BB6_44;

$L__BB6_45:
	add.s64 	%rd89, %rd273, 1;
	mov.u64 	%rd262, 0;
	mov.u32 	%r17042, 0;

$L__BB6_46:
	add.s64 	%rd183, %rd89, %rd262;
	mov.u16 	%rs122, 0;
	st.local.u8 	[%rd183], %rs122;
	add.s64 	%rd262, %rd262, 1;
	add.s32 	%r17042, %r17042, 1;
	setp.lt.u32 	%p37, %r17042, 63;
	@%p37 bra 	$L__BB6_46;

	add.u64 	%rd205, %SPL, 0;
	mov.u16 	%rs123, 128;
	st.local.u8 	[%rd273], %rs123;
	ld.local.u32 	%r168, [%rd5];
	shr.u32 	%r7467, %r168, 21;
	shr.u32 	%r7468, %r168, 13;
	cvt.u16.u32 	%rs124, %r168;
	shr.u16 	%rs125, %rs124, 5;
	and.b16  	%rs126, %rs125, 255;
	shl.b16 	%rs127, %rs124, 3;
	and.b32  	%r7469, %r7467, 255;
	prmt.b32 	%r7470, %r7468, %r7469, 30212;
	cvt.u16.u32 	%rs128, %r7470;
	cvt.u32.u16 	%r7471, %rs127;
	cvt.u32.u16 	%r7472, %rs126;
	prmt.b32 	%r7473, %r7471, %r7472, 30212;
	cvt.u16.u32 	%rs129, %r7473;
	st.local.v4.u16 	[%rd205], {%rs122, %rs122, %rs128, %rs129};
	and.b32  	%r17047, %r168, 63;
	setp.lt.u32 	%p38, %r17047, 56;
	selp.b32 	%r7474, 56, 120, %p38;
	sub.s32 	%r17066, %r7474, %r17047;
	setp.eq.s32 	%p39, %r17066, 0;
	@%p39 bra 	$L__BB6_67;

	add.u64 	%rd271, %SP, 16;
	add.s32 	%r7475, %r168, %r17066;
	st.local.u32 	[%rd5], %r7475;
	mov.u32 	%r7476, 64;
	sub.s32 	%r171, %r7476, %r17047;
	setp.lt.u32 	%p40, %r17066, %r171;
	setp.eq.s32 	%p41, %r17047, 0;
	or.pred  	%p42, %p41, %p40;
	@%p42 bra 	$L__BB6_56;

	setp.eq.s32 	%p43, %r171, 0;
	@%p43 bra 	$L__BB6_55;

	cvt.u64.u32 	%rd184, %r17047;
	add.s64 	%rd185, %rd5, %rd184;
	add.s64 	%rd267, %rd185, 36;
	and.b32  	%r17044, %r171, 3;
	setp.eq.s32 	%p44, %r17044, 0;
	mov.u64 	%rd268, %rd273;
	mov.u32 	%r17045, %r171;
	@%p44 bra 	$L__BB6_53;

	mov.u64 	%rd263, %rd267;
	mov.u64 	%rd264, %rd273;
	mov.u32 	%r17045, %r171;

$L__BB6_52:
	.pragma "nounroll";
	add.s32 	%r17045, %r17045, -1;
	add.s64 	%rd268, %rd264, 1;
	ld.local.u8 	%rs131, [%rd264];
	add.s64 	%rd267, %rd263, 1;
	st.local.u8 	[%rd263], %rs131;
	add.s32 	%r17044, %r17044, -1;
	setp.ne.s32 	%p45, %r17044, 0;
	mov.u64 	%rd263, %rd267;
	mov.u64 	%rd264, %rd268;
	@%p45 bra 	$L__BB6_52;

$L__BB6_53:
	xor.b32  	%r7477, %r17047, 63;
	setp.lt.u32 	%p46, %r7477, 3;
	@%p46 bra 	$L__BB6_55;

$L__BB6_54:
	ld.local.u8 	%rs132, [%rd268];
	st.local.u8 	[%rd267], %rs132;
	ld.local.u8 	%rs133, [%rd268+1];
	st.local.u8 	[%rd267+1], %rs133;
	ld.local.u8 	%rs134, [%rd268+2];
	st.local.u8 	[%rd267+2], %rs134;
	add.s64 	%rd105, %rd268, 4;
	ld.local.u8 	%rs135, [%rd268+3];
	add.s64 	%rd106, %rd267, 4;
	st.local.u8 	[%rd267+3], %rs135;
	add.s32 	%r17045, %r17045, -4;
	setp.ne.s32 	%p47, %r17045, 0;
	mov.u64 	%rd267, %rd106;
	mov.u64 	%rd268, %rd105;
	@%p47 bra 	$L__BB6_54;

$L__BB6_55:
	ld.local.u32 	%r7479, [%rd5+36];
	shf.l.wrap.b32 	%r7480, %r7479, %r7479, 16;
	shl.b32 	%r7481, %r7480, 8;
	and.b32  	%r7482, %r7481, -16711936;
	shr.u32 	%r7483, %r7480, 8;
	and.b32  	%r7484, %r7483, 16711935;
	or.b32  	%r7485, %r7482, %r7484;
	ld.local.u32 	%r7486, [%rd5+40];
	shf.l.wrap.b32 	%r7487, %r7486, %r7486, 16;
	shl.b32 	%r7488, %r7487, 8;
	and.b32  	%r7489, %r7488, -16711936;
	shr.u32 	%r7490, %r7487, 8;
	and.b32  	%r7491, %r7490, 16711935;
	or.b32  	%r7492, %r7489, %r7491;
	ld.local.u32 	%r7493, [%rd5+44];
	shf.l.wrap.b32 	%r7494, %r7493, %r7493, 16;
	shl.b32 	%r7495, %r7494, 8;
	and.b32  	%r7496, %r7495, -16711936;
	shr.u32 	%r7497, %r7494, 8;
	and.b32  	%r7498, %r7497, 16711935;
	or.b32  	%r7499, %r7496, %r7498;
	ld.local.u32 	%r7500, [%rd5+48];
	shf.l.wrap.b32 	%r7501, %r7500, %r7500, 16;
	shl.b32 	%r7502, %r7501, 8;
	and.b32  	%r7503, %r7502, -16711936;
	shr.u32 	%r7504, %r7501, 8;
	and.b32  	%r7505, %r7504, 16711935;
	or.b32  	%r7506, %r7503, %r7505;
	ld.local.u32 	%r7507, [%rd5+52];
	shf.l.wrap.b32 	%r7508, %r7507, %r7507, 16;
	shl.b32 	%r7509, %r7508, 8;
	and.b32  	%r7510, %r7509, -16711936;
	shr.u32 	%r7511, %r7508, 8;
	and.b32  	%r7512, %r7511, 16711935;
	or.b32  	%r7513, %r7510, %r7512;
	ld.local.u32 	%r7514, [%rd5+56];
	shf.l.wrap.b32 	%r7515, %r7514, %r7514, 16;
	shl.b32 	%r7516, %r7515, 8;
	and.b32  	%r7517, %r7516, -16711936;
	shr.u32 	%r7518, %r7515, 8;
	and.b32  	%r7519, %r7518, 16711935;
	or.b32  	%r7520, %r7517, %r7519;
	ld.local.u32 	%r7521, [%rd5+60];
	shf.l.wrap.b32 	%r7522, %r7521, %r7521, 16;
	shl.b32 	%r7523, %r7522, 8;
	and.b32  	%r7524, %r7523, -16711936;
	shr.u32 	%r7525, %r7522, 8;
	and.b32  	%r7526, %r7525, 16711935;
	or.b32  	%r7527, %r7524, %r7526;
	ld.local.u32 	%r7528, [%rd5+64];
	shf.l.wrap.b32 	%r7529, %r7528, %r7528, 16;
	shl.b32 	%r7530, %r7529, 8;
	and.b32  	%r7531, %r7530, -16711936;
	shr.u32 	%r7532, %r7529, 8;
	and.b32  	%r7533, %r7532, 16711935;
	or.b32  	%r7534, %r7531, %r7533;
	ld.local.u32 	%r7535, [%rd5+68];
	shf.l.wrap.b32 	%r7536, %r7535, %r7535, 16;
	shl.b32 	%r7537, %r7536, 8;
	and.b32  	%r7538, %r7537, -16711936;
	shr.u32 	%r7539, %r7536, 8;
	and.b32  	%r7540, %r7539, 16711935;
	or.b32  	%r7541, %r7538, %r7540;
	ld.local.u32 	%r7542, [%rd5+72];
	shf.l.wrap.b32 	%r7543, %r7542, %r7542, 16;
	shl.b32 	%r7544, %r7543, 8;
	and.b32  	%r7545, %r7544, -16711936;
	shr.u32 	%r7546, %r7543, 8;
	and.b32  	%r7547, %r7546, 16711935;
	or.b32  	%r7548, %r7545, %r7547;
	ld.local.u32 	%r7549, [%rd5+76];
	shf.l.wrap.b32 	%r7550, %r7549, %r7549, 16;
	shl.b32 	%r7551, %r7550, 8;
	and.b32  	%r7552, %r7551, -16711936;
	shr.u32 	%r7553, %r7550, 8;
	and.b32  	%r7554, %r7553, 16711935;
	or.b32  	%r7555, %r7552, %r7554;
	ld.local.u32 	%r7556, [%rd5+80];
	shf.l.wrap.b32 	%r7557, %r7556, %r7556, 16;
	shl.b32 	%r7558, %r7557, 8;
	and.b32  	%r7559, %r7558, -16711936;
	shr.u32 	%r7560, %r7557, 8;
	and.b32  	%r7561, %r7560, 16711935;
	or.b32  	%r7562, %r7559, %r7561;
	ld.local.u32 	%r7563, [%rd5+84];
	shf.l.wrap.b32 	%r7564, %r7563, %r7563, 16;
	shl.b32 	%r7565, %r7564, 8;
	and.b32  	%r7566, %r7565, -16711936;
	shr.u32 	%r7567, %r7564, 8;
	and.b32  	%r7568, %r7567, 16711935;
	or.b32  	%r7569, %r7566, %r7568;
	ld.local.u32 	%r7570, [%rd5+88];
	shf.l.wrap.b32 	%r7571, %r7570, %r7570, 16;
	shl.b32 	%r7572, %r7571, 8;
	and.b32  	%r7573, %r7572, -16711936;
	shr.u32 	%r7574, %r7571, 8;
	and.b32  	%r7575, %r7574, 16711935;
	or.b32  	%r7576, %r7573, %r7575;
	ld.local.u32 	%r7577, [%rd5+92];
	shf.l.wrap.b32 	%r7578, %r7577, %r7577, 16;
	shl.b32 	%r7579, %r7578, 8;
	and.b32  	%r7580, %r7579, -16711936;
	shr.u32 	%r7581, %r7578, 8;
	and.b32  	%r7582, %r7581, 16711935;
	or.b32  	%r7583, %r7580, %r7582;
	ld.local.u32 	%r7584, [%rd5+96];
	shf.l.wrap.b32 	%r7585, %r7584, %r7584, 16;
	shl.b32 	%r7586, %r7585, 8;
	and.b32  	%r7587, %r7586, -16711936;
	shr.u32 	%r7588, %r7585, 8;
	and.b32  	%r7589, %r7588, 16711935;
	or.b32  	%r7590, %r7587, %r7589;
	ld.local.u32 	%r7591, [%rd5+32];
	add.s32 	%r7592, %r7485, %r7591;
	ld.local.u32 	%r7593, [%rd5+20];
	shf.l.wrap.b32 	%r7594, %r7593, %r7593, 18;
	xor.b32  	%r7595, %r7594, %r7593;
	shf.l.wrap.b32 	%r7596, %r7595, %r7595, 27;
	xor.b32  	%r7597, %r7596, %r7593;
	shf.l.wrap.b32 	%r7598, %r7597, %r7597, 26;
	add.s32 	%r7599, %r7592, %r7598;
	ld.local.u32 	%r7600, [%rd5+28];
	ld.local.u32 	%r7601, [%rd5+24];
	xor.b32  	%r7602, %r7600, %r7601;
	and.b32  	%r7603, %r7602, %r7593;
	xor.b32  	%r7604, %r7603, %r7600;
	add.s32 	%r7605, %r7599, %r7604;
	add.s32 	%r7606, %r7605, 1116352408;
	ld.local.u32 	%r7607, [%rd5+16];
	add.s32 	%r7608, %r7606, %r7607;
	ld.local.u32 	%r7609, [%rd5+4];
	shf.l.wrap.b32 	%r7610, %r7609, %r7609, 23;
	xor.b32  	%r7611, %r7610, %r7609;
	shf.l.wrap.b32 	%r7612, %r7611, %r7611, 21;
	xor.b32  	%r7613, %r7612, %r7609;
	shf.l.wrap.b32 	%r7614, %r7613, %r7613, 30;
	ld.local.u32 	%r7615, [%rd5+8];
	and.b32  	%r7616, %r7615, %r7609;
	or.b32  	%r7617, %r7615, %r7609;
	ld.local.u32 	%r7618, [%rd5+12];
	and.b32  	%r7619, %r7618, %r7617;
	or.b32  	%r7620, %r7619, %r7616;
	add.s32 	%r7621, %r7614, %r7620;
	add.s32 	%r7622, %r7621, %r7606;
	add.s32 	%r7623, %r7492, %r7600;
	xor.b32  	%r7624, %r7601, %r7593;
	and.b32  	%r7625, %r7608, %r7624;
	xor.b32  	%r7626, %r7625, %r7601;
	add.s32 	%r7627, %r7623, %r7626;
	shf.l.wrap.b32 	%r7628, %r7608, %r7608, 18;
	xor.b32  	%r7629, %r7628, %r7608;
	shf.l.wrap.b32 	%r7630, %r7629, %r7629, 27;
	xor.b32  	%r7631, %r7630, %r7608;
	shf.l.wrap.b32 	%r7632, %r7631, %r7631, 26;
	add.s32 	%r7633, %r7627, %r7632;
	add.s32 	%r7634, %r7633, 1899447441;
	add.s32 	%r7635, %r7634, %r7618;
	shf.l.wrap.b32 	%r7636, %r7622, %r7622, 23;
	xor.b32  	%r7637, %r7636, %r7622;
	shf.l.wrap.b32 	%r7638, %r7637, %r7637, 21;
	xor.b32  	%r7639, %r7638, %r7622;
	shf.l.wrap.b32 	%r7640, %r7639, %r7639, 30;
	and.b32  	%r7641, %r7622, %r7609;
	or.b32  	%r7642, %r7622, %r7609;
	and.b32  	%r7643, %r7642, %r7615;
	or.b32  	%r7644, %r7643, %r7641;
	add.s32 	%r7645, %r7640, %r7644;
	add.s32 	%r7646, %r7645, %r7634;
	add.s32 	%r7647, %r7499, %r7601;
	xor.b32  	%r7648, %r7608, %r7593;
	and.b32  	%r7649, %r7635, %r7648;
	xor.b32  	%r7650, %r7649, %r7593;
	add.s32 	%r7651, %r7647, %r7650;
	shf.l.wrap.b32 	%r7652, %r7635, %r7635, 18;
	xor.b32  	%r7653, %r7652, %r7635;
	shf.l.wrap.b32 	%r7654, %r7653, %r7653, 27;
	xor.b32  	%r7655, %r7654, %r7635;
	shf.l.wrap.b32 	%r7656, %r7655, %r7655, 26;
	add.s32 	%r7657, %r7651, %r7656;
	add.s32 	%r7658, %r7657, -1245643825;
	add.s32 	%r7659, %r7658, %r7615;
	shf.l.wrap.b32 	%r7660, %r7646, %r7646, 23;
	xor.b32  	%r7661, %r7660, %r7646;
	shf.l.wrap.b32 	%r7662, %r7661, %r7661, 21;
	xor.b32  	%r7663, %r7662, %r7646;
	shf.l.wrap.b32 	%r7664, %r7663, %r7663, 30;
	and.b32  	%r7665, %r7646, %r7622;
	or.b32  	%r7666, %r7646, %r7622;
	and.b32  	%r7667, %r7666, %r7609;
	or.b32  	%r7668, %r7667, %r7665;
	add.s32 	%r7669, %r7664, %r7668;
	add.s32 	%r7670, %r7669, %r7658;
	add.s32 	%r7671, %r7506, %r7593;
	xor.b32  	%r7672, %r7635, %r7608;
	and.b32  	%r7673, %r7659, %r7672;
	xor.b32  	%r7674, %r7673, %r7608;
	add.s32 	%r7675, %r7671, %r7674;
	shf.l.wrap.b32 	%r7676, %r7659, %r7659, 18;
	xor.b32  	%r7677, %r7676, %r7659;
	shf.l.wrap.b32 	%r7678, %r7677, %r7677, 27;
	xor.b32  	%r7679, %r7678, %r7659;
	shf.l.wrap.b32 	%r7680, %r7679, %r7679, 26;
	add.s32 	%r7681, %r7675, %r7680;
	add.s32 	%r7682, %r7681, -373957723;
	add.s32 	%r7683, %r7682, %r7609;
	shf.l.wrap.b32 	%r7684, %r7670, %r7670, 23;
	xor.b32  	%r7685, %r7684, %r7670;
	shf.l.wrap.b32 	%r7686, %r7685, %r7685, 21;
	xor.b32  	%r7687, %r7686, %r7670;
	shf.l.wrap.b32 	%r7688, %r7687, %r7687, 30;
	and.b32  	%r7689, %r7670, %r7646;
	or.b32  	%r7690, %r7670, %r7646;
	and.b32  	%r7691, %r7690, %r7622;
	or.b32  	%r7692, %r7691, %r7689;
	add.s32 	%r7693, %r7688, %r7692;
	add.s32 	%r7694, %r7693, %r7682;
	add.s32 	%r7695, %r7513, %r7608;
	xor.b32  	%r7696, %r7659, %r7635;
	and.b32  	%r7697, %r7683, %r7696;
	xor.b32  	%r7698, %r7697, %r7635;
	add.s32 	%r7699, %r7695, %r7698;
	shf.l.wrap.b32 	%r7700, %r7683, %r7683, 18;
	xor.b32  	%r7701, %r7700, %r7683;
	shf.l.wrap.b32 	%r7702, %r7701, %r7701, 27;
	xor.b32  	%r7703, %r7702, %r7683;
	shf.l.wrap.b32 	%r7704, %r7703, %r7703, 26;
	add.s32 	%r7705, %r7699, %r7704;
	add.s32 	%r7706, %r7705, 961987163;
	add.s32 	%r7707, %r7706, %r7622;
	shf.l.wrap.b32 	%r7708, %r7694, %r7694, 23;
	xor.b32  	%r7709, %r7708, %r7694;
	shf.l.wrap.b32 	%r7710, %r7709, %r7709, 21;
	xor.b32  	%r7711, %r7710, %r7694;
	shf.l.wrap.b32 	%r7712, %r7711, %r7711, 30;
	and.b32  	%r7713, %r7694, %r7670;
	or.b32  	%r7714, %r7694, %r7670;
	and.b32  	%r7715, %r7714, %r7646;
	or.b32  	%r7716, %r7715, %r7713;
	add.s32 	%r7717, %r7712, %r7716;
	add.s32 	%r7718, %r7717, %r7706;
	add.s32 	%r7719, %r7520, %r7635;
	xor.b32  	%r7720, %r7683, %r7659;
	and.b32  	%r7721, %r7707, %r7720;
	xor.b32  	%r7722, %r7721, %r7659;
	add.s32 	%r7723, %r7719, %r7722;
	shf.l.wrap.b32 	%r7724, %r7707, %r7707, 18;
	xor.b32  	%r7725, %r7724, %r7707;
	shf.l.wrap.b32 	%r7726, %r7725, %r7725, 27;
	xor.b32  	%r7727, %r7726, %r7707;
	shf.l.wrap.b32 	%r7728, %r7727, %r7727, 26;
	add.s32 	%r7729, %r7723, %r7728;
	add.s32 	%r7730, %r7729, 1508970993;
	add.s32 	%r7731, %r7730, %r7646;
	shf.l.wrap.b32 	%r7732, %r7718, %r7718, 23;
	xor.b32  	%r7733, %r7732, %r7718;
	shf.l.wrap.b32 	%r7734, %r7733, %r7733, 21;
	xor.b32  	%r7735, %r7734, %r7718;
	shf.l.wrap.b32 	%r7736, %r7735, %r7735, 30;
	and.b32  	%r7737, %r7718, %r7694;
	or.b32  	%r7738, %r7718, %r7694;
	and.b32  	%r7739, %r7738, %r7670;
	or.b32  	%r7740, %r7739, %r7737;
	add.s32 	%r7741, %r7736, %r7740;
	add.s32 	%r7742, %r7741, %r7730;
	add.s32 	%r7743, %r7527, %r7659;
	xor.b32  	%r7744, %r7707, %r7683;
	and.b32  	%r7745, %r7731, %r7744;
	xor.b32  	%r7746, %r7745, %r7683;
	add.s32 	%r7747, %r7743, %r7746;
	shf.l.wrap.b32 	%r7748, %r7731, %r7731, 18;
	xor.b32  	%r7749, %r7748, %r7731;
	shf.l.wrap.b32 	%r7750, %r7749, %r7749, 27;
	xor.b32  	%r7751, %r7750, %r7731;
	shf.l.wrap.b32 	%r7752, %r7751, %r7751, 26;
	add.s32 	%r7753, %r7747, %r7752;
	add.s32 	%r7754, %r7753, -1841331548;
	add.s32 	%r7755, %r7754, %r7670;
	shf.l.wrap.b32 	%r7756, %r7742, %r7742, 23;
	xor.b32  	%r7757, %r7756, %r7742;
	shf.l.wrap.b32 	%r7758, %r7757, %r7757, 21;
	xor.b32  	%r7759, %r7758, %r7742;
	shf.l.wrap.b32 	%r7760, %r7759, %r7759, 30;
	and.b32  	%r7761, %r7742, %r7718;
	or.b32  	%r7762, %r7742, %r7718;
	and.b32  	%r7763, %r7762, %r7694;
	or.b32  	%r7764, %r7763, %r7761;
	add.s32 	%r7765, %r7760, %r7764;
	add.s32 	%r7766, %r7765, %r7754;
	add.s32 	%r7767, %r7534, %r7683;
	xor.b32  	%r7768, %r7731, %r7707;
	and.b32  	%r7769, %r7755, %r7768;
	xor.b32  	%r7770, %r7769, %r7707;
	add.s32 	%r7771, %r7767, %r7770;
	shf.l.wrap.b32 	%r7772, %r7755, %r7755, 18;
	xor.b32  	%r7773, %r7772, %r7755;
	shf.l.wrap.b32 	%r7774, %r7773, %r7773, 27;
	xor.b32  	%r7775, %r7774, %r7755;
	shf.l.wrap.b32 	%r7776, %r7775, %r7775, 26;
	add.s32 	%r7777, %r7771, %r7776;
	add.s32 	%r7778, %r7777, -1424204075;
	add.s32 	%r7779, %r7778, %r7694;
	shf.l.wrap.b32 	%r7780, %r7766, %r7766, 23;
	xor.b32  	%r7781, %r7780, %r7766;
	shf.l.wrap.b32 	%r7782, %r7781, %r7781, 21;
	xor.b32  	%r7783, %r7782, %r7766;
	shf.l.wrap.b32 	%r7784, %r7783, %r7783, 30;
	and.b32  	%r7785, %r7766, %r7742;
	or.b32  	%r7786, %r7766, %r7742;
	and.b32  	%r7787, %r7786, %r7718;
	or.b32  	%r7788, %r7787, %r7785;
	add.s32 	%r7789, %r7784, %r7788;
	add.s32 	%r7790, %r7789, %r7778;
	add.s32 	%r7791, %r7541, %r7707;
	xor.b32  	%r7792, %r7755, %r7731;
	and.b32  	%r7793, %r7779, %r7792;
	xor.b32  	%r7794, %r7793, %r7731;
	add.s32 	%r7795, %r7791, %r7794;
	shf.l.wrap.b32 	%r7796, %r7779, %r7779, 18;
	xor.b32  	%r7797, %r7796, %r7779;
	shf.l.wrap.b32 	%r7798, %r7797, %r7797, 27;
	xor.b32  	%r7799, %r7798, %r7779;
	shf.l.wrap.b32 	%r7800, %r7799, %r7799, 26;
	add.s32 	%r7801, %r7795, %r7800;
	add.s32 	%r7802, %r7801, -670586216;
	add.s32 	%r7803, %r7802, %r7718;
	shf.l.wrap.b32 	%r7804, %r7790, %r7790, 23;
	xor.b32  	%r7805, %r7804, %r7790;
	shf.l.wrap.b32 	%r7806, %r7805, %r7805, 21;
	xor.b32  	%r7807, %r7806, %r7790;
	shf.l.wrap.b32 	%r7808, %r7807, %r7807, 30;
	and.b32  	%r7809, %r7790, %r7766;
	or.b32  	%r7810, %r7790, %r7766;
	and.b32  	%r7811, %r7810, %r7742;
	or.b32  	%r7812, %r7811, %r7809;
	add.s32 	%r7813, %r7808, %r7812;
	add.s32 	%r7814, %r7813, %r7802;
	add.s32 	%r7815, %r7548, %r7731;
	xor.b32  	%r7816, %r7779, %r7755;
	and.b32  	%r7817, %r7803, %r7816;
	xor.b32  	%r7818, %r7817, %r7755;
	add.s32 	%r7819, %r7815, %r7818;
	shf.l.wrap.b32 	%r7820, %r7803, %r7803, 18;
	xor.b32  	%r7821, %r7820, %r7803;
	shf.l.wrap.b32 	%r7822, %r7821, %r7821, 27;
	xor.b32  	%r7823, %r7822, %r7803;
	shf.l.wrap.b32 	%r7824, %r7823, %r7823, 26;
	add.s32 	%r7825, %r7819, %r7824;
	add.s32 	%r7826, %r7825, 310598401;
	add.s32 	%r7827, %r7826, %r7742;
	shf.l.wrap.b32 	%r7828, %r7814, %r7814, 23;
	xor.b32  	%r7829, %r7828, %r7814;
	shf.l.wrap.b32 	%r7830, %r7829, %r7829, 21;
	xor.b32  	%r7831, %r7830, %r7814;
	shf.l.wrap.b32 	%r7832, %r7831, %r7831, 30;
	and.b32  	%r7833, %r7814, %r7790;
	or.b32  	%r7834, %r7814, %r7790;
	and.b32  	%r7835, %r7834, %r7766;
	or.b32  	%r7836, %r7835, %r7833;
	add.s32 	%r7837, %r7832, %r7836;
	add.s32 	%r7838, %r7837, %r7826;
	add.s32 	%r7839, %r7555, %r7755;
	xor.b32  	%r7840, %r7803, %r7779;
	and.b32  	%r7841, %r7827, %r7840;
	xor.b32  	%r7842, %r7841, %r7779;
	add.s32 	%r7843, %r7839, %r7842;
	shf.l.wrap.b32 	%r7844, %r7827, %r7827, 18;
	xor.b32  	%r7845, %r7844, %r7827;
	shf.l.wrap.b32 	%r7846, %r7845, %r7845, 27;
	xor.b32  	%r7847, %r7846, %r7827;
	shf.l.wrap.b32 	%r7848, %r7847, %r7847, 26;
	add.s32 	%r7849, %r7843, %r7848;
	add.s32 	%r7850, %r7849, 607225278;
	add.s32 	%r7851, %r7850, %r7766;
	shf.l.wrap.b32 	%r7852, %r7838, %r7838, 23;
	xor.b32  	%r7853, %r7852, %r7838;
	shf.l.wrap.b32 	%r7854, %r7853, %r7853, 21;
	xor.b32  	%r7855, %r7854, %r7838;
	shf.l.wrap.b32 	%r7856, %r7855, %r7855, 30;
	and.b32  	%r7857, %r7838, %r7814;
	or.b32  	%r7858, %r7838, %r7814;
	and.b32  	%r7859, %r7858, %r7790;
	or.b32  	%r7860, %r7859, %r7857;
	add.s32 	%r7861, %r7856, %r7860;
	add.s32 	%r7862, %r7861, %r7850;
	add.s32 	%r7863, %r7562, %r7779;
	xor.b32  	%r7864, %r7827, %r7803;
	and.b32  	%r7865, %r7851, %r7864;
	xor.b32  	%r7866, %r7865, %r7803;
	add.s32 	%r7867, %r7863, %r7866;
	shf.l.wrap.b32 	%r7868, %r7851, %r7851, 18;
	xor.b32  	%r7869, %r7868, %r7851;
	shf.l.wrap.b32 	%r7870, %r7869, %r7869, 27;
	xor.b32  	%r7871, %r7870, %r7851;
	shf.l.wrap.b32 	%r7872, %r7871, %r7871, 26;
	add.s32 	%r7873, %r7867, %r7872;
	add.s32 	%r7874, %r7873, 1426881987;
	add.s32 	%r7875, %r7874, %r7790;
	shf.l.wrap.b32 	%r7876, %r7862, %r7862, 23;
	xor.b32  	%r7877, %r7876, %r7862;
	shf.l.wrap.b32 	%r7878, %r7877, %r7877, 21;
	xor.b32  	%r7879, %r7878, %r7862;
	shf.l.wrap.b32 	%r7880, %r7879, %r7879, 30;
	and.b32  	%r7881, %r7862, %r7838;
	or.b32  	%r7882, %r7862, %r7838;
	and.b32  	%r7883, %r7882, %r7814;
	or.b32  	%r7884, %r7883, %r7881;
	add.s32 	%r7885, %r7880, %r7884;
	add.s32 	%r7886, %r7885, %r7874;
	add.s32 	%r7887, %r7569, %r7803;
	xor.b32  	%r7888, %r7851, %r7827;
	and.b32  	%r7889, %r7875, %r7888;
	xor.b32  	%r7890, %r7889, %r7827;
	add.s32 	%r7891, %r7887, %r7890;
	shf.l.wrap.b32 	%r7892, %r7875, %r7875, 18;
	xor.b32  	%r7893, %r7892, %r7875;
	shf.l.wrap.b32 	%r7894, %r7893, %r7893, 27;
	xor.b32  	%r7895, %r7894, %r7875;
	shf.l.wrap.b32 	%r7896, %r7895, %r7895, 26;
	add.s32 	%r7897, %r7891, %r7896;
	add.s32 	%r7898, %r7897, 1925078388;
	add.s32 	%r7899, %r7898, %r7814;
	shf.l.wrap.b32 	%r7900, %r7886, %r7886, 23;
	xor.b32  	%r7901, %r7900, %r7886;
	shf.l.wrap.b32 	%r7902, %r7901, %r7901, 21;
	xor.b32  	%r7903, %r7902, %r7886;
	shf.l.wrap.b32 	%r7904, %r7903, %r7903, 30;
	and.b32  	%r7905, %r7886, %r7862;
	or.b32  	%r7906, %r7886, %r7862;
	and.b32  	%r7907, %r7906, %r7838;
	or.b32  	%r7908, %r7907, %r7905;
	add.s32 	%r7909, %r7904, %r7908;
	add.s32 	%r7910, %r7909, %r7898;
	add.s32 	%r7911, %r7576, %r7827;
	xor.b32  	%r7912, %r7875, %r7851;
	and.b32  	%r7913, %r7899, %r7912;
	xor.b32  	%r7914, %r7913, %r7851;
	add.s32 	%r7915, %r7911, %r7914;
	shf.l.wrap.b32 	%r7916, %r7899, %r7899, 18;
	xor.b32  	%r7917, %r7916, %r7899;
	shf.l.wrap.b32 	%r7918, %r7917, %r7917, 27;
	xor.b32  	%r7919, %r7918, %r7899;
	shf.l.wrap.b32 	%r7920, %r7919, %r7919, 26;
	add.s32 	%r7921, %r7915, %r7920;
	add.s32 	%r7922, %r7921, -2132889090;
	add.s32 	%r7923, %r7922, %r7838;
	shf.l.wrap.b32 	%r7924, %r7910, %r7910, 23;
	xor.b32  	%r7925, %r7924, %r7910;
	shf.l.wrap.b32 	%r7926, %r7925, %r7925, 21;
	xor.b32  	%r7927, %r7926, %r7910;
	shf.l.wrap.b32 	%r7928, %r7927, %r7927, 30;
	and.b32  	%r7929, %r7910, %r7886;
	or.b32  	%r7930, %r7910, %r7886;
	and.b32  	%r7931, %r7930, %r7862;
	or.b32  	%r7932, %r7931, %r7929;
	add.s32 	%r7933, %r7928, %r7932;
	add.s32 	%r7934, %r7933, %r7922;
	add.s32 	%r7935, %r7583, %r7851;
	xor.b32  	%r7936, %r7899, %r7875;
	and.b32  	%r7937, %r7923, %r7936;
	xor.b32  	%r7938, %r7937, %r7875;
	add.s32 	%r7939, %r7935, %r7938;
	shf.l.wrap.b32 	%r7940, %r7923, %r7923, 18;
	xor.b32  	%r7941, %r7940, %r7923;
	shf.l.wrap.b32 	%r7942, %r7941, %r7941, 27;
	xor.b32  	%r7943, %r7942, %r7923;
	shf.l.wrap.b32 	%r7944, %r7943, %r7943, 26;
	add.s32 	%r7945, %r7939, %r7944;
	add.s32 	%r7946, %r7945, -1680079193;
	add.s32 	%r7947, %r7946, %r7862;
	shf.l.wrap.b32 	%r7948, %r7934, %r7934, 23;
	xor.b32  	%r7949, %r7948, %r7934;
	shf.l.wrap.b32 	%r7950, %r7949, %r7949, 21;
	xor.b32  	%r7951, %r7950, %r7934;
	shf.l.wrap.b32 	%r7952, %r7951, %r7951, 30;
	and.b32  	%r7953, %r7934, %r7910;
	or.b32  	%r7954, %r7934, %r7910;
	and.b32  	%r7955, %r7954, %r7886;
	or.b32  	%r7956, %r7955, %r7953;
	add.s32 	%r7957, %r7952, %r7956;
	add.s32 	%r7958, %r7957, %r7946;
	add.s32 	%r7959, %r7590, %r7875;
	xor.b32  	%r7960, %r7923, %r7899;
	and.b32  	%r7961, %r7947, %r7960;
	xor.b32  	%r7962, %r7961, %r7899;
	add.s32 	%r7963, %r7959, %r7962;
	shf.l.wrap.b32 	%r7964, %r7947, %r7947, 18;
	xor.b32  	%r7965, %r7964, %r7947;
	shf.l.wrap.b32 	%r7966, %r7965, %r7965, 27;
	xor.b32  	%r7967, %r7966, %r7947;
	shf.l.wrap.b32 	%r7968, %r7967, %r7967, 26;
	add.s32 	%r7969, %r7963, %r7968;
	add.s32 	%r7970, %r7969, -1046744716;
	add.s32 	%r7971, %r7970, %r7886;
	shf.l.wrap.b32 	%r7972, %r7958, %r7958, 23;
	xor.b32  	%r7973, %r7972, %r7958;
	shf.l.wrap.b32 	%r7974, %r7973, %r7973, 21;
	xor.b32  	%r7975, %r7974, %r7958;
	shf.l.wrap.b32 	%r7976, %r7975, %r7975, 30;
	and.b32  	%r7977, %r7958, %r7934;
	or.b32  	%r7978, %r7958, %r7934;
	and.b32  	%r7979, %r7978, %r7910;
	or.b32  	%r7980, %r7979, %r7977;
	add.s32 	%r7981, %r7976, %r7980;
	add.s32 	%r7982, %r7981, %r7970;
	shf.l.wrap.b32 	%r7983, %r7583, %r7583, 15;
	shf.l.wrap.b32 	%r7984, %r7583, %r7583, 13;
	xor.b32  	%r7985, %r7983, %r7984;
	shr.u32 	%r7986, %r7583, 10;
	xor.b32  	%r7987, %r7985, %r7986;
	shf.l.wrap.b32 	%r7988, %r7492, %r7492, 25;
	shf.l.wrap.b32 	%r7989, %r7492, %r7492, 14;
	xor.b32  	%r7990, %r7988, %r7989;
	shr.u32 	%r7991, %r7492, 3;
	xor.b32  	%r7992, %r7990, %r7991;
	add.s32 	%r7993, %r7992, %r7485;
	add.s32 	%r7994, %r7993, %r7548;
	add.s32 	%r7995, %r7994, %r7987;
	add.s32 	%r7996, %r7995, %r7899;
	xor.b32  	%r7997, %r7947, %r7923;
	and.b32  	%r7998, %r7971, %r7997;
	xor.b32  	%r7999, %r7998, %r7923;
	add.s32 	%r8000, %r7996, %r7999;
	shf.l.wrap.b32 	%r8001, %r7971, %r7971, 18;
	xor.b32  	%r8002, %r8001, %r7971;
	shf.l.wrap.b32 	%r8003, %r8002, %r8002, 27;
	xor.b32  	%r8004, %r8003, %r7971;
	shf.l.wrap.b32 	%r8005, %r8004, %r8004, 26;
	add.s32 	%r8006, %r8000, %r8005;
	add.s32 	%r8007, %r8006, -459576895;
	add.s32 	%r8008, %r8007, %r7910;
	shf.l.wrap.b32 	%r8009, %r7982, %r7982, 23;
	xor.b32  	%r8010, %r8009, %r7982;
	shf.l.wrap.b32 	%r8011, %r8010, %r8010, 21;
	xor.b32  	%r8012, %r8011, %r7982;
	shf.l.wrap.b32 	%r8013, %r8012, %r8012, 30;
	and.b32  	%r8014, %r7982, %r7958;
	or.b32  	%r8015, %r7982, %r7958;
	and.b32  	%r8016, %r8015, %r7934;
	or.b32  	%r8017, %r8016, %r8014;
	add.s32 	%r8018, %r8013, %r8017;
	add.s32 	%r8019, %r8018, %r8007;
	shf.l.wrap.b32 	%r8020, %r7590, %r7590, 15;
	shf.l.wrap.b32 	%r8021, %r7590, %r7590, 13;
	xor.b32  	%r8022, %r8020, %r8021;
	shr.u32 	%r8023, %r7590, 10;
	xor.b32  	%r8024, %r8022, %r8023;
	shf.l.wrap.b32 	%r8025, %r7499, %r7499, 25;
	shf.l.wrap.b32 	%r8026, %r7499, %r7499, 14;
	xor.b32  	%r8027, %r8025, %r8026;
	shr.u32 	%r8028, %r7499, 3;
	xor.b32  	%r8029, %r8027, %r8028;
	add.s32 	%r8030, %r8029, %r7492;
	add.s32 	%r8031, %r8030, %r7555;
	add.s32 	%r8032, %r8031, %r8024;
	add.s32 	%r8033, %r8032, %r7923;
	xor.b32  	%r8034, %r7971, %r7947;
	and.b32  	%r8035, %r8008, %r8034;
	xor.b32  	%r8036, %r8035, %r7947;
	add.s32 	%r8037, %r8033, %r8036;
	shf.l.wrap.b32 	%r8038, %r8008, %r8008, 18;
	xor.b32  	%r8039, %r8038, %r8008;
	shf.l.wrap.b32 	%r8040, %r8039, %r8039, 27;
	xor.b32  	%r8041, %r8040, %r8008;
	shf.l.wrap.b32 	%r8042, %r8041, %r8041, 26;
	add.s32 	%r8043, %r8037, %r8042;
	add.s32 	%r8044, %r8043, -272742522;
	add.s32 	%r8045, %r8044, %r7934;
	shf.l.wrap.b32 	%r8046, %r8019, %r8019, 23;
	xor.b32  	%r8047, %r8046, %r8019;
	shf.l.wrap.b32 	%r8048, %r8047, %r8047, 21;
	xor.b32  	%r8049, %r8048, %r8019;
	shf.l.wrap.b32 	%r8050, %r8049, %r8049, 30;
	and.b32  	%r8051, %r8019, %r7982;
	or.b32  	%r8052, %r8019, %r7982;
	and.b32  	%r8053, %r8052, %r7958;
	or.b32  	%r8054, %r8053, %r8051;
	add.s32 	%r8055, %r8050, %r8054;
	add.s32 	%r8056, %r8055, %r8044;
	shf.l.wrap.b32 	%r8057, %r7995, %r7995, 15;
	shf.l.wrap.b32 	%r8058, %r7995, %r7995, 13;
	xor.b32  	%r8059, %r8057, %r8058;
	shr.u32 	%r8060, %r7995, 10;
	xor.b32  	%r8061, %r8059, %r8060;
	shf.l.wrap.b32 	%r8062, %r7506, %r7506, 25;
	shf.l.wrap.b32 	%r8063, %r7506, %r7506, 14;
	xor.b32  	%r8064, %r8062, %r8063;
	shr.u32 	%r8065, %r7506, 3;
	xor.b32  	%r8066, %r8064, %r8065;
	add.s32 	%r8067, %r8066, %r7499;
	add.s32 	%r8068, %r8067, %r7562;
	add.s32 	%r8069, %r8068, %r8061;
	add.s32 	%r8070, %r8069, %r7947;
	xor.b32  	%r8071, %r8008, %r7971;
	and.b32  	%r8072, %r8045, %r8071;
	xor.b32  	%r8073, %r8072, %r7971;
	add.s32 	%r8074, %r8070, %r8073;
	shf.l.wrap.b32 	%r8075, %r8045, %r8045, 18;
	xor.b32  	%r8076, %r8075, %r8045;
	shf.l.wrap.b32 	%r8077, %r8076, %r8076, 27;
	xor.b32  	%r8078, %r8077, %r8045;
	shf.l.wrap.b32 	%r8079, %r8078, %r8078, 26;
	add.s32 	%r8080, %r8074, %r8079;
	add.s32 	%r8081, %r8080, 264347078;
	add.s32 	%r8082, %r8081, %r7958;
	shf.l.wrap.b32 	%r8083, %r8056, %r8056, 23;
	xor.b32  	%r8084, %r8083, %r8056;
	shf.l.wrap.b32 	%r8085, %r8084, %r8084, 21;
	xor.b32  	%r8086, %r8085, %r8056;
	shf.l.wrap.b32 	%r8087, %r8086, %r8086, 30;
	and.b32  	%r8088, %r8056, %r8019;
	or.b32  	%r8089, %r8056, %r8019;
	and.b32  	%r8090, %r8089, %r7982;
	or.b32  	%r8091, %r8090, %r8088;
	add.s32 	%r8092, %r8087, %r8091;
	add.s32 	%r8093, %r8092, %r8081;
	shf.l.wrap.b32 	%r8094, %r8032, %r8032, 15;
	shf.l.wrap.b32 	%r8095, %r8032, %r8032, 13;
	xor.b32  	%r8096, %r8094, %r8095;
	shr.u32 	%r8097, %r8032, 10;
	xor.b32  	%r8098, %r8096, %r8097;
	shf.l.wrap.b32 	%r8099, %r7513, %r7513, 25;
	shf.l.wrap.b32 	%r8100, %r7513, %r7513, 14;
	xor.b32  	%r8101, %r8099, %r8100;
	shr.u32 	%r8102, %r7513, 3;
	xor.b32  	%r8103, %r8101, %r8102;
	add.s32 	%r8104, %r8103, %r7506;
	add.s32 	%r8105, %r8104, %r7569;
	add.s32 	%r8106, %r8105, %r8098;
	add.s32 	%r8107, %r8106, %r7971;
	xor.b32  	%r8108, %r8045, %r8008;
	and.b32  	%r8109, %r8082, %r8108;
	xor.b32  	%r8110, %r8109, %r8008;
	add.s32 	%r8111, %r8107, %r8110;
	shf.l.wrap.b32 	%r8112, %r8082, %r8082, 18;
	xor.b32  	%r8113, %r8112, %r8082;
	shf.l.wrap.b32 	%r8114, %r8113, %r8113, 27;
	xor.b32  	%r8115, %r8114, %r8082;
	shf.l.wrap.b32 	%r8116, %r8115, %r8115, 26;
	add.s32 	%r8117, %r8111, %r8116;
	add.s32 	%r8118, %r8117, 604807628;
	add.s32 	%r8119, %r8118, %r7982;
	shf.l.wrap.b32 	%r8120, %r8093, %r8093, 23;
	xor.b32  	%r8121, %r8120, %r8093;
	shf.l.wrap.b32 	%r8122, %r8121, %r8121, 21;
	xor.b32  	%r8123, %r8122, %r8093;
	shf.l.wrap.b32 	%r8124, %r8123, %r8123, 30;
	and.b32  	%r8125, %r8093, %r8056;
	or.b32  	%r8126, %r8093, %r8056;
	and.b32  	%r8127, %r8126, %r8019;
	or.b32  	%r8128, %r8127, %r8125;
	add.s32 	%r8129, %r8124, %r8128;
	add.s32 	%r8130, %r8129, %r8118;
	shf.l.wrap.b32 	%r8131, %r8069, %r8069, 15;
	shf.l.wrap.b32 	%r8132, %r8069, %r8069, 13;
	xor.b32  	%r8133, %r8131, %r8132;
	shr.u32 	%r8134, %r8069, 10;
	xor.b32  	%r8135, %r8133, %r8134;
	shf.l.wrap.b32 	%r8136, %r7520, %r7520, 25;
	shf.l.wrap.b32 	%r8137, %r7520, %r7520, 14;
	xor.b32  	%r8138, %r8136, %r8137;
	shr.u32 	%r8139, %r7520, 3;
	xor.b32  	%r8140, %r8138, %r8139;
	add.s32 	%r8141, %r8140, %r7513;
	add.s32 	%r8142, %r8141, %r7576;
	add.s32 	%r8143, %r8142, %r8135;
	add.s32 	%r8144, %r8143, %r8008;
	xor.b32  	%r8145, %r8082, %r8045;
	and.b32  	%r8146, %r8119, %r8145;
	xor.b32  	%r8147, %r8146, %r8045;
	add.s32 	%r8148, %r8144, %r8147;
	shf.l.wrap.b32 	%r8149, %r8119, %r8119, 18;
	xor.b32  	%r8150, %r8149, %r8119;
	shf.l.wrap.b32 	%r8151, %r8150, %r8150, 27;
	xor.b32  	%r8152, %r8151, %r8119;
	shf.l.wrap.b32 	%r8153, %r8152, %r8152, 26;
	add.s32 	%r8154, %r8148, %r8153;
	add.s32 	%r8155, %r8154, 770255983;
	add.s32 	%r8156, %r8155, %r8019;
	shf.l.wrap.b32 	%r8157, %r8130, %r8130, 23;
	xor.b32  	%r8158, %r8157, %r8130;
	shf.l.wrap.b32 	%r8159, %r8158, %r8158, 21;
	xor.b32  	%r8160, %r8159, %r8130;
	shf.l.wrap.b32 	%r8161, %r8160, %r8160, 30;
	and.b32  	%r8162, %r8130, %r8093;
	or.b32  	%r8163, %r8130, %r8093;
	and.b32  	%r8164, %r8163, %r8056;
	or.b32  	%r8165, %r8164, %r8162;
	add.s32 	%r8166, %r8161, %r8165;
	add.s32 	%r8167, %r8166, %r8155;
	shf.l.wrap.b32 	%r8168, %r8106, %r8106, 15;
	shf.l.wrap.b32 	%r8169, %r8106, %r8106, 13;
	xor.b32  	%r8170, %r8168, %r8169;
	shr.u32 	%r8171, %r8106, 10;
	xor.b32  	%r8172, %r8170, %r8171;
	shf.l.wrap.b32 	%r8173, %r7527, %r7527, 25;
	shf.l.wrap.b32 	%r8174, %r7527, %r7527, 14;
	xor.b32  	%r8175, %r8173, %r8174;
	shr.u32 	%r8176, %r7527, 3;
	xor.b32  	%r8177, %r8175, %r8176;
	add.s32 	%r8178, %r8177, %r7520;
	add.s32 	%r8179, %r8178, %r7583;
	add.s32 	%r8180, %r8179, %r8172;
	add.s32 	%r8181, %r8180, %r8045;
	xor.b32  	%r8182, %r8119, %r8082;
	and.b32  	%r8183, %r8156, %r8182;
	xor.b32  	%r8184, %r8183, %r8082;
	add.s32 	%r8185, %r8181, %r8184;
	shf.l.wrap.b32 	%r8186, %r8156, %r8156, 18;
	xor.b32  	%r8187, %r8186, %r8156;
	shf.l.wrap.b32 	%r8188, %r8187, %r8187, 27;
	xor.b32  	%r8189, %r8188, %r8156;
	shf.l.wrap.b32 	%r8190, %r8189, %r8189, 26;
	add.s32 	%r8191, %r8185, %r8190;
	add.s32 	%r8192, %r8191, 1249150122;
	add.s32 	%r8193, %r8192, %r8056;
	shf.l.wrap.b32 	%r8194, %r8167, %r8167, 23;
	xor.b32  	%r8195, %r8194, %r8167;
	shf.l.wrap.b32 	%r8196, %r8195, %r8195, 21;
	xor.b32  	%r8197, %r8196, %r8167;
	shf.l.wrap.b32 	%r8198, %r8197, %r8197, 30;
	and.b32  	%r8199, %r8167, %r8130;
	or.b32  	%r8200, %r8167, %r8130;
	and.b32  	%r8201, %r8200, %r8093;
	or.b32  	%r8202, %r8201, %r8199;
	add.s32 	%r8203, %r8198, %r8202;
	add.s32 	%r8204, %r8203, %r8192;
	shf.l.wrap.b32 	%r8205, %r8143, %r8143, 15;
	shf.l.wrap.b32 	%r8206, %r8143, %r8143, 13;
	xor.b32  	%r8207, %r8205, %r8206;
	shr.u32 	%r8208, %r8143, 10;
	xor.b32  	%r8209, %r8207, %r8208;
	shf.l.wrap.b32 	%r8210, %r7534, %r7534, 25;
	shf.l.wrap.b32 	%r8211, %r7534, %r7534, 14;
	xor.b32  	%r8212, %r8210, %r8211;
	shr.u32 	%r8213, %r7534, 3;
	xor.b32  	%r8214, %r8212, %r8213;
	add.s32 	%r8215, %r8214, %r7527;
	add.s32 	%r8216, %r8215, %r7590;
	add.s32 	%r8217, %r8216, %r8209;
	add.s32 	%r8218, %r8217, %r8082;
	xor.b32  	%r8219, %r8156, %r8119;
	and.b32  	%r8220, %r8193, %r8219;
	xor.b32  	%r8221, %r8220, %r8119;
	add.s32 	%r8222, %r8218, %r8221;
	shf.l.wrap.b32 	%r8223, %r8193, %r8193, 18;
	xor.b32  	%r8224, %r8223, %r8193;
	shf.l.wrap.b32 	%r8225, %r8224, %r8224, 27;
	xor.b32  	%r8226, %r8225, %r8193;
	shf.l.wrap.b32 	%r8227, %r8226, %r8226, 26;
	add.s32 	%r8228, %r8222, %r8227;
	add.s32 	%r8229, %r8228, 1555081692;
	add.s32 	%r8230, %r8229, %r8093;
	shf.l.wrap.b32 	%r8231, %r8204, %r8204, 23;
	xor.b32  	%r8232, %r8231, %r8204;
	shf.l.wrap.b32 	%r8233, %r8232, %r8232, 21;
	xor.b32  	%r8234, %r8233, %r8204;
	shf.l.wrap.b32 	%r8235, %r8234, %r8234, 30;
	and.b32  	%r8236, %r8204, %r8167;
	or.b32  	%r8237, %r8204, %r8167;
	and.b32  	%r8238, %r8237, %r8130;
	or.b32  	%r8239, %r8238, %r8236;
	add.s32 	%r8240, %r8235, %r8239;
	add.s32 	%r8241, %r8240, %r8229;
	shf.l.wrap.b32 	%r8242, %r8180, %r8180, 15;
	shf.l.wrap.b32 	%r8243, %r8180, %r8180, 13;
	xor.b32  	%r8244, %r8242, %r8243;
	shr.u32 	%r8245, %r8180, 10;
	xor.b32  	%r8246, %r8244, %r8245;
	shf.l.wrap.b32 	%r8247, %r7541, %r7541, 25;
	shf.l.wrap.b32 	%r8248, %r7541, %r7541, 14;
	xor.b32  	%r8249, %r8247, %r8248;
	shr.u32 	%r8250, %r7541, 3;
	xor.b32  	%r8251, %r8249, %r8250;
	add.s32 	%r8252, %r8251, %r7534;
	add.s32 	%r8253, %r8252, %r7995;
	add.s32 	%r8254, %r8253, %r8246;
	add.s32 	%r8255, %r8254, %r8119;
	xor.b32  	%r8256, %r8193, %r8156;
	and.b32  	%r8257, %r8230, %r8256;
	xor.b32  	%r8258, %r8257, %r8156;
	add.s32 	%r8259, %r8255, %r8258;
	shf.l.wrap.b32 	%r8260, %r8230, %r8230, 18;
	xor.b32  	%r8261, %r8260, %r8230;
	shf.l.wrap.b32 	%r8262, %r8261, %r8261, 27;
	xor.b32  	%r8263, %r8262, %r8230;
	shf.l.wrap.b32 	%r8264, %r8263, %r8263, 26;
	add.s32 	%r8265, %r8259, %r8264;
	add.s32 	%r8266, %r8265, 1996064986;
	add.s32 	%r8267, %r8266, %r8130;
	shf.l.wrap.b32 	%r8268, %r8241, %r8241, 23;
	xor.b32  	%r8269, %r8268, %r8241;
	shf.l.wrap.b32 	%r8270, %r8269, %r8269, 21;
	xor.b32  	%r8271, %r8270, %r8241;
	shf.l.wrap.b32 	%r8272, %r8271, %r8271, 30;
	and.b32  	%r8273, %r8241, %r8204;
	or.b32  	%r8274, %r8241, %r8204;
	and.b32  	%r8275, %r8274, %r8167;
	or.b32  	%r8276, %r8275, %r8273;
	add.s32 	%r8277, %r8272, %r8276;
	add.s32 	%r8278, %r8277, %r8266;
	shf.l.wrap.b32 	%r8279, %r8217, %r8217, 15;
	shf.l.wrap.b32 	%r8280, %r8217, %r8217, 13;
	xor.b32  	%r8281, %r8279, %r8280;
	shr.u32 	%r8282, %r8217, 10;
	xor.b32  	%r8283, %r8281, %r8282;
	shf.l.wrap.b32 	%r8284, %r7548, %r7548, 25;
	shf.l.wrap.b32 	%r8285, %r7548, %r7548, 14;
	xor.b32  	%r8286, %r8284, %r8285;
	shr.u32 	%r8287, %r7548, 3;
	xor.b32  	%r8288, %r8286, %r8287;
	add.s32 	%r8289, %r8288, %r7541;
	add.s32 	%r8290, %r8289, %r8032;
	add.s32 	%r8291, %r8290, %r8283;
	add.s32 	%r8292, %r8291, %r8156;
	xor.b32  	%r8293, %r8230, %r8193;
	and.b32  	%r8294, %r8267, %r8293;
	xor.b32  	%r8295, %r8294, %r8193;
	add.s32 	%r8296, %r8292, %r8295;
	shf.l.wrap.b32 	%r8297, %r8267, %r8267, 18;
	xor.b32  	%r8298, %r8297, %r8267;
	shf.l.wrap.b32 	%r8299, %r8298, %r8298, 27;
	xor.b32  	%r8300, %r8299, %r8267;
	shf.l.wrap.b32 	%r8301, %r8300, %r8300, 26;
	add.s32 	%r8302, %r8296, %r8301;
	add.s32 	%r8303, %r8302, -1740746414;
	add.s32 	%r8304, %r8303, %r8167;
	shf.l.wrap.b32 	%r8305, %r8278, %r8278, 23;
	xor.b32  	%r8306, %r8305, %r8278;
	shf.l.wrap.b32 	%r8307, %r8306, %r8306, 21;
	xor.b32  	%r8308, %r8307, %r8278;
	shf.l.wrap.b32 	%r8309, %r8308, %r8308, 30;
	and.b32  	%r8310, %r8278, %r8241;
	or.b32  	%r8311, %r8278, %r8241;
	and.b32  	%r8312, %r8311, %r8204;
	or.b32  	%r8313, %r8312, %r8310;
	add.s32 	%r8314, %r8309, %r8313;
	add.s32 	%r8315, %r8314, %r8303;
	shf.l.wrap.b32 	%r8316, %r8254, %r8254, 15;
	shf.l.wrap.b32 	%r8317, %r8254, %r8254, 13;
	xor.b32  	%r8318, %r8316, %r8317;
	shr.u32 	%r8319, %r8254, 10;
	xor.b32  	%r8320, %r8318, %r8319;
	shf.l.wrap.b32 	%r8321, %r7555, %r7555, 25;
	shf.l.wrap.b32 	%r8322, %r7555, %r7555, 14;
	xor.b32  	%r8323, %r8321, %r8322;
	shr.u32 	%r8324, %r7555, 3;
	xor.b32  	%r8325, %r8323, %r8324;
	add.s32 	%r8326, %r8325, %r7548;
	add.s32 	%r8327, %r8326, %r8069;
	add.s32 	%r8328, %r8327, %r8320;
	add.s32 	%r8329, %r8328, %r8193;
	xor.b32  	%r8330, %r8267, %r8230;
	and.b32  	%r8331, %r8304, %r8330;
	xor.b32  	%r8332, %r8331, %r8230;
	add.s32 	%r8333, %r8329, %r8332;
	shf.l.wrap.b32 	%r8334, %r8304, %r8304, 18;
	xor.b32  	%r8335, %r8334, %r8304;
	shf.l.wrap.b32 	%r8336, %r8335, %r8335, 27;
	xor.b32  	%r8337, %r8336, %r8304;
	shf.l.wrap.b32 	%r8338, %r8337, %r8337, 26;
	add.s32 	%r8339, %r8333, %r8338;
	add.s32 	%r8340, %r8339, -1473132947;
	add.s32 	%r8341, %r8340, %r8204;
	shf.l.wrap.b32 	%r8342, %r8315, %r8315, 23;
	xor.b32  	%r8343, %r8342, %r8315;
	shf.l.wrap.b32 	%r8344, %r8343, %r8343, 21;
	xor.b32  	%r8345, %r8344, %r8315;
	shf.l.wrap.b32 	%r8346, %r8345, %r8345, 30;
	and.b32  	%r8347, %r8315, %r8278;
	or.b32  	%r8348, %r8315, %r8278;
	and.b32  	%r8349, %r8348, %r8241;
	or.b32  	%r8350, %r8349, %r8347;
	add.s32 	%r8351, %r8346, %r8350;
	add.s32 	%r8352, %r8351, %r8340;
	shf.l.wrap.b32 	%r8353, %r8291, %r8291, 15;
	shf.l.wrap.b32 	%r8354, %r8291, %r8291, 13;
	xor.b32  	%r8355, %r8353, %r8354;
	shr.u32 	%r8356, %r8291, 10;
	xor.b32  	%r8357, %r8355, %r8356;
	shf.l.wrap.b32 	%r8358, %r7562, %r7562, 25;
	shf.l.wrap.b32 	%r8359, %r7562, %r7562, 14;
	xor.b32  	%r8360, %r8358, %r8359;
	shr.u32 	%r8361, %r7562, 3;
	xor.b32  	%r8362, %r8360, %r8361;
	add.s32 	%r8363, %r8362, %r7555;
	add.s32 	%r8364, %r8363, %r8106;
	add.s32 	%r8365, %r8364, %r8357;
	add.s32 	%r8366, %r8365, %r8230;
	xor.b32  	%r8367, %r8304, %r8267;
	and.b32  	%r8368, %r8341, %r8367;
	xor.b32  	%r8369, %r8368, %r8267;
	add.s32 	%r8370, %r8366, %r8369;
	shf.l.wrap.b32 	%r8371, %r8341, %r8341, 18;
	xor.b32  	%r8372, %r8371, %r8341;
	shf.l.wrap.b32 	%r8373, %r8372, %r8372, 27;
	xor.b32  	%r8374, %r8373, %r8341;
	shf.l.wrap.b32 	%r8375, %r8374, %r8374, 26;
	add.s32 	%r8376, %r8370, %r8375;
	add.s32 	%r8377, %r8376, -1341970488;
	add.s32 	%r8378, %r8377, %r8241;
	shf.l.wrap.b32 	%r8379, %r8352, %r8352, 23;
	xor.b32  	%r8380, %r8379, %r8352;
	shf.l.wrap.b32 	%r8381, %r8380, %r8380, 21;
	xor.b32  	%r8382, %r8381, %r8352;
	shf.l.wrap.b32 	%r8383, %r8382, %r8382, 30;
	and.b32  	%r8384, %r8352, %r8315;
	or.b32  	%r8385, %r8352, %r8315;
	and.b32  	%r8386, %r8385, %r8278;
	or.b32  	%r8387, %r8386, %r8384;
	add.s32 	%r8388, %r8383, %r8387;
	add.s32 	%r8389, %r8388, %r8377;
	shf.l.wrap.b32 	%r8390, %r8328, %r8328, 15;
	shf.l.wrap.b32 	%r8391, %r8328, %r8328, 13;
	xor.b32  	%r8392, %r8390, %r8391;
	shr.u32 	%r8393, %r8328, 10;
	xor.b32  	%r8394, %r8392, %r8393;
	shf.l.wrap.b32 	%r8395, %r7569, %r7569, 25;
	shf.l.wrap.b32 	%r8396, %r7569, %r7569, 14;
	xor.b32  	%r8397, %r8395, %r8396;
	shr.u32 	%r8398, %r7569, 3;
	xor.b32  	%r8399, %r8397, %r8398;
	add.s32 	%r8400, %r8399, %r7562;
	add.s32 	%r8401, %r8400, %r8143;
	add.s32 	%r8402, %r8401, %r8394;
	add.s32 	%r8403, %r8402, %r8267;
	xor.b32  	%r8404, %r8341, %r8304;
	and.b32  	%r8405, %r8378, %r8404;
	xor.b32  	%r8406, %r8405, %r8304;
	add.s32 	%r8407, %r8403, %r8406;
	shf.l.wrap.b32 	%r8408, %r8378, %r8378, 18;
	xor.b32  	%r8409, %r8408, %r8378;
	shf.l.wrap.b32 	%r8410, %r8409, %r8409, 27;
	xor.b32  	%r8411, %r8410, %r8378;
	shf.l.wrap.b32 	%r8412, %r8411, %r8411, 26;
	add.s32 	%r8413, %r8407, %r8412;
	add.s32 	%r8414, %r8413, -1084653625;
	add.s32 	%r8415, %r8414, %r8278;
	shf.l.wrap.b32 	%r8416, %r8389, %r8389, 23;
	xor.b32  	%r8417, %r8416, %r8389;
	shf.l.wrap.b32 	%r8418, %r8417, %r8417, 21;
	xor.b32  	%r8419, %r8418, %r8389;
	shf.l.wrap.b32 	%r8420, %r8419, %r8419, 30;
	and.b32  	%r8421, %r8389, %r8352;
	or.b32  	%r8422, %r8389, %r8352;
	and.b32  	%r8423, %r8422, %r8315;
	or.b32  	%r8424, %r8423, %r8421;
	add.s32 	%r8425, %r8420, %r8424;
	add.s32 	%r8426, %r8425, %r8414;
	shf.l.wrap.b32 	%r8427, %r8365, %r8365, 15;
	shf.l.wrap.b32 	%r8428, %r8365, %r8365, 13;
	xor.b32  	%r8429, %r8427, %r8428;
	shr.u32 	%r8430, %r8365, 10;
	xor.b32  	%r8431, %r8429, %r8430;
	shf.l.wrap.b32 	%r8432, %r7576, %r7576, 25;
	shf.l.wrap.b32 	%r8433, %r7576, %r7576, 14;
	xor.b32  	%r8434, %r8432, %r8433;
	shr.u32 	%r8435, %r7576, 3;
	xor.b32  	%r8436, %r8434, %r8435;
	add.s32 	%r8437, %r8436, %r7569;
	add.s32 	%r8438, %r8437, %r8180;
	add.s32 	%r8439, %r8438, %r8431;
	add.s32 	%r8440, %r8439, %r8304;
	xor.b32  	%r8441, %r8378, %r8341;
	and.b32  	%r8442, %r8415, %r8441;
	xor.b32  	%r8443, %r8442, %r8341;
	add.s32 	%r8444, %r8440, %r8443;
	shf.l.wrap.b32 	%r8445, %r8415, %r8415, 18;
	xor.b32  	%r8446, %r8445, %r8415;
	shf.l.wrap.b32 	%r8447, %r8446, %r8446, 27;
	xor.b32  	%r8448, %r8447, %r8415;
	shf.l.wrap.b32 	%r8449, %r8448, %r8448, 26;
	add.s32 	%r8450, %r8444, %r8449;
	add.s32 	%r8451, %r8450, -958395405;
	add.s32 	%r8452, %r8451, %r8315;
	shf.l.wrap.b32 	%r8453, %r8426, %r8426, 23;
	xor.b32  	%r8454, %r8453, %r8426;
	shf.l.wrap.b32 	%r8455, %r8454, %r8454, 21;
	xor.b32  	%r8456, %r8455, %r8426;
	shf.l.wrap.b32 	%r8457, %r8456, %r8456, 30;
	and.b32  	%r8458, %r8426, %r8389;
	or.b32  	%r8459, %r8426, %r8389;
	and.b32  	%r8460, %r8459, %r8352;
	or.b32  	%r8461, %r8460, %r8458;
	add.s32 	%r8462, %r8457, %r8461;
	add.s32 	%r8463, %r8462, %r8451;
	shf.l.wrap.b32 	%r8464, %r8402, %r8402, 15;
	shf.l.wrap.b32 	%r8465, %r8402, %r8402, 13;
	xor.b32  	%r8466, %r8464, %r8465;
	shr.u32 	%r8467, %r8402, 10;
	xor.b32  	%r8468, %r8466, %r8467;
	shf.l.wrap.b32 	%r8469, %r7583, %r7583, 25;
	shf.l.wrap.b32 	%r8470, %r7583, %r7583, 14;
	xor.b32  	%r8471, %r8469, %r8470;
	shr.u32 	%r8472, %r7583, 3;
	xor.b32  	%r8473, %r8471, %r8472;
	add.s32 	%r8474, %r8473, %r7576;
	add.s32 	%r8475, %r8474, %r8217;
	add.s32 	%r8476, %r8475, %r8468;
	add.s32 	%r8477, %r8476, %r8341;
	xor.b32  	%r8478, %r8415, %r8378;
	and.b32  	%r8479, %r8452, %r8478;
	xor.b32  	%r8480, %r8479, %r8378;
	add.s32 	%r8481, %r8477, %r8480;
	shf.l.wrap.b32 	%r8482, %r8452, %r8452, 18;
	xor.b32  	%r8483, %r8482, %r8452;
	shf.l.wrap.b32 	%r8484, %r8483, %r8483, 27;
	xor.b32  	%r8485, %r8484, %r8452;
	shf.l.wrap.b32 	%r8486, %r8485, %r8485, 26;
	add.s32 	%r8487, %r8481, %r8486;
	add.s32 	%r8488, %r8487, -710438585;
	add.s32 	%r8489, %r8488, %r8352;
	shf.l.wrap.b32 	%r8490, %r8463, %r8463, 23;
	xor.b32  	%r8491, %r8490, %r8463;
	shf.l.wrap.b32 	%r8492, %r8491, %r8491, 21;
	xor.b32  	%r8493, %r8492, %r8463;
	shf.l.wrap.b32 	%r8494, %r8493, %r8493, 30;
	and.b32  	%r8495, %r8463, %r8426;
	or.b32  	%r8496, %r8463, %r8426;
	and.b32  	%r8497, %r8496, %r8389;
	or.b32  	%r8498, %r8497, %r8495;
	add.s32 	%r8499, %r8494, %r8498;
	add.s32 	%r8500, %r8499, %r8488;
	shf.l.wrap.b32 	%r8501, %r8439, %r8439, 15;
	shf.l.wrap.b32 	%r8502, %r8439, %r8439, 13;
	xor.b32  	%r8503, %r8501, %r8502;
	shr.u32 	%r8504, %r8439, 10;
	xor.b32  	%r8505, %r8503, %r8504;
	shf.l.wrap.b32 	%r8506, %r7590, %r7590, 25;
	shf.l.wrap.b32 	%r8507, %r7590, %r7590, 14;
	xor.b32  	%r8508, %r8506, %r8507;
	shr.u32 	%r8509, %r7590, 3;
	xor.b32  	%r8510, %r8508, %r8509;
	add.s32 	%r8511, %r8510, %r7583;
	add.s32 	%r8512, %r8511, %r8254;
	add.s32 	%r8513, %r8512, %r8505;
	add.s32 	%r8514, %r8513, %r8378;
	xor.b32  	%r8515, %r8452, %r8415;
	and.b32  	%r8516, %r8489, %r8515;
	xor.b32  	%r8517, %r8516, %r8415;
	add.s32 	%r8518, %r8514, %r8517;
	shf.l.wrap.b32 	%r8519, %r8489, %r8489, 18;
	xor.b32  	%r8520, %r8519, %r8489;
	shf.l.wrap.b32 	%r8521, %r8520, %r8520, 27;
	xor.b32  	%r8522, %r8521, %r8489;
	shf.l.wrap.b32 	%r8523, %r8522, %r8522, 26;
	add.s32 	%r8524, %r8518, %r8523;
	add.s32 	%r8525, %r8524, 113926993;
	add.s32 	%r8526, %r8525, %r8389;
	shf.l.wrap.b32 	%r8527, %r8500, %r8500, 23;
	xor.b32  	%r8528, %r8527, %r8500;
	shf.l.wrap.b32 	%r8529, %r8528, %r8528, 21;
	xor.b32  	%r8530, %r8529, %r8500;
	shf.l.wrap.b32 	%r8531, %r8530, %r8530, 30;
	and.b32  	%r8532, %r8500, %r8463;
	or.b32  	%r8533, %r8500, %r8463;
	and.b32  	%r8534, %r8533, %r8426;
	or.b32  	%r8535, %r8534, %r8532;
	add.s32 	%r8536, %r8531, %r8535;
	add.s32 	%r8537, %r8536, %r8525;
	shf.l.wrap.b32 	%r8538, %r8476, %r8476, 15;
	shf.l.wrap.b32 	%r8539, %r8476, %r8476, 13;
	xor.b32  	%r8540, %r8538, %r8539;
	shr.u32 	%r8541, %r8476, 10;
	xor.b32  	%r8542, %r8540, %r8541;
	shf.l.wrap.b32 	%r8543, %r7995, %r7995, 25;
	shf.l.wrap.b32 	%r8544, %r7995, %r7995, 14;
	xor.b32  	%r8545, %r8543, %r8544;
	shr.u32 	%r8546, %r7995, 3;
	xor.b32  	%r8547, %r8545, %r8546;
	add.s32 	%r8548, %r8547, %r7590;
	add.s32 	%r8549, %r8548, %r8291;
	add.s32 	%r8550, %r8549, %r8542;
	add.s32 	%r8551, %r8550, %r8415;
	xor.b32  	%r8552, %r8489, %r8452;
	and.b32  	%r8553, %r8526, %r8552;
	xor.b32  	%r8554, %r8553, %r8452;
	add.s32 	%r8555, %r8551, %r8554;
	shf.l.wrap.b32 	%r8556, %r8526, %r8526, 18;
	xor.b32  	%r8557, %r8556, %r8526;
	shf.l.wrap.b32 	%r8558, %r8557, %r8557, 27;
	xor.b32  	%r8559, %r8558, %r8526;
	shf.l.wrap.b32 	%r8560, %r8559, %r8559, 26;
	add.s32 	%r8561, %r8555, %r8560;
	add.s32 	%r8562, %r8561, 338241895;
	add.s32 	%r8563, %r8562, %r8426;
	shf.l.wrap.b32 	%r8564, %r8537, %r8537, 23;
	xor.b32  	%r8565, %r8564, %r8537;
	shf.l.wrap.b32 	%r8566, %r8565, %r8565, 21;
	xor.b32  	%r8567, %r8566, %r8537;
	shf.l.wrap.b32 	%r8568, %r8567, %r8567, 30;
	and.b32  	%r8569, %r8537, %r8500;
	or.b32  	%r8570, %r8537, %r8500;
	and.b32  	%r8571, %r8570, %r8463;
	or.b32  	%r8572, %r8571, %r8569;
	add.s32 	%r8573, %r8568, %r8572;
	add.s32 	%r8574, %r8573, %r8562;
	shf.l.wrap.b32 	%r8575, %r8513, %r8513, 15;
	shf.l.wrap.b32 	%r8576, %r8513, %r8513, 13;
	xor.b32  	%r8577, %r8575, %r8576;
	shr.u32 	%r8578, %r8513, 10;
	xor.b32  	%r8579, %r8577, %r8578;
	shf.l.wrap.b32 	%r8580, %r8032, %r8032, 25;
	shf.l.wrap.b32 	%r8581, %r8032, %r8032, 14;
	xor.b32  	%r8582, %r8580, %r8581;
	shr.u32 	%r8583, %r8032, 3;
	xor.b32  	%r8584, %r8582, %r8583;
	add.s32 	%r8585, %r8584, %r7995;
	add.s32 	%r8586, %r8585, %r8328;
	add.s32 	%r8587, %r8586, %r8579;
	add.s32 	%r8588, %r8587, %r8452;
	xor.b32  	%r8589, %r8526, %r8489;
	and.b32  	%r8590, %r8563, %r8589;
	xor.b32  	%r8591, %r8590, %r8489;
	add.s32 	%r8592, %r8588, %r8591;
	shf.l.wrap.b32 	%r8593, %r8563, %r8563, 18;
	xor.b32  	%r8594, %r8593, %r8563;
	shf.l.wrap.b32 	%r8595, %r8594, %r8594, 27;
	xor.b32  	%r8596, %r8595, %r8563;
	shf.l.wrap.b32 	%r8597, %r8596, %r8596, 26;
	add.s32 	%r8598, %r8592, %r8597;
	add.s32 	%r8599, %r8598, 666307205;
	add.s32 	%r8600, %r8599, %r8463;
	shf.l.wrap.b32 	%r8601, %r8574, %r8574, 23;
	xor.b32  	%r8602, %r8601, %r8574;
	shf.l.wrap.b32 	%r8603, %r8602, %r8602, 21;
	xor.b32  	%r8604, %r8603, %r8574;
	shf.l.wrap.b32 	%r8605, %r8604, %r8604, 30;
	and.b32  	%r8606, %r8574, %r8537;
	or.b32  	%r8607, %r8574, %r8537;
	and.b32  	%r8608, %r8607, %r8500;
	or.b32  	%r8609, %r8608, %r8606;
	add.s32 	%r8610, %r8605, %r8609;
	add.s32 	%r8611, %r8610, %r8599;
	shf.l.wrap.b32 	%r8612, %r8550, %r8550, 15;
	shf.l.wrap.b32 	%r8613, %r8550, %r8550, 13;
	xor.b32  	%r8614, %r8612, %r8613;
	shr.u32 	%r8615, %r8550, 10;
	xor.b32  	%r8616, %r8614, %r8615;
	shf.l.wrap.b32 	%r8617, %r8069, %r8069, 25;
	shf.l.wrap.b32 	%r8618, %r8069, %r8069, 14;
	xor.b32  	%r8619, %r8617, %r8618;
	shr.u32 	%r8620, %r8069, 3;
	xor.b32  	%r8621, %r8619, %r8620;
	add.s32 	%r8622, %r8621, %r8032;
	add.s32 	%r8623, %r8622, %r8365;
	add.s32 	%r8624, %r8623, %r8616;
	add.s32 	%r8625, %r8624, %r8489;
	xor.b32  	%r8626, %r8563, %r8526;
	and.b32  	%r8627, %r8600, %r8626;
	xor.b32  	%r8628, %r8627, %r8526;
	add.s32 	%r8629, %r8625, %r8628;
	shf.l.wrap.b32 	%r8630, %r8600, %r8600, 18;
	xor.b32  	%r8631, %r8630, %r8600;
	shf.l.wrap.b32 	%r8632, %r8631, %r8631, 27;
	xor.b32  	%r8633, %r8632, %r8600;
	shf.l.wrap.b32 	%r8634, %r8633, %r8633, 26;
	add.s32 	%r8635, %r8629, %r8634;
	add.s32 	%r8636, %r8635, 773529912;
	add.s32 	%r8637, %r8636, %r8500;
	shf.l.wrap.b32 	%r8638, %r8611, %r8611, 23;
	xor.b32  	%r8639, %r8638, %r8611;
	shf.l.wrap.b32 	%r8640, %r8639, %r8639, 21;
	xor.b32  	%r8641, %r8640, %r8611;
	shf.l.wrap.b32 	%r8642, %r8641, %r8641, 30;
	and.b32  	%r8643, %r8611, %r8574;
	or.b32  	%r8644, %r8611, %r8574;
	and.b32  	%r8645, %r8644, %r8537;
	or.b32  	%r8646, %r8645, %r8643;
	add.s32 	%r8647, %r8642, %r8646;
	add.s32 	%r8648, %r8647, %r8636;
	shf.l.wrap.b32 	%r8649, %r8587, %r8587, 15;
	shf.l.wrap.b32 	%r8650, %r8587, %r8587, 13;
	xor.b32  	%r8651, %r8649, %r8650;
	shr.u32 	%r8652, %r8587, 10;
	xor.b32  	%r8653, %r8651, %r8652;
	shf.l.wrap.b32 	%r8654, %r8106, %r8106, 25;
	shf.l.wrap.b32 	%r8655, %r8106, %r8106, 14;
	xor.b32  	%r8656, %r8654, %r8655;
	shr.u32 	%r8657, %r8106, 3;
	xor.b32  	%r8658, %r8656, %r8657;
	add.s32 	%r8659, %r8658, %r8069;
	add.s32 	%r8660, %r8659, %r8402;
	add.s32 	%r8661, %r8660, %r8653;
	add.s32 	%r8662, %r8661, %r8526;
	xor.b32  	%r8663, %r8600, %r8563;
	and.b32  	%r8664, %r8637, %r8663;
	xor.b32  	%r8665, %r8664, %r8563;
	add.s32 	%r8666, %r8662, %r8665;
	shf.l.wrap.b32 	%r8667, %r8637, %r8637, 18;
	xor.b32  	%r8668, %r8667, %r8637;
	shf.l.wrap.b32 	%r8669, %r8668, %r8668, 27;
	xor.b32  	%r8670, %r8669, %r8637;
	shf.l.wrap.b32 	%r8671, %r8670, %r8670, 26;
	add.s32 	%r8672, %r8666, %r8671;
	add.s32 	%r8673, %r8672, 1294757372;
	add.s32 	%r8674, %r8673, %r8537;
	shf.l.wrap.b32 	%r8675, %r8648, %r8648, 23;
	xor.b32  	%r8676, %r8675, %r8648;
	shf.l.wrap.b32 	%r8677, %r8676, %r8676, 21;
	xor.b32  	%r8678, %r8677, %r8648;
	shf.l.wrap.b32 	%r8679, %r8678, %r8678, 30;
	and.b32  	%r8680, %r8648, %r8611;
	or.b32  	%r8681, %r8648, %r8611;
	and.b32  	%r8682, %r8681, %r8574;
	or.b32  	%r8683, %r8682, %r8680;
	add.s32 	%r8684, %r8679, %r8683;
	add.s32 	%r8685, %r8684, %r8673;
	shf.l.wrap.b32 	%r8686, %r8624, %r8624, 15;
	shf.l.wrap.b32 	%r8687, %r8624, %r8624, 13;
	xor.b32  	%r8688, %r8686, %r8687;
	shr.u32 	%r8689, %r8624, 10;
	xor.b32  	%r8690, %r8688, %r8689;
	shf.l.wrap.b32 	%r8691, %r8143, %r8143, 25;
	shf.l.wrap.b32 	%r8692, %r8143, %r8143, 14;
	xor.b32  	%r8693, %r8691, %r8692;
	shr.u32 	%r8694, %r8143, 3;
	xor.b32  	%r8695, %r8693, %r8694;
	add.s32 	%r8696, %r8695, %r8106;
	add.s32 	%r8697, %r8696, %r8439;
	add.s32 	%r8698, %r8697, %r8690;
	add.s32 	%r8699, %r8698, %r8563;
	xor.b32  	%r8700, %r8637, %r8600;
	and.b32  	%r8701, %r8674, %r8700;
	xor.b32  	%r8702, %r8701, %r8600;
	add.s32 	%r8703, %r8699, %r8702;
	shf.l.wrap.b32 	%r8704, %r8674, %r8674, 18;
	xor.b32  	%r8705, %r8704, %r8674;
	shf.l.wrap.b32 	%r8706, %r8705, %r8705, 27;
	xor.b32  	%r8707, %r8706, %r8674;
	shf.l.wrap.b32 	%r8708, %r8707, %r8707, 26;
	add.s32 	%r8709, %r8703, %r8708;
	add.s32 	%r8710, %r8709, 1396182291;
	add.s32 	%r8711, %r8710, %r8574;
	shf.l.wrap.b32 	%r8712, %r8685, %r8685, 23;
	xor.b32  	%r8713, %r8712, %r8685;
	shf.l.wrap.b32 	%r8714, %r8713, %r8713, 21;
	xor.b32  	%r8715, %r8714, %r8685;
	shf.l.wrap.b32 	%r8716, %r8715, %r8715, 30;
	and.b32  	%r8717, %r8685, %r8648;
	or.b32  	%r8718, %r8685, %r8648;
	and.b32  	%r8719, %r8718, %r8611;
	or.b32  	%r8720, %r8719, %r8717;
	add.s32 	%r8721, %r8716, %r8720;
	add.s32 	%r8722, %r8721, %r8710;
	shf.l.wrap.b32 	%r8723, %r8661, %r8661, 15;
	shf.l.wrap.b32 	%r8724, %r8661, %r8661, 13;
	xor.b32  	%r8725, %r8723, %r8724;
	shr.u32 	%r8726, %r8661, 10;
	xor.b32  	%r8727, %r8725, %r8726;
	shf.l.wrap.b32 	%r8728, %r8180, %r8180, 25;
	shf.l.wrap.b32 	%r8729, %r8180, %r8180, 14;
	xor.b32  	%r8730, %r8728, %r8729;
	shr.u32 	%r8731, %r8180, 3;
	xor.b32  	%r8732, %r8730, %r8731;
	add.s32 	%r8733, %r8732, %r8143;
	add.s32 	%r8734, %r8733, %r8476;
	add.s32 	%r8735, %r8734, %r8727;
	add.s32 	%r8736, %r8735, %r8600;
	xor.b32  	%r8737, %r8674, %r8637;
	and.b32  	%r8738, %r8711, %r8737;
	xor.b32  	%r8739, %r8738, %r8637;
	add.s32 	%r8740, %r8736, %r8739;
	shf.l.wrap.b32 	%r8741, %r8711, %r8711, 18;
	xor.b32  	%r8742, %r8741, %r8711;
	shf.l.wrap.b32 	%r8743, %r8742, %r8742, 27;
	xor.b32  	%r8744, %r8743, %r8711;
	shf.l.wrap.b32 	%r8745, %r8744, %r8744, 26;
	add.s32 	%r8746, %r8740, %r8745;
	add.s32 	%r8747, %r8746, 1695183700;
	add.s32 	%r8748, %r8747, %r8611;
	shf.l.wrap.b32 	%r8749, %r8722, %r8722, 23;
	xor.b32  	%r8750, %r8749, %r8722;
	shf.l.wrap.b32 	%r8751, %r8750, %r8750, 21;
	xor.b32  	%r8752, %r8751, %r8722;
	shf.l.wrap.b32 	%r8753, %r8752, %r8752, 30;
	and.b32  	%r8754, %r8722, %r8685;
	or.b32  	%r8755, %r8722, %r8685;
	and.b32  	%r8756, %r8755, %r8648;
	or.b32  	%r8757, %r8756, %r8754;
	add.s32 	%r8758, %r8753, %r8757;
	add.s32 	%r8759, %r8758, %r8747;
	shf.l.wrap.b32 	%r8760, %r8698, %r8698, 15;
	shf.l.wrap.b32 	%r8761, %r8698, %r8698, 13;
	xor.b32  	%r8762, %r8760, %r8761;
	shr.u32 	%r8763, %r8698, 10;
	xor.b32  	%r8764, %r8762, %r8763;
	shf.l.wrap.b32 	%r8765, %r8217, %r8217, 25;
	shf.l.wrap.b32 	%r8766, %r8217, %r8217, 14;
	xor.b32  	%r8767, %r8765, %r8766;
	shr.u32 	%r8768, %r8217, 3;
	xor.b32  	%r8769, %r8767, %r8768;
	add.s32 	%r8770, %r8769, %r8180;
	add.s32 	%r8771, %r8770, %r8513;
	add.s32 	%r8772, %r8771, %r8764;
	add.s32 	%r8773, %r8772, %r8637;
	xor.b32  	%r8774, %r8711, %r8674;
	and.b32  	%r8775, %r8748, %r8774;
	xor.b32  	%r8776, %r8775, %r8674;
	add.s32 	%r8777, %r8773, %r8776;
	shf.l.wrap.b32 	%r8778, %r8748, %r8748, 18;
	xor.b32  	%r8779, %r8778, %r8748;
	shf.l.wrap.b32 	%r8780, %r8779, %r8779, 27;
	xor.b32  	%r8781, %r8780, %r8748;
	shf.l.wrap.b32 	%r8782, %r8781, %r8781, 26;
	add.s32 	%r8783, %r8777, %r8782;
	add.s32 	%r8784, %r8783, 1986661051;
	add.s32 	%r8785, %r8784, %r8648;
	shf.l.wrap.b32 	%r8786, %r8759, %r8759, 23;
	xor.b32  	%r8787, %r8786, %r8759;
	shf.l.wrap.b32 	%r8788, %r8787, %r8787, 21;
	xor.b32  	%r8789, %r8788, %r8759;
	shf.l.wrap.b32 	%r8790, %r8789, %r8789, 30;
	and.b32  	%r8791, %r8759, %r8722;
	or.b32  	%r8792, %r8759, %r8722;
	and.b32  	%r8793, %r8792, %r8685;
	or.b32  	%r8794, %r8793, %r8791;
	add.s32 	%r8795, %r8790, %r8794;
	add.s32 	%r8796, %r8795, %r8784;
	shf.l.wrap.b32 	%r8797, %r8735, %r8735, 15;
	shf.l.wrap.b32 	%r8798, %r8735, %r8735, 13;
	xor.b32  	%r8799, %r8797, %r8798;
	shr.u32 	%r8800, %r8735, 10;
	xor.b32  	%r8801, %r8799, %r8800;
	shf.l.wrap.b32 	%r8802, %r8254, %r8254, 25;
	shf.l.wrap.b32 	%r8803, %r8254, %r8254, 14;
	xor.b32  	%r8804, %r8802, %r8803;
	shr.u32 	%r8805, %r8254, 3;
	xor.b32  	%r8806, %r8804, %r8805;
	add.s32 	%r8807, %r8806, %r8217;
	add.s32 	%r8808, %r8807, %r8550;
	add.s32 	%r8809, %r8808, %r8801;
	add.s32 	%r8810, %r8809, %r8674;
	xor.b32  	%r8811, %r8748, %r8711;
	and.b32  	%r8812, %r8785, %r8811;
	xor.b32  	%r8813, %r8812, %r8711;
	add.s32 	%r8814, %r8810, %r8813;
	shf.l.wrap.b32 	%r8815, %r8785, %r8785, 18;
	xor.b32  	%r8816, %r8815, %r8785;
	shf.l.wrap.b32 	%r8817, %r8816, %r8816, 27;
	xor.b32  	%r8818, %r8817, %r8785;
	shf.l.wrap.b32 	%r8819, %r8818, %r8818, 26;
	add.s32 	%r8820, %r8814, %r8819;
	add.s32 	%r8821, %r8820, -2117940946;
	add.s32 	%r8822, %r8821, %r8685;
	shf.l.wrap.b32 	%r8823, %r8796, %r8796, 23;
	xor.b32  	%r8824, %r8823, %r8796;
	shf.l.wrap.b32 	%r8825, %r8824, %r8824, 21;
	xor.b32  	%r8826, %r8825, %r8796;
	shf.l.wrap.b32 	%r8827, %r8826, %r8826, 30;
	and.b32  	%r8828, %r8796, %r8759;
	or.b32  	%r8829, %r8796, %r8759;
	and.b32  	%r8830, %r8829, %r8722;
	or.b32  	%r8831, %r8830, %r8828;
	add.s32 	%r8832, %r8827, %r8831;
	add.s32 	%r8833, %r8832, %r8821;
	shf.l.wrap.b32 	%r8834, %r8772, %r8772, 15;
	shf.l.wrap.b32 	%r8835, %r8772, %r8772, 13;
	xor.b32  	%r8836, %r8834, %r8835;
	shr.u32 	%r8837, %r8772, 10;
	xor.b32  	%r8838, %r8836, %r8837;
	shf.l.wrap.b32 	%r8839, %r8291, %r8291, 25;
	shf.l.wrap.b32 	%r8840, %r8291, %r8291, 14;
	xor.b32  	%r8841, %r8839, %r8840;
	shr.u32 	%r8842, %r8291, 3;
	xor.b32  	%r8843, %r8841, %r8842;
	add.s32 	%r8844, %r8843, %r8254;
	add.s32 	%r8845, %r8844, %r8587;
	add.s32 	%r8846, %r8845, %r8838;
	add.s32 	%r8847, %r8846, %r8711;
	xor.b32  	%r8848, %r8785, %r8748;
	and.b32  	%r8849, %r8822, %r8848;
	xor.b32  	%r8850, %r8849, %r8748;
	add.s32 	%r8851, %r8847, %r8850;
	shf.l.wrap.b32 	%r8852, %r8822, %r8822, 18;
	xor.b32  	%r8853, %r8852, %r8822;
	shf.l.wrap.b32 	%r8854, %r8853, %r8853, 27;
	xor.b32  	%r8855, %r8854, %r8822;
	shf.l.wrap.b32 	%r8856, %r8855, %r8855, 26;
	add.s32 	%r8857, %r8851, %r8856;
	add.s32 	%r8858, %r8857, -1838011259;
	add.s32 	%r8859, %r8858, %r8722;
	shf.l.wrap.b32 	%r8860, %r8833, %r8833, 23;
	xor.b32  	%r8861, %r8860, %r8833;
	shf.l.wrap.b32 	%r8862, %r8861, %r8861, 21;
	xor.b32  	%r8863, %r8862, %r8833;
	shf.l.wrap.b32 	%r8864, %r8863, %r8863, 30;
	and.b32  	%r8865, %r8833, %r8796;
	or.b32  	%r8866, %r8833, %r8796;
	and.b32  	%r8867, %r8866, %r8759;
	or.b32  	%r8868, %r8867, %r8865;
	add.s32 	%r8869, %r8864, %r8868;
	add.s32 	%r8870, %r8869, %r8858;
	shf.l.wrap.b32 	%r8871, %r8809, %r8809, 15;
	shf.l.wrap.b32 	%r8872, %r8809, %r8809, 13;
	xor.b32  	%r8873, %r8871, %r8872;
	shr.u32 	%r8874, %r8809, 10;
	xor.b32  	%r8875, %r8873, %r8874;
	shf.l.wrap.b32 	%r8876, %r8328, %r8328, 25;
	shf.l.wrap.b32 	%r8877, %r8328, %r8328, 14;
	xor.b32  	%r8878, %r8876, %r8877;
	shr.u32 	%r8879, %r8328, 3;
	xor.b32  	%r8880, %r8878, %r8879;
	add.s32 	%r8881, %r8880, %r8291;
	add.s32 	%r8882, %r8881, %r8624;
	add.s32 	%r8883, %r8882, %r8875;
	add.s32 	%r8884, %r8883, %r8748;
	xor.b32  	%r8885, %r8822, %r8785;
	and.b32  	%r8886, %r8859, %r8885;
	xor.b32  	%r8887, %r8886, %r8785;
	add.s32 	%r8888, %r8884, %r8887;
	shf.l.wrap.b32 	%r8889, %r8859, %r8859, 18;
	xor.b32  	%r8890, %r8889, %r8859;
	shf.l.wrap.b32 	%r8891, %r8890, %r8890, 27;
	xor.b32  	%r8892, %r8891, %r8859;
	shf.l.wrap.b32 	%r8893, %r8892, %r8892, 26;
	add.s32 	%r8894, %r8888, %r8893;
	add.s32 	%r8895, %r8894, -1564481375;
	add.s32 	%r8896, %r8895, %r8759;
	shf.l.wrap.b32 	%r8897, %r8870, %r8870, 23;
	xor.b32  	%r8898, %r8897, %r8870;
	shf.l.wrap.b32 	%r8899, %r8898, %r8898, 21;
	xor.b32  	%r8900, %r8899, %r8870;
	shf.l.wrap.b32 	%r8901, %r8900, %r8900, 30;
	and.b32  	%r8902, %r8870, %r8833;
	or.b32  	%r8903, %r8870, %r8833;
	and.b32  	%r8904, %r8903, %r8796;
	or.b32  	%r8905, %r8904, %r8902;
	add.s32 	%r8906, %r8901, %r8905;
	add.s32 	%r8907, %r8906, %r8895;
	shf.l.wrap.b32 	%r8908, %r8846, %r8846, 15;
	shf.l.wrap.b32 	%r8909, %r8846, %r8846, 13;
	xor.b32  	%r8910, %r8908, %r8909;
	shr.u32 	%r8911, %r8846, 10;
	xor.b32  	%r8912, %r8910, %r8911;
	shf.l.wrap.b32 	%r8913, %r8365, %r8365, 25;
	shf.l.wrap.b32 	%r8914, %r8365, %r8365, 14;
	xor.b32  	%r8915, %r8913, %r8914;
	shr.u32 	%r8916, %r8365, 3;
	xor.b32  	%r8917, %r8915, %r8916;
	add.s32 	%r8918, %r8917, %r8328;
	add.s32 	%r8919, %r8918, %r8661;
	add.s32 	%r8920, %r8919, %r8912;
	add.s32 	%r8921, %r8920, %r8785;
	xor.b32  	%r8922, %r8859, %r8822;
	and.b32  	%r8923, %r8896, %r8922;
	xor.b32  	%r8924, %r8923, %r8822;
	add.s32 	%r8925, %r8921, %r8924;
	shf.l.wrap.b32 	%r8926, %r8896, %r8896, 18;
	xor.b32  	%r8927, %r8926, %r8896;
	shf.l.wrap.b32 	%r8928, %r8927, %r8927, 27;
	xor.b32  	%r8929, %r8928, %r8896;
	shf.l.wrap.b32 	%r8930, %r8929, %r8929, 26;
	add.s32 	%r8931, %r8925, %r8930;
	add.s32 	%r8932, %r8931, -1474664885;
	add.s32 	%r8933, %r8932, %r8796;
	shf.l.wrap.b32 	%r8934, %r8907, %r8907, 23;
	xor.b32  	%r8935, %r8934, %r8907;
	shf.l.wrap.b32 	%r8936, %r8935, %r8935, 21;
	xor.b32  	%r8937, %r8936, %r8907;
	shf.l.wrap.b32 	%r8938, %r8937, %r8937, 30;
	and.b32  	%r8939, %r8907, %r8870;
	or.b32  	%r8940, %r8907, %r8870;
	and.b32  	%r8941, %r8940, %r8833;
	or.b32  	%r8942, %r8941, %r8939;
	add.s32 	%r8943, %r8938, %r8942;
	add.s32 	%r8944, %r8943, %r8932;
	shf.l.wrap.b32 	%r8945, %r8883, %r8883, 15;
	shf.l.wrap.b32 	%r8946, %r8883, %r8883, 13;
	xor.b32  	%r8947, %r8945, %r8946;
	shr.u32 	%r8948, %r8883, 10;
	xor.b32  	%r8949, %r8947, %r8948;
	shf.l.wrap.b32 	%r8950, %r8402, %r8402, 25;
	shf.l.wrap.b32 	%r8951, %r8402, %r8402, 14;
	xor.b32  	%r8952, %r8950, %r8951;
	shr.u32 	%r8953, %r8402, 3;
	xor.b32  	%r8954, %r8952, %r8953;
	add.s32 	%r8955, %r8954, %r8365;
	add.s32 	%r8956, %r8955, %r8698;
	add.s32 	%r8957, %r8956, %r8949;
	add.s32 	%r8958, %r8957, %r8822;
	xor.b32  	%r8959, %r8896, %r8859;
	and.b32  	%r8960, %r8933, %r8959;
	xor.b32  	%r8961, %r8960, %r8859;
	add.s32 	%r8962, %r8958, %r8961;
	shf.l.wrap.b32 	%r8963, %r8933, %r8933, 18;
	xor.b32  	%r8964, %r8963, %r8933;
	shf.l.wrap.b32 	%r8965, %r8964, %r8964, 27;
	xor.b32  	%r8966, %r8965, %r8933;
	shf.l.wrap.b32 	%r8967, %r8966, %r8966, 26;
	add.s32 	%r8968, %r8962, %r8967;
	add.s32 	%r8969, %r8968, -1035236496;
	add.s32 	%r8970, %r8969, %r8833;
	shf.l.wrap.b32 	%r8971, %r8944, %r8944, 23;
	xor.b32  	%r8972, %r8971, %r8944;
	shf.l.wrap.b32 	%r8973, %r8972, %r8972, 21;
	xor.b32  	%r8974, %r8973, %r8944;
	shf.l.wrap.b32 	%r8975, %r8974, %r8974, 30;
	and.b32  	%r8976, %r8944, %r8907;
	or.b32  	%r8977, %r8944, %r8907;
	and.b32  	%r8978, %r8977, %r8870;
	or.b32  	%r8979, %r8978, %r8976;
	add.s32 	%r8980, %r8975, %r8979;
	add.s32 	%r8981, %r8980, %r8969;
	shf.l.wrap.b32 	%r8982, %r8920, %r8920, 15;
	shf.l.wrap.b32 	%r8983, %r8920, %r8920, 13;
	xor.b32  	%r8984, %r8982, %r8983;
	shr.u32 	%r8985, %r8920, 10;
	xor.b32  	%r8986, %r8984, %r8985;
	shf.l.wrap.b32 	%r8987, %r8439, %r8439, 25;
	shf.l.wrap.b32 	%r8988, %r8439, %r8439, 14;
	xor.b32  	%r8989, %r8987, %r8988;
	shr.u32 	%r8990, %r8439, 3;
	xor.b32  	%r8991, %r8989, %r8990;
	add.s32 	%r8992, %r8991, %r8402;
	add.s32 	%r8993, %r8992, %r8735;
	add.s32 	%r8994, %r8993, %r8986;
	add.s32 	%r8995, %r8994, %r8859;
	xor.b32  	%r8996, %r8933, %r8896;
	and.b32  	%r8997, %r8970, %r8996;
	xor.b32  	%r8998, %r8997, %r8896;
	add.s32 	%r8999, %r8995, %r8998;
	shf.l.wrap.b32 	%r9000, %r8970, %r8970, 18;
	xor.b32  	%r9001, %r9000, %r8970;
	shf.l.wrap.b32 	%r9002, %r9001, %r9001, 27;
	xor.b32  	%r9003, %r9002, %r8970;
	shf.l.wrap.b32 	%r9004, %r9003, %r9003, 26;
	add.s32 	%r9005, %r8999, %r9004;
	add.s32 	%r9006, %r9005, -949202525;
	add.s32 	%r9007, %r9006, %r8870;
	shf.l.wrap.b32 	%r9008, %r8981, %r8981, 23;
	xor.b32  	%r9009, %r9008, %r8981;
	shf.l.wrap.b32 	%r9010, %r9009, %r9009, 21;
	xor.b32  	%r9011, %r9010, %r8981;
	shf.l.wrap.b32 	%r9012, %r9011, %r9011, 30;
	and.b32  	%r9013, %r8981, %r8944;
	or.b32  	%r9014, %r8981, %r8944;
	and.b32  	%r9015, %r9014, %r8907;
	or.b32  	%r9016, %r9015, %r9013;
	add.s32 	%r9017, %r9012, %r9016;
	add.s32 	%r9018, %r9017, %r9006;
	shf.l.wrap.b32 	%r9019, %r8957, %r8957, 15;
	shf.l.wrap.b32 	%r9020, %r8957, %r8957, 13;
	xor.b32  	%r9021, %r9019, %r9020;
	shr.u32 	%r9022, %r8957, 10;
	xor.b32  	%r9023, %r9021, %r9022;
	shf.l.wrap.b32 	%r9024, %r8476, %r8476, 25;
	shf.l.wrap.b32 	%r9025, %r8476, %r8476, 14;
	xor.b32  	%r9026, %r9024, %r9025;
	shr.u32 	%r9027, %r8476, 3;
	xor.b32  	%r9028, %r9026, %r9027;
	add.s32 	%r9029, %r9028, %r8439;
	add.s32 	%r9030, %r9029, %r8772;
	add.s32 	%r9031, %r9030, %r9023;
	add.s32 	%r9032, %r9031, %r8896;
	xor.b32  	%r9033, %r8970, %r8933;
	and.b32  	%r9034, %r9007, %r9033;
	xor.b32  	%r9035, %r9034, %r8933;
	add.s32 	%r9036, %r9032, %r9035;
	shf.l.wrap.b32 	%r9037, %r9007, %r9007, 18;
	xor.b32  	%r9038, %r9037, %r9007;
	shf.l.wrap.b32 	%r9039, %r9038, %r9038, 27;
	xor.b32  	%r9040, %r9039, %r9007;
	shf.l.wrap.b32 	%r9041, %r9040, %r9040, 26;
	add.s32 	%r9042, %r9036, %r9041;
	add.s32 	%r9043, %r9042, -778901479;
	add.s32 	%r9044, %r9043, %r8907;
	shf.l.wrap.b32 	%r9045, %r9018, %r9018, 23;
	xor.b32  	%r9046, %r9045, %r9018;
	shf.l.wrap.b32 	%r9047, %r9046, %r9046, 21;
	xor.b32  	%r9048, %r9047, %r9018;
	shf.l.wrap.b32 	%r9049, %r9048, %r9048, 30;
	and.b32  	%r9050, %r9018, %r8981;
	or.b32  	%r9051, %r9018, %r8981;
	and.b32  	%r9052, %r9051, %r8944;
	or.b32  	%r9053, %r9052, %r9050;
	add.s32 	%r9054, %r9049, %r9053;
	add.s32 	%r9055, %r9054, %r9043;
	shf.l.wrap.b32 	%r9056, %r8994, %r8994, 15;
	shf.l.wrap.b32 	%r9057, %r8994, %r8994, 13;
	xor.b32  	%r9058, %r9056, %r9057;
	shr.u32 	%r9059, %r8994, 10;
	xor.b32  	%r9060, %r9058, %r9059;
	shf.l.wrap.b32 	%r9061, %r8513, %r8513, 25;
	shf.l.wrap.b32 	%r9062, %r8513, %r8513, 14;
	xor.b32  	%r9063, %r9061, %r9062;
	shr.u32 	%r9064, %r8513, 3;
	xor.b32  	%r9065, %r9063, %r9064;
	add.s32 	%r9066, %r9065, %r8476;
	add.s32 	%r9067, %r9066, %r8809;
	add.s32 	%r9068, %r9067, %r9060;
	add.s32 	%r9069, %r9068, %r8933;
	xor.b32  	%r9070, %r9007, %r8970;
	and.b32  	%r9071, %r9044, %r9070;
	xor.b32  	%r9072, %r9071, %r8970;
	add.s32 	%r9073, %r9069, %r9072;
	shf.l.wrap.b32 	%r9074, %r9044, %r9044, 18;
	xor.b32  	%r9075, %r9074, %r9044;
	shf.l.wrap.b32 	%r9076, %r9075, %r9075, 27;
	xor.b32  	%r9077, %r9076, %r9044;
	shf.l.wrap.b32 	%r9078, %r9077, %r9077, 26;
	add.s32 	%r9079, %r9073, %r9078;
	add.s32 	%r9080, %r9079, -694614492;
	add.s32 	%r9081, %r9080, %r8944;
	shf.l.wrap.b32 	%r9082, %r9055, %r9055, 23;
	xor.b32  	%r9083, %r9082, %r9055;
	shf.l.wrap.b32 	%r9084, %r9083, %r9083, 21;
	xor.b32  	%r9085, %r9084, %r9055;
	shf.l.wrap.b32 	%r9086, %r9085, %r9085, 30;
	and.b32  	%r9087, %r9055, %r9018;
	or.b32  	%r9088, %r9055, %r9018;
	and.b32  	%r9089, %r9088, %r8981;
	or.b32  	%r9090, %r9089, %r9087;
	add.s32 	%r9091, %r9086, %r9090;
	add.s32 	%r9092, %r9091, %r9080;
	shf.l.wrap.b32 	%r9093, %r9031, %r9031, 15;
	shf.l.wrap.b32 	%r9094, %r9031, %r9031, 13;
	xor.b32  	%r9095, %r9093, %r9094;
	shr.u32 	%r9096, %r9031, 10;
	xor.b32  	%r9097, %r9095, %r9096;
	shf.l.wrap.b32 	%r9098, %r8550, %r8550, 25;
	shf.l.wrap.b32 	%r9099, %r8550, %r8550, 14;
	xor.b32  	%r9100, %r9098, %r9099;
	shr.u32 	%r9101, %r8550, 3;
	xor.b32  	%r9102, %r9100, %r9101;
	add.s32 	%r9103, %r9102, %r8513;
	add.s32 	%r9104, %r9103, %r8846;
	add.s32 	%r9105, %r9104, %r9097;
	add.s32 	%r9106, %r9105, %r8970;
	xor.b32  	%r9107, %r9044, %r9007;
	and.b32  	%r9108, %r9081, %r9107;
	xor.b32  	%r9109, %r9108, %r9007;
	add.s32 	%r9110, %r9106, %r9109;
	shf.l.wrap.b32 	%r9111, %r9081, %r9081, 18;
	xor.b32  	%r9112, %r9111, %r9081;
	shf.l.wrap.b32 	%r9113, %r9112, %r9112, 27;
	xor.b32  	%r9114, %r9113, %r9081;
	shf.l.wrap.b32 	%r9115, %r9114, %r9114, 26;
	add.s32 	%r9116, %r9110, %r9115;
	add.s32 	%r9117, %r9116, -200395387;
	add.s32 	%r9118, %r9117, %r8981;
	shf.l.wrap.b32 	%r9119, %r9092, %r9092, 23;
	xor.b32  	%r9120, %r9119, %r9092;
	shf.l.wrap.b32 	%r9121, %r9120, %r9120, 21;
	xor.b32  	%r9122, %r9121, %r9092;
	shf.l.wrap.b32 	%r9123, %r9122, %r9122, 30;
	and.b32  	%r9124, %r9092, %r9055;
	or.b32  	%r9125, %r9092, %r9055;
	and.b32  	%r9126, %r9125, %r9018;
	or.b32  	%r9127, %r9126, %r9124;
	add.s32 	%r9128, %r9123, %r9127;
	add.s32 	%r9129, %r9128, %r9117;
	shf.l.wrap.b32 	%r9130, %r9068, %r9068, 15;
	shf.l.wrap.b32 	%r9131, %r9068, %r9068, 13;
	xor.b32  	%r9132, %r9130, %r9131;
	shr.u32 	%r9133, %r9068, 10;
	xor.b32  	%r9134, %r9132, %r9133;
	shf.l.wrap.b32 	%r9135, %r8587, %r8587, 25;
	shf.l.wrap.b32 	%r9136, %r8587, %r8587, 14;
	xor.b32  	%r9137, %r9135, %r9136;
	shr.u32 	%r9138, %r8587, 3;
	xor.b32  	%r9139, %r9137, %r9138;
	add.s32 	%r9140, %r9139, %r8550;
	add.s32 	%r9141, %r9140, %r8883;
	add.s32 	%r9142, %r9141, %r9134;
	add.s32 	%r9143, %r9142, %r9007;
	xor.b32  	%r9144, %r9081, %r9044;
	and.b32  	%r9145, %r9118, %r9144;
	xor.b32  	%r9146, %r9145, %r9044;
	add.s32 	%r9147, %r9143, %r9146;
	shf.l.wrap.b32 	%r9148, %r9118, %r9118, 18;
	xor.b32  	%r9149, %r9148, %r9118;
	shf.l.wrap.b32 	%r9150, %r9149, %r9149, 27;
	xor.b32  	%r9151, %r9150, %r9118;
	shf.l.wrap.b32 	%r9152, %r9151, %r9151, 26;
	add.s32 	%r9153, %r9147, %r9152;
	add.s32 	%r9154, %r9153, 275423344;
	add.s32 	%r9155, %r9154, %r9018;
	shf.l.wrap.b32 	%r9156, %r9129, %r9129, 23;
	xor.b32  	%r9157, %r9156, %r9129;
	shf.l.wrap.b32 	%r9158, %r9157, %r9157, 21;
	xor.b32  	%r9159, %r9158, %r9129;
	shf.l.wrap.b32 	%r9160, %r9159, %r9159, 30;
	and.b32  	%r9161, %r9129, %r9092;
	or.b32  	%r9162, %r9129, %r9092;
	and.b32  	%r9163, %r9162, %r9055;
	or.b32  	%r9164, %r9163, %r9161;
	add.s32 	%r9165, %r9160, %r9164;
	add.s32 	%r9166, %r9165, %r9154;
	shf.l.wrap.b32 	%r9167, %r9105, %r9105, 15;
	shf.l.wrap.b32 	%r9168, %r9105, %r9105, 13;
	xor.b32  	%r9169, %r9167, %r9168;
	shr.u32 	%r9170, %r9105, 10;
	xor.b32  	%r9171, %r9169, %r9170;
	shf.l.wrap.b32 	%r9172, %r8624, %r8624, 25;
	shf.l.wrap.b32 	%r9173, %r8624, %r8624, 14;
	xor.b32  	%r9174, %r9172, %r9173;
	shr.u32 	%r9175, %r8624, 3;
	xor.b32  	%r9176, %r9174, %r9175;
	add.s32 	%r9177, %r9176, %r8587;
	add.s32 	%r9178, %r9177, %r8920;
	add.s32 	%r9179, %r9178, %r9171;
	add.s32 	%r9180, %r9179, %r9044;
	xor.b32  	%r9181, %r9118, %r9081;
	and.b32  	%r9182, %r9155, %r9181;
	xor.b32  	%r9183, %r9182, %r9081;
	add.s32 	%r9184, %r9180, %r9183;
	shf.l.wrap.b32 	%r9185, %r9155, %r9155, 18;
	xor.b32  	%r9186, %r9185, %r9155;
	shf.l.wrap.b32 	%r9187, %r9186, %r9186, 27;
	xor.b32  	%r9188, %r9187, %r9155;
	shf.l.wrap.b32 	%r9189, %r9188, %r9188, 26;
	add.s32 	%r9190, %r9184, %r9189;
	add.s32 	%r9191, %r9190, 430227734;
	add.s32 	%r9192, %r9191, %r9055;
	shf.l.wrap.b32 	%r9193, %r9166, %r9166, 23;
	xor.b32  	%r9194, %r9193, %r9166;
	shf.l.wrap.b32 	%r9195, %r9194, %r9194, 21;
	xor.b32  	%r9196, %r9195, %r9166;
	shf.l.wrap.b32 	%r9197, %r9196, %r9196, 30;
	and.b32  	%r9198, %r9166, %r9129;
	or.b32  	%r9199, %r9166, %r9129;
	and.b32  	%r9200, %r9199, %r9092;
	or.b32  	%r9201, %r9200, %r9198;
	add.s32 	%r9202, %r9197, %r9201;
	add.s32 	%r9203, %r9202, %r9191;
	shf.l.wrap.b32 	%r9204, %r9142, %r9142, 15;
	shf.l.wrap.b32 	%r9205, %r9142, %r9142, 13;
	xor.b32  	%r9206, %r9204, %r9205;
	shr.u32 	%r9207, %r9142, 10;
	xor.b32  	%r9208, %r9206, %r9207;
	shf.l.wrap.b32 	%r9209, %r8661, %r8661, 25;
	shf.l.wrap.b32 	%r9210, %r8661, %r8661, 14;
	xor.b32  	%r9211, %r9209, %r9210;
	shr.u32 	%r9212, %r8661, 3;
	xor.b32  	%r9213, %r9211, %r9212;
	add.s32 	%r9214, %r9213, %r8624;
	add.s32 	%r9215, %r9214, %r8957;
	add.s32 	%r9216, %r9215, %r9208;
	add.s32 	%r9217, %r9216, %r9081;
	xor.b32  	%r9218, %r9155, %r9118;
	and.b32  	%r9219, %r9192, %r9218;
	xor.b32  	%r9220, %r9219, %r9118;
	add.s32 	%r9221, %r9217, %r9220;
	shf.l.wrap.b32 	%r9222, %r9192, %r9192, 18;
	xor.b32  	%r9223, %r9222, %r9192;
	shf.l.wrap.b32 	%r9224, %r9223, %r9223, 27;
	xor.b32  	%r9225, %r9224, %r9192;
	shf.l.wrap.b32 	%r9226, %r9225, %r9225, 26;
	add.s32 	%r9227, %r9221, %r9226;
	add.s32 	%r9228, %r9227, 506948616;
	add.s32 	%r9229, %r9228, %r9092;
	shf.l.wrap.b32 	%r9230, %r9203, %r9203, 23;
	xor.b32  	%r9231, %r9230, %r9203;
	shf.l.wrap.b32 	%r9232, %r9231, %r9231, 21;
	xor.b32  	%r9233, %r9232, %r9203;
	shf.l.wrap.b32 	%r9234, %r9233, %r9233, 30;
	and.b32  	%r9235, %r9203, %r9166;
	or.b32  	%r9236, %r9203, %r9166;
	and.b32  	%r9237, %r9236, %r9129;
	or.b32  	%r9238, %r9237, %r9235;
	add.s32 	%r9239, %r9234, %r9238;
	add.s32 	%r9240, %r9239, %r9228;
	shf.l.wrap.b32 	%r9241, %r9179, %r9179, 15;
	shf.l.wrap.b32 	%r9242, %r9179, %r9179, 13;
	xor.b32  	%r9243, %r9241, %r9242;
	shr.u32 	%r9244, %r9179, 10;
	xor.b32  	%r9245, %r9243, %r9244;
	shf.l.wrap.b32 	%r9246, %r8698, %r8698, 25;
	shf.l.wrap.b32 	%r9247, %r8698, %r8698, 14;
	xor.b32  	%r9248, %r9246, %r9247;
	shr.u32 	%r9249, %r8698, 3;
	xor.b32  	%r9250, %r9248, %r9249;
	add.s32 	%r9251, %r9250, %r8661;
	add.s32 	%r9252, %r9251, %r8994;
	add.s32 	%r9253, %r9252, %r9245;
	add.s32 	%r9254, %r9253, %r9118;
	xor.b32  	%r9255, %r9192, %r9155;
	and.b32  	%r9256, %r9229, %r9255;
	xor.b32  	%r9257, %r9256, %r9155;
	add.s32 	%r9258, %r9254, %r9257;
	shf.l.wrap.b32 	%r9259, %r9229, %r9229, 18;
	xor.b32  	%r9260, %r9259, %r9229;
	shf.l.wrap.b32 	%r9261, %r9260, %r9260, 27;
	xor.b32  	%r9262, %r9261, %r9229;
	shf.l.wrap.b32 	%r9263, %r9262, %r9262, 26;
	add.s32 	%r9264, %r9258, %r9263;
	add.s32 	%r9265, %r9264, 659060556;
	add.s32 	%r9266, %r9265, %r9129;
	shf.l.wrap.b32 	%r9267, %r9240, %r9240, 23;
	xor.b32  	%r9268, %r9267, %r9240;
	shf.l.wrap.b32 	%r9269, %r9268, %r9268, 21;
	xor.b32  	%r9270, %r9269, %r9240;
	shf.l.wrap.b32 	%r9271, %r9270, %r9270, 30;
	and.b32  	%r9272, %r9240, %r9203;
	or.b32  	%r9273, %r9240, %r9203;
	and.b32  	%r9274, %r9273, %r9166;
	or.b32  	%r9275, %r9274, %r9272;
	add.s32 	%r9276, %r9271, %r9275;
	add.s32 	%r9277, %r9276, %r9265;
	shf.l.wrap.b32 	%r9278, %r9216, %r9216, 15;
	shf.l.wrap.b32 	%r9279, %r9216, %r9216, 13;
	xor.b32  	%r9280, %r9278, %r9279;
	shr.u32 	%r9281, %r9216, 10;
	xor.b32  	%r9282, %r9280, %r9281;
	shf.l.wrap.b32 	%r9283, %r8735, %r8735, 25;
	shf.l.wrap.b32 	%r9284, %r8735, %r8735, 14;
	xor.b32  	%r9285, %r9283, %r9284;
	shr.u32 	%r9286, %r8735, 3;
	xor.b32  	%r9287, %r9285, %r9286;
	add.s32 	%r9288, %r9287, %r8698;
	add.s32 	%r9289, %r9288, %r9031;
	add.s32 	%r9290, %r9289, %r9282;
	add.s32 	%r9291, %r9290, %r9155;
	xor.b32  	%r9292, %r9229, %r9192;
	and.b32  	%r9293, %r9266, %r9292;
	xor.b32  	%r9294, %r9293, %r9192;
	add.s32 	%r9295, %r9291, %r9294;
	shf.l.wrap.b32 	%r9296, %r9266, %r9266, 18;
	xor.b32  	%r9297, %r9296, %r9266;
	shf.l.wrap.b32 	%r9298, %r9297, %r9297, 27;
	xor.b32  	%r9299, %r9298, %r9266;
	shf.l.wrap.b32 	%r9300, %r9299, %r9299, 26;
	add.s32 	%r9301, %r9295, %r9300;
	add.s32 	%r9302, %r9301, 883997877;
	add.s32 	%r9303, %r9302, %r9166;
	shf.l.wrap.b32 	%r9304, %r9277, %r9277, 23;
	xor.b32  	%r9305, %r9304, %r9277;
	shf.l.wrap.b32 	%r9306, %r9305, %r9305, 21;
	xor.b32  	%r9307, %r9306, %r9277;
	shf.l.wrap.b32 	%r9308, %r9307, %r9307, 30;
	and.b32  	%r9309, %r9277, %r9240;
	or.b32  	%r9310, %r9277, %r9240;
	and.b32  	%r9311, %r9310, %r9203;
	or.b32  	%r9312, %r9311, %r9309;
	add.s32 	%r9313, %r9308, %r9312;
	add.s32 	%r9314, %r9313, %r9302;
	shf.l.wrap.b32 	%r9315, %r9253, %r9253, 15;
	shf.l.wrap.b32 	%r9316, %r9253, %r9253, 13;
	xor.b32  	%r9317, %r9315, %r9316;
	shr.u32 	%r9318, %r9253, 10;
	xor.b32  	%r9319, %r9317, %r9318;
	shf.l.wrap.b32 	%r9320, %r8772, %r8772, 25;
	shf.l.wrap.b32 	%r9321, %r8772, %r8772, 14;
	xor.b32  	%r9322, %r9320, %r9321;
	shr.u32 	%r9323, %r8772, 3;
	xor.b32  	%r9324, %r9322, %r9323;
	add.s32 	%r9325, %r9324, %r8735;
	add.s32 	%r9326, %r9325, %r9068;
	add.s32 	%r9327, %r9326, %r9319;
	add.s32 	%r9328, %r9327, %r9192;
	xor.b32  	%r9329, %r9266, %r9229;
	and.b32  	%r9330, %r9303, %r9329;
	xor.b32  	%r9331, %r9330, %r9229;
	add.s32 	%r9332, %r9328, %r9331;
	shf.l.wrap.b32 	%r9333, %r9303, %r9303, 18;
	xor.b32  	%r9334, %r9333, %r9303;
	shf.l.wrap.b32 	%r9335, %r9334, %r9334, 27;
	xor.b32  	%r9336, %r9335, %r9303;
	shf.l.wrap.b32 	%r9337, %r9336, %r9336, 26;
	add.s32 	%r9338, %r9332, %r9337;
	add.s32 	%r9339, %r9338, 958139571;
	add.s32 	%r9340, %r9339, %r9203;
	shf.l.wrap.b32 	%r9341, %r9314, %r9314, 23;
	xor.b32  	%r9342, %r9341, %r9314;
	shf.l.wrap.b32 	%r9343, %r9342, %r9342, 21;
	xor.b32  	%r9344, %r9343, %r9314;
	shf.l.wrap.b32 	%r9345, %r9344, %r9344, 30;
	and.b32  	%r9346, %r9314, %r9277;
	or.b32  	%r9347, %r9314, %r9277;
	and.b32  	%r9348, %r9347, %r9240;
	or.b32  	%r9349, %r9348, %r9346;
	add.s32 	%r9350, %r9345, %r9349;
	add.s32 	%r9351, %r9350, %r9339;
	shf.l.wrap.b32 	%r9352, %r9290, %r9290, 15;
	shf.l.wrap.b32 	%r9353, %r9290, %r9290, 13;
	xor.b32  	%r9354, %r9352, %r9353;
	shr.u32 	%r9355, %r9290, 10;
	xor.b32  	%r9356, %r9354, %r9355;
	shf.l.wrap.b32 	%r9357, %r8809, %r8809, 25;
	shf.l.wrap.b32 	%r9358, %r8809, %r8809, 14;
	xor.b32  	%r9359, %r9357, %r9358;
	shr.u32 	%r9360, %r8809, 3;
	xor.b32  	%r9361, %r9359, %r9360;
	add.s32 	%r9362, %r9361, %r8772;
	add.s32 	%r9363, %r9362, %r9105;
	add.s32 	%r9364, %r9363, %r9356;
	add.s32 	%r9365, %r9364, %r9229;
	xor.b32  	%r9366, %r9303, %r9266;
	and.b32  	%r9367, %r9340, %r9366;
	xor.b32  	%r9368, %r9367, %r9266;
	add.s32 	%r9369, %r9365, %r9368;
	shf.l.wrap.b32 	%r9370, %r9340, %r9340, 18;
	xor.b32  	%r9371, %r9370, %r9340;
	shf.l.wrap.b32 	%r9372, %r9371, %r9371, 27;
	xor.b32  	%r9373, %r9372, %r9340;
	shf.l.wrap.b32 	%r9374, %r9373, %r9373, 26;
	add.s32 	%r9375, %r9369, %r9374;
	add.s32 	%r9376, %r9375, 1322822218;
	add.s32 	%r9377, %r9376, %r9240;
	shf.l.wrap.b32 	%r9378, %r9351, %r9351, 23;
	xor.b32  	%r9379, %r9378, %r9351;
	shf.l.wrap.b32 	%r9380, %r9379, %r9379, 21;
	xor.b32  	%r9381, %r9380, %r9351;
	shf.l.wrap.b32 	%r9382, %r9381, %r9381, 30;
	and.b32  	%r9383, %r9351, %r9314;
	or.b32  	%r9384, %r9351, %r9314;
	and.b32  	%r9385, %r9384, %r9277;
	or.b32  	%r9386, %r9385, %r9383;
	add.s32 	%r9387, %r9382, %r9386;
	add.s32 	%r9388, %r9387, %r9376;
	shf.l.wrap.b32 	%r9389, %r9327, %r9327, 15;
	shf.l.wrap.b32 	%r9390, %r9327, %r9327, 13;
	xor.b32  	%r9391, %r9389, %r9390;
	shr.u32 	%r9392, %r9327, 10;
	xor.b32  	%r9393, %r9391, %r9392;
	shf.l.wrap.b32 	%r9394, %r8846, %r8846, 25;
	shf.l.wrap.b32 	%r9395, %r8846, %r8846, 14;
	xor.b32  	%r9396, %r9394, %r9395;
	shr.u32 	%r9397, %r8846, 3;
	xor.b32  	%r9398, %r9396, %r9397;
	add.s32 	%r9399, %r9398, %r8809;
	add.s32 	%r9400, %r9399, %r9142;
	add.s32 	%r9401, %r9400, %r9393;
	add.s32 	%r9402, %r9401, %r9266;
	xor.b32  	%r9403, %r9340, %r9303;
	and.b32  	%r9404, %r9377, %r9403;
	xor.b32  	%r9405, %r9404, %r9303;
	add.s32 	%r9406, %r9402, %r9405;
	shf.l.wrap.b32 	%r9407, %r9377, %r9377, 18;
	xor.b32  	%r9408, %r9407, %r9377;
	shf.l.wrap.b32 	%r9409, %r9408, %r9408, 27;
	xor.b32  	%r9410, %r9409, %r9377;
	shf.l.wrap.b32 	%r9411, %r9410, %r9410, 26;
	add.s32 	%r9412, %r9406, %r9411;
	add.s32 	%r9413, %r9412, 1537002063;
	add.s32 	%r9414, %r9413, %r9277;
	shf.l.wrap.b32 	%r9415, %r9388, %r9388, 23;
	xor.b32  	%r9416, %r9415, %r9388;
	shf.l.wrap.b32 	%r9417, %r9416, %r9416, 21;
	xor.b32  	%r9418, %r9417, %r9388;
	shf.l.wrap.b32 	%r9419, %r9418, %r9418, 30;
	and.b32  	%r9420, %r9388, %r9351;
	or.b32  	%r9421, %r9388, %r9351;
	and.b32  	%r9422, %r9421, %r9314;
	or.b32  	%r9423, %r9422, %r9420;
	add.s32 	%r9424, %r9419, %r9423;
	add.s32 	%r9425, %r9424, %r9413;
	shf.l.wrap.b32 	%r9426, %r9364, %r9364, 15;
	shf.l.wrap.b32 	%r9427, %r9364, %r9364, 13;
	xor.b32  	%r9428, %r9426, %r9427;
	shr.u32 	%r9429, %r9364, 10;
	xor.b32  	%r9430, %r9428, %r9429;
	shf.l.wrap.b32 	%r9431, %r8883, %r8883, 25;
	shf.l.wrap.b32 	%r9432, %r8883, %r8883, 14;
	xor.b32  	%r9433, %r9431, %r9432;
	shr.u32 	%r9434, %r8883, 3;
	xor.b32  	%r9435, %r9433, %r9434;
	add.s32 	%r9436, %r9435, %r8846;
	add.s32 	%r9437, %r9436, %r9179;
	add.s32 	%r9438, %r9437, %r9430;
	add.s32 	%r9439, %r9438, %r9303;
	xor.b32  	%r9440, %r9377, %r9340;
	and.b32  	%r9441, %r9414, %r9440;
	xor.b32  	%r9442, %r9441, %r9340;
	add.s32 	%r9443, %r9439, %r9442;
	shf.l.wrap.b32 	%r9444, %r9414, %r9414, 18;
	xor.b32  	%r9445, %r9444, %r9414;
	shf.l.wrap.b32 	%r9446, %r9445, %r9445, 27;
	xor.b32  	%r9447, %r9446, %r9414;
	shf.l.wrap.b32 	%r9448, %r9447, %r9447, 26;
	add.s32 	%r9449, %r9443, %r9448;
	add.s32 	%r9450, %r9449, 1747873779;
	add.s32 	%r9451, %r9450, %r9314;
	shf.l.wrap.b32 	%r9452, %r9425, %r9425, 23;
	xor.b32  	%r9453, %r9452, %r9425;
	shf.l.wrap.b32 	%r9454, %r9453, %r9453, 21;
	xor.b32  	%r9455, %r9454, %r9425;
	shf.l.wrap.b32 	%r9456, %r9455, %r9455, 30;
	and.b32  	%r9457, %r9425, %r9388;
	or.b32  	%r9458, %r9425, %r9388;
	and.b32  	%r9459, %r9458, %r9351;
	or.b32  	%r9460, %r9459, %r9457;
	add.s32 	%r9461, %r9456, %r9460;
	add.s32 	%r9462, %r9461, %r9450;
	shf.l.wrap.b32 	%r9463, %r9401, %r9401, 15;
	shf.l.wrap.b32 	%r9464, %r9401, %r9401, 13;
	xor.b32  	%r9465, %r9463, %r9464;
	shr.u32 	%r9466, %r9401, 10;
	xor.b32  	%r9467, %r9465, %r9466;
	shf.l.wrap.b32 	%r9468, %r8920, %r8920, 25;
	shf.l.wrap.b32 	%r9469, %r8920, %r8920, 14;
	xor.b32  	%r9470, %r9468, %r9469;
	shr.u32 	%r9471, %r8920, 3;
	xor.b32  	%r9472, %r9470, %r9471;
	add.s32 	%r9473, %r9472, %r8883;
	add.s32 	%r9474, %r9473, %r9216;
	add.s32 	%r9475, %r9474, %r9467;
	add.s32 	%r9476, %r9475, %r9340;
	xor.b32  	%r9477, %r9414, %r9377;
	and.b32  	%r9478, %r9451, %r9477;
	xor.b32  	%r9479, %r9478, %r9377;
	add.s32 	%r9480, %r9476, %r9479;
	shf.l.wrap.b32 	%r9481, %r9451, %r9451, 18;
	xor.b32  	%r9482, %r9481, %r9451;
	shf.l.wrap.b32 	%r9483, %r9482, %r9482, 27;
	xor.b32  	%r9484, %r9483, %r9451;
	shf.l.wrap.b32 	%r9485, %r9484, %r9484, 26;
	add.s32 	%r9486, %r9480, %r9485;
	add.s32 	%r9487, %r9486, 1955562222;
	add.s32 	%r9488, %r9487, %r9351;
	shf.l.wrap.b32 	%r9489, %r9462, %r9462, 23;
	xor.b32  	%r9490, %r9489, %r9462;
	shf.l.wrap.b32 	%r9491, %r9490, %r9490, 21;
	xor.b32  	%r9492, %r9491, %r9462;
	shf.l.wrap.b32 	%r9493, %r9492, %r9492, 30;
	and.b32  	%r9494, %r9462, %r9425;
	or.b32  	%r9495, %r9462, %r9425;
	and.b32  	%r9496, %r9495, %r9388;
	or.b32  	%r9497, %r9496, %r9494;
	add.s32 	%r9498, %r9493, %r9497;
	add.s32 	%r9499, %r9498, %r9487;
	shf.l.wrap.b32 	%r9500, %r9438, %r9438, 15;
	shf.l.wrap.b32 	%r9501, %r9438, %r9438, 13;
	xor.b32  	%r9502, %r9500, %r9501;
	shr.u32 	%r9503, %r9438, 10;
	xor.b32  	%r9504, %r9502, %r9503;
	shf.l.wrap.b32 	%r9505, %r8957, %r8957, 25;
	shf.l.wrap.b32 	%r9506, %r8957, %r8957, 14;
	xor.b32  	%r9507, %r9505, %r9506;
	shr.u32 	%r9508, %r8957, 3;
	xor.b32  	%r9509, %r9507, %r9508;
	add.s32 	%r9510, %r9509, %r8920;
	add.s32 	%r9511, %r9510, %r9253;
	add.s32 	%r9512, %r9511, %r9504;
	add.s32 	%r9513, %r9512, %r9377;
	xor.b32  	%r9514, %r9451, %r9414;
	and.b32  	%r9515, %r9488, %r9514;
	xor.b32  	%r9516, %r9515, %r9414;
	add.s32 	%r9517, %r9513, %r9516;
	shf.l.wrap.b32 	%r9518, %r9488, %r9488, 18;
	xor.b32  	%r9519, %r9518, %r9488;
	shf.l.wrap.b32 	%r9520, %r9519, %r9519, 27;
	xor.b32  	%r9521, %r9520, %r9488;
	shf.l.wrap.b32 	%r9522, %r9521, %r9521, 26;
	add.s32 	%r9523, %r9517, %r9522;
	add.s32 	%r9524, %r9523, 2024104815;
	add.s32 	%r9525, %r9524, %r9388;
	shf.l.wrap.b32 	%r9526, %r9499, %r9499, 23;
	xor.b32  	%r9527, %r9526, %r9499;
	shf.l.wrap.b32 	%r9528, %r9527, %r9527, 21;
	xor.b32  	%r9529, %r9528, %r9499;
	shf.l.wrap.b32 	%r9530, %r9529, %r9529, 30;
	and.b32  	%r9531, %r9499, %r9462;
	or.b32  	%r9532, %r9499, %r9462;
	and.b32  	%r9533, %r9532, %r9425;
	or.b32  	%r9534, %r9533, %r9531;
	add.s32 	%r9535, %r9530, %r9534;
	add.s32 	%r9536, %r9535, %r9524;
	shf.l.wrap.b32 	%r9537, %r9475, %r9475, 15;
	shf.l.wrap.b32 	%r9538, %r9475, %r9475, 13;
	xor.b32  	%r9539, %r9537, %r9538;
	shr.u32 	%r9540, %r9475, 10;
	xor.b32  	%r9541, %r9539, %r9540;
	shf.l.wrap.b32 	%r9542, %r8994, %r8994, 25;
	shf.l.wrap.b32 	%r9543, %r8994, %r8994, 14;
	xor.b32  	%r9544, %r9542, %r9543;
	shr.u32 	%r9545, %r8994, 3;
	xor.b32  	%r9546, %r9544, %r9545;
	add.s32 	%r9547, %r9546, %r8957;
	add.s32 	%r9548, %r9547, %r9290;
	add.s32 	%r9549, %r9548, %r9541;
	add.s32 	%r9550, %r9549, %r9414;
	xor.b32  	%r9551, %r9488, %r9451;
	and.b32  	%r9552, %r9525, %r9551;
	xor.b32  	%r9553, %r9552, %r9451;
	add.s32 	%r9554, %r9550, %r9553;
	shf.l.wrap.b32 	%r9555, %r9525, %r9525, 18;
	xor.b32  	%r9556, %r9555, %r9525;
	shf.l.wrap.b32 	%r9557, %r9556, %r9556, 27;
	xor.b32  	%r9558, %r9557, %r9525;
	shf.l.wrap.b32 	%r9559, %r9558, %r9558, 26;
	add.s32 	%r9560, %r9554, %r9559;
	add.s32 	%r9561, %r9560, -2067236844;
	add.s32 	%r9562, %r9561, %r9425;
	shf.l.wrap.b32 	%r9563, %r9536, %r9536, 23;
	xor.b32  	%r9564, %r9563, %r9536;
	shf.l.wrap.b32 	%r9565, %r9564, %r9564, 21;
	xor.b32  	%r9566, %r9565, %r9536;
	shf.l.wrap.b32 	%r9567, %r9566, %r9566, 30;
	and.b32  	%r9568, %r9536, %r9499;
	or.b32  	%r9569, %r9536, %r9499;
	and.b32  	%r9570, %r9569, %r9462;
	or.b32  	%r9571, %r9570, %r9568;
	add.s32 	%r9572, %r9567, %r9571;
	add.s32 	%r9573, %r9572, %r9561;
	shf.l.wrap.b32 	%r9574, %r9512, %r9512, 15;
	shf.l.wrap.b32 	%r9575, %r9512, %r9512, 13;
	xor.b32  	%r9576, %r9574, %r9575;
	shr.u32 	%r9577, %r9512, 10;
	xor.b32  	%r9578, %r9576, %r9577;
	shf.l.wrap.b32 	%r9579, %r9031, %r9031, 25;
	shf.l.wrap.b32 	%r9580, %r9031, %r9031, 14;
	xor.b32  	%r9581, %r9579, %r9580;
	shr.u32 	%r9582, %r9031, 3;
	xor.b32  	%r9583, %r9581, %r9582;
	add.s32 	%r9584, %r9583, %r8994;
	add.s32 	%r9585, %r9584, %r9327;
	add.s32 	%r9586, %r9585, %r9578;
	add.s32 	%r9587, %r9586, %r9451;
	xor.b32  	%r9588, %r9525, %r9488;
	and.b32  	%r9589, %r9562, %r9588;
	xor.b32  	%r9590, %r9589, %r9488;
	add.s32 	%r9591, %r9587, %r9590;
	shf.l.wrap.b32 	%r9592, %r9562, %r9562, 18;
	xor.b32  	%r9593, %r9592, %r9562;
	shf.l.wrap.b32 	%r9594, %r9593, %r9593, 27;
	xor.b32  	%r9595, %r9594, %r9562;
	shf.l.wrap.b32 	%r9596, %r9595, %r9595, 26;
	add.s32 	%r9597, %r9591, %r9596;
	add.s32 	%r9598, %r9597, -1933114872;
	add.s32 	%r9599, %r9598, %r9462;
	shf.l.wrap.b32 	%r9600, %r9573, %r9573, 23;
	xor.b32  	%r9601, %r9600, %r9573;
	shf.l.wrap.b32 	%r9602, %r9601, %r9601, 21;
	xor.b32  	%r9603, %r9602, %r9573;
	shf.l.wrap.b32 	%r9604, %r9603, %r9603, 30;
	and.b32  	%r9605, %r9573, %r9536;
	or.b32  	%r9606, %r9573, %r9536;
	and.b32  	%r9607, %r9606, %r9499;
	or.b32  	%r9608, %r9607, %r9605;
	add.s32 	%r9609, %r9604, %r9608;
	add.s32 	%r9610, %r9609, %r9598;
	shf.l.wrap.b32 	%r9611, %r9549, %r9549, 15;
	shf.l.wrap.b32 	%r9612, %r9549, %r9549, 13;
	xor.b32  	%r9613, %r9611, %r9612;
	shr.u32 	%r9614, %r9549, 10;
	xor.b32  	%r9615, %r9613, %r9614;
	shf.l.wrap.b32 	%r9616, %r9068, %r9068, 25;
	shf.l.wrap.b32 	%r9617, %r9068, %r9068, 14;
	xor.b32  	%r9618, %r9616, %r9617;
	shr.u32 	%r9619, %r9068, 3;
	xor.b32  	%r9620, %r9618, %r9619;
	add.s32 	%r9621, %r9620, %r9031;
	add.s32 	%r9622, %r9621, %r9364;
	add.s32 	%r9623, %r9622, %r9615;
	add.s32 	%r9624, %r9623, %r9488;
	xor.b32  	%r9625, %r9562, %r9525;
	and.b32  	%r9626, %r9599, %r9625;
	xor.b32  	%r9627, %r9626, %r9525;
	add.s32 	%r9628, %r9624, %r9627;
	shf.l.wrap.b32 	%r9629, %r9599, %r9599, 18;
	xor.b32  	%r9630, %r9629, %r9599;
	shf.l.wrap.b32 	%r9631, %r9630, %r9630, 27;
	xor.b32  	%r9632, %r9631, %r9599;
	shf.l.wrap.b32 	%r9633, %r9632, %r9632, 26;
	add.s32 	%r9634, %r9628, %r9633;
	add.s32 	%r9635, %r9634, -1866530822;
	add.s32 	%r9636, %r9635, %r9499;
	shf.l.wrap.b32 	%r9637, %r9610, %r9610, 23;
	xor.b32  	%r9638, %r9637, %r9610;
	shf.l.wrap.b32 	%r9639, %r9638, %r9638, 21;
	xor.b32  	%r9640, %r9639, %r9610;
	shf.l.wrap.b32 	%r9641, %r9640, %r9640, 30;
	and.b32  	%r9642, %r9610, %r9573;
	or.b32  	%r9643, %r9610, %r9573;
	and.b32  	%r9644, %r9643, %r9536;
	or.b32  	%r9645, %r9644, %r9642;
	add.s32 	%r9646, %r9641, %r9645;
	add.s32 	%r9647, %r9646, %r9635;
	shf.l.wrap.b32 	%r9648, %r9586, %r9586, 15;
	shf.l.wrap.b32 	%r9649, %r9586, %r9586, 13;
	xor.b32  	%r9650, %r9648, %r9649;
	shr.u32 	%r9651, %r9586, 10;
	xor.b32  	%r9652, %r9650, %r9651;
	shf.l.wrap.b32 	%r9653, %r9105, %r9105, 25;
	shf.l.wrap.b32 	%r9654, %r9105, %r9105, 14;
	xor.b32  	%r9655, %r9653, %r9654;
	shr.u32 	%r9656, %r9105, 3;
	xor.b32  	%r9657, %r9655, %r9656;
	add.s32 	%r9658, %r9657, %r9068;
	add.s32 	%r9659, %r9658, %r9401;
	add.s32 	%r9660, %r9659, %r9652;
	add.s32 	%r9661, %r9660, %r9525;
	xor.b32  	%r9662, %r9599, %r9562;
	and.b32  	%r9663, %r9636, %r9662;
	xor.b32  	%r9664, %r9663, %r9562;
	add.s32 	%r9665, %r9661, %r9664;
	shf.l.wrap.b32 	%r9666, %r9636, %r9636, 18;
	xor.b32  	%r9667, %r9666, %r9636;
	shf.l.wrap.b32 	%r9668, %r9667, %r9667, 27;
	xor.b32  	%r9669, %r9668, %r9636;
	shf.l.wrap.b32 	%r9670, %r9669, %r9669, 26;
	add.s32 	%r9671, %r9665, %r9670;
	add.s32 	%r9672, %r9671, -1538233109;
	add.s32 	%r9673, %r9672, %r9536;
	shf.l.wrap.b32 	%r9674, %r9647, %r9647, 23;
	xor.b32  	%r9675, %r9674, %r9647;
	shf.l.wrap.b32 	%r9676, %r9675, %r9675, 21;
	xor.b32  	%r9677, %r9676, %r9647;
	shf.l.wrap.b32 	%r9678, %r9677, %r9677, 30;
	and.b32  	%r9679, %r9647, %r9610;
	or.b32  	%r9680, %r9647, %r9610;
	and.b32  	%r9681, %r9680, %r9573;
	or.b32  	%r9682, %r9681, %r9679;
	add.s32 	%r9683, %r9678, %r9682;
	add.s32 	%r9684, %r9683, %r9672;
	shf.l.wrap.b32 	%r9685, %r9623, %r9623, 15;
	shf.l.wrap.b32 	%r9686, %r9623, %r9623, 13;
	xor.b32  	%r9687, %r9685, %r9686;
	shr.u32 	%r9688, %r9623, 10;
	xor.b32  	%r9689, %r9687, %r9688;
	shf.l.wrap.b32 	%r9690, %r9142, %r9142, 25;
	shf.l.wrap.b32 	%r9691, %r9142, %r9142, 14;
	xor.b32  	%r9692, %r9690, %r9691;
	shr.u32 	%r9693, %r9142, 3;
	xor.b32  	%r9694, %r9692, %r9693;
	shf.l.wrap.b32 	%r9695, %r9673, %r9673, 18;
	xor.b32  	%r9696, %r9695, %r9673;
	shf.l.wrap.b32 	%r9697, %r9696, %r9696, 27;
	xor.b32  	%r9698, %r9697, %r9673;
	shf.l.wrap.b32 	%r9699, %r9698, %r9698, 26;
	xor.b32  	%r9700, %r9636, %r9599;
	and.b32  	%r9701, %r9673, %r9700;
	xor.b32  	%r9702, %r9701, %r9599;
	add.s32 	%r9703, %r9105, %r9694;
	add.s32 	%r9704, %r9703, %r9438;
	add.s32 	%r9705, %r9704, %r9689;
	add.s32 	%r9706, %r9705, %r9562;
	add.s32 	%r9707, %r9706, %r9702;
	add.s32 	%r9708, %r9707, %r9699;
	add.s32 	%r9709, %r9708, -1090935817;
	add.s32 	%r9710, %r9709, %r9573;
	shf.l.wrap.b32 	%r9711, %r9684, %r9684, 23;
	xor.b32  	%r9712, %r9711, %r9684;
	shf.l.wrap.b32 	%r9713, %r9712, %r9712, 21;
	xor.b32  	%r9714, %r9713, %r9684;
	shf.l.wrap.b32 	%r9715, %r9714, %r9714, 30;
	and.b32  	%r9716, %r9684, %r9647;
	or.b32  	%r9717, %r9684, %r9647;
	and.b32  	%r9718, %r9717, %r9610;
	or.b32  	%r9719, %r9718, %r9716;
	add.s32 	%r9720, %r9715, %r9719;
	add.s32 	%r9721, %r9720, %r9709;
	shf.l.wrap.b32 	%r9722, %r9660, %r9660, 15;
	shf.l.wrap.b32 	%r9723, %r9660, %r9660, 13;
	xor.b32  	%r9724, %r9722, %r9723;
	shr.u32 	%r9725, %r9660, 10;
	xor.b32  	%r9726, %r9724, %r9725;
	shf.l.wrap.b32 	%r9727, %r9179, %r9179, 25;
	shf.l.wrap.b32 	%r9728, %r9179, %r9179, 14;
	xor.b32  	%r9729, %r9727, %r9728;
	shr.u32 	%r9730, %r9179, 3;
	xor.b32  	%r9731, %r9729, %r9730;
	shf.l.wrap.b32 	%r9732, %r9710, %r9710, 18;
	xor.b32  	%r9733, %r9732, %r9710;
	shf.l.wrap.b32 	%r9734, %r9733, %r9733, 27;
	xor.b32  	%r9735, %r9734, %r9710;
	shf.l.wrap.b32 	%r9736, %r9735, %r9735, 26;
	xor.b32  	%r9737, %r9673, %r9636;
	and.b32  	%r9738, %r9710, %r9737;
	xor.b32  	%r9739, %r9738, %r9636;
	add.s32 	%r9740, %r9142, %r9731;
	add.s32 	%r9741, %r9740, %r9475;
	add.s32 	%r9742, %r9741, %r9726;
	add.s32 	%r9743, %r9742, %r9599;
	add.s32 	%r9744, %r9743, %r9739;
	add.s32 	%r9745, %r9744, %r9736;
	add.s32 	%r9746, %r9745, -965641998;
	shf.l.wrap.b32 	%r9747, %r9721, %r9721, 23;
	xor.b32  	%r9748, %r9747, %r9721;
	shf.l.wrap.b32 	%r9749, %r9748, %r9748, 21;
	xor.b32  	%r9750, %r9749, %r9721;
	shf.l.wrap.b32 	%r9751, %r9750, %r9750, 30;
	and.b32  	%r9752, %r9721, %r9684;
	or.b32  	%r9753, %r9721, %r9684;
	and.b32  	%r9754, %r9753, %r9647;
	or.b32  	%r9755, %r9754, %r9752;
	add.s32 	%r9756, %r9755, %r7609;
	add.s32 	%r9757, %r9756, %r9751;
	add.s32 	%r9758, %r9757, %r9746;
	st.local.u32 	[%rd5+4], %r9758;
	add.s32 	%r9759, %r9721, %r7615;
	st.local.u32 	[%rd5+8], %r9759;
	add.s32 	%r9760, %r9684, %r7618;
	st.local.u32 	[%rd5+12], %r9760;
	add.s32 	%r9761, %r9647, %r7607;
	st.local.u32 	[%rd5+16], %r9761;
	add.s32 	%r9762, %r9610, %r7593;
	add.s32 	%r9763, %r9762, %r9746;
	st.local.u32 	[%rd5+20], %r9763;
	add.s32 	%r9764, %r9710, %r7601;
	st.local.u32 	[%rd5+24], %r9764;
	add.s32 	%r9765, %r9673, %r7600;
	st.local.u32 	[%rd5+28], %r9765;
	add.s32 	%r9766, %r9636, %r7591;
	st.local.u32 	[%rd5+32], %r9766;
	cvt.u64.u32 	%rd186, %r171;
	add.s64 	%rd273, %rd273, %rd186;
	add.u64 	%rd187, %SP, 16;
	add.s64 	%rd271, %rd187, %rd186;
	sub.s32 	%r17066, %r17066, %r171;
	mov.u32 	%r17047, 0;

$L__BB6_56:
	setp.lt.u32 	%p48, %r17066, 64;
	@%p48 bra 	$L__BB6_61;

$L__BB6_57:
	and.b64  	%rd188, %rd271, 3;
	setp.eq.s64 	%p49, %rd188, 0;
	@%p49 bra 	$L__BB6_59;

	ld.local.u8 	%r9767, [%rd273];
	shl.b32 	%r9768, %r9767, 24;
	ld.local.u8 	%r9769, [%rd273+1];
	shl.b32 	%r9770, %r9769, 16;
	or.b32  	%r9771, %r9770, %r9768;
	ld.local.u8 	%rs136, [%rd273+2];
	mul.wide.u16 	%r9772, %rs136, 256;
	or.b32  	%r9773, %r9771, %r9772;
	ld.local.u8 	%r9774, [%rd273+3];
	or.b32  	%r17065, %r9773, %r9774;
	ld.local.u8 	%r9775, [%rd273+4];
	shl.b32 	%r9776, %r9775, 24;
	ld.local.u8 	%r9777, [%rd273+5];
	shl.b32 	%r9778, %r9777, 16;
	or.b32  	%r9779, %r9778, %r9776;
	ld.local.u8 	%rs137, [%rd273+6];
	mul.wide.u16 	%r9780, %rs137, 256;
	or.b32  	%r9781, %r9779, %r9780;
	ld.local.u8 	%r9782, [%rd273+7];
	or.b32  	%r17064, %r9781, %r9782;
	ld.local.u8 	%r9783, [%rd273+8];
	shl.b32 	%r9784, %r9783, 24;
	ld.local.u8 	%r9785, [%rd273+9];
	shl.b32 	%r9786, %r9785, 16;
	or.b32  	%r9787, %r9786, %r9784;
	ld.local.u8 	%rs138, [%rd273+10];
	mul.wide.u16 	%r9788, %rs138, 256;
	or.b32  	%r9789, %r9787, %r9788;
	ld.local.u8 	%r9790, [%rd273+11];
	or.b32  	%r17063, %r9789, %r9790;
	ld.local.u8 	%r9791, [%rd273+12];
	shl.b32 	%r9792, %r9791, 24;
	ld.local.u8 	%r9793, [%rd273+13];
	shl.b32 	%r9794, %r9793, 16;
	or.b32  	%r9795, %r9794, %r9792;
	ld.local.u8 	%rs139, [%rd273+14];
	mul.wide.u16 	%r9796, %rs139, 256;
	or.b32  	%r9797, %r9795, %r9796;
	ld.local.u8 	%r9798, [%rd273+15];
	or.b32  	%r17062, %r9797, %r9798;
	ld.local.u8 	%r9799, [%rd273+16];
	shl.b32 	%r9800, %r9799, 24;
	ld.local.u8 	%r9801, [%rd273+17];
	shl.b32 	%r9802, %r9801, 16;
	or.b32  	%r9803, %r9802, %r9800;
	ld.local.u8 	%rs140, [%rd273+18];
	mul.wide.u16 	%r9804, %rs140, 256;
	or.b32  	%r9805, %r9803, %r9804;
	ld.local.u8 	%r9806, [%rd273+19];
	or.b32  	%r17061, %r9805, %r9806;
	ld.local.u8 	%r9807, [%rd273+20];
	shl.b32 	%r9808, %r9807, 24;
	ld.local.u8 	%r9809, [%rd273+21];
	shl.b32 	%r9810, %r9809, 16;
	or.b32  	%r9811, %r9810, %r9808;
	ld.local.u8 	%rs141, [%rd273+22];
	mul.wide.u16 	%r9812, %rs141, 256;
	or.b32  	%r9813, %r9811, %r9812;
	ld.local.u8 	%r9814, [%rd273+23];
	or.b32  	%r17060, %r9813, %r9814;
	ld.local.u8 	%r9815, [%rd273+24];
	shl.b32 	%r9816, %r9815, 24;
	ld.local.u8 	%r9817, [%rd273+25];
	shl.b32 	%r9818, %r9817, 16;
	or.b32  	%r9819, %r9818, %r9816;
	ld.local.u8 	%rs142, [%rd273+26];
	mul.wide.u16 	%r9820, %rs142, 256;
	or.b32  	%r9821, %r9819, %r9820;
	ld.local.u8 	%r9822, [%rd273+27];
	or.b32  	%r17059, %r9821, %r9822;
	ld.local.u8 	%r9823, [%rd273+28];
	shl.b32 	%r9824, %r9823, 24;
	ld.local.u8 	%r9825, [%rd273+29];
	shl.b32 	%r9826, %r9825, 16;
	or.b32  	%r9827, %r9826, %r9824;
	ld.local.u8 	%rs143, [%rd273+30];
	mul.wide.u16 	%r9828, %rs143, 256;
	or.b32  	%r9829, %r9827, %r9828;
	ld.local.u8 	%r9830, [%rd273+31];
	or.b32  	%r17058, %r9829, %r9830;
	ld.local.u8 	%r9831, [%rd273+32];
	shl.b32 	%r9832, %r9831, 24;
	ld.local.u8 	%r9833, [%rd273+33];
	shl.b32 	%r9834, %r9833, 16;
	or.b32  	%r9835, %r9834, %r9832;
	ld.local.u8 	%rs144, [%rd273+34];
	mul.wide.u16 	%r9836, %rs144, 256;
	or.b32  	%r9837, %r9835, %r9836;
	ld.local.u8 	%r9838, [%rd273+35];
	or.b32  	%r17057, %r9837, %r9838;
	ld.local.u8 	%r9839, [%rd273+36];
	shl.b32 	%r9840, %r9839, 24;
	ld.local.u8 	%r9841, [%rd273+37];
	shl.b32 	%r9842, %r9841, 16;
	or.b32  	%r9843, %r9842, %r9840;
	ld.local.u8 	%rs145, [%rd273+38];
	mul.wide.u16 	%r9844, %rs145, 256;
	or.b32  	%r9845, %r9843, %r9844;
	ld.local.u8 	%r9846, [%rd273+39];
	or.b32  	%r17056, %r9845, %r9846;
	ld.local.u8 	%r9847, [%rd273+40];
	shl.b32 	%r9848, %r9847, 24;
	ld.local.u8 	%r9849, [%rd273+41];
	shl.b32 	%r9850, %r9849, 16;
	or.b32  	%r9851, %r9850, %r9848;
	ld.local.u8 	%rs146, [%rd273+42];
	mul.wide.u16 	%r9852, %rs146, 256;
	or.b32  	%r9853, %r9851, %r9852;
	ld.local.u8 	%r9854, [%rd273+43];
	or.b32  	%r17055, %r9853, %r9854;
	ld.local.u8 	%r9855, [%rd273+44];
	shl.b32 	%r9856, %r9855, 24;
	ld.local.u8 	%r9857, [%rd273+45];
	shl.b32 	%r9858, %r9857, 16;
	or.b32  	%r9859, %r9858, %r9856;
	ld.local.u8 	%rs147, [%rd273+46];
	mul.wide.u16 	%r9860, %rs147, 256;
	or.b32  	%r9861, %r9859, %r9860;
	ld.local.u8 	%r9862, [%rd273+47];
	or.b32  	%r17054, %r9861, %r9862;
	ld.local.u8 	%r9863, [%rd273+48];
	shl.b32 	%r9864, %r9863, 24;
	ld.local.u8 	%r9865, [%rd273+49];
	shl.b32 	%r9866, %r9865, 16;
	or.b32  	%r9867, %r9866, %r9864;
	ld.local.u8 	%rs148, [%rd273+50];
	mul.wide.u16 	%r9868, %rs148, 256;
	or.b32  	%r9869, %r9867, %r9868;
	ld.local.u8 	%r9870, [%rd273+51];
	or.b32  	%r17053, %r9869, %r9870;
	ld.local.u8 	%r9871, [%rd273+52];
	shl.b32 	%r9872, %r9871, 24;
	ld.local.u8 	%r9873, [%rd273+53];
	shl.b32 	%r9874, %r9873, 16;
	or.b32  	%r9875, %r9874, %r9872;
	ld.local.u8 	%rs149, [%rd273+54];
	mul.wide.u16 	%r9876, %rs149, 256;
	or.b32  	%r9877, %r9875, %r9876;
	ld.local.u8 	%r9878, [%rd273+55];
	or.b32  	%r17052, %r9877, %r9878;
	ld.local.u8 	%r9879, [%rd273+56];
	shl.b32 	%r9880, %r9879, 24;
	ld.local.u8 	%r9881, [%rd273+57];
	shl.b32 	%r9882, %r9881, 16;
	or.b32  	%r9883, %r9882, %r9880;
	ld.local.u8 	%rs150, [%rd273+58];
	mul.wide.u16 	%r9884, %rs150, 256;
	or.b32  	%r9885, %r9883, %r9884;
	ld.local.u8 	%r9886, [%rd273+59];
	or.b32  	%r17051, %r9885, %r9886;
	ld.local.u8 	%r9887, [%rd273+60];
	shl.b32 	%r9888, %r9887, 24;
	ld.local.u8 	%r9889, [%rd273+61];
	shl.b32 	%r9890, %r9889, 16;
	or.b32  	%r9891, %r9890, %r9888;
	ld.local.u8 	%rs151, [%rd273+62];
	mul.wide.u16 	%r9892, %rs151, 256;
	or.b32  	%r9893, %r9891, %r9892;
	ld.local.u8 	%r9894, [%rd273+63];
	or.b32  	%r17050, %r9893, %r9894;
	bra.uni 	$L__BB6_60;

$L__BB6_59:
	ld.local.u32 	%r9895, [%rd273];
	shf.l.wrap.b32 	%r9896, %r9895, %r9895, 16;
	shl.b32 	%r9897, %r9896, 8;
	and.b32  	%r9898, %r9897, -16711936;
	shr.u32 	%r9899, %r9896, 8;
	and.b32  	%r9900, %r9899, 16711935;
	or.b32  	%r17065, %r9898, %r9900;
	ld.local.u32 	%r9901, [%rd273+4];
	shf.l.wrap.b32 	%r9902, %r9901, %r9901, 16;
	shl.b32 	%r9903, %r9902, 8;
	and.b32  	%r9904, %r9903, -16711936;
	shr.u32 	%r9905, %r9902, 8;
	and.b32  	%r9906, %r9905, 16711935;
	or.b32  	%r17064, %r9904, %r9906;
	ld.local.u32 	%r9907, [%rd273+8];
	shf.l.wrap.b32 	%r9908, %r9907, %r9907, 16;
	shl.b32 	%r9909, %r9908, 8;
	and.b32  	%r9910, %r9909, -16711936;
	shr.u32 	%r9911, %r9908, 8;
	and.b32  	%r9912, %r9911, 16711935;
	or.b32  	%r17063, %r9910, %r9912;
	ld.local.u32 	%r9913, [%rd273+12];
	shf.l.wrap.b32 	%r9914, %r9913, %r9913, 16;
	shl.b32 	%r9915, %r9914, 8;
	and.b32  	%r9916, %r9915, -16711936;
	shr.u32 	%r9917, %r9914, 8;
	and.b32  	%r9918, %r9917, 16711935;
	or.b32  	%r17062, %r9916, %r9918;
	ld.local.u32 	%r9919, [%rd273+16];
	shf.l.wrap.b32 	%r9920, %r9919, %r9919, 16;
	shl.b32 	%r9921, %r9920, 8;
	and.b32  	%r9922, %r9921, -16711936;
	shr.u32 	%r9923, %r9920, 8;
	and.b32  	%r9924, %r9923, 16711935;
	or.b32  	%r17061, %r9922, %r9924;
	ld.local.u32 	%r9925, [%rd273+20];
	shf.l.wrap.b32 	%r9926, %r9925, %r9925, 16;
	shl.b32 	%r9927, %r9926, 8;
	and.b32  	%r9928, %r9927, -16711936;
	shr.u32 	%r9929, %r9926, 8;
	and.b32  	%r9930, %r9929, 16711935;
	or.b32  	%r17060, %r9928, %r9930;
	ld.local.u32 	%r9931, [%rd273+24];
	shf.l.wrap.b32 	%r9932, %r9931, %r9931, 16;
	shl.b32 	%r9933, %r9932, 8;
	and.b32  	%r9934, %r9933, -16711936;
	shr.u32 	%r9935, %r9932, 8;
	and.b32  	%r9936, %r9935, 16711935;
	or.b32  	%r17059, %r9934, %r9936;
	ld.local.u32 	%r9937, [%rd273+28];
	shf.l.wrap.b32 	%r9938, %r9937, %r9937, 16;
	shl.b32 	%r9939, %r9938, 8;
	and.b32  	%r9940, %r9939, -16711936;
	shr.u32 	%r9941, %r9938, 8;
	and.b32  	%r9942, %r9941, 16711935;
	or.b32  	%r17058, %r9940, %r9942;
	ld.local.u32 	%r9943, [%rd273+32];
	shf.l.wrap.b32 	%r9944, %r9943, %r9943, 16;
	shl.b32 	%r9945, %r9944, 8;
	and.b32  	%r9946, %r9945, -16711936;
	shr.u32 	%r9947, %r9944, 8;
	and.b32  	%r9948, %r9947, 16711935;
	or.b32  	%r17057, %r9946, %r9948;
	ld.local.u32 	%r9949, [%rd273+36];
	shf.l.wrap.b32 	%r9950, %r9949, %r9949, 16;
	shl.b32 	%r9951, %r9950, 8;
	and.b32  	%r9952, %r9951, -16711936;
	shr.u32 	%r9953, %r9950, 8;
	and.b32  	%r9954, %r9953, 16711935;
	or.b32  	%r17056, %r9952, %r9954;
	ld.local.u32 	%r9955, [%rd273+40];
	shf.l.wrap.b32 	%r9956, %r9955, %r9955, 16;
	shl.b32 	%r9957, %r9956, 8;
	and.b32  	%r9958, %r9957, -16711936;
	shr.u32 	%r9959, %r9956, 8;
	and.b32  	%r9960, %r9959, 16711935;
	or.b32  	%r17055, %r9958, %r9960;
	ld.local.u32 	%r9961, [%rd273+44];
	shf.l.wrap.b32 	%r9962, %r9961, %r9961, 16;
	shl.b32 	%r9963, %r9962, 8;
	and.b32  	%r9964, %r9963, -16711936;
	shr.u32 	%r9965, %r9962, 8;
	and.b32  	%r9966, %r9965, 16711935;
	or.b32  	%r17054, %r9964, %r9966;
	ld.local.u32 	%r9967, [%rd273+48];
	shf.l.wrap.b32 	%r9968, %r9967, %r9967, 16;
	shl.b32 	%r9969, %r9968, 8;
	and.b32  	%r9970, %r9969, -16711936;
	shr.u32 	%r9971, %r9968, 8;
	and.b32  	%r9972, %r9971, 16711935;
	or.b32  	%r17053, %r9970, %r9972;
	ld.local.u32 	%r9973, [%rd273+52];
	shf.l.wrap.b32 	%r9974, %r9973, %r9973, 16;
	shl.b32 	%r9975, %r9974, 8;
	and.b32  	%r9976, %r9975, -16711936;
	shr.u32 	%r9977, %r9974, 8;
	and.b32  	%r9978, %r9977, 16711935;
	or.b32  	%r17052, %r9976, %r9978;
	ld.local.u32 	%r9979, [%rd273+56];
	shf.l.wrap.b32 	%r9980, %r9979, %r9979, 16;
	shl.b32 	%r9981, %r9980, 8;
	and.b32  	%r9982, %r9981, -16711936;
	shr.u32 	%r9983, %r9980, 8;
	and.b32  	%r9984, %r9983, 16711935;
	or.b32  	%r17051, %r9982, %r9984;
	ld.local.u32 	%r9985, [%rd273+60];
	shf.l.wrap.b32 	%r9986, %r9985, %r9985, 16;
	shl.b32 	%r9987, %r9986, 8;
	and.b32  	%r9988, %r9987, -16711936;
	shr.u32 	%r9989, %r9986, 8;
	and.b32  	%r9990, %r9989, 16711935;
	or.b32  	%r17050, %r9988, %r9990;

$L__BB6_60:
	ld.local.u32 	%r9991, [%rd5+32];
	add.s32 	%r9992, %r17065, %r9991;
	ld.local.u32 	%r9993, [%rd5+20];
	shf.l.wrap.b32 	%r9994, %r9993, %r9993, 18;
	xor.b32  	%r9995, %r9994, %r9993;
	shf.l.wrap.b32 	%r9996, %r9995, %r9995, 27;
	xor.b32  	%r9997, %r9996, %r9993;
	shf.l.wrap.b32 	%r9998, %r9997, %r9997, 26;
	add.s32 	%r9999, %r9992, %r9998;
	ld.local.u32 	%r10000, [%rd5+28];
	ld.local.u32 	%r10001, [%rd5+24];
	xor.b32  	%r10002, %r10000, %r10001;
	and.b32  	%r10003, %r10002, %r9993;
	xor.b32  	%r10004, %r10003, %r10000;
	add.s32 	%r10005, %r9999, %r10004;
	add.s32 	%r10006, %r10005, 1116352408;
	ld.local.u32 	%r10007, [%rd5+16];
	add.s32 	%r10008, %r10006, %r10007;
	ld.local.u32 	%r10009, [%rd5+4];
	shf.l.wrap.b32 	%r10010, %r10009, %r10009, 23;
	xor.b32  	%r10011, %r10010, %r10009;
	shf.l.wrap.b32 	%r10012, %r10011, %r10011, 21;
	xor.b32  	%r10013, %r10012, %r10009;
	shf.l.wrap.b32 	%r10014, %r10013, %r10013, 30;
	ld.local.u32 	%r10015, [%rd5+8];
	and.b32  	%r10016, %r10015, %r10009;
	or.b32  	%r10017, %r10015, %r10009;
	ld.local.u32 	%r10018, [%rd5+12];
	and.b32  	%r10019, %r10018, %r10017;
	or.b32  	%r10020, %r10019, %r10016;
	add.s32 	%r10021, %r10014, %r10020;
	add.s32 	%r10022, %r10021, %r10006;
	add.s32 	%r10023, %r17064, %r10000;
	xor.b32  	%r10024, %r10001, %r9993;
	and.b32  	%r10025, %r10008, %r10024;
	xor.b32  	%r10026, %r10025, %r10001;
	add.s32 	%r10027, %r10023, %r10026;
	shf.l.wrap.b32 	%r10028, %r10008, %r10008, 18;
	xor.b32  	%r10029, %r10028, %r10008;
	shf.l.wrap.b32 	%r10030, %r10029, %r10029, 27;
	xor.b32  	%r10031, %r10030, %r10008;
	shf.l.wrap.b32 	%r10032, %r10031, %r10031, 26;
	add.s32 	%r10033, %r10027, %r10032;
	add.s32 	%r10034, %r10033, 1899447441;
	add.s32 	%r10035, %r10034, %r10018;
	shf.l.wrap.b32 	%r10036, %r10022, %r10022, 23;
	xor.b32  	%r10037, %r10036, %r10022;
	shf.l.wrap.b32 	%r10038, %r10037, %r10037, 21;
	xor.b32  	%r10039, %r10038, %r10022;
	shf.l.wrap.b32 	%r10040, %r10039, %r10039, 30;
	and.b32  	%r10041, %r10022, %r10009;
	or.b32  	%r10042, %r10022, %r10009;
	and.b32  	%r10043, %r10042, %r10015;
	or.b32  	%r10044, %r10043, %r10041;
	add.s32 	%r10045, %r10040, %r10044;
	add.s32 	%r10046, %r10045, %r10034;
	add.s32 	%r10047, %r17063, %r10001;
	xor.b32  	%r10048, %r10008, %r9993;
	and.b32  	%r10049, %r10035, %r10048;
	xor.b32  	%r10050, %r10049, %r9993;
	add.s32 	%r10051, %r10047, %r10050;
	shf.l.wrap.b32 	%r10052, %r10035, %r10035, 18;
	xor.b32  	%r10053, %r10052, %r10035;
	shf.l.wrap.b32 	%r10054, %r10053, %r10053, 27;
	xor.b32  	%r10055, %r10054, %r10035;
	shf.l.wrap.b32 	%r10056, %r10055, %r10055, 26;
	add.s32 	%r10057, %r10051, %r10056;
	add.s32 	%r10058, %r10057, -1245643825;
	add.s32 	%r10059, %r10058, %r10015;
	shf.l.wrap.b32 	%r10060, %r10046, %r10046, 23;
	xor.b32  	%r10061, %r10060, %r10046;
	shf.l.wrap.b32 	%r10062, %r10061, %r10061, 21;
	xor.b32  	%r10063, %r10062, %r10046;
	shf.l.wrap.b32 	%r10064, %r10063, %r10063, 30;
	and.b32  	%r10065, %r10046, %r10022;
	or.b32  	%r10066, %r10046, %r10022;
	and.b32  	%r10067, %r10066, %r10009;
	or.b32  	%r10068, %r10067, %r10065;
	add.s32 	%r10069, %r10064, %r10068;
	add.s32 	%r10070, %r10069, %r10058;
	add.s32 	%r10071, %r17062, %r9993;
	xor.b32  	%r10072, %r10035, %r10008;
	and.b32  	%r10073, %r10059, %r10072;
	xor.b32  	%r10074, %r10073, %r10008;
	add.s32 	%r10075, %r10071, %r10074;
	shf.l.wrap.b32 	%r10076, %r10059, %r10059, 18;
	xor.b32  	%r10077, %r10076, %r10059;
	shf.l.wrap.b32 	%r10078, %r10077, %r10077, 27;
	xor.b32  	%r10079, %r10078, %r10059;
	shf.l.wrap.b32 	%r10080, %r10079, %r10079, 26;
	add.s32 	%r10081, %r10075, %r10080;
	add.s32 	%r10082, %r10081, -373957723;
	add.s32 	%r10083, %r10082, %r10009;
	shf.l.wrap.b32 	%r10084, %r10070, %r10070, 23;
	xor.b32  	%r10085, %r10084, %r10070;
	shf.l.wrap.b32 	%r10086, %r10085, %r10085, 21;
	xor.b32  	%r10087, %r10086, %r10070;
	shf.l.wrap.b32 	%r10088, %r10087, %r10087, 30;
	and.b32  	%r10089, %r10070, %r10046;
	or.b32  	%r10090, %r10070, %r10046;
	and.b32  	%r10091, %r10090, %r10022;
	or.b32  	%r10092, %r10091, %r10089;
	add.s32 	%r10093, %r10088, %r10092;
	add.s32 	%r10094, %r10093, %r10082;
	add.s32 	%r10095, %r17061, %r10008;
	xor.b32  	%r10096, %r10059, %r10035;
	and.b32  	%r10097, %r10083, %r10096;
	xor.b32  	%r10098, %r10097, %r10035;
	add.s32 	%r10099, %r10095, %r10098;
	shf.l.wrap.b32 	%r10100, %r10083, %r10083, 18;
	xor.b32  	%r10101, %r10100, %r10083;
	shf.l.wrap.b32 	%r10102, %r10101, %r10101, 27;
	xor.b32  	%r10103, %r10102, %r10083;
	shf.l.wrap.b32 	%r10104, %r10103, %r10103, 26;
	add.s32 	%r10105, %r10099, %r10104;
	add.s32 	%r10106, %r10105, 961987163;
	add.s32 	%r10107, %r10106, %r10022;
	shf.l.wrap.b32 	%r10108, %r10094, %r10094, 23;
	xor.b32  	%r10109, %r10108, %r10094;
	shf.l.wrap.b32 	%r10110, %r10109, %r10109, 21;
	xor.b32  	%r10111, %r10110, %r10094;
	shf.l.wrap.b32 	%r10112, %r10111, %r10111, 30;
	and.b32  	%r10113, %r10094, %r10070;
	or.b32  	%r10114, %r10094, %r10070;
	and.b32  	%r10115, %r10114, %r10046;
	or.b32  	%r10116, %r10115, %r10113;
	add.s32 	%r10117, %r10112, %r10116;
	add.s32 	%r10118, %r10117, %r10106;
	add.s32 	%r10119, %r17060, %r10035;
	xor.b32  	%r10120, %r10083, %r10059;
	and.b32  	%r10121, %r10107, %r10120;
	xor.b32  	%r10122, %r10121, %r10059;
	add.s32 	%r10123, %r10119, %r10122;
	shf.l.wrap.b32 	%r10124, %r10107, %r10107, 18;
	xor.b32  	%r10125, %r10124, %r10107;
	shf.l.wrap.b32 	%r10126, %r10125, %r10125, 27;
	xor.b32  	%r10127, %r10126, %r10107;
	shf.l.wrap.b32 	%r10128, %r10127, %r10127, 26;
	add.s32 	%r10129, %r10123, %r10128;
	add.s32 	%r10130, %r10129, 1508970993;
	add.s32 	%r10131, %r10130, %r10046;
	shf.l.wrap.b32 	%r10132, %r10118, %r10118, 23;
	xor.b32  	%r10133, %r10132, %r10118;
	shf.l.wrap.b32 	%r10134, %r10133, %r10133, 21;
	xor.b32  	%r10135, %r10134, %r10118;
	shf.l.wrap.b32 	%r10136, %r10135, %r10135, 30;
	and.b32  	%r10137, %r10118, %r10094;
	or.b32  	%r10138, %r10118, %r10094;
	and.b32  	%r10139, %r10138, %r10070;
	or.b32  	%r10140, %r10139, %r10137;
	add.s32 	%r10141, %r10136, %r10140;
	add.s32 	%r10142, %r10141, %r10130;
	add.s32 	%r10143, %r17059, %r10059;
	xor.b32  	%r10144, %r10107, %r10083;
	and.b32  	%r10145, %r10131, %r10144;
	xor.b32  	%r10146, %r10145, %r10083;
	add.s32 	%r10147, %r10143, %r10146;
	shf.l.wrap.b32 	%r10148, %r10131, %r10131, 18;
	xor.b32  	%r10149, %r10148, %r10131;
	shf.l.wrap.b32 	%r10150, %r10149, %r10149, 27;
	xor.b32  	%r10151, %r10150, %r10131;
	shf.l.wrap.b32 	%r10152, %r10151, %r10151, 26;
	add.s32 	%r10153, %r10147, %r10152;
	add.s32 	%r10154, %r10153, -1841331548;
	add.s32 	%r10155, %r10154, %r10070;
	shf.l.wrap.b32 	%r10156, %r10142, %r10142, 23;
	xor.b32  	%r10157, %r10156, %r10142;
	shf.l.wrap.b32 	%r10158, %r10157, %r10157, 21;
	xor.b32  	%r10159, %r10158, %r10142;
	shf.l.wrap.b32 	%r10160, %r10159, %r10159, 30;
	and.b32  	%r10161, %r10142, %r10118;
	or.b32  	%r10162, %r10142, %r10118;
	and.b32  	%r10163, %r10162, %r10094;
	or.b32  	%r10164, %r10163, %r10161;
	add.s32 	%r10165, %r10160, %r10164;
	add.s32 	%r10166, %r10165, %r10154;
	add.s32 	%r10167, %r17058, %r10083;
	xor.b32  	%r10168, %r10131, %r10107;
	and.b32  	%r10169, %r10155, %r10168;
	xor.b32  	%r10170, %r10169, %r10107;
	add.s32 	%r10171, %r10167, %r10170;
	shf.l.wrap.b32 	%r10172, %r10155, %r10155, 18;
	xor.b32  	%r10173, %r10172, %r10155;
	shf.l.wrap.b32 	%r10174, %r10173, %r10173, 27;
	xor.b32  	%r10175, %r10174, %r10155;
	shf.l.wrap.b32 	%r10176, %r10175, %r10175, 26;
	add.s32 	%r10177, %r10171, %r10176;
	add.s32 	%r10178, %r10177, -1424204075;
	add.s32 	%r10179, %r10178, %r10094;
	shf.l.wrap.b32 	%r10180, %r10166, %r10166, 23;
	xor.b32  	%r10181, %r10180, %r10166;
	shf.l.wrap.b32 	%r10182, %r10181, %r10181, 21;
	xor.b32  	%r10183, %r10182, %r10166;
	shf.l.wrap.b32 	%r10184, %r10183, %r10183, 30;
	and.b32  	%r10185, %r10166, %r10142;
	or.b32  	%r10186, %r10166, %r10142;
	and.b32  	%r10187, %r10186, %r10118;
	or.b32  	%r10188, %r10187, %r10185;
	add.s32 	%r10189, %r10184, %r10188;
	add.s32 	%r10190, %r10189, %r10178;
	add.s32 	%r10191, %r17057, %r10107;
	xor.b32  	%r10192, %r10155, %r10131;
	and.b32  	%r10193, %r10179, %r10192;
	xor.b32  	%r10194, %r10193, %r10131;
	add.s32 	%r10195, %r10191, %r10194;
	shf.l.wrap.b32 	%r10196, %r10179, %r10179, 18;
	xor.b32  	%r10197, %r10196, %r10179;
	shf.l.wrap.b32 	%r10198, %r10197, %r10197, 27;
	xor.b32  	%r10199, %r10198, %r10179;
	shf.l.wrap.b32 	%r10200, %r10199, %r10199, 26;
	add.s32 	%r10201, %r10195, %r10200;
	add.s32 	%r10202, %r10201, -670586216;
	add.s32 	%r10203, %r10202, %r10118;
	shf.l.wrap.b32 	%r10204, %r10190, %r10190, 23;
	xor.b32  	%r10205, %r10204, %r10190;
	shf.l.wrap.b32 	%r10206, %r10205, %r10205, 21;
	xor.b32  	%r10207, %r10206, %r10190;
	shf.l.wrap.b32 	%r10208, %r10207, %r10207, 30;
	and.b32  	%r10209, %r10190, %r10166;
	or.b32  	%r10210, %r10190, %r10166;
	and.b32  	%r10211, %r10210, %r10142;
	or.b32  	%r10212, %r10211, %r10209;
	add.s32 	%r10213, %r10208, %r10212;
	add.s32 	%r10214, %r10213, %r10202;
	add.s32 	%r10215, %r17056, %r10131;
	xor.b32  	%r10216, %r10179, %r10155;
	and.b32  	%r10217, %r10203, %r10216;
	xor.b32  	%r10218, %r10217, %r10155;
	add.s32 	%r10219, %r10215, %r10218;
	shf.l.wrap.b32 	%r10220, %r10203, %r10203, 18;
	xor.b32  	%r10221, %r10220, %r10203;
	shf.l.wrap.b32 	%r10222, %r10221, %r10221, 27;
	xor.b32  	%r10223, %r10222, %r10203;
	shf.l.wrap.b32 	%r10224, %r10223, %r10223, 26;
	add.s32 	%r10225, %r10219, %r10224;
	add.s32 	%r10226, %r10225, 310598401;
	add.s32 	%r10227, %r10226, %r10142;
	shf.l.wrap.b32 	%r10228, %r10214, %r10214, 23;
	xor.b32  	%r10229, %r10228, %r10214;
	shf.l.wrap.b32 	%r10230, %r10229, %r10229, 21;
	xor.b32  	%r10231, %r10230, %r10214;
	shf.l.wrap.b32 	%r10232, %r10231, %r10231, 30;
	and.b32  	%r10233, %r10214, %r10190;
	or.b32  	%r10234, %r10214, %r10190;
	and.b32  	%r10235, %r10234, %r10166;
	or.b32  	%r10236, %r10235, %r10233;
	add.s32 	%r10237, %r10232, %r10236;
	add.s32 	%r10238, %r10237, %r10226;
	add.s32 	%r10239, %r17055, %r10155;
	xor.b32  	%r10240, %r10203, %r10179;
	and.b32  	%r10241, %r10227, %r10240;
	xor.b32  	%r10242, %r10241, %r10179;
	add.s32 	%r10243, %r10239, %r10242;
	shf.l.wrap.b32 	%r10244, %r10227, %r10227, 18;
	xor.b32  	%r10245, %r10244, %r10227;
	shf.l.wrap.b32 	%r10246, %r10245, %r10245, 27;
	xor.b32  	%r10247, %r10246, %r10227;
	shf.l.wrap.b32 	%r10248, %r10247, %r10247, 26;
	add.s32 	%r10249, %r10243, %r10248;
	add.s32 	%r10250, %r10249, 607225278;
	add.s32 	%r10251, %r10250, %r10166;
	shf.l.wrap.b32 	%r10252, %r10238, %r10238, 23;
	xor.b32  	%r10253, %r10252, %r10238;
	shf.l.wrap.b32 	%r10254, %r10253, %r10253, 21;
	xor.b32  	%r10255, %r10254, %r10238;
	shf.l.wrap.b32 	%r10256, %r10255, %r10255, 30;
	and.b32  	%r10257, %r10238, %r10214;
	or.b32  	%r10258, %r10238, %r10214;
	and.b32  	%r10259, %r10258, %r10190;
	or.b32  	%r10260, %r10259, %r10257;
	add.s32 	%r10261, %r10256, %r10260;
	add.s32 	%r10262, %r10261, %r10250;
	add.s32 	%r10263, %r17054, %r10179;
	xor.b32  	%r10264, %r10227, %r10203;
	and.b32  	%r10265, %r10251, %r10264;
	xor.b32  	%r10266, %r10265, %r10203;
	add.s32 	%r10267, %r10263, %r10266;
	shf.l.wrap.b32 	%r10268, %r10251, %r10251, 18;
	xor.b32  	%r10269, %r10268, %r10251;
	shf.l.wrap.b32 	%r10270, %r10269, %r10269, 27;
	xor.b32  	%r10271, %r10270, %r10251;
	shf.l.wrap.b32 	%r10272, %r10271, %r10271, 26;
	add.s32 	%r10273, %r10267, %r10272;
	add.s32 	%r10274, %r10273, 1426881987;
	add.s32 	%r10275, %r10274, %r10190;
	shf.l.wrap.b32 	%r10276, %r10262, %r10262, 23;
	xor.b32  	%r10277, %r10276, %r10262;
	shf.l.wrap.b32 	%r10278, %r10277, %r10277, 21;
	xor.b32  	%r10279, %r10278, %r10262;
	shf.l.wrap.b32 	%r10280, %r10279, %r10279, 30;
	and.b32  	%r10281, %r10262, %r10238;
	or.b32  	%r10282, %r10262, %r10238;
	and.b32  	%r10283, %r10282, %r10214;
	or.b32  	%r10284, %r10283, %r10281;
	add.s32 	%r10285, %r10280, %r10284;
	add.s32 	%r10286, %r10285, %r10274;
	add.s32 	%r10287, %r17053, %r10203;
	xor.b32  	%r10288, %r10251, %r10227;
	and.b32  	%r10289, %r10275, %r10288;
	xor.b32  	%r10290, %r10289, %r10227;
	add.s32 	%r10291, %r10287, %r10290;
	shf.l.wrap.b32 	%r10292, %r10275, %r10275, 18;
	xor.b32  	%r10293, %r10292, %r10275;
	shf.l.wrap.b32 	%r10294, %r10293, %r10293, 27;
	xor.b32  	%r10295, %r10294, %r10275;
	shf.l.wrap.b32 	%r10296, %r10295, %r10295, 26;
	add.s32 	%r10297, %r10291, %r10296;
	add.s32 	%r10298, %r10297, 1925078388;
	add.s32 	%r10299, %r10298, %r10214;
	shf.l.wrap.b32 	%r10300, %r10286, %r10286, 23;
	xor.b32  	%r10301, %r10300, %r10286;
	shf.l.wrap.b32 	%r10302, %r10301, %r10301, 21;
	xor.b32  	%r10303, %r10302, %r10286;
	shf.l.wrap.b32 	%r10304, %r10303, %r10303, 30;
	and.b32  	%r10305, %r10286, %r10262;
	or.b32  	%r10306, %r10286, %r10262;
	and.b32  	%r10307, %r10306, %r10238;
	or.b32  	%r10308, %r10307, %r10305;
	add.s32 	%r10309, %r10304, %r10308;
	add.s32 	%r10310, %r10309, %r10298;
	add.s32 	%r10311, %r17052, %r10227;
	xor.b32  	%r10312, %r10275, %r10251;
	and.b32  	%r10313, %r10299, %r10312;
	xor.b32  	%r10314, %r10313, %r10251;
	add.s32 	%r10315, %r10311, %r10314;
	shf.l.wrap.b32 	%r10316, %r10299, %r10299, 18;
	xor.b32  	%r10317, %r10316, %r10299;
	shf.l.wrap.b32 	%r10318, %r10317, %r10317, 27;
	xor.b32  	%r10319, %r10318, %r10299;
	shf.l.wrap.b32 	%r10320, %r10319, %r10319, 26;
	add.s32 	%r10321, %r10315, %r10320;
	add.s32 	%r10322, %r10321, -2132889090;
	add.s32 	%r10323, %r10322, %r10238;
	shf.l.wrap.b32 	%r10324, %r10310, %r10310, 23;
	xor.b32  	%r10325, %r10324, %r10310;
	shf.l.wrap.b32 	%r10326, %r10325, %r10325, 21;
	xor.b32  	%r10327, %r10326, %r10310;
	shf.l.wrap.b32 	%r10328, %r10327, %r10327, 30;
	and.b32  	%r10329, %r10310, %r10286;
	or.b32  	%r10330, %r10310, %r10286;
	and.b32  	%r10331, %r10330, %r10262;
	or.b32  	%r10332, %r10331, %r10329;
	add.s32 	%r10333, %r10328, %r10332;
	add.s32 	%r10334, %r10333, %r10322;
	add.s32 	%r10335, %r17051, %r10251;
	xor.b32  	%r10336, %r10299, %r10275;
	and.b32  	%r10337, %r10323, %r10336;
	xor.b32  	%r10338, %r10337, %r10275;
	add.s32 	%r10339, %r10335, %r10338;
	shf.l.wrap.b32 	%r10340, %r10323, %r10323, 18;
	xor.b32  	%r10341, %r10340, %r10323;
	shf.l.wrap.b32 	%r10342, %r10341, %r10341, 27;
	xor.b32  	%r10343, %r10342, %r10323;
	shf.l.wrap.b32 	%r10344, %r10343, %r10343, 26;
	add.s32 	%r10345, %r10339, %r10344;
	add.s32 	%r10346, %r10345, -1680079193;
	add.s32 	%r10347, %r10346, %r10262;
	shf.l.wrap.b32 	%r10348, %r10334, %r10334, 23;
	xor.b32  	%r10349, %r10348, %r10334;
	shf.l.wrap.b32 	%r10350, %r10349, %r10349, 21;
	xor.b32  	%r10351, %r10350, %r10334;
	shf.l.wrap.b32 	%r10352, %r10351, %r10351, 30;
	and.b32  	%r10353, %r10334, %r10310;
	or.b32  	%r10354, %r10334, %r10310;
	and.b32  	%r10355, %r10354, %r10286;
	or.b32  	%r10356, %r10355, %r10353;
	add.s32 	%r10357, %r10352, %r10356;
	add.s32 	%r10358, %r10357, %r10346;
	add.s32 	%r10359, %r17050, %r10275;
	xor.b32  	%r10360, %r10323, %r10299;
	and.b32  	%r10361, %r10347, %r10360;
	xor.b32  	%r10362, %r10361, %r10299;
	add.s32 	%r10363, %r10359, %r10362;
	shf.l.wrap.b32 	%r10364, %r10347, %r10347, 18;
	xor.b32  	%r10365, %r10364, %r10347;
	shf.l.wrap.b32 	%r10366, %r10365, %r10365, 27;
	xor.b32  	%r10367, %r10366, %r10347;
	shf.l.wrap.b32 	%r10368, %r10367, %r10367, 26;
	add.s32 	%r10369, %r10363, %r10368;
	add.s32 	%r10370, %r10369, -1046744716;
	add.s32 	%r10371, %r10370, %r10286;
	shf.l.wrap.b32 	%r10372, %r10358, %r10358, 23;
	xor.b32  	%r10373, %r10372, %r10358;
	shf.l.wrap.b32 	%r10374, %r10373, %r10373, 21;
	xor.b32  	%r10375, %r10374, %r10358;
	shf.l.wrap.b32 	%r10376, %r10375, %r10375, 30;
	and.b32  	%r10377, %r10358, %r10334;
	or.b32  	%r10378, %r10358, %r10334;
	and.b32  	%r10379, %r10378, %r10310;
	or.b32  	%r10380, %r10379, %r10377;
	add.s32 	%r10381, %r10376, %r10380;
	add.s32 	%r10382, %r10381, %r10370;
	shf.l.wrap.b32 	%r10383, %r17051, %r17051, 13;
	shf.l.wrap.b32 	%r10384, %r17051, %r17051, 15;
	xor.b32  	%r10385, %r10384, %r10383;
	shr.u32 	%r10386, %r17051, 10;
	xor.b32  	%r10387, %r10385, %r10386;
	shf.l.wrap.b32 	%r10388, %r17064, %r17064, 14;
	shf.l.wrap.b32 	%r10389, %r17064, %r17064, 25;
	xor.b32  	%r10390, %r10389, %r10388;
	shr.u32 	%r10391, %r17064, 3;
	xor.b32  	%r10392, %r10390, %r10391;
	add.s32 	%r10393, %r17056, %r10387;
	add.s32 	%r10394, %r10393, %r17065;
	add.s32 	%r10395, %r10394, %r10392;
	add.s32 	%r10396, %r10395, %r10299;
	xor.b32  	%r10397, %r10347, %r10323;
	and.b32  	%r10398, %r10371, %r10397;
	xor.b32  	%r10399, %r10398, %r10323;
	add.s32 	%r10400, %r10396, %r10399;
	shf.l.wrap.b32 	%r10401, %r10371, %r10371, 18;
	xor.b32  	%r10402, %r10401, %r10371;
	shf.l.wrap.b32 	%r10403, %r10402, %r10402, 27;
	xor.b32  	%r10404, %r10403, %r10371;
	shf.l.wrap.b32 	%r10405, %r10404, %r10404, 26;
	add.s32 	%r10406, %r10400, %r10405;
	add.s32 	%r10407, %r10406, -459576895;
	add.s32 	%r10408, %r10407, %r10310;
	shf.l.wrap.b32 	%r10409, %r10382, %r10382, 23;
	xor.b32  	%r10410, %r10409, %r10382;
	shf.l.wrap.b32 	%r10411, %r10410, %r10410, 21;
	xor.b32  	%r10412, %r10411, %r10382;
	shf.l.wrap.b32 	%r10413, %r10412, %r10412, 30;
	and.b32  	%r10414, %r10382, %r10358;
	or.b32  	%r10415, %r10382, %r10358;
	and.b32  	%r10416, %r10415, %r10334;
	or.b32  	%r10417, %r10416, %r10414;
	add.s32 	%r10418, %r10413, %r10417;
	add.s32 	%r10419, %r10418, %r10407;
	shf.l.wrap.b32 	%r10420, %r17050, %r17050, 13;
	shf.l.wrap.b32 	%r10421, %r17050, %r17050, 15;
	xor.b32  	%r10422, %r10421, %r10420;
	shr.u32 	%r10423, %r17050, 10;
	xor.b32  	%r10424, %r10422, %r10423;
	shf.l.wrap.b32 	%r10425, %r17063, %r17063, 14;
	shf.l.wrap.b32 	%r10426, %r17063, %r17063, 25;
	xor.b32  	%r10427, %r10426, %r10425;
	shr.u32 	%r10428, %r17063, 3;
	xor.b32  	%r10429, %r10427, %r10428;
	add.s32 	%r10430, %r17055, %r10424;
	add.s32 	%r10431, %r10430, %r17064;
	add.s32 	%r10432, %r10431, %r10429;
	add.s32 	%r10433, %r10432, %r10323;
	xor.b32  	%r10434, %r10371, %r10347;
	and.b32  	%r10435, %r10408, %r10434;
	xor.b32  	%r10436, %r10435, %r10347;
	add.s32 	%r10437, %r10433, %r10436;
	shf.l.wrap.b32 	%r10438, %r10408, %r10408, 18;
	xor.b32  	%r10439, %r10438, %r10408;
	shf.l.wrap.b32 	%r10440, %r10439, %r10439, 27;
	xor.b32  	%r10441, %r10440, %r10408;
	shf.l.wrap.b32 	%r10442, %r10441, %r10441, 26;
	add.s32 	%r10443, %r10437, %r10442;
	add.s32 	%r10444, %r10443, -272742522;
	add.s32 	%r10445, %r10444, %r10334;
	shf.l.wrap.b32 	%r10446, %r10419, %r10419, 23;
	xor.b32  	%r10447, %r10446, %r10419;
	shf.l.wrap.b32 	%r10448, %r10447, %r10447, 21;
	xor.b32  	%r10449, %r10448, %r10419;
	shf.l.wrap.b32 	%r10450, %r10449, %r10449, 30;
	and.b32  	%r10451, %r10419, %r10382;
	or.b32  	%r10452, %r10419, %r10382;
	and.b32  	%r10453, %r10452, %r10358;
	or.b32  	%r10454, %r10453, %r10451;
	add.s32 	%r10455, %r10450, %r10454;
	add.s32 	%r10456, %r10455, %r10444;
	shf.l.wrap.b32 	%r10457, %r10395, %r10395, 15;
	shf.l.wrap.b32 	%r10458, %r10395, %r10395, 13;
	xor.b32  	%r10459, %r10457, %r10458;
	shr.u32 	%r10460, %r10395, 10;
	xor.b32  	%r10461, %r10459, %r10460;
	shf.l.wrap.b32 	%r10462, %r17062, %r17062, 14;
	shf.l.wrap.b32 	%r10463, %r17062, %r17062, 25;
	xor.b32  	%r10464, %r10463, %r10462;
	shr.u32 	%r10465, %r17062, 3;
	xor.b32  	%r10466, %r10464, %r10465;
	add.s32 	%r10467, %r17063, %r17054;
	add.s32 	%r10468, %r10467, %r10466;
	add.s32 	%r10469, %r10468, %r10461;
	add.s32 	%r10470, %r10469, %r10347;
	xor.b32  	%r10471, %r10408, %r10371;
	and.b32  	%r10472, %r10445, %r10471;
	xor.b32  	%r10473, %r10472, %r10371;
	add.s32 	%r10474, %r10470, %r10473;
	shf.l.wrap.b32 	%r10475, %r10445, %r10445, 18;
	xor.b32  	%r10476, %r10475, %r10445;
	shf.l.wrap.b32 	%r10477, %r10476, %r10476, 27;
	xor.b32  	%r10478, %r10477, %r10445;
	shf.l.wrap.b32 	%r10479, %r10478, %r10478, 26;
	add.s32 	%r10480, %r10474, %r10479;
	add.s32 	%r10481, %r10480, 264347078;
	add.s32 	%r10482, %r10481, %r10358;
	shf.l.wrap.b32 	%r10483, %r10456, %r10456, 23;
	xor.b32  	%r10484, %r10483, %r10456;
	shf.l.wrap.b32 	%r10485, %r10484, %r10484, 21;
	xor.b32  	%r10486, %r10485, %r10456;
	shf.l.wrap.b32 	%r10487, %r10486, %r10486, 30;
	and.b32  	%r10488, %r10456, %r10419;
	or.b32  	%r10489, %r10456, %r10419;
	and.b32  	%r10490, %r10489, %r10382;
	or.b32  	%r10491, %r10490, %r10488;
	add.s32 	%r10492, %r10487, %r10491;
	add.s32 	%r10493, %r10492, %r10481;
	shf.l.wrap.b32 	%r10494, %r10432, %r10432, 15;
	shf.l.wrap.b32 	%r10495, %r10432, %r10432, 13;
	xor.b32  	%r10496, %r10494, %r10495;
	shr.u32 	%r10497, %r10432, 10;
	xor.b32  	%r10498, %r10496, %r10497;
	shf.l.wrap.b32 	%r10499, %r17061, %r17061, 14;
	shf.l.wrap.b32 	%r10500, %r17061, %r17061, 25;
	xor.b32  	%r10501, %r10500, %r10499;
	shr.u32 	%r10502, %r17061, 3;
	xor.b32  	%r10503, %r10501, %r10502;
	add.s32 	%r10504, %r17062, %r17053;
	add.s32 	%r10505, %r10504, %r10503;
	add.s32 	%r10506, %r10505, %r10498;
	add.s32 	%r10507, %r10506, %r10371;
	xor.b32  	%r10508, %r10445, %r10408;
	and.b32  	%r10509, %r10482, %r10508;
	xor.b32  	%r10510, %r10509, %r10408;
	add.s32 	%r10511, %r10507, %r10510;
	shf.l.wrap.b32 	%r10512, %r10482, %r10482, 18;
	xor.b32  	%r10513, %r10512, %r10482;
	shf.l.wrap.b32 	%r10514, %r10513, %r10513, 27;
	xor.b32  	%r10515, %r10514, %r10482;
	shf.l.wrap.b32 	%r10516, %r10515, %r10515, 26;
	add.s32 	%r10517, %r10511, %r10516;
	add.s32 	%r10518, %r10517, 604807628;
	add.s32 	%r10519, %r10518, %r10382;
	shf.l.wrap.b32 	%r10520, %r10493, %r10493, 23;
	xor.b32  	%r10521, %r10520, %r10493;
	shf.l.wrap.b32 	%r10522, %r10521, %r10521, 21;
	xor.b32  	%r10523, %r10522, %r10493;
	shf.l.wrap.b32 	%r10524, %r10523, %r10523, 30;
	and.b32  	%r10525, %r10493, %r10456;
	or.b32  	%r10526, %r10493, %r10456;
	and.b32  	%r10527, %r10526, %r10419;
	or.b32  	%r10528, %r10527, %r10525;
	add.s32 	%r10529, %r10524, %r10528;
	add.s32 	%r10530, %r10529, %r10518;
	shf.l.wrap.b32 	%r10531, %r10469, %r10469, 15;
	shf.l.wrap.b32 	%r10532, %r10469, %r10469, 13;
	xor.b32  	%r10533, %r10531, %r10532;
	shr.u32 	%r10534, %r10469, 10;
	xor.b32  	%r10535, %r10533, %r10534;
	shf.l.wrap.b32 	%r10536, %r17060, %r17060, 14;
	shf.l.wrap.b32 	%r10537, %r17060, %r17060, 25;
	xor.b32  	%r10538, %r10537, %r10536;
	shr.u32 	%r10539, %r17060, 3;
	xor.b32  	%r10540, %r10538, %r10539;
	add.s32 	%r10541, %r17061, %r17052;
	add.s32 	%r10542, %r10541, %r10540;
	add.s32 	%r10543, %r10542, %r10535;
	add.s32 	%r10544, %r10543, %r10408;
	xor.b32  	%r10545, %r10482, %r10445;
	and.b32  	%r10546, %r10519, %r10545;
	xor.b32  	%r10547, %r10546, %r10445;
	add.s32 	%r10548, %r10544, %r10547;
	shf.l.wrap.b32 	%r10549, %r10519, %r10519, 18;
	xor.b32  	%r10550, %r10549, %r10519;
	shf.l.wrap.b32 	%r10551, %r10550, %r10550, 27;
	xor.b32  	%r10552, %r10551, %r10519;
	shf.l.wrap.b32 	%r10553, %r10552, %r10552, 26;
	add.s32 	%r10554, %r10548, %r10553;
	add.s32 	%r10555, %r10554, 770255983;
	add.s32 	%r10556, %r10555, %r10419;
	shf.l.wrap.b32 	%r10557, %r10530, %r10530, 23;
	xor.b32  	%r10558, %r10557, %r10530;
	shf.l.wrap.b32 	%r10559, %r10558, %r10558, 21;
	xor.b32  	%r10560, %r10559, %r10530;
	shf.l.wrap.b32 	%r10561, %r10560, %r10560, 30;
	and.b32  	%r10562, %r10530, %r10493;
	or.b32  	%r10563, %r10530, %r10493;
	and.b32  	%r10564, %r10563, %r10456;
	or.b32  	%r10565, %r10564, %r10562;
	add.s32 	%r10566, %r10561, %r10565;
	add.s32 	%r10567, %r10566, %r10555;
	shf.l.wrap.b32 	%r10568, %r10506, %r10506, 15;
	shf.l.wrap.b32 	%r10569, %r10506, %r10506, 13;
	xor.b32  	%r10570, %r10568, %r10569;
	shr.u32 	%r10571, %r10506, 10;
	xor.b32  	%r10572, %r10570, %r10571;
	shf.l.wrap.b32 	%r10573, %r17059, %r17059, 14;
	shf.l.wrap.b32 	%r10574, %r17059, %r17059, 25;
	xor.b32  	%r10575, %r10574, %r10573;
	shr.u32 	%r10576, %r17059, 3;
	xor.b32  	%r10577, %r10575, %r10576;
	add.s32 	%r10578, %r17060, %r17051;
	add.s32 	%r10579, %r10578, %r10577;
	add.s32 	%r10580, %r10579, %r10572;
	add.s32 	%r10581, %r10580, %r10445;
	xor.b32  	%r10582, %r10519, %r10482;
	and.b32  	%r10583, %r10556, %r10582;
	xor.b32  	%r10584, %r10583, %r10482;
	add.s32 	%r10585, %r10581, %r10584;
	shf.l.wrap.b32 	%r10586, %r10556, %r10556, 18;
	xor.b32  	%r10587, %r10586, %r10556;
	shf.l.wrap.b32 	%r10588, %r10587, %r10587, 27;
	xor.b32  	%r10589, %r10588, %r10556;
	shf.l.wrap.b32 	%r10590, %r10589, %r10589, 26;
	add.s32 	%r10591, %r10585, %r10590;
	add.s32 	%r10592, %r10591, 1249150122;
	add.s32 	%r10593, %r10592, %r10456;
	shf.l.wrap.b32 	%r10594, %r10567, %r10567, 23;
	xor.b32  	%r10595, %r10594, %r10567;
	shf.l.wrap.b32 	%r10596, %r10595, %r10595, 21;
	xor.b32  	%r10597, %r10596, %r10567;
	shf.l.wrap.b32 	%r10598, %r10597, %r10597, 30;
	and.b32  	%r10599, %r10567, %r10530;
	or.b32  	%r10600, %r10567, %r10530;
	and.b32  	%r10601, %r10600, %r10493;
	or.b32  	%r10602, %r10601, %r10599;
	add.s32 	%r10603, %r10598, %r10602;
	add.s32 	%r10604, %r10603, %r10592;
	shf.l.wrap.b32 	%r10605, %r10543, %r10543, 15;
	shf.l.wrap.b32 	%r10606, %r10543, %r10543, 13;
	xor.b32  	%r10607, %r10605, %r10606;
	shr.u32 	%r10608, %r10543, 10;
	xor.b32  	%r10609, %r10607, %r10608;
	shf.l.wrap.b32 	%r10610, %r17058, %r17058, 14;
	shf.l.wrap.b32 	%r10611, %r17058, %r17058, 25;
	xor.b32  	%r10612, %r10611, %r10610;
	shr.u32 	%r10613, %r17058, 3;
	xor.b32  	%r10614, %r10612, %r10613;
	add.s32 	%r10615, %r17059, %r17050;
	add.s32 	%r10616, %r10615, %r10614;
	add.s32 	%r10617, %r10616, %r10609;
	add.s32 	%r10618, %r10617, %r10482;
	xor.b32  	%r10619, %r10556, %r10519;
	and.b32  	%r10620, %r10593, %r10619;
	xor.b32  	%r10621, %r10620, %r10519;
	add.s32 	%r10622, %r10618, %r10621;
	shf.l.wrap.b32 	%r10623, %r10593, %r10593, 18;
	xor.b32  	%r10624, %r10623, %r10593;
	shf.l.wrap.b32 	%r10625, %r10624, %r10624, 27;
	xor.b32  	%r10626, %r10625, %r10593;
	shf.l.wrap.b32 	%r10627, %r10626, %r10626, 26;
	add.s32 	%r10628, %r10622, %r10627;
	add.s32 	%r10629, %r10628, 1555081692;
	add.s32 	%r10630, %r10629, %r10493;
	shf.l.wrap.b32 	%r10631, %r10604, %r10604, 23;
	xor.b32  	%r10632, %r10631, %r10604;
	shf.l.wrap.b32 	%r10633, %r10632, %r10632, 21;
	xor.b32  	%r10634, %r10633, %r10604;
	shf.l.wrap.b32 	%r10635, %r10634, %r10634, 30;
	and.b32  	%r10636, %r10604, %r10567;
	or.b32  	%r10637, %r10604, %r10567;
	and.b32  	%r10638, %r10637, %r10530;
	or.b32  	%r10639, %r10638, %r10636;
	add.s32 	%r10640, %r10635, %r10639;
	add.s32 	%r10641, %r10640, %r10629;
	shf.l.wrap.b32 	%r10642, %r10580, %r10580, 15;
	shf.l.wrap.b32 	%r10643, %r10580, %r10580, 13;
	xor.b32  	%r10644, %r10642, %r10643;
	shr.u32 	%r10645, %r10580, 10;
	xor.b32  	%r10646, %r10644, %r10645;
	shf.l.wrap.b32 	%r10647, %r17057, %r17057, 14;
	shf.l.wrap.b32 	%r10648, %r17057, %r17057, 25;
	xor.b32  	%r10649, %r10648, %r10647;
	shr.u32 	%r10650, %r17057, 3;
	xor.b32  	%r10651, %r10649, %r10650;
	add.s32 	%r10652, %r10651, %r17058;
	add.s32 	%r10653, %r10652, %r10395;
	add.s32 	%r10654, %r10653, %r10646;
	add.s32 	%r10655, %r10654, %r10519;
	xor.b32  	%r10656, %r10593, %r10556;
	and.b32  	%r10657, %r10630, %r10656;
	xor.b32  	%r10658, %r10657, %r10556;
	add.s32 	%r10659, %r10655, %r10658;
	shf.l.wrap.b32 	%r10660, %r10630, %r10630, 18;
	xor.b32  	%r10661, %r10660, %r10630;
	shf.l.wrap.b32 	%r10662, %r10661, %r10661, 27;
	xor.b32  	%r10663, %r10662, %r10630;
	shf.l.wrap.b32 	%r10664, %r10663, %r10663, 26;
	add.s32 	%r10665, %r10659, %r10664;
	add.s32 	%r10666, %r10665, 1996064986;
	add.s32 	%r10667, %r10666, %r10530;
	shf.l.wrap.b32 	%r10668, %r10641, %r10641, 23;
	xor.b32  	%r10669, %r10668, %r10641;
	shf.l.wrap.b32 	%r10670, %r10669, %r10669, 21;
	xor.b32  	%r10671, %r10670, %r10641;
	shf.l.wrap.b32 	%r10672, %r10671, %r10671, 30;
	and.b32  	%r10673, %r10641, %r10604;
	or.b32  	%r10674, %r10641, %r10604;
	and.b32  	%r10675, %r10674, %r10567;
	or.b32  	%r10676, %r10675, %r10673;
	add.s32 	%r10677, %r10672, %r10676;
	add.s32 	%r10678, %r10677, %r10666;
	shf.l.wrap.b32 	%r10679, %r10617, %r10617, 15;
	shf.l.wrap.b32 	%r10680, %r10617, %r10617, 13;
	xor.b32  	%r10681, %r10679, %r10680;
	shr.u32 	%r10682, %r10617, 10;
	xor.b32  	%r10683, %r10681, %r10682;
	shf.l.wrap.b32 	%r10684, %r17056, %r17056, 14;
	shf.l.wrap.b32 	%r10685, %r17056, %r17056, 25;
	xor.b32  	%r10686, %r10685, %r10684;
	shr.u32 	%r10687, %r17056, 3;
	xor.b32  	%r10688, %r10686, %r10687;
	add.s32 	%r10689, %r10688, %r17057;
	add.s32 	%r10690, %r10689, %r10432;
	add.s32 	%r10691, %r10690, %r10683;
	add.s32 	%r10692, %r10691, %r10556;
	xor.b32  	%r10693, %r10630, %r10593;
	and.b32  	%r10694, %r10667, %r10693;
	xor.b32  	%r10695, %r10694, %r10593;
	add.s32 	%r10696, %r10692, %r10695;
	shf.l.wrap.b32 	%r10697, %r10667, %r10667, 18;
	xor.b32  	%r10698, %r10697, %r10667;
	shf.l.wrap.b32 	%r10699, %r10698, %r10698, 27;
	xor.b32  	%r10700, %r10699, %r10667;
	shf.l.wrap.b32 	%r10701, %r10700, %r10700, 26;
	add.s32 	%r10702, %r10696, %r10701;
	add.s32 	%r10703, %r10702, -1740746414;
	add.s32 	%r10704, %r10703, %r10567;
	shf.l.wrap.b32 	%r10705, %r10678, %r10678, 23;
	xor.b32  	%r10706, %r10705, %r10678;
	shf.l.wrap.b32 	%r10707, %r10706, %r10706, 21;
	xor.b32  	%r10708, %r10707, %r10678;
	shf.l.wrap.b32 	%r10709, %r10708, %r10708, 30;
	and.b32  	%r10710, %r10678, %r10641;
	or.b32  	%r10711, %r10678, %r10641;
	and.b32  	%r10712, %r10711, %r10604;
	or.b32  	%r10713, %r10712, %r10710;
	add.s32 	%r10714, %r10709, %r10713;
	add.s32 	%r10715, %r10714, %r10703;
	shf.l.wrap.b32 	%r10716, %r10654, %r10654, 15;
	shf.l.wrap.b32 	%r10717, %r10654, %r10654, 13;
	xor.b32  	%r10718, %r10716, %r10717;
	shr.u32 	%r10719, %r10654, 10;
	xor.b32  	%r10720, %r10718, %r10719;
	shf.l.wrap.b32 	%r10721, %r17055, %r17055, 14;
	shf.l.wrap.b32 	%r10722, %r17055, %r17055, 25;
	xor.b32  	%r10723, %r10722, %r10721;
	shr.u32 	%r10724, %r17055, 3;
	xor.b32  	%r10725, %r10723, %r10724;
	add.s32 	%r10726, %r10725, %r17056;
	add.s32 	%r10727, %r10726, %r10469;
	add.s32 	%r10728, %r10727, %r10720;
	add.s32 	%r10729, %r10728, %r10593;
	xor.b32  	%r10730, %r10667, %r10630;
	and.b32  	%r10731, %r10704, %r10730;
	xor.b32  	%r10732, %r10731, %r10630;
	add.s32 	%r10733, %r10729, %r10732;
	shf.l.wrap.b32 	%r10734, %r10704, %r10704, 18;
	xor.b32  	%r10735, %r10734, %r10704;
	shf.l.wrap.b32 	%r10736, %r10735, %r10735, 27;
	xor.b32  	%r10737, %r10736, %r10704;
	shf.l.wrap.b32 	%r10738, %r10737, %r10737, 26;
	add.s32 	%r10739, %r10733, %r10738;
	add.s32 	%r10740, %r10739, -1473132947;
	add.s32 	%r10741, %r10740, %r10604;
	shf.l.wrap.b32 	%r10742, %r10715, %r10715, 23;
	xor.b32  	%r10743, %r10742, %r10715;
	shf.l.wrap.b32 	%r10744, %r10743, %r10743, 21;
	xor.b32  	%r10745, %r10744, %r10715;
	shf.l.wrap.b32 	%r10746, %r10745, %r10745, 30;
	and.b32  	%r10747, %r10715, %r10678;
	or.b32  	%r10748, %r10715, %r10678;
	and.b32  	%r10749, %r10748, %r10641;
	or.b32  	%r10750, %r10749, %r10747;
	add.s32 	%r10751, %r10746, %r10750;
	add.s32 	%r10752, %r10751, %r10740;
	shf.l.wrap.b32 	%r10753, %r10691, %r10691, 15;
	shf.l.wrap.b32 	%r10754, %r10691, %r10691, 13;
	xor.b32  	%r10755, %r10753, %r10754;
	shr.u32 	%r10756, %r10691, 10;
	xor.b32  	%r10757, %r10755, %r10756;
	shf.l.wrap.b32 	%r10758, %r17054, %r17054, 14;
	shf.l.wrap.b32 	%r10759, %r17054, %r17054, 25;
	xor.b32  	%r10760, %r10759, %r10758;
	shr.u32 	%r10761, %r17054, 3;
	xor.b32  	%r10762, %r10760, %r10761;
	add.s32 	%r10763, %r10762, %r17055;
	add.s32 	%r10764, %r10763, %r10506;
	add.s32 	%r10765, %r10764, %r10757;
	add.s32 	%r10766, %r10765, %r10630;
	xor.b32  	%r10767, %r10704, %r10667;
	and.b32  	%r10768, %r10741, %r10767;
	xor.b32  	%r10769, %r10768, %r10667;
	add.s32 	%r10770, %r10766, %r10769;
	shf.l.wrap.b32 	%r10771, %r10741, %r10741, 18;
	xor.b32  	%r10772, %r10771, %r10741;
	shf.l.wrap.b32 	%r10773, %r10772, %r10772, 27;
	xor.b32  	%r10774, %r10773, %r10741;
	shf.l.wrap.b32 	%r10775, %r10774, %r10774, 26;
	add.s32 	%r10776, %r10770, %r10775;
	add.s32 	%r10777, %r10776, -1341970488;
	add.s32 	%r10778, %r10777, %r10641;
	shf.l.wrap.b32 	%r10779, %r10752, %r10752, 23;
	xor.b32  	%r10780, %r10779, %r10752;
	shf.l.wrap.b32 	%r10781, %r10780, %r10780, 21;
	xor.b32  	%r10782, %r10781, %r10752;
	shf.l.wrap.b32 	%r10783, %r10782, %r10782, 30;
	and.b32  	%r10784, %r10752, %r10715;
	or.b32  	%r10785, %r10752, %r10715;
	and.b32  	%r10786, %r10785, %r10678;
	or.b32  	%r10787, %r10786, %r10784;
	add.s32 	%r10788, %r10783, %r10787;
	add.s32 	%r10789, %r10788, %r10777;
	shf.l.wrap.b32 	%r10790, %r10728, %r10728, 15;
	shf.l.wrap.b32 	%r10791, %r10728, %r10728, 13;
	xor.b32  	%r10792, %r10790, %r10791;
	shr.u32 	%r10793, %r10728, 10;
	xor.b32  	%r10794, %r10792, %r10793;
	shf.l.wrap.b32 	%r10795, %r17053, %r17053, 14;
	shf.l.wrap.b32 	%r10796, %r17053, %r17053, 25;
	xor.b32  	%r10797, %r10796, %r10795;
	shr.u32 	%r10798, %r17053, 3;
	xor.b32  	%r10799, %r10797, %r10798;
	add.s32 	%r10800, %r10799, %r17054;
	add.s32 	%r10801, %r10800, %r10543;
	add.s32 	%r10802, %r10801, %r10794;
	add.s32 	%r10803, %r10802, %r10667;
	xor.b32  	%r10804, %r10741, %r10704;
	and.b32  	%r10805, %r10778, %r10804;
	xor.b32  	%r10806, %r10805, %r10704;
	add.s32 	%r10807, %r10803, %r10806;
	shf.l.wrap.b32 	%r10808, %r10778, %r10778, 18;
	xor.b32  	%r10809, %r10808, %r10778;
	shf.l.wrap.b32 	%r10810, %r10809, %r10809, 27;
	xor.b32  	%r10811, %r10810, %r10778;
	shf.l.wrap.b32 	%r10812, %r10811, %r10811, 26;
	add.s32 	%r10813, %r10807, %r10812;
	add.s32 	%r10814, %r10813, -1084653625;
	add.s32 	%r10815, %r10814, %r10678;
	shf.l.wrap.b32 	%r10816, %r10789, %r10789, 23;
	xor.b32  	%r10817, %r10816, %r10789;
	shf.l.wrap.b32 	%r10818, %r10817, %r10817, 21;
	xor.b32  	%r10819, %r10818, %r10789;
	shf.l.wrap.b32 	%r10820, %r10819, %r10819, 30;
	and.b32  	%r10821, %r10789, %r10752;
	or.b32  	%r10822, %r10789, %r10752;
	and.b32  	%r10823, %r10822, %r10715;
	or.b32  	%r10824, %r10823, %r10821;
	add.s32 	%r10825, %r10820, %r10824;
	add.s32 	%r10826, %r10825, %r10814;
	shf.l.wrap.b32 	%r10827, %r10765, %r10765, 15;
	shf.l.wrap.b32 	%r10828, %r10765, %r10765, 13;
	xor.b32  	%r10829, %r10827, %r10828;
	shr.u32 	%r10830, %r10765, 10;
	xor.b32  	%r10831, %r10829, %r10830;
	shf.l.wrap.b32 	%r10832, %r17052, %r17052, 14;
	shf.l.wrap.b32 	%r10833, %r17052, %r17052, 25;
	xor.b32  	%r10834, %r10833, %r10832;
	shr.u32 	%r10835, %r17052, 3;
	xor.b32  	%r10836, %r10834, %r10835;
	add.s32 	%r10837, %r10836, %r17053;
	add.s32 	%r10838, %r10837, %r10580;
	add.s32 	%r10839, %r10838, %r10831;
	add.s32 	%r10840, %r10839, %r10704;
	xor.b32  	%r10841, %r10778, %r10741;
	and.b32  	%r10842, %r10815, %r10841;
	xor.b32  	%r10843, %r10842, %r10741;
	add.s32 	%r10844, %r10840, %r10843;
	shf.l.wrap.b32 	%r10845, %r10815, %r10815, 18;
	xor.b32  	%r10846, %r10845, %r10815;
	shf.l.wrap.b32 	%r10847, %r10846, %r10846, 27;
	xor.b32  	%r10848, %r10847, %r10815;
	shf.l.wrap.b32 	%r10849, %r10848, %r10848, 26;
	add.s32 	%r10850, %r10844, %r10849;
	add.s32 	%r10851, %r10850, -958395405;
	add.s32 	%r10852, %r10851, %r10715;
	shf.l.wrap.b32 	%r10853, %r10826, %r10826, 23;
	xor.b32  	%r10854, %r10853, %r10826;
	shf.l.wrap.b32 	%r10855, %r10854, %r10854, 21;
	xor.b32  	%r10856, %r10855, %r10826;
	shf.l.wrap.b32 	%r10857, %r10856, %r10856, 30;
	and.b32  	%r10858, %r10826, %r10789;
	or.b32  	%r10859, %r10826, %r10789;
	and.b32  	%r10860, %r10859, %r10752;
	or.b32  	%r10861, %r10860, %r10858;
	add.s32 	%r10862, %r10857, %r10861;
	add.s32 	%r10863, %r10862, %r10851;
	shf.l.wrap.b32 	%r10864, %r10802, %r10802, 15;
	shf.l.wrap.b32 	%r10865, %r10802, %r10802, 13;
	xor.b32  	%r10866, %r10864, %r10865;
	shr.u32 	%r10867, %r10802, 10;
	xor.b32  	%r10868, %r10866, %r10867;
	shf.l.wrap.b32 	%r10869, %r17051, %r17051, 14;
	shf.l.wrap.b32 	%r10870, %r17051, %r17051, 25;
	xor.b32  	%r10871, %r10870, %r10869;
	shr.u32 	%r10872, %r17051, 3;
	xor.b32  	%r10873, %r10871, %r10872;
	add.s32 	%r10874, %r10873, %r17052;
	add.s32 	%r10875, %r10874, %r10617;
	add.s32 	%r10876, %r10875, %r10868;
	add.s32 	%r10877, %r10876, %r10741;
	xor.b32  	%r10878, %r10815, %r10778;
	and.b32  	%r10879, %r10852, %r10878;
	xor.b32  	%r10880, %r10879, %r10778;
	add.s32 	%r10881, %r10877, %r10880;
	shf.l.wrap.b32 	%r10882, %r10852, %r10852, 18;
	xor.b32  	%r10883, %r10882, %r10852;
	shf.l.wrap.b32 	%r10884, %r10883, %r10883, 27;
	xor.b32  	%r10885, %r10884, %r10852;
	shf.l.wrap.b32 	%r10886, %r10885, %r10885, 26;
	add.s32 	%r10887, %r10881, %r10886;
	add.s32 	%r10888, %r10887, -710438585;
	add.s32 	%r10889, %r10888, %r10752;
	shf.l.wrap.b32 	%r10890, %r10863, %r10863, 23;
	xor.b32  	%r10891, %r10890, %r10863;
	shf.l.wrap.b32 	%r10892, %r10891, %r10891, 21;
	xor.b32  	%r10893, %r10892, %r10863;
	shf.l.wrap.b32 	%r10894, %r10893, %r10893, 30;
	and.b32  	%r10895, %r10863, %r10826;
	or.b32  	%r10896, %r10863, %r10826;
	and.b32  	%r10897, %r10896, %r10789;
	or.b32  	%r10898, %r10897, %r10895;
	add.s32 	%r10899, %r10894, %r10898;
	add.s32 	%r10900, %r10899, %r10888;
	shf.l.wrap.b32 	%r10901, %r10839, %r10839, 15;
	shf.l.wrap.b32 	%r10902, %r10839, %r10839, 13;
	xor.b32  	%r10903, %r10901, %r10902;
	shr.u32 	%r10904, %r10839, 10;
	xor.b32  	%r10905, %r10903, %r10904;
	shf.l.wrap.b32 	%r10906, %r17050, %r17050, 14;
	shf.l.wrap.b32 	%r10907, %r17050, %r17050, 25;
	xor.b32  	%r10908, %r10907, %r10906;
	shr.u32 	%r10909, %r17050, 3;
	xor.b32  	%r10910, %r10908, %r10909;
	add.s32 	%r10911, %r10910, %r17051;
	add.s32 	%r10912, %r10911, %r10654;
	add.s32 	%r10913, %r10912, %r10905;
	add.s32 	%r10914, %r10913, %r10778;
	xor.b32  	%r10915, %r10852, %r10815;
	and.b32  	%r10916, %r10889, %r10915;
	xor.b32  	%r10917, %r10916, %r10815;
	add.s32 	%r10918, %r10914, %r10917;
	shf.l.wrap.b32 	%r10919, %r10889, %r10889, 18;
	xor.b32  	%r10920, %r10919, %r10889;
	shf.l.wrap.b32 	%r10921, %r10920, %r10920, 27;
	xor.b32  	%r10922, %r10921, %r10889;
	shf.l.wrap.b32 	%r10923, %r10922, %r10922, 26;
	add.s32 	%r10924, %r10918, %r10923;
	add.s32 	%r10925, %r10924, 113926993;
	add.s32 	%r10926, %r10925, %r10789;
	shf.l.wrap.b32 	%r10927, %r10900, %r10900, 23;
	xor.b32  	%r10928, %r10927, %r10900;
	shf.l.wrap.b32 	%r10929, %r10928, %r10928, 21;
	xor.b32  	%r10930, %r10929, %r10900;
	shf.l.wrap.b32 	%r10931, %r10930, %r10930, 30;
	and.b32  	%r10932, %r10900, %r10863;
	or.b32  	%r10933, %r10900, %r10863;
	and.b32  	%r10934, %r10933, %r10826;
	or.b32  	%r10935, %r10934, %r10932;
	add.s32 	%r10936, %r10931, %r10935;
	add.s32 	%r10937, %r10936, %r10925;
	shf.l.wrap.b32 	%r10938, %r10876, %r10876, 15;
	shf.l.wrap.b32 	%r10939, %r10876, %r10876, 13;
	xor.b32  	%r10940, %r10938, %r10939;
	shr.u32 	%r10941, %r10876, 10;
	xor.b32  	%r10942, %r10940, %r10941;
	shf.l.wrap.b32 	%r10943, %r10395, %r10395, 25;
	shf.l.wrap.b32 	%r10944, %r10395, %r10395, 14;
	xor.b32  	%r10945, %r10943, %r10944;
	shr.u32 	%r10946, %r10395, 3;
	xor.b32  	%r10947, %r10945, %r10946;
	add.s32 	%r10948, %r10947, %r17050;
	add.s32 	%r10949, %r10948, %r10691;
	add.s32 	%r10950, %r10949, %r10942;
	add.s32 	%r10951, %r10950, %r10815;
	xor.b32  	%r10952, %r10889, %r10852;
	and.b32  	%r10953, %r10926, %r10952;
	xor.b32  	%r10954, %r10953, %r10852;
	add.s32 	%r10955, %r10951, %r10954;
	shf.l.wrap.b32 	%r10956, %r10926, %r10926, 18;
	xor.b32  	%r10957, %r10956, %r10926;
	shf.l.wrap.b32 	%r10958, %r10957, %r10957, 27;
	xor.b32  	%r10959, %r10958, %r10926;
	shf.l.wrap.b32 	%r10960, %r10959, %r10959, 26;
	add.s32 	%r10961, %r10955, %r10960;
	add.s32 	%r10962, %r10961, 338241895;
	add.s32 	%r10963, %r10962, %r10826;
	shf.l.wrap.b32 	%r10964, %r10937, %r10937, 23;
	xor.b32  	%r10965, %r10964, %r10937;
	shf.l.wrap.b32 	%r10966, %r10965, %r10965, 21;
	xor.b32  	%r10967, %r10966, %r10937;
	shf.l.wrap.b32 	%r10968, %r10967, %r10967, 30;
	and.b32  	%r10969, %r10937, %r10900;
	or.b32  	%r10970, %r10937, %r10900;
	and.b32  	%r10971, %r10970, %r10863;
	or.b32  	%r10972, %r10971, %r10969;
	add.s32 	%r10973, %r10968, %r10972;
	add.s32 	%r10974, %r10973, %r10962;
	shf.l.wrap.b32 	%r10975, %r10913, %r10913, 15;
	shf.l.wrap.b32 	%r10976, %r10913, %r10913, 13;
	xor.b32  	%r10977, %r10975, %r10976;
	shr.u32 	%r10978, %r10913, 10;
	xor.b32  	%r10979, %r10977, %r10978;
	shf.l.wrap.b32 	%r10980, %r10432, %r10432, 25;
	shf.l.wrap.b32 	%r10981, %r10432, %r10432, 14;
	xor.b32  	%r10982, %r10980, %r10981;
	shr.u32 	%r10983, %r10432, 3;
	xor.b32  	%r10984, %r10982, %r10983;
	add.s32 	%r10985, %r10984, %r10395;
	add.s32 	%r10986, %r10985, %r10728;
	add.s32 	%r10987, %r10986, %r10979;
	add.s32 	%r10988, %r10987, %r10852;
	xor.b32  	%r10989, %r10926, %r10889;
	and.b32  	%r10990, %r10963, %r10989;
	xor.b32  	%r10991, %r10990, %r10889;
	add.s32 	%r10992, %r10988, %r10991;
	shf.l.wrap.b32 	%r10993, %r10963, %r10963, 18;
	xor.b32  	%r10994, %r10993, %r10963;
	shf.l.wrap.b32 	%r10995, %r10994, %r10994, 27;
	xor.b32  	%r10996, %r10995, %r10963;
	shf.l.wrap.b32 	%r10997, %r10996, %r10996, 26;
	add.s32 	%r10998, %r10992, %r10997;
	add.s32 	%r10999, %r10998, 666307205;
	add.s32 	%r11000, %r10999, %r10863;
	shf.l.wrap.b32 	%r11001, %r10974, %r10974, 23;
	xor.b32  	%r11002, %r11001, %r10974;
	shf.l.wrap.b32 	%r11003, %r11002, %r11002, 21;
	xor.b32  	%r11004, %r11003, %r10974;
	shf.l.wrap.b32 	%r11005, %r11004, %r11004, 30;
	and.b32  	%r11006, %r10974, %r10937;
	or.b32  	%r11007, %r10974, %r10937;
	and.b32  	%r11008, %r11007, %r10900;
	or.b32  	%r11009, %r11008, %r11006;
	add.s32 	%r11010, %r11005, %r11009;
	add.s32 	%r11011, %r11010, %r10999;
	shf.l.wrap.b32 	%r11012, %r10950, %r10950, 15;
	shf.l.wrap.b32 	%r11013, %r10950, %r10950, 13;
	xor.b32  	%r11014, %r11012, %r11013;
	shr.u32 	%r11015, %r10950, 10;
	xor.b32  	%r11016, %r11014, %r11015;
	shf.l.wrap.b32 	%r11017, %r10469, %r10469, 25;
	shf.l.wrap.b32 	%r11018, %r10469, %r10469, 14;
	xor.b32  	%r11019, %r11017, %r11018;
	shr.u32 	%r11020, %r10469, 3;
	xor.b32  	%r11021, %r11019, %r11020;
	add.s32 	%r11022, %r11021, %r10432;
	add.s32 	%r11023, %r11022, %r10765;
	add.s32 	%r11024, %r11023, %r11016;
	add.s32 	%r11025, %r11024, %r10889;
	xor.b32  	%r11026, %r10963, %r10926;
	and.b32  	%r11027, %r11000, %r11026;
	xor.b32  	%r11028, %r11027, %r10926;
	add.s32 	%r11029, %r11025, %r11028;
	shf.l.wrap.b32 	%r11030, %r11000, %r11000, 18;
	xor.b32  	%r11031, %r11030, %r11000;
	shf.l.wrap.b32 	%r11032, %r11031, %r11031, 27;
	xor.b32  	%r11033, %r11032, %r11000;
	shf.l.wrap.b32 	%r11034, %r11033, %r11033, 26;
	add.s32 	%r11035, %r11029, %r11034;
	add.s32 	%r11036, %r11035, 773529912;
	add.s32 	%r11037, %r11036, %r10900;
	shf.l.wrap.b32 	%r11038, %r11011, %r11011, 23;
	xor.b32  	%r11039, %r11038, %r11011;
	shf.l.wrap.b32 	%r11040, %r11039, %r11039, 21;
	xor.b32  	%r11041, %r11040, %r11011;
	shf.l.wrap.b32 	%r11042, %r11041, %r11041, 30;
	and.b32  	%r11043, %r11011, %r10974;
	or.b32  	%r11044, %r11011, %r10974;
	and.b32  	%r11045, %r11044, %r10937;
	or.b32  	%r11046, %r11045, %r11043;
	add.s32 	%r11047, %r11042, %r11046;
	add.s32 	%r11048, %r11047, %r11036;
	shf.l.wrap.b32 	%r11049, %r10987, %r10987, 15;
	shf.l.wrap.b32 	%r11050, %r10987, %r10987, 13;
	xor.b32  	%r11051, %r11049, %r11050;
	shr.u32 	%r11052, %r10987, 10;
	xor.b32  	%r11053, %r11051, %r11052;
	shf.l.wrap.b32 	%r11054, %r10506, %r10506, 25;
	shf.l.wrap.b32 	%r11055, %r10506, %r10506, 14;
	xor.b32  	%r11056, %r11054, %r11055;
	shr.u32 	%r11057, %r10506, 3;
	xor.b32  	%r11058, %r11056, %r11057;
	add.s32 	%r11059, %r11058, %r10469;
	add.s32 	%r11060, %r11059, %r10802;
	add.s32 	%r11061, %r11060, %r11053;
	add.s32 	%r11062, %r11061, %r10926;
	xor.b32  	%r11063, %r11000, %r10963;
	and.b32  	%r11064, %r11037, %r11063;
	xor.b32  	%r11065, %r11064, %r10963;
	add.s32 	%r11066, %r11062, %r11065;
	shf.l.wrap.b32 	%r11067, %r11037, %r11037, 18;
	xor.b32  	%r11068, %r11067, %r11037;
	shf.l.wrap.b32 	%r11069, %r11068, %r11068, 27;
	xor.b32  	%r11070, %r11069, %r11037;
	shf.l.wrap.b32 	%r11071, %r11070, %r11070, 26;
	add.s32 	%r11072, %r11066, %r11071;
	add.s32 	%r11073, %r11072, 1294757372;
	add.s32 	%r11074, %r11073, %r10937;
	shf.l.wrap.b32 	%r11075, %r11048, %r11048, 23;
	xor.b32  	%r11076, %r11075, %r11048;
	shf.l.wrap.b32 	%r11077, %r11076, %r11076, 21;
	xor.b32  	%r11078, %r11077, %r11048;
	shf.l.wrap.b32 	%r11079, %r11078, %r11078, 30;
	and.b32  	%r11080, %r11048, %r11011;
	or.b32  	%r11081, %r11048, %r11011;
	and.b32  	%r11082, %r11081, %r10974;
	or.b32  	%r11083, %r11082, %r11080;
	add.s32 	%r11084, %r11079, %r11083;
	add.s32 	%r11085, %r11084, %r11073;
	shf.l.wrap.b32 	%r11086, %r11024, %r11024, 15;
	shf.l.wrap.b32 	%r11087, %r11024, %r11024, 13;
	xor.b32  	%r11088, %r11086, %r11087;
	shr.u32 	%r11089, %r11024, 10;
	xor.b32  	%r11090, %r11088, %r11089;
	shf.l.wrap.b32 	%r11091, %r10543, %r10543, 25;
	shf.l.wrap.b32 	%r11092, %r10543, %r10543, 14;
	xor.b32  	%r11093, %r11091, %r11092;
	shr.u32 	%r11094, %r10543, 3;
	xor.b32  	%r11095, %r11093, %r11094;
	add.s32 	%r11096, %r11095, %r10506;
	add.s32 	%r11097, %r11096, %r10839;
	add.s32 	%r11098, %r11097, %r11090;
	add.s32 	%r11099, %r11098, %r10963;
	xor.b32  	%r11100, %r11037, %r11000;
	and.b32  	%r11101, %r11074, %r11100;
	xor.b32  	%r11102, %r11101, %r11000;
	add.s32 	%r11103, %r11099, %r11102;
	shf.l.wrap.b32 	%r11104, %r11074, %r11074, 18;
	xor.b32  	%r11105, %r11104, %r11074;
	shf.l.wrap.b32 	%r11106, %r11105, %r11105, 27;
	xor.b32  	%r11107, %r11106, %r11074;
	shf.l.wrap.b32 	%r11108, %r11107, %r11107, 26;
	add.s32 	%r11109, %r11103, %r11108;
	add.s32 	%r11110, %r11109, 1396182291;
	add.s32 	%r11111, %r11110, %r10974;
	shf.l.wrap.b32 	%r11112, %r11085, %r11085, 23;
	xor.b32  	%r11113, %r11112, %r11085;
	shf.l.wrap.b32 	%r11114, %r11113, %r11113, 21;
	xor.b32  	%r11115, %r11114, %r11085;
	shf.l.wrap.b32 	%r11116, %r11115, %r11115, 30;
	and.b32  	%r11117, %r11085, %r11048;
	or.b32  	%r11118, %r11085, %r11048;
	and.b32  	%r11119, %r11118, %r11011;
	or.b32  	%r11120, %r11119, %r11117;
	add.s32 	%r11121, %r11116, %r11120;
	add.s32 	%r11122, %r11121, %r11110;
	shf.l.wrap.b32 	%r11123, %r11061, %r11061, 15;
	shf.l.wrap.b32 	%r11124, %r11061, %r11061, 13;
	xor.b32  	%r11125, %r11123, %r11124;
	shr.u32 	%r11126, %r11061, 10;
	xor.b32  	%r11127, %r11125, %r11126;
	shf.l.wrap.b32 	%r11128, %r10580, %r10580, 25;
	shf.l.wrap.b32 	%r11129, %r10580, %r10580, 14;
	xor.b32  	%r11130, %r11128, %r11129;
	shr.u32 	%r11131, %r10580, 3;
	xor.b32  	%r11132, %r11130, %r11131;
	add.s32 	%r11133, %r11132, %r10543;
	add.s32 	%r11134, %r11133, %r10876;
	add.s32 	%r11135, %r11134, %r11127;
	add.s32 	%r11136, %r11135, %r11000;
	xor.b32  	%r11137, %r11074, %r11037;
	and.b32  	%r11138, %r11111, %r11137;
	xor.b32  	%r11139, %r11138, %r11037;
	add.s32 	%r11140, %r11136, %r11139;
	shf.l.wrap.b32 	%r11141, %r11111, %r11111, 18;
	xor.b32  	%r11142, %r11141, %r11111;
	shf.l.wrap.b32 	%r11143, %r11142, %r11142, 27;
	xor.b32  	%r11144, %r11143, %r11111;
	shf.l.wrap.b32 	%r11145, %r11144, %r11144, 26;
	add.s32 	%r11146, %r11140, %r11145;
	add.s32 	%r11147, %r11146, 1695183700;
	add.s32 	%r11148, %r11147, %r11011;
	shf.l.wrap.b32 	%r11149, %r11122, %r11122, 23;
	xor.b32  	%r11150, %r11149, %r11122;
	shf.l.wrap.b32 	%r11151, %r11150, %r11150, 21;
	xor.b32  	%r11152, %r11151, %r11122;
	shf.l.wrap.b32 	%r11153, %r11152, %r11152, 30;
	and.b32  	%r11154, %r11122, %r11085;
	or.b32  	%r11155, %r11122, %r11085;
	and.b32  	%r11156, %r11155, %r11048;
	or.b32  	%r11157, %r11156, %r11154;
	add.s32 	%r11158, %r11153, %r11157;
	add.s32 	%r11159, %r11158, %r11147;
	shf.l.wrap.b32 	%r11160, %r11098, %r11098, 15;
	shf.l.wrap.b32 	%r11161, %r11098, %r11098, 13;
	xor.b32  	%r11162, %r11160, %r11161;
	shr.u32 	%r11163, %r11098, 10;
	xor.b32  	%r11164, %r11162, %r11163;
	shf.l.wrap.b32 	%r11165, %r10617, %r10617, 25;
	shf.l.wrap.b32 	%r11166, %r10617, %r10617, 14;
	xor.b32  	%r11167, %r11165, %r11166;
	shr.u32 	%r11168, %r10617, 3;
	xor.b32  	%r11169, %r11167, %r11168;
	add.s32 	%r11170, %r11169, %r10580;
	add.s32 	%r11171, %r11170, %r10913;
	add.s32 	%r11172, %r11171, %r11164;
	add.s32 	%r11173, %r11172, %r11037;
	xor.b32  	%r11174, %r11111, %r11074;
	and.b32  	%r11175, %r11148, %r11174;
	xor.b32  	%r11176, %r11175, %r11074;
	add.s32 	%r11177, %r11173, %r11176;
	shf.l.wrap.b32 	%r11178, %r11148, %r11148, 18;
	xor.b32  	%r11179, %r11178, %r11148;
	shf.l.wrap.b32 	%r11180, %r11179, %r11179, 27;
	xor.b32  	%r11181, %r11180, %r11148;
	shf.l.wrap.b32 	%r11182, %r11181, %r11181, 26;
	add.s32 	%r11183, %r11177, %r11182;
	add.s32 	%r11184, %r11183, 1986661051;
	add.s32 	%r11185, %r11184, %r11048;
	shf.l.wrap.b32 	%r11186, %r11159, %r11159, 23;
	xor.b32  	%r11187, %r11186, %r11159;
	shf.l.wrap.b32 	%r11188, %r11187, %r11187, 21;
	xor.b32  	%r11189, %r11188, %r11159;
	shf.l.wrap.b32 	%r11190, %r11189, %r11189, 30;
	and.b32  	%r11191, %r11159, %r11122;
	or.b32  	%r11192, %r11159, %r11122;
	and.b32  	%r11193, %r11192, %r11085;
	or.b32  	%r11194, %r11193, %r11191;
	add.s32 	%r11195, %r11190, %r11194;
	add.s32 	%r11196, %r11195, %r11184;
	shf.l.wrap.b32 	%r11197, %r11135, %r11135, 15;
	shf.l.wrap.b32 	%r11198, %r11135, %r11135, 13;
	xor.b32  	%r11199, %r11197, %r11198;
	shr.u32 	%r11200, %r11135, 10;
	xor.b32  	%r11201, %r11199, %r11200;
	shf.l.wrap.b32 	%r11202, %r10654, %r10654, 25;
	shf.l.wrap.b32 	%r11203, %r10654, %r10654, 14;
	xor.b32  	%r11204, %r11202, %r11203;
	shr.u32 	%r11205, %r10654, 3;
	xor.b32  	%r11206, %r11204, %r11205;
	add.s32 	%r11207, %r11206, %r10617;
	add.s32 	%r11208, %r11207, %r10950;
	add.s32 	%r11209, %r11208, %r11201;
	add.s32 	%r11210, %r11209, %r11074;
	xor.b32  	%r11211, %r11148, %r11111;
	and.b32  	%r11212, %r11185, %r11211;
	xor.b32  	%r11213, %r11212, %r11111;
	add.s32 	%r11214, %r11210, %r11213;
	shf.l.wrap.b32 	%r11215, %r11185, %r11185, 18;
	xor.b32  	%r11216, %r11215, %r11185;
	shf.l.wrap.b32 	%r11217, %r11216, %r11216, 27;
	xor.b32  	%r11218, %r11217, %r11185;
	shf.l.wrap.b32 	%r11219, %r11218, %r11218, 26;
	add.s32 	%r11220, %r11214, %r11219;
	add.s32 	%r11221, %r11220, -2117940946;
	add.s32 	%r11222, %r11221, %r11085;
	shf.l.wrap.b32 	%r11223, %r11196, %r11196, 23;
	xor.b32  	%r11224, %r11223, %r11196;
	shf.l.wrap.b32 	%r11225, %r11224, %r11224, 21;
	xor.b32  	%r11226, %r11225, %r11196;
	shf.l.wrap.b32 	%r11227, %r11226, %r11226, 30;
	and.b32  	%r11228, %r11196, %r11159;
	or.b32  	%r11229, %r11196, %r11159;
	and.b32  	%r11230, %r11229, %r11122;
	or.b32  	%r11231, %r11230, %r11228;
	add.s32 	%r11232, %r11227, %r11231;
	add.s32 	%r11233, %r11232, %r11221;
	shf.l.wrap.b32 	%r11234, %r11172, %r11172, 15;
	shf.l.wrap.b32 	%r11235, %r11172, %r11172, 13;
	xor.b32  	%r11236, %r11234, %r11235;
	shr.u32 	%r11237, %r11172, 10;
	xor.b32  	%r11238, %r11236, %r11237;
	shf.l.wrap.b32 	%r11239, %r10691, %r10691, 25;
	shf.l.wrap.b32 	%r11240, %r10691, %r10691, 14;
	xor.b32  	%r11241, %r11239, %r11240;
	shr.u32 	%r11242, %r10691, 3;
	xor.b32  	%r11243, %r11241, %r11242;
	add.s32 	%r11244, %r11243, %r10654;
	add.s32 	%r11245, %r11244, %r10987;
	add.s32 	%r11246, %r11245, %r11238;
	add.s32 	%r11247, %r11246, %r11111;
	xor.b32  	%r11248, %r11185, %r11148;
	and.b32  	%r11249, %r11222, %r11248;
	xor.b32  	%r11250, %r11249, %r11148;
	add.s32 	%r11251, %r11247, %r11250;
	shf.l.wrap.b32 	%r11252, %r11222, %r11222, 18;
	xor.b32  	%r11253, %r11252, %r11222;
	shf.l.wrap.b32 	%r11254, %r11253, %r11253, 27;
	xor.b32  	%r11255, %r11254, %r11222;
	shf.l.wrap.b32 	%r11256, %r11255, %r11255, 26;
	add.s32 	%r11257, %r11251, %r11256;
	add.s32 	%r11258, %r11257, -1838011259;
	add.s32 	%r11259, %r11258, %r11122;
	shf.l.wrap.b32 	%r11260, %r11233, %r11233, 23;
	xor.b32  	%r11261, %r11260, %r11233;
	shf.l.wrap.b32 	%r11262, %r11261, %r11261, 21;
	xor.b32  	%r11263, %r11262, %r11233;
	shf.l.wrap.b32 	%r11264, %r11263, %r11263, 30;
	and.b32  	%r11265, %r11233, %r11196;
	or.b32  	%r11266, %r11233, %r11196;
	and.b32  	%r11267, %r11266, %r11159;
	or.b32  	%r11268, %r11267, %r11265;
	add.s32 	%r11269, %r11264, %r11268;
	add.s32 	%r11270, %r11269, %r11258;
	shf.l.wrap.b32 	%r11271, %r11209, %r11209, 15;
	shf.l.wrap.b32 	%r11272, %r11209, %r11209, 13;
	xor.b32  	%r11273, %r11271, %r11272;
	shr.u32 	%r11274, %r11209, 10;
	xor.b32  	%r11275, %r11273, %r11274;
	shf.l.wrap.b32 	%r11276, %r10728, %r10728, 25;
	shf.l.wrap.b32 	%r11277, %r10728, %r10728, 14;
	xor.b32  	%r11278, %r11276, %r11277;
	shr.u32 	%r11279, %r10728, 3;
	xor.b32  	%r11280, %r11278, %r11279;
	add.s32 	%r11281, %r11280, %r10691;
	add.s32 	%r11282, %r11281, %r11024;
	add.s32 	%r11283, %r11282, %r11275;
	add.s32 	%r11284, %r11283, %r11148;
	xor.b32  	%r11285, %r11222, %r11185;
	and.b32  	%r11286, %r11259, %r11285;
	xor.b32  	%r11287, %r11286, %r11185;
	add.s32 	%r11288, %r11284, %r11287;
	shf.l.wrap.b32 	%r11289, %r11259, %r11259, 18;
	xor.b32  	%r11290, %r11289, %r11259;
	shf.l.wrap.b32 	%r11291, %r11290, %r11290, 27;
	xor.b32  	%r11292, %r11291, %r11259;
	shf.l.wrap.b32 	%r11293, %r11292, %r11292, 26;
	add.s32 	%r11294, %r11288, %r11293;
	add.s32 	%r11295, %r11294, -1564481375;
	add.s32 	%r11296, %r11295, %r11159;
	shf.l.wrap.b32 	%r11297, %r11270, %r11270, 23;
	xor.b32  	%r11298, %r11297, %r11270;
	shf.l.wrap.b32 	%r11299, %r11298, %r11298, 21;
	xor.b32  	%r11300, %r11299, %r11270;
	shf.l.wrap.b32 	%r11301, %r11300, %r11300, 30;
	and.b32  	%r11302, %r11270, %r11233;
	or.b32  	%r11303, %r11270, %r11233;
	and.b32  	%r11304, %r11303, %r11196;
	or.b32  	%r11305, %r11304, %r11302;
	add.s32 	%r11306, %r11301, %r11305;
	add.s32 	%r11307, %r11306, %r11295;
	shf.l.wrap.b32 	%r11308, %r11246, %r11246, 15;
	shf.l.wrap.b32 	%r11309, %r11246, %r11246, 13;
	xor.b32  	%r11310, %r11308, %r11309;
	shr.u32 	%r11311, %r11246, 10;
	xor.b32  	%r11312, %r11310, %r11311;
	shf.l.wrap.b32 	%r11313, %r10765, %r10765, 25;
	shf.l.wrap.b32 	%r11314, %r10765, %r10765, 14;
	xor.b32  	%r11315, %r11313, %r11314;
	shr.u32 	%r11316, %r10765, 3;
	xor.b32  	%r11317, %r11315, %r11316;
	add.s32 	%r11318, %r11317, %r10728;
	add.s32 	%r11319, %r11318, %r11061;
	add.s32 	%r11320, %r11319, %r11312;
	add.s32 	%r11321, %r11320, %r11185;
	xor.b32  	%r11322, %r11259, %r11222;
	and.b32  	%r11323, %r11296, %r11322;
	xor.b32  	%r11324, %r11323, %r11222;
	add.s32 	%r11325, %r11321, %r11324;
	shf.l.wrap.b32 	%r11326, %r11296, %r11296, 18;
	xor.b32  	%r11327, %r11326, %r11296;
	shf.l.wrap.b32 	%r11328, %r11327, %r11327, 27;
	xor.b32  	%r11329, %r11328, %r11296;
	shf.l.wrap.b32 	%r11330, %r11329, %r11329, 26;
	add.s32 	%r11331, %r11325, %r11330;
	add.s32 	%r11332, %r11331, -1474664885;
	add.s32 	%r11333, %r11332, %r11196;
	shf.l.wrap.b32 	%r11334, %r11307, %r11307, 23;
	xor.b32  	%r11335, %r11334, %r11307;
	shf.l.wrap.b32 	%r11336, %r11335, %r11335, 21;
	xor.b32  	%r11337, %r11336, %r11307;
	shf.l.wrap.b32 	%r11338, %r11337, %r11337, 30;
	and.b32  	%r11339, %r11307, %r11270;
	or.b32  	%r11340, %r11307, %r11270;
	and.b32  	%r11341, %r11340, %r11233;
	or.b32  	%r11342, %r11341, %r11339;
	add.s32 	%r11343, %r11338, %r11342;
	add.s32 	%r11344, %r11343, %r11332;
	shf.l.wrap.b32 	%r11345, %r11283, %r11283, 15;
	shf.l.wrap.b32 	%r11346, %r11283, %r11283, 13;
	xor.b32  	%r11347, %r11345, %r11346;
	shr.u32 	%r11348, %r11283, 10;
	xor.b32  	%r11349, %r11347, %r11348;
	shf.l.wrap.b32 	%r11350, %r10802, %r10802, 25;
	shf.l.wrap.b32 	%r11351, %r10802, %r10802, 14;
	xor.b32  	%r11352, %r11350, %r11351;
	shr.u32 	%r11353, %r10802, 3;
	xor.b32  	%r11354, %r11352, %r11353;
	add.s32 	%r11355, %r11354, %r10765;
	add.s32 	%r11356, %r11355, %r11098;
	add.s32 	%r11357, %r11356, %r11349;
	add.s32 	%r11358, %r11357, %r11222;
	xor.b32  	%r11359, %r11296, %r11259;
	and.b32  	%r11360, %r11333, %r11359;
	xor.b32  	%r11361, %r11360, %r11259;
	add.s32 	%r11362, %r11358, %r11361;
	shf.l.wrap.b32 	%r11363, %r11333, %r11333, 18;
	xor.b32  	%r11364, %r11363, %r11333;
	shf.l.wrap.b32 	%r11365, %r11364, %r11364, 27;
	xor.b32  	%r11366, %r11365, %r11333;
	shf.l.wrap.b32 	%r11367, %r11366, %r11366, 26;
	add.s32 	%r11368, %r11362, %r11367;
	add.s32 	%r11369, %r11368, -1035236496;
	add.s32 	%r11370, %r11369, %r11233;
	shf.l.wrap.b32 	%r11371, %r11344, %r11344, 23;
	xor.b32  	%r11372, %r11371, %r11344;
	shf.l.wrap.b32 	%r11373, %r11372, %r11372, 21;
	xor.b32  	%r11374, %r11373, %r11344;
	shf.l.wrap.b32 	%r11375, %r11374, %r11374, 30;
	and.b32  	%r11376, %r11344, %r11307;
	or.b32  	%r11377, %r11344, %r11307;
	and.b32  	%r11378, %r11377, %r11270;
	or.b32  	%r11379, %r11378, %r11376;
	add.s32 	%r11380, %r11375, %r11379;
	add.s32 	%r11381, %r11380, %r11369;
	shf.l.wrap.b32 	%r11382, %r11320, %r11320, 15;
	shf.l.wrap.b32 	%r11383, %r11320, %r11320, 13;
	xor.b32  	%r11384, %r11382, %r11383;
	shr.u32 	%r11385, %r11320, 10;
	xor.b32  	%r11386, %r11384, %r11385;
	shf.l.wrap.b32 	%r11387, %r10839, %r10839, 25;
	shf.l.wrap.b32 	%r11388, %r10839, %r10839, 14;
	xor.b32  	%r11389, %r11387, %r11388;
	shr.u32 	%r11390, %r10839, 3;
	xor.b32  	%r11391, %r11389, %r11390;
	add.s32 	%r11392, %r11391, %r10802;
	add.s32 	%r11393, %r11392, %r11135;
	add.s32 	%r11394, %r11393, %r11386;
	add.s32 	%r11395, %r11394, %r11259;
	xor.b32  	%r11396, %r11333, %r11296;
	and.b32  	%r11397, %r11370, %r11396;
	xor.b32  	%r11398, %r11397, %r11296;
	add.s32 	%r11399, %r11395, %r11398;
	shf.l.wrap.b32 	%r11400, %r11370, %r11370, 18;
	xor.b32  	%r11401, %r11400, %r11370;
	shf.l.wrap.b32 	%r11402, %r11401, %r11401, 27;
	xor.b32  	%r11403, %r11402, %r11370;
	shf.l.wrap.b32 	%r11404, %r11403, %r11403, 26;
	add.s32 	%r11405, %r11399, %r11404;
	add.s32 	%r11406, %r11405, -949202525;
	add.s32 	%r11407, %r11406, %r11270;
	shf.l.wrap.b32 	%r11408, %r11381, %r11381, 23;
	xor.b32  	%r11409, %r11408, %r11381;
	shf.l.wrap.b32 	%r11410, %r11409, %r11409, 21;
	xor.b32  	%r11411, %r11410, %r11381;
	shf.l.wrap.b32 	%r11412, %r11411, %r11411, 30;
	and.b32  	%r11413, %r11381, %r11344;
	or.b32  	%r11414, %r11381, %r11344;
	and.b32  	%r11415, %r11414, %r11307;
	or.b32  	%r11416, %r11415, %r11413;
	add.s32 	%r11417, %r11412, %r11416;
	add.s32 	%r11418, %r11417, %r11406;
	shf.l.wrap.b32 	%r11419, %r11357, %r11357, 15;
	shf.l.wrap.b32 	%r11420, %r11357, %r11357, 13;
	xor.b32  	%r11421, %r11419, %r11420;
	shr.u32 	%r11422, %r11357, 10;
	xor.b32  	%r11423, %r11421, %r11422;
	shf.l.wrap.b32 	%r11424, %r10876, %r10876, 25;
	shf.l.wrap.b32 	%r11425, %r10876, %r10876, 14;
	xor.b32  	%r11426, %r11424, %r11425;
	shr.u32 	%r11427, %r10876, 3;
	xor.b32  	%r11428, %r11426, %r11427;
	add.s32 	%r11429, %r11428, %r10839;
	add.s32 	%r11430, %r11429, %r11172;
	add.s32 	%r11431, %r11430, %r11423;
	add.s32 	%r11432, %r11431, %r11296;
	xor.b32  	%r11433, %r11370, %r11333;
	and.b32  	%r11434, %r11407, %r11433;
	xor.b32  	%r11435, %r11434, %r11333;
	add.s32 	%r11436, %r11432, %r11435;
	shf.l.wrap.b32 	%r11437, %r11407, %r11407, 18;
	xor.b32  	%r11438, %r11437, %r11407;
	shf.l.wrap.b32 	%r11439, %r11438, %r11438, 27;
	xor.b32  	%r11440, %r11439, %r11407;
	shf.l.wrap.b32 	%r11441, %r11440, %r11440, 26;
	add.s32 	%r11442, %r11436, %r11441;
	add.s32 	%r11443, %r11442, -778901479;
	add.s32 	%r11444, %r11443, %r11307;
	shf.l.wrap.b32 	%r11445, %r11418, %r11418, 23;
	xor.b32  	%r11446, %r11445, %r11418;
	shf.l.wrap.b32 	%r11447, %r11446, %r11446, 21;
	xor.b32  	%r11448, %r11447, %r11418;
	shf.l.wrap.b32 	%r11449, %r11448, %r11448, 30;
	and.b32  	%r11450, %r11418, %r11381;
	or.b32  	%r11451, %r11418, %r11381;
	and.b32  	%r11452, %r11451, %r11344;
	or.b32  	%r11453, %r11452, %r11450;
	add.s32 	%r11454, %r11449, %r11453;
	add.s32 	%r11455, %r11454, %r11443;
	shf.l.wrap.b32 	%r11456, %r11394, %r11394, 15;
	shf.l.wrap.b32 	%r11457, %r11394, %r11394, 13;
	xor.b32  	%r11458, %r11456, %r11457;
	shr.u32 	%r11459, %r11394, 10;
	xor.b32  	%r11460, %r11458, %r11459;
	shf.l.wrap.b32 	%r11461, %r10913, %r10913, 25;
	shf.l.wrap.b32 	%r11462, %r10913, %r10913, 14;
	xor.b32  	%r11463, %r11461, %r11462;
	shr.u32 	%r11464, %r10913, 3;
	xor.b32  	%r11465, %r11463, %r11464;
	add.s32 	%r11466, %r11465, %r10876;
	add.s32 	%r11467, %r11466, %r11209;
	add.s32 	%r11468, %r11467, %r11460;
	add.s32 	%r11469, %r11468, %r11333;
	xor.b32  	%r11470, %r11407, %r11370;
	and.b32  	%r11471, %r11444, %r11470;
	xor.b32  	%r11472, %r11471, %r11370;
	add.s32 	%r11473, %r11469, %r11472;
	shf.l.wrap.b32 	%r11474, %r11444, %r11444, 18;
	xor.b32  	%r11475, %r11474, %r11444;
	shf.l.wrap.b32 	%r11476, %r11475, %r11475, 27;
	xor.b32  	%r11477, %r11476, %r11444;
	shf.l.wrap.b32 	%r11478, %r11477, %r11477, 26;
	add.s32 	%r11479, %r11473, %r11478;
	add.s32 	%r11480, %r11479, -694614492;
	add.s32 	%r11481, %r11480, %r11344;
	shf.l.wrap.b32 	%r11482, %r11455, %r11455, 23;
	xor.b32  	%r11483, %r11482, %r11455;
	shf.l.wrap.b32 	%r11484, %r11483, %r11483, 21;
	xor.b32  	%r11485, %r11484, %r11455;
	shf.l.wrap.b32 	%r11486, %r11485, %r11485, 30;
	and.b32  	%r11487, %r11455, %r11418;
	or.b32  	%r11488, %r11455, %r11418;
	and.b32  	%r11489, %r11488, %r11381;
	or.b32  	%r11490, %r11489, %r11487;
	add.s32 	%r11491, %r11486, %r11490;
	add.s32 	%r11492, %r11491, %r11480;
	shf.l.wrap.b32 	%r11493, %r11431, %r11431, 15;
	shf.l.wrap.b32 	%r11494, %r11431, %r11431, 13;
	xor.b32  	%r11495, %r11493, %r11494;
	shr.u32 	%r11496, %r11431, 10;
	xor.b32  	%r11497, %r11495, %r11496;
	shf.l.wrap.b32 	%r11498, %r10950, %r10950, 25;
	shf.l.wrap.b32 	%r11499, %r10950, %r10950, 14;
	xor.b32  	%r11500, %r11498, %r11499;
	shr.u32 	%r11501, %r10950, 3;
	xor.b32  	%r11502, %r11500, %r11501;
	add.s32 	%r11503, %r11502, %r10913;
	add.s32 	%r11504, %r11503, %r11246;
	add.s32 	%r11505, %r11504, %r11497;
	add.s32 	%r11506, %r11505, %r11370;
	xor.b32  	%r11507, %r11444, %r11407;
	and.b32  	%r11508, %r11481, %r11507;
	xor.b32  	%r11509, %r11508, %r11407;
	add.s32 	%r11510, %r11506, %r11509;
	shf.l.wrap.b32 	%r11511, %r11481, %r11481, 18;
	xor.b32  	%r11512, %r11511, %r11481;
	shf.l.wrap.b32 	%r11513, %r11512, %r11512, 27;
	xor.b32  	%r11514, %r11513, %r11481;
	shf.l.wrap.b32 	%r11515, %r11514, %r11514, 26;
	add.s32 	%r11516, %r11510, %r11515;
	add.s32 	%r11517, %r11516, -200395387;
	add.s32 	%r11518, %r11517, %r11381;
	shf.l.wrap.b32 	%r11519, %r11492, %r11492, 23;
	xor.b32  	%r11520, %r11519, %r11492;
	shf.l.wrap.b32 	%r11521, %r11520, %r11520, 21;
	xor.b32  	%r11522, %r11521, %r11492;
	shf.l.wrap.b32 	%r11523, %r11522, %r11522, 30;
	and.b32  	%r11524, %r11492, %r11455;
	or.b32  	%r11525, %r11492, %r11455;
	and.b32  	%r11526, %r11525, %r11418;
	or.b32  	%r11527, %r11526, %r11524;
	add.s32 	%r11528, %r11523, %r11527;
	add.s32 	%r11529, %r11528, %r11517;
	shf.l.wrap.b32 	%r11530, %r11468, %r11468, 15;
	shf.l.wrap.b32 	%r11531, %r11468, %r11468, 13;
	xor.b32  	%r11532, %r11530, %r11531;
	shr.u32 	%r11533, %r11468, 10;
	xor.b32  	%r11534, %r11532, %r11533;
	shf.l.wrap.b32 	%r11535, %r10987, %r10987, 25;
	shf.l.wrap.b32 	%r11536, %r10987, %r10987, 14;
	xor.b32  	%r11537, %r11535, %r11536;
	shr.u32 	%r11538, %r10987, 3;
	xor.b32  	%r11539, %r11537, %r11538;
	add.s32 	%r11540, %r11539, %r10950;
	add.s32 	%r11541, %r11540, %r11283;
	add.s32 	%r11542, %r11541, %r11534;
	add.s32 	%r11543, %r11542, %r11407;
	xor.b32  	%r11544, %r11481, %r11444;
	and.b32  	%r11545, %r11518, %r11544;
	xor.b32  	%r11546, %r11545, %r11444;
	add.s32 	%r11547, %r11543, %r11546;
	shf.l.wrap.b32 	%r11548, %r11518, %r11518, 18;
	xor.b32  	%r11549, %r11548, %r11518;
	shf.l.wrap.b32 	%r11550, %r11549, %r11549, 27;
	xor.b32  	%r11551, %r11550, %r11518;
	shf.l.wrap.b32 	%r11552, %r11551, %r11551, 26;
	add.s32 	%r11553, %r11547, %r11552;
	add.s32 	%r11554, %r11553, 275423344;
	add.s32 	%r11555, %r11554, %r11418;
	shf.l.wrap.b32 	%r11556, %r11529, %r11529, 23;
	xor.b32  	%r11557, %r11556, %r11529;
	shf.l.wrap.b32 	%r11558, %r11557, %r11557, 21;
	xor.b32  	%r11559, %r11558, %r11529;
	shf.l.wrap.b32 	%r11560, %r11559, %r11559, 30;
	and.b32  	%r11561, %r11529, %r11492;
	or.b32  	%r11562, %r11529, %r11492;
	and.b32  	%r11563, %r11562, %r11455;
	or.b32  	%r11564, %r11563, %r11561;
	add.s32 	%r11565, %r11560, %r11564;
	add.s32 	%r11566, %r11565, %r11554;
	shf.l.wrap.b32 	%r11567, %r11505, %r11505, 15;
	shf.l.wrap.b32 	%r11568, %r11505, %r11505, 13;
	xor.b32  	%r11569, %r11567, %r11568;
	shr.u32 	%r11570, %r11505, 10;
	xor.b32  	%r11571, %r11569, %r11570;
	shf.l.wrap.b32 	%r11572, %r11024, %r11024, 25;
	shf.l.wrap.b32 	%r11573, %r11024, %r11024, 14;
	xor.b32  	%r11574, %r11572, %r11573;
	shr.u32 	%r11575, %r11024, 3;
	xor.b32  	%r11576, %r11574, %r11575;
	add.s32 	%r11577, %r11576, %r10987;
	add.s32 	%r11578, %r11577, %r11320;
	add.s32 	%r11579, %r11578, %r11571;
	add.s32 	%r11580, %r11579, %r11444;
	xor.b32  	%r11581, %r11518, %r11481;
	and.b32  	%r11582, %r11555, %r11581;
	xor.b32  	%r11583, %r11582, %r11481;
	add.s32 	%r11584, %r11580, %r11583;
	shf.l.wrap.b32 	%r11585, %r11555, %r11555, 18;
	xor.b32  	%r11586, %r11585, %r11555;
	shf.l.wrap.b32 	%r11587, %r11586, %r11586, 27;
	xor.b32  	%r11588, %r11587, %r11555;
	shf.l.wrap.b32 	%r11589, %r11588, %r11588, 26;
	add.s32 	%r11590, %r11584, %r11589;
	add.s32 	%r11591, %r11590, 430227734;
	add.s32 	%r11592, %r11591, %r11455;
	shf.l.wrap.b32 	%r11593, %r11566, %r11566, 23;
	xor.b32  	%r11594, %r11593, %r11566;
	shf.l.wrap.b32 	%r11595, %r11594, %r11594, 21;
	xor.b32  	%r11596, %r11595, %r11566;
	shf.l.wrap.b32 	%r11597, %r11596, %r11596, 30;
	and.b32  	%r11598, %r11566, %r11529;
	or.b32  	%r11599, %r11566, %r11529;
	and.b32  	%r11600, %r11599, %r11492;
	or.b32  	%r11601, %r11600, %r11598;
	add.s32 	%r11602, %r11597, %r11601;
	add.s32 	%r11603, %r11602, %r11591;
	shf.l.wrap.b32 	%r11604, %r11542, %r11542, 15;
	shf.l.wrap.b32 	%r11605, %r11542, %r11542, 13;
	xor.b32  	%r11606, %r11604, %r11605;
	shr.u32 	%r11607, %r11542, 10;
	xor.b32  	%r11608, %r11606, %r11607;
	shf.l.wrap.b32 	%r11609, %r11061, %r11061, 25;
	shf.l.wrap.b32 	%r11610, %r11061, %r11061, 14;
	xor.b32  	%r11611, %r11609, %r11610;
	shr.u32 	%r11612, %r11061, 3;
	xor.b32  	%r11613, %r11611, %r11612;
	add.s32 	%r11614, %r11613, %r11024;
	add.s32 	%r11615, %r11614, %r11357;
	add.s32 	%r11616, %r11615, %r11608;
	add.s32 	%r11617, %r11616, %r11481;
	xor.b32  	%r11618, %r11555, %r11518;
	and.b32  	%r11619, %r11592, %r11618;
	xor.b32  	%r11620, %r11619, %r11518;
	add.s32 	%r11621, %r11617, %r11620;
	shf.l.wrap.b32 	%r11622, %r11592, %r11592, 18;
	xor.b32  	%r11623, %r11622, %r11592;
	shf.l.wrap.b32 	%r11624, %r11623, %r11623, 27;
	xor.b32  	%r11625, %r11624, %r11592;
	shf.l.wrap.b32 	%r11626, %r11625, %r11625, 26;
	add.s32 	%r11627, %r11621, %r11626;
	add.s32 	%r11628, %r11627, 506948616;
	add.s32 	%r11629, %r11628, %r11492;
	shf.l.wrap.b32 	%r11630, %r11603, %r11603, 23;
	xor.b32  	%r11631, %r11630, %r11603;
	shf.l.wrap.b32 	%r11632, %r11631, %r11631, 21;
	xor.b32  	%r11633, %r11632, %r11603;
	shf.l.wrap.b32 	%r11634, %r11633, %r11633, 30;
	and.b32  	%r11635, %r11603, %r11566;
	or.b32  	%r11636, %r11603, %r11566;
	and.b32  	%r11637, %r11636, %r11529;
	or.b32  	%r11638, %r11637, %r11635;
	add.s32 	%r11639, %r11634, %r11638;
	add.s32 	%r11640, %r11639, %r11628;
	shf.l.wrap.b32 	%r11641, %r11579, %r11579, 15;
	shf.l.wrap.b32 	%r11642, %r11579, %r11579, 13;
	xor.b32  	%r11643, %r11641, %r11642;
	shr.u32 	%r11644, %r11579, 10;
	xor.b32  	%r11645, %r11643, %r11644;
	shf.l.wrap.b32 	%r11646, %r11098, %r11098, 25;
	shf.l.wrap.b32 	%r11647, %r11098, %r11098, 14;
	xor.b32  	%r11648, %r11646, %r11647;
	shr.u32 	%r11649, %r11098, 3;
	xor.b32  	%r11650, %r11648, %r11649;
	add.s32 	%r11651, %r11650, %r11061;
	add.s32 	%r11652, %r11651, %r11394;
	add.s32 	%r11653, %r11652, %r11645;
	add.s32 	%r11654, %r11653, %r11518;
	xor.b32  	%r11655, %r11592, %r11555;
	and.b32  	%r11656, %r11629, %r11655;
	xor.b32  	%r11657, %r11656, %r11555;
	add.s32 	%r11658, %r11654, %r11657;
	shf.l.wrap.b32 	%r11659, %r11629, %r11629, 18;
	xor.b32  	%r11660, %r11659, %r11629;
	shf.l.wrap.b32 	%r11661, %r11660, %r11660, 27;
	xor.b32  	%r11662, %r11661, %r11629;
	shf.l.wrap.b32 	%r11663, %r11662, %r11662, 26;
	add.s32 	%r11664, %r11658, %r11663;
	add.s32 	%r11665, %r11664, 659060556;
	add.s32 	%r11666, %r11665, %r11529;
	shf.l.wrap.b32 	%r11667, %r11640, %r11640, 23;
	xor.b32  	%r11668, %r11667, %r11640;
	shf.l.wrap.b32 	%r11669, %r11668, %r11668, 21;
	xor.b32  	%r11670, %r11669, %r11640;
	shf.l.wrap.b32 	%r11671, %r11670, %r11670, 30;
	and.b32  	%r11672, %r11640, %r11603;
	or.b32  	%r11673, %r11640, %r11603;
	and.b32  	%r11674, %r11673, %r11566;
	or.b32  	%r11675, %r11674, %r11672;
	add.s32 	%r11676, %r11671, %r11675;
	add.s32 	%r11677, %r11676, %r11665;
	shf.l.wrap.b32 	%r11678, %r11616, %r11616, 15;
	shf.l.wrap.b32 	%r11679, %r11616, %r11616, 13;
	xor.b32  	%r11680, %r11678, %r11679;
	shr.u32 	%r11681, %r11616, 10;
	xor.b32  	%r11682, %r11680, %r11681;
	shf.l.wrap.b32 	%r11683, %r11135, %r11135, 25;
	shf.l.wrap.b32 	%r11684, %r11135, %r11135, 14;
	xor.b32  	%r11685, %r11683, %r11684;
	shr.u32 	%r11686, %r11135, 3;
	xor.b32  	%r11687, %r11685, %r11686;
	add.s32 	%r11688, %r11687, %r11098;
	add.s32 	%r11689, %r11688, %r11431;
	add.s32 	%r11690, %r11689, %r11682;
	add.s32 	%r11691, %r11690, %r11555;
	xor.b32  	%r11692, %r11629, %r11592;
	and.b32  	%r11693, %r11666, %r11692;
	xor.b32  	%r11694, %r11693, %r11592;
	add.s32 	%r11695, %r11691, %r11694;
	shf.l.wrap.b32 	%r11696, %r11666, %r11666, 18;
	xor.b32  	%r11697, %r11696, %r11666;
	shf.l.wrap.b32 	%r11698, %r11697, %r11697, 27;
	xor.b32  	%r11699, %r11698, %r11666;
	shf.l.wrap.b32 	%r11700, %r11699, %r11699, 26;
	add.s32 	%r11701, %r11695, %r11700;
	add.s32 	%r11702, %r11701, 883997877;
	add.s32 	%r11703, %r11702, %r11566;
	shf.l.wrap.b32 	%r11704, %r11677, %r11677, 23;
	xor.b32  	%r11705, %r11704, %r11677;
	shf.l.wrap.b32 	%r11706, %r11705, %r11705, 21;
	xor.b32  	%r11707, %r11706, %r11677;
	shf.l.wrap.b32 	%r11708, %r11707, %r11707, 30;
	and.b32  	%r11709, %r11677, %r11640;
	or.b32  	%r11710, %r11677, %r11640;
	and.b32  	%r11711, %r11710, %r11603;
	or.b32  	%r11712, %r11711, %r11709;
	add.s32 	%r11713, %r11708, %r11712;
	add.s32 	%r11714, %r11713, %r11702;
	shf.l.wrap.b32 	%r11715, %r11653, %r11653, 15;
	shf.l.wrap.b32 	%r11716, %r11653, %r11653, 13;
	xor.b32  	%r11717, %r11715, %r11716;
	shr.u32 	%r11718, %r11653, 10;
	xor.b32  	%r11719, %r11717, %r11718;
	shf.l.wrap.b32 	%r11720, %r11172, %r11172, 25;
	shf.l.wrap.b32 	%r11721, %r11172, %r11172, 14;
	xor.b32  	%r11722, %r11720, %r11721;
	shr.u32 	%r11723, %r11172, 3;
	xor.b32  	%r11724, %r11722, %r11723;
	add.s32 	%r11725, %r11724, %r11135;
	add.s32 	%r11726, %r11725, %r11468;
	add.s32 	%r11727, %r11726, %r11719;
	add.s32 	%r11728, %r11727, %r11592;
	xor.b32  	%r11729, %r11666, %r11629;
	and.b32  	%r11730, %r11703, %r11729;
	xor.b32  	%r11731, %r11730, %r11629;
	add.s32 	%r11732, %r11728, %r11731;
	shf.l.wrap.b32 	%r11733, %r11703, %r11703, 18;
	xor.b32  	%r11734, %r11733, %r11703;
	shf.l.wrap.b32 	%r11735, %r11734, %r11734, 27;
	xor.b32  	%r11736, %r11735, %r11703;
	shf.l.wrap.b32 	%r11737, %r11736, %r11736, 26;
	add.s32 	%r11738, %r11732, %r11737;
	add.s32 	%r11739, %r11738, 958139571;
	add.s32 	%r11740, %r11739, %r11603;
	shf.l.wrap.b32 	%r11741, %r11714, %r11714, 23;
	xor.b32  	%r11742, %r11741, %r11714;
	shf.l.wrap.b32 	%r11743, %r11742, %r11742, 21;
	xor.b32  	%r11744, %r11743, %r11714;
	shf.l.wrap.b32 	%r11745, %r11744, %r11744, 30;
	and.b32  	%r11746, %r11714, %r11677;
	or.b32  	%r11747, %r11714, %r11677;
	and.b32  	%r11748, %r11747, %r11640;
	or.b32  	%r11749, %r11748, %r11746;
	add.s32 	%r11750, %r11745, %r11749;
	add.s32 	%r11751, %r11750, %r11739;
	shf.l.wrap.b32 	%r11752, %r11690, %r11690, 15;
	shf.l.wrap.b32 	%r11753, %r11690, %r11690, 13;
	xor.b32  	%r11754, %r11752, %r11753;
	shr.u32 	%r11755, %r11690, 10;
	xor.b32  	%r11756, %r11754, %r11755;
	shf.l.wrap.b32 	%r11757, %r11209, %r11209, 25;
	shf.l.wrap.b32 	%r11758, %r11209, %r11209, 14;
	xor.b32  	%r11759, %r11757, %r11758;
	shr.u32 	%r11760, %r11209, 3;
	xor.b32  	%r11761, %r11759, %r11760;
	add.s32 	%r11762, %r11761, %r11172;
	add.s32 	%r11763, %r11762, %r11505;
	add.s32 	%r11764, %r11763, %r11756;
	add.s32 	%r11765, %r11764, %r11629;
	xor.b32  	%r11766, %r11703, %r11666;
	and.b32  	%r11767, %r11740, %r11766;
	xor.b32  	%r11768, %r11767, %r11666;
	add.s32 	%r11769, %r11765, %r11768;
	shf.l.wrap.b32 	%r11770, %r11740, %r11740, 18;
	xor.b32  	%r11771, %r11770, %r11740;
	shf.l.wrap.b32 	%r11772, %r11771, %r11771, 27;
	xor.b32  	%r11773, %r11772, %r11740;
	shf.l.wrap.b32 	%r11774, %r11773, %r11773, 26;
	add.s32 	%r11775, %r11769, %r11774;
	add.s32 	%r11776, %r11775, 1322822218;
	add.s32 	%r11777, %r11776, %r11640;
	shf.l.wrap.b32 	%r11778, %r11751, %r11751, 23;
	xor.b32  	%r11779, %r11778, %r11751;
	shf.l.wrap.b32 	%r11780, %r11779, %r11779, 21;
	xor.b32  	%r11781, %r11780, %r11751;
	shf.l.wrap.b32 	%r11782, %r11781, %r11781, 30;
	and.b32  	%r11783, %r11751, %r11714;
	or.b32  	%r11784, %r11751, %r11714;
	and.b32  	%r11785, %r11784, %r11677;
	or.b32  	%r11786, %r11785, %r11783;
	add.s32 	%r11787, %r11782, %r11786;
	add.s32 	%r11788, %r11787, %r11776;
	shf.l.wrap.b32 	%r11789, %r11727, %r11727, 15;
	shf.l.wrap.b32 	%r11790, %r11727, %r11727, 13;
	xor.b32  	%r11791, %r11789, %r11790;
	shr.u32 	%r11792, %r11727, 10;
	xor.b32  	%r11793, %r11791, %r11792;
	shf.l.wrap.b32 	%r11794, %r11246, %r11246, 25;
	shf.l.wrap.b32 	%r11795, %r11246, %r11246, 14;
	xor.b32  	%r11796, %r11794, %r11795;
	shr.u32 	%r11797, %r11246, 3;
	xor.b32  	%r11798, %r11796, %r11797;
	add.s32 	%r11799, %r11798, %r11209;
	add.s32 	%r11800, %r11799, %r11542;
	add.s32 	%r11801, %r11800, %r11793;
	add.s32 	%r11802, %r11801, %r11666;
	xor.b32  	%r11803, %r11740, %r11703;
	and.b32  	%r11804, %r11777, %r11803;
	xor.b32  	%r11805, %r11804, %r11703;
	add.s32 	%r11806, %r11802, %r11805;
	shf.l.wrap.b32 	%r11807, %r11777, %r11777, 18;
	xor.b32  	%r11808, %r11807, %r11777;
	shf.l.wrap.b32 	%r11809, %r11808, %r11808, 27;
	xor.b32  	%r11810, %r11809, %r11777;
	shf.l.wrap.b32 	%r11811, %r11810, %r11810, 26;
	add.s32 	%r11812, %r11806, %r11811;
	add.s32 	%r11813, %r11812, 1537002063;
	add.s32 	%r11814, %r11813, %r11677;
	shf.l.wrap.b32 	%r11815, %r11788, %r11788, 23;
	xor.b32  	%r11816, %r11815, %r11788;
	shf.l.wrap.b32 	%r11817, %r11816, %r11816, 21;
	xor.b32  	%r11818, %r11817, %r11788;
	shf.l.wrap.b32 	%r11819, %r11818, %r11818, 30;
	and.b32  	%r11820, %r11788, %r11751;
	or.b32  	%r11821, %r11788, %r11751;
	and.b32  	%r11822, %r11821, %r11714;
	or.b32  	%r11823, %r11822, %r11820;
	add.s32 	%r11824, %r11819, %r11823;
	add.s32 	%r11825, %r11824, %r11813;
	shf.l.wrap.b32 	%r11826, %r11764, %r11764, 15;
	shf.l.wrap.b32 	%r11827, %r11764, %r11764, 13;
	xor.b32  	%r11828, %r11826, %r11827;
	shr.u32 	%r11829, %r11764, 10;
	xor.b32  	%r11830, %r11828, %r11829;
	shf.l.wrap.b32 	%r11831, %r11283, %r11283, 25;
	shf.l.wrap.b32 	%r11832, %r11283, %r11283, 14;
	xor.b32  	%r11833, %r11831, %r11832;
	shr.u32 	%r11834, %r11283, 3;
	xor.b32  	%r11835, %r11833, %r11834;
	add.s32 	%r11836, %r11835, %r11246;
	add.s32 	%r11837, %r11836, %r11579;
	add.s32 	%r11838, %r11837, %r11830;
	add.s32 	%r11839, %r11838, %r11703;
	xor.b32  	%r11840, %r11777, %r11740;
	and.b32  	%r11841, %r11814, %r11840;
	xor.b32  	%r11842, %r11841, %r11740;
	add.s32 	%r11843, %r11839, %r11842;
	shf.l.wrap.b32 	%r11844, %r11814, %r11814, 18;
	xor.b32  	%r11845, %r11844, %r11814;
	shf.l.wrap.b32 	%r11846, %r11845, %r11845, 27;
	xor.b32  	%r11847, %r11846, %r11814;
	shf.l.wrap.b32 	%r11848, %r11847, %r11847, 26;
	add.s32 	%r11849, %r11843, %r11848;
	add.s32 	%r11850, %r11849, 1747873779;
	add.s32 	%r11851, %r11850, %r11714;
	shf.l.wrap.b32 	%r11852, %r11825, %r11825, 23;
	xor.b32  	%r11853, %r11852, %r11825;
	shf.l.wrap.b32 	%r11854, %r11853, %r11853, 21;
	xor.b32  	%r11855, %r11854, %r11825;
	shf.l.wrap.b32 	%r11856, %r11855, %r11855, 30;
	and.b32  	%r11857, %r11825, %r11788;
	or.b32  	%r11858, %r11825, %r11788;
	and.b32  	%r11859, %r11858, %r11751;
	or.b32  	%r11860, %r11859, %r11857;
	add.s32 	%r11861, %r11856, %r11860;
	add.s32 	%r11862, %r11861, %r11850;
	shf.l.wrap.b32 	%r11863, %r11801, %r11801, 15;
	shf.l.wrap.b32 	%r11864, %r11801, %r11801, 13;
	xor.b32  	%r11865, %r11863, %r11864;
	shr.u32 	%r11866, %r11801, 10;
	xor.b32  	%r11867, %r11865, %r11866;
	shf.l.wrap.b32 	%r11868, %r11320, %r11320, 25;
	shf.l.wrap.b32 	%r11869, %r11320, %r11320, 14;
	xor.b32  	%r11870, %r11868, %r11869;
	shr.u32 	%r11871, %r11320, 3;
	xor.b32  	%r11872, %r11870, %r11871;
	add.s32 	%r11873, %r11872, %r11283;
	add.s32 	%r11874, %r11873, %r11616;
	add.s32 	%r11875, %r11874, %r11867;
	add.s32 	%r11876, %r11875, %r11740;
	xor.b32  	%r11877, %r11814, %r11777;
	and.b32  	%r11878, %r11851, %r11877;
	xor.b32  	%r11879, %r11878, %r11777;
	add.s32 	%r11880, %r11876, %r11879;
	shf.l.wrap.b32 	%r11881, %r11851, %r11851, 18;
	xor.b32  	%r11882, %r11881, %r11851;
	shf.l.wrap.b32 	%r11883, %r11882, %r11882, 27;
	xor.b32  	%r11884, %r11883, %r11851;
	shf.l.wrap.b32 	%r11885, %r11884, %r11884, 26;
	add.s32 	%r11886, %r11880, %r11885;
	add.s32 	%r11887, %r11886, 1955562222;
	add.s32 	%r11888, %r11887, %r11751;
	shf.l.wrap.b32 	%r11889, %r11862, %r11862, 23;
	xor.b32  	%r11890, %r11889, %r11862;
	shf.l.wrap.b32 	%r11891, %r11890, %r11890, 21;
	xor.b32  	%r11892, %r11891, %r11862;
	shf.l.wrap.b32 	%r11893, %r11892, %r11892, 30;
	and.b32  	%r11894, %r11862, %r11825;
	or.b32  	%r11895, %r11862, %r11825;
	and.b32  	%r11896, %r11895, %r11788;
	or.b32  	%r11897, %r11896, %r11894;
	add.s32 	%r11898, %r11893, %r11897;
	add.s32 	%r11899, %r11898, %r11887;
	shf.l.wrap.b32 	%r11900, %r11838, %r11838, 15;
	shf.l.wrap.b32 	%r11901, %r11838, %r11838, 13;
	xor.b32  	%r11902, %r11900, %r11901;
	shr.u32 	%r11903, %r11838, 10;
	xor.b32  	%r11904, %r11902, %r11903;
	shf.l.wrap.b32 	%r11905, %r11357, %r11357, 25;
	shf.l.wrap.b32 	%r11906, %r11357, %r11357, 14;
	xor.b32  	%r11907, %r11905, %r11906;
	shr.u32 	%r11908, %r11357, 3;
	xor.b32  	%r11909, %r11907, %r11908;
	add.s32 	%r11910, %r11909, %r11320;
	add.s32 	%r11911, %r11910, %r11653;
	add.s32 	%r11912, %r11911, %r11904;
	add.s32 	%r11913, %r11912, %r11777;
	xor.b32  	%r11914, %r11851, %r11814;
	and.b32  	%r11915, %r11888, %r11914;
	xor.b32  	%r11916, %r11915, %r11814;
	add.s32 	%r11917, %r11913, %r11916;
	shf.l.wrap.b32 	%r11918, %r11888, %r11888, 18;
	xor.b32  	%r11919, %r11918, %r11888;
	shf.l.wrap.b32 	%r11920, %r11919, %r11919, 27;
	xor.b32  	%r11921, %r11920, %r11888;
	shf.l.wrap.b32 	%r11922, %r11921, %r11921, 26;
	add.s32 	%r11923, %r11917, %r11922;
	add.s32 	%r11924, %r11923, 2024104815;
	add.s32 	%r11925, %r11924, %r11788;
	shf.l.wrap.b32 	%r11926, %r11899, %r11899, 23;
	xor.b32  	%r11927, %r11926, %r11899;
	shf.l.wrap.b32 	%r11928, %r11927, %r11927, 21;
	xor.b32  	%r11929, %r11928, %r11899;
	shf.l.wrap.b32 	%r11930, %r11929, %r11929, 30;
	and.b32  	%r11931, %r11899, %r11862;
	or.b32  	%r11932, %r11899, %r11862;
	and.b32  	%r11933, %r11932, %r11825;
	or.b32  	%r11934, %r11933, %r11931;
	add.s32 	%r11935, %r11930, %r11934;
	add.s32 	%r11936, %r11935, %r11924;
	shf.l.wrap.b32 	%r11937, %r11875, %r11875, 15;
	shf.l.wrap.b32 	%r11938, %r11875, %r11875, 13;
	xor.b32  	%r11939, %r11937, %r11938;
	shr.u32 	%r11940, %r11875, 10;
	xor.b32  	%r11941, %r11939, %r11940;
	shf.l.wrap.b32 	%r11942, %r11394, %r11394, 25;
	shf.l.wrap.b32 	%r11943, %r11394, %r11394, 14;
	xor.b32  	%r11944, %r11942, %r11943;
	shr.u32 	%r11945, %r11394, 3;
	xor.b32  	%r11946, %r11944, %r11945;
	add.s32 	%r11947, %r11946, %r11357;
	add.s32 	%r11948, %r11947, %r11690;
	add.s32 	%r11949, %r11948, %r11941;
	add.s32 	%r11950, %r11949, %r11814;
	xor.b32  	%r11951, %r11888, %r11851;
	and.b32  	%r11952, %r11925, %r11951;
	xor.b32  	%r11953, %r11952, %r11851;
	add.s32 	%r11954, %r11950, %r11953;
	shf.l.wrap.b32 	%r11955, %r11925, %r11925, 18;
	xor.b32  	%r11956, %r11955, %r11925;
	shf.l.wrap.b32 	%r11957, %r11956, %r11956, 27;
	xor.b32  	%r11958, %r11957, %r11925;
	shf.l.wrap.b32 	%r11959, %r11958, %r11958, 26;
	add.s32 	%r11960, %r11954, %r11959;
	add.s32 	%r11961, %r11960, -2067236844;
	add.s32 	%r11962, %r11961, %r11825;
	shf.l.wrap.b32 	%r11963, %r11936, %r11936, 23;
	xor.b32  	%r11964, %r11963, %r11936;
	shf.l.wrap.b32 	%r11965, %r11964, %r11964, 21;
	xor.b32  	%r11966, %r11965, %r11936;
	shf.l.wrap.b32 	%r11967, %r11966, %r11966, 30;
	and.b32  	%r11968, %r11936, %r11899;
	or.b32  	%r11969, %r11936, %r11899;
	and.b32  	%r11970, %r11969, %r11862;
	or.b32  	%r11971, %r11970, %r11968;
	add.s32 	%r11972, %r11967, %r11971;
	add.s32 	%r11973, %r11972, %r11961;
	shf.l.wrap.b32 	%r11974, %r11912, %r11912, 15;
	shf.l.wrap.b32 	%r11975, %r11912, %r11912, 13;
	xor.b32  	%r11976, %r11974, %r11975;
	shr.u32 	%r11977, %r11912, 10;
	xor.b32  	%r11978, %r11976, %r11977;
	shf.l.wrap.b32 	%r11979, %r11431, %r11431, 25;
	shf.l.wrap.b32 	%r11980, %r11431, %r11431, 14;
	xor.b32  	%r11981, %r11979, %r11980;
	shr.u32 	%r11982, %r11431, 3;
	xor.b32  	%r11983, %r11981, %r11982;
	add.s32 	%r11984, %r11983, %r11394;
	add.s32 	%r11985, %r11984, %r11727;
	add.s32 	%r11986, %r11985, %r11978;
	add.s32 	%r11987, %r11986, %r11851;
	xor.b32  	%r11988, %r11925, %r11888;
	and.b32  	%r11989, %r11962, %r11988;
	xor.b32  	%r11990, %r11989, %r11888;
	add.s32 	%r11991, %r11987, %r11990;
	shf.l.wrap.b32 	%r11992, %r11962, %r11962, 18;
	xor.b32  	%r11993, %r11992, %r11962;
	shf.l.wrap.b32 	%r11994, %r11993, %r11993, 27;
	xor.b32  	%r11995, %r11994, %r11962;
	shf.l.wrap.b32 	%r11996, %r11995, %r11995, 26;
	add.s32 	%r11997, %r11991, %r11996;
	add.s32 	%r11998, %r11997, -1933114872;
	add.s32 	%r11999, %r11998, %r11862;
	shf.l.wrap.b32 	%r12000, %r11973, %r11973, 23;
	xor.b32  	%r12001, %r12000, %r11973;
	shf.l.wrap.b32 	%r12002, %r12001, %r12001, 21;
	xor.b32  	%r12003, %r12002, %r11973;
	shf.l.wrap.b32 	%r12004, %r12003, %r12003, 30;
	and.b32  	%r12005, %r11973, %r11936;
	or.b32  	%r12006, %r11973, %r11936;
	and.b32  	%r12007, %r12006, %r11899;
	or.b32  	%r12008, %r12007, %r12005;
	add.s32 	%r12009, %r12004, %r12008;
	add.s32 	%r12010, %r12009, %r11998;
	shf.l.wrap.b32 	%r12011, %r11949, %r11949, 15;
	shf.l.wrap.b32 	%r12012, %r11949, %r11949, 13;
	xor.b32  	%r12013, %r12011, %r12012;
	shr.u32 	%r12014, %r11949, 10;
	xor.b32  	%r12015, %r12013, %r12014;
	shf.l.wrap.b32 	%r12016, %r11468, %r11468, 25;
	shf.l.wrap.b32 	%r12017, %r11468, %r11468, 14;
	xor.b32  	%r12018, %r12016, %r12017;
	shr.u32 	%r12019, %r11468, 3;
	xor.b32  	%r12020, %r12018, %r12019;
	add.s32 	%r12021, %r12020, %r11431;
	add.s32 	%r12022, %r12021, %r11764;
	add.s32 	%r12023, %r12022, %r12015;
	add.s32 	%r12024, %r12023, %r11888;
	xor.b32  	%r12025, %r11962, %r11925;
	and.b32  	%r12026, %r11999, %r12025;
	xor.b32  	%r12027, %r12026, %r11925;
	add.s32 	%r12028, %r12024, %r12027;
	shf.l.wrap.b32 	%r12029, %r11999, %r11999, 18;
	xor.b32  	%r12030, %r12029, %r11999;
	shf.l.wrap.b32 	%r12031, %r12030, %r12030, 27;
	xor.b32  	%r12032, %r12031, %r11999;
	shf.l.wrap.b32 	%r12033, %r12032, %r12032, 26;
	add.s32 	%r12034, %r12028, %r12033;
	add.s32 	%r12035, %r12034, -1866530822;
	add.s32 	%r12036, %r12035, %r11899;
	shf.l.wrap.b32 	%r12037, %r12010, %r12010, 23;
	xor.b32  	%r12038, %r12037, %r12010;
	shf.l.wrap.b32 	%r12039, %r12038, %r12038, 21;
	xor.b32  	%r12040, %r12039, %r12010;
	shf.l.wrap.b32 	%r12041, %r12040, %r12040, 30;
	and.b32  	%r12042, %r12010, %r11973;
	or.b32  	%r12043, %r12010, %r11973;
	and.b32  	%r12044, %r12043, %r11936;
	or.b32  	%r12045, %r12044, %r12042;
	add.s32 	%r12046, %r12041, %r12045;
	add.s32 	%r12047, %r12046, %r12035;
	shf.l.wrap.b32 	%r12048, %r11986, %r11986, 15;
	shf.l.wrap.b32 	%r12049, %r11986, %r11986, 13;
	xor.b32  	%r12050, %r12048, %r12049;
	shr.u32 	%r12051, %r11986, 10;
	xor.b32  	%r12052, %r12050, %r12051;
	shf.l.wrap.b32 	%r12053, %r11505, %r11505, 25;
	shf.l.wrap.b32 	%r12054, %r11505, %r11505, 14;
	xor.b32  	%r12055, %r12053, %r12054;
	shr.u32 	%r12056, %r11505, 3;
	xor.b32  	%r12057, %r12055, %r12056;
	add.s32 	%r12058, %r12057, %r11468;
	add.s32 	%r12059, %r12058, %r11801;
	add.s32 	%r12060, %r12059, %r12052;
	add.s32 	%r12061, %r12060, %r11925;
	xor.b32  	%r12062, %r11999, %r11962;
	and.b32  	%r12063, %r12036, %r12062;
	xor.b32  	%r12064, %r12063, %r11962;
	add.s32 	%r12065, %r12061, %r12064;
	shf.l.wrap.b32 	%r12066, %r12036, %r12036, 18;
	xor.b32  	%r12067, %r12066, %r12036;
	shf.l.wrap.b32 	%r12068, %r12067, %r12067, 27;
	xor.b32  	%r12069, %r12068, %r12036;
	shf.l.wrap.b32 	%r12070, %r12069, %r12069, 26;
	add.s32 	%r12071, %r12065, %r12070;
	add.s32 	%r12072, %r12071, -1538233109;
	add.s32 	%r12073, %r12072, %r11936;
	shf.l.wrap.b32 	%r12074, %r12047, %r12047, 23;
	xor.b32  	%r12075, %r12074, %r12047;
	shf.l.wrap.b32 	%r12076, %r12075, %r12075, 21;
	xor.b32  	%r12077, %r12076, %r12047;
	shf.l.wrap.b32 	%r12078, %r12077, %r12077, 30;
	and.b32  	%r12079, %r12047, %r12010;
	or.b32  	%r12080, %r12047, %r12010;
	and.b32  	%r12081, %r12080, %r11973;
	or.b32  	%r12082, %r12081, %r12079;
	add.s32 	%r12083, %r12078, %r12082;
	add.s32 	%r12084, %r12083, %r12072;
	shf.l.wrap.b32 	%r12085, %r12023, %r12023, 15;
	shf.l.wrap.b32 	%r12086, %r12023, %r12023, 13;
	xor.b32  	%r12087, %r12085, %r12086;
	shr.u32 	%r12088, %r12023, 10;
	xor.b32  	%r12089, %r12087, %r12088;
	shf.l.wrap.b32 	%r12090, %r11542, %r11542, 25;
	shf.l.wrap.b32 	%r12091, %r11542, %r11542, 14;
	xor.b32  	%r12092, %r12090, %r12091;
	shr.u32 	%r12093, %r11542, 3;
	xor.b32  	%r12094, %r12092, %r12093;
	shf.l.wrap.b32 	%r12095, %r12073, %r12073, 18;
	xor.b32  	%r12096, %r12095, %r12073;
	shf.l.wrap.b32 	%r12097, %r12096, %r12096, 27;
	xor.b32  	%r12098, %r12097, %r12073;
	shf.l.wrap.b32 	%r12099, %r12098, %r12098, 26;
	xor.b32  	%r12100, %r12036, %r11999;
	and.b32  	%r12101, %r12073, %r12100;
	xor.b32  	%r12102, %r12101, %r11999;
	add.s32 	%r12103, %r11505, %r12094;
	add.s32 	%r12104, %r12103, %r11838;
	add.s32 	%r12105, %r12104, %r12089;
	add.s32 	%r12106, %r12105, %r11962;
	add.s32 	%r12107, %r12106, %r12102;
	add.s32 	%r12108, %r12107, %r12099;
	add.s32 	%r12109, %r12108, -1090935817;
	add.s32 	%r12110, %r12109, %r11973;
	shf.l.wrap.b32 	%r12111, %r12084, %r12084, 23;
	xor.b32  	%r12112, %r12111, %r12084;
	shf.l.wrap.b32 	%r12113, %r12112, %r12112, 21;
	xor.b32  	%r12114, %r12113, %r12084;
	shf.l.wrap.b32 	%r12115, %r12114, %r12114, 30;
	and.b32  	%r12116, %r12084, %r12047;
	or.b32  	%r12117, %r12084, %r12047;
	and.b32  	%r12118, %r12117, %r12010;
	or.b32  	%r12119, %r12118, %r12116;
	add.s32 	%r12120, %r12115, %r12119;
	add.s32 	%r12121, %r12120, %r12109;
	shf.l.wrap.b32 	%r12122, %r12060, %r12060, 15;
	shf.l.wrap.b32 	%r12123, %r12060, %r12060, 13;
	xor.b32  	%r12124, %r12122, %r12123;
	shr.u32 	%r12125, %r12060, 10;
	xor.b32  	%r12126, %r12124, %r12125;
	shf.l.wrap.b32 	%r12127, %r11579, %r11579, 25;
	shf.l.wrap.b32 	%r12128, %r11579, %r11579, 14;
	xor.b32  	%r12129, %r12127, %r12128;
	shr.u32 	%r12130, %r11579, 3;
	xor.b32  	%r12131, %r12129, %r12130;
	shf.l.wrap.b32 	%r12132, %r12110, %r12110, 18;
	xor.b32  	%r12133, %r12132, %r12110;
	shf.l.wrap.b32 	%r12134, %r12133, %r12133, 27;
	xor.b32  	%r12135, %r12134, %r12110;
	shf.l.wrap.b32 	%r12136, %r12135, %r12135, 26;
	xor.b32  	%r12137, %r12073, %r12036;
	and.b32  	%r12138, %r12110, %r12137;
	xor.b32  	%r12139, %r12138, %r12036;
	add.s32 	%r12140, %r11542, %r12131;
	add.s32 	%r12141, %r12140, %r11875;
	add.s32 	%r12142, %r12141, %r12126;
	add.s32 	%r12143, %r12142, %r11999;
	add.s32 	%r12144, %r12143, %r12139;
	add.s32 	%r12145, %r12144, %r12136;
	add.s32 	%r12146, %r12145, -965641998;
	shf.l.wrap.b32 	%r12147, %r12121, %r12121, 23;
	xor.b32  	%r12148, %r12147, %r12121;
	shf.l.wrap.b32 	%r12149, %r12148, %r12148, 21;
	xor.b32  	%r12150, %r12149, %r12121;
	shf.l.wrap.b32 	%r12151, %r12150, %r12150, 30;
	and.b32  	%r12152, %r12121, %r12084;
	or.b32  	%r12153, %r12121, %r12084;
	and.b32  	%r12154, %r12153, %r12047;
	or.b32  	%r12155, %r12154, %r12152;
	add.s32 	%r12156, %r12155, %r10009;
	add.s32 	%r12157, %r12156, %r12151;
	add.s32 	%r12158, %r12157, %r12146;
	st.local.u32 	[%rd5+4], %r12158;
	add.s32 	%r12159, %r12121, %r10015;
	st.local.u32 	[%rd5+8], %r12159;
	add.s32 	%r12160, %r12084, %r10018;
	st.local.u32 	[%rd5+12], %r12160;
	add.s32 	%r12161, %r12047, %r10007;
	st.local.u32 	[%rd5+16], %r12161;
	add.s32 	%r12162, %r12010, %r9993;
	add.s32 	%r12163, %r12162, %r12146;
	st.local.u32 	[%rd5+20], %r12163;
	add.s32 	%r12164, %r12110, %r10001;
	st.local.u32 	[%rd5+24], %r12164;
	add.s32 	%r12165, %r12073, %r10000;
	st.local.u32 	[%rd5+28], %r12165;
	add.s32 	%r12166, %r12036, %r9991;
	st.local.u32 	[%rd5+32], %r12166;
	add.s64 	%rd273, %rd273, 64;
	add.s64 	%rd271, %rd271, 64;
	add.s32 	%r17066, %r17066, -64;
	setp.gt.u32 	%p50, %r17066, 63;
	@%p50 bra 	$L__BB6_57;

$L__BB6_61:
	setp.eq.s32 	%p51, %r17066, 0;
	@%p51 bra 	$L__BB6_67;

	cvt.u64.u32 	%rd189, %r17047;
	add.s64 	%rd190, %rd5, %rd189;
	add.s64 	%rd278, %rd190, 36;
	and.b32  	%r17068, %r17066, 3;
	setp.eq.s32 	%p52, %r17068, 0;
	mov.u32 	%r17069, %r17066;
	@%p52 bra 	$L__BB6_65;

	mov.u64 	%rd274, %rd278;
	mov.u64 	%rd275, %rd273;
	mov.u32 	%r17069, %r17066;

$L__BB6_64:
	.pragma "nounroll";
	add.s32 	%r17069, %r17069, -1;
	add.s64 	%rd273, %rd275, 1;
	ld.local.u8 	%rs152, [%rd275];
	add.s64 	%rd278, %rd274, 1;
	st.local.u8 	[%rd274], %rs152;
	add.s32 	%r17068, %r17068, -1;
	setp.ne.s32 	%p53, %r17068, 0;
	mov.u64 	%rd274, %rd278;
	mov.u64 	%rd275, %rd273;
	@%p53 bra 	$L__BB6_64;

$L__BB6_65:
	add.s32 	%r12167, %r17066, -1;
	setp.lt.u32 	%p54, %r12167, 3;
	@%p54 bra 	$L__BB6_67;

$L__BB6_66:
	ld.local.u8 	%rs153, [%rd273];
	st.local.u8 	[%rd278], %rs153;
	ld.local.u8 	%rs154, [%rd273+1];
	st.local.u8 	[%rd278+1], %rs154;
	ld.local.u8 	%rs155, [%rd273+2];
	st.local.u8 	[%rd278+2], %rs155;
	add.s64 	%rd125, %rd273, 4;
	ld.local.u8 	%rs156, [%rd273+3];
	add.s64 	%rd126, %rd278, 4;
	st.local.u8 	[%rd278+3], %rs156;
	add.s32 	%r17069, %r17069, -4;
	setp.ne.s32 	%p55, %r17069, 0;
	mov.u64 	%rd278, %rd126;
	mov.u64 	%rd273, %rd125;
	@%p55 bra 	$L__BB6_66;

$L__BB6_67:
	add.u64 	%rd290, %SPL, 0;
	add.u64 	%rd288, %SP, 0;
	ld.local.u32 	%r12169, [%rd5];
	and.b32  	%r17075, %r12169, 63;
	mov.u32 	%r12170, 64;
	sub.s32 	%r243, %r12170, %r17075;
	add.s32 	%r12171, %r12169, 8;
	mov.u32 	%r17094, 8;
	st.local.u32 	[%rd5], %r12171;
	setp.eq.s32 	%p56, %r17075, 0;
	setp.gt.u32 	%p57, %r243, 8;
	or.pred  	%p58, %p56, %p57;
	@%p58 bra 	$L__BB6_75;

	setp.eq.s32 	%p59, %r243, 0;
	@%p59 bra 	$L__BB6_74;

	add.u64 	%rd285, %SPL, 0;
	cvt.u64.u32 	%rd191, %r17075;
	add.s64 	%rd192, %rd5, %rd191;
	add.s64 	%rd284, %rd192, 36;
	and.b32  	%r17072, %r243, 3;
	setp.eq.s32 	%p60, %r17072, 0;
	mov.u32 	%r17073, %r243;
	@%p60 bra 	$L__BB6_72;

	add.u64 	%rd281, %SPL, 0;
	mov.u64 	%rd280, %rd284;
	mov.u32 	%r17073, %r243;

$L__BB6_71:
	.pragma "nounroll";
	add.s32 	%r17073, %r17073, -1;
	add.s64 	%rd285, %rd281, 1;
	ld.local.u8 	%rs157, [%rd281];
	add.s64 	%rd284, %rd280, 1;
	st.local.u8 	[%rd280], %rs157;
	add.s32 	%r17072, %r17072, -1;
	setp.ne.s32 	%p61, %r17072, 0;
	mov.u64 	%rd280, %rd284;
	mov.u64 	%rd281, %rd285;
	@%p61 bra 	$L__BB6_71;

$L__BB6_72:
	xor.b32  	%r12172, %r17075, 63;
	setp.lt.u32 	%p62, %r12172, 3;
	@%p62 bra 	$L__BB6_74;

$L__BB6_73:
	ld.local.u8 	%rs158, [%rd285];
	st.local.u8 	[%rd284], %rs158;
	ld.local.u8 	%rs159, [%rd285+1];
	st.local.u8 	[%rd284+1], %rs159;
	ld.local.u8 	%rs160, [%rd285+2];
	st.local.u8 	[%rd284+2], %rs160;
	add.s64 	%rd140, %rd285, 4;
	ld.local.u8 	%rs161, [%rd285+3];
	add.s64 	%rd141, %rd284, 4;
	st.local.u8 	[%rd284+3], %rs161;
	add.s32 	%r17073, %r17073, -4;
	setp.ne.s32 	%p63, %r17073, 0;
	mov.u64 	%rd284, %rd141;
	mov.u64 	%rd285, %rd140;
	@%p63 bra 	$L__BB6_73;

$L__BB6_74:
	add.u64 	%rd214, %SPL, 0;
	ld.local.u32 	%r12174, [%rd5+36];
	shf.l.wrap.b32 	%r12175, %r12174, %r12174, 16;
	shl.b32 	%r12176, %r12175, 8;
	and.b32  	%r12177, %r12176, -16711936;
	mov.u32 	%r12178, 8;
	shr.u32 	%r12179, %r12175, 8;
	and.b32  	%r12180, %r12179, 16711935;
	or.b32  	%r12181, %r12177, %r12180;
	ld.local.u32 	%r12182, [%rd5+40];
	shf.l.wrap.b32 	%r12183, %r12182, %r12182, 16;
	shl.b32 	%r12184, %r12183, 8;
	and.b32  	%r12185, %r12184, -16711936;
	shr.u32 	%r12186, %r12183, 8;
	and.b32  	%r12187, %r12186, 16711935;
	or.b32  	%r12188, %r12185, %r12187;
	ld.local.u32 	%r12189, [%rd5+44];
	shf.l.wrap.b32 	%r12190, %r12189, %r12189, 16;
	shl.b32 	%r12191, %r12190, 8;
	and.b32  	%r12192, %r12191, -16711936;
	shr.u32 	%r12193, %r12190, 8;
	and.b32  	%r12194, %r12193, 16711935;
	or.b32  	%r12195, %r12192, %r12194;
	ld.local.u32 	%r12196, [%rd5+48];
	shf.l.wrap.b32 	%r12197, %r12196, %r12196, 16;
	shl.b32 	%r12198, %r12197, 8;
	and.b32  	%r12199, %r12198, -16711936;
	shr.u32 	%r12200, %r12197, 8;
	and.b32  	%r12201, %r12200, 16711935;
	or.b32  	%r12202, %r12199, %r12201;
	ld.local.u32 	%r12203, [%rd5+52];
	shf.l.wrap.b32 	%r12204, %r12203, %r12203, 16;
	shl.b32 	%r12205, %r12204, 8;
	and.b32  	%r12206, %r12205, -16711936;
	shr.u32 	%r12207, %r12204, 8;
	and.b32  	%r12208, %r12207, 16711935;
	or.b32  	%r12209, %r12206, %r12208;
	ld.local.u32 	%r12210, [%rd5+56];
	shf.l.wrap.b32 	%r12211, %r12210, %r12210, 16;
	shl.b32 	%r12212, %r12211, 8;
	and.b32  	%r12213, %r12212, -16711936;
	shr.u32 	%r12214, %r12211, 8;
	and.b32  	%r12215, %r12214, 16711935;
	or.b32  	%r12216, %r12213, %r12215;
	ld.local.u32 	%r12217, [%rd5+60];
	shf.l.wrap.b32 	%r12218, %r12217, %r12217, 16;
	shl.b32 	%r12219, %r12218, 8;
	and.b32  	%r12220, %r12219, -16711936;
	shr.u32 	%r12221, %r12218, 8;
	and.b32  	%r12222, %r12221, 16711935;
	or.b32  	%r12223, %r12220, %r12222;
	ld.local.u32 	%r12224, [%rd5+64];
	shf.l.wrap.b32 	%r12225, %r12224, %r12224, 16;
	shl.b32 	%r12226, %r12225, 8;
	and.b32  	%r12227, %r12226, -16711936;
	shr.u32 	%r12228, %r12225, 8;
	and.b32  	%r12229, %r12228, 16711935;
	or.b32  	%r12230, %r12227, %r12229;
	ld.local.u32 	%r12231, [%rd5+68];
	shf.l.wrap.b32 	%r12232, %r12231, %r12231, 16;
	shl.b32 	%r12233, %r12232, 8;
	and.b32  	%r12234, %r12233, -16711936;
	shr.u32 	%r12235, %r12232, 8;
	and.b32  	%r12236, %r12235, 16711935;
	or.b32  	%r12237, %r12234, %r12236;
	ld.local.u32 	%r12238, [%rd5+72];
	shf.l.wrap.b32 	%r12239, %r12238, %r12238, 16;
	shl.b32 	%r12240, %r12239, 8;
	and.b32  	%r12241, %r12240, -16711936;
	shr.u32 	%r12242, %r12239, 8;
	and.b32  	%r12243, %r12242, 16711935;
	or.b32  	%r12244, %r12241, %r12243;
	ld.local.u32 	%r12245, [%rd5+76];
	shf.l.wrap.b32 	%r12246, %r12245, %r12245, 16;
	shl.b32 	%r12247, %r12246, 8;
	and.b32  	%r12248, %r12247, -16711936;
	shr.u32 	%r12249, %r12246, 8;
	and.b32  	%r12250, %r12249, 16711935;
	or.b32  	%r12251, %r12248, %r12250;
	ld.local.u32 	%r12252, [%rd5+80];
	shf.l.wrap.b32 	%r12253, %r12252, %r12252, 16;
	shl.b32 	%r12254, %r12253, 8;
	and.b32  	%r12255, %r12254, -16711936;
	shr.u32 	%r12256, %r12253, 8;
	and.b32  	%r12257, %r12256, 16711935;
	or.b32  	%r12258, %r12255, %r12257;
	ld.local.u32 	%r12259, [%rd5+84];
	shf.l.wrap.b32 	%r12260, %r12259, %r12259, 16;
	shl.b32 	%r12261, %r12260, 8;
	and.b32  	%r12262, %r12261, -16711936;
	shr.u32 	%r12263, %r12260, 8;
	and.b32  	%r12264, %r12263, 16711935;
	or.b32  	%r12265, %r12262, %r12264;
	ld.local.u32 	%r12266, [%rd5+88];
	shf.l.wrap.b32 	%r12267, %r12266, %r12266, 16;
	shl.b32 	%r12268, %r12267, 8;
	and.b32  	%r12269, %r12268, -16711936;
	shr.u32 	%r12270, %r12267, 8;
	and.b32  	%r12271, %r12270, 16711935;
	or.b32  	%r12272, %r12269, %r12271;
	ld.local.u32 	%r12273, [%rd5+92];
	shf.l.wrap.b32 	%r12274, %r12273, %r12273, 16;
	shl.b32 	%r12275, %r12274, 8;
	and.b32  	%r12276, %r12275, -16711936;
	shr.u32 	%r12277, %r12274, 8;
	and.b32  	%r12278, %r12277, 16711935;
	or.b32  	%r12279, %r12276, %r12278;
	ld.local.u32 	%r12280, [%rd5+96];
	shf.l.wrap.b32 	%r12281, %r12280, %r12280, 16;
	shl.b32 	%r12282, %r12281, 8;
	and.b32  	%r12283, %r12282, -16711936;
	shr.u32 	%r12284, %r12281, 8;
	and.b32  	%r12285, %r12284, 16711935;
	or.b32  	%r12286, %r12283, %r12285;
	ld.local.u32 	%r12287, [%rd5+32];
	add.s32 	%r12288, %r12181, %r12287;
	ld.local.u32 	%r12289, [%rd5+20];
	shf.l.wrap.b32 	%r12290, %r12289, %r12289, 18;
	xor.b32  	%r12291, %r12290, %r12289;
	shf.l.wrap.b32 	%r12292, %r12291, %r12291, 27;
	xor.b32  	%r12293, %r12292, %r12289;
	shf.l.wrap.b32 	%r12294, %r12293, %r12293, 26;
	add.s32 	%r12295, %r12288, %r12294;
	ld.local.u32 	%r12296, [%rd5+28];
	ld.local.u32 	%r12297, [%rd5+24];
	xor.b32  	%r12298, %r12296, %r12297;
	and.b32  	%r12299, %r12298, %r12289;
	xor.b32  	%r12300, %r12299, %r12296;
	add.s32 	%r12301, %r12295, %r12300;
	add.s32 	%r12302, %r12301, 1116352408;
	ld.local.u32 	%r12303, [%rd5+16];
	add.s32 	%r12304, %r12302, %r12303;
	ld.local.u32 	%r12305, [%rd5+4];
	shf.l.wrap.b32 	%r12306, %r12305, %r12305, 23;
	xor.b32  	%r12307, %r12306, %r12305;
	shf.l.wrap.b32 	%r12308, %r12307, %r12307, 21;
	xor.b32  	%r12309, %r12308, %r12305;
	shf.l.wrap.b32 	%r12310, %r12309, %r12309, 30;
	ld.local.u32 	%r12311, [%rd5+8];
	and.b32  	%r12312, %r12311, %r12305;
	or.b32  	%r12313, %r12311, %r12305;
	ld.local.u32 	%r12314, [%rd5+12];
	and.b32  	%r12315, %r12314, %r12313;
	or.b32  	%r12316, %r12315, %r12312;
	add.s32 	%r12317, %r12310, %r12316;
	add.s32 	%r12318, %r12317, %r12302;
	add.s32 	%r12319, %r12188, %r12296;
	xor.b32  	%r12320, %r12297, %r12289;
	and.b32  	%r12321, %r12304, %r12320;
	xor.b32  	%r12322, %r12321, %r12297;
	add.s32 	%r12323, %r12319, %r12322;
	shf.l.wrap.b32 	%r12324, %r12304, %r12304, 18;
	xor.b32  	%r12325, %r12324, %r12304;
	shf.l.wrap.b32 	%r12326, %r12325, %r12325, 27;
	xor.b32  	%r12327, %r12326, %r12304;
	shf.l.wrap.b32 	%r12328, %r12327, %r12327, 26;
	add.s32 	%r12329, %r12323, %r12328;
	add.s32 	%r12330, %r12329, 1899447441;
	add.s32 	%r12331, %r12330, %r12314;
	shf.l.wrap.b32 	%r12332, %r12318, %r12318, 23;
	xor.b32  	%r12333, %r12332, %r12318;
	shf.l.wrap.b32 	%r12334, %r12333, %r12333, 21;
	xor.b32  	%r12335, %r12334, %r12318;
	shf.l.wrap.b32 	%r12336, %r12335, %r12335, 30;
	and.b32  	%r12337, %r12318, %r12305;
	or.b32  	%r12338, %r12318, %r12305;
	and.b32  	%r12339, %r12338, %r12311;
	or.b32  	%r12340, %r12339, %r12337;
	add.s32 	%r12341, %r12336, %r12340;
	add.s32 	%r12342, %r12341, %r12330;
	add.s32 	%r12343, %r12195, %r12297;
	xor.b32  	%r12344, %r12304, %r12289;
	and.b32  	%r12345, %r12331, %r12344;
	xor.b32  	%r12346, %r12345, %r12289;
	add.s32 	%r12347, %r12343, %r12346;
	shf.l.wrap.b32 	%r12348, %r12331, %r12331, 18;
	xor.b32  	%r12349, %r12348, %r12331;
	shf.l.wrap.b32 	%r12350, %r12349, %r12349, 27;
	xor.b32  	%r12351, %r12350, %r12331;
	shf.l.wrap.b32 	%r12352, %r12351, %r12351, 26;
	add.s32 	%r12353, %r12347, %r12352;
	add.s32 	%r12354, %r12353, -1245643825;
	add.s32 	%r12355, %r12354, %r12311;
	shf.l.wrap.b32 	%r12356, %r12342, %r12342, 23;
	xor.b32  	%r12357, %r12356, %r12342;
	shf.l.wrap.b32 	%r12358, %r12357, %r12357, 21;
	xor.b32  	%r12359, %r12358, %r12342;
	shf.l.wrap.b32 	%r12360, %r12359, %r12359, 30;
	and.b32  	%r12361, %r12342, %r12318;
	or.b32  	%r12362, %r12342, %r12318;
	and.b32  	%r12363, %r12362, %r12305;
	or.b32  	%r12364, %r12363, %r12361;
	add.s32 	%r12365, %r12360, %r12364;
	add.s32 	%r12366, %r12365, %r12354;
	add.s32 	%r12367, %r12202, %r12289;
	xor.b32  	%r12368, %r12331, %r12304;
	and.b32  	%r12369, %r12355, %r12368;
	xor.b32  	%r12370, %r12369, %r12304;
	add.s32 	%r12371, %r12367, %r12370;
	shf.l.wrap.b32 	%r12372, %r12355, %r12355, 18;
	xor.b32  	%r12373, %r12372, %r12355;
	shf.l.wrap.b32 	%r12374, %r12373, %r12373, 27;
	xor.b32  	%r12375, %r12374, %r12355;
	shf.l.wrap.b32 	%r12376, %r12375, %r12375, 26;
	add.s32 	%r12377, %r12371, %r12376;
	add.s32 	%r12378, %r12377, -373957723;
	add.s32 	%r12379, %r12378, %r12305;
	shf.l.wrap.b32 	%r12380, %r12366, %r12366, 23;
	xor.b32  	%r12381, %r12380, %r12366;
	shf.l.wrap.b32 	%r12382, %r12381, %r12381, 21;
	xor.b32  	%r12383, %r12382, %r12366;
	shf.l.wrap.b32 	%r12384, %r12383, %r12383, 30;
	and.b32  	%r12385, %r12366, %r12342;
	or.b32  	%r12386, %r12366, %r12342;
	and.b32  	%r12387, %r12386, %r12318;
	or.b32  	%r12388, %r12387, %r12385;
	add.s32 	%r12389, %r12384, %r12388;
	add.s32 	%r12390, %r12389, %r12378;
	add.s32 	%r12391, %r12209, %r12304;
	xor.b32  	%r12392, %r12355, %r12331;
	and.b32  	%r12393, %r12379, %r12392;
	xor.b32  	%r12394, %r12393, %r12331;
	add.s32 	%r12395, %r12391, %r12394;
	shf.l.wrap.b32 	%r12396, %r12379, %r12379, 18;
	xor.b32  	%r12397, %r12396, %r12379;
	shf.l.wrap.b32 	%r12398, %r12397, %r12397, 27;
	xor.b32  	%r12399, %r12398, %r12379;
	shf.l.wrap.b32 	%r12400, %r12399, %r12399, 26;
	add.s32 	%r12401, %r12395, %r12400;
	add.s32 	%r12402, %r12401, 961987163;
	add.s32 	%r12403, %r12402, %r12318;
	shf.l.wrap.b32 	%r12404, %r12390, %r12390, 23;
	xor.b32  	%r12405, %r12404, %r12390;
	shf.l.wrap.b32 	%r12406, %r12405, %r12405, 21;
	xor.b32  	%r12407, %r12406, %r12390;
	shf.l.wrap.b32 	%r12408, %r12407, %r12407, 30;
	and.b32  	%r12409, %r12390, %r12366;
	or.b32  	%r12410, %r12390, %r12366;
	and.b32  	%r12411, %r12410, %r12342;
	or.b32  	%r12412, %r12411, %r12409;
	add.s32 	%r12413, %r12408, %r12412;
	add.s32 	%r12414, %r12413, %r12402;
	add.s32 	%r12415, %r12216, %r12331;
	xor.b32  	%r12416, %r12379, %r12355;
	and.b32  	%r12417, %r12403, %r12416;
	xor.b32  	%r12418, %r12417, %r12355;
	add.s32 	%r12419, %r12415, %r12418;
	shf.l.wrap.b32 	%r12420, %r12403, %r12403, 18;
	xor.b32  	%r12421, %r12420, %r12403;
	shf.l.wrap.b32 	%r12422, %r12421, %r12421, 27;
	xor.b32  	%r12423, %r12422, %r12403;
	shf.l.wrap.b32 	%r12424, %r12423, %r12423, 26;
	add.s32 	%r12425, %r12419, %r12424;
	add.s32 	%r12426, %r12425, 1508970993;
	add.s32 	%r12427, %r12426, %r12342;
	shf.l.wrap.b32 	%r12428, %r12414, %r12414, 23;
	xor.b32  	%r12429, %r12428, %r12414;
	shf.l.wrap.b32 	%r12430, %r12429, %r12429, 21;
	xor.b32  	%r12431, %r12430, %r12414;
	shf.l.wrap.b32 	%r12432, %r12431, %r12431, 30;
	and.b32  	%r12433, %r12414, %r12390;
	or.b32  	%r12434, %r12414, %r12390;
	and.b32  	%r12435, %r12434, %r12366;
	or.b32  	%r12436, %r12435, %r12433;
	add.s32 	%r12437, %r12432, %r12436;
	add.s32 	%r12438, %r12437, %r12426;
	add.s32 	%r12439, %r12223, %r12355;
	xor.b32  	%r12440, %r12403, %r12379;
	and.b32  	%r12441, %r12427, %r12440;
	xor.b32  	%r12442, %r12441, %r12379;
	add.s32 	%r12443, %r12439, %r12442;
	shf.l.wrap.b32 	%r12444, %r12427, %r12427, 18;
	xor.b32  	%r12445, %r12444, %r12427;
	shf.l.wrap.b32 	%r12446, %r12445, %r12445, 27;
	xor.b32  	%r12447, %r12446, %r12427;
	shf.l.wrap.b32 	%r12448, %r12447, %r12447, 26;
	add.s32 	%r12449, %r12443, %r12448;
	add.s32 	%r12450, %r12449, -1841331548;
	add.s32 	%r12451, %r12450, %r12366;
	shf.l.wrap.b32 	%r12452, %r12438, %r12438, 23;
	xor.b32  	%r12453, %r12452, %r12438;
	shf.l.wrap.b32 	%r12454, %r12453, %r12453, 21;
	xor.b32  	%r12455, %r12454, %r12438;
	shf.l.wrap.b32 	%r12456, %r12455, %r12455, 30;
	and.b32  	%r12457, %r12438, %r12414;
	or.b32  	%r12458, %r12438, %r12414;
	and.b32  	%r12459, %r12458, %r12390;
	or.b32  	%r12460, %r12459, %r12457;
	add.s32 	%r12461, %r12456, %r12460;
	add.s32 	%r12462, %r12461, %r12450;
	add.s32 	%r12463, %r12230, %r12379;
	xor.b32  	%r12464, %r12427, %r12403;
	and.b32  	%r12465, %r12451, %r12464;
	xor.b32  	%r12466, %r12465, %r12403;
	add.s32 	%r12467, %r12463, %r12466;
	shf.l.wrap.b32 	%r12468, %r12451, %r12451, 18;
	xor.b32  	%r12469, %r12468, %r12451;
	shf.l.wrap.b32 	%r12470, %r12469, %r12469, 27;
	xor.b32  	%r12471, %r12470, %r12451;
	shf.l.wrap.b32 	%r12472, %r12471, %r12471, 26;
	add.s32 	%r12473, %r12467, %r12472;
	add.s32 	%r12474, %r12473, -1424204075;
	add.s32 	%r12475, %r12474, %r12390;
	shf.l.wrap.b32 	%r12476, %r12462, %r12462, 23;
	xor.b32  	%r12477, %r12476, %r12462;
	shf.l.wrap.b32 	%r12478, %r12477, %r12477, 21;
	xor.b32  	%r12479, %r12478, %r12462;
	shf.l.wrap.b32 	%r12480, %r12479, %r12479, 30;
	and.b32  	%r12481, %r12462, %r12438;
	or.b32  	%r12482, %r12462, %r12438;
	and.b32  	%r12483, %r12482, %r12414;
	or.b32  	%r12484, %r12483, %r12481;
	add.s32 	%r12485, %r12480, %r12484;
	add.s32 	%r12486, %r12485, %r12474;
	add.s32 	%r12487, %r12237, %r12403;
	xor.b32  	%r12488, %r12451, %r12427;
	and.b32  	%r12489, %r12475, %r12488;
	xor.b32  	%r12490, %r12489, %r12427;
	add.s32 	%r12491, %r12487, %r12490;
	shf.l.wrap.b32 	%r12492, %r12475, %r12475, 18;
	xor.b32  	%r12493, %r12492, %r12475;
	shf.l.wrap.b32 	%r12494, %r12493, %r12493, 27;
	xor.b32  	%r12495, %r12494, %r12475;
	shf.l.wrap.b32 	%r12496, %r12495, %r12495, 26;
	add.s32 	%r12497, %r12491, %r12496;
	add.s32 	%r12498, %r12497, -670586216;
	add.s32 	%r12499, %r12498, %r12414;
	shf.l.wrap.b32 	%r12500, %r12486, %r12486, 23;
	xor.b32  	%r12501, %r12500, %r12486;
	shf.l.wrap.b32 	%r12502, %r12501, %r12501, 21;
	xor.b32  	%r12503, %r12502, %r12486;
	shf.l.wrap.b32 	%r12504, %r12503, %r12503, 30;
	and.b32  	%r12505, %r12486, %r12462;
	or.b32  	%r12506, %r12486, %r12462;
	and.b32  	%r12507, %r12506, %r12438;
	or.b32  	%r12508, %r12507, %r12505;
	add.s32 	%r12509, %r12504, %r12508;
	add.s32 	%r12510, %r12509, %r12498;
	add.s32 	%r12511, %r12244, %r12427;
	xor.b32  	%r12512, %r12475, %r12451;
	and.b32  	%r12513, %r12499, %r12512;
	xor.b32  	%r12514, %r12513, %r12451;
	add.s32 	%r12515, %r12511, %r12514;
	shf.l.wrap.b32 	%r12516, %r12499, %r12499, 18;
	xor.b32  	%r12517, %r12516, %r12499;
	shf.l.wrap.b32 	%r12518, %r12517, %r12517, 27;
	xor.b32  	%r12519, %r12518, %r12499;
	shf.l.wrap.b32 	%r12520, %r12519, %r12519, 26;
	add.s32 	%r12521, %r12515, %r12520;
	add.s32 	%r12522, %r12521, 310598401;
	add.s32 	%r12523, %r12522, %r12438;
	shf.l.wrap.b32 	%r12524, %r12510, %r12510, 23;
	xor.b32  	%r12525, %r12524, %r12510;
	shf.l.wrap.b32 	%r12526, %r12525, %r12525, 21;
	xor.b32  	%r12527, %r12526, %r12510;
	shf.l.wrap.b32 	%r12528, %r12527, %r12527, 30;
	and.b32  	%r12529, %r12510, %r12486;
	or.b32  	%r12530, %r12510, %r12486;
	and.b32  	%r12531, %r12530, %r12462;
	or.b32  	%r12532, %r12531, %r12529;
	add.s32 	%r12533, %r12528, %r12532;
	add.s32 	%r12534, %r12533, %r12522;
	add.s32 	%r12535, %r12251, %r12451;
	xor.b32  	%r12536, %r12499, %r12475;
	and.b32  	%r12537, %r12523, %r12536;
	xor.b32  	%r12538, %r12537, %r12475;
	add.s32 	%r12539, %r12535, %r12538;
	shf.l.wrap.b32 	%r12540, %r12523, %r12523, 18;
	xor.b32  	%r12541, %r12540, %r12523;
	shf.l.wrap.b32 	%r12542, %r12541, %r12541, 27;
	xor.b32  	%r12543, %r12542, %r12523;
	shf.l.wrap.b32 	%r12544, %r12543, %r12543, 26;
	add.s32 	%r12545, %r12539, %r12544;
	add.s32 	%r12546, %r12545, 607225278;
	add.s32 	%r12547, %r12546, %r12462;
	shf.l.wrap.b32 	%r12548, %r12534, %r12534, 23;
	xor.b32  	%r12549, %r12548, %r12534;
	shf.l.wrap.b32 	%r12550, %r12549, %r12549, 21;
	xor.b32  	%r12551, %r12550, %r12534;
	shf.l.wrap.b32 	%r12552, %r12551, %r12551, 30;
	and.b32  	%r12553, %r12534, %r12510;
	or.b32  	%r12554, %r12534, %r12510;
	and.b32  	%r12555, %r12554, %r12486;
	or.b32  	%r12556, %r12555, %r12553;
	add.s32 	%r12557, %r12552, %r12556;
	add.s32 	%r12558, %r12557, %r12546;
	add.s32 	%r12559, %r12258, %r12475;
	xor.b32  	%r12560, %r12523, %r12499;
	and.b32  	%r12561, %r12547, %r12560;
	xor.b32  	%r12562, %r12561, %r12499;
	add.s32 	%r12563, %r12559, %r12562;
	shf.l.wrap.b32 	%r12564, %r12547, %r12547, 18;
	xor.b32  	%r12565, %r12564, %r12547;
	shf.l.wrap.b32 	%r12566, %r12565, %r12565, 27;
	xor.b32  	%r12567, %r12566, %r12547;
	shf.l.wrap.b32 	%r12568, %r12567, %r12567, 26;
	add.s32 	%r12569, %r12563, %r12568;
	add.s32 	%r12570, %r12569, 1426881987;
	add.s32 	%r12571, %r12570, %r12486;
	shf.l.wrap.b32 	%r12572, %r12558, %r12558, 23;
	xor.b32  	%r12573, %r12572, %r12558;
	shf.l.wrap.b32 	%r12574, %r12573, %r12573, 21;
	xor.b32  	%r12575, %r12574, %r12558;
	shf.l.wrap.b32 	%r12576, %r12575, %r12575, 30;
	and.b32  	%r12577, %r12558, %r12534;
	or.b32  	%r12578, %r12558, %r12534;
	and.b32  	%r12579, %r12578, %r12510;
	or.b32  	%r12580, %r12579, %r12577;
	add.s32 	%r12581, %r12576, %r12580;
	add.s32 	%r12582, %r12581, %r12570;
	add.s32 	%r12583, %r12265, %r12499;
	xor.b32  	%r12584, %r12547, %r12523;
	and.b32  	%r12585, %r12571, %r12584;
	xor.b32  	%r12586, %r12585, %r12523;
	add.s32 	%r12587, %r12583, %r12586;
	shf.l.wrap.b32 	%r12588, %r12571, %r12571, 18;
	xor.b32  	%r12589, %r12588, %r12571;
	shf.l.wrap.b32 	%r12590, %r12589, %r12589, 27;
	xor.b32  	%r12591, %r12590, %r12571;
	shf.l.wrap.b32 	%r12592, %r12591, %r12591, 26;
	add.s32 	%r12593, %r12587, %r12592;
	add.s32 	%r12594, %r12593, 1925078388;
	add.s32 	%r12595, %r12594, %r12510;
	shf.l.wrap.b32 	%r12596, %r12582, %r12582, 23;
	xor.b32  	%r12597, %r12596, %r12582;
	shf.l.wrap.b32 	%r12598, %r12597, %r12597, 21;
	xor.b32  	%r12599, %r12598, %r12582;
	shf.l.wrap.b32 	%r12600, %r12599, %r12599, 30;
	and.b32  	%r12601, %r12582, %r12558;
	or.b32  	%r12602, %r12582, %r12558;
	and.b32  	%r12603, %r12602, %r12534;
	or.b32  	%r12604, %r12603, %r12601;
	add.s32 	%r12605, %r12600, %r12604;
	add.s32 	%r12606, %r12605, %r12594;
	add.s32 	%r12607, %r12272, %r12523;
	xor.b32  	%r12608, %r12571, %r12547;
	and.b32  	%r12609, %r12595, %r12608;
	xor.b32  	%r12610, %r12609, %r12547;
	add.s32 	%r12611, %r12607, %r12610;
	shf.l.wrap.b32 	%r12612, %r12595, %r12595, 18;
	xor.b32  	%r12613, %r12612, %r12595;
	shf.l.wrap.b32 	%r12614, %r12613, %r12613, 27;
	xor.b32  	%r12615, %r12614, %r12595;
	shf.l.wrap.b32 	%r12616, %r12615, %r12615, 26;
	add.s32 	%r12617, %r12611, %r12616;
	add.s32 	%r12618, %r12617, -2132889090;
	add.s32 	%r12619, %r12618, %r12534;
	shf.l.wrap.b32 	%r12620, %r12606, %r12606, 23;
	xor.b32  	%r12621, %r12620, %r12606;
	shf.l.wrap.b32 	%r12622, %r12621, %r12621, 21;
	xor.b32  	%r12623, %r12622, %r12606;
	shf.l.wrap.b32 	%r12624, %r12623, %r12623, 30;
	and.b32  	%r12625, %r12606, %r12582;
	or.b32  	%r12626, %r12606, %r12582;
	and.b32  	%r12627, %r12626, %r12558;
	or.b32  	%r12628, %r12627, %r12625;
	add.s32 	%r12629, %r12624, %r12628;
	add.s32 	%r12630, %r12629, %r12618;
	add.s32 	%r12631, %r12279, %r12547;
	xor.b32  	%r12632, %r12595, %r12571;
	and.b32  	%r12633, %r12619, %r12632;
	xor.b32  	%r12634, %r12633, %r12571;
	add.s32 	%r12635, %r12631, %r12634;
	shf.l.wrap.b32 	%r12636, %r12619, %r12619, 18;
	xor.b32  	%r12637, %r12636, %r12619;
	shf.l.wrap.b32 	%r12638, %r12637, %r12637, 27;
	xor.b32  	%r12639, %r12638, %r12619;
	shf.l.wrap.b32 	%r12640, %r12639, %r12639, 26;
	add.s32 	%r12641, %r12635, %r12640;
	add.s32 	%r12642, %r12641, -1680079193;
	add.s32 	%r12643, %r12642, %r12558;
	shf.l.wrap.b32 	%r12644, %r12630, %r12630, 23;
	xor.b32  	%r12645, %r12644, %r12630;
	shf.l.wrap.b32 	%r12646, %r12645, %r12645, 21;
	xor.b32  	%r12647, %r12646, %r12630;
	shf.l.wrap.b32 	%r12648, %r12647, %r12647, 30;
	and.b32  	%r12649, %r12630, %r12606;
	or.b32  	%r12650, %r12630, %r12606;
	and.b32  	%r12651, %r12650, %r12582;
	or.b32  	%r12652, %r12651, %r12649;
	add.s32 	%r12653, %r12648, %r12652;
	add.s32 	%r12654, %r12653, %r12642;
	add.s32 	%r12655, %r12286, %r12571;
	xor.b32  	%r12656, %r12619, %r12595;
	and.b32  	%r12657, %r12643, %r12656;
	xor.b32  	%r12658, %r12657, %r12595;
	add.s32 	%r12659, %r12655, %r12658;
	shf.l.wrap.b32 	%r12660, %r12643, %r12643, 18;
	xor.b32  	%r12661, %r12660, %r12643;
	shf.l.wrap.b32 	%r12662, %r12661, %r12661, 27;
	xor.b32  	%r12663, %r12662, %r12643;
	shf.l.wrap.b32 	%r12664, %r12663, %r12663, 26;
	add.s32 	%r12665, %r12659, %r12664;
	add.s32 	%r12666, %r12665, -1046744716;
	add.s32 	%r12667, %r12666, %r12582;
	shf.l.wrap.b32 	%r12668, %r12654, %r12654, 23;
	xor.b32  	%r12669, %r12668, %r12654;
	shf.l.wrap.b32 	%r12670, %r12669, %r12669, 21;
	xor.b32  	%r12671, %r12670, %r12654;
	shf.l.wrap.b32 	%r12672, %r12671, %r12671, 30;
	and.b32  	%r12673, %r12654, %r12630;
	or.b32  	%r12674, %r12654, %r12630;
	and.b32  	%r12675, %r12674, %r12606;
	or.b32  	%r12676, %r12675, %r12673;
	add.s32 	%r12677, %r12672, %r12676;
	add.s32 	%r12678, %r12677, %r12666;
	shf.l.wrap.b32 	%r12679, %r12279, %r12279, 15;
	shf.l.wrap.b32 	%r12680, %r12279, %r12279, 13;
	xor.b32  	%r12681, %r12679, %r12680;
	shr.u32 	%r12682, %r12279, 10;
	xor.b32  	%r12683, %r12681, %r12682;
	shf.l.wrap.b32 	%r12684, %r12188, %r12188, 25;
	shf.l.wrap.b32 	%r12685, %r12188, %r12188, 14;
	xor.b32  	%r12686, %r12684, %r12685;
	shr.u32 	%r12687, %r12188, 3;
	xor.b32  	%r12688, %r12686, %r12687;
	add.s32 	%r12689, %r12688, %r12181;
	add.s32 	%r12690, %r12689, %r12244;
	add.s32 	%r12691, %r12690, %r12683;
	add.s32 	%r12692, %r12691, %r12595;
	xor.b32  	%r12693, %r12643, %r12619;
	and.b32  	%r12694, %r12667, %r12693;
	xor.b32  	%r12695, %r12694, %r12619;
	add.s32 	%r12696, %r12692, %r12695;
	shf.l.wrap.b32 	%r12697, %r12667, %r12667, 18;
	xor.b32  	%r12698, %r12697, %r12667;
	shf.l.wrap.b32 	%r12699, %r12698, %r12698, 27;
	xor.b32  	%r12700, %r12699, %r12667;
	shf.l.wrap.b32 	%r12701, %r12700, %r12700, 26;
	add.s32 	%r12702, %r12696, %r12701;
	add.s32 	%r12703, %r12702, -459576895;
	add.s32 	%r12704, %r12703, %r12606;
	shf.l.wrap.b32 	%r12705, %r12678, %r12678, 23;
	xor.b32  	%r12706, %r12705, %r12678;
	shf.l.wrap.b32 	%r12707, %r12706, %r12706, 21;
	xor.b32  	%r12708, %r12707, %r12678;
	shf.l.wrap.b32 	%r12709, %r12708, %r12708, 30;
	and.b32  	%r12710, %r12678, %r12654;
	or.b32  	%r12711, %r12678, %r12654;
	and.b32  	%r12712, %r12711, %r12630;
	or.b32  	%r12713, %r12712, %r12710;
	add.s32 	%r12714, %r12709, %r12713;
	add.s32 	%r12715, %r12714, %r12703;
	shf.l.wrap.b32 	%r12716, %r12286, %r12286, 15;
	shf.l.wrap.b32 	%r12717, %r12286, %r12286, 13;
	xor.b32  	%r12718, %r12716, %r12717;
	shr.u32 	%r12719, %r12286, 10;
	xor.b32  	%r12720, %r12718, %r12719;
	shf.l.wrap.b32 	%r12721, %r12195, %r12195, 25;
	shf.l.wrap.b32 	%r12722, %r12195, %r12195, 14;
	xor.b32  	%r12723, %r12721, %r12722;
	shr.u32 	%r12724, %r12195, 3;
	xor.b32  	%r12725, %r12723, %r12724;
	add.s32 	%r12726, %r12725, %r12188;
	add.s32 	%r12727, %r12726, %r12251;
	add.s32 	%r12728, %r12727, %r12720;
	add.s32 	%r12729, %r12728, %r12619;
	xor.b32  	%r12730, %r12667, %r12643;
	and.b32  	%r12731, %r12704, %r12730;
	xor.b32  	%r12732, %r12731, %r12643;
	add.s32 	%r12733, %r12729, %r12732;
	shf.l.wrap.b32 	%r12734, %r12704, %r12704, 18;
	xor.b32  	%r12735, %r12734, %r12704;
	shf.l.wrap.b32 	%r12736, %r12735, %r12735, 27;
	xor.b32  	%r12737, %r12736, %r12704;
	shf.l.wrap.b32 	%r12738, %r12737, %r12737, 26;
	add.s32 	%r12739, %r12733, %r12738;
	add.s32 	%r12740, %r12739, -272742522;
	add.s32 	%r12741, %r12740, %r12630;
	shf.l.wrap.b32 	%r12742, %r12715, %r12715, 23;
	xor.b32  	%r12743, %r12742, %r12715;
	shf.l.wrap.b32 	%r12744, %r12743, %r12743, 21;
	xor.b32  	%r12745, %r12744, %r12715;
	shf.l.wrap.b32 	%r12746, %r12745, %r12745, 30;
	and.b32  	%r12747, %r12715, %r12678;
	or.b32  	%r12748, %r12715, %r12678;
	and.b32  	%r12749, %r12748, %r12654;
	or.b32  	%r12750, %r12749, %r12747;
	add.s32 	%r12751, %r12746, %r12750;
	add.s32 	%r12752, %r12751, %r12740;
	shf.l.wrap.b32 	%r12753, %r12691, %r12691, 15;
	shf.l.wrap.b32 	%r12754, %r12691, %r12691, 13;
	xor.b32  	%r12755, %r12753, %r12754;
	shr.u32 	%r12756, %r12691, 10;
	xor.b32  	%r12757, %r12755, %r12756;
	shf.l.wrap.b32 	%r12758, %r12202, %r12202, 25;
	shf.l.wrap.b32 	%r12759, %r12202, %r12202, 14;
	xor.b32  	%r12760, %r12758, %r12759;
	shr.u32 	%r12761, %r12202, 3;
	xor.b32  	%r12762, %r12760, %r12761;
	add.s32 	%r12763, %r12762, %r12195;
	add.s32 	%r12764, %r12763, %r12258;
	add.s32 	%r12765, %r12764, %r12757;
	add.s32 	%r12766, %r12765, %r12643;
	xor.b32  	%r12767, %r12704, %r12667;
	and.b32  	%r12768, %r12741, %r12767;
	xor.b32  	%r12769, %r12768, %r12667;
	add.s32 	%r12770, %r12766, %r12769;
	shf.l.wrap.b32 	%r12771, %r12741, %r12741, 18;
	xor.b32  	%r12772, %r12771, %r12741;
	shf.l.wrap.b32 	%r12773, %r12772, %r12772, 27;
	xor.b32  	%r12774, %r12773, %r12741;
	shf.l.wrap.b32 	%r12775, %r12774, %r12774, 26;
	add.s32 	%r12776, %r12770, %r12775;
	add.s32 	%r12777, %r12776, 264347078;
	add.s32 	%r12778, %r12777, %r12654;
	shf.l.wrap.b32 	%r12779, %r12752, %r12752, 23;
	xor.b32  	%r12780, %r12779, %r12752;
	shf.l.wrap.b32 	%r12781, %r12780, %r12780, 21;
	xor.b32  	%r12782, %r12781, %r12752;
	shf.l.wrap.b32 	%r12783, %r12782, %r12782, 30;
	and.b32  	%r12784, %r12752, %r12715;
	or.b32  	%r12785, %r12752, %r12715;
	and.b32  	%r12786, %r12785, %r12678;
	or.b32  	%r12787, %r12786, %r12784;
	add.s32 	%r12788, %r12783, %r12787;
	add.s32 	%r12789, %r12788, %r12777;
	shf.l.wrap.b32 	%r12790, %r12728, %r12728, 15;
	shf.l.wrap.b32 	%r12791, %r12728, %r12728, 13;
	xor.b32  	%r12792, %r12790, %r12791;
	shr.u32 	%r12793, %r12728, 10;
	xor.b32  	%r12794, %r12792, %r12793;
	shf.l.wrap.b32 	%r12795, %r12209, %r12209, 25;
	shf.l.wrap.b32 	%r12796, %r12209, %r12209, 14;
	xor.b32  	%r12797, %r12795, %r12796;
	shr.u32 	%r12798, %r12209, 3;
	xor.b32  	%r12799, %r12797, %r12798;
	add.s32 	%r12800, %r12799, %r12202;
	add.s32 	%r12801, %r12800, %r12265;
	add.s32 	%r12802, %r12801, %r12794;
	add.s32 	%r12803, %r12802, %r12667;
	xor.b32  	%r12804, %r12741, %r12704;
	and.b32  	%r12805, %r12778, %r12804;
	xor.b32  	%r12806, %r12805, %r12704;
	add.s32 	%r12807, %r12803, %r12806;
	shf.l.wrap.b32 	%r12808, %r12778, %r12778, 18;
	xor.b32  	%r12809, %r12808, %r12778;
	shf.l.wrap.b32 	%r12810, %r12809, %r12809, 27;
	xor.b32  	%r12811, %r12810, %r12778;
	shf.l.wrap.b32 	%r12812, %r12811, %r12811, 26;
	add.s32 	%r12813, %r12807, %r12812;
	add.s32 	%r12814, %r12813, 604807628;
	add.s32 	%r12815, %r12814, %r12678;
	shf.l.wrap.b32 	%r12816, %r12789, %r12789, 23;
	xor.b32  	%r12817, %r12816, %r12789;
	shf.l.wrap.b32 	%r12818, %r12817, %r12817, 21;
	xor.b32  	%r12819, %r12818, %r12789;
	shf.l.wrap.b32 	%r12820, %r12819, %r12819, 30;
	and.b32  	%r12821, %r12789, %r12752;
	or.b32  	%r12822, %r12789, %r12752;
	and.b32  	%r12823, %r12822, %r12715;
	or.b32  	%r12824, %r12823, %r12821;
	add.s32 	%r12825, %r12820, %r12824;
	add.s32 	%r12826, %r12825, %r12814;
	shf.l.wrap.b32 	%r12827, %r12765, %r12765, 15;
	shf.l.wrap.b32 	%r12828, %r12765, %r12765, 13;
	xor.b32  	%r12829, %r12827, %r12828;
	shr.u32 	%r12830, %r12765, 10;
	xor.b32  	%r12831, %r12829, %r12830;
	shf.l.wrap.b32 	%r12832, %r12216, %r12216, 25;
	shf.l.wrap.b32 	%r12833, %r12216, %r12216, 14;
	xor.b32  	%r12834, %r12832, %r12833;
	shr.u32 	%r12835, %r12216, 3;
	xor.b32  	%r12836, %r12834, %r12835;
	add.s32 	%r12837, %r12836, %r12209;
	add.s32 	%r12838, %r12837, %r12272;
	add.s32 	%r12839, %r12838, %r12831;
	add.s32 	%r12840, %r12839, %r12704;
	xor.b32  	%r12841, %r12778, %r12741;
	and.b32  	%r12842, %r12815, %r12841;
	xor.b32  	%r12843, %r12842, %r12741;
	add.s32 	%r12844, %r12840, %r12843;
	shf.l.wrap.b32 	%r12845, %r12815, %r12815, 18;
	xor.b32  	%r12846, %r12845, %r12815;
	shf.l.wrap.b32 	%r12847, %r12846, %r12846, 27;
	xor.b32  	%r12848, %r12847, %r12815;
	shf.l.wrap.b32 	%r12849, %r12848, %r12848, 26;
	add.s32 	%r12850, %r12844, %r12849;
	add.s32 	%r12851, %r12850, 770255983;
	add.s32 	%r12852, %r12851, %r12715;
	shf.l.wrap.b32 	%r12853, %r12826, %r12826, 23;
	xor.b32  	%r12854, %r12853, %r12826;
	shf.l.wrap.b32 	%r12855, %r12854, %r12854, 21;
	xor.b32  	%r12856, %r12855, %r12826;
	shf.l.wrap.b32 	%r12857, %r12856, %r12856, 30;
	and.b32  	%r12858, %r12826, %r12789;
	or.b32  	%r12859, %r12826, %r12789;
	and.b32  	%r12860, %r12859, %r12752;
	or.b32  	%r12861, %r12860, %r12858;
	add.s32 	%r12862, %r12857, %r12861;
	add.s32 	%r12863, %r12862, %r12851;
	shf.l.wrap.b32 	%r12864, %r12802, %r12802, 15;
	shf.l.wrap.b32 	%r12865, %r12802, %r12802, 13;
	xor.b32  	%r12866, %r12864, %r12865;
	shr.u32 	%r12867, %r12802, 10;
	xor.b32  	%r12868, %r12866, %r12867;
	shf.l.wrap.b32 	%r12869, %r12223, %r12223, 25;
	shf.l.wrap.b32 	%r12870, %r12223, %r12223, 14;
	xor.b32  	%r12871, %r12869, %r12870;
	shr.u32 	%r12872, %r12223, 3;
	xor.b32  	%r12873, %r12871, %r12872;
	add.s32 	%r12874, %r12873, %r12216;
	add.s32 	%r12875, %r12874, %r12279;
	add.s32 	%r12876, %r12875, %r12868;
	add.s32 	%r12877, %r12876, %r12741;
	xor.b32  	%r12878, %r12815, %r12778;
	and.b32  	%r12879, %r12852, %r12878;
	xor.b32  	%r12880, %r12879, %r12778;
	add.s32 	%r12881, %r12877, %r12880;
	shf.l.wrap.b32 	%r12882, %r12852, %r12852, 18;
	xor.b32  	%r12883, %r12882, %r12852;
	shf.l.wrap.b32 	%r12884, %r12883, %r12883, 27;
	xor.b32  	%r12885, %r12884, %r12852;
	shf.l.wrap.b32 	%r12886, %r12885, %r12885, 26;
	add.s32 	%r12887, %r12881, %r12886;
	add.s32 	%r12888, %r12887, 1249150122;
	add.s32 	%r12889, %r12888, %r12752;
	shf.l.wrap.b32 	%r12890, %r12863, %r12863, 23;
	xor.b32  	%r12891, %r12890, %r12863;
	shf.l.wrap.b32 	%r12892, %r12891, %r12891, 21;
	xor.b32  	%r12893, %r12892, %r12863;
	shf.l.wrap.b32 	%r12894, %r12893, %r12893, 30;
	and.b32  	%r12895, %r12863, %r12826;
	or.b32  	%r12896, %r12863, %r12826;
	and.b32  	%r12897, %r12896, %r12789;
	or.b32  	%r12898, %r12897, %r12895;
	add.s32 	%r12899, %r12894, %r12898;
	add.s32 	%r12900, %r12899, %r12888;
	shf.l.wrap.b32 	%r12901, %r12839, %r12839, 15;
	shf.l.wrap.b32 	%r12902, %r12839, %r12839, 13;
	xor.b32  	%r12903, %r12901, %r12902;
	shr.u32 	%r12904, %r12839, 10;
	xor.b32  	%r12905, %r12903, %r12904;
	shf.l.wrap.b32 	%r12906, %r12230, %r12230, 25;
	shf.l.wrap.b32 	%r12907, %r12230, %r12230, 14;
	xor.b32  	%r12908, %r12906, %r12907;
	shr.u32 	%r12909, %r12230, 3;
	xor.b32  	%r12910, %r12908, %r12909;
	add.s32 	%r12911, %r12910, %r12223;
	add.s32 	%r12912, %r12911, %r12286;
	add.s32 	%r12913, %r12912, %r12905;
	add.s32 	%r12914, %r12913, %r12778;
	xor.b32  	%r12915, %r12852, %r12815;
	and.b32  	%r12916, %r12889, %r12915;
	xor.b32  	%r12917, %r12916, %r12815;
	add.s32 	%r12918, %r12914, %r12917;
	shf.l.wrap.b32 	%r12919, %r12889, %r12889, 18;
	xor.b32  	%r12920, %r12919, %r12889;
	shf.l.wrap.b32 	%r12921, %r12920, %r12920, 27;
	xor.b32  	%r12922, %r12921, %r12889;
	shf.l.wrap.b32 	%r12923, %r12922, %r12922, 26;
	add.s32 	%r12924, %r12918, %r12923;
	add.s32 	%r12925, %r12924, 1555081692;
	add.s32 	%r12926, %r12925, %r12789;
	shf.l.wrap.b32 	%r12927, %r12900, %r12900, 23;
	xor.b32  	%r12928, %r12927, %r12900;
	shf.l.wrap.b32 	%r12929, %r12928, %r12928, 21;
	xor.b32  	%r12930, %r12929, %r12900;
	shf.l.wrap.b32 	%r12931, %r12930, %r12930, 30;
	and.b32  	%r12932, %r12900, %r12863;
	or.b32  	%r12933, %r12900, %r12863;
	and.b32  	%r12934, %r12933, %r12826;
	or.b32  	%r12935, %r12934, %r12932;
	add.s32 	%r12936, %r12931, %r12935;
	add.s32 	%r12937, %r12936, %r12925;
	shf.l.wrap.b32 	%r12938, %r12876, %r12876, 15;
	shf.l.wrap.b32 	%r12939, %r12876, %r12876, 13;
	xor.b32  	%r12940, %r12938, %r12939;
	shr.u32 	%r12941, %r12876, 10;
	xor.b32  	%r12942, %r12940, %r12941;
	shf.l.wrap.b32 	%r12943, %r12237, %r12237, 25;
	shf.l.wrap.b32 	%r12944, %r12237, %r12237, 14;
	xor.b32  	%r12945, %r12943, %r12944;
	shr.u32 	%r12946, %r12237, 3;
	xor.b32  	%r12947, %r12945, %r12946;
	add.s32 	%r12948, %r12947, %r12230;
	add.s32 	%r12949, %r12948, %r12691;
	add.s32 	%r12950, %r12949, %r12942;
	add.s32 	%r12951, %r12950, %r12815;
	xor.b32  	%r12952, %r12889, %r12852;
	and.b32  	%r12953, %r12926, %r12952;
	xor.b32  	%r12954, %r12953, %r12852;
	add.s32 	%r12955, %r12951, %r12954;
	shf.l.wrap.b32 	%r12956, %r12926, %r12926, 18;
	xor.b32  	%r12957, %r12956, %r12926;
	shf.l.wrap.b32 	%r12958, %r12957, %r12957, 27;
	xor.b32  	%r12959, %r12958, %r12926;
	shf.l.wrap.b32 	%r12960, %r12959, %r12959, 26;
	add.s32 	%r12961, %r12955, %r12960;
	add.s32 	%r12962, %r12961, 1996064986;
	add.s32 	%r12963, %r12962, %r12826;
	shf.l.wrap.b32 	%r12964, %r12937, %r12937, 23;
	xor.b32  	%r12965, %r12964, %r12937;
	shf.l.wrap.b32 	%r12966, %r12965, %r12965, 21;
	xor.b32  	%r12967, %r12966, %r12937;
	shf.l.wrap.b32 	%r12968, %r12967, %r12967, 30;
	and.b32  	%r12969, %r12937, %r12900;
	or.b32  	%r12970, %r12937, %r12900;
	and.b32  	%r12971, %r12970, %r12863;
	or.b32  	%r12972, %r12971, %r12969;
	add.s32 	%r12973, %r12968, %r12972;
	add.s32 	%r12974, %r12973, %r12962;
	shf.l.wrap.b32 	%r12975, %r12913, %r12913, 15;
	shf.l.wrap.b32 	%r12976, %r12913, %r12913, 13;
	xor.b32  	%r12977, %r12975, %r12976;
	shr.u32 	%r12978, %r12913, 10;
	xor.b32  	%r12979, %r12977, %r12978;
	shf.l.wrap.b32 	%r12980, %r12244, %r12244, 25;
	shf.l.wrap.b32 	%r12981, %r12244, %r12244, 14;
	xor.b32  	%r12982, %r12980, %r12981;
	shr.u32 	%r12983, %r12244, 3;
	xor.b32  	%r12984, %r12982, %r12983;
	add.s32 	%r12985, %r12984, %r12237;
	add.s32 	%r12986, %r12985, %r12728;
	add.s32 	%r12987, %r12986, %r12979;
	add.s32 	%r12988, %r12987, %r12852;
	xor.b32  	%r12989, %r12926, %r12889;
	and.b32  	%r12990, %r12963, %r12989;
	xor.b32  	%r12991, %r12990, %r12889;
	add.s32 	%r12992, %r12988, %r12991;
	shf.l.wrap.b32 	%r12993, %r12963, %r12963, 18;
	xor.b32  	%r12994, %r12993, %r12963;
	shf.l.wrap.b32 	%r12995, %r12994, %r12994, 27;
	xor.b32  	%r12996, %r12995, %r12963;
	shf.l.wrap.b32 	%r12997, %r12996, %r12996, 26;
	add.s32 	%r12998, %r12992, %r12997;
	add.s32 	%r12999, %r12998, -1740746414;
	add.s32 	%r13000, %r12999, %r12863;
	shf.l.wrap.b32 	%r13001, %r12974, %r12974, 23;
	xor.b32  	%r13002, %r13001, %r12974;
	shf.l.wrap.b32 	%r13003, %r13002, %r13002, 21;
	xor.b32  	%r13004, %r13003, %r12974;
	shf.l.wrap.b32 	%r13005, %r13004, %r13004, 30;
	and.b32  	%r13006, %r12974, %r12937;
	or.b32  	%r13007, %r12974, %r12937;
	and.b32  	%r13008, %r13007, %r12900;
	or.b32  	%r13009, %r13008, %r13006;
	add.s32 	%r13010, %r13005, %r13009;
	add.s32 	%r13011, %r13010, %r12999;
	shf.l.wrap.b32 	%r13012, %r12950, %r12950, 15;
	shf.l.wrap.b32 	%r13013, %r12950, %r12950, 13;
	xor.b32  	%r13014, %r13012, %r13013;
	shr.u32 	%r13015, %r12950, 10;
	xor.b32  	%r13016, %r13014, %r13015;
	shf.l.wrap.b32 	%r13017, %r12251, %r12251, 25;
	shf.l.wrap.b32 	%r13018, %r12251, %r12251, 14;
	xor.b32  	%r13019, %r13017, %r13018;
	shr.u32 	%r13020, %r12251, 3;
	xor.b32  	%r13021, %r13019, %r13020;
	add.s32 	%r13022, %r13021, %r12244;
	add.s32 	%r13023, %r13022, %r12765;
	add.s32 	%r13024, %r13023, %r13016;
	add.s32 	%r13025, %r13024, %r12889;
	xor.b32  	%r13026, %r12963, %r12926;
	and.b32  	%r13027, %r13000, %r13026;
	xor.b32  	%r13028, %r13027, %r12926;
	add.s32 	%r13029, %r13025, %r13028;
	shf.l.wrap.b32 	%r13030, %r13000, %r13000, 18;
	xor.b32  	%r13031, %r13030, %r13000;
	shf.l.wrap.b32 	%r13032, %r13031, %r13031, 27;
	xor.b32  	%r13033, %r13032, %r13000;
	shf.l.wrap.b32 	%r13034, %r13033, %r13033, 26;
	add.s32 	%r13035, %r13029, %r13034;
	add.s32 	%r13036, %r13035, -1473132947;
	add.s32 	%r13037, %r13036, %r12900;
	shf.l.wrap.b32 	%r13038, %r13011, %r13011, 23;
	xor.b32  	%r13039, %r13038, %r13011;
	shf.l.wrap.b32 	%r13040, %r13039, %r13039, 21;
	xor.b32  	%r13041, %r13040, %r13011;
	shf.l.wrap.b32 	%r13042, %r13041, %r13041, 30;
	and.b32  	%r13043, %r13011, %r12974;
	or.b32  	%r13044, %r13011, %r12974;
	and.b32  	%r13045, %r13044, %r12937;
	or.b32  	%r13046, %r13045, %r13043;
	add.s32 	%r13047, %r13042, %r13046;
	add.s32 	%r13048, %r13047, %r13036;
	shf.l.wrap.b32 	%r13049, %r12987, %r12987, 15;
	shf.l.wrap.b32 	%r13050, %r12987, %r12987, 13;
	xor.b32  	%r13051, %r13049, %r13050;
	shr.u32 	%r13052, %r12987, 10;
	xor.b32  	%r13053, %r13051, %r13052;
	shf.l.wrap.b32 	%r13054, %r12258, %r12258, 25;
	shf.l.wrap.b32 	%r13055, %r12258, %r12258, 14;
	xor.b32  	%r13056, %r13054, %r13055;
	shr.u32 	%r13057, %r12258, 3;
	xor.b32  	%r13058, %r13056, %r13057;
	add.s32 	%r13059, %r13058, %r12251;
	add.s32 	%r13060, %r13059, %r12802;
	add.s32 	%r13061, %r13060, %r13053;
	add.s32 	%r13062, %r13061, %r12926;
	xor.b32  	%r13063, %r13000, %r12963;
	and.b32  	%r13064, %r13037, %r13063;
	xor.b32  	%r13065, %r13064, %r12963;
	add.s32 	%r13066, %r13062, %r13065;
	shf.l.wrap.b32 	%r13067, %r13037, %r13037, 18;
	xor.b32  	%r13068, %r13067, %r13037;
	shf.l.wrap.b32 	%r13069, %r13068, %r13068, 27;
	xor.b32  	%r13070, %r13069, %r13037;
	shf.l.wrap.b32 	%r13071, %r13070, %r13070, 26;
	add.s32 	%r13072, %r13066, %r13071;
	add.s32 	%r13073, %r13072, -1341970488;
	add.s32 	%r13074, %r13073, %r12937;
	shf.l.wrap.b32 	%r13075, %r13048, %r13048, 23;
	xor.b32  	%r13076, %r13075, %r13048;
	shf.l.wrap.b32 	%r13077, %r13076, %r13076, 21;
	xor.b32  	%r13078, %r13077, %r13048;
	shf.l.wrap.b32 	%r13079, %r13078, %r13078, 30;
	and.b32  	%r13080, %r13048, %r13011;
	or.b32  	%r13081, %r13048, %r13011;
	and.b32  	%r13082, %r13081, %r12974;
	or.b32  	%r13083, %r13082, %r13080;
	add.s32 	%r13084, %r13079, %r13083;
	add.s32 	%r13085, %r13084, %r13073;
	shf.l.wrap.b32 	%r13086, %r13024, %r13024, 15;
	shf.l.wrap.b32 	%r13087, %r13024, %r13024, 13;
	xor.b32  	%r13088, %r13086, %r13087;
	shr.u32 	%r13089, %r13024, 10;
	xor.b32  	%r13090, %r13088, %r13089;
	shf.l.wrap.b32 	%r13091, %r12265, %r12265, 25;
	shf.l.wrap.b32 	%r13092, %r12265, %r12265, 14;
	xor.b32  	%r13093, %r13091, %r13092;
	shr.u32 	%r13094, %r12265, 3;
	xor.b32  	%r13095, %r13093, %r13094;
	add.s32 	%r13096, %r13095, %r12258;
	add.s32 	%r13097, %r13096, %r12839;
	add.s32 	%r13098, %r13097, %r13090;
	add.s32 	%r13099, %r13098, %r12963;
	xor.b32  	%r13100, %r13037, %r13000;
	and.b32  	%r13101, %r13074, %r13100;
	xor.b32  	%r13102, %r13101, %r13000;
	add.s32 	%r13103, %r13099, %r13102;
	shf.l.wrap.b32 	%r13104, %r13074, %r13074, 18;
	xor.b32  	%r13105, %r13104, %r13074;
	shf.l.wrap.b32 	%r13106, %r13105, %r13105, 27;
	xor.b32  	%r13107, %r13106, %r13074;
	shf.l.wrap.b32 	%r13108, %r13107, %r13107, 26;
	add.s32 	%r13109, %r13103, %r13108;
	add.s32 	%r13110, %r13109, -1084653625;
	add.s32 	%r13111, %r13110, %r12974;
	shf.l.wrap.b32 	%r13112, %r13085, %r13085, 23;
	xor.b32  	%r13113, %r13112, %r13085;
	shf.l.wrap.b32 	%r13114, %r13113, %r13113, 21;
	xor.b32  	%r13115, %r13114, %r13085;
	shf.l.wrap.b32 	%r13116, %r13115, %r13115, 30;
	and.b32  	%r13117, %r13085, %r13048;
	or.b32  	%r13118, %r13085, %r13048;
	and.b32  	%r13119, %r13118, %r13011;
	or.b32  	%r13120, %r13119, %r13117;
	add.s32 	%r13121, %r13116, %r13120;
	add.s32 	%r13122, %r13121, %r13110;
	shf.l.wrap.b32 	%r13123, %r13061, %r13061, 15;
	shf.l.wrap.b32 	%r13124, %r13061, %r13061, 13;
	xor.b32  	%r13125, %r13123, %r13124;
	shr.u32 	%r13126, %r13061, 10;
	xor.b32  	%r13127, %r13125, %r13126;
	shf.l.wrap.b32 	%r13128, %r12272, %r12272, 25;
	shf.l.wrap.b32 	%r13129, %r12272, %r12272, 14;
	xor.b32  	%r13130, %r13128, %r13129;
	shr.u32 	%r13131, %r12272, 3;
	xor.b32  	%r13132, %r13130, %r13131;
	add.s32 	%r13133, %r13132, %r12265;
	add.s32 	%r13134, %r13133, %r12876;
	add.s32 	%r13135, %r13134, %r13127;
	add.s32 	%r13136, %r13135, %r13000;
	xor.b32  	%r13137, %r13074, %r13037;
	and.b32  	%r13138, %r13111, %r13137;
	xor.b32  	%r13139, %r13138, %r13037;
	add.s32 	%r13140, %r13136, %r13139;
	shf.l.wrap.b32 	%r13141, %r13111, %r13111, 18;
	xor.b32  	%r13142, %r13141, %r13111;
	shf.l.wrap.b32 	%r13143, %r13142, %r13142, 27;
	xor.b32  	%r13144, %r13143, %r13111;
	shf.l.wrap.b32 	%r13145, %r13144, %r13144, 26;
	add.s32 	%r13146, %r13140, %r13145;
	add.s32 	%r13147, %r13146, -958395405;
	add.s32 	%r13148, %r13147, %r13011;
	shf.l.wrap.b32 	%r13149, %r13122, %r13122, 23;
	xor.b32  	%r13150, %r13149, %r13122;
	shf.l.wrap.b32 	%r13151, %r13150, %r13150, 21;
	xor.b32  	%r13152, %r13151, %r13122;
	shf.l.wrap.b32 	%r13153, %r13152, %r13152, 30;
	and.b32  	%r13154, %r13122, %r13085;
	or.b32  	%r13155, %r13122, %r13085;
	and.b32  	%r13156, %r13155, %r13048;
	or.b32  	%r13157, %r13156, %r13154;
	add.s32 	%r13158, %r13153, %r13157;
	add.s32 	%r13159, %r13158, %r13147;
	shf.l.wrap.b32 	%r13160, %r13098, %r13098, 15;
	shf.l.wrap.b32 	%r13161, %r13098, %r13098, 13;
	xor.b32  	%r13162, %r13160, %r13161;
	shr.u32 	%r13163, %r13098, 10;
	xor.b32  	%r13164, %r13162, %r13163;
	shf.l.wrap.b32 	%r13165, %r12279, %r12279, 25;
	shf.l.wrap.b32 	%r13166, %r12279, %r12279, 14;
	xor.b32  	%r13167, %r13165, %r13166;
	shr.u32 	%r13168, %r12279, 3;
	xor.b32  	%r13169, %r13167, %r13168;
	add.s32 	%r13170, %r13169, %r12272;
	add.s32 	%r13171, %r13170, %r12913;
	add.s32 	%r13172, %r13171, %r13164;
	add.s32 	%r13173, %r13172, %r13037;
	xor.b32  	%r13174, %r13111, %r13074;
	and.b32  	%r13175, %r13148, %r13174;
	xor.b32  	%r13176, %r13175, %r13074;
	add.s32 	%r13177, %r13173, %r13176;
	shf.l.wrap.b32 	%r13178, %r13148, %r13148, 18;
	xor.b32  	%r13179, %r13178, %r13148;
	shf.l.wrap.b32 	%r13180, %r13179, %r13179, 27;
	xor.b32  	%r13181, %r13180, %r13148;
	shf.l.wrap.b32 	%r13182, %r13181, %r13181, 26;
	add.s32 	%r13183, %r13177, %r13182;
	add.s32 	%r13184, %r13183, -710438585;
	add.s32 	%r13185, %r13184, %r13048;
	shf.l.wrap.b32 	%r13186, %r13159, %r13159, 23;
	xor.b32  	%r13187, %r13186, %r13159;
	shf.l.wrap.b32 	%r13188, %r13187, %r13187, 21;
	xor.b32  	%r13189, %r13188, %r13159;
	shf.l.wrap.b32 	%r13190, %r13189, %r13189, 30;
	and.b32  	%r13191, %r13159, %r13122;
	or.b32  	%r13192, %r13159, %r13122;
	and.b32  	%r13193, %r13192, %r13085;
	or.b32  	%r13194, %r13193, %r13191;
	add.s32 	%r13195, %r13190, %r13194;
	add.s32 	%r13196, %r13195, %r13184;
	shf.l.wrap.b32 	%r13197, %r13135, %r13135, 15;
	shf.l.wrap.b32 	%r13198, %r13135, %r13135, 13;
	xor.b32  	%r13199, %r13197, %r13198;
	shr.u32 	%r13200, %r13135, 10;
	xor.b32  	%r13201, %r13199, %r13200;
	shf.l.wrap.b32 	%r13202, %r12286, %r12286, 25;
	shf.l.wrap.b32 	%r13203, %r12286, %r12286, 14;
	xor.b32  	%r13204, %r13202, %r13203;
	shr.u32 	%r13205, %r12286, 3;
	xor.b32  	%r13206, %r13204, %r13205;
	add.s32 	%r13207, %r13206, %r12279;
	add.s32 	%r13208, %r13207, %r12950;
	add.s32 	%r13209, %r13208, %r13201;
	add.s32 	%r13210, %r13209, %r13074;
	xor.b32  	%r13211, %r13148, %r13111;
	and.b32  	%r13212, %r13185, %r13211;
	xor.b32  	%r13213, %r13212, %r13111;
	add.s32 	%r13214, %r13210, %r13213;
	shf.l.wrap.b32 	%r13215, %r13185, %r13185, 18;
	xor.b32  	%r13216, %r13215, %r13185;
	shf.l.wrap.b32 	%r13217, %r13216, %r13216, 27;
	xor.b32  	%r13218, %r13217, %r13185;
	shf.l.wrap.b32 	%r13219, %r13218, %r13218, 26;
	add.s32 	%r13220, %r13214, %r13219;
	add.s32 	%r13221, %r13220, 113926993;
	add.s32 	%r13222, %r13221, %r13085;
	shf.l.wrap.b32 	%r13223, %r13196, %r13196, 23;
	xor.b32  	%r13224, %r13223, %r13196;
	shf.l.wrap.b32 	%r13225, %r13224, %r13224, 21;
	xor.b32  	%r13226, %r13225, %r13196;
	shf.l.wrap.b32 	%r13227, %r13226, %r13226, 30;
	and.b32  	%r13228, %r13196, %r13159;
	or.b32  	%r13229, %r13196, %r13159;
	and.b32  	%r13230, %r13229, %r13122;
	or.b32  	%r13231, %r13230, %r13228;
	add.s32 	%r13232, %r13227, %r13231;
	add.s32 	%r13233, %r13232, %r13221;
	shf.l.wrap.b32 	%r13234, %r13172, %r13172, 15;
	shf.l.wrap.b32 	%r13235, %r13172, %r13172, 13;
	xor.b32  	%r13236, %r13234, %r13235;
	shr.u32 	%r13237, %r13172, 10;
	xor.b32  	%r13238, %r13236, %r13237;
	shf.l.wrap.b32 	%r13239, %r12691, %r12691, 25;
	shf.l.wrap.b32 	%r13240, %r12691, %r12691, 14;
	xor.b32  	%r13241, %r13239, %r13240;
	shr.u32 	%r13242, %r12691, 3;
	xor.b32  	%r13243, %r13241, %r13242;
	add.s32 	%r13244, %r13243, %r12286;
	add.s32 	%r13245, %r13244, %r12987;
	add.s32 	%r13246, %r13245, %r13238;
	add.s32 	%r13247, %r13246, %r13111;
	xor.b32  	%r13248, %r13185, %r13148;
	and.b32  	%r13249, %r13222, %r13248;
	xor.b32  	%r13250, %r13249, %r13148;
	add.s32 	%r13251, %r13247, %r13250;
	shf.l.wrap.b32 	%r13252, %r13222, %r13222, 18;
	xor.b32  	%r13253, %r13252, %r13222;
	shf.l.wrap.b32 	%r13254, %r13253, %r13253, 27;
	xor.b32  	%r13255, %r13254, %r13222;
	shf.l.wrap.b32 	%r13256, %r13255, %r13255, 26;
	add.s32 	%r13257, %r13251, %r13256;
	add.s32 	%r13258, %r13257, 338241895;
	add.s32 	%r13259, %r13258, %r13122;
	shf.l.wrap.b32 	%r13260, %r13233, %r13233, 23;
	xor.b32  	%r13261, %r13260, %r13233;
	shf.l.wrap.b32 	%r13262, %r13261, %r13261, 21;
	xor.b32  	%r13263, %r13262, %r13233;
	shf.l.wrap.b32 	%r13264, %r13263, %r13263, 30;
	and.b32  	%r13265, %r13233, %r13196;
	or.b32  	%r13266, %r13233, %r13196;
	and.b32  	%r13267, %r13266, %r13159;
	or.b32  	%r13268, %r13267, %r13265;
	add.s32 	%r13269, %r13264, %r13268;
	add.s32 	%r13270, %r13269, %r13258;
	shf.l.wrap.b32 	%r13271, %r13209, %r13209, 15;
	shf.l.wrap.b32 	%r13272, %r13209, %r13209, 13;
	xor.b32  	%r13273, %r13271, %r13272;
	shr.u32 	%r13274, %r13209, 10;
	xor.b32  	%r13275, %r13273, %r13274;
	shf.l.wrap.b32 	%r13276, %r12728, %r12728, 25;
	shf.l.wrap.b32 	%r13277, %r12728, %r12728, 14;
	xor.b32  	%r13278, %r13276, %r13277;
	shr.u32 	%r13279, %r12728, 3;
	xor.b32  	%r13280, %r13278, %r13279;
	add.s32 	%r13281, %r13280, %r12691;
	add.s32 	%r13282, %r13281, %r13024;
	add.s32 	%r13283, %r13282, %r13275;
	add.s32 	%r13284, %r13283, %r13148;
	xor.b32  	%r13285, %r13222, %r13185;
	and.b32  	%r13286, %r13259, %r13285;
	xor.b32  	%r13287, %r13286, %r13185;
	add.s32 	%r13288, %r13284, %r13287;
	shf.l.wrap.b32 	%r13289, %r13259, %r13259, 18;
	xor.b32  	%r13290, %r13289, %r13259;
	shf.l.wrap.b32 	%r13291, %r13290, %r13290, 27;
	xor.b32  	%r13292, %r13291, %r13259;
	shf.l.wrap.b32 	%r13293, %r13292, %r13292, 26;
	add.s32 	%r13294, %r13288, %r13293;
	add.s32 	%r13295, %r13294, 666307205;
	add.s32 	%r13296, %r13295, %r13159;
	shf.l.wrap.b32 	%r13297, %r13270, %r13270, 23;
	xor.b32  	%r13298, %r13297, %r13270;
	shf.l.wrap.b32 	%r13299, %r13298, %r13298, 21;
	xor.b32  	%r13300, %r13299, %r13270;
	shf.l.wrap.b32 	%r13301, %r13300, %r13300, 30;
	and.b32  	%r13302, %r13270, %r13233;
	or.b32  	%r13303, %r13270, %r13233;
	and.b32  	%r13304, %r13303, %r13196;
	or.b32  	%r13305, %r13304, %r13302;
	add.s32 	%r13306, %r13301, %r13305;
	add.s32 	%r13307, %r13306, %r13295;
	shf.l.wrap.b32 	%r13308, %r13246, %r13246, 15;
	shf.l.wrap.b32 	%r13309, %r13246, %r13246, 13;
	xor.b32  	%r13310, %r13308, %r13309;
	shr.u32 	%r13311, %r13246, 10;
	xor.b32  	%r13312, %r13310, %r13311;
	shf.l.wrap.b32 	%r13313, %r12765, %r12765, 25;
	shf.l.wrap.b32 	%r13314, %r12765, %r12765, 14;
	xor.b32  	%r13315, %r13313, %r13314;
	shr.u32 	%r13316, %r12765, 3;
	xor.b32  	%r13317, %r13315, %r13316;
	add.s32 	%r13318, %r13317, %r12728;
	add.s32 	%r13319, %r13318, %r13061;
	add.s32 	%r13320, %r13319, %r13312;
	add.s32 	%r13321, %r13320, %r13185;
	xor.b32  	%r13322, %r13259, %r13222;
	and.b32  	%r13323, %r13296, %r13322;
	xor.b32  	%r13324, %r13323, %r13222;
	add.s32 	%r13325, %r13321, %r13324;
	shf.l.wrap.b32 	%r13326, %r13296, %r13296, 18;
	xor.b32  	%r13327, %r13326, %r13296;
	shf.l.wrap.b32 	%r13328, %r13327, %r13327, 27;
	xor.b32  	%r13329, %r13328, %r13296;
	shf.l.wrap.b32 	%r13330, %r13329, %r13329, 26;
	add.s32 	%r13331, %r13325, %r13330;
	add.s32 	%r13332, %r13331, 773529912;
	add.s32 	%r13333, %r13332, %r13196;
	shf.l.wrap.b32 	%r13334, %r13307, %r13307, 23;
	xor.b32  	%r13335, %r13334, %r13307;
	shf.l.wrap.b32 	%r13336, %r13335, %r13335, 21;
	xor.b32  	%r13337, %r13336, %r13307;
	shf.l.wrap.b32 	%r13338, %r13337, %r13337, 30;
	and.b32  	%r13339, %r13307, %r13270;
	or.b32  	%r13340, %r13307, %r13270;
	and.b32  	%r13341, %r13340, %r13233;
	or.b32  	%r13342, %r13341, %r13339;
	add.s32 	%r13343, %r13338, %r13342;
	add.s32 	%r13344, %r13343, %r13332;
	shf.l.wrap.b32 	%r13345, %r13283, %r13283, 15;
	shf.l.wrap.b32 	%r13346, %r13283, %r13283, 13;
	xor.b32  	%r13347, %r13345, %r13346;
	shr.u32 	%r13348, %r13283, 10;
	xor.b32  	%r13349, %r13347, %r13348;
	shf.l.wrap.b32 	%r13350, %r12802, %r12802, 25;
	shf.l.wrap.b32 	%r13351, %r12802, %r12802, 14;
	xor.b32  	%r13352, %r13350, %r13351;
	shr.u32 	%r13353, %r12802, 3;
	xor.b32  	%r13354, %r13352, %r13353;
	add.s32 	%r13355, %r13354, %r12765;
	add.s32 	%r13356, %r13355, %r13098;
	add.s32 	%r13357, %r13356, %r13349;
	add.s32 	%r13358, %r13357, %r13222;
	xor.b32  	%r13359, %r13296, %r13259;
	and.b32  	%r13360, %r13333, %r13359;
	xor.b32  	%r13361, %r13360, %r13259;
	add.s32 	%r13362, %r13358, %r13361;
	shf.l.wrap.b32 	%r13363, %r13333, %r13333, 18;
	xor.b32  	%r13364, %r13363, %r13333;
	shf.l.wrap.b32 	%r13365, %r13364, %r13364, 27;
	xor.b32  	%r13366, %r13365, %r13333;
	shf.l.wrap.b32 	%r13367, %r13366, %r13366, 26;
	add.s32 	%r13368, %r13362, %r13367;
	add.s32 	%r13369, %r13368, 1294757372;
	add.s32 	%r13370, %r13369, %r13233;
	shf.l.wrap.b32 	%r13371, %r13344, %r13344, 23;
	xor.b32  	%r13372, %r13371, %r13344;
	shf.l.wrap.b32 	%r13373, %r13372, %r13372, 21;
	xor.b32  	%r13374, %r13373, %r13344;
	shf.l.wrap.b32 	%r13375, %r13374, %r13374, 30;
	and.b32  	%r13376, %r13344, %r13307;
	or.b32  	%r13377, %r13344, %r13307;
	and.b32  	%r13378, %r13377, %r13270;
	or.b32  	%r13379, %r13378, %r13376;
	add.s32 	%r13380, %r13375, %r13379;
	add.s32 	%r13381, %r13380, %r13369;
	shf.l.wrap.b32 	%r13382, %r13320, %r13320, 15;
	shf.l.wrap.b32 	%r13383, %r13320, %r13320, 13;
	xor.b32  	%r13384, %r13382, %r13383;
	shr.u32 	%r13385, %r13320, 10;
	xor.b32  	%r13386, %r13384, %r13385;
	shf.l.wrap.b32 	%r13387, %r12839, %r12839, 25;
	shf.l.wrap.b32 	%r13388, %r12839, %r12839, 14;
	xor.b32  	%r13389, %r13387, %r13388;
	shr.u32 	%r13390, %r12839, 3;
	xor.b32  	%r13391, %r13389, %r13390;
	add.s32 	%r13392, %r13391, %r12802;
	add.s32 	%r13393, %r13392, %r13135;
	add.s32 	%r13394, %r13393, %r13386;
	add.s32 	%r13395, %r13394, %r13259;
	xor.b32  	%r13396, %r13333, %r13296;
	and.b32  	%r13397, %r13370, %r13396;
	xor.b32  	%r13398, %r13397, %r13296;
	add.s32 	%r13399, %r13395, %r13398;
	shf.l.wrap.b32 	%r13400, %r13370, %r13370, 18;
	xor.b32  	%r13401, %r13400, %r13370;
	shf.l.wrap.b32 	%r13402, %r13401, %r13401, 27;
	xor.b32  	%r13403, %r13402, %r13370;
	shf.l.wrap.b32 	%r13404, %r13403, %r13403, 26;
	add.s32 	%r13405, %r13399, %r13404;
	add.s32 	%r13406, %r13405, 1396182291;
	add.s32 	%r13407, %r13406, %r13270;
	shf.l.wrap.b32 	%r13408, %r13381, %r13381, 23;
	xor.b32  	%r13409, %r13408, %r13381;
	shf.l.wrap.b32 	%r13410, %r13409, %r13409, 21;
	xor.b32  	%r13411, %r13410, %r13381;
	shf.l.wrap.b32 	%r13412, %r13411, %r13411, 30;
	and.b32  	%r13413, %r13381, %r13344;
	or.b32  	%r13414, %r13381, %r13344;
	and.b32  	%r13415, %r13414, %r13307;
	or.b32  	%r13416, %r13415, %r13413;
	add.s32 	%r13417, %r13412, %r13416;
	add.s32 	%r13418, %r13417, %r13406;
	shf.l.wrap.b32 	%r13419, %r13357, %r13357, 15;
	shf.l.wrap.b32 	%r13420, %r13357, %r13357, 13;
	xor.b32  	%r13421, %r13419, %r13420;
	shr.u32 	%r13422, %r13357, 10;
	xor.b32  	%r13423, %r13421, %r13422;
	shf.l.wrap.b32 	%r13424, %r12876, %r12876, 25;
	shf.l.wrap.b32 	%r13425, %r12876, %r12876, 14;
	xor.b32  	%r13426, %r13424, %r13425;
	shr.u32 	%r13427, %r12876, 3;
	xor.b32  	%r13428, %r13426, %r13427;
	add.s32 	%r13429, %r13428, %r12839;
	add.s32 	%r13430, %r13429, %r13172;
	add.s32 	%r13431, %r13430, %r13423;
	add.s32 	%r13432, %r13431, %r13296;
	xor.b32  	%r13433, %r13370, %r13333;
	and.b32  	%r13434, %r13407, %r13433;
	xor.b32  	%r13435, %r13434, %r13333;
	add.s32 	%r13436, %r13432, %r13435;
	shf.l.wrap.b32 	%r13437, %r13407, %r13407, 18;
	xor.b32  	%r13438, %r13437, %r13407;
	shf.l.wrap.b32 	%r13439, %r13438, %r13438, 27;
	xor.b32  	%r13440, %r13439, %r13407;
	shf.l.wrap.b32 	%r13441, %r13440, %r13440, 26;
	add.s32 	%r13442, %r13436, %r13441;
	add.s32 	%r13443, %r13442, 1695183700;
	add.s32 	%r13444, %r13443, %r13307;
	shf.l.wrap.b32 	%r13445, %r13418, %r13418, 23;
	xor.b32  	%r13446, %r13445, %r13418;
	shf.l.wrap.b32 	%r13447, %r13446, %r13446, 21;
	xor.b32  	%r13448, %r13447, %r13418;
	shf.l.wrap.b32 	%r13449, %r13448, %r13448, 30;
	and.b32  	%r13450, %r13418, %r13381;
	or.b32  	%r13451, %r13418, %r13381;
	and.b32  	%r13452, %r13451, %r13344;
	or.b32  	%r13453, %r13452, %r13450;
	add.s32 	%r13454, %r13449, %r13453;
	add.s32 	%r13455, %r13454, %r13443;
	shf.l.wrap.b32 	%r13456, %r13394, %r13394, 15;
	shf.l.wrap.b32 	%r13457, %r13394, %r13394, 13;
	xor.b32  	%r13458, %r13456, %r13457;
	shr.u32 	%r13459, %r13394, 10;
	xor.b32  	%r13460, %r13458, %r13459;
	shf.l.wrap.b32 	%r13461, %r12913, %r12913, 25;
	shf.l.wrap.b32 	%r13462, %r12913, %r12913, 14;
	xor.b32  	%r13463, %r13461, %r13462;
	shr.u32 	%r13464, %r12913, 3;
	xor.b32  	%r13465, %r13463, %r13464;
	add.s32 	%r13466, %r13465, %r12876;
	add.s32 	%r13467, %r13466, %r13209;
	add.s32 	%r13468, %r13467, %r13460;
	add.s32 	%r13469, %r13468, %r13333;
	xor.b32  	%r13470, %r13407, %r13370;
	and.b32  	%r13471, %r13444, %r13470;
	xor.b32  	%r13472, %r13471, %r13370;
	add.s32 	%r13473, %r13469, %r13472;
	shf.l.wrap.b32 	%r13474, %r13444, %r13444, 18;
	xor.b32  	%r13475, %r13474, %r13444;
	shf.l.wrap.b32 	%r13476, %r13475, %r13475, 27;
	xor.b32  	%r13477, %r13476, %r13444;
	shf.l.wrap.b32 	%r13478, %r13477, %r13477, 26;
	add.s32 	%r13479, %r13473, %r13478;
	add.s32 	%r13480, %r13479, 1986661051;
	add.s32 	%r13481, %r13480, %r13344;
	shf.l.wrap.b32 	%r13482, %r13455, %r13455, 23;
	xor.b32  	%r13483, %r13482, %r13455;
	shf.l.wrap.b32 	%r13484, %r13483, %r13483, 21;
	xor.b32  	%r13485, %r13484, %r13455;
	shf.l.wrap.b32 	%r13486, %r13485, %r13485, 30;
	and.b32  	%r13487, %r13455, %r13418;
	or.b32  	%r13488, %r13455, %r13418;
	and.b32  	%r13489, %r13488, %r13381;
	or.b32  	%r13490, %r13489, %r13487;
	add.s32 	%r13491, %r13486, %r13490;
	add.s32 	%r13492, %r13491, %r13480;
	shf.l.wrap.b32 	%r13493, %r13431, %r13431, 15;
	shf.l.wrap.b32 	%r13494, %r13431, %r13431, 13;
	xor.b32  	%r13495, %r13493, %r13494;
	shr.u32 	%r13496, %r13431, 10;
	xor.b32  	%r13497, %r13495, %r13496;
	shf.l.wrap.b32 	%r13498, %r12950, %r12950, 25;
	shf.l.wrap.b32 	%r13499, %r12950, %r12950, 14;
	xor.b32  	%r13500, %r13498, %r13499;
	shr.u32 	%r13501, %r12950, 3;
	xor.b32  	%r13502, %r13500, %r13501;
	add.s32 	%r13503, %r13502, %r12913;
	add.s32 	%r13504, %r13503, %r13246;
	add.s32 	%r13505, %r13504, %r13497;
	add.s32 	%r13506, %r13505, %r13370;
	xor.b32  	%r13507, %r13444, %r13407;
	and.b32  	%r13508, %r13481, %r13507;
	xor.b32  	%r13509, %r13508, %r13407;
	add.s32 	%r13510, %r13506, %r13509;
	shf.l.wrap.b32 	%r13511, %r13481, %r13481, 18;
	xor.b32  	%r13512, %r13511, %r13481;
	shf.l.wrap.b32 	%r13513, %r13512, %r13512, 27;
	xor.b32  	%r13514, %r13513, %r13481;
	shf.l.wrap.b32 	%r13515, %r13514, %r13514, 26;
	add.s32 	%r13516, %r13510, %r13515;
	add.s32 	%r13517, %r13516, -2117940946;
	add.s32 	%r13518, %r13517, %r13381;
	shf.l.wrap.b32 	%r13519, %r13492, %r13492, 23;
	xor.b32  	%r13520, %r13519, %r13492;
	shf.l.wrap.b32 	%r13521, %r13520, %r13520, 21;
	xor.b32  	%r13522, %r13521, %r13492;
	shf.l.wrap.b32 	%r13523, %r13522, %r13522, 30;
	and.b32  	%r13524, %r13492, %r13455;
	or.b32  	%r13525, %r13492, %r13455;
	and.b32  	%r13526, %r13525, %r13418;
	or.b32  	%r13527, %r13526, %r13524;
	add.s32 	%r13528, %r13523, %r13527;
	add.s32 	%r13529, %r13528, %r13517;
	shf.l.wrap.b32 	%r13530, %r13468, %r13468, 15;
	shf.l.wrap.b32 	%r13531, %r13468, %r13468, 13;
	xor.b32  	%r13532, %r13530, %r13531;
	shr.u32 	%r13533, %r13468, 10;
	xor.b32  	%r13534, %r13532, %r13533;
	shf.l.wrap.b32 	%r13535, %r12987, %r12987, 25;
	shf.l.wrap.b32 	%r13536, %r12987, %r12987, 14;
	xor.b32  	%r13537, %r13535, %r13536;
	shr.u32 	%r13538, %r12987, 3;
	xor.b32  	%r13539, %r13537, %r13538;
	add.s32 	%r13540, %r13539, %r12950;
	add.s32 	%r13541, %r13540, %r13283;
	add.s32 	%r13542, %r13541, %r13534;
	add.s32 	%r13543, %r13542, %r13407;
	xor.b32  	%r13544, %r13481, %r13444;
	and.b32  	%r13545, %r13518, %r13544;
	xor.b32  	%r13546, %r13545, %r13444;
	add.s32 	%r13547, %r13543, %r13546;
	shf.l.wrap.b32 	%r13548, %r13518, %r13518, 18;
	xor.b32  	%r13549, %r13548, %r13518;
	shf.l.wrap.b32 	%r13550, %r13549, %r13549, 27;
	xor.b32  	%r13551, %r13550, %r13518;
	shf.l.wrap.b32 	%r13552, %r13551, %r13551, 26;
	add.s32 	%r13553, %r13547, %r13552;
	add.s32 	%r13554, %r13553, -1838011259;
	add.s32 	%r13555, %r13554, %r13418;
	shf.l.wrap.b32 	%r13556, %r13529, %r13529, 23;
	xor.b32  	%r13557, %r13556, %r13529;
	shf.l.wrap.b32 	%r13558, %r13557, %r13557, 21;
	xor.b32  	%r13559, %r13558, %r13529;
	shf.l.wrap.b32 	%r13560, %r13559, %r13559, 30;
	and.b32  	%r13561, %r13529, %r13492;
	or.b32  	%r13562, %r13529, %r13492;
	and.b32  	%r13563, %r13562, %r13455;
	or.b32  	%r13564, %r13563, %r13561;
	add.s32 	%r13565, %r13560, %r13564;
	add.s32 	%r13566, %r13565, %r13554;
	shf.l.wrap.b32 	%r13567, %r13505, %r13505, 15;
	shf.l.wrap.b32 	%r13568, %r13505, %r13505, 13;
	xor.b32  	%r13569, %r13567, %r13568;
	shr.u32 	%r13570, %r13505, 10;
	xor.b32  	%r13571, %r13569, %r13570;
	shf.l.wrap.b32 	%r13572, %r13024, %r13024, 25;
	shf.l.wrap.b32 	%r13573, %r13024, %r13024, 14;
	xor.b32  	%r13574, %r13572, %r13573;
	shr.u32 	%r13575, %r13024, 3;
	xor.b32  	%r13576, %r13574, %r13575;
	add.s32 	%r13577, %r13576, %r12987;
	add.s32 	%r13578, %r13577, %r13320;
	add.s32 	%r13579, %r13578, %r13571;
	add.s32 	%r13580, %r13579, %r13444;
	xor.b32  	%r13581, %r13518, %r13481;
	and.b32  	%r13582, %r13555, %r13581;
	xor.b32  	%r13583, %r13582, %r13481;
	add.s32 	%r13584, %r13580, %r13583;
	shf.l.wrap.b32 	%r13585, %r13555, %r13555, 18;
	xor.b32  	%r13586, %r13585, %r13555;
	shf.l.wrap.b32 	%r13587, %r13586, %r13586, 27;
	xor.b32  	%r13588, %r13587, %r13555;
	shf.l.wrap.b32 	%r13589, %r13588, %r13588, 26;
	add.s32 	%r13590, %r13584, %r13589;
	add.s32 	%r13591, %r13590, -1564481375;
	add.s32 	%r13592, %r13591, %r13455;
	shf.l.wrap.b32 	%r13593, %r13566, %r13566, 23;
	xor.b32  	%r13594, %r13593, %r13566;
	shf.l.wrap.b32 	%r13595, %r13594, %r13594, 21;
	xor.b32  	%r13596, %r13595, %r13566;
	shf.l.wrap.b32 	%r13597, %r13596, %r13596, 30;
	and.b32  	%r13598, %r13566, %r13529;
	or.b32  	%r13599, %r13566, %r13529;
	and.b32  	%r13600, %r13599, %r13492;
	or.b32  	%r13601, %r13600, %r13598;
	add.s32 	%r13602, %r13597, %r13601;
	add.s32 	%r13603, %r13602, %r13591;
	shf.l.wrap.b32 	%r13604, %r13542, %r13542, 15;
	shf.l.wrap.b32 	%r13605, %r13542, %r13542, 13;
	xor.b32  	%r13606, %r13604, %r13605;
	shr.u32 	%r13607, %r13542, 10;
	xor.b32  	%r13608, %r13606, %r13607;
	shf.l.wrap.b32 	%r13609, %r13061, %r13061, 25;
	shf.l.wrap.b32 	%r13610, %r13061, %r13061, 14;
	xor.b32  	%r13611, %r13609, %r13610;
	shr.u32 	%r13612, %r13061, 3;
	xor.b32  	%r13613, %r13611, %r13612;
	add.s32 	%r13614, %r13613, %r13024;
	add.s32 	%r13615, %r13614, %r13357;
	add.s32 	%r13616, %r13615, %r13608;
	add.s32 	%r13617, %r13616, %r13481;
	xor.b32  	%r13618, %r13555, %r13518;
	and.b32  	%r13619, %r13592, %r13618;
	xor.b32  	%r13620, %r13619, %r13518;
	add.s32 	%r13621, %r13617, %r13620;
	shf.l.wrap.b32 	%r13622, %r13592, %r13592, 18;
	xor.b32  	%r13623, %r13622, %r13592;
	shf.l.wrap.b32 	%r13624, %r13623, %r13623, 27;
	xor.b32  	%r13625, %r13624, %r13592;
	shf.l.wrap.b32 	%r13626, %r13625, %r13625, 26;
	add.s32 	%r13627, %r13621, %r13626;
	add.s32 	%r13628, %r13627, -1474664885;
	add.s32 	%r13629, %r13628, %r13492;
	shf.l.wrap.b32 	%r13630, %r13603, %r13603, 23;
	xor.b32  	%r13631, %r13630, %r13603;
	shf.l.wrap.b32 	%r13632, %r13631, %r13631, 21;
	xor.b32  	%r13633, %r13632, %r13603;
	shf.l.wrap.b32 	%r13634, %r13633, %r13633, 30;
	and.b32  	%r13635, %r13603, %r13566;
	or.b32  	%r13636, %r13603, %r13566;
	and.b32  	%r13637, %r13636, %r13529;
	or.b32  	%r13638, %r13637, %r13635;
	add.s32 	%r13639, %r13634, %r13638;
	add.s32 	%r13640, %r13639, %r13628;
	shf.l.wrap.b32 	%r13641, %r13579, %r13579, 15;
	shf.l.wrap.b32 	%r13642, %r13579, %r13579, 13;
	xor.b32  	%r13643, %r13641, %r13642;
	shr.u32 	%r13644, %r13579, 10;
	xor.b32  	%r13645, %r13643, %r13644;
	shf.l.wrap.b32 	%r13646, %r13098, %r13098, 25;
	shf.l.wrap.b32 	%r13647, %r13098, %r13098, 14;
	xor.b32  	%r13648, %r13646, %r13647;
	shr.u32 	%r13649, %r13098, 3;
	xor.b32  	%r13650, %r13648, %r13649;
	add.s32 	%r13651, %r13650, %r13061;
	add.s32 	%r13652, %r13651, %r13394;
	add.s32 	%r13653, %r13652, %r13645;
	add.s32 	%r13654, %r13653, %r13518;
	xor.b32  	%r13655, %r13592, %r13555;
	and.b32  	%r13656, %r13629, %r13655;
	xor.b32  	%r13657, %r13656, %r13555;
	add.s32 	%r13658, %r13654, %r13657;
	shf.l.wrap.b32 	%r13659, %r13629, %r13629, 18;
	xor.b32  	%r13660, %r13659, %r13629;
	shf.l.wrap.b32 	%r13661, %r13660, %r13660, 27;
	xor.b32  	%r13662, %r13661, %r13629;
	shf.l.wrap.b32 	%r13663, %r13662, %r13662, 26;
	add.s32 	%r13664, %r13658, %r13663;
	add.s32 	%r13665, %r13664, -1035236496;
	add.s32 	%r13666, %r13665, %r13529;
	shf.l.wrap.b32 	%r13667, %r13640, %r13640, 23;
	xor.b32  	%r13668, %r13667, %r13640;
	shf.l.wrap.b32 	%r13669, %r13668, %r13668, 21;
	xor.b32  	%r13670, %r13669, %r13640;
	shf.l.wrap.b32 	%r13671, %r13670, %r13670, 30;
	and.b32  	%r13672, %r13640, %r13603;
	or.b32  	%r13673, %r13640, %r13603;
	and.b32  	%r13674, %r13673, %r13566;
	or.b32  	%r13675, %r13674, %r13672;
	add.s32 	%r13676, %r13671, %r13675;
	add.s32 	%r13677, %r13676, %r13665;
	shf.l.wrap.b32 	%r13678, %r13616, %r13616, 15;
	shf.l.wrap.b32 	%r13679, %r13616, %r13616, 13;
	xor.b32  	%r13680, %r13678, %r13679;
	shr.u32 	%r13681, %r13616, 10;
	xor.b32  	%r13682, %r13680, %r13681;
	shf.l.wrap.b32 	%r13683, %r13135, %r13135, 25;
	shf.l.wrap.b32 	%r13684, %r13135, %r13135, 14;
	xor.b32  	%r13685, %r13683, %r13684;
	shr.u32 	%r13686, %r13135, 3;
	xor.b32  	%r13687, %r13685, %r13686;
	add.s32 	%r13688, %r13687, %r13098;
	add.s32 	%r13689, %r13688, %r13431;
	add.s32 	%r13690, %r13689, %r13682;
	add.s32 	%r13691, %r13690, %r13555;
	xor.b32  	%r13692, %r13629, %r13592;
	and.b32  	%r13693, %r13666, %r13692;
	xor.b32  	%r13694, %r13693, %r13592;
	add.s32 	%r13695, %r13691, %r13694;
	shf.l.wrap.b32 	%r13696, %r13666, %r13666, 18;
	xor.b32  	%r13697, %r13696, %r13666;
	shf.l.wrap.b32 	%r13698, %r13697, %r13697, 27;
	xor.b32  	%r13699, %r13698, %r13666;
	shf.l.wrap.b32 	%r13700, %r13699, %r13699, 26;
	add.s32 	%r13701, %r13695, %r13700;
	add.s32 	%r13702, %r13701, -949202525;
	add.s32 	%r13703, %r13702, %r13566;
	shf.l.wrap.b32 	%r13704, %r13677, %r13677, 23;
	xor.b32  	%r13705, %r13704, %r13677;
	shf.l.wrap.b32 	%r13706, %r13705, %r13705, 21;
	xor.b32  	%r13707, %r13706, %r13677;
	shf.l.wrap.b32 	%r13708, %r13707, %r13707, 30;
	and.b32  	%r13709, %r13677, %r13640;
	or.b32  	%r13710, %r13677, %r13640;
	and.b32  	%r13711, %r13710, %r13603;
	or.b32  	%r13712, %r13711, %r13709;
	add.s32 	%r13713, %r13708, %r13712;
	add.s32 	%r13714, %r13713, %r13702;
	shf.l.wrap.b32 	%r13715, %r13653, %r13653, 15;
	shf.l.wrap.b32 	%r13716, %r13653, %r13653, 13;
	xor.b32  	%r13717, %r13715, %r13716;
	shr.u32 	%r13718, %r13653, 10;
	xor.b32  	%r13719, %r13717, %r13718;
	shf.l.wrap.b32 	%r13720, %r13172, %r13172, 25;
	shf.l.wrap.b32 	%r13721, %r13172, %r13172, 14;
	xor.b32  	%r13722, %r13720, %r13721;
	shr.u32 	%r13723, %r13172, 3;
	xor.b32  	%r13724, %r13722, %r13723;
	add.s32 	%r13725, %r13724, %r13135;
	add.s32 	%r13726, %r13725, %r13468;
	add.s32 	%r13727, %r13726, %r13719;
	add.s32 	%r13728, %r13727, %r13592;
	xor.b32  	%r13729, %r13666, %r13629;
	and.b32  	%r13730, %r13703, %r13729;
	xor.b32  	%r13731, %r13730, %r13629;
	add.s32 	%r13732, %r13728, %r13731;
	shf.l.wrap.b32 	%r13733, %r13703, %r13703, 18;
	xor.b32  	%r13734, %r13733, %r13703;
	shf.l.wrap.b32 	%r13735, %r13734, %r13734, 27;
	xor.b32  	%r13736, %r13735, %r13703;
	shf.l.wrap.b32 	%r13737, %r13736, %r13736, 26;
	add.s32 	%r13738, %r13732, %r13737;
	add.s32 	%r13739, %r13738, -778901479;
	add.s32 	%r13740, %r13739, %r13603;
	shf.l.wrap.b32 	%r13741, %r13714, %r13714, 23;
	xor.b32  	%r13742, %r13741, %r13714;
	shf.l.wrap.b32 	%r13743, %r13742, %r13742, 21;
	xor.b32  	%r13744, %r13743, %r13714;
	shf.l.wrap.b32 	%r13745, %r13744, %r13744, 30;
	and.b32  	%r13746, %r13714, %r13677;
	or.b32  	%r13747, %r13714, %r13677;
	and.b32  	%r13748, %r13747, %r13640;
	or.b32  	%r13749, %r13748, %r13746;
	add.s32 	%r13750, %r13745, %r13749;
	add.s32 	%r13751, %r13750, %r13739;
	shf.l.wrap.b32 	%r13752, %r13690, %r13690, 15;
	shf.l.wrap.b32 	%r13753, %r13690, %r13690, 13;
	xor.b32  	%r13754, %r13752, %r13753;
	shr.u32 	%r13755, %r13690, 10;
	xor.b32  	%r13756, %r13754, %r13755;
	shf.l.wrap.b32 	%r13757, %r13209, %r13209, 25;
	shf.l.wrap.b32 	%r13758, %r13209, %r13209, 14;
	xor.b32  	%r13759, %r13757, %r13758;
	shr.u32 	%r13760, %r13209, 3;
	xor.b32  	%r13761, %r13759, %r13760;
	add.s32 	%r13762, %r13761, %r13172;
	add.s32 	%r13763, %r13762, %r13505;
	add.s32 	%r13764, %r13763, %r13756;
	add.s32 	%r13765, %r13764, %r13629;
	xor.b32  	%r13766, %r13703, %r13666;
	and.b32  	%r13767, %r13740, %r13766;
	xor.b32  	%r13768, %r13767, %r13666;
	add.s32 	%r13769, %r13765, %r13768;
	shf.l.wrap.b32 	%r13770, %r13740, %r13740, 18;
	xor.b32  	%r13771, %r13770, %r13740;
	shf.l.wrap.b32 	%r13772, %r13771, %r13771, 27;
	xor.b32  	%r13773, %r13772, %r13740;
	shf.l.wrap.b32 	%r13774, %r13773, %r13773, 26;
	add.s32 	%r13775, %r13769, %r13774;
	add.s32 	%r13776, %r13775, -694614492;
	add.s32 	%r13777, %r13776, %r13640;
	shf.l.wrap.b32 	%r13778, %r13751, %r13751, 23;
	xor.b32  	%r13779, %r13778, %r13751;
	shf.l.wrap.b32 	%r13780, %r13779, %r13779, 21;
	xor.b32  	%r13781, %r13780, %r13751;
	shf.l.wrap.b32 	%r13782, %r13781, %r13781, 30;
	and.b32  	%r13783, %r13751, %r13714;
	or.b32  	%r13784, %r13751, %r13714;
	and.b32  	%r13785, %r13784, %r13677;
	or.b32  	%r13786, %r13785, %r13783;
	add.s32 	%r13787, %r13782, %r13786;
	add.s32 	%r13788, %r13787, %r13776;
	shf.l.wrap.b32 	%r13789, %r13727, %r13727, 15;
	shf.l.wrap.b32 	%r13790, %r13727, %r13727, 13;
	xor.b32  	%r13791, %r13789, %r13790;
	shr.u32 	%r13792, %r13727, 10;
	xor.b32  	%r13793, %r13791, %r13792;
	shf.l.wrap.b32 	%r13794, %r13246, %r13246, 25;
	shf.l.wrap.b32 	%r13795, %r13246, %r13246, 14;
	xor.b32  	%r13796, %r13794, %r13795;
	shr.u32 	%r13797, %r13246, 3;
	xor.b32  	%r13798, %r13796, %r13797;
	add.s32 	%r13799, %r13798, %r13209;
	add.s32 	%r13800, %r13799, %r13542;
	add.s32 	%r13801, %r13800, %r13793;
	add.s32 	%r13802, %r13801, %r13666;
	xor.b32  	%r13803, %r13740, %r13703;
	and.b32  	%r13804, %r13777, %r13803;
	xor.b32  	%r13805, %r13804, %r13703;
	add.s32 	%r13806, %r13802, %r13805;
	shf.l.wrap.b32 	%r13807, %r13777, %r13777, 18;
	xor.b32  	%r13808, %r13807, %r13777;
	shf.l.wrap.b32 	%r13809, %r13808, %r13808, 27;
	xor.b32  	%r13810, %r13809, %r13777;
	shf.l.wrap.b32 	%r13811, %r13810, %r13810, 26;
	add.s32 	%r13812, %r13806, %r13811;
	add.s32 	%r13813, %r13812, -200395387;
	add.s32 	%r13814, %r13813, %r13677;
	shf.l.wrap.b32 	%r13815, %r13788, %r13788, 23;
	xor.b32  	%r13816, %r13815, %r13788;
	shf.l.wrap.b32 	%r13817, %r13816, %r13816, 21;
	xor.b32  	%r13818, %r13817, %r13788;
	shf.l.wrap.b32 	%r13819, %r13818, %r13818, 30;
	and.b32  	%r13820, %r13788, %r13751;
	or.b32  	%r13821, %r13788, %r13751;
	and.b32  	%r13822, %r13821, %r13714;
	or.b32  	%r13823, %r13822, %r13820;
	add.s32 	%r13824, %r13819, %r13823;
	add.s32 	%r13825, %r13824, %r13813;
	shf.l.wrap.b32 	%r13826, %r13764, %r13764, 15;
	shf.l.wrap.b32 	%r13827, %r13764, %r13764, 13;
	xor.b32  	%r13828, %r13826, %r13827;
	shr.u32 	%r13829, %r13764, 10;
	xor.b32  	%r13830, %r13828, %r13829;
	shf.l.wrap.b32 	%r13831, %r13283, %r13283, 25;
	shf.l.wrap.b32 	%r13832, %r13283, %r13283, 14;
	xor.b32  	%r13833, %r13831, %r13832;
	shr.u32 	%r13834, %r13283, 3;
	xor.b32  	%r13835, %r13833, %r13834;
	add.s32 	%r13836, %r13835, %r13246;
	add.s32 	%r13837, %r13836, %r13579;
	add.s32 	%r13838, %r13837, %r13830;
	add.s32 	%r13839, %r13838, %r13703;
	xor.b32  	%r13840, %r13777, %r13740;
	and.b32  	%r13841, %r13814, %r13840;
	xor.b32  	%r13842, %r13841, %r13740;
	add.s32 	%r13843, %r13839, %r13842;
	shf.l.wrap.b32 	%r13844, %r13814, %r13814, 18;
	xor.b32  	%r13845, %r13844, %r13814;
	shf.l.wrap.b32 	%r13846, %r13845, %r13845, 27;
	xor.b32  	%r13847, %r13846, %r13814;
	shf.l.wrap.b32 	%r13848, %r13847, %r13847, 26;
	add.s32 	%r13849, %r13843, %r13848;
	add.s32 	%r13850, %r13849, 275423344;
	add.s32 	%r13851, %r13850, %r13714;
	shf.l.wrap.b32 	%r13852, %r13825, %r13825, 23;
	xor.b32  	%r13853, %r13852, %r13825;
	shf.l.wrap.b32 	%r13854, %r13853, %r13853, 21;
	xor.b32  	%r13855, %r13854, %r13825;
	shf.l.wrap.b32 	%r13856, %r13855, %r13855, 30;
	and.b32  	%r13857, %r13825, %r13788;
	or.b32  	%r13858, %r13825, %r13788;
	and.b32  	%r13859, %r13858, %r13751;
	or.b32  	%r13860, %r13859, %r13857;
	add.s32 	%r13861, %r13856, %r13860;
	add.s32 	%r13862, %r13861, %r13850;
	shf.l.wrap.b32 	%r13863, %r13801, %r13801, 15;
	shf.l.wrap.b32 	%r13864, %r13801, %r13801, 13;
	xor.b32  	%r13865, %r13863, %r13864;
	shr.u32 	%r13866, %r13801, 10;
	xor.b32  	%r13867, %r13865, %r13866;
	shf.l.wrap.b32 	%r13868, %r13320, %r13320, 25;
	shf.l.wrap.b32 	%r13869, %r13320, %r13320, 14;
	xor.b32  	%r13870, %r13868, %r13869;
	shr.u32 	%r13871, %r13320, 3;
	xor.b32  	%r13872, %r13870, %r13871;
	add.s32 	%r13873, %r13872, %r13283;
	add.s32 	%r13874, %r13873, %r13616;
	add.s32 	%r13875, %r13874, %r13867;
	add.s32 	%r13876, %r13875, %r13740;
	xor.b32  	%r13877, %r13814, %r13777;
	and.b32  	%r13878, %r13851, %r13877;
	xor.b32  	%r13879, %r13878, %r13777;
	add.s32 	%r13880, %r13876, %r13879;
	shf.l.wrap.b32 	%r13881, %r13851, %r13851, 18;
	xor.b32  	%r13882, %r13881, %r13851;
	shf.l.wrap.b32 	%r13883, %r13882, %r13882, 27;
	xor.b32  	%r13884, %r13883, %r13851;
	shf.l.wrap.b32 	%r13885, %r13884, %r13884, 26;
	add.s32 	%r13886, %r13880, %r13885;
	add.s32 	%r13887, %r13886, 430227734;
	add.s32 	%r13888, %r13887, %r13751;
	shf.l.wrap.b32 	%r13889, %r13862, %r13862, 23;
	xor.b32  	%r13890, %r13889, %r13862;
	shf.l.wrap.b32 	%r13891, %r13890, %r13890, 21;
	xor.b32  	%r13892, %r13891, %r13862;
	shf.l.wrap.b32 	%r13893, %r13892, %r13892, 30;
	and.b32  	%r13894, %r13862, %r13825;
	or.b32  	%r13895, %r13862, %r13825;
	and.b32  	%r13896, %r13895, %r13788;
	or.b32  	%r13897, %r13896, %r13894;
	add.s32 	%r13898, %r13893, %r13897;
	add.s32 	%r13899, %r13898, %r13887;
	shf.l.wrap.b32 	%r13900, %r13838, %r13838, 15;
	shf.l.wrap.b32 	%r13901, %r13838, %r13838, 13;
	xor.b32  	%r13902, %r13900, %r13901;
	shr.u32 	%r13903, %r13838, 10;
	xor.b32  	%r13904, %r13902, %r13903;
	shf.l.wrap.b32 	%r13905, %r13357, %r13357, 25;
	shf.l.wrap.b32 	%r13906, %r13357, %r13357, 14;
	xor.b32  	%r13907, %r13905, %r13906;
	shr.u32 	%r13908, %r13357, 3;
	xor.b32  	%r13909, %r13907, %r13908;
	add.s32 	%r13910, %r13909, %r13320;
	add.s32 	%r13911, %r13910, %r13653;
	add.s32 	%r13912, %r13911, %r13904;
	add.s32 	%r13913, %r13912, %r13777;
	xor.b32  	%r13914, %r13851, %r13814;
	and.b32  	%r13915, %r13888, %r13914;
	xor.b32  	%r13916, %r13915, %r13814;
	add.s32 	%r13917, %r13913, %r13916;
	shf.l.wrap.b32 	%r13918, %r13888, %r13888, 18;
	xor.b32  	%r13919, %r13918, %r13888;
	shf.l.wrap.b32 	%r13920, %r13919, %r13919, 27;
	xor.b32  	%r13921, %r13920, %r13888;
	shf.l.wrap.b32 	%r13922, %r13921, %r13921, 26;
	add.s32 	%r13923, %r13917, %r13922;
	add.s32 	%r13924, %r13923, 506948616;
	add.s32 	%r13925, %r13924, %r13788;
	shf.l.wrap.b32 	%r13926, %r13899, %r13899, 23;
	xor.b32  	%r13927, %r13926, %r13899;
	shf.l.wrap.b32 	%r13928, %r13927, %r13927, 21;
	xor.b32  	%r13929, %r13928, %r13899;
	shf.l.wrap.b32 	%r13930, %r13929, %r13929, 30;
	and.b32  	%r13931, %r13899, %r13862;
	or.b32  	%r13932, %r13899, %r13862;
	and.b32  	%r13933, %r13932, %r13825;
	or.b32  	%r13934, %r13933, %r13931;
	add.s32 	%r13935, %r13930, %r13934;
	add.s32 	%r13936, %r13935, %r13924;
	shf.l.wrap.b32 	%r13937, %r13875, %r13875, 15;
	shf.l.wrap.b32 	%r13938, %r13875, %r13875, 13;
	xor.b32  	%r13939, %r13937, %r13938;
	shr.u32 	%r13940, %r13875, 10;
	xor.b32  	%r13941, %r13939, %r13940;
	shf.l.wrap.b32 	%r13942, %r13394, %r13394, 25;
	shf.l.wrap.b32 	%r13943, %r13394, %r13394, 14;
	xor.b32  	%r13944, %r13942, %r13943;
	shr.u32 	%r13945, %r13394, 3;
	xor.b32  	%r13946, %r13944, %r13945;
	add.s32 	%r13947, %r13946, %r13357;
	add.s32 	%r13948, %r13947, %r13690;
	add.s32 	%r13949, %r13948, %r13941;
	add.s32 	%r13950, %r13949, %r13814;
	xor.b32  	%r13951, %r13888, %r13851;
	and.b32  	%r13952, %r13925, %r13951;
	xor.b32  	%r13953, %r13952, %r13851;
	add.s32 	%r13954, %r13950, %r13953;
	shf.l.wrap.b32 	%r13955, %r13925, %r13925, 18;
	xor.b32  	%r13956, %r13955, %r13925;
	shf.l.wrap.b32 	%r13957, %r13956, %r13956, 27;
	xor.b32  	%r13958, %r13957, %r13925;
	shf.l.wrap.b32 	%r13959, %r13958, %r13958, 26;
	add.s32 	%r13960, %r13954, %r13959;
	add.s32 	%r13961, %r13960, 659060556;
	add.s32 	%r13962, %r13961, %r13825;
	shf.l.wrap.b32 	%r13963, %r13936, %r13936, 23;
	xor.b32  	%r13964, %r13963, %r13936;
	shf.l.wrap.b32 	%r13965, %r13964, %r13964, 21;
	xor.b32  	%r13966, %r13965, %r13936;
	shf.l.wrap.b32 	%r13967, %r13966, %r13966, 30;
	and.b32  	%r13968, %r13936, %r13899;
	or.b32  	%r13969, %r13936, %r13899;
	and.b32  	%r13970, %r13969, %r13862;
	or.b32  	%r13971, %r13970, %r13968;
	add.s32 	%r13972, %r13967, %r13971;
	add.s32 	%r13973, %r13972, %r13961;
	shf.l.wrap.b32 	%r13974, %r13912, %r13912, 15;
	shf.l.wrap.b32 	%r13975, %r13912, %r13912, 13;
	xor.b32  	%r13976, %r13974, %r13975;
	shr.u32 	%r13977, %r13912, 10;
	xor.b32  	%r13978, %r13976, %r13977;
	shf.l.wrap.b32 	%r13979, %r13431, %r13431, 25;
	shf.l.wrap.b32 	%r13980, %r13431, %r13431, 14;
	xor.b32  	%r13981, %r13979, %r13980;
	shr.u32 	%r13982, %r13431, 3;
	xor.b32  	%r13983, %r13981, %r13982;
	add.s32 	%r13984, %r13983, %r13394;
	add.s32 	%r13985, %r13984, %r13727;
	add.s32 	%r13986, %r13985, %r13978;
	add.s32 	%r13987, %r13986, %r13851;
	xor.b32  	%r13988, %r13925, %r13888;
	and.b32  	%r13989, %r13962, %r13988;
	xor.b32  	%r13990, %r13989, %r13888;
	add.s32 	%r13991, %r13987, %r13990;
	shf.l.wrap.b32 	%r13992, %r13962, %r13962, 18;
	xor.b32  	%r13993, %r13992, %r13962;
	shf.l.wrap.b32 	%r13994, %r13993, %r13993, 27;
	xor.b32  	%r13995, %r13994, %r13962;
	shf.l.wrap.b32 	%r13996, %r13995, %r13995, 26;
	add.s32 	%r13997, %r13991, %r13996;
	add.s32 	%r13998, %r13997, 883997877;
	add.s32 	%r13999, %r13998, %r13862;
	shf.l.wrap.b32 	%r14000, %r13973, %r13973, 23;
	xor.b32  	%r14001, %r14000, %r13973;
	shf.l.wrap.b32 	%r14002, %r14001, %r14001, 21;
	xor.b32  	%r14003, %r14002, %r13973;
	shf.l.wrap.b32 	%r14004, %r14003, %r14003, 30;
	and.b32  	%r14005, %r13973, %r13936;
	or.b32  	%r14006, %r13973, %r13936;
	and.b32  	%r14007, %r14006, %r13899;
	or.b32  	%r14008, %r14007, %r14005;
	add.s32 	%r14009, %r14004, %r14008;
	add.s32 	%r14010, %r14009, %r13998;
	shf.l.wrap.b32 	%r14011, %r13949, %r13949, 15;
	shf.l.wrap.b32 	%r14012, %r13949, %r13949, 13;
	xor.b32  	%r14013, %r14011, %r14012;
	shr.u32 	%r14014, %r13949, 10;
	xor.b32  	%r14015, %r14013, %r14014;
	shf.l.wrap.b32 	%r14016, %r13468, %r13468, 25;
	shf.l.wrap.b32 	%r14017, %r13468, %r13468, 14;
	xor.b32  	%r14018, %r14016, %r14017;
	shr.u32 	%r14019, %r13468, 3;
	xor.b32  	%r14020, %r14018, %r14019;
	add.s32 	%r14021, %r14020, %r13431;
	add.s32 	%r14022, %r14021, %r13764;
	add.s32 	%r14023, %r14022, %r14015;
	add.s32 	%r14024, %r14023, %r13888;
	xor.b32  	%r14025, %r13962, %r13925;
	and.b32  	%r14026, %r13999, %r14025;
	xor.b32  	%r14027, %r14026, %r13925;
	add.s32 	%r14028, %r14024, %r14027;
	shf.l.wrap.b32 	%r14029, %r13999, %r13999, 18;
	xor.b32  	%r14030, %r14029, %r13999;
	shf.l.wrap.b32 	%r14031, %r14030, %r14030, 27;
	xor.b32  	%r14032, %r14031, %r13999;
	shf.l.wrap.b32 	%r14033, %r14032, %r14032, 26;
	add.s32 	%r14034, %r14028, %r14033;
	add.s32 	%r14035, %r14034, 958139571;
	add.s32 	%r14036, %r14035, %r13899;
	shf.l.wrap.b32 	%r14037, %r14010, %r14010, 23;
	xor.b32  	%r14038, %r14037, %r14010;
	shf.l.wrap.b32 	%r14039, %r14038, %r14038, 21;
	xor.b32  	%r14040, %r14039, %r14010;
	shf.l.wrap.b32 	%r14041, %r14040, %r14040, 30;
	and.b32  	%r14042, %r14010, %r13973;
	or.b32  	%r14043, %r14010, %r13973;
	and.b32  	%r14044, %r14043, %r13936;
	or.b32  	%r14045, %r14044, %r14042;
	add.s32 	%r14046, %r14041, %r14045;
	add.s32 	%r14047, %r14046, %r14035;
	shf.l.wrap.b32 	%r14048, %r13986, %r13986, 15;
	shf.l.wrap.b32 	%r14049, %r13986, %r13986, 13;
	xor.b32  	%r14050, %r14048, %r14049;
	shr.u32 	%r14051, %r13986, 10;
	xor.b32  	%r14052, %r14050, %r14051;
	shf.l.wrap.b32 	%r14053, %r13505, %r13505, 25;
	shf.l.wrap.b32 	%r14054, %r13505, %r13505, 14;
	xor.b32  	%r14055, %r14053, %r14054;
	shr.u32 	%r14056, %r13505, 3;
	xor.b32  	%r14057, %r14055, %r14056;
	add.s32 	%r14058, %r14057, %r13468;
	add.s32 	%r14059, %r14058, %r13801;
	add.s32 	%r14060, %r14059, %r14052;
	add.s32 	%r14061, %r14060, %r13925;
	xor.b32  	%r14062, %r13999, %r13962;
	and.b32  	%r14063, %r14036, %r14062;
	xor.b32  	%r14064, %r14063, %r13962;
	add.s32 	%r14065, %r14061, %r14064;
	shf.l.wrap.b32 	%r14066, %r14036, %r14036, 18;
	xor.b32  	%r14067, %r14066, %r14036;
	shf.l.wrap.b32 	%r14068, %r14067, %r14067, 27;
	xor.b32  	%r14069, %r14068, %r14036;
	shf.l.wrap.b32 	%r14070, %r14069, %r14069, 26;
	add.s32 	%r14071, %r14065, %r14070;
	add.s32 	%r14072, %r14071, 1322822218;
	add.s32 	%r14073, %r14072, %r13936;
	shf.l.wrap.b32 	%r14074, %r14047, %r14047, 23;
	xor.b32  	%r14075, %r14074, %r14047;
	shf.l.wrap.b32 	%r14076, %r14075, %r14075, 21;
	xor.b32  	%r14077, %r14076, %r14047;
	shf.l.wrap.b32 	%r14078, %r14077, %r14077, 30;
	and.b32  	%r14079, %r14047, %r14010;
	or.b32  	%r14080, %r14047, %r14010;
	and.b32  	%r14081, %r14080, %r13973;
	or.b32  	%r14082, %r14081, %r14079;
	add.s32 	%r14083, %r14078, %r14082;
	add.s32 	%r14084, %r14083, %r14072;
	shf.l.wrap.b32 	%r14085, %r14023, %r14023, 15;
	shf.l.wrap.b32 	%r14086, %r14023, %r14023, 13;
	xor.b32  	%r14087, %r14085, %r14086;
	shr.u32 	%r14088, %r14023, 10;
	xor.b32  	%r14089, %r14087, %r14088;
	shf.l.wrap.b32 	%r14090, %r13542, %r13542, 25;
	shf.l.wrap.b32 	%r14091, %r13542, %r13542, 14;
	xor.b32  	%r14092, %r14090, %r14091;
	shr.u32 	%r14093, %r13542, 3;
	xor.b32  	%r14094, %r14092, %r14093;
	add.s32 	%r14095, %r14094, %r13505;
	add.s32 	%r14096, %r14095, %r13838;
	add.s32 	%r14097, %r14096, %r14089;
	add.s32 	%r14098, %r14097, %r13962;
	xor.b32  	%r14099, %r14036, %r13999;
	and.b32  	%r14100, %r14073, %r14099;
	xor.b32  	%r14101, %r14100, %r13999;
	add.s32 	%r14102, %r14098, %r14101;
	shf.l.wrap.b32 	%r14103, %r14073, %r14073, 18;
	xor.b32  	%r14104, %r14103, %r14073;
	shf.l.wrap.b32 	%r14105, %r14104, %r14104, 27;
	xor.b32  	%r14106, %r14105, %r14073;
	shf.l.wrap.b32 	%r14107, %r14106, %r14106, 26;
	add.s32 	%r14108, %r14102, %r14107;
	add.s32 	%r14109, %r14108, 1537002063;
	add.s32 	%r14110, %r14109, %r13973;
	shf.l.wrap.b32 	%r14111, %r14084, %r14084, 23;
	xor.b32  	%r14112, %r14111, %r14084;
	shf.l.wrap.b32 	%r14113, %r14112, %r14112, 21;
	xor.b32  	%r14114, %r14113, %r14084;
	shf.l.wrap.b32 	%r14115, %r14114, %r14114, 30;
	and.b32  	%r14116, %r14084, %r14047;
	or.b32  	%r14117, %r14084, %r14047;
	and.b32  	%r14118, %r14117, %r14010;
	or.b32  	%r14119, %r14118, %r14116;
	add.s32 	%r14120, %r14115, %r14119;
	add.s32 	%r14121, %r14120, %r14109;
	shf.l.wrap.b32 	%r14122, %r14060, %r14060, 15;
	shf.l.wrap.b32 	%r14123, %r14060, %r14060, 13;
	xor.b32  	%r14124, %r14122, %r14123;
	shr.u32 	%r14125, %r14060, 10;
	xor.b32  	%r14126, %r14124, %r14125;
	shf.l.wrap.b32 	%r14127, %r13579, %r13579, 25;
	shf.l.wrap.b32 	%r14128, %r13579, %r13579, 14;
	xor.b32  	%r14129, %r14127, %r14128;
	shr.u32 	%r14130, %r13579, 3;
	xor.b32  	%r14131, %r14129, %r14130;
	add.s32 	%r14132, %r14131, %r13542;
	add.s32 	%r14133, %r14132, %r13875;
	add.s32 	%r14134, %r14133, %r14126;
	add.s32 	%r14135, %r14134, %r13999;
	xor.b32  	%r14136, %r14073, %r14036;
	and.b32  	%r14137, %r14110, %r14136;
	xor.b32  	%r14138, %r14137, %r14036;
	add.s32 	%r14139, %r14135, %r14138;
	shf.l.wrap.b32 	%r14140, %r14110, %r14110, 18;
	xor.b32  	%r14141, %r14140, %r14110;
	shf.l.wrap.b32 	%r14142, %r14141, %r14141, 27;
	xor.b32  	%r14143, %r14142, %r14110;
	shf.l.wrap.b32 	%r14144, %r14143, %r14143, 26;
	add.s32 	%r14145, %r14139, %r14144;
	add.s32 	%r14146, %r14145, 1747873779;
	add.s32 	%r14147, %r14146, %r14010;
	shf.l.wrap.b32 	%r14148, %r14121, %r14121, 23;
	xor.b32  	%r14149, %r14148, %r14121;
	shf.l.wrap.b32 	%r14150, %r14149, %r14149, 21;
	xor.b32  	%r14151, %r14150, %r14121;
	shf.l.wrap.b32 	%r14152, %r14151, %r14151, 30;
	and.b32  	%r14153, %r14121, %r14084;
	or.b32  	%r14154, %r14121, %r14084;
	and.b32  	%r14155, %r14154, %r14047;
	or.b32  	%r14156, %r14155, %r14153;
	add.s32 	%r14157, %r14152, %r14156;
	add.s32 	%r14158, %r14157, %r14146;
	shf.l.wrap.b32 	%r14159, %r14097, %r14097, 15;
	shf.l.wrap.b32 	%r14160, %r14097, %r14097, 13;
	xor.b32  	%r14161, %r14159, %r14160;
	shr.u32 	%r14162, %r14097, 10;
	xor.b32  	%r14163, %r14161, %r14162;
	shf.l.wrap.b32 	%r14164, %r13616, %r13616, 25;
	shf.l.wrap.b32 	%r14165, %r13616, %r13616, 14;
	xor.b32  	%r14166, %r14164, %r14165;
	shr.u32 	%r14167, %r13616, 3;
	xor.b32  	%r14168, %r14166, %r14167;
	add.s32 	%r14169, %r14168, %r13579;
	add.s32 	%r14170, %r14169, %r13912;
	add.s32 	%r14171, %r14170, %r14163;
	add.s32 	%r14172, %r14171, %r14036;
	xor.b32  	%r14173, %r14110, %r14073;
	and.b32  	%r14174, %r14147, %r14173;
	xor.b32  	%r14175, %r14174, %r14073;
	add.s32 	%r14176, %r14172, %r14175;
	shf.l.wrap.b32 	%r14177, %r14147, %r14147, 18;
	xor.b32  	%r14178, %r14177, %r14147;
	shf.l.wrap.b32 	%r14179, %r14178, %r14178, 27;
	xor.b32  	%r14180, %r14179, %r14147;
	shf.l.wrap.b32 	%r14181, %r14180, %r14180, 26;
	add.s32 	%r14182, %r14176, %r14181;
	add.s32 	%r14183, %r14182, 1955562222;
	add.s32 	%r14184, %r14183, %r14047;
	shf.l.wrap.b32 	%r14185, %r14158, %r14158, 23;
	xor.b32  	%r14186, %r14185, %r14158;
	shf.l.wrap.b32 	%r14187, %r14186, %r14186, 21;
	xor.b32  	%r14188, %r14187, %r14158;
	shf.l.wrap.b32 	%r14189, %r14188, %r14188, 30;
	and.b32  	%r14190, %r14158, %r14121;
	or.b32  	%r14191, %r14158, %r14121;
	and.b32  	%r14192, %r14191, %r14084;
	or.b32  	%r14193, %r14192, %r14190;
	add.s32 	%r14194, %r14189, %r14193;
	add.s32 	%r14195, %r14194, %r14183;
	shf.l.wrap.b32 	%r14196, %r14134, %r14134, 15;
	shf.l.wrap.b32 	%r14197, %r14134, %r14134, 13;
	xor.b32  	%r14198, %r14196, %r14197;
	shr.u32 	%r14199, %r14134, 10;
	xor.b32  	%r14200, %r14198, %r14199;
	shf.l.wrap.b32 	%r14201, %r13653, %r13653, 25;
	shf.l.wrap.b32 	%r14202, %r13653, %r13653, 14;
	xor.b32  	%r14203, %r14201, %r14202;
	shr.u32 	%r14204, %r13653, 3;
	xor.b32  	%r14205, %r14203, %r14204;
	add.s32 	%r14206, %r14205, %r13616;
	add.s32 	%r14207, %r14206, %r13949;
	add.s32 	%r14208, %r14207, %r14200;
	add.s32 	%r14209, %r14208, %r14073;
	xor.b32  	%r14210, %r14147, %r14110;
	and.b32  	%r14211, %r14184, %r14210;
	xor.b32  	%r14212, %r14211, %r14110;
	add.s32 	%r14213, %r14209, %r14212;
	shf.l.wrap.b32 	%r14214, %r14184, %r14184, 18;
	xor.b32  	%r14215, %r14214, %r14184;
	shf.l.wrap.b32 	%r14216, %r14215, %r14215, 27;
	xor.b32  	%r14217, %r14216, %r14184;
	shf.l.wrap.b32 	%r14218, %r14217, %r14217, 26;
	add.s32 	%r14219, %r14213, %r14218;
	add.s32 	%r14220, %r14219, 2024104815;
	add.s32 	%r14221, %r14220, %r14084;
	shf.l.wrap.b32 	%r14222, %r14195, %r14195, 23;
	xor.b32  	%r14223, %r14222, %r14195;
	shf.l.wrap.b32 	%r14224, %r14223, %r14223, 21;
	xor.b32  	%r14225, %r14224, %r14195;
	shf.l.wrap.b32 	%r14226, %r14225, %r14225, 30;
	and.b32  	%r14227, %r14195, %r14158;
	or.b32  	%r14228, %r14195, %r14158;
	and.b32  	%r14229, %r14228, %r14121;
	or.b32  	%r14230, %r14229, %r14227;
	add.s32 	%r14231, %r14226, %r14230;
	add.s32 	%r14232, %r14231, %r14220;
	shf.l.wrap.b32 	%r14233, %r14171, %r14171, 15;
	shf.l.wrap.b32 	%r14234, %r14171, %r14171, 13;
	xor.b32  	%r14235, %r14233, %r14234;
	shr.u32 	%r14236, %r14171, 10;
	xor.b32  	%r14237, %r14235, %r14236;
	shf.l.wrap.b32 	%r14238, %r13690, %r13690, 25;
	shf.l.wrap.b32 	%r14239, %r13690, %r13690, 14;
	xor.b32  	%r14240, %r14238, %r14239;
	shr.u32 	%r14241, %r13690, 3;
	xor.b32  	%r14242, %r14240, %r14241;
	add.s32 	%r14243, %r14242, %r13653;
	add.s32 	%r14244, %r14243, %r13986;
	add.s32 	%r14245, %r14244, %r14237;
	add.s32 	%r14246, %r14245, %r14110;
	xor.b32  	%r14247, %r14184, %r14147;
	and.b32  	%r14248, %r14221, %r14247;
	xor.b32  	%r14249, %r14248, %r14147;
	add.s32 	%r14250, %r14246, %r14249;
	shf.l.wrap.b32 	%r14251, %r14221, %r14221, 18;
	xor.b32  	%r14252, %r14251, %r14221;
	shf.l.wrap.b32 	%r14253, %r14252, %r14252, 27;
	xor.b32  	%r14254, %r14253, %r14221;
	shf.l.wrap.b32 	%r14255, %r14254, %r14254, 26;
	add.s32 	%r14256, %r14250, %r14255;
	add.s32 	%r14257, %r14256, -2067236844;
	add.s32 	%r14258, %r14257, %r14121;
	shf.l.wrap.b32 	%r14259, %r14232, %r14232, 23;
	xor.b32  	%r14260, %r14259, %r14232;
	shf.l.wrap.b32 	%r14261, %r14260, %r14260, 21;
	xor.b32  	%r14262, %r14261, %r14232;
	shf.l.wrap.b32 	%r14263, %r14262, %r14262, 30;
	and.b32  	%r14264, %r14232, %r14195;
	or.b32  	%r14265, %r14232, %r14195;
	and.b32  	%r14266, %r14265, %r14158;
	or.b32  	%r14267, %r14266, %r14264;
	add.s32 	%r14268, %r14263, %r14267;
	add.s32 	%r14269, %r14268, %r14257;
	shf.l.wrap.b32 	%r14270, %r14208, %r14208, 15;
	shf.l.wrap.b32 	%r14271, %r14208, %r14208, 13;
	xor.b32  	%r14272, %r14270, %r14271;
	shr.u32 	%r14273, %r14208, 10;
	xor.b32  	%r14274, %r14272, %r14273;
	shf.l.wrap.b32 	%r14275, %r13727, %r13727, 25;
	shf.l.wrap.b32 	%r14276, %r13727, %r13727, 14;
	xor.b32  	%r14277, %r14275, %r14276;
	shr.u32 	%r14278, %r13727, 3;
	xor.b32  	%r14279, %r14277, %r14278;
	add.s32 	%r14280, %r14279, %r13690;
	add.s32 	%r14281, %r14280, %r14023;
	add.s32 	%r14282, %r14281, %r14274;
	add.s32 	%r14283, %r14282, %r14147;
	xor.b32  	%r14284, %r14221, %r14184;
	and.b32  	%r14285, %r14258, %r14284;
	xor.b32  	%r14286, %r14285, %r14184;
	add.s32 	%r14287, %r14283, %r14286;
	shf.l.wrap.b32 	%r14288, %r14258, %r14258, 18;
	xor.b32  	%r14289, %r14288, %r14258;
	shf.l.wrap.b32 	%r14290, %r14289, %r14289, 27;
	xor.b32  	%r14291, %r14290, %r14258;
	shf.l.wrap.b32 	%r14292, %r14291, %r14291, 26;
	add.s32 	%r14293, %r14287, %r14292;
	add.s32 	%r14294, %r14293, -1933114872;
	add.s32 	%r14295, %r14294, %r14158;
	shf.l.wrap.b32 	%r14296, %r14269, %r14269, 23;
	xor.b32  	%r14297, %r14296, %r14269;
	shf.l.wrap.b32 	%r14298, %r14297, %r14297, 21;
	xor.b32  	%r14299, %r14298, %r14269;
	shf.l.wrap.b32 	%r14300, %r14299, %r14299, 30;
	and.b32  	%r14301, %r14269, %r14232;
	or.b32  	%r14302, %r14269, %r14232;
	and.b32  	%r14303, %r14302, %r14195;
	or.b32  	%r14304, %r14303, %r14301;
	add.s32 	%r14305, %r14300, %r14304;
	add.s32 	%r14306, %r14305, %r14294;
	shf.l.wrap.b32 	%r14307, %r14245, %r14245, 15;
	shf.l.wrap.b32 	%r14308, %r14245, %r14245, 13;
	xor.b32  	%r14309, %r14307, %r14308;
	shr.u32 	%r14310, %r14245, 10;
	xor.b32  	%r14311, %r14309, %r14310;
	shf.l.wrap.b32 	%r14312, %r13764, %r13764, 25;
	shf.l.wrap.b32 	%r14313, %r13764, %r13764, 14;
	xor.b32  	%r14314, %r14312, %r14313;
	shr.u32 	%r14315, %r13764, 3;
	xor.b32  	%r14316, %r14314, %r14315;
	add.s32 	%r14317, %r14316, %r13727;
	add.s32 	%r14318, %r14317, %r14060;
	add.s32 	%r14319, %r14318, %r14311;
	add.s32 	%r14320, %r14319, %r14184;
	xor.b32  	%r14321, %r14258, %r14221;
	and.b32  	%r14322, %r14295, %r14321;
	xor.b32  	%r14323, %r14322, %r14221;
	add.s32 	%r14324, %r14320, %r14323;
	shf.l.wrap.b32 	%r14325, %r14295, %r14295, 18;
	xor.b32  	%r14326, %r14325, %r14295;
	shf.l.wrap.b32 	%r14327, %r14326, %r14326, 27;
	xor.b32  	%r14328, %r14327, %r14295;
	shf.l.wrap.b32 	%r14329, %r14328, %r14328, 26;
	add.s32 	%r14330, %r14324, %r14329;
	add.s32 	%r14331, %r14330, -1866530822;
	add.s32 	%r14332, %r14331, %r14195;
	shf.l.wrap.b32 	%r14333, %r14306, %r14306, 23;
	xor.b32  	%r14334, %r14333, %r14306;
	shf.l.wrap.b32 	%r14335, %r14334, %r14334, 21;
	xor.b32  	%r14336, %r14335, %r14306;
	shf.l.wrap.b32 	%r14337, %r14336, %r14336, 30;
	and.b32  	%r14338, %r14306, %r14269;
	or.b32  	%r14339, %r14306, %r14269;
	and.b32  	%r14340, %r14339, %r14232;
	or.b32  	%r14341, %r14340, %r14338;
	add.s32 	%r14342, %r14337, %r14341;
	add.s32 	%r14343, %r14342, %r14331;
	shf.l.wrap.b32 	%r14344, %r14282, %r14282, 15;
	shf.l.wrap.b32 	%r14345, %r14282, %r14282, 13;
	xor.b32  	%r14346, %r14344, %r14345;
	shr.u32 	%r14347, %r14282, 10;
	xor.b32  	%r14348, %r14346, %r14347;
	shf.l.wrap.b32 	%r14349, %r13801, %r13801, 25;
	shf.l.wrap.b32 	%r14350, %r13801, %r13801, 14;
	xor.b32  	%r14351, %r14349, %r14350;
	shr.u32 	%r14352, %r13801, 3;
	xor.b32  	%r14353, %r14351, %r14352;
	add.s32 	%r14354, %r14353, %r13764;
	add.s32 	%r14355, %r14354, %r14097;
	add.s32 	%r14356, %r14355, %r14348;
	add.s32 	%r14357, %r14356, %r14221;
	xor.b32  	%r14358, %r14295, %r14258;
	and.b32  	%r14359, %r14332, %r14358;
	xor.b32  	%r14360, %r14359, %r14258;
	add.s32 	%r14361, %r14357, %r14360;
	shf.l.wrap.b32 	%r14362, %r14332, %r14332, 18;
	xor.b32  	%r14363, %r14362, %r14332;
	shf.l.wrap.b32 	%r14364, %r14363, %r14363, 27;
	xor.b32  	%r14365, %r14364, %r14332;
	shf.l.wrap.b32 	%r14366, %r14365, %r14365, 26;
	add.s32 	%r14367, %r14361, %r14366;
	add.s32 	%r14368, %r14367, -1538233109;
	add.s32 	%r14369, %r14368, %r14232;
	shf.l.wrap.b32 	%r14370, %r14343, %r14343, 23;
	xor.b32  	%r14371, %r14370, %r14343;
	shf.l.wrap.b32 	%r14372, %r14371, %r14371, 21;
	xor.b32  	%r14373, %r14372, %r14343;
	shf.l.wrap.b32 	%r14374, %r14373, %r14373, 30;
	and.b32  	%r14375, %r14343, %r14306;
	or.b32  	%r14376, %r14343, %r14306;
	and.b32  	%r14377, %r14376, %r14269;
	or.b32  	%r14378, %r14377, %r14375;
	add.s32 	%r14379, %r14374, %r14378;
	add.s32 	%r14380, %r14379, %r14368;
	shf.l.wrap.b32 	%r14381, %r14319, %r14319, 15;
	shf.l.wrap.b32 	%r14382, %r14319, %r14319, 13;
	xor.b32  	%r14383, %r14381, %r14382;
	shr.u32 	%r14384, %r14319, 10;
	xor.b32  	%r14385, %r14383, %r14384;
	shf.l.wrap.b32 	%r14386, %r13838, %r13838, 25;
	shf.l.wrap.b32 	%r14387, %r13838, %r13838, 14;
	xor.b32  	%r14388, %r14386, %r14387;
	shr.u32 	%r14389, %r13838, 3;
	xor.b32  	%r14390, %r14388, %r14389;
	shf.l.wrap.b32 	%r14391, %r14369, %r14369, 18;
	xor.b32  	%r14392, %r14391, %r14369;
	shf.l.wrap.b32 	%r14393, %r14392, %r14392, 27;
	xor.b32  	%r14394, %r14393, %r14369;
	shf.l.wrap.b32 	%r14395, %r14394, %r14394, 26;
	xor.b32  	%r14396, %r14332, %r14295;
	and.b32  	%r14397, %r14369, %r14396;
	xor.b32  	%r14398, %r14397, %r14295;
	add.s32 	%r14399, %r13801, %r14390;
	add.s32 	%r14400, %r14399, %r14134;
	add.s32 	%r14401, %r14400, %r14385;
	add.s32 	%r14402, %r14401, %r14258;
	add.s32 	%r14403, %r14402, %r14398;
	add.s32 	%r14404, %r14403, %r14395;
	add.s32 	%r14405, %r14404, -1090935817;
	add.s32 	%r14406, %r14405, %r14269;
	shf.l.wrap.b32 	%r14407, %r14380, %r14380, 23;
	xor.b32  	%r14408, %r14407, %r14380;
	shf.l.wrap.b32 	%r14409, %r14408, %r14408, 21;
	xor.b32  	%r14410, %r14409, %r14380;
	shf.l.wrap.b32 	%r14411, %r14410, %r14410, 30;
	and.b32  	%r14412, %r14380, %r14343;
	or.b32  	%r14413, %r14380, %r14343;
	and.b32  	%r14414, %r14413, %r14306;
	or.b32  	%r14415, %r14414, %r14412;
	add.s32 	%r14416, %r14411, %r14415;
	add.s32 	%r14417, %r14416, %r14405;
	shf.l.wrap.b32 	%r14418, %r14356, %r14356, 15;
	shf.l.wrap.b32 	%r14419, %r14356, %r14356, 13;
	xor.b32  	%r14420, %r14418, %r14419;
	shr.u32 	%r14421, %r14356, 10;
	xor.b32  	%r14422, %r14420, %r14421;
	shf.l.wrap.b32 	%r14423, %r13875, %r13875, 25;
	shf.l.wrap.b32 	%r14424, %r13875, %r13875, 14;
	xor.b32  	%r14425, %r14423, %r14424;
	shr.u32 	%r14426, %r13875, 3;
	xor.b32  	%r14427, %r14425, %r14426;
	shf.l.wrap.b32 	%r14428, %r14406, %r14406, 18;
	xor.b32  	%r14429, %r14428, %r14406;
	shf.l.wrap.b32 	%r14430, %r14429, %r14429, 27;
	xor.b32  	%r14431, %r14430, %r14406;
	shf.l.wrap.b32 	%r14432, %r14431, %r14431, 26;
	xor.b32  	%r14433, %r14369, %r14332;
	and.b32  	%r14434, %r14406, %r14433;
	xor.b32  	%r14435, %r14434, %r14332;
	add.s32 	%r14436, %r13838, %r14427;
	add.s32 	%r14437, %r14436, %r14171;
	add.s32 	%r14438, %r14437, %r14422;
	add.s32 	%r14439, %r14438, %r14295;
	add.s32 	%r14440, %r14439, %r14435;
	add.s32 	%r14441, %r14440, %r14432;
	add.s32 	%r14442, %r14441, -965641998;
	shf.l.wrap.b32 	%r14443, %r14417, %r14417, 23;
	xor.b32  	%r14444, %r14443, %r14417;
	shf.l.wrap.b32 	%r14445, %r14444, %r14444, 21;
	xor.b32  	%r14446, %r14445, %r14417;
	shf.l.wrap.b32 	%r14447, %r14446, %r14446, 30;
	and.b32  	%r14448, %r14417, %r14380;
	or.b32  	%r14449, %r14417, %r14380;
	and.b32  	%r14450, %r14449, %r14343;
	or.b32  	%r14451, %r14450, %r14448;
	add.s32 	%r14452, %r14451, %r12305;
	add.s32 	%r14453, %r14452, %r14447;
	add.s32 	%r14454, %r14453, %r14442;
	st.local.u32 	[%rd5+4], %r14454;
	add.s32 	%r14455, %r14417, %r12311;
	st.local.u32 	[%rd5+8], %r14455;
	add.s32 	%r14456, %r14380, %r12314;
	st.local.u32 	[%rd5+12], %r14456;
	add.s32 	%r14457, %r14343, %r12303;
	st.local.u32 	[%rd5+16], %r14457;
	add.s32 	%r14458, %r14306, %r12289;
	add.s32 	%r14459, %r14458, %r14442;
	st.local.u32 	[%rd5+20], %r14459;
	add.s32 	%r14460, %r14406, %r12297;
	st.local.u32 	[%rd5+24], %r14460;
	add.s32 	%r14461, %r14369, %r12296;
	st.local.u32 	[%rd5+28], %r14461;
	add.s32 	%r14462, %r14332, %r12287;
	st.local.u32 	[%rd5+32], %r14462;
	cvt.u64.u32 	%rd193, %r243;
	add.s64 	%rd290, %rd214, %rd193;
	add.u64 	%rd194, %SP, 0;
	add.s64 	%rd288, %rd194, %rd193;
	sub.s32 	%r17094, %r12178, %r243;
	mov.u32 	%r17075, 0;

$L__BB6_75:
	setp.lt.u32 	%p64, %r17094, 64;
	@%p64 bra 	$L__BB6_80;

$L__BB6_76:
	and.b64  	%rd195, %rd288, 3;
	setp.eq.s64 	%p65, %rd195, 0;
	@%p65 bra 	$L__BB6_78;

	ld.local.u8 	%r14463, [%rd290];
	shl.b32 	%r14464, %r14463, 24;
	ld.local.u8 	%r14465, [%rd290+1];
	shl.b32 	%r14466, %r14465, 16;
	or.b32  	%r14467, %r14466, %r14464;
	ld.local.u8 	%rs162, [%rd290+2];
	mul.wide.u16 	%r14468, %rs162, 256;
	or.b32  	%r14469, %r14467, %r14468;
	ld.local.u8 	%r14470, [%rd290+3];
	or.b32  	%r17093, %r14469, %r14470;
	ld.local.u8 	%r14471, [%rd290+4];
	shl.b32 	%r14472, %r14471, 24;
	ld.local.u8 	%r14473, [%rd290+5];
	shl.b32 	%r14474, %r14473, 16;
	or.b32  	%r14475, %r14474, %r14472;
	ld.local.u8 	%rs163, [%rd290+6];
	mul.wide.u16 	%r14476, %rs163, 256;
	or.b32  	%r14477, %r14475, %r14476;
	ld.local.u8 	%r14478, [%rd290+7];
	or.b32  	%r17092, %r14477, %r14478;
	ld.local.u8 	%r14479, [%rd290+8];
	shl.b32 	%r14480, %r14479, 24;
	ld.local.u8 	%r14481, [%rd290+9];
	shl.b32 	%r14482, %r14481, 16;
	or.b32  	%r14483, %r14482, %r14480;
	ld.local.u8 	%rs164, [%rd290+10];
	mul.wide.u16 	%r14484, %rs164, 256;
	or.b32  	%r14485, %r14483, %r14484;
	ld.local.u8 	%r14486, [%rd290+11];
	or.b32  	%r17091, %r14485, %r14486;
	ld.local.u8 	%r14487, [%rd290+12];
	shl.b32 	%r14488, %r14487, 24;
	ld.local.u8 	%r14489, [%rd290+13];
	shl.b32 	%r14490, %r14489, 16;
	or.b32  	%r14491, %r14490, %r14488;
	ld.local.u8 	%rs165, [%rd290+14];
	mul.wide.u16 	%r14492, %rs165, 256;
	or.b32  	%r14493, %r14491, %r14492;
	ld.local.u8 	%r14494, [%rd290+15];
	or.b32  	%r17090, %r14493, %r14494;
	ld.local.u8 	%r14495, [%rd290+16];
	shl.b32 	%r14496, %r14495, 24;
	ld.local.u8 	%r14497, [%rd290+17];
	shl.b32 	%r14498, %r14497, 16;
	or.b32  	%r14499, %r14498, %r14496;
	ld.local.u8 	%rs166, [%rd290+18];
	mul.wide.u16 	%r14500, %rs166, 256;
	or.b32  	%r14501, %r14499, %r14500;
	ld.local.u8 	%r14502, [%rd290+19];
	or.b32  	%r17089, %r14501, %r14502;
	ld.local.u8 	%r14503, [%rd290+20];
	shl.b32 	%r14504, %r14503, 24;
	ld.local.u8 	%r14505, [%rd290+21];
	shl.b32 	%r14506, %r14505, 16;
	or.b32  	%r14507, %r14506, %r14504;
	ld.local.u8 	%rs167, [%rd290+22];
	mul.wide.u16 	%r14508, %rs167, 256;
	or.b32  	%r14509, %r14507, %r14508;
	ld.local.u8 	%r14510, [%rd290+23];
	or.b32  	%r17088, %r14509, %r14510;
	ld.local.u8 	%r14511, [%rd290+24];
	shl.b32 	%r14512, %r14511, 24;
	ld.local.u8 	%r14513, [%rd290+25];
	shl.b32 	%r14514, %r14513, 16;
	or.b32  	%r14515, %r14514, %r14512;
	ld.local.u8 	%rs168, [%rd290+26];
	mul.wide.u16 	%r14516, %rs168, 256;
	or.b32  	%r14517, %r14515, %r14516;
	ld.local.u8 	%r14518, [%rd290+27];
	or.b32  	%r17087, %r14517, %r14518;
	ld.local.u8 	%r14519, [%rd290+28];
	shl.b32 	%r14520, %r14519, 24;
	ld.local.u8 	%r14521, [%rd290+29];
	shl.b32 	%r14522, %r14521, 16;
	or.b32  	%r14523, %r14522, %r14520;
	ld.local.u8 	%rs169, [%rd290+30];
	mul.wide.u16 	%r14524, %rs169, 256;
	or.b32  	%r14525, %r14523, %r14524;
	ld.local.u8 	%r14526, [%rd290+31];
	or.b32  	%r17086, %r14525, %r14526;
	ld.local.u8 	%r14527, [%rd290+32];
	shl.b32 	%r14528, %r14527, 24;
	ld.local.u8 	%r14529, [%rd290+33];
	shl.b32 	%r14530, %r14529, 16;
	or.b32  	%r14531, %r14530, %r14528;
	ld.local.u8 	%rs170, [%rd290+34];
	mul.wide.u16 	%r14532, %rs170, 256;
	or.b32  	%r14533, %r14531, %r14532;
	ld.local.u8 	%r14534, [%rd290+35];
	or.b32  	%r17085, %r14533, %r14534;
	ld.local.u8 	%r14535, [%rd290+36];
	shl.b32 	%r14536, %r14535, 24;
	ld.local.u8 	%r14537, [%rd290+37];
	shl.b32 	%r14538, %r14537, 16;
	or.b32  	%r14539, %r14538, %r14536;
	ld.local.u8 	%rs171, [%rd290+38];
	mul.wide.u16 	%r14540, %rs171, 256;
	or.b32  	%r14541, %r14539, %r14540;
	ld.local.u8 	%r14542, [%rd290+39];
	or.b32  	%r17084, %r14541, %r14542;
	ld.local.u8 	%r14543, [%rd290+40];
	shl.b32 	%r14544, %r14543, 24;
	ld.local.u8 	%r14545, [%rd290+41];
	shl.b32 	%r14546, %r14545, 16;
	or.b32  	%r14547, %r14546, %r14544;
	ld.local.u8 	%rs172, [%rd290+42];
	mul.wide.u16 	%r14548, %rs172, 256;
	or.b32  	%r14549, %r14547, %r14548;
	ld.local.u8 	%r14550, [%rd290+43];
	or.b32  	%r17083, %r14549, %r14550;
	ld.local.u8 	%r14551, [%rd290+44];
	shl.b32 	%r14552, %r14551, 24;
	ld.local.u8 	%r14553, [%rd290+45];
	shl.b32 	%r14554, %r14553, 16;
	or.b32  	%r14555, %r14554, %r14552;
	ld.local.u8 	%rs173, [%rd290+46];
	mul.wide.u16 	%r14556, %rs173, 256;
	or.b32  	%r14557, %r14555, %r14556;
	ld.local.u8 	%r14558, [%rd290+47];
	or.b32  	%r17082, %r14557, %r14558;
	ld.local.u8 	%r14559, [%rd290+48];
	shl.b32 	%r14560, %r14559, 24;
	ld.local.u8 	%r14561, [%rd290+49];
	shl.b32 	%r14562, %r14561, 16;
	or.b32  	%r14563, %r14562, %r14560;
	ld.local.u8 	%rs174, [%rd290+50];
	mul.wide.u16 	%r14564, %rs174, 256;
	or.b32  	%r14565, %r14563, %r14564;
	ld.local.u8 	%r14566, [%rd290+51];
	or.b32  	%r17081, %r14565, %r14566;
	ld.local.u8 	%r14567, [%rd290+52];
	shl.b32 	%r14568, %r14567, 24;
	ld.local.u8 	%r14569, [%rd290+53];
	shl.b32 	%r14570, %r14569, 16;
	or.b32  	%r14571, %r14570, %r14568;
	ld.local.u8 	%rs175, [%rd290+54];
	mul.wide.u16 	%r14572, %rs175, 256;
	or.b32  	%r14573, %r14571, %r14572;
	ld.local.u8 	%r14574, [%rd290+55];
	or.b32  	%r17080, %r14573, %r14574;
	ld.local.u8 	%r14575, [%rd290+56];
	shl.b32 	%r14576, %r14575, 24;
	ld.local.u8 	%r14577, [%rd290+57];
	shl.b32 	%r14578, %r14577, 16;
	or.b32  	%r14579, %r14578, %r14576;
	ld.local.u8 	%rs176, [%rd290+58];
	mul.wide.u16 	%r14580, %rs176, 256;
	or.b32  	%r14581, %r14579, %r14580;
	ld.local.u8 	%r14582, [%rd290+59];
	or.b32  	%r17079, %r14581, %r14582;
	ld.local.u8 	%r14583, [%rd290+60];
	shl.b32 	%r14584, %r14583, 24;
	ld.local.u8 	%r14585, [%rd290+61];
	shl.b32 	%r14586, %r14585, 16;
	or.b32  	%r14587, %r14586, %r14584;
	ld.local.u8 	%rs177, [%rd290+62];
	mul.wide.u16 	%r14588, %rs177, 256;
	or.b32  	%r14589, %r14587, %r14588;
	ld.local.u8 	%r14590, [%rd290+63];
	or.b32  	%r17078, %r14589, %r14590;
	bra.uni 	$L__BB6_79;

$L__BB6_78:
	ld.local.u32 	%r14591, [%rd290];
	shf.l.wrap.b32 	%r14592, %r14591, %r14591, 16;
	shl.b32 	%r14593, %r14592, 8;
	and.b32  	%r14594, %r14593, -16711936;
	shr.u32 	%r14595, %r14592, 8;
	and.b32  	%r14596, %r14595, 16711935;
	or.b32  	%r17093, %r14594, %r14596;
	ld.local.u32 	%r14597, [%rd290+4];
	shf.l.wrap.b32 	%r14598, %r14597, %r14597, 16;
	shl.b32 	%r14599, %r14598, 8;
	and.b32  	%r14600, %r14599, -16711936;
	shr.u32 	%r14601, %r14598, 8;
	and.b32  	%r14602, %r14601, 16711935;
	or.b32  	%r17092, %r14600, %r14602;
	ld.local.u32 	%r14603, [%rd290+8];
	shf.l.wrap.b32 	%r14604, %r14603, %r14603, 16;
	shl.b32 	%r14605, %r14604, 8;
	and.b32  	%r14606, %r14605, -16711936;
	shr.u32 	%r14607, %r14604, 8;
	and.b32  	%r14608, %r14607, 16711935;
	or.b32  	%r17091, %r14606, %r14608;
	ld.local.u32 	%r14609, [%rd290+12];
	shf.l.wrap.b32 	%r14610, %r14609, %r14609, 16;
	shl.b32 	%r14611, %r14610, 8;
	and.b32  	%r14612, %r14611, -16711936;
	shr.u32 	%r14613, %r14610, 8;
	and.b32  	%r14614, %r14613, 16711935;
	or.b32  	%r17090, %r14612, %r14614;
	ld.local.u32 	%r14615, [%rd290+16];
	shf.l.wrap.b32 	%r14616, %r14615, %r14615, 16;
	shl.b32 	%r14617, %r14616, 8;
	and.b32  	%r14618, %r14617, -16711936;
	shr.u32 	%r14619, %r14616, 8;
	and.b32  	%r14620, %r14619, 16711935;
	or.b32  	%r17089, %r14618, %r14620;
	ld.local.u32 	%r14621, [%rd290+20];
	shf.l.wrap.b32 	%r14622, %r14621, %r14621, 16;
	shl.b32 	%r14623, %r14622, 8;
	and.b32  	%r14624, %r14623, -16711936;
	shr.u32 	%r14625, %r14622, 8;
	and.b32  	%r14626, %r14625, 16711935;
	or.b32  	%r17088, %r14624, %r14626;
	ld.local.u32 	%r14627, [%rd290+24];
	shf.l.wrap.b32 	%r14628, %r14627, %r14627, 16;
	shl.b32 	%r14629, %r14628, 8;
	and.b32  	%r14630, %r14629, -16711936;
	shr.u32 	%r14631, %r14628, 8;
	and.b32  	%r14632, %r14631, 16711935;
	or.b32  	%r17087, %r14630, %r14632;
	ld.local.u32 	%r14633, [%rd290+28];
	shf.l.wrap.b32 	%r14634, %r14633, %r14633, 16;
	shl.b32 	%r14635, %r14634, 8;
	and.b32  	%r14636, %r14635, -16711936;
	shr.u32 	%r14637, %r14634, 8;
	and.b32  	%r14638, %r14637, 16711935;
	or.b32  	%r17086, %r14636, %r14638;
	ld.local.u32 	%r14639, [%rd290+32];
	shf.l.wrap.b32 	%r14640, %r14639, %r14639, 16;
	shl.b32 	%r14641, %r14640, 8;
	and.b32  	%r14642, %r14641, -16711936;
	shr.u32 	%r14643, %r14640, 8;
	and.b32  	%r14644, %r14643, 16711935;
	or.b32  	%r17085, %r14642, %r14644;
	ld.local.u32 	%r14645, [%rd290+36];
	shf.l.wrap.b32 	%r14646, %r14645, %r14645, 16;
	shl.b32 	%r14647, %r14646, 8;
	and.b32  	%r14648, %r14647, -16711936;
	shr.u32 	%r14649, %r14646, 8;
	and.b32  	%r14650, %r14649, 16711935;
	or.b32  	%r17084, %r14648, %r14650;
	ld.local.u32 	%r14651, [%rd290+40];
	shf.l.wrap.b32 	%r14652, %r14651, %r14651, 16;
	shl.b32 	%r14653, %r14652, 8;
	and.b32  	%r14654, %r14653, -16711936;
	shr.u32 	%r14655, %r14652, 8;
	and.b32  	%r14656, %r14655, 16711935;
	or.b32  	%r17083, %r14654, %r14656;
	ld.local.u32 	%r14657, [%rd290+44];
	shf.l.wrap.b32 	%r14658, %r14657, %r14657, 16;
	shl.b32 	%r14659, %r14658, 8;
	and.b32  	%r14660, %r14659, -16711936;
	shr.u32 	%r14661, %r14658, 8;
	and.b32  	%r14662, %r14661, 16711935;
	or.b32  	%r17082, %r14660, %r14662;
	ld.local.u32 	%r14663, [%rd290+48];
	shf.l.wrap.b32 	%r14664, %r14663, %r14663, 16;
	shl.b32 	%r14665, %r14664, 8;
	and.b32  	%r14666, %r14665, -16711936;
	shr.u32 	%r14667, %r14664, 8;
	and.b32  	%r14668, %r14667, 16711935;
	or.b32  	%r17081, %r14666, %r14668;
	ld.local.u32 	%r14669, [%rd290+52];
	shf.l.wrap.b32 	%r14670, %r14669, %r14669, 16;
	shl.b32 	%r14671, %r14670, 8;
	and.b32  	%r14672, %r14671, -16711936;
	shr.u32 	%r14673, %r14670, 8;
	and.b32  	%r14674, %r14673, 16711935;
	or.b32  	%r17080, %r14672, %r14674;
	ld.local.u32 	%r14675, [%rd290+56];
	shf.l.wrap.b32 	%r14676, %r14675, %r14675, 16;
	shl.b32 	%r14677, %r14676, 8;
	and.b32  	%r14678, %r14677, -16711936;
	shr.u32 	%r14679, %r14676, 8;
	and.b32  	%r14680, %r14679, 16711935;
	or.b32  	%r17079, %r14678, %r14680;
	ld.local.u32 	%r14681, [%rd290+60];
	shf.l.wrap.b32 	%r14682, %r14681, %r14681, 16;
	shl.b32 	%r14683, %r14682, 8;
	and.b32  	%r14684, %r14683, -16711936;
	shr.u32 	%r14685, %r14682, 8;
	and.b32  	%r14686, %r14685, 16711935;
	or.b32  	%r17078, %r14684, %r14686;

$L__BB6_79:
	ld.local.u32 	%r14687, [%rd5+32];
	add.s32 	%r14688, %r17093, %r14687;
	ld.local.u32 	%r14689, [%rd5+20];
	shf.l.wrap.b32 	%r14690, %r14689, %r14689, 18;
	xor.b32  	%r14691, %r14690, %r14689;
	shf.l.wrap.b32 	%r14692, %r14691, %r14691, 27;
	xor.b32  	%r14693, %r14692, %r14689;
	shf.l.wrap.b32 	%r14694, %r14693, %r14693, 26;
	add.s32 	%r14695, %r14688, %r14694;
	ld.local.u32 	%r14696, [%rd5+28];
	ld.local.u32 	%r14697, [%rd5+24];
	xor.b32  	%r14698, %r14696, %r14697;
	and.b32  	%r14699, %r14698, %r14689;
	xor.b32  	%r14700, %r14699, %r14696;
	add.s32 	%r14701, %r14695, %r14700;
	add.s32 	%r14702, %r14701, 1116352408;
	ld.local.u32 	%r14703, [%rd5+16];
	add.s32 	%r14704, %r14702, %r14703;
	ld.local.u32 	%r14705, [%rd5+4];
	shf.l.wrap.b32 	%r14706, %r14705, %r14705, 23;
	xor.b32  	%r14707, %r14706, %r14705;
	shf.l.wrap.b32 	%r14708, %r14707, %r14707, 21;
	xor.b32  	%r14709, %r14708, %r14705;
	shf.l.wrap.b32 	%r14710, %r14709, %r14709, 30;
	ld.local.u32 	%r14711, [%rd5+8];
	and.b32  	%r14712, %r14711, %r14705;
	or.b32  	%r14713, %r14711, %r14705;
	ld.local.u32 	%r14714, [%rd5+12];
	and.b32  	%r14715, %r14714, %r14713;
	or.b32  	%r14716, %r14715, %r14712;
	add.s32 	%r14717, %r14710, %r14716;
	add.s32 	%r14718, %r14717, %r14702;
	add.s32 	%r14719, %r17092, %r14696;
	xor.b32  	%r14720, %r14697, %r14689;
	and.b32  	%r14721, %r14704, %r14720;
	xor.b32  	%r14722, %r14721, %r14697;
	add.s32 	%r14723, %r14719, %r14722;
	shf.l.wrap.b32 	%r14724, %r14704, %r14704, 18;
	xor.b32  	%r14725, %r14724, %r14704;
	shf.l.wrap.b32 	%r14726, %r14725, %r14725, 27;
	xor.b32  	%r14727, %r14726, %r14704;
	shf.l.wrap.b32 	%r14728, %r14727, %r14727, 26;
	add.s32 	%r14729, %r14723, %r14728;
	add.s32 	%r14730, %r14729, 1899447441;
	add.s32 	%r14731, %r14730, %r14714;
	shf.l.wrap.b32 	%r14732, %r14718, %r14718, 23;
	xor.b32  	%r14733, %r14732, %r14718;
	shf.l.wrap.b32 	%r14734, %r14733, %r14733, 21;
	xor.b32  	%r14735, %r14734, %r14718;
	shf.l.wrap.b32 	%r14736, %r14735, %r14735, 30;
	and.b32  	%r14737, %r14718, %r14705;
	or.b32  	%r14738, %r14718, %r14705;
	and.b32  	%r14739, %r14738, %r14711;
	or.b32  	%r14740, %r14739, %r14737;
	add.s32 	%r14741, %r14736, %r14740;
	add.s32 	%r14742, %r14741, %r14730;
	add.s32 	%r14743, %r17091, %r14697;
	xor.b32  	%r14744, %r14704, %r14689;
	and.b32  	%r14745, %r14731, %r14744;
	xor.b32  	%r14746, %r14745, %r14689;
	add.s32 	%r14747, %r14743, %r14746;
	shf.l.wrap.b32 	%r14748, %r14731, %r14731, 18;
	xor.b32  	%r14749, %r14748, %r14731;
	shf.l.wrap.b32 	%r14750, %r14749, %r14749, 27;
	xor.b32  	%r14751, %r14750, %r14731;
	shf.l.wrap.b32 	%r14752, %r14751, %r14751, 26;
	add.s32 	%r14753, %r14747, %r14752;
	add.s32 	%r14754, %r14753, -1245643825;
	add.s32 	%r14755, %r14754, %r14711;
	shf.l.wrap.b32 	%r14756, %r14742, %r14742, 23;
	xor.b32  	%r14757, %r14756, %r14742;
	shf.l.wrap.b32 	%r14758, %r14757, %r14757, 21;
	xor.b32  	%r14759, %r14758, %r14742;
	shf.l.wrap.b32 	%r14760, %r14759, %r14759, 30;
	and.b32  	%r14761, %r14742, %r14718;
	or.b32  	%r14762, %r14742, %r14718;
	and.b32  	%r14763, %r14762, %r14705;
	or.b32  	%r14764, %r14763, %r14761;
	add.s32 	%r14765, %r14760, %r14764;
	add.s32 	%r14766, %r14765, %r14754;
	add.s32 	%r14767, %r17090, %r14689;
	xor.b32  	%r14768, %r14731, %r14704;
	and.b32  	%r14769, %r14755, %r14768;
	xor.b32  	%r14770, %r14769, %r14704;
	add.s32 	%r14771, %r14767, %r14770;
	shf.l.wrap.b32 	%r14772, %r14755, %r14755, 18;
	xor.b32  	%r14773, %r14772, %r14755;
	shf.l.wrap.b32 	%r14774, %r14773, %r14773, 27;
	xor.b32  	%r14775, %r14774, %r14755;
	shf.l.wrap.b32 	%r14776, %r14775, %r14775, 26;
	add.s32 	%r14777, %r14771, %r14776;
	add.s32 	%r14778, %r14777, -373957723;
	add.s32 	%r14779, %r14778, %r14705;
	shf.l.wrap.b32 	%r14780, %r14766, %r14766, 23;
	xor.b32  	%r14781, %r14780, %r14766;
	shf.l.wrap.b32 	%r14782, %r14781, %r14781, 21;
	xor.b32  	%r14783, %r14782, %r14766;
	shf.l.wrap.b32 	%r14784, %r14783, %r14783, 30;
	and.b32  	%r14785, %r14766, %r14742;
	or.b32  	%r14786, %r14766, %r14742;
	and.b32  	%r14787, %r14786, %r14718;
	or.b32  	%r14788, %r14787, %r14785;
	add.s32 	%r14789, %r14784, %r14788;
	add.s32 	%r14790, %r14789, %r14778;
	add.s32 	%r14791, %r17089, %r14704;
	xor.b32  	%r14792, %r14755, %r14731;
	and.b32  	%r14793, %r14779, %r14792;
	xor.b32  	%r14794, %r14793, %r14731;
	add.s32 	%r14795, %r14791, %r14794;
	shf.l.wrap.b32 	%r14796, %r14779, %r14779, 18;
	xor.b32  	%r14797, %r14796, %r14779;
	shf.l.wrap.b32 	%r14798, %r14797, %r14797, 27;
	xor.b32  	%r14799, %r14798, %r14779;
	shf.l.wrap.b32 	%r14800, %r14799, %r14799, 26;
	add.s32 	%r14801, %r14795, %r14800;
	add.s32 	%r14802, %r14801, 961987163;
	add.s32 	%r14803, %r14802, %r14718;
	shf.l.wrap.b32 	%r14804, %r14790, %r14790, 23;
	xor.b32  	%r14805, %r14804, %r14790;
	shf.l.wrap.b32 	%r14806, %r14805, %r14805, 21;
	xor.b32  	%r14807, %r14806, %r14790;
	shf.l.wrap.b32 	%r14808, %r14807, %r14807, 30;
	and.b32  	%r14809, %r14790, %r14766;
	or.b32  	%r14810, %r14790, %r14766;
	and.b32  	%r14811, %r14810, %r14742;
	or.b32  	%r14812, %r14811, %r14809;
	add.s32 	%r14813, %r14808, %r14812;
	add.s32 	%r14814, %r14813, %r14802;
	add.s32 	%r14815, %r17088, %r14731;
	xor.b32  	%r14816, %r14779, %r14755;
	and.b32  	%r14817, %r14803, %r14816;
	xor.b32  	%r14818, %r14817, %r14755;
	add.s32 	%r14819, %r14815, %r14818;
	shf.l.wrap.b32 	%r14820, %r14803, %r14803, 18;
	xor.b32  	%r14821, %r14820, %r14803;
	shf.l.wrap.b32 	%r14822, %r14821, %r14821, 27;
	xor.b32  	%r14823, %r14822, %r14803;
	shf.l.wrap.b32 	%r14824, %r14823, %r14823, 26;
	add.s32 	%r14825, %r14819, %r14824;
	add.s32 	%r14826, %r14825, 1508970993;
	add.s32 	%r14827, %r14826, %r14742;
	shf.l.wrap.b32 	%r14828, %r14814, %r14814, 23;
	xor.b32  	%r14829, %r14828, %r14814;
	shf.l.wrap.b32 	%r14830, %r14829, %r14829, 21;
	xor.b32  	%r14831, %r14830, %r14814;
	shf.l.wrap.b32 	%r14832, %r14831, %r14831, 30;
	and.b32  	%r14833, %r14814, %r14790;
	or.b32  	%r14834, %r14814, %r14790;
	and.b32  	%r14835, %r14834, %r14766;
	or.b32  	%r14836, %r14835, %r14833;
	add.s32 	%r14837, %r14832, %r14836;
	add.s32 	%r14838, %r14837, %r14826;
	add.s32 	%r14839, %r17087, %r14755;
	xor.b32  	%r14840, %r14803, %r14779;
	and.b32  	%r14841, %r14827, %r14840;
	xor.b32  	%r14842, %r14841, %r14779;
	add.s32 	%r14843, %r14839, %r14842;
	shf.l.wrap.b32 	%r14844, %r14827, %r14827, 18;
	xor.b32  	%r14845, %r14844, %r14827;
	shf.l.wrap.b32 	%r14846, %r14845, %r14845, 27;
	xor.b32  	%r14847, %r14846, %r14827;
	shf.l.wrap.b32 	%r14848, %r14847, %r14847, 26;
	add.s32 	%r14849, %r14843, %r14848;
	add.s32 	%r14850, %r14849, -1841331548;
	add.s32 	%r14851, %r14850, %r14766;
	shf.l.wrap.b32 	%r14852, %r14838, %r14838, 23;
	xor.b32  	%r14853, %r14852, %r14838;
	shf.l.wrap.b32 	%r14854, %r14853, %r14853, 21;
	xor.b32  	%r14855, %r14854, %r14838;
	shf.l.wrap.b32 	%r14856, %r14855, %r14855, 30;
	and.b32  	%r14857, %r14838, %r14814;
	or.b32  	%r14858, %r14838, %r14814;
	and.b32  	%r14859, %r14858, %r14790;
	or.b32  	%r14860, %r14859, %r14857;
	add.s32 	%r14861, %r14856, %r14860;
	add.s32 	%r14862, %r14861, %r14850;
	add.s32 	%r14863, %r17086, %r14779;
	xor.b32  	%r14864, %r14827, %r14803;
	and.b32  	%r14865, %r14851, %r14864;
	xor.b32  	%r14866, %r14865, %r14803;
	add.s32 	%r14867, %r14863, %r14866;
	shf.l.wrap.b32 	%r14868, %r14851, %r14851, 18;
	xor.b32  	%r14869, %r14868, %r14851;
	shf.l.wrap.b32 	%r14870, %r14869, %r14869, 27;
	xor.b32  	%r14871, %r14870, %r14851;
	shf.l.wrap.b32 	%r14872, %r14871, %r14871, 26;
	add.s32 	%r14873, %r14867, %r14872;
	add.s32 	%r14874, %r14873, -1424204075;
	add.s32 	%r14875, %r14874, %r14790;
	shf.l.wrap.b32 	%r14876, %r14862, %r14862, 23;
	xor.b32  	%r14877, %r14876, %r14862;
	shf.l.wrap.b32 	%r14878, %r14877, %r14877, 21;
	xor.b32  	%r14879, %r14878, %r14862;
	shf.l.wrap.b32 	%r14880, %r14879, %r14879, 30;
	and.b32  	%r14881, %r14862, %r14838;
	or.b32  	%r14882, %r14862, %r14838;
	and.b32  	%r14883, %r14882, %r14814;
	or.b32  	%r14884, %r14883, %r14881;
	add.s32 	%r14885, %r14880, %r14884;
	add.s32 	%r14886, %r14885, %r14874;
	add.s32 	%r14887, %r17085, %r14803;
	xor.b32  	%r14888, %r14851, %r14827;
	and.b32  	%r14889, %r14875, %r14888;
	xor.b32  	%r14890, %r14889, %r14827;
	add.s32 	%r14891, %r14887, %r14890;
	shf.l.wrap.b32 	%r14892, %r14875, %r14875, 18;
	xor.b32  	%r14893, %r14892, %r14875;
	shf.l.wrap.b32 	%r14894, %r14893, %r14893, 27;
	xor.b32  	%r14895, %r14894, %r14875;
	shf.l.wrap.b32 	%r14896, %r14895, %r14895, 26;
	add.s32 	%r14897, %r14891, %r14896;
	add.s32 	%r14898, %r14897, -670586216;
	add.s32 	%r14899, %r14898, %r14814;
	shf.l.wrap.b32 	%r14900, %r14886, %r14886, 23;
	xor.b32  	%r14901, %r14900, %r14886;
	shf.l.wrap.b32 	%r14902, %r14901, %r14901, 21;
	xor.b32  	%r14903, %r14902, %r14886;
	shf.l.wrap.b32 	%r14904, %r14903, %r14903, 30;
	and.b32  	%r14905, %r14886, %r14862;
	or.b32  	%r14906, %r14886, %r14862;
	and.b32  	%r14907, %r14906, %r14838;
	or.b32  	%r14908, %r14907, %r14905;
	add.s32 	%r14909, %r14904, %r14908;
	add.s32 	%r14910, %r14909, %r14898;
	add.s32 	%r14911, %r17084, %r14827;
	xor.b32  	%r14912, %r14875, %r14851;
	and.b32  	%r14913, %r14899, %r14912;
	xor.b32  	%r14914, %r14913, %r14851;
	add.s32 	%r14915, %r14911, %r14914;
	shf.l.wrap.b32 	%r14916, %r14899, %r14899, 18;
	xor.b32  	%r14917, %r14916, %r14899;
	shf.l.wrap.b32 	%r14918, %r14917, %r14917, 27;
	xor.b32  	%r14919, %r14918, %r14899;
	shf.l.wrap.b32 	%r14920, %r14919, %r14919, 26;
	add.s32 	%r14921, %r14915, %r14920;
	add.s32 	%r14922, %r14921, 310598401;
	add.s32 	%r14923, %r14922, %r14838;
	shf.l.wrap.b32 	%r14924, %r14910, %r14910, 23;
	xor.b32  	%r14925, %r14924, %r14910;
	shf.l.wrap.b32 	%r14926, %r14925, %r14925, 21;
	xor.b32  	%r14927, %r14926, %r14910;
	shf.l.wrap.b32 	%r14928, %r14927, %r14927, 30;
	and.b32  	%r14929, %r14910, %r14886;
	or.b32  	%r14930, %r14910, %r14886;
	and.b32  	%r14931, %r14930, %r14862;
	or.b32  	%r14932, %r14931, %r14929;
	add.s32 	%r14933, %r14928, %r14932;
	add.s32 	%r14934, %r14933, %r14922;
	add.s32 	%r14935, %r17083, %r14851;
	xor.b32  	%r14936, %r14899, %r14875;
	and.b32  	%r14937, %r14923, %r14936;
	xor.b32  	%r14938, %r14937, %r14875;
	add.s32 	%r14939, %r14935, %r14938;
	shf.l.wrap.b32 	%r14940, %r14923, %r14923, 18;
	xor.b32  	%r14941, %r14940, %r14923;
	shf.l.wrap.b32 	%r14942, %r14941, %r14941, 27;
	xor.b32  	%r14943, %r14942, %r14923;
	shf.l.wrap.b32 	%r14944, %r14943, %r14943, 26;
	add.s32 	%r14945, %r14939, %r14944;
	add.s32 	%r14946, %r14945, 607225278;
	add.s32 	%r14947, %r14946, %r14862;
	shf.l.wrap.b32 	%r14948, %r14934, %r14934, 23;
	xor.b32  	%r14949, %r14948, %r14934;
	shf.l.wrap.b32 	%r14950, %r14949, %r14949, 21;
	xor.b32  	%r14951, %r14950, %r14934;
	shf.l.wrap.b32 	%r14952, %r14951, %r14951, 30;
	and.b32  	%r14953, %r14934, %r14910;
	or.b32  	%r14954, %r14934, %r14910;
	and.b32  	%r14955, %r14954, %r14886;
	or.b32  	%r14956, %r14955, %r14953;
	add.s32 	%r14957, %r14952, %r14956;
	add.s32 	%r14958, %r14957, %r14946;
	add.s32 	%r14959, %r17082, %r14875;
	xor.b32  	%r14960, %r14923, %r14899;
	and.b32  	%r14961, %r14947, %r14960;
	xor.b32  	%r14962, %r14961, %r14899;
	add.s32 	%r14963, %r14959, %r14962;
	shf.l.wrap.b32 	%r14964, %r14947, %r14947, 18;
	xor.b32  	%r14965, %r14964, %r14947;
	shf.l.wrap.b32 	%r14966, %r14965, %r14965, 27;
	xor.b32  	%r14967, %r14966, %r14947;
	shf.l.wrap.b32 	%r14968, %r14967, %r14967, 26;
	add.s32 	%r14969, %r14963, %r14968;
	add.s32 	%r14970, %r14969, 1426881987;
	add.s32 	%r14971, %r14970, %r14886;
	shf.l.wrap.b32 	%r14972, %r14958, %r14958, 23;
	xor.b32  	%r14973, %r14972, %r14958;
	shf.l.wrap.b32 	%r14974, %r14973, %r14973, 21;
	xor.b32  	%r14975, %r14974, %r14958;
	shf.l.wrap.b32 	%r14976, %r14975, %r14975, 30;
	and.b32  	%r14977, %r14958, %r14934;
	or.b32  	%r14978, %r14958, %r14934;
	and.b32  	%r14979, %r14978, %r14910;
	or.b32  	%r14980, %r14979, %r14977;
	add.s32 	%r14981, %r14976, %r14980;
	add.s32 	%r14982, %r14981, %r14970;
	add.s32 	%r14983, %r17081, %r14899;
	xor.b32  	%r14984, %r14947, %r14923;
	and.b32  	%r14985, %r14971, %r14984;
	xor.b32  	%r14986, %r14985, %r14923;
	add.s32 	%r14987, %r14983, %r14986;
	shf.l.wrap.b32 	%r14988, %r14971, %r14971, 18;
	xor.b32  	%r14989, %r14988, %r14971;
	shf.l.wrap.b32 	%r14990, %r14989, %r14989, 27;
	xor.b32  	%r14991, %r14990, %r14971;
	shf.l.wrap.b32 	%r14992, %r14991, %r14991, 26;
	add.s32 	%r14993, %r14987, %r14992;
	add.s32 	%r14994, %r14993, 1925078388;
	add.s32 	%r14995, %r14994, %r14910;
	shf.l.wrap.b32 	%r14996, %r14982, %r14982, 23;
	xor.b32  	%r14997, %r14996, %r14982;
	shf.l.wrap.b32 	%r14998, %r14997, %r14997, 21;
	xor.b32  	%r14999, %r14998, %r14982;
	shf.l.wrap.b32 	%r15000, %r14999, %r14999, 30;
	and.b32  	%r15001, %r14982, %r14958;
	or.b32  	%r15002, %r14982, %r14958;
	and.b32  	%r15003, %r15002, %r14934;
	or.b32  	%r15004, %r15003, %r15001;
	add.s32 	%r15005, %r15000, %r15004;
	add.s32 	%r15006, %r15005, %r14994;
	add.s32 	%r15007, %r17080, %r14923;
	xor.b32  	%r15008, %r14971, %r14947;
	and.b32  	%r15009, %r14995, %r15008;
	xor.b32  	%r15010, %r15009, %r14947;
	add.s32 	%r15011, %r15007, %r15010;
	shf.l.wrap.b32 	%r15012, %r14995, %r14995, 18;
	xor.b32  	%r15013, %r15012, %r14995;
	shf.l.wrap.b32 	%r15014, %r15013, %r15013, 27;
	xor.b32  	%r15015, %r15014, %r14995;
	shf.l.wrap.b32 	%r15016, %r15015, %r15015, 26;
	add.s32 	%r15017, %r15011, %r15016;
	add.s32 	%r15018, %r15017, -2132889090;
	add.s32 	%r15019, %r15018, %r14934;
	shf.l.wrap.b32 	%r15020, %r15006, %r15006, 23;
	xor.b32  	%r15021, %r15020, %r15006;
	shf.l.wrap.b32 	%r15022, %r15021, %r15021, 21;
	xor.b32  	%r15023, %r15022, %r15006;
	shf.l.wrap.b32 	%r15024, %r15023, %r15023, 30;
	and.b32  	%r15025, %r15006, %r14982;
	or.b32  	%r15026, %r15006, %r14982;
	and.b32  	%r15027, %r15026, %r14958;
	or.b32  	%r15028, %r15027, %r15025;
	add.s32 	%r15029, %r15024, %r15028;
	add.s32 	%r15030, %r15029, %r15018;
	add.s32 	%r15031, %r17079, %r14947;
	xor.b32  	%r15032, %r14995, %r14971;
	and.b32  	%r15033, %r15019, %r15032;
	xor.b32  	%r15034, %r15033, %r14971;
	add.s32 	%r15035, %r15031, %r15034;
	shf.l.wrap.b32 	%r15036, %r15019, %r15019, 18;
	xor.b32  	%r15037, %r15036, %r15019;
	shf.l.wrap.b32 	%r15038, %r15037, %r15037, 27;
	xor.b32  	%r15039, %r15038, %r15019;
	shf.l.wrap.b32 	%r15040, %r15039, %r15039, 26;
	add.s32 	%r15041, %r15035, %r15040;
	add.s32 	%r15042, %r15041, -1680079193;
	add.s32 	%r15043, %r15042, %r14958;
	shf.l.wrap.b32 	%r15044, %r15030, %r15030, 23;
	xor.b32  	%r15045, %r15044, %r15030;
	shf.l.wrap.b32 	%r15046, %r15045, %r15045, 21;
	xor.b32  	%r15047, %r15046, %r15030;
	shf.l.wrap.b32 	%r15048, %r15047, %r15047, 30;
	and.b32  	%r15049, %r15030, %r15006;
	or.b32  	%r15050, %r15030, %r15006;
	and.b32  	%r15051, %r15050, %r14982;
	or.b32  	%r15052, %r15051, %r15049;
	add.s32 	%r15053, %r15048, %r15052;
	add.s32 	%r15054, %r15053, %r15042;
	add.s32 	%r15055, %r17078, %r14971;
	xor.b32  	%r15056, %r15019, %r14995;
	and.b32  	%r15057, %r15043, %r15056;
	xor.b32  	%r15058, %r15057, %r14995;
	add.s32 	%r15059, %r15055, %r15058;
	shf.l.wrap.b32 	%r15060, %r15043, %r15043, 18;
	xor.b32  	%r15061, %r15060, %r15043;
	shf.l.wrap.b32 	%r15062, %r15061, %r15061, 27;
	xor.b32  	%r15063, %r15062, %r15043;
	shf.l.wrap.b32 	%r15064, %r15063, %r15063, 26;
	add.s32 	%r15065, %r15059, %r15064;
	add.s32 	%r15066, %r15065, -1046744716;
	add.s32 	%r15067, %r15066, %r14982;
	shf.l.wrap.b32 	%r15068, %r15054, %r15054, 23;
	xor.b32  	%r15069, %r15068, %r15054;
	shf.l.wrap.b32 	%r15070, %r15069, %r15069, 21;
	xor.b32  	%r15071, %r15070, %r15054;
	shf.l.wrap.b32 	%r15072, %r15071, %r15071, 30;
	and.b32  	%r15073, %r15054, %r15030;
	or.b32  	%r15074, %r15054, %r15030;
	and.b32  	%r15075, %r15074, %r15006;
	or.b32  	%r15076, %r15075, %r15073;
	add.s32 	%r15077, %r15072, %r15076;
	add.s32 	%r15078, %r15077, %r15066;
	shf.l.wrap.b32 	%r15079, %r17079, %r17079, 13;
	shf.l.wrap.b32 	%r15080, %r17079, %r17079, 15;
	xor.b32  	%r15081, %r15080, %r15079;
	shr.u32 	%r15082, %r17079, 10;
	xor.b32  	%r15083, %r15081, %r15082;
	shf.l.wrap.b32 	%r15084, %r17092, %r17092, 14;
	shf.l.wrap.b32 	%r15085, %r17092, %r17092, 25;
	xor.b32  	%r15086, %r15085, %r15084;
	shr.u32 	%r15087, %r17092, 3;
	xor.b32  	%r15088, %r15086, %r15087;
	add.s32 	%r15089, %r17084, %r15083;
	add.s32 	%r15090, %r15089, %r17093;
	add.s32 	%r15091, %r15090, %r15088;
	add.s32 	%r15092, %r15091, %r14995;
	xor.b32  	%r15093, %r15043, %r15019;
	and.b32  	%r15094, %r15067, %r15093;
	xor.b32  	%r15095, %r15094, %r15019;
	add.s32 	%r15096, %r15092, %r15095;
	shf.l.wrap.b32 	%r15097, %r15067, %r15067, 18;
	xor.b32  	%r15098, %r15097, %r15067;
	shf.l.wrap.b32 	%r15099, %r15098, %r15098, 27;
	xor.b32  	%r15100, %r15099, %r15067;
	shf.l.wrap.b32 	%r15101, %r15100, %r15100, 26;
	add.s32 	%r15102, %r15096, %r15101;
	add.s32 	%r15103, %r15102, -459576895;
	add.s32 	%r15104, %r15103, %r15006;
	shf.l.wrap.b32 	%r15105, %r15078, %r15078, 23;
	xor.b32  	%r15106, %r15105, %r15078;
	shf.l.wrap.b32 	%r15107, %r15106, %r15106, 21;
	xor.b32  	%r15108, %r15107, %r15078;
	shf.l.wrap.b32 	%r15109, %r15108, %r15108, 30;
	and.b32  	%r15110, %r15078, %r15054;
	or.b32  	%r15111, %r15078, %r15054;
	and.b32  	%r15112, %r15111, %r15030;
	or.b32  	%r15113, %r15112, %r15110;
	add.s32 	%r15114, %r15109, %r15113;
	add.s32 	%r15115, %r15114, %r15103;
	shf.l.wrap.b32 	%r15116, %r17078, %r17078, 13;
	shf.l.wrap.b32 	%r15117, %r17078, %r17078, 15;
	xor.b32  	%r15118, %r15117, %r15116;
	shr.u32 	%r15119, %r17078, 10;
	xor.b32  	%r15120, %r15118, %r15119;
	shf.l.wrap.b32 	%r15121, %r17091, %r17091, 14;
	shf.l.wrap.b32 	%r15122, %r17091, %r17091, 25;
	xor.b32  	%r15123, %r15122, %r15121;
	shr.u32 	%r15124, %r17091, 3;
	xor.b32  	%r15125, %r15123, %r15124;
	add.s32 	%r15126, %r17083, %r15120;
	add.s32 	%r15127, %r15126, %r17092;
	add.s32 	%r15128, %r15127, %r15125;
	add.s32 	%r15129, %r15128, %r15019;
	xor.b32  	%r15130, %r15067, %r15043;
	and.b32  	%r15131, %r15104, %r15130;
	xor.b32  	%r15132, %r15131, %r15043;
	add.s32 	%r15133, %r15129, %r15132;
	shf.l.wrap.b32 	%r15134, %r15104, %r15104, 18;
	xor.b32  	%r15135, %r15134, %r15104;
	shf.l.wrap.b32 	%r15136, %r15135, %r15135, 27;
	xor.b32  	%r15137, %r15136, %r15104;
	shf.l.wrap.b32 	%r15138, %r15137, %r15137, 26;
	add.s32 	%r15139, %r15133, %r15138;
	add.s32 	%r15140, %r15139, -272742522;
	add.s32 	%r15141, %r15140, %r15030;
	shf.l.wrap.b32 	%r15142, %r15115, %r15115, 23;
	xor.b32  	%r15143, %r15142, %r15115;
	shf.l.wrap.b32 	%r15144, %r15143, %r15143, 21;
	xor.b32  	%r15145, %r15144, %r15115;
	shf.l.wrap.b32 	%r15146, %r15145, %r15145, 30;
	and.b32  	%r15147, %r15115, %r15078;
	or.b32  	%r15148, %r15115, %r15078;
	and.b32  	%r15149, %r15148, %r15054;
	or.b32  	%r15150, %r15149, %r15147;
	add.s32 	%r15151, %r15146, %r15150;
	add.s32 	%r15152, %r15151, %r15140;
	shf.l.wrap.b32 	%r15153, %r15091, %r15091, 15;
	shf.l.wrap.b32 	%r15154, %r15091, %r15091, 13;
	xor.b32  	%r15155, %r15153, %r15154;
	shr.u32 	%r15156, %r15091, 10;
	xor.b32  	%r15157, %r15155, %r15156;
	shf.l.wrap.b32 	%r15158, %r17090, %r17090, 14;
	shf.l.wrap.b32 	%r15159, %r17090, %r17090, 25;
	xor.b32  	%r15160, %r15159, %r15158;
	shr.u32 	%r15161, %r17090, 3;
	xor.b32  	%r15162, %r15160, %r15161;
	add.s32 	%r15163, %r17091, %r17082;
	add.s32 	%r15164, %r15163, %r15162;
	add.s32 	%r15165, %r15164, %r15157;
	add.s32 	%r15166, %r15165, %r15043;
	xor.b32  	%r15167, %r15104, %r15067;
	and.b32  	%r15168, %r15141, %r15167;
	xor.b32  	%r15169, %r15168, %r15067;
	add.s32 	%r15170, %r15166, %r15169;
	shf.l.wrap.b32 	%r15171, %r15141, %r15141, 18;
	xor.b32  	%r15172, %r15171, %r15141;
	shf.l.wrap.b32 	%r15173, %r15172, %r15172, 27;
	xor.b32  	%r15174, %r15173, %r15141;
	shf.l.wrap.b32 	%r15175, %r15174, %r15174, 26;
	add.s32 	%r15176, %r15170, %r15175;
	add.s32 	%r15177, %r15176, 264347078;
	add.s32 	%r15178, %r15177, %r15054;
	shf.l.wrap.b32 	%r15179, %r15152, %r15152, 23;
	xor.b32  	%r15180, %r15179, %r15152;
	shf.l.wrap.b32 	%r15181, %r15180, %r15180, 21;
	xor.b32  	%r15182, %r15181, %r15152;
	shf.l.wrap.b32 	%r15183, %r15182, %r15182, 30;
	and.b32  	%r15184, %r15152, %r15115;
	or.b32  	%r15185, %r15152, %r15115;
	and.b32  	%r15186, %r15185, %r15078;
	or.b32  	%r15187, %r15186, %r15184;
	add.s32 	%r15188, %r15183, %r15187;
	add.s32 	%r15189, %r15188, %r15177;
	shf.l.wrap.b32 	%r15190, %r15128, %r15128, 15;
	shf.l.wrap.b32 	%r15191, %r15128, %r15128, 13;
	xor.b32  	%r15192, %r15190, %r15191;
	shr.u32 	%r15193, %r15128, 10;
	xor.b32  	%r15194, %r15192, %r15193;
	shf.l.wrap.b32 	%r15195, %r17089, %r17089, 14;
	shf.l.wrap.b32 	%r15196, %r17089, %r17089, 25;
	xor.b32  	%r15197, %r15196, %r15195;
	shr.u32 	%r15198, %r17089, 3;
	xor.b32  	%r15199, %r15197, %r15198;
	add.s32 	%r15200, %r17090, %r17081;
	add.s32 	%r15201, %r15200, %r15199;
	add.s32 	%r15202, %r15201, %r15194;
	add.s32 	%r15203, %r15202, %r15067;
	xor.b32  	%r15204, %r15141, %r15104;
	and.b32  	%r15205, %r15178, %r15204;
	xor.b32  	%r15206, %r15205, %r15104;
	add.s32 	%r15207, %r15203, %r15206;
	shf.l.wrap.b32 	%r15208, %r15178, %r15178, 18;
	xor.b32  	%r15209, %r15208, %r15178;
	shf.l.wrap.b32 	%r15210, %r15209, %r15209, 27;
	xor.b32  	%r15211, %r15210, %r15178;
	shf.l.wrap.b32 	%r15212, %r15211, %r15211, 26;
	add.s32 	%r15213, %r15207, %r15212;
	add.s32 	%r15214, %r15213, 604807628;
	add.s32 	%r15215, %r15214, %r15078;
	shf.l.wrap.b32 	%r15216, %r15189, %r15189, 23;
	xor.b32  	%r15217, %r15216, %r15189;
	shf.l.wrap.b32 	%r15218, %r15217, %r15217, 21;
	xor.b32  	%r15219, %r15218, %r15189;
	shf.l.wrap.b32 	%r15220, %r15219, %r15219, 30;
	and.b32  	%r15221, %r15189, %r15152;
	or.b32  	%r15222, %r15189, %r15152;
	and.b32  	%r15223, %r15222, %r15115;
	or.b32  	%r15224, %r15223, %r15221;
	add.s32 	%r15225, %r15220, %r15224;
	add.s32 	%r15226, %r15225, %r15214;
	shf.l.wrap.b32 	%r15227, %r15165, %r15165, 15;
	shf.l.wrap.b32 	%r15228, %r15165, %r15165, 13;
	xor.b32  	%r15229, %r15227, %r15228;
	shr.u32 	%r15230, %r15165, 10;
	xor.b32  	%r15231, %r15229, %r15230;
	shf.l.wrap.b32 	%r15232, %r17088, %r17088, 14;
	shf.l.wrap.b32 	%r15233, %r17088, %r17088, 25;
	xor.b32  	%r15234, %r15233, %r15232;
	shr.u32 	%r15235, %r17088, 3;
	xor.b32  	%r15236, %r15234, %r15235;
	add.s32 	%r15237, %r17089, %r17080;
	add.s32 	%r15238, %r15237, %r15236;
	add.s32 	%r15239, %r15238, %r15231;
	add.s32 	%r15240, %r15239, %r15104;
	xor.b32  	%r15241, %r15178, %r15141;
	and.b32  	%r15242, %r15215, %r15241;
	xor.b32  	%r15243, %r15242, %r15141;
	add.s32 	%r15244, %r15240, %r15243;
	shf.l.wrap.b32 	%r15245, %r15215, %r15215, 18;
	xor.b32  	%r15246, %r15245, %r15215;
	shf.l.wrap.b32 	%r15247, %r15246, %r15246, 27;
	xor.b32  	%r15248, %r15247, %r15215;
	shf.l.wrap.b32 	%r15249, %r15248, %r15248, 26;
	add.s32 	%r15250, %r15244, %r15249;
	add.s32 	%r15251, %r15250, 770255983;
	add.s32 	%r15252, %r15251, %r15115;
	shf.l.wrap.b32 	%r15253, %r15226, %r15226, 23;
	xor.b32  	%r15254, %r15253, %r15226;
	shf.l.wrap.b32 	%r15255, %r15254, %r15254, 21;
	xor.b32  	%r15256, %r15255, %r15226;
	shf.l.wrap.b32 	%r15257, %r15256, %r15256, 30;
	and.b32  	%r15258, %r15226, %r15189;
	or.b32  	%r15259, %r15226, %r15189;
	and.b32  	%r15260, %r15259, %r15152;
	or.b32  	%r15261, %r15260, %r15258;
	add.s32 	%r15262, %r15257, %r15261;
	add.s32 	%r15263, %r15262, %r15251;
	shf.l.wrap.b32 	%r15264, %r15202, %r15202, 15;
	shf.l.wrap.b32 	%r15265, %r15202, %r15202, 13;
	xor.b32  	%r15266, %r15264, %r15265;
	shr.u32 	%r15267, %r15202, 10;
	xor.b32  	%r15268, %r15266, %r15267;
	shf.l.wrap.b32 	%r15269, %r17087, %r17087, 14;
	shf.l.wrap.b32 	%r15270, %r17087, %r17087, 25;
	xor.b32  	%r15271, %r15270, %r15269;
	shr.u32 	%r15272, %r17087, 3;
	xor.b32  	%r15273, %r15271, %r15272;
	add.s32 	%r15274, %r17088, %r17079;
	add.s32 	%r15275, %r15274, %r15273;
	add.s32 	%r15276, %r15275, %r15268;
	add.s32 	%r15277, %r15276, %r15141;
	xor.b32  	%r15278, %r15215, %r15178;
	and.b32  	%r15279, %r15252, %r15278;
	xor.b32  	%r15280, %r15279, %r15178;
	add.s32 	%r15281, %r15277, %r15280;
	shf.l.wrap.b32 	%r15282, %r15252, %r15252, 18;
	xor.b32  	%r15283, %r15282, %r15252;
	shf.l.wrap.b32 	%r15284, %r15283, %r15283, 27;
	xor.b32  	%r15285, %r15284, %r15252;
	shf.l.wrap.b32 	%r15286, %r15285, %r15285, 26;
	add.s32 	%r15287, %r15281, %r15286;
	add.s32 	%r15288, %r15287, 1249150122;
	add.s32 	%r15289, %r15288, %r15152;
	shf.l.wrap.b32 	%r15290, %r15263, %r15263, 23;
	xor.b32  	%r15291, %r15290, %r15263;
	shf.l.wrap.b32 	%r15292, %r15291, %r15291, 21;
	xor.b32  	%r15293, %r15292, %r15263;
	shf.l.wrap.b32 	%r15294, %r15293, %r15293, 30;
	and.b32  	%r15295, %r15263, %r15226;
	or.b32  	%r15296, %r15263, %r15226;
	and.b32  	%r15297, %r15296, %r15189;
	or.b32  	%r15298, %r15297, %r15295;
	add.s32 	%r15299, %r15294, %r15298;
	add.s32 	%r15300, %r15299, %r15288;
	shf.l.wrap.b32 	%r15301, %r15239, %r15239, 15;
	shf.l.wrap.b32 	%r15302, %r15239, %r15239, 13;
	xor.b32  	%r15303, %r15301, %r15302;
	shr.u32 	%r15304, %r15239, 10;
	xor.b32  	%r15305, %r15303, %r15304;
	shf.l.wrap.b32 	%r15306, %r17086, %r17086, 14;
	shf.l.wrap.b32 	%r15307, %r17086, %r17086, 25;
	xor.b32  	%r15308, %r15307, %r15306;
	shr.u32 	%r15309, %r17086, 3;
	xor.b32  	%r15310, %r15308, %r15309;
	add.s32 	%r15311, %r17087, %r17078;
	add.s32 	%r15312, %r15311, %r15310;
	add.s32 	%r15313, %r15312, %r15305;
	add.s32 	%r15314, %r15313, %r15178;
	xor.b32  	%r15315, %r15252, %r15215;
	and.b32  	%r15316, %r15289, %r15315;
	xor.b32  	%r15317, %r15316, %r15215;
	add.s32 	%r15318, %r15314, %r15317;
	shf.l.wrap.b32 	%r15319, %r15289, %r15289, 18;
	xor.b32  	%r15320, %r15319, %r15289;
	shf.l.wrap.b32 	%r15321, %r15320, %r15320, 27;
	xor.b32  	%r15322, %r15321, %r15289;
	shf.l.wrap.b32 	%r15323, %r15322, %r15322, 26;
	add.s32 	%r15324, %r15318, %r15323;
	add.s32 	%r15325, %r15324, 1555081692;
	add.s32 	%r15326, %r15325, %r15189;
	shf.l.wrap.b32 	%r15327, %r15300, %r15300, 23;
	xor.b32  	%r15328, %r15327, %r15300;
	shf.l.wrap.b32 	%r15329, %r15328, %r15328, 21;
	xor.b32  	%r15330, %r15329, %r15300;
	shf.l.wrap.b32 	%r15331, %r15330, %r15330, 30;
	and.b32  	%r15332, %r15300, %r15263;
	or.b32  	%r15333, %r15300, %r15263;
	and.b32  	%r15334, %r15333, %r15226;
	or.b32  	%r15335, %r15334, %r15332;
	add.s32 	%r15336, %r15331, %r15335;
	add.s32 	%r15337, %r15336, %r15325;
	shf.l.wrap.b32 	%r15338, %r15276, %r15276, 15;
	shf.l.wrap.b32 	%r15339, %r15276, %r15276, 13;
	xor.b32  	%r15340, %r15338, %r15339;
	shr.u32 	%r15341, %r15276, 10;
	xor.b32  	%r15342, %r15340, %r15341;
	shf.l.wrap.b32 	%r15343, %r17085, %r17085, 14;
	shf.l.wrap.b32 	%r15344, %r17085, %r17085, 25;
	xor.b32  	%r15345, %r15344, %r15343;
	shr.u32 	%r15346, %r17085, 3;
	xor.b32  	%r15347, %r15345, %r15346;
	add.s32 	%r15348, %r15347, %r17086;
	add.s32 	%r15349, %r15348, %r15091;
	add.s32 	%r15350, %r15349, %r15342;
	add.s32 	%r15351, %r15350, %r15215;
	xor.b32  	%r15352, %r15289, %r15252;
	and.b32  	%r15353, %r15326, %r15352;
	xor.b32  	%r15354, %r15353, %r15252;
	add.s32 	%r15355, %r15351, %r15354;
	shf.l.wrap.b32 	%r15356, %r15326, %r15326, 18;
	xor.b32  	%r15357, %r15356, %r15326;
	shf.l.wrap.b32 	%r15358, %r15357, %r15357, 27;
	xor.b32  	%r15359, %r15358, %r15326;
	shf.l.wrap.b32 	%r15360, %r15359, %r15359, 26;
	add.s32 	%r15361, %r15355, %r15360;
	add.s32 	%r15362, %r15361, 1996064986;
	add.s32 	%r15363, %r15362, %r15226;
	shf.l.wrap.b32 	%r15364, %r15337, %r15337, 23;
	xor.b32  	%r15365, %r15364, %r15337;
	shf.l.wrap.b32 	%r15366, %r15365, %r15365, 21;
	xor.b32  	%r15367, %r15366, %r15337;
	shf.l.wrap.b32 	%r15368, %r15367, %r15367, 30;
	and.b32  	%r15369, %r15337, %r15300;
	or.b32  	%r15370, %r15337, %r15300;
	and.b32  	%r15371, %r15370, %r15263;
	or.b32  	%r15372, %r15371, %r15369;
	add.s32 	%r15373, %r15368, %r15372;
	add.s32 	%r15374, %r15373, %r15362;
	shf.l.wrap.b32 	%r15375, %r15313, %r15313, 15;
	shf.l.wrap.b32 	%r15376, %r15313, %r15313, 13;
	xor.b32  	%r15377, %r15375, %r15376;
	shr.u32 	%r15378, %r15313, 10;
	xor.b32  	%r15379, %r15377, %r15378;
	shf.l.wrap.b32 	%r15380, %r17084, %r17084, 14;
	shf.l.wrap.b32 	%r15381, %r17084, %r17084, 25;
	xor.b32  	%r15382, %r15381, %r15380;
	shr.u32 	%r15383, %r17084, 3;
	xor.b32  	%r15384, %r15382, %r15383;
	add.s32 	%r15385, %r15384, %r17085;
	add.s32 	%r15386, %r15385, %r15128;
	add.s32 	%r15387, %r15386, %r15379;
	add.s32 	%r15388, %r15387, %r15252;
	xor.b32  	%r15389, %r15326, %r15289;
	and.b32  	%r15390, %r15363, %r15389;
	xor.b32  	%r15391, %r15390, %r15289;
	add.s32 	%r15392, %r15388, %r15391;
	shf.l.wrap.b32 	%r15393, %r15363, %r15363, 18;
	xor.b32  	%r15394, %r15393, %r15363;
	shf.l.wrap.b32 	%r15395, %r15394, %r15394, 27;
	xor.b32  	%r15396, %r15395, %r15363;
	shf.l.wrap.b32 	%r15397, %r15396, %r15396, 26;
	add.s32 	%r15398, %r15392, %r15397;
	add.s32 	%r15399, %r15398, -1740746414;
	add.s32 	%r15400, %r15399, %r15263;
	shf.l.wrap.b32 	%r15401, %r15374, %r15374, 23;
	xor.b32  	%r15402, %r15401, %r15374;
	shf.l.wrap.b32 	%r15403, %r15402, %r15402, 21;
	xor.b32  	%r15404, %r15403, %r15374;
	shf.l.wrap.b32 	%r15405, %r15404, %r15404, 30;
	and.b32  	%r15406, %r15374, %r15337;
	or.b32  	%r15407, %r15374, %r15337;
	and.b32  	%r15408, %r15407, %r15300;
	or.b32  	%r15409, %r15408, %r15406;
	add.s32 	%r15410, %r15405, %r15409;
	add.s32 	%r15411, %r15410, %r15399;
	shf.l.wrap.b32 	%r15412, %r15350, %r15350, 15;
	shf.l.wrap.b32 	%r15413, %r15350, %r15350, 13;
	xor.b32  	%r15414, %r15412, %r15413;
	shr.u32 	%r15415, %r15350, 10;
	xor.b32  	%r15416, %r15414, %r15415;
	shf.l.wrap.b32 	%r15417, %r17083, %r17083, 14;
	shf.l.wrap.b32 	%r15418, %r17083, %r17083, 25;
	xor.b32  	%r15419, %r15418, %r15417;
	shr.u32 	%r15420, %r17083, 3;
	xor.b32  	%r15421, %r15419, %r15420;
	add.s32 	%r15422, %r15421, %r17084;
	add.s32 	%r15423, %r15422, %r15165;
	add.s32 	%r15424, %r15423, %r15416;
	add.s32 	%r15425, %r15424, %r15289;
	xor.b32  	%r15426, %r15363, %r15326;
	and.b32  	%r15427, %r15400, %r15426;
	xor.b32  	%r15428, %r15427, %r15326;
	add.s32 	%r15429, %r15425, %r15428;
	shf.l.wrap.b32 	%r15430, %r15400, %r15400, 18;
	xor.b32  	%r15431, %r15430, %r15400;
	shf.l.wrap.b32 	%r15432, %r15431, %r15431, 27;
	xor.b32  	%r15433, %r15432, %r15400;
	shf.l.wrap.b32 	%r15434, %r15433, %r15433, 26;
	add.s32 	%r15435, %r15429, %r15434;
	add.s32 	%r15436, %r15435, -1473132947;
	add.s32 	%r15437, %r15436, %r15300;
	shf.l.wrap.b32 	%r15438, %r15411, %r15411, 23;
	xor.b32  	%r15439, %r15438, %r15411;
	shf.l.wrap.b32 	%r15440, %r15439, %r15439, 21;
	xor.b32  	%r15441, %r15440, %r15411;
	shf.l.wrap.b32 	%r15442, %r15441, %r15441, 30;
	and.b32  	%r15443, %r15411, %r15374;
	or.b32  	%r15444, %r15411, %r15374;
	and.b32  	%r15445, %r15444, %r15337;
	or.b32  	%r15446, %r15445, %r15443;
	add.s32 	%r15447, %r15442, %r15446;
	add.s32 	%r15448, %r15447, %r15436;
	shf.l.wrap.b32 	%r15449, %r15387, %r15387, 15;
	shf.l.wrap.b32 	%r15450, %r15387, %r15387, 13;
	xor.b32  	%r15451, %r15449, %r15450;
	shr.u32 	%r15452, %r15387, 10;
	xor.b32  	%r15453, %r15451, %r15452;
	shf.l.wrap.b32 	%r15454, %r17082, %r17082, 14;
	shf.l.wrap.b32 	%r15455, %r17082, %r17082, 25;
	xor.b32  	%r15456, %r15455, %r15454;
	shr.u32 	%r15457, %r17082, 3;
	xor.b32  	%r15458, %r15456, %r15457;
	add.s32 	%r15459, %r15458, %r17083;
	add.s32 	%r15460, %r15459, %r15202;
	add.s32 	%r15461, %r15460, %r15453;
	add.s32 	%r15462, %r15461, %r15326;
	xor.b32  	%r15463, %r15400, %r15363;
	and.b32  	%r15464, %r15437, %r15463;
	xor.b32  	%r15465, %r15464, %r15363;
	add.s32 	%r15466, %r15462, %r15465;
	shf.l.wrap.b32 	%r15467, %r15437, %r15437, 18;
	xor.b32  	%r15468, %r15467, %r15437;
	shf.l.wrap.b32 	%r15469, %r15468, %r15468, 27;
	xor.b32  	%r15470, %r15469, %r15437;
	shf.l.wrap.b32 	%r15471, %r15470, %r15470, 26;
	add.s32 	%r15472, %r15466, %r15471;
	add.s32 	%r15473, %r15472, -1341970488;
	add.s32 	%r15474, %r15473, %r15337;
	shf.l.wrap.b32 	%r15475, %r15448, %r15448, 23;
	xor.b32  	%r15476, %r15475, %r15448;
	shf.l.wrap.b32 	%r15477, %r15476, %r15476, 21;
	xor.b32  	%r15478, %r15477, %r15448;
	shf.l.wrap.b32 	%r15479, %r15478, %r15478, 30;
	and.b32  	%r15480, %r15448, %r15411;
	or.b32  	%r15481, %r15448, %r15411;
	and.b32  	%r15482, %r15481, %r15374;
	or.b32  	%r15483, %r15482, %r15480;
	add.s32 	%r15484, %r15479, %r15483;
	add.s32 	%r15485, %r15484, %r15473;
	shf.l.wrap.b32 	%r15486, %r15424, %r15424, 15;
	shf.l.wrap.b32 	%r15487, %r15424, %r15424, 13;
	xor.b32  	%r15488, %r15486, %r15487;
	shr.u32 	%r15489, %r15424, 10;
	xor.b32  	%r15490, %r15488, %r15489;
	shf.l.wrap.b32 	%r15491, %r17081, %r17081, 14;
	shf.l.wrap.b32 	%r15492, %r17081, %r17081, 25;
	xor.b32  	%r15493, %r15492, %r15491;
	shr.u32 	%r15494, %r17081, 3;
	xor.b32  	%r15495, %r15493, %r15494;
	add.s32 	%r15496, %r15495, %r17082;
	add.s32 	%r15497, %r15496, %r15239;
	add.s32 	%r15498, %r15497, %r15490;
	add.s32 	%r15499, %r15498, %r15363;
	xor.b32  	%r15500, %r15437, %r15400;
	and.b32  	%r15501, %r15474, %r15500;
	xor.b32  	%r15502, %r15501, %r15400;
	add.s32 	%r15503, %r15499, %r15502;
	shf.l.wrap.b32 	%r15504, %r15474, %r15474, 18;
	xor.b32  	%r15505, %r15504, %r15474;
	shf.l.wrap.b32 	%r15506, %r15505, %r15505, 27;
	xor.b32  	%r15507, %r15506, %r15474;
	shf.l.wrap.b32 	%r15508, %r15507, %r15507, 26;
	add.s32 	%r15509, %r15503, %r15508;
	add.s32 	%r15510, %r15509, -1084653625;
	add.s32 	%r15511, %r15510, %r15374;
	shf.l.wrap.b32 	%r15512, %r15485, %r15485, 23;
	xor.b32  	%r15513, %r15512, %r15485;
	shf.l.wrap.b32 	%r15514, %r15513, %r15513, 21;
	xor.b32  	%r15515, %r15514, %r15485;
	shf.l.wrap.b32 	%r15516, %r15515, %r15515, 30;
	and.b32  	%r15517, %r15485, %r15448;
	or.b32  	%r15518, %r15485, %r15448;
	and.b32  	%r15519, %r15518, %r15411;
	or.b32  	%r15520, %r15519, %r15517;
	add.s32 	%r15521, %r15516, %r15520;
	add.s32 	%r15522, %r15521, %r15510;
	shf.l.wrap.b32 	%r15523, %r15461, %r15461, 15;
	shf.l.wrap.b32 	%r15524, %r15461, %r15461, 13;
	xor.b32  	%r15525, %r15523, %r15524;
	shr.u32 	%r15526, %r15461, 10;
	xor.b32  	%r15527, %r15525, %r15526;
	shf.l.wrap.b32 	%r15528, %r17080, %r17080, 14;
	shf.l.wrap.b32 	%r15529, %r17080, %r17080, 25;
	xor.b32  	%r15530, %r15529, %r15528;
	shr.u32 	%r15531, %r17080, 3;
	xor.b32  	%r15532, %r15530, %r15531;
	add.s32 	%r15533, %r15532, %r17081;
	add.s32 	%r15534, %r15533, %r15276;
	add.s32 	%r15535, %r15534, %r15527;
	add.s32 	%r15536, %r15535, %r15400;
	xor.b32  	%r15537, %r15474, %r15437;
	and.b32  	%r15538, %r15511, %r15537;
	xor.b32  	%r15539, %r15538, %r15437;
	add.s32 	%r15540, %r15536, %r15539;
	shf.l.wrap.b32 	%r15541, %r15511, %r15511, 18;
	xor.b32  	%r15542, %r15541, %r15511;
	shf.l.wrap.b32 	%r15543, %r15542, %r15542, 27;
	xor.b32  	%r15544, %r15543, %r15511;
	shf.l.wrap.b32 	%r15545, %r15544, %r15544, 26;
	add.s32 	%r15546, %r15540, %r15545;
	add.s32 	%r15547, %r15546, -958395405;
	add.s32 	%r15548, %r15547, %r15411;
	shf.l.wrap.b32 	%r15549, %r15522, %r15522, 23;
	xor.b32  	%r15550, %r15549, %r15522;
	shf.l.wrap.b32 	%r15551, %r15550, %r15550, 21;
	xor.b32  	%r15552, %r15551, %r15522;
	shf.l.wrap.b32 	%r15553, %r15552, %r15552, 30;
	and.b32  	%r15554, %r15522, %r15485;
	or.b32  	%r15555, %r15522, %r15485;
	and.b32  	%r15556, %r15555, %r15448;
	or.b32  	%r15557, %r15556, %r15554;
	add.s32 	%r15558, %r15553, %r15557;
	add.s32 	%r15559, %r15558, %r15547;
	shf.l.wrap.b32 	%r15560, %r15498, %r15498, 15;
	shf.l.wrap.b32 	%r15561, %r15498, %r15498, 13;
	xor.b32  	%r15562, %r15560, %r15561;
	shr.u32 	%r15563, %r15498, 10;
	xor.b32  	%r15564, %r15562, %r15563;
	shf.l.wrap.b32 	%r15565, %r17079, %r17079, 14;
	shf.l.wrap.b32 	%r15566, %r17079, %r17079, 25;
	xor.b32  	%r15567, %r15566, %r15565;
	shr.u32 	%r15568, %r17079, 3;
	xor.b32  	%r15569, %r15567, %r15568;
	add.s32 	%r15570, %r15569, %r17080;
	add.s32 	%r15571, %r15570, %r15313;
	add.s32 	%r15572, %r15571, %r15564;
	add.s32 	%r15573, %r15572, %r15437;
	xor.b32  	%r15574, %r15511, %r15474;
	and.b32  	%r15575, %r15548, %r15574;
	xor.b32  	%r15576, %r15575, %r15474;
	add.s32 	%r15577, %r15573, %r15576;
	shf.l.wrap.b32 	%r15578, %r15548, %r15548, 18;
	xor.b32  	%r15579, %r15578, %r15548;
	shf.l.wrap.b32 	%r15580, %r15579, %r15579, 27;
	xor.b32  	%r15581, %r15580, %r15548;
	shf.l.wrap.b32 	%r15582, %r15581, %r15581, 26;
	add.s32 	%r15583, %r15577, %r15582;
	add.s32 	%r15584, %r15583, -710438585;
	add.s32 	%r15585, %r15584, %r15448;
	shf.l.wrap.b32 	%r15586, %r15559, %r15559, 23;
	xor.b32  	%r15587, %r15586, %r15559;
	shf.l.wrap.b32 	%r15588, %r15587, %r15587, 21;
	xor.b32  	%r15589, %r15588, %r15559;
	shf.l.wrap.b32 	%r15590, %r15589, %r15589, 30;
	and.b32  	%r15591, %r15559, %r15522;
	or.b32  	%r15592, %r15559, %r15522;
	and.b32  	%r15593, %r15592, %r15485;
	or.b32  	%r15594, %r15593, %r15591;
	add.s32 	%r15595, %r15590, %r15594;
	add.s32 	%r15596, %r15595, %r15584;
	shf.l.wrap.b32 	%r15597, %r15535, %r15535, 15;
	shf.l.wrap.b32 	%r15598, %r15535, %r15535, 13;
	xor.b32  	%r15599, %r15597, %r15598;
	shr.u32 	%r15600, %r15535, 10;
	xor.b32  	%r15601, %r15599, %r15600;
	shf.l.wrap.b32 	%r15602, %r17078, %r17078, 14;
	shf.l.wrap.b32 	%r15603, %r17078, %r17078, 25;
	xor.b32  	%r15604, %r15603, %r15602;
	shr.u32 	%r15605, %r17078, 3;
	xor.b32  	%r15606, %r15604, %r15605;
	add.s32 	%r15607, %r15606, %r17079;
	add.s32 	%r15608, %r15607, %r15350;
	add.s32 	%r15609, %r15608, %r15601;
	add.s32 	%r15610, %r15609, %r15474;
	xor.b32  	%r15611, %r15548, %r15511;
	and.b32  	%r15612, %r15585, %r15611;
	xor.b32  	%r15613, %r15612, %r15511;
	add.s32 	%r15614, %r15610, %r15613;
	shf.l.wrap.b32 	%r15615, %r15585, %r15585, 18;
	xor.b32  	%r15616, %r15615, %r15585;
	shf.l.wrap.b32 	%r15617, %r15616, %r15616, 27;
	xor.b32  	%r15618, %r15617, %r15585;
	shf.l.wrap.b32 	%r15619, %r15618, %r15618, 26;
	add.s32 	%r15620, %r15614, %r15619;
	add.s32 	%r15621, %r15620, 113926993;
	add.s32 	%r15622, %r15621, %r15485;
	shf.l.wrap.b32 	%r15623, %r15596, %r15596, 23;
	xor.b32  	%r15624, %r15623, %r15596;
	shf.l.wrap.b32 	%r15625, %r15624, %r15624, 21;
	xor.b32  	%r15626, %r15625, %r15596;
	shf.l.wrap.b32 	%r15627, %r15626, %r15626, 30;
	and.b32  	%r15628, %r15596, %r15559;
	or.b32  	%r15629, %r15596, %r15559;
	and.b32  	%r15630, %r15629, %r15522;
	or.b32  	%r15631, %r15630, %r15628;
	add.s32 	%r15632, %r15627, %r15631;
	add.s32 	%r15633, %r15632, %r15621;
	shf.l.wrap.b32 	%r15634, %r15572, %r15572, 15;
	shf.l.wrap.b32 	%r15635, %r15572, %r15572, 13;
	xor.b32  	%r15636, %r15634, %r15635;
	shr.u32 	%r15637, %r15572, 10;
	xor.b32  	%r15638, %r15636, %r15637;
	shf.l.wrap.b32 	%r15639, %r15091, %r15091, 25;
	shf.l.wrap.b32 	%r15640, %r15091, %r15091, 14;
	xor.b32  	%r15641, %r15639, %r15640;
	shr.u32 	%r15642, %r15091, 3;
	xor.b32  	%r15643, %r15641, %r15642;
	add.s32 	%r15644, %r15643, %r17078;
	add.s32 	%r15645, %r15644, %r15387;
	add.s32 	%r15646, %r15645, %r15638;
	add.s32 	%r15647, %r15646, %r15511;
	xor.b32  	%r15648, %r15585, %r15548;
	and.b32  	%r15649, %r15622, %r15648;
	xor.b32  	%r15650, %r15649, %r15548;
	add.s32 	%r15651, %r15647, %r15650;
	shf.l.wrap.b32 	%r15652, %r15622, %r15622, 18;
	xor.b32  	%r15653, %r15652, %r15622;
	shf.l.wrap.b32 	%r15654, %r15653, %r15653, 27;
	xor.b32  	%r15655, %r15654, %r15622;
	shf.l.wrap.b32 	%r15656, %r15655, %r15655, 26;
	add.s32 	%r15657, %r15651, %r15656;
	add.s32 	%r15658, %r15657, 338241895;
	add.s32 	%r15659, %r15658, %r15522;
	shf.l.wrap.b32 	%r15660, %r15633, %r15633, 23;
	xor.b32  	%r15661, %r15660, %r15633;
	shf.l.wrap.b32 	%r15662, %r15661, %r15661, 21;
	xor.b32  	%r15663, %r15662, %r15633;
	shf.l.wrap.b32 	%r15664, %r15663, %r15663, 30;
	and.b32  	%r15665, %r15633, %r15596;
	or.b32  	%r15666, %r15633, %r15596;
	and.b32  	%r15667, %r15666, %r15559;
	or.b32  	%r15668, %r15667, %r15665;
	add.s32 	%r15669, %r15664, %r15668;
	add.s32 	%r15670, %r15669, %r15658;
	shf.l.wrap.b32 	%r15671, %r15609, %r15609, 15;
	shf.l.wrap.b32 	%r15672, %r15609, %r15609, 13;
	xor.b32  	%r15673, %r15671, %r15672;
	shr.u32 	%r15674, %r15609, 10;
	xor.b32  	%r15675, %r15673, %r15674;
	shf.l.wrap.b32 	%r15676, %r15128, %r15128, 25;
	shf.l.wrap.b32 	%r15677, %r15128, %r15128, 14;
	xor.b32  	%r15678, %r15676, %r15677;
	shr.u32 	%r15679, %r15128, 3;
	xor.b32  	%r15680, %r15678, %r15679;
	add.s32 	%r15681, %r15680, %r15091;
	add.s32 	%r15682, %r15681, %r15424;
	add.s32 	%r15683, %r15682, %r15675;
	add.s32 	%r15684, %r15683, %r15548;
	xor.b32  	%r15685, %r15622, %r15585;
	and.b32  	%r15686, %r15659, %r15685;
	xor.b32  	%r15687, %r15686, %r15585;
	add.s32 	%r15688, %r15684, %r15687;
	shf.l.wrap.b32 	%r15689, %r15659, %r15659, 18;
	xor.b32  	%r15690, %r15689, %r15659;
	shf.l.wrap.b32 	%r15691, %r15690, %r15690, 27;
	xor.b32  	%r15692, %r15691, %r15659;
	shf.l.wrap.b32 	%r15693, %r15692, %r15692, 26;
	add.s32 	%r15694, %r15688, %r15693;
	add.s32 	%r15695, %r15694, 666307205;
	add.s32 	%r15696, %r15695, %r15559;
	shf.l.wrap.b32 	%r15697, %r15670, %r15670, 23;
	xor.b32  	%r15698, %r15697, %r15670;
	shf.l.wrap.b32 	%r15699, %r15698, %r15698, 21;
	xor.b32  	%r15700, %r15699, %r15670;
	shf.l.wrap.b32 	%r15701, %r15700, %r15700, 30;
	and.b32  	%r15702, %r15670, %r15633;
	or.b32  	%r15703, %r15670, %r15633;
	and.b32  	%r15704, %r15703, %r15596;
	or.b32  	%r15705, %r15704, %r15702;
	add.s32 	%r15706, %r15701, %r15705;
	add.s32 	%r15707, %r15706, %r15695;
	shf.l.wrap.b32 	%r15708, %r15646, %r15646, 15;
	shf.l.wrap.b32 	%r15709, %r15646, %r15646, 13;
	xor.b32  	%r15710, %r15708, %r15709;
	shr.u32 	%r15711, %r15646, 10;
	xor.b32  	%r15712, %r15710, %r15711;
	shf.l.wrap.b32 	%r15713, %r15165, %r15165, 25;
	shf.l.wrap.b32 	%r15714, %r15165, %r15165, 14;
	xor.b32  	%r15715, %r15713, %r15714;
	shr.u32 	%r15716, %r15165, 3;
	xor.b32  	%r15717, %r15715, %r15716;
	add.s32 	%r15718, %r15717, %r15128;
	add.s32 	%r15719, %r15718, %r15461;
	add.s32 	%r15720, %r15719, %r15712;
	add.s32 	%r15721, %r15720, %r15585;
	xor.b32  	%r15722, %r15659, %r15622;
	and.b32  	%r15723, %r15696, %r15722;
	xor.b32  	%r15724, %r15723, %r15622;
	add.s32 	%r15725, %r15721, %r15724;
	shf.l.wrap.b32 	%r15726, %r15696, %r15696, 18;
	xor.b32  	%r15727, %r15726, %r15696;
	shf.l.wrap.b32 	%r15728, %r15727, %r15727, 27;
	xor.b32  	%r15729, %r15728, %r15696;
	shf.l.wrap.b32 	%r15730, %r15729, %r15729, 26;
	add.s32 	%r15731, %r15725, %r15730;
	add.s32 	%r15732, %r15731, 773529912;
	add.s32 	%r15733, %r15732, %r15596;
	shf.l.wrap.b32 	%r15734, %r15707, %r15707, 23;
	xor.b32  	%r15735, %r15734, %r15707;
	shf.l.wrap.b32 	%r15736, %r15735, %r15735, 21;
	xor.b32  	%r15737, %r15736, %r15707;
	shf.l.wrap.b32 	%r15738, %r15737, %r15737, 30;
	and.b32  	%r15739, %r15707, %r15670;
	or.b32  	%r15740, %r15707, %r15670;
	and.b32  	%r15741, %r15740, %r15633;
	or.b32  	%r15742, %r15741, %r15739;
	add.s32 	%r15743, %r15738, %r15742;
	add.s32 	%r15744, %r15743, %r15732;
	shf.l.wrap.b32 	%r15745, %r15683, %r15683, 15;
	shf.l.wrap.b32 	%r15746, %r15683, %r15683, 13;
	xor.b32  	%r15747, %r15745, %r15746;
	shr.u32 	%r15748, %r15683, 10;
	xor.b32  	%r15749, %r15747, %r15748;
	shf.l.wrap.b32 	%r15750, %r15202, %r15202, 25;
	shf.l.wrap.b32 	%r15751, %r15202, %r15202, 14;
	xor.b32  	%r15752, %r15750, %r15751;
	shr.u32 	%r15753, %r15202, 3;
	xor.b32  	%r15754, %r15752, %r15753;
	add.s32 	%r15755, %r15754, %r15165;
	add.s32 	%r15756, %r15755, %r15498;
	add.s32 	%r15757, %r15756, %r15749;
	add.s32 	%r15758, %r15757, %r15622;
	xor.b32  	%r15759, %r15696, %r15659;
	and.b32  	%r15760, %r15733, %r15759;
	xor.b32  	%r15761, %r15760, %r15659;
	add.s32 	%r15762, %r15758, %r15761;
	shf.l.wrap.b32 	%r15763, %r15733, %r15733, 18;
	xor.b32  	%r15764, %r15763, %r15733;
	shf.l.wrap.b32 	%r15765, %r15764, %r15764, 27;
	xor.b32  	%r15766, %r15765, %r15733;
	shf.l.wrap.b32 	%r15767, %r15766, %r15766, 26;
	add.s32 	%r15768, %r15762, %r15767;
	add.s32 	%r15769, %r15768, 1294757372;
	add.s32 	%r15770, %r15769, %r15633;
	shf.l.wrap.b32 	%r15771, %r15744, %r15744, 23;
	xor.b32  	%r15772, %r15771, %r15744;
	shf.l.wrap.b32 	%r15773, %r15772, %r15772, 21;
	xor.b32  	%r15774, %r15773, %r15744;
	shf.l.wrap.b32 	%r15775, %r15774, %r15774, 30;
	and.b32  	%r15776, %r15744, %r15707;
	or.b32  	%r15777, %r15744, %r15707;
	and.b32  	%r15778, %r15777, %r15670;
	or.b32  	%r15779, %r15778, %r15776;
	add.s32 	%r15780, %r15775, %r15779;
	add.s32 	%r15781, %r15780, %r15769;
	shf.l.wrap.b32 	%r15782, %r15720, %r15720, 15;
	shf.l.wrap.b32 	%r15783, %r15720, %r15720, 13;
	xor.b32  	%r15784, %r15782, %r15783;
	shr.u32 	%r15785, %r15720, 10;
	xor.b32  	%r15786, %r15784, %r15785;
	shf.l.wrap.b32 	%r15787, %r15239, %r15239, 25;
	shf.l.wrap.b32 	%r15788, %r15239, %r15239, 14;
	xor.b32  	%r15789, %r15787, %r15788;
	shr.u32 	%r15790, %r15239, 3;
	xor.b32  	%r15791, %r15789, %r15790;
	add.s32 	%r15792, %r15791, %r15202;
	add.s32 	%r15793, %r15792, %r15535;
	add.s32 	%r15794, %r15793, %r15786;
	add.s32 	%r15795, %r15794, %r15659;
	xor.b32  	%r15796, %r15733, %r15696;
	and.b32  	%r15797, %r15770, %r15796;
	xor.b32  	%r15798, %r15797, %r15696;
	add.s32 	%r15799, %r15795, %r15798;
	shf.l.wrap.b32 	%r15800, %r15770, %r15770, 18;
	xor.b32  	%r15801, %r15800, %r15770;
	shf.l.wrap.b32 	%r15802, %r15801, %r15801, 27;
	xor.b32  	%r15803, %r15802, %r15770;
	shf.l.wrap.b32 	%r15804, %r15803, %r15803, 26;
	add.s32 	%r15805, %r15799, %r15804;
	add.s32 	%r15806, %r15805, 1396182291;
	add.s32 	%r15807, %r15806, %r15670;
	shf.l.wrap.b32 	%r15808, %r15781, %r15781, 23;
	xor.b32  	%r15809, %r15808, %r15781;
	shf.l.wrap.b32 	%r15810, %r15809, %r15809, 21;
	xor.b32  	%r15811, %r15810, %r15781;
	shf.l.wrap.b32 	%r15812, %r15811, %r15811, 30;
	and.b32  	%r15813, %r15781, %r15744;
	or.b32  	%r15814, %r15781, %r15744;
	and.b32  	%r15815, %r15814, %r15707;
	or.b32  	%r15816, %r15815, %r15813;
	add.s32 	%r15817, %r15812, %r15816;
	add.s32 	%r15818, %r15817, %r15806;
	shf.l.wrap.b32 	%r15819, %r15757, %r15757, 15;
	shf.l.wrap.b32 	%r15820, %r15757, %r15757, 13;
	xor.b32  	%r15821, %r15819, %r15820;
	shr.u32 	%r15822, %r15757, 10;
	xor.b32  	%r15823, %r15821, %r15822;
	shf.l.wrap.b32 	%r15824, %r15276, %r15276, 25;
	shf.l.wrap.b32 	%r15825, %r15276, %r15276, 14;
	xor.b32  	%r15826, %r15824, %r15825;
	shr.u32 	%r15827, %r15276, 3;
	xor.b32  	%r15828, %r15826, %r15827;
	add.s32 	%r15829, %r15828, %r15239;
	add.s32 	%r15830, %r15829, %r15572;
	add.s32 	%r15831, %r15830, %r15823;
	add.s32 	%r15832, %r15831, %r15696;
	xor.b32  	%r15833, %r15770, %r15733;
	and.b32  	%r15834, %r15807, %r15833;
	xor.b32  	%r15835, %r15834, %r15733;
	add.s32 	%r15836, %r15832, %r15835;
	shf.l.wrap.b32 	%r15837, %r15807, %r15807, 18;
	xor.b32  	%r15838, %r15837, %r15807;
	shf.l.wrap.b32 	%r15839, %r15838, %r15838, 27;
	xor.b32  	%r15840, %r15839, %r15807;
	shf.l.wrap.b32 	%r15841, %r15840, %r15840, 26;
	add.s32 	%r15842, %r15836, %r15841;
	add.s32 	%r15843, %r15842, 1695183700;
	add.s32 	%r15844, %r15843, %r15707;
	shf.l.wrap.b32 	%r15845, %r15818, %r15818, 23;
	xor.b32  	%r15846, %r15845, %r15818;
	shf.l.wrap.b32 	%r15847, %r15846, %r15846, 21;
	xor.b32  	%r15848, %r15847, %r15818;
	shf.l.wrap.b32 	%r15849, %r15848, %r15848, 30;
	and.b32  	%r15850, %r15818, %r15781;
	or.b32  	%r15851, %r15818, %r15781;
	and.b32  	%r15852, %r15851, %r15744;
	or.b32  	%r15853, %r15852, %r15850;
	add.s32 	%r15854, %r15849, %r15853;
	add.s32 	%r15855, %r15854, %r15843;
	shf.l.wrap.b32 	%r15856, %r15794, %r15794, 15;
	shf.l.wrap.b32 	%r15857, %r15794, %r15794, 13;
	xor.b32  	%r15858, %r15856, %r15857;
	shr.u32 	%r15859, %r15794, 10;
	xor.b32  	%r15860, %r15858, %r15859;
	shf.l.wrap.b32 	%r15861, %r15313, %r15313, 25;
	shf.l.wrap.b32 	%r15862, %r15313, %r15313, 14;
	xor.b32  	%r15863, %r15861, %r15862;
	shr.u32 	%r15864, %r15313, 3;
	xor.b32  	%r15865, %r15863, %r15864;
	add.s32 	%r15866, %r15865, %r15276;
	add.s32 	%r15867, %r15866, %r15609;
	add.s32 	%r15868, %r15867, %r15860;
	add.s32 	%r15869, %r15868, %r15733;
	xor.b32  	%r15870, %r15807, %r15770;
	and.b32  	%r15871, %r15844, %r15870;
	xor.b32  	%r15872, %r15871, %r15770;
	add.s32 	%r15873, %r15869, %r15872;
	shf.l.wrap.b32 	%r15874, %r15844, %r15844, 18;
	xor.b32  	%r15875, %r15874, %r15844;
	shf.l.wrap.b32 	%r15876, %r15875, %r15875, 27;
	xor.b32  	%r15877, %r15876, %r15844;
	shf.l.wrap.b32 	%r15878, %r15877, %r15877, 26;
	add.s32 	%r15879, %r15873, %r15878;
	add.s32 	%r15880, %r15879, 1986661051;
	add.s32 	%r15881, %r15880, %r15744;
	shf.l.wrap.b32 	%r15882, %r15855, %r15855, 23;
	xor.b32  	%r15883, %r15882, %r15855;
	shf.l.wrap.b32 	%r15884, %r15883, %r15883, 21;
	xor.b32  	%r15885, %r15884, %r15855;
	shf.l.wrap.b32 	%r15886, %r15885, %r15885, 30;
	and.b32  	%r15887, %r15855, %r15818;
	or.b32  	%r15888, %r15855, %r15818;
	and.b32  	%r15889, %r15888, %r15781;
	or.b32  	%r15890, %r15889, %r15887;
	add.s32 	%r15891, %r15886, %r15890;
	add.s32 	%r15892, %r15891, %r15880;
	shf.l.wrap.b32 	%r15893, %r15831, %r15831, 15;
	shf.l.wrap.b32 	%r15894, %r15831, %r15831, 13;
	xor.b32  	%r15895, %r15893, %r15894;
	shr.u32 	%r15896, %r15831, 10;
	xor.b32  	%r15897, %r15895, %r15896;
	shf.l.wrap.b32 	%r15898, %r15350, %r15350, 25;
	shf.l.wrap.b32 	%r15899, %r15350, %r15350, 14;
	xor.b32  	%r15900, %r15898, %r15899;
	shr.u32 	%r15901, %r15350, 3;
	xor.b32  	%r15902, %r15900, %r15901;
	add.s32 	%r15903, %r15902, %r15313;
	add.s32 	%r15904, %r15903, %r15646;
	add.s32 	%r15905, %r15904, %r15897;
	add.s32 	%r15906, %r15905, %r15770;
	xor.b32  	%r15907, %r15844, %r15807;
	and.b32  	%r15908, %r15881, %r15907;
	xor.b32  	%r15909, %r15908, %r15807;
	add.s32 	%r15910, %r15906, %r15909;
	shf.l.wrap.b32 	%r15911, %r15881, %r15881, 18;
	xor.b32  	%r15912, %r15911, %r15881;
	shf.l.wrap.b32 	%r15913, %r15912, %r15912, 27;
	xor.b32  	%r15914, %r15913, %r15881;
	shf.l.wrap.b32 	%r15915, %r15914, %r15914, 26;
	add.s32 	%r15916, %r15910, %r15915;
	add.s32 	%r15917, %r15916, -2117940946;
	add.s32 	%r15918, %r15917, %r15781;
	shf.l.wrap.b32 	%r15919, %r15892, %r15892, 23;
	xor.b32  	%r15920, %r15919, %r15892;
	shf.l.wrap.b32 	%r15921, %r15920, %r15920, 21;
	xor.b32  	%r15922, %r15921, %r15892;
	shf.l.wrap.b32 	%r15923, %r15922, %r15922, 30;
	and.b32  	%r15924, %r15892, %r15855;
	or.b32  	%r15925, %r15892, %r15855;
	and.b32  	%r15926, %r15925, %r15818;
	or.b32  	%r15927, %r15926, %r15924;
	add.s32 	%r15928, %r15923, %r15927;
	add.s32 	%r15929, %r15928, %r15917;
	shf.l.wrap.b32 	%r15930, %r15868, %r15868, 15;
	shf.l.wrap.b32 	%r15931, %r15868, %r15868, 13;
	xor.b32  	%r15932, %r15930, %r15931;
	shr.u32 	%r15933, %r15868, 10;
	xor.b32  	%r15934, %r15932, %r15933;
	shf.l.wrap.b32 	%r15935, %r15387, %r15387, 25;
	shf.l.wrap.b32 	%r15936, %r15387, %r15387, 14;
	xor.b32  	%r15937, %r15935, %r15936;
	shr.u32 	%r15938, %r15387, 3;
	xor.b32  	%r15939, %r15937, %r15938;
	add.s32 	%r15940, %r15939, %r15350;
	add.s32 	%r15941, %r15940, %r15683;
	add.s32 	%r15942, %r15941, %r15934;
	add.s32 	%r15943, %r15942, %r15807;
	xor.b32  	%r15944, %r15881, %r15844;
	and.b32  	%r15945, %r15918, %r15944;
	xor.b32  	%r15946, %r15945, %r15844;
	add.s32 	%r15947, %r15943, %r15946;
	shf.l.wrap.b32 	%r15948, %r15918, %r15918, 18;
	xor.b32  	%r15949, %r15948, %r15918;
	shf.l.wrap.b32 	%r15950, %r15949, %r15949, 27;
	xor.b32  	%r15951, %r15950, %r15918;
	shf.l.wrap.b32 	%r15952, %r15951, %r15951, 26;
	add.s32 	%r15953, %r15947, %r15952;
	add.s32 	%r15954, %r15953, -1838011259;
	add.s32 	%r15955, %r15954, %r15818;
	shf.l.wrap.b32 	%r15956, %r15929, %r15929, 23;
	xor.b32  	%r15957, %r15956, %r15929;
	shf.l.wrap.b32 	%r15958, %r15957, %r15957, 21;
	xor.b32  	%r15959, %r15958, %r15929;
	shf.l.wrap.b32 	%r15960, %r15959, %r15959, 30;
	and.b32  	%r15961, %r15929, %r15892;
	or.b32  	%r15962, %r15929, %r15892;
	and.b32  	%r15963, %r15962, %r15855;
	or.b32  	%r15964, %r15963, %r15961;
	add.s32 	%r15965, %r15960, %r15964;
	add.s32 	%r15966, %r15965, %r15954;
	shf.l.wrap.b32 	%r15967, %r15905, %r15905, 15;
	shf.l.wrap.b32 	%r15968, %r15905, %r15905, 13;
	xor.b32  	%r15969, %r15967, %r15968;
	shr.u32 	%r15970, %r15905, 10;
	xor.b32  	%r15971, %r15969, %r15970;
	shf.l.wrap.b32 	%r15972, %r15424, %r15424, 25;
	shf.l.wrap.b32 	%r15973, %r15424, %r15424, 14;
	xor.b32  	%r15974, %r15972, %r15973;
	shr.u32 	%r15975, %r15424, 3;
	xor.b32  	%r15976, %r15974, %r15975;
	add.s32 	%r15977, %r15976, %r15387;
	add.s32 	%r15978, %r15977, %r15720;
	add.s32 	%r15979, %r15978, %r15971;
	add.s32 	%r15980, %r15979, %r15844;
	xor.b32  	%r15981, %r15918, %r15881;
	and.b32  	%r15982, %r15955, %r15981;
	xor.b32  	%r15983, %r15982, %r15881;
	add.s32 	%r15984, %r15980, %r15983;
	shf.l.wrap.b32 	%r15985, %r15955, %r15955, 18;
	xor.b32  	%r15986, %r15985, %r15955;
	shf.l.wrap.b32 	%r15987, %r15986, %r15986, 27;
	xor.b32  	%r15988, %r15987, %r15955;
	shf.l.wrap.b32 	%r15989, %r15988, %r15988, 26;
	add.s32 	%r15990, %r15984, %r15989;
	add.s32 	%r15991, %r15990, -1564481375;
	add.s32 	%r15992, %r15991, %r15855;
	shf.l.wrap.b32 	%r15993, %r15966, %r15966, 23;
	xor.b32  	%r15994, %r15993, %r15966;
	shf.l.wrap.b32 	%r15995, %r15994, %r15994, 21;
	xor.b32  	%r15996, %r15995, %r15966;
	shf.l.wrap.b32 	%r15997, %r15996, %r15996, 30;
	and.b32  	%r15998, %r15966, %r15929;
	or.b32  	%r15999, %r15966, %r15929;
	and.b32  	%r16000, %r15999, %r15892;
	or.b32  	%r16001, %r16000, %r15998;
	add.s32 	%r16002, %r15997, %r16001;
	add.s32 	%r16003, %r16002, %r15991;
	shf.l.wrap.b32 	%r16004, %r15942, %r15942, 15;
	shf.l.wrap.b32 	%r16005, %r15942, %r15942, 13;
	xor.b32  	%r16006, %r16004, %r16005;
	shr.u32 	%r16007, %r15942, 10;
	xor.b32  	%r16008, %r16006, %r16007;
	shf.l.wrap.b32 	%r16009, %r15461, %r15461, 25;
	shf.l.wrap.b32 	%r16010, %r15461, %r15461, 14;
	xor.b32  	%r16011, %r16009, %r16010;
	shr.u32 	%r16012, %r15461, 3;
	xor.b32  	%r16013, %r16011, %r16012;
	add.s32 	%r16014, %r16013, %r15424;
	add.s32 	%r16015, %r16014, %r15757;
	add.s32 	%r16016, %r16015, %r16008;
	add.s32 	%r16017, %r16016, %r15881;
	xor.b32  	%r16018, %r15955, %r15918;
	and.b32  	%r16019, %r15992, %r16018;
	xor.b32  	%r16020, %r16019, %r15918;
	add.s32 	%r16021, %r16017, %r16020;
	shf.l.wrap.b32 	%r16022, %r15992, %r15992, 18;
	xor.b32  	%r16023, %r16022, %r15992;
	shf.l.wrap.b32 	%r16024, %r16023, %r16023, 27;
	xor.b32  	%r16025, %r16024, %r15992;
	shf.l.wrap.b32 	%r16026, %r16025, %r16025, 26;
	add.s32 	%r16027, %r16021, %r16026;
	add.s32 	%r16028, %r16027, -1474664885;
	add.s32 	%r16029, %r16028, %r15892;
	shf.l.wrap.b32 	%r16030, %r16003, %r16003, 23;
	xor.b32  	%r16031, %r16030, %r16003;
	shf.l.wrap.b32 	%r16032, %r16031, %r16031, 21;
	xor.b32  	%r16033, %r16032, %r16003;
	shf.l.wrap.b32 	%r16034, %r16033, %r16033, 30;
	and.b32  	%r16035, %r16003, %r15966;
	or.b32  	%r16036, %r16003, %r15966;
	and.b32  	%r16037, %r16036, %r15929;
	or.b32  	%r16038, %r16037, %r16035;
	add.s32 	%r16039, %r16034, %r16038;
	add.s32 	%r16040, %r16039, %r16028;
	shf.l.wrap.b32 	%r16041, %r15979, %r15979, 15;
	shf.l.wrap.b32 	%r16042, %r15979, %r15979, 13;
	xor.b32  	%r16043, %r16041, %r16042;
	shr.u32 	%r16044, %r15979, 10;
	xor.b32  	%r16045, %r16043, %r16044;
	shf.l.wrap.b32 	%r16046, %r15498, %r15498, 25;
	shf.l.wrap.b32 	%r16047, %r15498, %r15498, 14;
	xor.b32  	%r16048, %r16046, %r16047;
	shr.u32 	%r16049, %r15498, 3;
	xor.b32  	%r16050, %r16048, %r16049;
	add.s32 	%r16051, %r16050, %r15461;
	add.s32 	%r16052, %r16051, %r15794;
	add.s32 	%r16053, %r16052, %r16045;
	add.s32 	%r16054, %r16053, %r15918;
	xor.b32  	%r16055, %r15992, %r15955;
	and.b32  	%r16056, %r16029, %r16055;
	xor.b32  	%r16057, %r16056, %r15955;
	add.s32 	%r16058, %r16054, %r16057;
	shf.l.wrap.b32 	%r16059, %r16029, %r16029, 18;
	xor.b32  	%r16060, %r16059, %r16029;
	shf.l.wrap.b32 	%r16061, %r16060, %r16060, 27;
	xor.b32  	%r16062, %r16061, %r16029;
	shf.l.wrap.b32 	%r16063, %r16062, %r16062, 26;
	add.s32 	%r16064, %r16058, %r16063;
	add.s32 	%r16065, %r16064, -1035236496;
	add.s32 	%r16066, %r16065, %r15929;
	shf.l.wrap.b32 	%r16067, %r16040, %r16040, 23;
	xor.b32  	%r16068, %r16067, %r16040;
	shf.l.wrap.b32 	%r16069, %r16068, %r16068, 21;
	xor.b32  	%r16070, %r16069, %r16040;
	shf.l.wrap.b32 	%r16071, %r16070, %r16070, 30;
	and.b32  	%r16072, %r16040, %r16003;
	or.b32  	%r16073, %r16040, %r16003;
	and.b32  	%r16074, %r16073, %r15966;
	or.b32  	%r16075, %r16074, %r16072;
	add.s32 	%r16076, %r16071, %r16075;
	add.s32 	%r16077, %r16076, %r16065;
	shf.l.wrap.b32 	%r16078, %r16016, %r16016, 15;
	shf.l.wrap.b32 	%r16079, %r16016, %r16016, 13;
	xor.b32  	%r16080, %r16078, %r16079;
	shr.u32 	%r16081, %r16016, 10;
	xor.b32  	%r16082, %r16080, %r16081;
	shf.l.wrap.b32 	%r16083, %r15535, %r15535, 25;
	shf.l.wrap.b32 	%r16084, %r15535, %r15535, 14;
	xor.b32  	%r16085, %r16083, %r16084;
	shr.u32 	%r16086, %r15535, 3;
	xor.b32  	%r16087, %r16085, %r16086;
	add.s32 	%r16088, %r16087, %r15498;
	add.s32 	%r16089, %r16088, %r15831;
	add.s32 	%r16090, %r16089, %r16082;
	add.s32 	%r16091, %r16090, %r15955;
	xor.b32  	%r16092, %r16029, %r15992;
	and.b32  	%r16093, %r16066, %r16092;
	xor.b32  	%r16094, %r16093, %r15992;
	add.s32 	%r16095, %r16091, %r16094;
	shf.l.wrap.b32 	%r16096, %r16066, %r16066, 18;
	xor.b32  	%r16097, %r16096, %r16066;
	shf.l.wrap.b32 	%r16098, %r16097, %r16097, 27;
	xor.b32  	%r16099, %r16098, %r16066;
	shf.l.wrap.b32 	%r16100, %r16099, %r16099, 26;
	add.s32 	%r16101, %r16095, %r16100;
	add.s32 	%r16102, %r16101, -949202525;
	add.s32 	%r16103, %r16102, %r15966;
	shf.l.wrap.b32 	%r16104, %r16077, %r16077, 23;
	xor.b32  	%r16105, %r16104, %r16077;
	shf.l.wrap.b32 	%r16106, %r16105, %r16105, 21;
	xor.b32  	%r16107, %r16106, %r16077;
	shf.l.wrap.b32 	%r16108, %r16107, %r16107, 30;
	and.b32  	%r16109, %r16077, %r16040;
	or.b32  	%r16110, %r16077, %r16040;
	and.b32  	%r16111, %r16110, %r16003;
	or.b32  	%r16112, %r16111, %r16109;
	add.s32 	%r16113, %r16108, %r16112;
	add.s32 	%r16114, %r16113, %r16102;
	shf.l.wrap.b32 	%r16115, %r16053, %r16053, 15;
	shf.l.wrap.b32 	%r16116, %r16053, %r16053, 13;
	xor.b32  	%r16117, %r16115, %r16116;
	shr.u32 	%r16118, %r16053, 10;
	xor.b32  	%r16119, %r16117, %r16118;
	shf.l.wrap.b32 	%r16120, %r15572, %r15572, 25;
	shf.l.wrap.b32 	%r16121, %r15572, %r15572, 14;
	xor.b32  	%r16122, %r16120, %r16121;
	shr.u32 	%r16123, %r15572, 3;
	xor.b32  	%r16124, %r16122, %r16123;
	add.s32 	%r16125, %r16124, %r15535;
	add.s32 	%r16126, %r16125, %r15868;
	add.s32 	%r16127, %r16126, %r16119;
	add.s32 	%r16128, %r16127, %r15992;
	xor.b32  	%r16129, %r16066, %r16029;
	and.b32  	%r16130, %r16103, %r16129;
	xor.b32  	%r16131, %r16130, %r16029;
	add.s32 	%r16132, %r16128, %r16131;
	shf.l.wrap.b32 	%r16133, %r16103, %r16103, 18;
	xor.b32  	%r16134, %r16133, %r16103;
	shf.l.wrap.b32 	%r16135, %r16134, %r16134, 27;
	xor.b32  	%r16136, %r16135, %r16103;
	shf.l.wrap.b32 	%r16137, %r16136, %r16136, 26;
	add.s32 	%r16138, %r16132, %r16137;
	add.s32 	%r16139, %r16138, -778901479;
	add.s32 	%r16140, %r16139, %r16003;
	shf.l.wrap.b32 	%r16141, %r16114, %r16114, 23;
	xor.b32  	%r16142, %r16141, %r16114;
	shf.l.wrap.b32 	%r16143, %r16142, %r16142, 21;
	xor.b32  	%r16144, %r16143, %r16114;
	shf.l.wrap.b32 	%r16145, %r16144, %r16144, 30;
	and.b32  	%r16146, %r16114, %r16077;
	or.b32  	%r16147, %r16114, %r16077;
	and.b32  	%r16148, %r16147, %r16040;
	or.b32  	%r16149, %r16148, %r16146;
	add.s32 	%r16150, %r16145, %r16149;
	add.s32 	%r16151, %r16150, %r16139;
	shf.l.wrap.b32 	%r16152, %r16090, %r16090, 15;
	shf.l.wrap.b32 	%r16153, %r16090, %r16090, 13;
	xor.b32  	%r16154, %r16152, %r16153;
	shr.u32 	%r16155, %r16090, 10;
	xor.b32  	%r16156, %r16154, %r16155;
	shf.l.wrap.b32 	%r16157, %r15609, %r15609, 25;
	shf.l.wrap.b32 	%r16158, %r15609, %r15609, 14;
	xor.b32  	%r16159, %r16157, %r16158;
	shr.u32 	%r16160, %r15609, 3;
	xor.b32  	%r16161, %r16159, %r16160;
	add.s32 	%r16162, %r16161, %r15572;
	add.s32 	%r16163, %r16162, %r15905;
	add.s32 	%r16164, %r16163, %r16156;
	add.s32 	%r16165, %r16164, %r16029;
	xor.b32  	%r16166, %r16103, %r16066;
	and.b32  	%r16167, %r16140, %r16166;
	xor.b32  	%r16168, %r16167, %r16066;
	add.s32 	%r16169, %r16165, %r16168;
	shf.l.wrap.b32 	%r16170, %r16140, %r16140, 18;
	xor.b32  	%r16171, %r16170, %r16140;
	shf.l.wrap.b32 	%r16172, %r16171, %r16171, 27;
	xor.b32  	%r16173, %r16172, %r16140;
	shf.l.wrap.b32 	%r16174, %r16173, %r16173, 26;
	add.s32 	%r16175, %r16169, %r16174;
	add.s32 	%r16176, %r16175, -694614492;
	add.s32 	%r16177, %r16176, %r16040;
	shf.l.wrap.b32 	%r16178, %r16151, %r16151, 23;
	xor.b32  	%r16179, %r16178, %r16151;
	shf.l.wrap.b32 	%r16180, %r16179, %r16179, 21;
	xor.b32  	%r16181, %r16180, %r16151;
	shf.l.wrap.b32 	%r16182, %r16181, %r16181, 30;
	and.b32  	%r16183, %r16151, %r16114;
	or.b32  	%r16184, %r16151, %r16114;
	and.b32  	%r16185, %r16184, %r16077;
	or.b32  	%r16186, %r16185, %r16183;
	add.s32 	%r16187, %r16182, %r16186;
	add.s32 	%r16188, %r16187, %r16176;
	shf.l.wrap.b32 	%r16189, %r16127, %r16127, 15;
	shf.l.wrap.b32 	%r16190, %r16127, %r16127, 13;
	xor.b32  	%r16191, %r16189, %r16190;
	shr.u32 	%r16192, %r16127, 10;
	xor.b32  	%r16193, %r16191, %r16192;
	shf.l.wrap.b32 	%r16194, %r15646, %r15646, 25;
	shf.l.wrap.b32 	%r16195, %r15646, %r15646, 14;
	xor.b32  	%r16196, %r16194, %r16195;
	shr.u32 	%r16197, %r15646, 3;
	xor.b32  	%r16198, %r16196, %r16197;
	add.s32 	%r16199, %r16198, %r15609;
	add.s32 	%r16200, %r16199, %r15942;
	add.s32 	%r16201, %r16200, %r16193;
	add.s32 	%r16202, %r16201, %r16066;
	xor.b32  	%r16203, %r16140, %r16103;
	and.b32  	%r16204, %r16177, %r16203;
	xor.b32  	%r16205, %r16204, %r16103;
	add.s32 	%r16206, %r16202, %r16205;
	shf.l.wrap.b32 	%r16207, %r16177, %r16177, 18;
	xor.b32  	%r16208, %r16207, %r16177;
	shf.l.wrap.b32 	%r16209, %r16208, %r16208, 27;
	xor.b32  	%r16210, %r16209, %r16177;
	shf.l.wrap.b32 	%r16211, %r16210, %r16210, 26;
	add.s32 	%r16212, %r16206, %r16211;
	add.s32 	%r16213, %r16212, -200395387;
	add.s32 	%r16214, %r16213, %r16077;
	shf.l.wrap.b32 	%r16215, %r16188, %r16188, 23;
	xor.b32  	%r16216, %r16215, %r16188;
	shf.l.wrap.b32 	%r16217, %r16216, %r16216, 21;
	xor.b32  	%r16218, %r16217, %r16188;
	shf.l.wrap.b32 	%r16219, %r16218, %r16218, 30;
	and.b32  	%r16220, %r16188, %r16151;
	or.b32  	%r16221, %r16188, %r16151;
	and.b32  	%r16222, %r16221, %r16114;
	or.b32  	%r16223, %r16222, %r16220;
	add.s32 	%r16224, %r16219, %r16223;
	add.s32 	%r16225, %r16224, %r16213;
	shf.l.wrap.b32 	%r16226, %r16164, %r16164, 15;
	shf.l.wrap.b32 	%r16227, %r16164, %r16164, 13;
	xor.b32  	%r16228, %r16226, %r16227;
	shr.u32 	%r16229, %r16164, 10;
	xor.b32  	%r16230, %r16228, %r16229;
	shf.l.wrap.b32 	%r16231, %r15683, %r15683, 25;
	shf.l.wrap.b32 	%r16232, %r15683, %r15683, 14;
	xor.b32  	%r16233, %r16231, %r16232;
	shr.u32 	%r16234, %r15683, 3;
	xor.b32  	%r16235, %r16233, %r16234;
	add.s32 	%r16236, %r16235, %r15646;
	add.s32 	%r16237, %r16236, %r15979;
	add.s32 	%r16238, %r16237, %r16230;
	add.s32 	%r16239, %r16238, %r16103;
	xor.b32  	%r16240, %r16177, %r16140;
	and.b32  	%r16241, %r16214, %r16240;
	xor.b32  	%r16242, %r16241, %r16140;
	add.s32 	%r16243, %r16239, %r16242;
	shf.l.wrap.b32 	%r16244, %r16214, %r16214, 18;
	xor.b32  	%r16245, %r16244, %r16214;
	shf.l.wrap.b32 	%r16246, %r16245, %r16245, 27;
	xor.b32  	%r16247, %r16246, %r16214;
	shf.l.wrap.b32 	%r16248, %r16247, %r16247, 26;
	add.s32 	%r16249, %r16243, %r16248;
	add.s32 	%r16250, %r16249, 275423344;
	add.s32 	%r16251, %r16250, %r16114;
	shf.l.wrap.b32 	%r16252, %r16225, %r16225, 23;
	xor.b32  	%r16253, %r16252, %r16225;
	shf.l.wrap.b32 	%r16254, %r16253, %r16253, 21;
	xor.b32  	%r16255, %r16254, %r16225;
	shf.l.wrap.b32 	%r16256, %r16255, %r16255, 30;
	and.b32  	%r16257, %r16225, %r16188;
	or.b32  	%r16258, %r16225, %r16188;
	and.b32  	%r16259, %r16258, %r16151;
	or.b32  	%r16260, %r16259, %r16257;
	add.s32 	%r16261, %r16256, %r16260;
	add.s32 	%r16262, %r16261, %r16250;
	shf.l.wrap.b32 	%r16263, %r16201, %r16201, 15;
	shf.l.wrap.b32 	%r16264, %r16201, %r16201, 13;
	xor.b32  	%r16265, %r16263, %r16264;
	shr.u32 	%r16266, %r16201, 10;
	xor.b32  	%r16267, %r16265, %r16266;
	shf.l.wrap.b32 	%r16268, %r15720, %r15720, 25;
	shf.l.wrap.b32 	%r16269, %r15720, %r15720, 14;
	xor.b32  	%r16270, %r16268, %r16269;
	shr.u32 	%r16271, %r15720, 3;
	xor.b32  	%r16272, %r16270, %r16271;
	add.s32 	%r16273, %r16272, %r15683;
	add.s32 	%r16274, %r16273, %r16016;
	add.s32 	%r16275, %r16274, %r16267;
	add.s32 	%r16276, %r16275, %r16140;
	xor.b32  	%r16277, %r16214, %r16177;
	and.b32  	%r16278, %r16251, %r16277;
	xor.b32  	%r16279, %r16278, %r16177;
	add.s32 	%r16280, %r16276, %r16279;
	shf.l.wrap.b32 	%r16281, %r16251, %r16251, 18;
	xor.b32  	%r16282, %r16281, %r16251;
	shf.l.wrap.b32 	%r16283, %r16282, %r16282, 27;
	xor.b32  	%r16284, %r16283, %r16251;
	shf.l.wrap.b32 	%r16285, %r16284, %r16284, 26;
	add.s32 	%r16286, %r16280, %r16285;
	add.s32 	%r16287, %r16286, 430227734;
	add.s32 	%r16288, %r16287, %r16151;
	shf.l.wrap.b32 	%r16289, %r16262, %r16262, 23;
	xor.b32  	%r16290, %r16289, %r16262;
	shf.l.wrap.b32 	%r16291, %r16290, %r16290, 21;
	xor.b32  	%r16292, %r16291, %r16262;
	shf.l.wrap.b32 	%r16293, %r16292, %r16292, 30;
	and.b32  	%r16294, %r16262, %r16225;
	or.b32  	%r16295, %r16262, %r16225;
	and.b32  	%r16296, %r16295, %r16188;
	or.b32  	%r16297, %r16296, %r16294;
	add.s32 	%r16298, %r16293, %r16297;
	add.s32 	%r16299, %r16298, %r16287;
	shf.l.wrap.b32 	%r16300, %r16238, %r16238, 15;
	shf.l.wrap.b32 	%r16301, %r16238, %r16238, 13;
	xor.b32  	%r16302, %r16300, %r16301;
	shr.u32 	%r16303, %r16238, 10;
	xor.b32  	%r16304, %r16302, %r16303;
	shf.l.wrap.b32 	%r16305, %r15757, %r15757, 25;
	shf.l.wrap.b32 	%r16306, %r15757, %r15757, 14;
	xor.b32  	%r16307, %r16305, %r16306;
	shr.u32 	%r16308, %r15757, 3;
	xor.b32  	%r16309, %r16307, %r16308;
	add.s32 	%r16310, %r16309, %r15720;
	add.s32 	%r16311, %r16310, %r16053;
	add.s32 	%r16312, %r16311, %r16304;
	add.s32 	%r16313, %r16312, %r16177;
	xor.b32  	%r16314, %r16251, %r16214;
	and.b32  	%r16315, %r16288, %r16314;
	xor.b32  	%r16316, %r16315, %r16214;
	add.s32 	%r16317, %r16313, %r16316;
	shf.l.wrap.b32 	%r16318, %r16288, %r16288, 18;
	xor.b32  	%r16319, %r16318, %r16288;
	shf.l.wrap.b32 	%r16320, %r16319, %r16319, 27;
	xor.b32  	%r16321, %r16320, %r16288;
	shf.l.wrap.b32 	%r16322, %r16321, %r16321, 26;
	add.s32 	%r16323, %r16317, %r16322;
	add.s32 	%r16324, %r16323, 506948616;
	add.s32 	%r16325, %r16324, %r16188;
	shf.l.wrap.b32 	%r16326, %r16299, %r16299, 23;
	xor.b32  	%r16327, %r16326, %r16299;
	shf.l.wrap.b32 	%r16328, %r16327, %r16327, 21;
	xor.b32  	%r16329, %r16328, %r16299;
	shf.l.wrap.b32 	%r16330, %r16329, %r16329, 30;
	and.b32  	%r16331, %r16299, %r16262;
	or.b32  	%r16332, %r16299, %r16262;
	and.b32  	%r16333, %r16332, %r16225;
	or.b32  	%r16334, %r16333, %r16331;
	add.s32 	%r16335, %r16330, %r16334;
	add.s32 	%r16336, %r16335, %r16324;
	shf.l.wrap.b32 	%r16337, %r16275, %r16275, 15;
	shf.l.wrap.b32 	%r16338, %r16275, %r16275, 13;
	xor.b32  	%r16339, %r16337, %r16338;
	shr.u32 	%r16340, %r16275, 10;
	xor.b32  	%r16341, %r16339, %r16340;
	shf.l.wrap.b32 	%r16342, %r15794, %r15794, 25;
	shf.l.wrap.b32 	%r16343, %r15794, %r15794, 14;
	xor.b32  	%r16344, %r16342, %r16343;
	shr.u32 	%r16345, %r15794, 3;
	xor.b32  	%r16346, %r16344, %r16345;
	add.s32 	%r16347, %r16346, %r15757;
	add.s32 	%r16348, %r16347, %r16090;
	add.s32 	%r16349, %r16348, %r16341;
	add.s32 	%r16350, %r16349, %r16214;
	xor.b32  	%r16351, %r16288, %r16251;
	and.b32  	%r16352, %r16325, %r16351;
	xor.b32  	%r16353, %r16352, %r16251;
	add.s32 	%r16354, %r16350, %r16353;
	shf.l.wrap.b32 	%r16355, %r16325, %r16325, 18;
	xor.b32  	%r16356, %r16355, %r16325;
	shf.l.wrap.b32 	%r16357, %r16356, %r16356, 27;
	xor.b32  	%r16358, %r16357, %r16325;
	shf.l.wrap.b32 	%r16359, %r16358, %r16358, 26;
	add.s32 	%r16360, %r16354, %r16359;
	add.s32 	%r16361, %r16360, 659060556;
	add.s32 	%r16362, %r16361, %r16225;
	shf.l.wrap.b32 	%r16363, %r16336, %r16336, 23;
	xor.b32  	%r16364, %r16363, %r16336;
	shf.l.wrap.b32 	%r16365, %r16364, %r16364, 21;
	xor.b32  	%r16366, %r16365, %r16336;
	shf.l.wrap.b32 	%r16367, %r16366, %r16366, 30;
	and.b32  	%r16368, %r16336, %r16299;
	or.b32  	%r16369, %r16336, %r16299;
	and.b32  	%r16370, %r16369, %r16262;
	or.b32  	%r16371, %r16370, %r16368;
	add.s32 	%r16372, %r16367, %r16371;
	add.s32 	%r16373, %r16372, %r16361;
	shf.l.wrap.b32 	%r16374, %r16312, %r16312, 15;
	shf.l.wrap.b32 	%r16375, %r16312, %r16312, 13;
	xor.b32  	%r16376, %r16374, %r16375;
	shr.u32 	%r16377, %r16312, 10;
	xor.b32  	%r16378, %r16376, %r16377;
	shf.l.wrap.b32 	%r16379, %r15831, %r15831, 25;
	shf.l.wrap.b32 	%r16380, %r15831, %r15831, 14;
	xor.b32  	%r16381, %r16379, %r16380;
	shr.u32 	%r16382, %r15831, 3;
	xor.b32  	%r16383, %r16381, %r16382;
	add.s32 	%r16384, %r16383, %r15794;
	add.s32 	%r16385, %r16384, %r16127;
	add.s32 	%r16386, %r16385, %r16378;
	add.s32 	%r16387, %r16386, %r16251;
	xor.b32  	%r16388, %r16325, %r16288;
	and.b32  	%r16389, %r16362, %r16388;
	xor.b32  	%r16390, %r16389, %r16288;
	add.s32 	%r16391, %r16387, %r16390;
	shf.l.wrap.b32 	%r16392, %r16362, %r16362, 18;
	xor.b32  	%r16393, %r16392, %r16362;
	shf.l.wrap.b32 	%r16394, %r16393, %r16393, 27;
	xor.b32  	%r16395, %r16394, %r16362;
	shf.l.wrap.b32 	%r16396, %r16395, %r16395, 26;
	add.s32 	%r16397, %r16391, %r16396;
	add.s32 	%r16398, %r16397, 883997877;
	add.s32 	%r16399, %r16398, %r16262;
	shf.l.wrap.b32 	%r16400, %r16373, %r16373, 23;
	xor.b32  	%r16401, %r16400, %r16373;
	shf.l.wrap.b32 	%r16402, %r16401, %r16401, 21;
	xor.b32  	%r16403, %r16402, %r16373;
	shf.l.wrap.b32 	%r16404, %r16403, %r16403, 30;
	and.b32  	%r16405, %r16373, %r16336;
	or.b32  	%r16406, %r16373, %r16336;
	and.b32  	%r16407, %r16406, %r16299;
	or.b32  	%r16408, %r16407, %r16405;
	add.s32 	%r16409, %r16404, %r16408;
	add.s32 	%r16410, %r16409, %r16398;
	shf.l.wrap.b32 	%r16411, %r16349, %r16349, 15;
	shf.l.wrap.b32 	%r16412, %r16349, %r16349, 13;
	xor.b32  	%r16413, %r16411, %r16412;
	shr.u32 	%r16414, %r16349, 10;
	xor.b32  	%r16415, %r16413, %r16414;
	shf.l.wrap.b32 	%r16416, %r15868, %r15868, 25;
	shf.l.wrap.b32 	%r16417, %r15868, %r15868, 14;
	xor.b32  	%r16418, %r16416, %r16417;
	shr.u32 	%r16419, %r15868, 3;
	xor.b32  	%r16420, %r16418, %r16419;
	add.s32 	%r16421, %r16420, %r15831;
	add.s32 	%r16422, %r16421, %r16164;
	add.s32 	%r16423, %r16422, %r16415;
	add.s32 	%r16424, %r16423, %r16288;
	xor.b32  	%r16425, %r16362, %r16325;
	and.b32  	%r16426, %r16399, %r16425;
	xor.b32  	%r16427, %r16426, %r16325;
	add.s32 	%r16428, %r16424, %r16427;
	shf.l.wrap.b32 	%r16429, %r16399, %r16399, 18;
	xor.b32  	%r16430, %r16429, %r16399;
	shf.l.wrap.b32 	%r16431, %r16430, %r16430, 27;
	xor.b32  	%r16432, %r16431, %r16399;
	shf.l.wrap.b32 	%r16433, %r16432, %r16432, 26;
	add.s32 	%r16434, %r16428, %r16433;
	add.s32 	%r16435, %r16434, 958139571;
	add.s32 	%r16436, %r16435, %r16299;
	shf.l.wrap.b32 	%r16437, %r16410, %r16410, 23;
	xor.b32  	%r16438, %r16437, %r16410;
	shf.l.wrap.b32 	%r16439, %r16438, %r16438, 21;
	xor.b32  	%r16440, %r16439, %r16410;
	shf.l.wrap.b32 	%r16441, %r16440, %r16440, 30;
	and.b32  	%r16442, %r16410, %r16373;
	or.b32  	%r16443, %r16410, %r16373;
	and.b32  	%r16444, %r16443, %r16336;
	or.b32  	%r16445, %r16444, %r16442;
	add.s32 	%r16446, %r16441, %r16445;
	add.s32 	%r16447, %r16446, %r16435;
	shf.l.wrap.b32 	%r16448, %r16386, %r16386, 15;
	shf.l.wrap.b32 	%r16449, %r16386, %r16386, 13;
	xor.b32  	%r16450, %r16448, %r16449;
	shr.u32 	%r16451, %r16386, 10;
	xor.b32  	%r16452, %r16450, %r16451;
	shf.l.wrap.b32 	%r16453, %r15905, %r15905, 25;
	shf.l.wrap.b32 	%r16454, %r15905, %r15905, 14;
	xor.b32  	%r16455, %r16453, %r16454;
	shr.u32 	%r16456, %r15905, 3;
	xor.b32  	%r16457, %r16455, %r16456;
	add.s32 	%r16458, %r16457, %r15868;
	add.s32 	%r16459, %r16458, %r16201;
	add.s32 	%r16460, %r16459, %r16452;
	add.s32 	%r16461, %r16460, %r16325;
	xor.b32  	%r16462, %r16399, %r16362;
	and.b32  	%r16463, %r16436, %r16462;
	xor.b32  	%r16464, %r16463, %r16362;
	add.s32 	%r16465, %r16461, %r16464;
	shf.l.wrap.b32 	%r16466, %r16436, %r16436, 18;
	xor.b32  	%r16467, %r16466, %r16436;
	shf.l.wrap.b32 	%r16468, %r16467, %r16467, 27;
	xor.b32  	%r16469, %r16468, %r16436;
	shf.l.wrap.b32 	%r16470, %r16469, %r16469, 26;
	add.s32 	%r16471, %r16465, %r16470;
	add.s32 	%r16472, %r16471, 1322822218;
	add.s32 	%r16473, %r16472, %r16336;
	shf.l.wrap.b32 	%r16474, %r16447, %r16447, 23;
	xor.b32  	%r16475, %r16474, %r16447;
	shf.l.wrap.b32 	%r16476, %r16475, %r16475, 21;
	xor.b32  	%r16477, %r16476, %r16447;
	shf.l.wrap.b32 	%r16478, %r16477, %r16477, 30;
	and.b32  	%r16479, %r16447, %r16410;
	or.b32  	%r16480, %r16447, %r16410;
	and.b32  	%r16481, %r16480, %r16373;
	or.b32  	%r16482, %r16481, %r16479;
	add.s32 	%r16483, %r16478, %r16482;
	add.s32 	%r16484, %r16483, %r16472;
	shf.l.wrap.b32 	%r16485, %r16423, %r16423, 15;
	shf.l.wrap.b32 	%r16486, %r16423, %r16423, 13;
	xor.b32  	%r16487, %r16485, %r16486;
	shr.u32 	%r16488, %r16423, 10;
	xor.b32  	%r16489, %r16487, %r16488;
	shf.l.wrap.b32 	%r16490, %r15942, %r15942, 25;
	shf.l.wrap.b32 	%r16491, %r15942, %r15942, 14;
	xor.b32  	%r16492, %r16490, %r16491;
	shr.u32 	%r16493, %r15942, 3;
	xor.b32  	%r16494, %r16492, %r16493;
	add.s32 	%r16495, %r16494, %r15905;
	add.s32 	%r16496, %r16495, %r16238;
	add.s32 	%r16497, %r16496, %r16489;
	add.s32 	%r16498, %r16497, %r16362;
	xor.b32  	%r16499, %r16436, %r16399;
	and.b32  	%r16500, %r16473, %r16499;
	xor.b32  	%r16501, %r16500, %r16399;
	add.s32 	%r16502, %r16498, %r16501;
	shf.l.wrap.b32 	%r16503, %r16473, %r16473, 18;
	xor.b32  	%r16504, %r16503, %r16473;
	shf.l.wrap.b32 	%r16505, %r16504, %r16504, 27;
	xor.b32  	%r16506, %r16505, %r16473;
	shf.l.wrap.b32 	%r16507, %r16506, %r16506, 26;
	add.s32 	%r16508, %r16502, %r16507;
	add.s32 	%r16509, %r16508, 1537002063;
	add.s32 	%r16510, %r16509, %r16373;
	shf.l.wrap.b32 	%r16511, %r16484, %r16484, 23;
	xor.b32  	%r16512, %r16511, %r16484;
	shf.l.wrap.b32 	%r16513, %r16512, %r16512, 21;
	xor.b32  	%r16514, %r16513, %r16484;
	shf.l.wrap.b32 	%r16515, %r16514, %r16514, 30;
	and.b32  	%r16516, %r16484, %r16447;
	or.b32  	%r16517, %r16484, %r16447;
	and.b32  	%r16518, %r16517, %r16410;
	or.b32  	%r16519, %r16518, %r16516;
	add.s32 	%r16520, %r16515, %r16519;
	add.s32 	%r16521, %r16520, %r16509;
	shf.l.wrap.b32 	%r16522, %r16460, %r16460, 15;
	shf.l.wrap.b32 	%r16523, %r16460, %r16460, 13;
	xor.b32  	%r16524, %r16522, %r16523;
	shr.u32 	%r16525, %r16460, 10;
	xor.b32  	%r16526, %r16524, %r16525;
	shf.l.wrap.b32 	%r16527, %r15979, %r15979, 25;
	shf.l.wrap.b32 	%r16528, %r15979, %r15979, 14;
	xor.b32  	%r16529, %r16527, %r16528;
	shr.u32 	%r16530, %r15979, 3;
	xor.b32  	%r16531, %r16529, %r16530;
	add.s32 	%r16532, %r16531, %r15942;
	add.s32 	%r16533, %r16532, %r16275;
	add.s32 	%r16534, %r16533, %r16526;
	add.s32 	%r16535, %r16534, %r16399;
	xor.b32  	%r16536, %r16473, %r16436;
	and.b32  	%r16537, %r16510, %r16536;
	xor.b32  	%r16538, %r16537, %r16436;
	add.s32 	%r16539, %r16535, %r16538;
	shf.l.wrap.b32 	%r16540, %r16510, %r16510, 18;
	xor.b32  	%r16541, %r16540, %r16510;
	shf.l.wrap.b32 	%r16542, %r16541, %r16541, 27;
	xor.b32  	%r16543, %r16542, %r16510;
	shf.l.wrap.b32 	%r16544, %r16543, %r16543, 26;
	add.s32 	%r16545, %r16539, %r16544;
	add.s32 	%r16546, %r16545, 1747873779;
	add.s32 	%r16547, %r16546, %r16410;
	shf.l.wrap.b32 	%r16548, %r16521, %r16521, 23;
	xor.b32  	%r16549, %r16548, %r16521;
	shf.l.wrap.b32 	%r16550, %r16549, %r16549, 21;
	xor.b32  	%r16551, %r16550, %r16521;
	shf.l.wrap.b32 	%r16552, %r16551, %r16551, 30;
	and.b32  	%r16553, %r16521, %r16484;
	or.b32  	%r16554, %r16521, %r16484;
	and.b32  	%r16555, %r16554, %r16447;
	or.b32  	%r16556, %r16555, %r16553;
	add.s32 	%r16557, %r16552, %r16556;
	add.s32 	%r16558, %r16557, %r16546;
	shf.l.wrap.b32 	%r16559, %r16497, %r16497, 15;
	shf.l.wrap.b32 	%r16560, %r16497, %r16497, 13;
	xor.b32  	%r16561, %r16559, %r16560;
	shr.u32 	%r16562, %r16497, 10;
	xor.b32  	%r16563, %r16561, %r16562;
	shf.l.wrap.b32 	%r16564, %r16016, %r16016, 25;
	shf.l.wrap.b32 	%r16565, %r16016, %r16016, 14;
	xor.b32  	%r16566, %r16564, %r16565;
	shr.u32 	%r16567, %r16016, 3;
	xor.b32  	%r16568, %r16566, %r16567;
	add.s32 	%r16569, %r16568, %r15979;
	add.s32 	%r16570, %r16569, %r16312;
	add.s32 	%r16571, %r16570, %r16563;
	add.s32 	%r16572, %r16571, %r16436;
	xor.b32  	%r16573, %r16510, %r16473;
	and.b32  	%r16574, %r16547, %r16573;
	xor.b32  	%r16575, %r16574, %r16473;
	add.s32 	%r16576, %r16572, %r16575;
	shf.l.wrap.b32 	%r16577, %r16547, %r16547, 18;
	xor.b32  	%r16578, %r16577, %r16547;
	shf.l.wrap.b32 	%r16579, %r16578, %r16578, 27;
	xor.b32  	%r16580, %r16579, %r16547;
	shf.l.wrap.b32 	%r16581, %r16580, %r16580, 26;
	add.s32 	%r16582, %r16576, %r16581;
	add.s32 	%r16583, %r16582, 1955562222;
	add.s32 	%r16584, %r16583, %r16447;
	shf.l.wrap.b32 	%r16585, %r16558, %r16558, 23;
	xor.b32  	%r16586, %r16585, %r16558;
	shf.l.wrap.b32 	%r16587, %r16586, %r16586, 21;
	xor.b32  	%r16588, %r16587, %r16558;
	shf.l.wrap.b32 	%r16589, %r16588, %r16588, 30;
	and.b32  	%r16590, %r16558, %r16521;
	or.b32  	%r16591, %r16558, %r16521;
	and.b32  	%r16592, %r16591, %r16484;
	or.b32  	%r16593, %r16592, %r16590;
	add.s32 	%r16594, %r16589, %r16593;
	add.s32 	%r16595, %r16594, %r16583;
	shf.l.wrap.b32 	%r16596, %r16534, %r16534, 15;
	shf.l.wrap.b32 	%r16597, %r16534, %r16534, 13;
	xor.b32  	%r16598, %r16596, %r16597;
	shr.u32 	%r16599, %r16534, 10;
	xor.b32  	%r16600, %r16598, %r16599;
	shf.l.wrap.b32 	%r16601, %r16053, %r16053, 25;
	shf.l.wrap.b32 	%r16602, %r16053, %r16053, 14;
	xor.b32  	%r16603, %r16601, %r16602;
	shr.u32 	%r16604, %r16053, 3;
	xor.b32  	%r16605, %r16603, %r16604;
	add.s32 	%r16606, %r16605, %r16016;
	add.s32 	%r16607, %r16606, %r16349;
	add.s32 	%r16608, %r16607, %r16600;
	add.s32 	%r16609, %r16608, %r16473;
	xor.b32  	%r16610, %r16547, %r16510;
	and.b32  	%r16611, %r16584, %r16610;
	xor.b32  	%r16612, %r16611, %r16510;
	add.s32 	%r16613, %r16609, %r16612;
	shf.l.wrap.b32 	%r16614, %r16584, %r16584, 18;
	xor.b32  	%r16615, %r16614, %r16584;
	shf.l.wrap.b32 	%r16616, %r16615, %r16615, 27;
	xor.b32  	%r16617, %r16616, %r16584;
	shf.l.wrap.b32 	%r16618, %r16617, %r16617, 26;
	add.s32 	%r16619, %r16613, %r16618;
	add.s32 	%r16620, %r16619, 2024104815;
	add.s32 	%r16621, %r16620, %r16484;
	shf.l.wrap.b32 	%r16622, %r16595, %r16595, 23;
	xor.b32  	%r16623, %r16622, %r16595;
	shf.l.wrap.b32 	%r16624, %r16623, %r16623, 21;
	xor.b32  	%r16625, %r16624, %r16595;
	shf.l.wrap.b32 	%r16626, %r16625, %r16625, 30;
	and.b32  	%r16627, %r16595, %r16558;
	or.b32  	%r16628, %r16595, %r16558;
	and.b32  	%r16629, %r16628, %r16521;
	or.b32  	%r16630, %r16629, %r16627;
	add.s32 	%r16631, %r16626, %r16630;
	add.s32 	%r16632, %r16631, %r16620;
	shf.l.wrap.b32 	%r16633, %r16571, %r16571, 15;
	shf.l.wrap.b32 	%r16634, %r16571, %r16571, 13;
	xor.b32  	%r16635, %r16633, %r16634;
	shr.u32 	%r16636, %r16571, 10;
	xor.b32  	%r16637, %r16635, %r16636;
	shf.l.wrap.b32 	%r16638, %r16090, %r16090, 25;
	shf.l.wrap.b32 	%r16639, %r16090, %r16090, 14;
	xor.b32  	%r16640, %r16638, %r16639;
	shr.u32 	%r16641, %r16090, 3;
	xor.b32  	%r16642, %r16640, %r16641;
	add.s32 	%r16643, %r16642, %r16053;
	add.s32 	%r16644, %r16643, %r16386;
	add.s32 	%r16645, %r16644, %r16637;
	add.s32 	%r16646, %r16645, %r16510;
	xor.b32  	%r16647, %r16584, %r16547;
	and.b32  	%r16648, %r16621, %r16647;
	xor.b32  	%r16649, %r16648, %r16547;
	add.s32 	%r16650, %r16646, %r16649;
	shf.l.wrap.b32 	%r16651, %r16621, %r16621, 18;
	xor.b32  	%r16652, %r16651, %r16621;
	shf.l.wrap.b32 	%r16653, %r16652, %r16652, 27;
	xor.b32  	%r16654, %r16653, %r16621;
	shf.l.wrap.b32 	%r16655, %r16654, %r16654, 26;
	add.s32 	%r16656, %r16650, %r16655;
	add.s32 	%r16657, %r16656, -2067236844;
	add.s32 	%r16658, %r16657, %r16521;
	shf.l.wrap.b32 	%r16659, %r16632, %r16632, 23;
	xor.b32  	%r16660, %r16659, %r16632;
	shf.l.wrap.b32 	%r16661, %r16660, %r16660, 21;
	xor.b32  	%r16662, %r16661, %r16632;
	shf.l.wrap.b32 	%r16663, %r16662, %r16662, 30;
	and.b32  	%r16664, %r16632, %r16595;
	or.b32  	%r16665, %r16632, %r16595;
	and.b32  	%r16666, %r16665, %r16558;
	or.b32  	%r16667, %r16666, %r16664;
	add.s32 	%r16668, %r16663, %r16667;
	add.s32 	%r16669, %r16668, %r16657;
	shf.l.wrap.b32 	%r16670, %r16608, %r16608, 15;
	shf.l.wrap.b32 	%r16671, %r16608, %r16608, 13;
	xor.b32  	%r16672, %r16670, %r16671;
	shr.u32 	%r16673, %r16608, 10;
	xor.b32  	%r16674, %r16672, %r16673;
	shf.l.wrap.b32 	%r16675, %r16127, %r16127, 25;
	shf.l.wrap.b32 	%r16676, %r16127, %r16127, 14;
	xor.b32  	%r16677, %r16675, %r16676;
	shr.u32 	%r16678, %r16127, 3;
	xor.b32  	%r16679, %r16677, %r16678;
	add.s32 	%r16680, %r16679, %r16090;
	add.s32 	%r16681, %r16680, %r16423;
	add.s32 	%r16682, %r16681, %r16674;
	add.s32 	%r16683, %r16682, %r16547;
	xor.b32  	%r16684, %r16621, %r16584;
	and.b32  	%r16685, %r16658, %r16684;
	xor.b32  	%r16686, %r16685, %r16584;
	add.s32 	%r16687, %r16683, %r16686;
	shf.l.wrap.b32 	%r16688, %r16658, %r16658, 18;
	xor.b32  	%r16689, %r16688, %r16658;
	shf.l.wrap.b32 	%r16690, %r16689, %r16689, 27;
	xor.b32  	%r16691, %r16690, %r16658;
	shf.l.wrap.b32 	%r16692, %r16691, %r16691, 26;
	add.s32 	%r16693, %r16687, %r16692;
	add.s32 	%r16694, %r16693, -1933114872;
	add.s32 	%r16695, %r16694, %r16558;
	shf.l.wrap.b32 	%r16696, %r16669, %r16669, 23;
	xor.b32  	%r16697, %r16696, %r16669;
	shf.l.wrap.b32 	%r16698, %r16697, %r16697, 21;
	xor.b32  	%r16699, %r16698, %r16669;
	shf.l.wrap.b32 	%r16700, %r16699, %r16699, 30;
	and.b32  	%r16701, %r16669, %r16632;
	or.b32  	%r16702, %r16669, %r16632;
	and.b32  	%r16703, %r16702, %r16595;
	or.b32  	%r16704, %r16703, %r16701;
	add.s32 	%r16705, %r16700, %r16704;
	add.s32 	%r16706, %r16705, %r16694;
	shf.l.wrap.b32 	%r16707, %r16645, %r16645, 15;
	shf.l.wrap.b32 	%r16708, %r16645, %r16645, 13;
	xor.b32  	%r16709, %r16707, %r16708;
	shr.u32 	%r16710, %r16645, 10;
	xor.b32  	%r16711, %r16709, %r16710;
	shf.l.wrap.b32 	%r16712, %r16164, %r16164, 25;
	shf.l.wrap.b32 	%r16713, %r16164, %r16164, 14;
	xor.b32  	%r16714, %r16712, %r16713;
	shr.u32 	%r16715, %r16164, 3;
	xor.b32  	%r16716, %r16714, %r16715;
	add.s32 	%r16717, %r16716, %r16127;
	add.s32 	%r16718, %r16717, %r16460;
	add.s32 	%r16719, %r16718, %r16711;
	add.s32 	%r16720, %r16719, %r16584;
	xor.b32  	%r16721, %r16658, %r16621;
	and.b32  	%r16722, %r16695, %r16721;
	xor.b32  	%r16723, %r16722, %r16621;
	add.s32 	%r16724, %r16720, %r16723;
	shf.l.wrap.b32 	%r16725, %r16695, %r16695, 18;
	xor.b32  	%r16726, %r16725, %r16695;
	shf.l.wrap.b32 	%r16727, %r16726, %r16726, 27;
	xor.b32  	%r16728, %r16727, %r16695;
	shf.l.wrap.b32 	%r16729, %r16728, %r16728, 26;
	add.s32 	%r16730, %r16724, %r16729;
	add.s32 	%r16731, %r16730, -1866530822;
	add.s32 	%r16732, %r16731, %r16595;
	shf.l.wrap.b32 	%r16733, %r16706, %r16706, 23;
	xor.b32  	%r16734, %r16733, %r16706;
	shf.l.wrap.b32 	%r16735, %r16734, %r16734, 21;
	xor.b32  	%r16736, %r16735, %r16706;
	shf.l.wrap.b32 	%r16737, %r16736, %r16736, 30;
	and.b32  	%r16738, %r16706, %r16669;
	or.b32  	%r16739, %r16706, %r16669;
	and.b32  	%r16740, %r16739, %r16632;
	or.b32  	%r16741, %r16740, %r16738;
	add.s32 	%r16742, %r16737, %r16741;
	add.s32 	%r16743, %r16742, %r16731;
	shf.l.wrap.b32 	%r16744, %r16682, %r16682, 15;
	shf.l.wrap.b32 	%r16745, %r16682, %r16682, 13;
	xor.b32  	%r16746, %r16744, %r16745;
	shr.u32 	%r16747, %r16682, 10;
	xor.b32  	%r16748, %r16746, %r16747;
	shf.l.wrap.b32 	%r16749, %r16201, %r16201, 25;
	shf.l.wrap.b32 	%r16750, %r16201, %r16201, 14;
	xor.b32  	%r16751, %r16749, %r16750;
	shr.u32 	%r16752, %r16201, 3;
	xor.b32  	%r16753, %r16751, %r16752;
	add.s32 	%r16754, %r16753, %r16164;
	add.s32 	%r16755, %r16754, %r16497;
	add.s32 	%r16756, %r16755, %r16748;
	add.s32 	%r16757, %r16756, %r16621;
	xor.b32  	%r16758, %r16695, %r16658;
	and.b32  	%r16759, %r16732, %r16758;
	xor.b32  	%r16760, %r16759, %r16658;
	add.s32 	%r16761, %r16757, %r16760;
	shf.l.wrap.b32 	%r16762, %r16732, %r16732, 18;
	xor.b32  	%r16763, %r16762, %r16732;
	shf.l.wrap.b32 	%r16764, %r16763, %r16763, 27;
	xor.b32  	%r16765, %r16764, %r16732;
	shf.l.wrap.b32 	%r16766, %r16765, %r16765, 26;
	add.s32 	%r16767, %r16761, %r16766;
	add.s32 	%r16768, %r16767, -1538233109;
	add.s32 	%r16769, %r16768, %r16632;
	shf.l.wrap.b32 	%r16770, %r16743, %r16743, 23;
	xor.b32  	%r16771, %r16770, %r16743;
	shf.l.wrap.b32 	%r16772, %r16771, %r16771, 21;
	xor.b32  	%r16773, %r16772, %r16743;
	shf.l.wrap.b32 	%r16774, %r16773, %r16773, 30;
	and.b32  	%r16775, %r16743, %r16706;
	or.b32  	%r16776, %r16743, %r16706;
	and.b32  	%r16777, %r16776, %r16669;
	or.b32  	%r16778, %r16777, %r16775;
	add.s32 	%r16779, %r16774, %r16778;
	add.s32 	%r16780, %r16779, %r16768;
	shf.l.wrap.b32 	%r16781, %r16719, %r16719, 15;
	shf.l.wrap.b32 	%r16782, %r16719, %r16719, 13;
	xor.b32  	%r16783, %r16781, %r16782;
	shr.u32 	%r16784, %r16719, 10;
	xor.b32  	%r16785, %r16783, %r16784;
	shf.l.wrap.b32 	%r16786, %r16238, %r16238, 25;
	shf.l.wrap.b32 	%r16787, %r16238, %r16238, 14;
	xor.b32  	%r16788, %r16786, %r16787;
	shr.u32 	%r16789, %r16238, 3;
	xor.b32  	%r16790, %r16788, %r16789;
	shf.l.wrap.b32 	%r16791, %r16769, %r16769, 18;
	xor.b32  	%r16792, %r16791, %r16769;
	shf.l.wrap.b32 	%r16793, %r16792, %r16792, 27;
	xor.b32  	%r16794, %r16793, %r16769;
	shf.l.wrap.b32 	%r16795, %r16794, %r16794, 26;
	xor.b32  	%r16796, %r16732, %r16695;
	and.b32  	%r16797, %r16769, %r16796;
	xor.b32  	%r16798, %r16797, %r16695;
	add.s32 	%r16799, %r16201, %r16790;
	add.s32 	%r16800, %r16799, %r16534;
	add.s32 	%r16801, %r16800, %r16785;
	add.s32 	%r16802, %r16801, %r16658;
	add.s32 	%r16803, %r16802, %r16798;
	add.s32 	%r16804, %r16803, %r16795;
	add.s32 	%r16805, %r16804, -1090935817;
	add.s32 	%r16806, %r16805, %r16669;
	shf.l.wrap.b32 	%r16807, %r16780, %r16780, 23;
	xor.b32  	%r16808, %r16807, %r16780;
	shf.l.wrap.b32 	%r16809, %r16808, %r16808, 21;
	xor.b32  	%r16810, %r16809, %r16780;
	shf.l.wrap.b32 	%r16811, %r16810, %r16810, 30;
	and.b32  	%r16812, %r16780, %r16743;
	or.b32  	%r16813, %r16780, %r16743;
	and.b32  	%r16814, %r16813, %r16706;
	or.b32  	%r16815, %r16814, %r16812;
	add.s32 	%r16816, %r16811, %r16815;
	add.s32 	%r16817, %r16816, %r16805;
	shf.l.wrap.b32 	%r16818, %r16756, %r16756, 15;
	shf.l.wrap.b32 	%r16819, %r16756, %r16756, 13;
	xor.b32  	%r16820, %r16818, %r16819;
	shr.u32 	%r16821, %r16756, 10;
	xor.b32  	%r16822, %r16820, %r16821;
	shf.l.wrap.b32 	%r16823, %r16275, %r16275, 25;
	shf.l.wrap.b32 	%r16824, %r16275, %r16275, 14;
	xor.b32  	%r16825, %r16823, %r16824;
	shr.u32 	%r16826, %r16275, 3;
	xor.b32  	%r16827, %r16825, %r16826;
	shf.l.wrap.b32 	%r16828, %r16806, %r16806, 18;
	xor.b32  	%r16829, %r16828, %r16806;
	shf.l.wrap.b32 	%r16830, %r16829, %r16829, 27;
	xor.b32  	%r16831, %r16830, %r16806;
	shf.l.wrap.b32 	%r16832, %r16831, %r16831, 26;
	xor.b32  	%r16833, %r16769, %r16732;
	and.b32  	%r16834, %r16806, %r16833;
	xor.b32  	%r16835, %r16834, %r16732;
	add.s32 	%r16836, %r16238, %r16827;
	add.s32 	%r16837, %r16836, %r16571;
	add.s32 	%r16838, %r16837, %r16822;
	add.s32 	%r16839, %r16838, %r16695;
	add.s32 	%r16840, %r16839, %r16835;
	add.s32 	%r16841, %r16840, %r16832;
	add.s32 	%r16842, %r16841, -965641998;
	shf.l.wrap.b32 	%r16843, %r16817, %r16817, 23;
	xor.b32  	%r16844, %r16843, %r16817;
	shf.l.wrap.b32 	%r16845, %r16844, %r16844, 21;
	xor.b32  	%r16846, %r16845, %r16817;
	shf.l.wrap.b32 	%r16847, %r16846, %r16846, 30;
	and.b32  	%r16848, %r16817, %r16780;
	or.b32  	%r16849, %r16817, %r16780;
	and.b32  	%r16850, %r16849, %r16743;
	or.b32  	%r16851, %r16850, %r16848;
	add.s32 	%r16852, %r16851, %r14705;
	add.s32 	%r16853, %r16852, %r16847;
	add.s32 	%r16854, %r16853, %r16842;
	st.local.u32 	[%rd5+4], %r16854;
	add.s32 	%r16855, %r16817, %r14711;
	st.local.u32 	[%rd5+8], %r16855;
	add.s32 	%r16856, %r16780, %r14714;
	st.local.u32 	[%rd5+12], %r16856;
	add.s32 	%r16857, %r16743, %r14703;
	st.local.u32 	[%rd5+16], %r16857;
	add.s32 	%r16858, %r16706, %r14689;
	add.s32 	%r16859, %r16858, %r16842;
	st.local.u32 	[%rd5+20], %r16859;
	add.s32 	%r16860, %r16806, %r14697;
	st.local.u32 	[%rd5+24], %r16860;
	add.s32 	%r16861, %r16769, %r14696;
	st.local.u32 	[%rd5+28], %r16861;
	add.s32 	%r16862, %r16732, %r14687;
	st.local.u32 	[%rd5+32], %r16862;
	add.s64 	%rd290, %rd290, 64;
	add.s64 	%rd288, %rd288, 64;
	add.s32 	%r17094, %r17094, -64;
	setp.gt.u32 	%p66, %r17094, 63;
	@%p66 bra 	$L__BB6_76;

$L__BB6_80:
	setp.eq.s32 	%p67, %r17094, 0;
	@%p67 bra 	$L__BB6_86;

	cvt.u64.u32 	%rd196, %r17075;
	add.s64 	%rd197, %rd5, %rd196;
	add.s64 	%rd295, %rd197, 36;
	and.b32  	%r17096, %r17094, 3;
	setp.eq.s32 	%p68, %r17096, 0;
	mov.u32 	%r17097, %r17094;
	@%p68 bra 	$L__BB6_84;

	mov.u64 	%rd291, %rd295;
	mov.u64 	%rd292, %rd290;
	mov.u32 	%r17097, %r17094;

$L__BB6_83:
	.pragma "nounroll";
	add.s32 	%r17097, %r17097, -1;
	add.s64 	%rd290, %rd292, 1;
	ld.local.u8 	%rs178, [%rd292];
	add.s64 	%rd295, %rd291, 1;
	st.local.u8 	[%rd291], %rs178;
	add.s32 	%r17096, %r17096, -1;
	setp.ne.s32 	%p69, %r17096, 0;
	mov.u64 	%rd291, %rd295;
	mov.u64 	%rd292, %rd290;
	@%p69 bra 	$L__BB6_83;

$L__BB6_84:
	add.s32 	%r16863, %r17094, -1;
	setp.lt.u32 	%p70, %r16863, 3;
	@%p70 bra 	$L__BB6_86;

$L__BB6_85:
	ld.local.u8 	%rs179, [%rd290];
	st.local.u8 	[%rd295], %rs179;
	ld.local.u8 	%rs180, [%rd290+1];
	st.local.u8 	[%rd295+1], %rs180;
	ld.local.u8 	%rs181, [%rd290+2];
	st.local.u8 	[%rd295+2], %rs181;
	add.s64 	%rd160, %rd290, 4;
	ld.local.u8 	%rs182, [%rd290+3];
	add.s64 	%rd161, %rd295, 4;
	st.local.u8 	[%rd295+3], %rs182;
	add.s32 	%r17097, %r17097, -4;
	setp.ne.s32 	%p71, %r17097, 0;
	mov.u64 	%rd295, %rd161;
	mov.u64 	%rd290, %rd160;
	@%p71 bra 	$L__BB6_85;

$L__BB6_86:
	mov.b32 	%r16975, %envreg3;
	mov.u32 	%r16974, %tid.x;
	add.s32 	%r16973, %r16974, %r16975;
	mov.u32 	%r16972, %ctaid.x;
	mov.u32 	%r16971, %ntid.x;
	mad.lo.s32 	%r16970, %r16971, %r16972, %r16973;
	cvt.u64.u32 	%rd209, %r16970;
	ld.param.u64 	%rd204, [sspr_salted_sha256_param_3];
	ld.param.u64 	%rd203, [sspr_salted_sha256_param_2];
	ld.local.u32 	%r16864, [%rd5+4];
	shf.l.wrap.b32 	%r16865, %r16864, %r16864, 16;
	shl.b32 	%r16866, %r16865, 8;
	and.b32  	%r16867, %r16866, -16711936;
	shr.u32 	%r16868, %r16865, 8;
	and.b32  	%r16869, %r16868, 16711935;
	or.b32  	%r16870, %r16867, %r16869;
	ld.local.u32 	%r16871, [%rd5+8];
	shf.l.wrap.b32 	%r16872, %r16871, %r16871, 16;
	shl.b32 	%r16873, %r16872, 8;
	and.b32  	%r16874, %r16873, -16711936;
	shr.u32 	%r16875, %r16872, 8;
	and.b32  	%r16876, %r16875, 16711935;
	or.b32  	%r16877, %r16874, %r16876;
	ld.local.u32 	%r16878, [%rd5+12];
	shf.l.wrap.b32 	%r16879, %r16878, %r16878, 16;
	shl.b32 	%r16880, %r16879, 8;
	and.b32  	%r16881, %r16880, -16711936;
	shr.u32 	%r16882, %r16879, 8;
	and.b32  	%r16883, %r16882, 16711935;
	or.b32  	%r16884, %r16881, %r16883;
	ld.local.u32 	%r16885, [%rd5+16];
	shf.l.wrap.b32 	%r16886, %r16885, %r16885, 16;
	shl.b32 	%r16887, %r16886, 8;
	and.b32  	%r16888, %r16887, -16711936;
	shr.u32 	%r16889, %r16886, 8;
	and.b32  	%r16890, %r16889, 16711935;
	or.b32  	%r16891, %r16888, %r16890;
	ld.local.u32 	%r16892, [%rd5+20];
	shf.l.wrap.b32 	%r16893, %r16892, %r16892, 16;
	shl.b32 	%r16894, %r16893, 8;
	and.b32  	%r16895, %r16894, -16711936;
	shr.u32 	%r16896, %r16893, 8;
	and.b32  	%r16897, %r16896, 16711935;
	or.b32  	%r16898, %r16895, %r16897;
	ld.local.u32 	%r16899, [%rd5+24];
	shf.l.wrap.b32 	%r16900, %r16899, %r16899, 16;
	shl.b32 	%r16901, %r16900, 8;
	and.b32  	%r16902, %r16901, -16711936;
	shr.u32 	%r16903, %r16900, 8;
	and.b32  	%r16904, %r16903, 16711935;
	or.b32  	%r16905, %r16902, %r16904;
	ld.local.u32 	%r16906, [%rd5+28];
	shf.l.wrap.b32 	%r16907, %r16906, %r16906, 16;
	shl.b32 	%r16908, %r16907, 8;
	and.b32  	%r16909, %r16908, -16711936;
	shr.u32 	%r16910, %r16907, 8;
	and.b32  	%r16911, %r16910, 16711935;
	or.b32  	%r16912, %r16909, %r16911;
	ld.local.u32 	%r16913, [%rd5+32];
	shf.l.wrap.b32 	%r16914, %r16913, %r16913, 16;
	shl.b32 	%r16915, %r16914, 8;
	and.b32  	%r16916, %r16915, -16711936;
	shr.u32 	%r16917, %r16914, 8;
	and.b32  	%r16918, %r16917, 16711935;
	or.b32  	%r16919, %r16916, %r16918;
	shf.l.wrap.b32 	%r16920, %r16870, %r16870, 16;
	shl.b32 	%r16921, %r16920, 8;
	and.b32  	%r16922, %r16921, -16711936;
	shr.u32 	%r16923, %r16920, 8;
	and.b32  	%r16924, %r16923, 16711935;
	shf.l.wrap.b32 	%r16925, %r16877, %r16877, 16;
	shl.b32 	%r16926, %r16925, 8;
	and.b32  	%r16927, %r16926, -16711936;
	shr.u32 	%r16928, %r16925, 8;
	and.b32  	%r16929, %r16928, 16711935;
	or.b32  	%r16930, %r16927, %r16929;
	or.b32  	%r16931, %r16922, %r16924;
	mul.lo.s64 	%rd198, %rd209, 72;
	add.s64 	%rd199, %rd204, %rd198;
	st.global.v2.u32 	[%rd199], {%r16931, %r16930};
	shf.l.wrap.b32 	%r16932, %r16884, %r16884, 16;
	shl.b32 	%r16933, %r16932, 8;
	and.b32  	%r16934, %r16933, -16711936;
	shr.u32 	%r16935, %r16932, 8;
	and.b32  	%r16936, %r16935, 16711935;
	shf.l.wrap.b32 	%r16937, %r16891, %r16891, 16;
	shl.b32 	%r16938, %r16937, 8;
	and.b32  	%r16939, %r16938, -16711936;
	shr.u32 	%r16940, %r16937, 8;
	and.b32  	%r16941, %r16940, 16711935;
	or.b32  	%r16942, %r16939, %r16941;
	or.b32  	%r16943, %r16934, %r16936;
	st.global.v2.u32 	[%rd199+8], {%r16943, %r16942};
	shf.l.wrap.b32 	%r16944, %r16898, %r16898, 16;
	shl.b32 	%r16945, %r16944, 8;
	and.b32  	%r16946, %r16945, -16711936;
	shr.u32 	%r16947, %r16944, 8;
	and.b32  	%r16948, %r16947, 16711935;
	shf.l.wrap.b32 	%r16949, %r16905, %r16905, 16;
	shl.b32 	%r16950, %r16949, 8;
	and.b32  	%r16951, %r16950, -16711936;
	shr.u32 	%r16952, %r16949, 8;
	and.b32  	%r16953, %r16952, 16711935;
	or.b32  	%r16954, %r16951, %r16953;
	or.b32  	%r16955, %r16946, %r16948;
	st.global.v2.u32 	[%rd199+16], {%r16955, %r16954};
	shf.l.wrap.b32 	%r16956, %r16912, %r16912, 16;
	shl.b32 	%r16957, %r16956, 8;
	and.b32  	%r16958, %r16957, -16711936;
	shr.u32 	%r16959, %r16956, 8;
	and.b32  	%r16960, %r16959, 16711935;
	shf.l.wrap.b32 	%r16961, %r16919, %r16919, 16;
	shl.b32 	%r16962, %r16961, 8;
	and.b32  	%r16963, %r16962, -16711936;
	shr.u32 	%r16964, %r16961, 8;
	and.b32  	%r16965, %r16964, 16711935;
	or.b32  	%r16966, %r16963, %r16965;
	or.b32  	%r16967, %r16958, %r16960;
	st.global.v2.u32 	[%rd199+24], {%r16967, %r16966};
	ld.const.u32 	%r16968, [%rd203+4];
	add.s32 	%r16969, %r16968, -1;
	st.global.u32 	[%rd199+64], %r16969;
	ret;

}
	// .globl	loop_sha512
.entry loop_sha512(
	.param .u64 .ptr .global .align 8 loop_sha512_param_0,
	.param .u64 .ptr .global .align 8 loop_sha512_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<1146>;
	.reg .b64 	%rd<1636>;


	ld.param.u64 	%rd116, [loop_sha512_param_1];
	mov.b32 	%r7, %envreg3;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	add.s32 	%r11, %r10, %r7;
	mad.lo.s32 	%r1, %r9, %r8, %r11;
	mul.wide.u32 	%rd117, %r1, 72;
	add.s64 	%rd118, %rd116, %rd117;
	ld.global.u32 	%r2, [%rd118+64];
	min.u32 	%r12, %r2, 813;
	ld.global.u64 	%rd1635, [%rd118];
	ld.global.u64 	%rd1634, [%rd118+8];
	ld.global.u64 	%rd1633, [%rd118+16];
	ld.global.u64 	%rd1632, [%rd118+24];
	ld.global.u64 	%rd1631, [%rd118+32];
	ld.global.u64 	%rd1630, [%rd118+40];
	ld.global.u64 	%rd1629, [%rd118+48];
	ld.global.u64 	%rd1628, [%rd118+56];
	setp.eq.s32 	%p1, %r12, 0;
	@%p1 bra 	$L__BB7_5;

	mov.u64 	%rd119, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14,%dummy}, %rd119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15}, %rd119;
	}
	shf.r.wrap.b32 	%r16, %r15, %r14, 14;
	shf.r.wrap.b32 	%r17, %r14, %r15, 14;
	mov.b64 	%rd120, {%r17, %r16};
	shf.r.wrap.b32 	%r18, %r15, %r14, 18;
	shf.r.wrap.b32 	%r19, %r14, %r15, 18;
	mov.b64 	%rd121, {%r19, %r18};
	xor.b64  	%rd122, %rd120, %rd121;
	shf.l.wrap.b32 	%r20, %r14, %r15, 23;
	shf.l.wrap.b32 	%r21, %r15, %r14, 23;
	mov.b64 	%rd123, {%r21, %r20};
	xor.b64  	%rd124, %rd122, %rd123;
	add.s64 	%rd9, %rd124, -7031530027109396581;
	mov.u64 	%rd125, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r22}, %rd125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r23,%dummy}, %rd125;
	}
	shf.l.wrap.b32 	%r24, %r23, %r22, 30;
	shf.l.wrap.b32 	%r25, %r22, %r23, 30;
	mov.b64 	%rd126, {%r25, %r24};
	shf.r.wrap.b32 	%r26, %r22, %r23, 28;
	shf.r.wrap.b32 	%r27, %r23, %r22, 28;
	mov.b64 	%rd127, {%r27, %r26};
	xor.b64  	%rd128, %rd127, %rd126;
	shf.l.wrap.b32 	%r28, %r23, %r22, 25;
	shf.l.wrap.b32 	%r29, %r22, %r23, 25;
	mov.b64 	%rd129, {%r29, %r28};
	xor.b64  	%rd130, %rd128, %rd129;
	add.s64 	%rd10, %rd130, 6482280703085258342;
	mov.u64 	%rd131, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r30}, %rd131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r31,%dummy}, %rd131;
	}
	shf.l.wrap.b32 	%r32, %r31, %r30, 3;
	shf.l.wrap.b32 	%r33, %r30, %r31, 3;
	mov.b64 	%rd132, {%r33, %r32};
	shf.r.wrap.b32 	%r34, %r30, %r31, 19;
	shf.r.wrap.b32 	%r35, %r31, %r30, 19;
	mov.b64 	%rd133, {%r35, %r34};
	xor.b64  	%rd11, %rd133, %rd132;
	shf.r.wrap.b32 	%r36, %r30, %r31, 8;
	shf.r.wrap.b32 	%r37, %r31, %r30, 8;
	mov.b64 	%rd134, {%r37, %r36};
	shf.r.wrap.b32 	%r38, %r30, %r31, 1;
	shf.r.wrap.b32 	%r39, %r31, %r30, 1;
	mov.b64 	%rd135, {%r39, %r38};
	xor.b64  	%rd12, %rd135, %rd134;
	mov.u64 	%rd136, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r40}, %rd136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r41,%dummy}, %rd136;
	}
	shf.l.wrap.b32 	%r42, %r41, %r40, 3;
	shf.l.wrap.b32 	%r43, %r40, %r41, 3;
	mov.b64 	%rd137, {%r43, %r42};
	shf.r.wrap.b32 	%r44, %r40, %r41, 19;
	shf.r.wrap.b32 	%r45, %r41, %r40, 19;
	mov.b64 	%rd138, {%r45, %r44};
	xor.b64  	%rd139, %rd138, %rd137;
	xor.b64  	%rd13, %rd139, 8;
	mov.u64 	%rd140, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r46,%dummy}, %rd140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r47}, %rd140;
	}
	shf.r.wrap.b32 	%r48, %r47, %r46, 8;
	shf.r.wrap.b32 	%r49, %r46, %r47, 8;
	mov.b64 	%rd141, {%r49, %r48};
	shf.r.wrap.b32 	%r50, %r47, %r46, 1;
	shf.r.wrap.b32 	%r51, %r46, %r47, 1;
	mov.b64 	%rd142, {%r51, %r50};
	xor.b64  	%rd143, %rd142, %rd141;
	xor.b64  	%rd14, %rd143, 72057594037927936;
	xor.b64  	%rd15, %rd12, -9223372036854775808;
	shf.r.wrap.b32 	%r52, %r40, %r41, 8;
	shf.r.wrap.b32 	%r53, %r41, %r40, 8;
	mov.b64 	%rd144, {%r53, %r52};
	shf.r.wrap.b32 	%r54, %r40, %r41, 1;
	shf.r.wrap.b32 	%r55, %r41, %r40, 1;
	mov.b64 	%rd145, {%r55, %r54};
	xor.b64  	%rd146, %rd145, %rd144;
	xor.b64  	%rd16, %rd146, 4;
	mov.u32 	%r1144, 0;

$L__BB7_2:
	add.s64 	%rd148, %rd9, %rd1635;
	add.s64 	%rd149, %rd148, -4263291710961585108;
	add.s64 	%rd150, %rd10, %rd148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r57,%dummy}, %rd149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r58}, %rd149;
	}
	shf.r.wrap.b32 	%r59, %r58, %r57, 14;
	shf.r.wrap.b32 	%r60, %r57, %r58, 14;
	mov.b64 	%rd151, {%r60, %r59};
	shf.r.wrap.b32 	%r61, %r58, %r57, 18;
	shf.r.wrap.b32 	%r62, %r57, %r58, 18;
	mov.b64 	%rd152, {%r62, %r61};
	xor.b64  	%rd153, %rd151, %rd152;
	shf.l.wrap.b32 	%r63, %r57, %r58, 23;
	shf.l.wrap.b32 	%r64, %r58, %r57, 23;
	mov.b64 	%rd154, {%r64, %r63};
	xor.b64  	%rd155, %rd153, %rd154;
	and.b64  	%rd156, %rd149, -3887949035690463538;
	xor.b64  	%rd157, %rd156, -7276294671716946913;
	add.s64 	%rd158, %rd1634, %rd157;
	add.s64 	%rd159, %rd158, %rd155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r65,%dummy}, %rd150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r66}, %rd150;
	}
	shf.r.wrap.b32 	%r67, %r66, %r65, 28;
	shf.r.wrap.b32 	%r68, %r65, %r66, 28;
	mov.b64 	%rd160, {%r68, %r67};
	shf.l.wrap.b32 	%r69, %r65, %r66, 30;
	shf.l.wrap.b32 	%r70, %r66, %r65, 30;
	mov.b64 	%rd161, {%r70, %r69};
	xor.b64  	%rd162, %rd160, %rd161;
	shf.l.wrap.b32 	%r71, %r65, %r66, 25;
	shf.l.wrap.b32 	%r72, %r66, %r65, 25;
	mov.b64 	%rd163, {%r72, %r71};
	xor.b64  	%rd164, %rd162, %rd163;
	and.b64  	%rd165, %rd150, -3355664534840381901;
	or.b64  	%rd166, %rd165, 3026882967131160840;
	add.s64 	%rd167, %rd166, %rd164;
	add.s64 	%rd168, %rd167, %rd159;
	add.s64 	%rd169, %rd159, -3663095898801038493;
	add.s64 	%rd170, %rd168, -8017781463737883848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r73,%dummy}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r74}, %rd169;
	}
	shf.r.wrap.b32 	%r75, %r74, %r73, 14;
	shf.r.wrap.b32 	%r76, %r73, %r74, 14;
	mov.b64 	%rd171, {%r76, %r75};
	shf.r.wrap.b32 	%r77, %r74, %r73, 18;
	shf.r.wrap.b32 	%r78, %r73, %r74, 18;
	mov.b64 	%rd172, {%r78, %r77};
	xor.b64  	%rd173, %rd171, %rd172;
	shf.l.wrap.b32 	%r79, %r73, %r74, 23;
	shf.l.wrap.b32 	%r80, %r74, %r73, 23;
	mov.b64 	%rd174, {%r80, %r79};
	xor.b64  	%rd175, %rd173, %rd174;
	xor.b64  	%rd176, %rd149, 5840696475078001361;
	and.b64  	%rd177, %rd169, %rd176;
	xor.b64  	%rd178, %rd177, 5840696475078001361;
	add.s64 	%rd179, %rd1633, %rd178;
	add.s64 	%rd180, %rd179, %rd175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r81,%dummy}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r82}, %rd170;
	}
	shf.r.wrap.b32 	%r83, %r82, %r81, 28;
	shf.r.wrap.b32 	%r84, %r81, %r82, 28;
	mov.b64 	%rd181, {%r84, %r83};
	shf.l.wrap.b32 	%r85, %r81, %r82, 30;
	shf.l.wrap.b32 	%r86, %r82, %r81, 30;
	mov.b64 	%rd182, {%r86, %r85};
	xor.b64  	%rd183, %rd181, %rd182;
	shf.l.wrap.b32 	%r87, %r81, %r82, 25;
	shf.l.wrap.b32 	%r88, %r82, %r81, 25;
	mov.b64 	%rd184, {%r88, %r87};
	xor.b64  	%rd185, %rd183, %rd184;
	and.b64  	%rd186, %rd170, %rd150;
	or.b64  	%rd187, %rd170, %rd150;
	and.b64  	%rd188, %rd187, 7640891576956012808;
	or.b64  	%rd189, %rd188, %rd186;
	add.s64 	%rd190, %rd189, %rd185;
	add.s64 	%rd191, %rd190, %rd180;
	add.s64 	%rd192, %rd180, 877659737583668873;
	add.s64 	%rd193, %rd191, 5820449915117741902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r89,%dummy}, %rd192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r90}, %rd192;
	}
	shf.r.wrap.b32 	%r91, %r90, %r89, 14;
	shf.r.wrap.b32 	%r92, %r89, %r90, 14;
	mov.b64 	%rd194, {%r92, %r91};
	shf.r.wrap.b32 	%r93, %r90, %r89, 18;
	shf.r.wrap.b32 	%r94, %r89, %r90, 18;
	mov.b64 	%rd195, {%r94, %r93};
	xor.b64  	%rd196, %rd194, %rd195;
	shf.l.wrap.b32 	%r95, %r89, %r90, 23;
	shf.l.wrap.b32 	%r96, %r90, %r89, 23;
	mov.b64 	%rd197, {%r96, %r95};
	xor.b64  	%rd198, %rd196, %rd197;
	xor.b64  	%rd199, %rd169, %rd149;
	and.b64  	%rd200, %rd192, %rd199;
	xor.b64  	%rd201, %rd200, %rd149;
	add.s64 	%rd202, %rd1632, %rd201;
	add.s64 	%rd203, %rd202, %rd198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r98}, %rd193;
	}
	shf.r.wrap.b32 	%r99, %r98, %r97, 28;
	shf.r.wrap.b32 	%r100, %r97, %r98, 28;
	mov.b64 	%rd204, {%r100, %r99};
	shf.l.wrap.b32 	%r101, %r97, %r98, 30;
	shf.l.wrap.b32 	%r102, %r98, %r97, 30;
	mov.b64 	%rd205, {%r102, %r101};
	xor.b64  	%rd206, %rd204, %rd205;
	shf.l.wrap.b32 	%r103, %r97, %r98, 25;
	shf.l.wrap.b32 	%r104, %r98, %r97, 25;
	mov.b64 	%rd207, {%r104, %r103};
	xor.b64  	%rd208, %rd206, %rd207;
	and.b64  	%rd209, %rd193, %rd170;
	or.b64  	%rd210, %rd193, %rd170;
	and.b64  	%rd211, %rd210, %rd150;
	or.b64  	%rd212, %rd211, %rd209;
	add.s64 	%rd213, %rd212, %rd208;
	add.s64 	%rd214, %rd213, %rd203;
	add.s64 	%rd215, %rd203, -6571292209873868907;
	add.s64 	%rd216, %rd214, 4234560286879669901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r105,%dummy}, %rd215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r106}, %rd215;
	}
	shf.r.wrap.b32 	%r107, %r106, %r105, 14;
	shf.r.wrap.b32 	%r108, %r105, %r106, 14;
	mov.b64 	%rd217, {%r108, %r107};
	shf.r.wrap.b32 	%r109, %r106, %r105, 18;
	shf.r.wrap.b32 	%r110, %r105, %r106, 18;
	mov.b64 	%rd218, {%r110, %r109};
	xor.b64  	%rd219, %rd217, %rd218;
	shf.l.wrap.b32 	%r111, %r105, %r106, 23;
	shf.l.wrap.b32 	%r112, %r106, %r105, 23;
	mov.b64 	%rd220, {%r112, %r111};
	xor.b64  	%rd221, %rd219, %rd220;
	xor.b64  	%rd222, %rd192, %rd169;
	and.b64  	%rd223, %rd215, %rd222;
	xor.b64  	%rd224, %rd223, %rd169;
	add.s64 	%rd225, %rd148, %rd1631;
	add.s64 	%rd226, %rd225, %rd224;
	add.s64 	%rd227, %rd226, %rd221;
	add.s64 	%rd228, %rd227, -131588302623135388;
	add.s64 	%rd229, %rd228, %rd150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r113,%dummy}, %rd216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r114}, %rd216;
	}
	shf.r.wrap.b32 	%r115, %r114, %r113, 28;
	shf.r.wrap.b32 	%r116, %r113, %r114, 28;
	mov.b64 	%rd230, {%r116, %r115};
	shf.l.wrap.b32 	%r117, %r113, %r114, 30;
	shf.l.wrap.b32 	%r118, %r114, %r113, 30;
	mov.b64 	%rd231, {%r118, %r117};
	xor.b64  	%rd232, %rd230, %rd231;
	shf.l.wrap.b32 	%r119, %r113, %r114, 25;
	shf.l.wrap.b32 	%r120, %r114, %r113, 25;
	mov.b64 	%rd233, {%r120, %r119};
	xor.b64  	%rd234, %rd232, %rd233;
	and.b64  	%rd235, %rd216, %rd193;
	or.b64  	%rd236, %rd216, %rd193;
	and.b64  	%rd237, %rd236, %rd170;
	or.b64  	%rd238, %rd237, %rd235;
	add.s64 	%rd239, %rd238, %rd234;
	add.s64 	%rd240, %rd239, %rd228;
	add.s64 	%rd241, %rd1630, %rd169;
	xor.b64  	%rd242, %rd215, %rd192;
	and.b64  	%rd243, %rd229, %rd242;
	xor.b64  	%rd244, %rd243, %rd192;
	add.s64 	%rd245, %rd241, %rd244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r121,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r122}, %rd229;
	}
	shf.r.wrap.b32 	%r123, %r122, %r121, 14;
	shf.r.wrap.b32 	%r124, %r121, %r122, 14;
	mov.b64 	%rd246, {%r124, %r123};
	shf.r.wrap.b32 	%r125, %r122, %r121, 18;
	shf.r.wrap.b32 	%r126, %r121, %r122, 18;
	mov.b64 	%rd247, {%r126, %r125};
	xor.b64  	%rd248, %rd246, %rd247;
	shf.l.wrap.b32 	%r127, %r121, %r122, 23;
	shf.l.wrap.b32 	%r128, %r122, %r121, 23;
	mov.b64 	%rd249, {%r128, %r127};
	xor.b64  	%rd250, %rd248, %rd249;
	add.s64 	%rd251, %rd245, %rd250;
	add.s64 	%rd252, %rd251, 6480981068601479193;
	add.s64 	%rd253, %rd252, %rd170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r129,%dummy}, %rd240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd240;
	}
	shf.r.wrap.b32 	%r131, %r130, %r129, 28;
	shf.r.wrap.b32 	%r132, %r129, %r130, 28;
	mov.b64 	%rd254, {%r132, %r131};
	shf.l.wrap.b32 	%r133, %r129, %r130, 30;
	shf.l.wrap.b32 	%r134, %r130, %r129, 30;
	mov.b64 	%rd255, {%r134, %r133};
	xor.b64  	%rd256, %rd254, %rd255;
	shf.l.wrap.b32 	%r135, %r129, %r130, 25;
	shf.l.wrap.b32 	%r136, %r130, %r129, 25;
	mov.b64 	%rd257, {%r136, %r135};
	xor.b64  	%rd258, %rd256, %rd257;
	and.b64  	%rd259, %rd240, %rd216;
	or.b64  	%rd260, %rd240, %rd216;
	and.b64  	%rd261, %rd260, %rd193;
	or.b64  	%rd262, %rd261, %rd259;
	add.s64 	%rd263, %rd262, %rd258;
	add.s64 	%rd264, %rd263, %rd252;
	add.s64 	%rd265, %rd1629, %rd192;
	xor.b64  	%rd266, %rd229, %rd215;
	and.b64  	%rd267, %rd253, %rd266;
	xor.b64  	%rd268, %rd267, %rd215;
	add.s64 	%rd269, %rd265, %rd268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r137,%dummy}, %rd253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r138}, %rd253;
	}
	shf.r.wrap.b32 	%r139, %r138, %r137, 14;
	shf.r.wrap.b32 	%r140, %r137, %r138, 14;
	mov.b64 	%rd270, {%r140, %r139};
	shf.r.wrap.b32 	%r141, %r138, %r137, 18;
	shf.r.wrap.b32 	%r142, %r137, %r138, 18;
	mov.b64 	%rd271, {%r142, %r141};
	xor.b64  	%rd272, %rd270, %rd271;
	shf.l.wrap.b32 	%r143, %r137, %r138, 23;
	shf.l.wrap.b32 	%r144, %r138, %r137, 23;
	mov.b64 	%rd273, {%r144, %r143};
	xor.b64  	%rd274, %rd272, %rd273;
	add.s64 	%rd275, %rd269, %rd274;
	add.s64 	%rd276, %rd275, -7908458776815382629;
	add.s64 	%rd277, %rd276, %rd193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r145,%dummy}, %rd264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd264;
	}
	shf.r.wrap.b32 	%r147, %r146, %r145, 28;
	shf.r.wrap.b32 	%r148, %r145, %r146, 28;
	mov.b64 	%rd278, {%r148, %r147};
	shf.l.wrap.b32 	%r149, %r145, %r146, 30;
	shf.l.wrap.b32 	%r150, %r146, %r145, 30;
	mov.b64 	%rd279, {%r150, %r149};
	xor.b64  	%rd280, %rd278, %rd279;
	shf.l.wrap.b32 	%r151, %r145, %r146, 25;
	shf.l.wrap.b32 	%r152, %r146, %r145, 25;
	mov.b64 	%rd281, {%r152, %r151};
	xor.b64  	%rd282, %rd280, %rd281;
	and.b64  	%rd283, %rd264, %rd240;
	or.b64  	%rd284, %rd264, %rd240;
	and.b64  	%rd285, %rd284, %rd216;
	or.b64  	%rd286, %rd285, %rd283;
	add.s64 	%rd287, %rd286, %rd282;
	add.s64 	%rd288, %rd287, %rd276;
	add.s64 	%rd289, %rd1628, %rd215;
	xor.b64  	%rd290, %rd253, %rd229;
	and.b64  	%rd291, %rd277, %rd290;
	xor.b64  	%rd292, %rd291, %rd229;
	add.s64 	%rd293, %rd289, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r154}, %rd277;
	}
	shf.r.wrap.b32 	%r155, %r154, %r153, 14;
	shf.r.wrap.b32 	%r156, %r153, %r154, 14;
	mov.b64 	%rd294, {%r156, %r155};
	shf.r.wrap.b32 	%r157, %r154, %r153, 18;
	shf.r.wrap.b32 	%r158, %r153, %r154, 18;
	mov.b64 	%rd295, {%r158, %r157};
	xor.b64  	%rd296, %rd294, %rd295;
	shf.l.wrap.b32 	%r159, %r153, %r154, 23;
	shf.l.wrap.b32 	%r160, %r154, %r153, 23;
	mov.b64 	%rd297, {%r160, %r159};
	xor.b64  	%rd298, %rd296, %rd297;
	add.s64 	%rd299, %rd293, %rd298;
	add.s64 	%rd300, %rd299, -6116909921290321640;
	add.s64 	%rd301, %rd300, %rd216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r161,%dummy}, %rd288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r162}, %rd288;
	}
	shf.r.wrap.b32 	%r163, %r162, %r161, 28;
	shf.r.wrap.b32 	%r164, %r161, %r162, 28;
	mov.b64 	%rd302, {%r164, %r163};
	shf.l.wrap.b32 	%r165, %r161, %r162, 30;
	shf.l.wrap.b32 	%r166, %r162, %r161, 30;
	mov.b64 	%rd303, {%r166, %r165};
	xor.b64  	%rd304, %rd302, %rd303;
	shf.l.wrap.b32 	%r167, %r161, %r162, 25;
	shf.l.wrap.b32 	%r168, %r162, %r161, 25;
	mov.b64 	%rd305, {%r168, %r167};
	xor.b64  	%rd306, %rd304, %rd305;
	and.b64  	%rd307, %rd288, %rd264;
	or.b64  	%rd308, %rd288, %rd264;
	and.b64  	%rd309, %rd308, %rd240;
	or.b64  	%rd310, %rd309, %rd307;
	add.s64 	%rd311, %rd310, %rd306;
	add.s64 	%rd312, %rd311, %rd300;
	xor.b64  	%rd313, %rd277, %rd253;
	and.b64  	%rd314, %rd301, %rd313;
	xor.b64  	%rd315, %rd314, %rd253;
	add.s64 	%rd316, %rd229, %rd315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r169,%dummy}, %rd301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r170}, %rd301;
	}
	shf.r.wrap.b32 	%r171, %r170, %r169, 14;
	shf.r.wrap.b32 	%r172, %r169, %r170, 14;
	mov.b64 	%rd317, {%r172, %r171};
	shf.r.wrap.b32 	%r173, %r170, %r169, 18;
	shf.r.wrap.b32 	%r174, %r169, %r170, 18;
	mov.b64 	%rd318, {%r174, %r173};
	xor.b64  	%rd319, %rd317, %rd318;
	shf.l.wrap.b32 	%r175, %r169, %r170, 23;
	shf.l.wrap.b32 	%r176, %r170, %r169, 23;
	mov.b64 	%rd320, {%r176, %r175};
	xor.b64  	%rd321, %rd319, %rd320;
	add.s64 	%rd322, %rd316, %rd321;
	add.s64 	%rd323, %rd322, 6343226172721267266;
	add.s64 	%rd324, %rd323, %rd240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd312;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 28;
	shf.r.wrap.b32 	%r180, %r177, %r178, 28;
	mov.b64 	%rd325, {%r180, %r179};
	shf.l.wrap.b32 	%r181, %r177, %r178, 30;
	shf.l.wrap.b32 	%r182, %r178, %r177, 30;
	mov.b64 	%rd326, {%r182, %r181};
	xor.b64  	%rd327, %rd325, %rd326;
	shf.l.wrap.b32 	%r183, %r177, %r178, 25;
	shf.l.wrap.b32 	%r184, %r178, %r177, 25;
	mov.b64 	%rd328, {%r184, %r183};
	xor.b64  	%rd329, %rd327, %rd328;
	and.b64  	%rd330, %rd312, %rd288;
	or.b64  	%rd331, %rd312, %rd288;
	and.b64  	%rd332, %rd331, %rd264;
	or.b64  	%rd333, %rd332, %rd330;
	add.s64 	%rd334, %rd333, %rd329;
	add.s64 	%rd335, %rd334, %rd323;
	xor.b64  	%rd336, %rd301, %rd277;
	and.b64  	%rd337, %rd324, %rd336;
	xor.b64  	%rd338, %rd337, %rd277;
	add.s64 	%rd339, %rd253, %rd338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r185,%dummy}, %rd324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r186}, %rd324;
	}
	shf.r.wrap.b32 	%r187, %r186, %r185, 14;
	shf.r.wrap.b32 	%r188, %r185, %r186, 14;
	mov.b64 	%rd340, {%r188, %r187};
	shf.r.wrap.b32 	%r189, %r186, %r185, 18;
	shf.r.wrap.b32 	%r190, %r185, %r186, 18;
	mov.b64 	%rd341, {%r190, %r189};
	xor.b64  	%rd342, %rd340, %rd341;
	shf.l.wrap.b32 	%r191, %r185, %r186, 23;
	shf.l.wrap.b32 	%r192, %r186, %r185, 23;
	mov.b64 	%rd343, {%r192, %r191};
	xor.b64  	%rd344, %rd342, %rd343;
	add.s64 	%rd345, %rd339, %rd344;
	add.s64 	%rd346, %rd345, 1334009975649890238;
	add.s64 	%rd347, %rd346, %rd264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r193,%dummy}, %rd335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r194}, %rd335;
	}
	shf.r.wrap.b32 	%r195, %r194, %r193, 28;
	shf.r.wrap.b32 	%r196, %r193, %r194, 28;
	mov.b64 	%rd348, {%r196, %r195};
	shf.l.wrap.b32 	%r197, %r193, %r194, 30;
	shf.l.wrap.b32 	%r198, %r194, %r193, 30;
	mov.b64 	%rd349, {%r198, %r197};
	xor.b64  	%rd350, %rd348, %rd349;
	shf.l.wrap.b32 	%r199, %r193, %r194, 25;
	shf.l.wrap.b32 	%r200, %r194, %r193, 25;
	mov.b64 	%rd351, {%r200, %r199};
	xor.b64  	%rd352, %rd350, %rd351;
	and.b64  	%rd353, %rd335, %rd312;
	or.b64  	%rd354, %rd335, %rd312;
	and.b64  	%rd355, %rd354, %rd288;
	or.b64  	%rd356, %rd355, %rd353;
	add.s64 	%rd357, %rd356, %rd352;
	add.s64 	%rd358, %rd357, %rd346;
	xor.b64  	%rd359, %rd324, %rd301;
	and.b64  	%rd360, %rd347, %rd359;
	xor.b64  	%rd361, %rd360, %rd301;
	add.s64 	%rd362, %rd277, %rd361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r201,%dummy}, %rd347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r202}, %rd347;
	}
	shf.r.wrap.b32 	%r203, %r202, %r201, 14;
	shf.r.wrap.b32 	%r204, %r201, %r202, 14;
	mov.b64 	%rd363, {%r204, %r203};
	shf.r.wrap.b32 	%r205, %r202, %r201, 18;
	shf.r.wrap.b32 	%r206, %r201, %r202, 18;
	mov.b64 	%rd364, {%r206, %r205};
	xor.b64  	%rd365, %rd363, %rd364;
	shf.l.wrap.b32 	%r207, %r201, %r202, 23;
	shf.l.wrap.b32 	%r208, %r202, %r201, 23;
	mov.b64 	%rd366, {%r208, %r207};
	xor.b64  	%rd367, %rd365, %rd366;
	add.s64 	%rd368, %rd362, %rd367;
	add.s64 	%rd369, %rd368, 2608012711638119052;
	add.s64 	%rd370, %rd369, %rd288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r209,%dummy}, %rd358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd358;
	}
	shf.r.wrap.b32 	%r211, %r210, %r209, 28;
	shf.r.wrap.b32 	%r212, %r209, %r210, 28;
	mov.b64 	%rd371, {%r212, %r211};
	shf.l.wrap.b32 	%r213, %r209, %r210, 30;
	shf.l.wrap.b32 	%r214, %r210, %r209, 30;
	mov.b64 	%rd372, {%r214, %r213};
	xor.b64  	%rd373, %rd371, %rd372;
	shf.l.wrap.b32 	%r215, %r209, %r210, 25;
	shf.l.wrap.b32 	%r216, %r210, %r209, 25;
	mov.b64 	%rd374, {%r216, %r215};
	xor.b64  	%rd375, %rd373, %rd374;
	and.b64  	%rd376, %rd358, %rd335;
	or.b64  	%rd377, %rd358, %rd335;
	and.b64  	%rd378, %rd377, %rd312;
	or.b64  	%rd379, %rd378, %rd376;
	add.s64 	%rd380, %rd379, %rd375;
	add.s64 	%rd381, %rd380, %rd369;
	xor.b64  	%rd382, %rd347, %rd324;
	and.b64  	%rd383, %rd370, %rd382;
	xor.b64  	%rd384, %rd383, %rd324;
	add.s64 	%rd385, %rd301, %rd384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r217,%dummy}, %rd370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd370;
	}
	shf.r.wrap.b32 	%r219, %r218, %r217, 14;
	shf.r.wrap.b32 	%r220, %r217, %r218, 14;
	mov.b64 	%rd386, {%r220, %r219};
	shf.r.wrap.b32 	%r221, %r218, %r217, 18;
	shf.r.wrap.b32 	%r222, %r217, %r218, 18;
	mov.b64 	%rd387, {%r222, %r221};
	xor.b64  	%rd388, %rd386, %rd387;
	shf.l.wrap.b32 	%r223, %r217, %r218, 23;
	shf.l.wrap.b32 	%r224, %r218, %r217, 23;
	mov.b64 	%rd389, {%r224, %r223};
	xor.b64  	%rd390, %rd388, %rd389;
	add.s64 	%rd391, %rd385, %rd390;
	add.s64 	%rd392, %rd391, 6128411473006802146;
	add.s64 	%rd393, %rd392, %rd312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r225,%dummy}, %rd381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r226}, %rd381;
	}
	shf.r.wrap.b32 	%r227, %r226, %r225, 28;
	shf.r.wrap.b32 	%r228, %r225, %r226, 28;
	mov.b64 	%rd394, {%r228, %r227};
	shf.l.wrap.b32 	%r229, %r225, %r226, 30;
	shf.l.wrap.b32 	%r230, %r226, %r225, 30;
	mov.b64 	%rd395, {%r230, %r229};
	xor.b64  	%rd396, %rd394, %rd395;
	shf.l.wrap.b32 	%r231, %r225, %r226, 25;
	shf.l.wrap.b32 	%r232, %r226, %r225, 25;
	mov.b64 	%rd397, {%r232, %r231};
	xor.b64  	%rd398, %rd396, %rd397;
	and.b64  	%rd399, %rd381, %rd358;
	or.b64  	%rd400, %rd381, %rd358;
	and.b64  	%rd401, %rd400, %rd335;
	or.b64  	%rd402, %rd401, %rd399;
	add.s64 	%rd403, %rd402, %rd398;
	add.s64 	%rd404, %rd403, %rd392;
	xor.b64  	%rd405, %rd370, %rd347;
	and.b64  	%rd406, %rd393, %rd405;
	xor.b64  	%rd407, %rd406, %rd347;
	add.s64 	%rd408, %rd324, %rd407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r233,%dummy}, %rd393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r234}, %rd393;
	}
	shf.r.wrap.b32 	%r235, %r234, %r233, 14;
	shf.r.wrap.b32 	%r236, %r233, %r234, 14;
	mov.b64 	%rd409, {%r236, %r235};
	shf.r.wrap.b32 	%r237, %r234, %r233, 18;
	shf.r.wrap.b32 	%r238, %r233, %r234, 18;
	mov.b64 	%rd410, {%r238, %r237};
	xor.b64  	%rd411, %rd409, %rd410;
	shf.l.wrap.b32 	%r239, %r233, %r234, 23;
	shf.l.wrap.b32 	%r240, %r234, %r233, 23;
	mov.b64 	%rd412, {%r240, %r239};
	xor.b64  	%rd413, %rd411, %rd412;
	add.s64 	%rd414, %rd408, %rd413;
	add.s64 	%rd415, %rd414, 8268148722764581231;
	add.s64 	%rd416, %rd415, %rd335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd404;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 28;
	shf.r.wrap.b32 	%r244, %r241, %r242, 28;
	mov.b64 	%rd417, {%r244, %r243};
	shf.l.wrap.b32 	%r245, %r241, %r242, 30;
	shf.l.wrap.b32 	%r246, %r242, %r241, 30;
	mov.b64 	%rd418, {%r246, %r245};
	xor.b64  	%rd419, %rd417, %rd418;
	shf.l.wrap.b32 	%r247, %r241, %r242, 25;
	shf.l.wrap.b32 	%r248, %r242, %r241, 25;
	mov.b64 	%rd420, {%r248, %r247};
	xor.b64  	%rd421, %rd419, %rd420;
	and.b64  	%rd422, %rd404, %rd381;
	or.b64  	%rd423, %rd404, %rd381;
	and.b64  	%rd424, %rd423, %rd358;
	or.b64  	%rd425, %rd424, %rd422;
	add.s64 	%rd426, %rd425, %rd421;
	add.s64 	%rd427, %rd426, %rd415;
	xor.b64  	%rd428, %rd393, %rd370;
	and.b64  	%rd429, %rd416, %rd428;
	xor.b64  	%rd430, %rd429, %rd370;
	add.s64 	%rd431, %rd347, %rd430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r249,%dummy}, %rd416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r250}, %rd416;
	}
	shf.r.wrap.b32 	%r251, %r250, %r249, 14;
	shf.r.wrap.b32 	%r252, %r249, %r250, 14;
	mov.b64 	%rd432, {%r252, %r251};
	shf.r.wrap.b32 	%r253, %r250, %r249, 18;
	shf.r.wrap.b32 	%r254, %r249, %r250, 18;
	mov.b64 	%rd433, {%r254, %r253};
	xor.b64  	%rd434, %rd432, %rd433;
	shf.l.wrap.b32 	%r255, %r249, %r250, 23;
	shf.l.wrap.b32 	%r256, %r250, %r249, 23;
	mov.b64 	%rd435, {%r256, %r255};
	xor.b64  	%rd436, %rd434, %rd435;
	add.s64 	%rd437, %rd431, %rd436;
	add.s64 	%rd438, %rd437, -9160688886553864527;
	add.s64 	%rd439, %rd438, %rd358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r257,%dummy}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r258}, %rd427;
	}
	shf.r.wrap.b32 	%r259, %r258, %r257, 28;
	shf.r.wrap.b32 	%r260, %r257, %r258, 28;
	mov.b64 	%rd440, {%r260, %r259};
	shf.l.wrap.b32 	%r261, %r257, %r258, 30;
	shf.l.wrap.b32 	%r262, %r258, %r257, 30;
	mov.b64 	%rd441, {%r262, %r261};
	xor.b64  	%rd442, %rd440, %rd441;
	shf.l.wrap.b32 	%r263, %r257, %r258, 25;
	shf.l.wrap.b32 	%r264, %r258, %r257, 25;
	mov.b64 	%rd443, {%r264, %r263};
	xor.b64  	%rd444, %rd442, %rd443;
	and.b64  	%rd445, %rd427, %rd404;
	or.b64  	%rd446, %rd427, %rd404;
	and.b64  	%rd447, %rd446, %rd381;
	or.b64  	%rd448, %rd447, %rd445;
	add.s64 	%rd449, %rd448, %rd444;
	add.s64 	%rd450, %rd449, %rd438;
	xor.b64  	%rd451, %rd416, %rd393;
	and.b64  	%rd452, %rd439, %rd451;
	xor.b64  	%rd453, %rd452, %rd393;
	add.s64 	%rd454, %rd370, %rd453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r265,%dummy}, %rd439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r266}, %rd439;
	}
	shf.r.wrap.b32 	%r267, %r266, %r265, 14;
	shf.r.wrap.b32 	%r268, %r265, %r266, 14;
	mov.b64 	%rd455, {%r268, %r267};
	shf.r.wrap.b32 	%r269, %r266, %r265, 18;
	shf.r.wrap.b32 	%r270, %r265, %r266, 18;
	mov.b64 	%rd456, {%r270, %r269};
	xor.b64  	%rd457, %rd455, %rd456;
	shf.l.wrap.b32 	%r271, %r265, %r266, 23;
	shf.l.wrap.b32 	%r272, %r266, %r265, 23;
	mov.b64 	%rd458, {%r272, %r271};
	xor.b64  	%rd459, %rd457, %rd458;
	add.s64 	%rd460, %rd454, %rd459;
	add.s64 	%rd461, %rd460, -7215885187991268811;
	add.s64 	%rd462, %rd461, %rd381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r273,%dummy}, %rd450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r274}, %rd450;
	}
	shf.r.wrap.b32 	%r275, %r274, %r273, 28;
	shf.r.wrap.b32 	%r276, %r273, %r274, 28;
	mov.b64 	%rd463, {%r276, %r275};
	shf.l.wrap.b32 	%r277, %r273, %r274, 30;
	shf.l.wrap.b32 	%r278, %r274, %r273, 30;
	mov.b64 	%rd464, {%r278, %r277};
	xor.b64  	%rd465, %rd463, %rd464;
	shf.l.wrap.b32 	%r279, %r273, %r274, 25;
	shf.l.wrap.b32 	%r280, %r274, %r273, 25;
	mov.b64 	%rd466, {%r280, %r279};
	xor.b64  	%rd467, %rd465, %rd466;
	and.b64  	%rd468, %rd450, %rd427;
	or.b64  	%rd469, %rd450, %rd427;
	and.b64  	%rd470, %rd469, %rd404;
	or.b64  	%rd471, %rd470, %rd468;
	add.s64 	%rd472, %rd471, %rd467;
	add.s64 	%rd473, %rd472, %rd461;
	xor.b64  	%rd474, %rd439, %rd416;
	and.b64  	%rd475, %rd462, %rd474;
	xor.b64  	%rd476, %rd475, %rd416;
	add.s64 	%rd477, %rd393, %rd476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd462;
	}
	shf.r.wrap.b32 	%r283, %r282, %r281, 14;
	shf.r.wrap.b32 	%r284, %r281, %r282, 14;
	mov.b64 	%rd478, {%r284, %r283};
	shf.r.wrap.b32 	%r285, %r282, %r281, 18;
	shf.r.wrap.b32 	%r286, %r281, %r282, 18;
	mov.b64 	%rd479, {%r286, %r285};
	xor.b64  	%rd480, %rd478, %rd479;
	shf.l.wrap.b32 	%r287, %r281, %r282, 23;
	shf.l.wrap.b32 	%r288, %r282, %r281, 23;
	mov.b64 	%rd481, {%r288, %r287};
	xor.b64  	%rd482, %rd480, %rd481;
	add.s64 	%rd483, %rd477, %rd482;
	add.s64 	%rd484, %rd483, -4495734319001032556;
	add.s64 	%rd485, %rd484, %rd404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd473;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 28;
	shf.r.wrap.b32 	%r292, %r289, %r290, 28;
	mov.b64 	%rd486, {%r292, %r291};
	shf.l.wrap.b32 	%r293, %r289, %r290, 30;
	shf.l.wrap.b32 	%r294, %r290, %r289, 30;
	mov.b64 	%rd487, {%r294, %r293};
	xor.b64  	%rd488, %rd486, %rd487;
	shf.l.wrap.b32 	%r295, %r289, %r290, 25;
	shf.l.wrap.b32 	%r296, %r290, %r289, 25;
	mov.b64 	%rd489, {%r296, %r295};
	xor.b64  	%rd490, %rd488, %rd489;
	and.b64  	%rd491, %rd473, %rd450;
	or.b64  	%rd492, %rd473, %rd450;
	and.b64  	%rd493, %rd492, %rd427;
	or.b64  	%rd494, %rd493, %rd491;
	add.s64 	%rd495, %rd494, %rd490;
	add.s64 	%rd496, %rd495, %rd484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r297,%dummy}, %rd1634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r298}, %rd1634;
	}
	shf.r.wrap.b32 	%r299, %r298, %r297, 8;
	shf.r.wrap.b32 	%r300, %r297, %r298, 8;
	mov.b64 	%rd497, {%r300, %r299};
	shf.r.wrap.b32 	%r301, %r298, %r297, 1;
	shf.r.wrap.b32 	%r302, %r297, %r298, 1;
	mov.b64 	%rd498, {%r302, %r301};
	xor.b64  	%rd499, %rd498, %rd497;
	shr.u64 	%rd500, %rd1634, 7;
	xor.b64  	%rd501, %rd499, %rd500;
	add.s64 	%rd502, %rd1635, %rd11;
	add.s64 	%rd1617, %rd502, %rd501;
	add.s64 	%rd503, %rd1617, %rd416;
	xor.b64  	%rd504, %rd462, %rd439;
	and.b64  	%rd505, %rd485, %rd504;
	xor.b64  	%rd506, %rd505, %rd439;
	add.s64 	%rd507, %rd503, %rd506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r303,%dummy}, %rd485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r304}, %rd485;
	}
	shf.r.wrap.b32 	%r305, %r304, %r303, 14;
	shf.r.wrap.b32 	%r306, %r303, %r304, 14;
	mov.b64 	%rd508, {%r306, %r305};
	shf.r.wrap.b32 	%r307, %r304, %r303, 18;
	shf.r.wrap.b32 	%r308, %r303, %r304, 18;
	mov.b64 	%rd509, {%r308, %r307};
	xor.b64  	%rd510, %rd508, %rd509;
	shf.l.wrap.b32 	%r309, %r303, %r304, 23;
	shf.l.wrap.b32 	%r310, %r304, %r303, 23;
	mov.b64 	%rd511, {%r310, %r309};
	xor.b64  	%rd512, %rd510, %rd511;
	add.s64 	%rd513, %rd507, %rd512;
	add.s64 	%rd514, %rd513, -1973867731355612462;
	add.s64 	%rd515, %rd514, %rd427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r311,%dummy}, %rd496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r312}, %rd496;
	}
	shf.r.wrap.b32 	%r313, %r312, %r311, 28;
	shf.r.wrap.b32 	%r314, %r311, %r312, 28;
	mov.b64 	%rd516, {%r314, %r313};
	shf.l.wrap.b32 	%r315, %r311, %r312, 30;
	shf.l.wrap.b32 	%r316, %r312, %r311, 30;
	mov.b64 	%rd517, {%r316, %r315};
	xor.b64  	%rd518, %rd516, %rd517;
	shf.l.wrap.b32 	%r317, %r311, %r312, 25;
	shf.l.wrap.b32 	%r318, %r312, %r311, 25;
	mov.b64 	%rd519, {%r318, %r317};
	xor.b64  	%rd520, %rd518, %rd519;
	and.b64  	%rd521, %rd496, %rd473;
	or.b64  	%rd522, %rd496, %rd473;
	and.b64  	%rd523, %rd522, %rd450;
	or.b64  	%rd524, %rd523, %rd521;
	add.s64 	%rd525, %rd524, %rd520;
	add.s64 	%rd526, %rd525, %rd514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd1633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd1633;
	}
	shf.r.wrap.b32 	%r321, %r320, %r319, 8;
	shf.r.wrap.b32 	%r322, %r319, %r320, 8;
	mov.b64 	%rd527, {%r322, %r321};
	shf.r.wrap.b32 	%r323, %r320, %r319, 1;
	shf.r.wrap.b32 	%r324, %r319, %r320, 1;
	mov.b64 	%rd528, {%r324, %r323};
	xor.b64  	%rd529, %rd528, %rd527;
	shr.u64 	%rd530, %rd1633, 7;
	xor.b64  	%rd531, %rd529, %rd530;
	add.s64 	%rd532, %rd13, %rd1634;
	add.s64 	%rd1618, %rd532, %rd531;
	add.s64 	%rd533, %rd1618, %rd439;
	xor.b64  	%rd534, %rd485, %rd462;
	and.b64  	%rd535, %rd515, %rd534;
	xor.b64  	%rd536, %rd535, %rd462;
	add.s64 	%rd537, %rd533, %rd536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd515;
	}
	shf.r.wrap.b32 	%r327, %r326, %r325, 14;
	shf.r.wrap.b32 	%r328, %r325, %r326, 14;
	mov.b64 	%rd538, {%r328, %r327};
	shf.r.wrap.b32 	%r329, %r326, %r325, 18;
	shf.r.wrap.b32 	%r330, %r325, %r326, 18;
	mov.b64 	%rd539, {%r330, %r329};
	xor.b64  	%rd540, %rd538, %rd539;
	shf.l.wrap.b32 	%r331, %r325, %r326, 23;
	shf.l.wrap.b32 	%r332, %r326, %r325, 23;
	mov.b64 	%rd541, {%r332, %r331};
	xor.b64  	%rd542, %rd540, %rd541;
	add.s64 	%rd543, %rd537, %rd542;
	add.s64 	%rd544, %rd543, -1171420211273849373;
	add.s64 	%rd545, %rd544, %rd450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r333,%dummy}, %rd526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r334}, %rd526;
	}
	shf.r.wrap.b32 	%r335, %r334, %r333, 28;
	shf.r.wrap.b32 	%r336, %r333, %r334, 28;
	mov.b64 	%rd546, {%r336, %r335};
	shf.l.wrap.b32 	%r337, %r333, %r334, 30;
	shf.l.wrap.b32 	%r338, %r334, %r333, 30;
	mov.b64 	%rd547, {%r338, %r337};
	xor.b64  	%rd548, %rd546, %rd547;
	shf.l.wrap.b32 	%r339, %r333, %r334, 25;
	shf.l.wrap.b32 	%r340, %r334, %r333, 25;
	mov.b64 	%rd549, {%r340, %r339};
	xor.b64  	%rd550, %rd548, %rd549;
	and.b64  	%rd551, %rd526, %rd496;
	or.b64  	%rd552, %rd526, %rd496;
	and.b64  	%rd553, %rd552, %rd473;
	or.b64  	%rd554, %rd553, %rd551;
	add.s64 	%rd555, %rd554, %rd550;
	add.s64 	%rd556, %rd555, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r341,%dummy}, %rd1617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r342}, %rd1617;
	}
	shf.r.wrap.b32 	%r343, %r342, %r341, 19;
	shf.r.wrap.b32 	%r344, %r341, %r342, 19;
	mov.b64 	%rd557, {%r344, %r343};
	shf.l.wrap.b32 	%r345, %r341, %r342, 3;
	shf.l.wrap.b32 	%r346, %r342, %r341, 3;
	mov.b64 	%rd558, {%r346, %r345};
	xor.b64  	%rd559, %rd557, %rd558;
	shr.u64 	%rd560, %rd1617, 6;
	xor.b64  	%rd561, %rd559, %rd560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd1632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd1632;
	}
	shf.r.wrap.b32 	%r349, %r348, %r347, 8;
	shf.r.wrap.b32 	%r350, %r347, %r348, 8;
	mov.b64 	%rd562, {%r350, %r349};
	shf.r.wrap.b32 	%r351, %r348, %r347, 1;
	shf.r.wrap.b32 	%r352, %r347, %r348, 1;
	mov.b64 	%rd563, {%r352, %r351};
	xor.b64  	%rd564, %rd563, %rd562;
	shr.u64 	%rd565, %rd1632, 7;
	xor.b64  	%rd566, %rd564, %rd565;
	add.s64 	%rd567, %rd561, %rd1633;
	add.s64 	%rd1614, %rd567, %rd566;
	add.s64 	%rd568, %rd1614, %rd462;
	xor.b64  	%rd569, %rd515, %rd485;
	and.b64  	%rd570, %rd545, %rd569;
	xor.b64  	%rd571, %rd570, %rd485;
	add.s64 	%rd572, %rd568, %rd571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r354}, %rd545;
	}
	shf.r.wrap.b32 	%r355, %r354, %r353, 14;
	shf.r.wrap.b32 	%r356, %r353, %r354, 14;
	mov.b64 	%rd573, {%r356, %r355};
	shf.r.wrap.b32 	%r357, %r354, %r353, 18;
	shf.r.wrap.b32 	%r358, %r353, %r354, 18;
	mov.b64 	%rd574, {%r358, %r357};
	xor.b64  	%rd575, %rd573, %rd574;
	shf.l.wrap.b32 	%r359, %r353, %r354, 23;
	shf.l.wrap.b32 	%r360, %r354, %r353, 23;
	mov.b64 	%rd576, {%r360, %r359};
	xor.b64  	%rd577, %rd575, %rd576;
	add.s64 	%rd578, %rd572, %rd577;
	add.s64 	%rd579, %rd578, 1135362057144423861;
	add.s64 	%rd580, %rd579, %rd473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd556;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 28;
	shf.r.wrap.b32 	%r364, %r361, %r362, 28;
	mov.b64 	%rd581, {%r364, %r363};
	shf.l.wrap.b32 	%r365, %r361, %r362, 30;
	shf.l.wrap.b32 	%r366, %r362, %r361, 30;
	mov.b64 	%rd582, {%r366, %r365};
	xor.b64  	%rd583, %rd581, %rd582;
	shf.l.wrap.b32 	%r367, %r361, %r362, 25;
	shf.l.wrap.b32 	%r368, %r362, %r361, 25;
	mov.b64 	%rd584, {%r368, %r367};
	xor.b64  	%rd585, %rd583, %rd584;
	and.b64  	%rd586, %rd556, %rd526;
	or.b64  	%rd587, %rd556, %rd526;
	and.b64  	%rd588, %rd587, %rd496;
	or.b64  	%rd589, %rd588, %rd586;
	add.s64 	%rd590, %rd589, %rd585;
	add.s64 	%rd591, %rd590, %rd579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r369,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r370}, %rd1618;
	}
	shf.r.wrap.b32 	%r371, %r370, %r369, 19;
	shf.r.wrap.b32 	%r372, %r369, %r370, 19;
	mov.b64 	%rd592, {%r372, %r371};
	shf.l.wrap.b32 	%r373, %r369, %r370, 3;
	shf.l.wrap.b32 	%r374, %r370, %r369, 3;
	mov.b64 	%rd593, {%r374, %r373};
	xor.b64  	%rd594, %rd592, %rd593;
	shr.u64 	%rd595, %rd1618, 6;
	xor.b64  	%rd596, %rd594, %rd595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r375,%dummy}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r376}, %rd1631;
	}
	shf.r.wrap.b32 	%r377, %r376, %r375, 8;
	shf.r.wrap.b32 	%r378, %r375, %r376, 8;
	mov.b64 	%rd597, {%r378, %r377};
	shf.r.wrap.b32 	%r379, %r376, %r375, 1;
	shf.r.wrap.b32 	%r380, %r375, %r376, 1;
	mov.b64 	%rd598, {%r380, %r379};
	xor.b64  	%rd599, %rd598, %rd597;
	shr.u64 	%rd600, %rd1631, 7;
	xor.b64  	%rd601, %rd599, %rd600;
	add.s64 	%rd602, %rd596, %rd1632;
	add.s64 	%rd1612, %rd602, %rd601;
	add.s64 	%rd603, %rd1612, %rd485;
	xor.b64  	%rd604, %rd545, %rd515;
	and.b64  	%rd605, %rd580, %rd604;
	xor.b64  	%rd606, %rd605, %rd515;
	add.s64 	%rd607, %rd603, %rd606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r381,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r382}, %rd580;
	}
	shf.r.wrap.b32 	%r383, %r382, %r381, 14;
	shf.r.wrap.b32 	%r384, %r381, %r382, 14;
	mov.b64 	%rd608, {%r384, %r383};
	shf.r.wrap.b32 	%r385, %r382, %r381, 18;
	shf.r.wrap.b32 	%r386, %r381, %r382, 18;
	mov.b64 	%rd609, {%r386, %r385};
	xor.b64  	%rd610, %rd608, %rd609;
	shf.l.wrap.b32 	%r387, %r381, %r382, 23;
	shf.l.wrap.b32 	%r388, %r382, %r381, 23;
	mov.b64 	%rd611, {%r388, %r387};
	xor.b64  	%rd612, %rd610, %rd611;
	add.s64 	%rd613, %rd607, %rd612;
	add.s64 	%rd614, %rd613, 2597628984639134821;
	add.s64 	%rd615, %rd614, %rd496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r390}, %rd591;
	}
	shf.r.wrap.b32 	%r391, %r390, %r389, 28;
	shf.r.wrap.b32 	%r392, %r389, %r390, 28;
	mov.b64 	%rd616, {%r392, %r391};
	shf.l.wrap.b32 	%r393, %r389, %r390, 30;
	shf.l.wrap.b32 	%r394, %r390, %r389, 30;
	mov.b64 	%rd617, {%r394, %r393};
	xor.b64  	%rd618, %rd616, %rd617;
	shf.l.wrap.b32 	%r395, %r389, %r390, 25;
	shf.l.wrap.b32 	%r396, %r390, %r389, 25;
	mov.b64 	%rd619, {%r396, %r395};
	xor.b64  	%rd620, %rd618, %rd619;
	and.b64  	%rd621, %rd591, %rd556;
	or.b64  	%rd622, %rd591, %rd556;
	and.b64  	%rd623, %rd622, %rd526;
	or.b64  	%rd624, %rd623, %rd621;
	add.s64 	%rd625, %rd624, %rd620;
	add.s64 	%rd626, %rd625, %rd614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd1614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd1614;
	}
	shf.r.wrap.b32 	%r399, %r398, %r397, 19;
	shf.r.wrap.b32 	%r400, %r397, %r398, 19;
	mov.b64 	%rd627, {%r400, %r399};
	shf.l.wrap.b32 	%r401, %r397, %r398, 3;
	shf.l.wrap.b32 	%r402, %r398, %r397, 3;
	mov.b64 	%rd628, {%r402, %r401};
	xor.b64  	%rd629, %rd627, %rd628;
	shr.u64 	%rd630, %rd1614, 6;
	xor.b64  	%rd631, %rd629, %rd630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd1630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd1630;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 8;
	shf.r.wrap.b32 	%r406, %r403, %r404, 8;
	mov.b64 	%rd632, {%r406, %r405};
	shf.r.wrap.b32 	%r407, %r404, %r403, 1;
	shf.r.wrap.b32 	%r408, %r403, %r404, 1;
	mov.b64 	%rd633, {%r408, %r407};
	xor.b64  	%rd634, %rd633, %rd632;
	shr.u64 	%rd635, %rd1630, 7;
	xor.b64  	%rd636, %rd634, %rd635;
	add.s64 	%rd637, %rd631, %rd1631;
	add.s64 	%rd1610, %rd637, %rd636;
	add.s64 	%rd638, %rd1610, %rd515;
	xor.b64  	%rd639, %rd580, %rd545;
	and.b64  	%rd640, %rd615, %rd639;
	xor.b64  	%rd641, %rd640, %rd545;
	add.s64 	%rd642, %rd638, %rd641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd615;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 14;
	shf.r.wrap.b32 	%r412, %r409, %r410, 14;
	mov.b64 	%rd643, {%r412, %r411};
	shf.r.wrap.b32 	%r413, %r410, %r409, 18;
	shf.r.wrap.b32 	%r414, %r409, %r410, 18;
	mov.b64 	%rd644, {%r414, %r413};
	xor.b64  	%rd645, %rd643, %rd644;
	shf.l.wrap.b32 	%r415, %r409, %r410, 23;
	shf.l.wrap.b32 	%r416, %r410, %r409, 23;
	mov.b64 	%rd646, {%r416, %r415};
	xor.b64  	%rd647, %rd645, %rd646;
	add.s64 	%rd648, %rd642, %rd647;
	add.s64 	%rd649, %rd648, 3308224258029322869;
	add.s64 	%rd650, %rd649, %rd526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r417,%dummy}, %rd626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r418}, %rd626;
	}
	shf.r.wrap.b32 	%r419, %r418, %r417, 28;
	shf.r.wrap.b32 	%r420, %r417, %r418, 28;
	mov.b64 	%rd651, {%r420, %r419};
	shf.l.wrap.b32 	%r421, %r417, %r418, 30;
	shf.l.wrap.b32 	%r422, %r418, %r417, 30;
	mov.b64 	%rd652, {%r422, %r421};
	xor.b64  	%rd653, %rd651, %rd652;
	shf.l.wrap.b32 	%r423, %r417, %r418, 25;
	shf.l.wrap.b32 	%r424, %r418, %r417, 25;
	mov.b64 	%rd654, {%r424, %r423};
	xor.b64  	%rd655, %rd653, %rd654;
	and.b64  	%rd656, %rd626, %rd591;
	or.b64  	%rd657, %rd626, %rd591;
	and.b64  	%rd658, %rd657, %rd556;
	or.b64  	%rd659, %rd658, %rd656;
	add.s64 	%rd660, %rd659, %rd655;
	add.s64 	%rd661, %rd660, %rd649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r425,%dummy}, %rd1612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r426}, %rd1612;
	}
	shf.r.wrap.b32 	%r427, %r426, %r425, 19;
	shf.r.wrap.b32 	%r428, %r425, %r426, 19;
	mov.b64 	%rd662, {%r428, %r427};
	shf.l.wrap.b32 	%r429, %r425, %r426, 3;
	shf.l.wrap.b32 	%r430, %r426, %r425, 3;
	mov.b64 	%rd663, {%r430, %r429};
	xor.b64  	%rd664, %rd662, %rd663;
	shr.u64 	%rd665, %rd1612, 6;
	xor.b64  	%rd666, %rd664, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd1629;
	}
	shf.r.wrap.b32 	%r433, %r432, %r431, 8;
	shf.r.wrap.b32 	%r434, %r431, %r432, 8;
	mov.b64 	%rd667, {%r434, %r433};
	shf.r.wrap.b32 	%r435, %r432, %r431, 1;
	shf.r.wrap.b32 	%r436, %r431, %r432, 1;
	mov.b64 	%rd668, {%r436, %r435};
	xor.b64  	%rd669, %rd668, %rd667;
	shr.u64 	%rd670, %rd1629, 7;
	xor.b64  	%rd671, %rd669, %rd670;
	add.s64 	%rd672, %rd666, %rd1630;
	add.s64 	%rd1608, %rd672, %rd671;
	add.s64 	%rd673, %rd1608, %rd545;
	xor.b64  	%rd674, %rd615, %rd580;
	and.b64  	%rd675, %rd650, %rd674;
	xor.b64  	%rd676, %rd675, %rd580;
	add.s64 	%rd677, %rd673, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r437,%dummy}, %rd650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r438}, %rd650;
	}
	shf.r.wrap.b32 	%r439, %r438, %r437, 14;
	shf.r.wrap.b32 	%r440, %r437, %r438, 14;
	mov.b64 	%rd678, {%r440, %r439};
	shf.r.wrap.b32 	%r441, %r438, %r437, 18;
	shf.r.wrap.b32 	%r442, %r437, %r438, 18;
	mov.b64 	%rd679, {%r442, %r441};
	xor.b64  	%rd680, %rd678, %rd679;
	shf.l.wrap.b32 	%r443, %r437, %r438, 23;
	shf.l.wrap.b32 	%r444, %r438, %r437, 23;
	mov.b64 	%rd681, {%r444, %r443};
	xor.b64  	%rd682, %rd680, %rd681;
	add.s64 	%rd683, %rd677, %rd682;
	add.s64 	%rd684, %rd683, 5365058923640841347;
	add.s64 	%rd685, %rd684, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r445,%dummy}, %rd661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r446}, %rd661;
	}
	shf.r.wrap.b32 	%r447, %r446, %r445, 28;
	shf.r.wrap.b32 	%r448, %r445, %r446, 28;
	mov.b64 	%rd686, {%r448, %r447};
	shf.l.wrap.b32 	%r449, %r445, %r446, 30;
	shf.l.wrap.b32 	%r450, %r446, %r445, 30;
	mov.b64 	%rd687, {%r450, %r449};
	xor.b64  	%rd688, %rd686, %rd687;
	shf.l.wrap.b32 	%r451, %r445, %r446, 25;
	shf.l.wrap.b32 	%r452, %r446, %r445, 25;
	mov.b64 	%rd689, {%r452, %r451};
	xor.b64  	%rd690, %rd688, %rd689;
	and.b64  	%rd691, %rd661, %rd626;
	or.b64  	%rd692, %rd661, %rd626;
	and.b64  	%rd693, %rd692, %rd591;
	or.b64  	%rd694, %rd693, %rd691;
	add.s64 	%rd695, %rd694, %rd690;
	add.s64 	%rd696, %rd695, %rd684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r453,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r454}, %rd1610;
	}
	shf.r.wrap.b32 	%r455, %r454, %r453, 19;
	shf.r.wrap.b32 	%r456, %r453, %r454, 19;
	mov.b64 	%rd697, {%r456, %r455};
	shf.l.wrap.b32 	%r457, %r453, %r454, 3;
	shf.l.wrap.b32 	%r458, %r454, %r453, 3;
	mov.b64 	%rd698, {%r458, %r457};
	xor.b64  	%rd699, %rd697, %rd698;
	shr.u64 	%rd700, %rd1610, 6;
	xor.b64  	%rd701, %rd699, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd1628;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 8;
	shf.r.wrap.b32 	%r462, %r459, %r460, 8;
	mov.b64 	%rd702, {%r462, %r461};
	shf.r.wrap.b32 	%r463, %r460, %r459, 1;
	shf.r.wrap.b32 	%r464, %r459, %r460, 1;
	mov.b64 	%rd703, {%r464, %r463};
	xor.b64  	%rd704, %rd703, %rd702;
	shr.u64 	%rd705, %rd1628, 7;
	xor.b64  	%rd706, %rd704, %rd705;
	add.s64 	%rd707, %rd701, %rd1629;
	add.s64 	%rd708, %rd707, %rd706;
	add.s64 	%rd1606, %rd708, 512;
	add.s64 	%rd709, %rd1606, %rd580;
	xor.b64  	%rd710, %rd650, %rd615;
	and.b64  	%rd711, %rd685, %rd710;
	xor.b64  	%rd712, %rd711, %rd615;
	add.s64 	%rd713, %rd709, %rd712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r465,%dummy}, %rd685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r466}, %rd685;
	}
	shf.r.wrap.b32 	%r467, %r466, %r465, 14;
	shf.r.wrap.b32 	%r468, %r465, %r466, 14;
	mov.b64 	%rd714, {%r468, %r467};
	shf.r.wrap.b32 	%r469, %r466, %r465, 18;
	shf.r.wrap.b32 	%r470, %r465, %r466, 18;
	mov.b64 	%rd715, {%r470, %r469};
	xor.b64  	%rd716, %rd714, %rd715;
	shf.l.wrap.b32 	%r471, %r465, %r466, 23;
	shf.l.wrap.b32 	%r472, %r466, %r465, 23;
	mov.b64 	%rd717, {%r472, %r471};
	xor.b64  	%rd718, %rd716, %rd717;
	add.s64 	%rd719, %rd713, %rd718;
	add.s64 	%rd720, %rd719, 6679025012923562964;
	add.s64 	%rd721, %rd720, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd696;
	}
	shf.r.wrap.b32 	%r475, %r474, %r473, 28;
	shf.r.wrap.b32 	%r476, %r473, %r474, 28;
	mov.b64 	%rd722, {%r476, %r475};
	shf.l.wrap.b32 	%r477, %r473, %r474, 30;
	shf.l.wrap.b32 	%r478, %r474, %r473, 30;
	mov.b64 	%rd723, {%r478, %r477};
	xor.b64  	%rd724, %rd722, %rd723;
	shf.l.wrap.b32 	%r479, %r473, %r474, 25;
	shf.l.wrap.b32 	%r480, %r474, %r473, 25;
	mov.b64 	%rd725, {%r480, %r479};
	xor.b64  	%rd726, %rd724, %rd725;
	and.b64  	%rd727, %rd696, %rd661;
	or.b64  	%rd728, %rd696, %rd661;
	and.b64  	%rd729, %rd728, %rd626;
	or.b64  	%rd730, %rd729, %rd727;
	add.s64 	%rd731, %rd730, %rd726;
	add.s64 	%rd732, %rd731, %rd720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r481,%dummy}, %rd1608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd1608;
	}
	shf.r.wrap.b32 	%r483, %r482, %r481, 19;
	shf.r.wrap.b32 	%r484, %r481, %r482, 19;
	mov.b64 	%rd733, {%r484, %r483};
	shf.l.wrap.b32 	%r485, %r481, %r482, 3;
	shf.l.wrap.b32 	%r486, %r482, %r481, 3;
	mov.b64 	%rd734, {%r486, %r485};
	xor.b64  	%rd735, %rd733, %rd734;
	shr.u64 	%rd736, %rd1608, 6;
	xor.b64  	%rd737, %rd735, %rd736;
	add.s64 	%rd738, %rd737, %rd1628;
	add.s64 	%rd739, %rd738, %rd1617;
	add.s64 	%rd1605, %rd739, %rd14;
	add.s64 	%rd740, %rd1605, %rd615;
	xor.b64  	%rd741, %rd685, %rd650;
	and.b64  	%rd742, %rd721, %rd741;
	xor.b64  	%rd743, %rd742, %rd650;
	add.s64 	%rd744, %rd740, %rd743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r487,%dummy}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r488}, %rd721;
	}
	shf.r.wrap.b32 	%r489, %r488, %r487, 14;
	shf.r.wrap.b32 	%r490, %r487, %r488, 14;
	mov.b64 	%rd745, {%r490, %r489};
	shf.r.wrap.b32 	%r491, %r488, %r487, 18;
	shf.r.wrap.b32 	%r492, %r487, %r488, 18;
	mov.b64 	%rd746, {%r492, %r491};
	xor.b64  	%rd747, %rd745, %rd746;
	shf.l.wrap.b32 	%r493, %r487, %r488, 23;
	shf.l.wrap.b32 	%r494, %r488, %r487, 23;
	mov.b64 	%rd748, {%r494, %r493};
	xor.b64  	%rd749, %rd747, %rd748;
	add.s64 	%rd750, %rd744, %rd749;
	add.s64 	%rd751, %rd750, 8573033837759648693;
	add.s64 	%rd752, %rd751, %rd626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r495,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd732;
	}
	shf.r.wrap.b32 	%r497, %r496, %r495, 28;
	shf.r.wrap.b32 	%r498, %r495, %r496, 28;
	mov.b64 	%rd753, {%r498, %r497};
	shf.l.wrap.b32 	%r499, %r495, %r496, 30;
	shf.l.wrap.b32 	%r500, %r496, %r495, 30;
	mov.b64 	%rd754, {%r500, %r499};
	xor.b64  	%rd755, %rd753, %rd754;
	shf.l.wrap.b32 	%r501, %r495, %r496, 25;
	shf.l.wrap.b32 	%r502, %r496, %r495, 25;
	mov.b64 	%rd756, {%r502, %r501};
	xor.b64  	%rd757, %rd755, %rd756;
	and.b64  	%rd758, %rd732, %rd696;
	or.b64  	%rd759, %rd732, %rd696;
	and.b64  	%rd760, %rd759, %rd661;
	or.b64  	%rd761, %rd760, %rd758;
	add.s64 	%rd762, %rd761, %rd757;
	add.s64 	%rd763, %rd762, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd1606;
	}
	shf.r.wrap.b32 	%r505, %r504, %r503, 19;
	shf.r.wrap.b32 	%r506, %r503, %r504, 19;
	mov.b64 	%rd764, {%r506, %r505};
	shf.l.wrap.b32 	%r507, %r503, %r504, 3;
	shf.l.wrap.b32 	%r508, %r504, %r503, 3;
	mov.b64 	%rd765, {%r508, %r507};
	xor.b64  	%rd766, %rd764, %rd765;
	shr.u64 	%rd767, %rd1606, 6;
	xor.b64  	%rd768, %rd766, %rd767;
	add.s64 	%rd769, %rd15, %rd1618;
	add.s64 	%rd1604, %rd769, %rd768;
	add.s64 	%rd770, %rd1604, %rd650;
	xor.b64  	%rd771, %rd721, %rd685;
	and.b64  	%rd772, %rd752, %rd771;
	xor.b64  	%rd773, %rd772, %rd685;
	add.s64 	%rd774, %rd770, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r509,%dummy}, %rd752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r510}, %rd752;
	}
	shf.r.wrap.b32 	%r511, %r510, %r509, 14;
	shf.r.wrap.b32 	%r512, %r509, %r510, 14;
	mov.b64 	%rd775, {%r512, %r511};
	shf.r.wrap.b32 	%r513, %r510, %r509, 18;
	shf.r.wrap.b32 	%r514, %r509, %r510, 18;
	mov.b64 	%rd776, {%r514, %r513};
	xor.b64  	%rd777, %rd775, %rd776;
	shf.l.wrap.b32 	%r515, %r509, %r510, 23;
	shf.l.wrap.b32 	%r516, %r510, %r509, 23;
	mov.b64 	%rd778, {%r516, %r515};
	xor.b64  	%rd779, %rd777, %rd778;
	add.s64 	%rd780, %rd774, %rd779;
	add.s64 	%rd781, %rd780, -7476448914759557205;
	add.s64 	%rd782, %rd781, %rd661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r518}, %rd763;
	}
	shf.r.wrap.b32 	%r519, %r518, %r517, 28;
	shf.r.wrap.b32 	%r520, %r517, %r518, 28;
	mov.b64 	%rd783, {%r520, %r519};
	shf.l.wrap.b32 	%r521, %r517, %r518, 30;
	shf.l.wrap.b32 	%r522, %r518, %r517, 30;
	mov.b64 	%rd784, {%r522, %r521};
	xor.b64  	%rd785, %rd783, %rd784;
	shf.l.wrap.b32 	%r523, %r517, %r518, 25;
	shf.l.wrap.b32 	%r524, %r518, %r517, 25;
	mov.b64 	%rd786, {%r524, %r523};
	xor.b64  	%rd787, %rd785, %rd786;
	and.b64  	%rd788, %rd763, %rd732;
	or.b64  	%rd789, %rd763, %rd732;
	and.b64  	%rd790, %rd789, %rd696;
	or.b64  	%rd791, %rd790, %rd788;
	add.s64 	%rd792, %rd791, %rd787;
	add.s64 	%rd793, %rd792, %rd781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd1605;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 19;
	shf.r.wrap.b32 	%r528, %r525, %r526, 19;
	mov.b64 	%rd794, {%r528, %r527};
	shf.l.wrap.b32 	%r529, %r525, %r526, 3;
	shf.l.wrap.b32 	%r530, %r526, %r525, 3;
	mov.b64 	%rd795, {%r530, %r529};
	xor.b64  	%rd796, %rd794, %rd795;
	shr.u64 	%rd797, %rd1605, 6;
	xor.b64  	%rd798, %rd796, %rd797;
	add.s64 	%rd799, %rd1614, %rd12;
	add.s64 	%rd1616, %rd799, %rd798;
	add.s64 	%rd800, %rd1616, %rd685;
	xor.b64  	%rd801, %rd752, %rd721;
	and.b64  	%rd802, %rd782, %rd801;
	xor.b64  	%rd803, %rd802, %rd721;
	add.s64 	%rd804, %rd800, %rd803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd782;
	}
	shf.r.wrap.b32 	%r533, %r532, %r531, 14;
	shf.r.wrap.b32 	%r534, %r531, %r532, 14;
	mov.b64 	%rd805, {%r534, %r533};
	shf.r.wrap.b32 	%r535, %r532, %r531, 18;
	shf.r.wrap.b32 	%r536, %r531, %r532, 18;
	mov.b64 	%rd806, {%r536, %r535};
	xor.b64  	%rd807, %rd805, %rd806;
	shf.l.wrap.b32 	%r537, %r531, %r532, 23;
	shf.l.wrap.b32 	%r538, %r532, %r531, 23;
	mov.b64 	%rd808, {%r538, %r537};
	xor.b64  	%rd809, %rd807, %rd808;
	add.s64 	%rd810, %rd804, %rd809;
	add.s64 	%rd811, %rd810, -6327057829258317296;
	add.s64 	%rd812, %rd811, %rd696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r539,%dummy}, %rd793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd793;
	}
	shf.r.wrap.b32 	%r541, %r540, %r539, 28;
	shf.r.wrap.b32 	%r542, %r539, %r540, 28;
	mov.b64 	%rd813, {%r542, %r541};
	shf.l.wrap.b32 	%r543, %r539, %r540, 30;
	shf.l.wrap.b32 	%r544, %r540, %r539, 30;
	mov.b64 	%rd814, {%r544, %r543};
	xor.b64  	%rd815, %rd813, %rd814;
	shf.l.wrap.b32 	%r545, %r539, %r540, 25;
	shf.l.wrap.b32 	%r546, %r540, %r539, 25;
	mov.b64 	%rd816, {%r546, %r545};
	xor.b64  	%rd817, %rd815, %rd816;
	and.b64  	%rd818, %rd793, %rd763;
	or.b64  	%rd819, %rd793, %rd763;
	and.b64  	%rd820, %rd819, %rd732;
	or.b64  	%rd821, %rd820, %rd818;
	add.s64 	%rd822, %rd821, %rd817;
	add.s64 	%rd823, %rd822, %rd811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd1604;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 19;
	shf.r.wrap.b32 	%r550, %r547, %r548, 19;
	mov.b64 	%rd824, {%r550, %r549};
	shf.l.wrap.b32 	%r551, %r547, %r548, 3;
	shf.l.wrap.b32 	%r552, %r548, %r547, 3;
	mov.b64 	%rd825, {%r552, %r551};
	xor.b64  	%rd826, %rd824, %rd825;
	shr.u64 	%rd827, %rd1604, 6;
	xor.b64  	%rd828, %rd826, %rd827;
	add.s64 	%rd829, %rd1612, %rd12;
	add.s64 	%rd1613, %rd829, %rd828;
	add.s64 	%rd830, %rd1613, %rd721;
	xor.b64  	%rd831, %rd782, %rd752;
	and.b64  	%rd832, %rd812, %rd831;
	xor.b64  	%rd833, %rd832, %rd752;
	add.s64 	%rd834, %rd830, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd812;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 14;
	shf.r.wrap.b32 	%r556, %r553, %r554, 14;
	mov.b64 	%rd835, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 18;
	shf.r.wrap.b32 	%r558, %r553, %r554, 18;
	mov.b64 	%rd836, {%r558, %r557};
	xor.b64  	%rd837, %rd835, %rd836;
	shf.l.wrap.b32 	%r559, %r553, %r554, 23;
	shf.l.wrap.b32 	%r560, %r554, %r553, 23;
	mov.b64 	%rd838, {%r560, %r559};
	xor.b64  	%rd839, %rd837, %rd838;
	add.s64 	%rd840, %rd834, %rd839;
	add.s64 	%rd841, %rd840, -5763719355590565569;
	add.s64 	%rd842, %rd841, %rd732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd823;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 28;
	shf.r.wrap.b32 	%r564, %r561, %r562, 28;
	mov.b64 	%rd843, {%r564, %r563};
	shf.l.wrap.b32 	%r565, %r561, %r562, 30;
	shf.l.wrap.b32 	%r566, %r562, %r561, 30;
	mov.b64 	%rd844, {%r566, %r565};
	xor.b64  	%rd845, %rd843, %rd844;
	shf.l.wrap.b32 	%r567, %r561, %r562, 25;
	shf.l.wrap.b32 	%r568, %r562, %r561, 25;
	mov.b64 	%rd846, {%r568, %r567};
	xor.b64  	%rd847, %rd845, %rd846;
	and.b64  	%rd848, %rd823, %rd793;
	or.b64  	%rd849, %rd823, %rd793;
	and.b64  	%rd850, %rd849, %rd763;
	or.b64  	%rd851, %rd850, %rd848;
	add.s64 	%rd852, %rd851, %rd847;
	add.s64 	%rd853, %rd852, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd1616;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 19;
	shf.r.wrap.b32 	%r572, %r569, %r570, 19;
	mov.b64 	%rd854, {%r572, %r571};
	shf.l.wrap.b32 	%r573, %r569, %r570, 3;
	shf.l.wrap.b32 	%r574, %r570, %r569, 3;
	mov.b64 	%rd855, {%r574, %r573};
	xor.b64  	%rd856, %rd854, %rd855;
	shr.u64 	%rd857, %rd1616, 6;
	xor.b64  	%rd858, %rd856, %rd857;
	add.s64 	%rd859, %rd1610, %rd12;
	add.s64 	%rd1611, %rd859, %rd858;
	add.s64 	%rd860, %rd1611, %rd752;
	xor.b64  	%rd861, %rd812, %rd782;
	and.b64  	%rd862, %rd842, %rd861;
	xor.b64  	%rd863, %rd862, %rd782;
	add.s64 	%rd864, %rd860, %rd863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd842;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 14;
	shf.r.wrap.b32 	%r578, %r575, %r576, 14;
	mov.b64 	%rd865, {%r578, %r577};
	shf.r.wrap.b32 	%r579, %r576, %r575, 18;
	shf.r.wrap.b32 	%r580, %r575, %r576, 18;
	mov.b64 	%rd866, {%r580, %r579};
	xor.b64  	%rd867, %rd865, %rd866;
	shf.l.wrap.b32 	%r581, %r575, %r576, 23;
	shf.l.wrap.b32 	%r582, %r576, %r575, 23;
	mov.b64 	%rd868, {%r582, %r581};
	xor.b64  	%rd869, %rd867, %rd868;
	add.s64 	%rd870, %rd864, %rd869;
	add.s64 	%rd871, %rd870, -4658551843659510044;
	add.s64 	%rd872, %rd871, %rd763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd853;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 28;
	shf.r.wrap.b32 	%r586, %r583, %r584, 28;
	mov.b64 	%rd873, {%r586, %r585};
	shf.l.wrap.b32 	%r587, %r583, %r584, 30;
	shf.l.wrap.b32 	%r588, %r584, %r583, 30;
	mov.b64 	%rd874, {%r588, %r587};
	xor.b64  	%rd875, %rd873, %rd874;
	shf.l.wrap.b32 	%r589, %r583, %r584, 25;
	shf.l.wrap.b32 	%r590, %r584, %r583, 25;
	mov.b64 	%rd876, {%r590, %r589};
	xor.b64  	%rd877, %rd875, %rd876;
	and.b64  	%rd878, %rd853, %rd823;
	or.b64  	%rd879, %rd853, %rd823;
	and.b64  	%rd880, %rd879, %rd793;
	or.b64  	%rd881, %rd880, %rd878;
	add.s64 	%rd882, %rd881, %rd877;
	add.s64 	%rd883, %rd882, %rd871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r591,%dummy}, %rd1613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r592}, %rd1613;
	}
	shf.r.wrap.b32 	%r593, %r592, %r591, 19;
	shf.r.wrap.b32 	%r594, %r591, %r592, 19;
	mov.b64 	%rd884, {%r594, %r593};
	shf.l.wrap.b32 	%r595, %r591, %r592, 3;
	shf.l.wrap.b32 	%r596, %r592, %r591, 3;
	mov.b64 	%rd885, {%r596, %r595};
	xor.b64  	%rd886, %rd884, %rd885;
	shr.u64 	%rd887, %rd1613, 6;
	xor.b64  	%rd888, %rd886, %rd887;
	add.s64 	%rd889, %rd1608, %rd12;
	add.s64 	%rd1609, %rd889, %rd888;
	add.s64 	%rd890, %rd1609, %rd782;
	xor.b64  	%rd891, %rd842, %rd812;
	and.b64  	%rd892, %rd872, %rd891;
	xor.b64  	%rd893, %rd892, %rd812;
	add.s64 	%rd894, %rd890, %rd893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd872;
	}
	shf.r.wrap.b32 	%r599, %r598, %r597, 14;
	shf.r.wrap.b32 	%r600, %r597, %r598, 14;
	mov.b64 	%rd895, {%r600, %r599};
	shf.r.wrap.b32 	%r601, %r598, %r597, 18;
	shf.r.wrap.b32 	%r602, %r597, %r598, 18;
	mov.b64 	%rd896, {%r602, %r601};
	xor.b64  	%rd897, %rd895, %rd896;
	shf.l.wrap.b32 	%r603, %r597, %r598, 23;
	shf.l.wrap.b32 	%r604, %r598, %r597, 23;
	mov.b64 	%rd898, {%r604, %r603};
	xor.b64  	%rd899, %rd897, %rd898;
	add.s64 	%rd900, %rd894, %rd899;
	add.s64 	%rd901, %rd900, -4116276920077217854;
	add.s64 	%rd1627, %rd901, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r605,%dummy}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r606}, %rd883;
	}
	shf.r.wrap.b32 	%r607, %r606, %r605, 28;
	shf.r.wrap.b32 	%r608, %r605, %r606, 28;
	mov.b64 	%rd902, {%r608, %r607};
	shf.l.wrap.b32 	%r609, %r605, %r606, 30;
	shf.l.wrap.b32 	%r610, %r606, %r605, 30;
	mov.b64 	%rd903, {%r610, %r609};
	xor.b64  	%rd904, %rd902, %rd903;
	shf.l.wrap.b32 	%r611, %r605, %r606, 25;
	shf.l.wrap.b32 	%r612, %r606, %r605, 25;
	mov.b64 	%rd905, {%r612, %r611};
	xor.b64  	%rd906, %rd904, %rd905;
	and.b64  	%rd907, %rd883, %rd853;
	or.b64  	%rd908, %rd883, %rd853;
	and.b64  	%rd909, %rd908, %rd823;
	or.b64  	%rd910, %rd909, %rd907;
	add.s64 	%rd911, %rd910, %rd906;
	add.s64 	%rd1623, %rd911, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r613,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r614}, %rd1611;
	}
	shf.r.wrap.b32 	%r615, %r614, %r613, 19;
	shf.r.wrap.b32 	%r616, %r613, %r614, 19;
	mov.b64 	%rd912, {%r616, %r615};
	shf.l.wrap.b32 	%r617, %r613, %r614, 3;
	shf.l.wrap.b32 	%r618, %r614, %r613, 3;
	mov.b64 	%rd913, {%r618, %r617};
	xor.b64  	%rd914, %rd912, %rd913;
	shr.u64 	%rd915, %rd1611, 6;
	xor.b64  	%rd916, %rd914, %rd915;
	add.s64 	%rd917, %rd1606, %rd12;
	add.s64 	%rd1607, %rd917, %rd916;
	add.s64 	%rd918, %rd1607, %rd812;
	xor.b64  	%rd919, %rd872, %rd842;
	and.b64  	%rd920, %rd1627, %rd919;
	xor.b64  	%rd921, %rd920, %rd842;
	add.s64 	%rd922, %rd918, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r619,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r620}, %rd1627;
	}
	shf.r.wrap.b32 	%r621, %r620, %r619, 14;
	shf.r.wrap.b32 	%r622, %r619, %r620, 14;
	mov.b64 	%rd923, {%r622, %r621};
	shf.r.wrap.b32 	%r623, %r620, %r619, 18;
	shf.r.wrap.b32 	%r624, %r619, %r620, 18;
	mov.b64 	%rd924, {%r624, %r623};
	xor.b64  	%rd925, %rd923, %rd924;
	shf.l.wrap.b32 	%r625, %r619, %r620, 23;
	shf.l.wrap.b32 	%r626, %r620, %r619, 23;
	mov.b64 	%rd926, {%r626, %r625};
	xor.b64  	%rd927, %rd925, %rd926;
	add.s64 	%rd928, %rd922, %rd927;
	add.s64 	%rd929, %rd928, -3051310485924567259;
	add.s64 	%rd1626, %rd929, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r627,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r628}, %rd1623;
	}
	shf.r.wrap.b32 	%r629, %r628, %r627, 28;
	shf.r.wrap.b32 	%r630, %r627, %r628, 28;
	mov.b64 	%rd930, {%r630, %r629};
	shf.l.wrap.b32 	%r631, %r627, %r628, 30;
	shf.l.wrap.b32 	%r632, %r628, %r627, 30;
	mov.b64 	%rd931, {%r632, %r631};
	xor.b64  	%rd932, %rd930, %rd931;
	shf.l.wrap.b32 	%r633, %r627, %r628, 25;
	shf.l.wrap.b32 	%r634, %r628, %r627, 25;
	mov.b64 	%rd933, {%r634, %r633};
	xor.b64  	%rd934, %rd932, %rd933;
	and.b64  	%rd935, %rd1623, %rd883;
	or.b64  	%rd936, %rd1623, %rd883;
	and.b64  	%rd937, %rd936, %rd853;
	or.b64  	%rd938, %rd937, %rd935;
	add.s64 	%rd939, %rd938, %rd934;
	add.s64 	%rd1622, %rd939, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd1609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd1609;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 19;
	shf.r.wrap.b32 	%r638, %r635, %r636, 19;
	mov.b64 	%rd940, {%r638, %r637};
	shf.l.wrap.b32 	%r639, %r635, %r636, 3;
	shf.l.wrap.b32 	%r640, %r636, %r635, 3;
	mov.b64 	%rd941, {%r640, %r639};
	xor.b64  	%rd942, %rd940, %rd941;
	shr.u64 	%rd943, %rd1609, 6;
	xor.b64  	%rd944, %rd942, %rd943;
	add.s64 	%rd945, %rd944, %rd1605;
	add.s64 	%rd1619, %rd945, %rd16;
	add.s64 	%rd946, %rd1619, %rd842;
	xor.b64  	%rd947, %rd1627, %rd872;
	and.b64  	%rd948, %rd1626, %rd947;
	xor.b64  	%rd949, %rd948, %rd872;
	add.s64 	%rd950, %rd946, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd1626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd1626;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 14;
	shf.r.wrap.b32 	%r644, %r641, %r642, 14;
	mov.b64 	%rd951, {%r644, %r643};
	shf.r.wrap.b32 	%r645, %r642, %r641, 18;
	shf.r.wrap.b32 	%r646, %r641, %r642, 18;
	mov.b64 	%rd952, {%r646, %r645};
	xor.b64  	%rd953, %rd951, %rd952;
	shf.l.wrap.b32 	%r647, %r641, %r642, 23;
	shf.l.wrap.b32 	%r648, %r642, %r641, 23;
	mov.b64 	%rd954, {%r648, %r647};
	xor.b64  	%rd955, %rd953, %rd954;
	add.s64 	%rd956, %rd950, %rd955;
	add.s64 	%rd957, %rd956, 489312712824947311;
	add.s64 	%rd1625, %rd957, %rd853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r649,%dummy}, %rd1622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r650}, %rd1622;
	}
	shf.r.wrap.b32 	%r651, %r650, %r649, 28;
	shf.r.wrap.b32 	%r652, %r649, %r650, 28;
	mov.b64 	%rd958, {%r652, %r651};
	shf.l.wrap.b32 	%r653, %r649, %r650, 30;
	shf.l.wrap.b32 	%r654, %r650, %r649, 30;
	mov.b64 	%rd959, {%r654, %r653};
	xor.b64  	%rd960, %rd958, %rd959;
	shf.l.wrap.b32 	%r655, %r649, %r650, 25;
	shf.l.wrap.b32 	%r656, %r650, %r649, 25;
	mov.b64 	%rd961, {%r656, %r655};
	xor.b64  	%rd962, %rd960, %rd961;
	and.b64  	%rd963, %rd1622, %rd1623;
	or.b64  	%rd964, %rd1622, %rd1623;
	and.b64  	%rd965, %rd964, %rd883;
	or.b64  	%rd966, %rd965, %rd963;
	add.s64 	%rd967, %rd966, %rd962;
	add.s64 	%rd1621, %rd967, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r658}, %rd1607;
	}
	shf.r.wrap.b32 	%r659, %r658, %r657, 19;
	shf.r.wrap.b32 	%r660, %r657, %r658, 19;
	mov.b64 	%rd968, {%r660, %r659};
	shf.l.wrap.b32 	%r661, %r657, %r658, 3;
	shf.l.wrap.b32 	%r662, %r658, %r657, 3;
	mov.b64 	%rd969, {%r662, %r661};
	xor.b64  	%rd970, %rd968, %rd969;
	shr.u64 	%rd971, %rd1607, 6;
	xor.b64  	%rd972, %rd970, %rd971;
	shf.r.wrap.b32 	%r663, %r342, %r341, 1;
	shf.r.wrap.b32 	%r664, %r341, %r342, 1;
	mov.b64 	%rd973, {%r664, %r663};
	shf.r.wrap.b32 	%r665, %r342, %r341, 8;
	shf.r.wrap.b32 	%r666, %r341, %r342, 8;
	mov.b64 	%rd974, {%r666, %r665};
	xor.b64  	%rd975, %rd973, %rd974;
	shr.u64 	%rd976, %rd1617, 7;
	xor.b64  	%rd977, %rd975, %rd976;
	add.s64 	%rd978, %rd972, %rd1604;
	add.s64 	%rd979, %rd978, %rd977;
	add.s64 	%rd1615, %rd979, 512;
	add.s64 	%rd980, %rd1615, %rd872;
	xor.b64  	%rd981, %rd1626, %rd1627;
	and.b64  	%rd982, %rd1625, %rd981;
	xor.b64  	%rd983, %rd982, %rd1627;
	add.s64 	%rd984, %rd980, %rd983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r667,%dummy}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r668}, %rd1625;
	}
	shf.r.wrap.b32 	%r669, %r668, %r667, 14;
	shf.r.wrap.b32 	%r670, %r667, %r668, 14;
	mov.b64 	%rd985, {%r670, %r669};
	shf.r.wrap.b32 	%r671, %r668, %r667, 18;
	shf.r.wrap.b32 	%r672, %r667, %r668, 18;
	mov.b64 	%rd986, {%r672, %r671};
	xor.b64  	%rd987, %rd985, %rd986;
	shf.l.wrap.b32 	%r673, %r667, %r668, 23;
	shf.l.wrap.b32 	%r674, %r668, %r667, 23;
	mov.b64 	%rd988, {%r674, %r673};
	xor.b64  	%rd989, %rd987, %rd988;
	add.s64 	%rd990, %rd984, %rd989;
	add.s64 	%rd991, %rd990, 1452737877330783856;
	add.s64 	%rd1624, %rd991, %rd883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r675,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r676}, %rd1621;
	}
	shf.r.wrap.b32 	%r677, %r676, %r675, 28;
	shf.r.wrap.b32 	%r678, %r675, %r676, 28;
	mov.b64 	%rd992, {%r678, %r677};
	shf.l.wrap.b32 	%r679, %r675, %r676, 30;
	shf.l.wrap.b32 	%r680, %r676, %r675, 30;
	mov.b64 	%rd993, {%r680, %r679};
	xor.b64  	%rd994, %rd992, %rd993;
	shf.l.wrap.b32 	%r681, %r675, %r676, 25;
	shf.l.wrap.b32 	%r682, %r676, %r675, 25;
	mov.b64 	%rd995, {%r682, %r681};
	xor.b64  	%rd996, %rd994, %rd995;
	and.b64  	%rd997, %rd1621, %rd1622;
	or.b64  	%rd998, %rd1621, %rd1622;
	and.b64  	%rd999, %rd998, %rd1623;
	or.b64  	%rd1000, %rd999, %rd997;
	add.s64 	%rd1001, %rd1000, %rd996;
	add.s64 	%rd1620, %rd1001, %rd991;
	mov.u32 	%r1145, 32;
	mov.u64 	%rd1603, K;

$L__BB7_3:
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd1619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r684,%dummy}, %rd1619;
	}
	shf.l.wrap.b32 	%r685, %r684, %r683, 3;
	shf.l.wrap.b32 	%r686, %r683, %r684, 3;
	mov.b64 	%rd1002, {%r686, %r685};
	shf.r.wrap.b32 	%r687, %r683, %r684, 19;
	shf.r.wrap.b32 	%r688, %r684, %r683, 19;
	mov.b64 	%rd1003, {%r688, %r687};
	xor.b64  	%rd1004, %rd1003, %rd1002;
	shr.u64 	%rd1005, %rd1619, 6;
	xor.b64  	%rd1006, %rd1004, %rd1005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r690}, %rd1618;
	}
	shf.r.wrap.b32 	%r691, %r690, %r689, 8;
	shf.r.wrap.b32 	%r692, %r689, %r690, 8;
	mov.b64 	%rd1007, {%r692, %r691};
	shf.r.wrap.b32 	%r693, %r690, %r689, 1;
	shf.r.wrap.b32 	%r694, %r689, %r690, 1;
	mov.b64 	%rd1008, {%r694, %r693};
	xor.b64  	%rd1009, %rd1008, %rd1007;
	shr.u64 	%rd1010, %rd1618, 7;
	xor.b64  	%rd1011, %rd1009, %rd1010;
	add.s64 	%rd1012, %rd1006, %rd1617;
	add.s64 	%rd1013, %rd1012, %rd1616;
	add.s64 	%rd1617, %rd1013, %rd1011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd1624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd1624;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 18;
	shf.r.wrap.b32 	%r698, %r695, %r696, 18;
	mov.b64 	%rd1014, {%r698, %r697};
	shf.r.wrap.b32 	%r699, %r696, %r695, 14;
	shf.r.wrap.b32 	%r700, %r695, %r696, 14;
	mov.b64 	%rd1015, {%r700, %r699};
	xor.b64  	%rd1016, %rd1015, %rd1014;
	shf.l.wrap.b32 	%r701, %r695, %r696, 23;
	shf.l.wrap.b32 	%r702, %r696, %r695, 23;
	mov.b64 	%rd1017, {%r702, %r701};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	xor.b64  	%rd1019, %rd1625, %rd1626;
	and.b64  	%rd1020, %rd1624, %rd1019;
	xor.b64  	%rd1021, %rd1020, %rd1626;
	add.s64 	%rd1022, %rd1021, %rd1627;
	add.s64 	%rd1023, %rd1022, %rd1018;
	ld.const.u64 	%rd1024, [%rd1603+256];
	add.s64 	%rd1025, %rd1023, %rd1024;
	add.s64 	%rd1026, %rd1025, %rd1617;
	add.s64 	%rd1027, %rd1026, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r703}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r704,%dummy}, %rd1620;
	}
	shf.l.wrap.b32 	%r705, %r704, %r703, 30;
	shf.l.wrap.b32 	%r706, %r703, %r704, 30;
	mov.b64 	%rd1028, {%r706, %r705};
	shf.r.wrap.b32 	%r707, %r703, %r704, 28;
	shf.r.wrap.b32 	%r708, %r704, %r703, 28;
	mov.b64 	%rd1029, {%r708, %r707};
	xor.b64  	%rd1030, %rd1029, %rd1028;
	shf.l.wrap.b32 	%r709, %r704, %r703, 25;
	shf.l.wrap.b32 	%r710, %r703, %r704, 25;
	mov.b64 	%rd1031, {%r710, %r709};
	xor.b64  	%rd1032, %rd1030, %rd1031;
	or.b64  	%rd1033, %rd1620, %rd1621;
	and.b64  	%rd1034, %rd1033, %rd1622;
	and.b64  	%rd1035, %rd1620, %rd1621;
	or.b64  	%rd1036, %rd1034, %rd1035;
	add.s64 	%rd1037, %rd1036, %rd1032;
	add.s64 	%rd1038, %rd1037, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r711}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r712,%dummy}, %rd1615;
	}
	shf.l.wrap.b32 	%r713, %r712, %r711, 3;
	shf.l.wrap.b32 	%r714, %r711, %r712, 3;
	mov.b64 	%rd1039, {%r714, %r713};
	shf.r.wrap.b32 	%r715, %r711, %r712, 19;
	shf.r.wrap.b32 	%r716, %r712, %r711, 19;
	mov.b64 	%rd1040, {%r716, %r715};
	xor.b64  	%rd1041, %rd1040, %rd1039;
	shr.u64 	%rd1042, %rd1615, 6;
	xor.b64  	%rd1043, %rd1041, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r717,%dummy}, %rd1614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r718}, %rd1614;
	}
	shf.r.wrap.b32 	%r719, %r718, %r717, 8;
	shf.r.wrap.b32 	%r720, %r717, %r718, 8;
	mov.b64 	%rd1044, {%r720, %r719};
	shf.r.wrap.b32 	%r721, %r718, %r717, 1;
	shf.r.wrap.b32 	%r722, %r717, %r718, 1;
	mov.b64 	%rd1045, {%r722, %r721};
	xor.b64  	%rd1046, %rd1045, %rd1044;
	shr.u64 	%rd1047, %rd1614, 7;
	xor.b64  	%rd1048, %rd1046, %rd1047;
	add.s64 	%rd1049, %rd1043, %rd1618;
	add.s64 	%rd1050, %rd1049, %rd1613;
	add.s64 	%rd1618, %rd1050, %rd1048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd1027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd1027;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 14;
	shf.r.wrap.b32 	%r726, %r723, %r724, 14;
	mov.b64 	%rd1051, {%r726, %r725};
	shf.r.wrap.b32 	%r727, %r724, %r723, 18;
	shf.r.wrap.b32 	%r728, %r723, %r724, 18;
	mov.b64 	%rd1052, {%r728, %r727};
	xor.b64  	%rd1053, %rd1051, %rd1052;
	shf.l.wrap.b32 	%r729, %r723, %r724, 23;
	shf.l.wrap.b32 	%r730, %r724, %r723, 23;
	mov.b64 	%rd1054, {%r730, %r729};
	xor.b64  	%rd1055, %rd1053, %rd1054;
	xor.b64  	%rd1056, %rd1624, %rd1625;
	and.b64  	%rd1057, %rd1027, %rd1056;
	xor.b64  	%rd1058, %rd1057, %rd1625;
	ld.const.u64 	%rd1059, [%rd1603+264];
	add.s64 	%rd1060, %rd1059, %rd1626;
	add.s64 	%rd1061, %rd1060, %rd1618;
	add.s64 	%rd1062, %rd1061, %rd1058;
	add.s64 	%rd1063, %rd1062, %rd1055;
	add.s64 	%rd1064, %rd1063, %rd1622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r731,%dummy}, %rd1038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r732}, %rd1038;
	}
	shf.r.wrap.b32 	%r733, %r732, %r731, 28;
	shf.r.wrap.b32 	%r734, %r731, %r732, 28;
	mov.b64 	%rd1065, {%r734, %r733};
	shf.l.wrap.b32 	%r735, %r731, %r732, 30;
	shf.l.wrap.b32 	%r736, %r732, %r731, 30;
	mov.b64 	%rd1066, {%r736, %r735};
	xor.b64  	%rd1067, %rd1065, %rd1066;
	shf.l.wrap.b32 	%r737, %r731, %r732, 25;
	shf.l.wrap.b32 	%r738, %r732, %r731, 25;
	mov.b64 	%rd1068, {%r738, %r737};
	xor.b64  	%rd1069, %rd1067, %rd1068;
	and.b64  	%rd1070, %rd1038, %rd1620;
	or.b64  	%rd1071, %rd1038, %rd1620;
	and.b64  	%rd1072, %rd1071, %rd1621;
	or.b64  	%rd1073, %rd1072, %rd1070;
	add.s64 	%rd1074, %rd1073, %rd1069;
	add.s64 	%rd1075, %rd1074, %rd1063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r739,%dummy}, %rd1617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd1617;
	}
	shf.r.wrap.b32 	%r741, %r740, %r739, 19;
	shf.r.wrap.b32 	%r742, %r739, %r740, 19;
	mov.b64 	%rd1076, {%r742, %r741};
	shf.l.wrap.b32 	%r743, %r739, %r740, 3;
	shf.l.wrap.b32 	%r744, %r740, %r739, 3;
	mov.b64 	%rd1077, {%r744, %r743};
	xor.b64  	%rd1078, %rd1076, %rd1077;
	shr.u64 	%rd1079, %rd1617, 6;
	xor.b64  	%rd1080, %rd1078, %rd1079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r745,%dummy}, %rd1612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r746}, %rd1612;
	}
	shf.r.wrap.b32 	%r747, %r746, %r745, 8;
	shf.r.wrap.b32 	%r748, %r745, %r746, 8;
	mov.b64 	%rd1081, {%r748, %r747};
	shf.r.wrap.b32 	%r749, %r746, %r745, 1;
	shf.r.wrap.b32 	%r750, %r745, %r746, 1;
	mov.b64 	%rd1082, {%r750, %r749};
	xor.b64  	%rd1083, %rd1082, %rd1081;
	shr.u64 	%rd1084, %rd1612, 7;
	xor.b64  	%rd1085, %rd1083, %rd1084;
	add.s64 	%rd1086, %rd1080, %rd1614;
	add.s64 	%rd1087, %rd1086, %rd1611;
	add.s64 	%rd1614, %rd1087, %rd1085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r751,%dummy}, %rd1064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r752}, %rd1064;
	}
	shf.r.wrap.b32 	%r753, %r752, %r751, 14;
	shf.r.wrap.b32 	%r754, %r751, %r752, 14;
	mov.b64 	%rd1088, {%r754, %r753};
	shf.r.wrap.b32 	%r755, %r752, %r751, 18;
	shf.r.wrap.b32 	%r756, %r751, %r752, 18;
	mov.b64 	%rd1089, {%r756, %r755};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	shf.l.wrap.b32 	%r757, %r751, %r752, 23;
	shf.l.wrap.b32 	%r758, %r752, %r751, 23;
	mov.b64 	%rd1091, {%r758, %r757};
	xor.b64  	%rd1092, %rd1090, %rd1091;
	xor.b64  	%rd1093, %rd1027, %rd1624;
	and.b64  	%rd1094, %rd1064, %rd1093;
	xor.b64  	%rd1095, %rd1094, %rd1624;
	ld.const.u64 	%rd1096, [%rd1603+272];
	add.s64 	%rd1097, %rd1096, %rd1625;
	add.s64 	%rd1098, %rd1097, %rd1614;
	add.s64 	%rd1099, %rd1098, %rd1095;
	add.s64 	%rd1100, %rd1099, %rd1092;
	add.s64 	%rd1101, %rd1100, %rd1621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r759,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r760}, %rd1075;
	}
	shf.r.wrap.b32 	%r761, %r760, %r759, 28;
	shf.r.wrap.b32 	%r762, %r759, %r760, 28;
	mov.b64 	%rd1102, {%r762, %r761};
	shf.l.wrap.b32 	%r763, %r759, %r760, 30;
	shf.l.wrap.b32 	%r764, %r760, %r759, 30;
	mov.b64 	%rd1103, {%r764, %r763};
	xor.b64  	%rd1104, %rd1102, %rd1103;
	shf.l.wrap.b32 	%r765, %r759, %r760, 25;
	shf.l.wrap.b32 	%r766, %r760, %r759, 25;
	mov.b64 	%rd1105, {%r766, %r765};
	xor.b64  	%rd1106, %rd1104, %rd1105;
	and.b64  	%rd1107, %rd1075, %rd1038;
	or.b64  	%rd1108, %rd1075, %rd1038;
	and.b64  	%rd1109, %rd1108, %rd1620;
	or.b64  	%rd1110, %rd1109, %rd1107;
	add.s64 	%rd1111, %rd1110, %rd1106;
	add.s64 	%rd1112, %rd1111, %rd1100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r767,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r768}, %rd1618;
	}
	shf.r.wrap.b32 	%r769, %r768, %r767, 19;
	shf.r.wrap.b32 	%r770, %r767, %r768, 19;
	mov.b64 	%rd1113, {%r770, %r769};
	shf.l.wrap.b32 	%r771, %r767, %r768, 3;
	shf.l.wrap.b32 	%r772, %r768, %r767, 3;
	mov.b64 	%rd1114, {%r772, %r771};
	xor.b64  	%rd1115, %rd1113, %rd1114;
	shr.u64 	%rd1116, %rd1618, 6;
	xor.b64  	%rd1117, %rd1115, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r773,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r774}, %rd1610;
	}
	shf.r.wrap.b32 	%r775, %r774, %r773, 8;
	shf.r.wrap.b32 	%r776, %r773, %r774, 8;
	mov.b64 	%rd1118, {%r776, %r775};
	shf.r.wrap.b32 	%r777, %r774, %r773, 1;
	shf.r.wrap.b32 	%r778, %r773, %r774, 1;
	mov.b64 	%rd1119, {%r778, %r777};
	xor.b64  	%rd1120, %rd1119, %rd1118;
	shr.u64 	%rd1121, %rd1610, 7;
	xor.b64  	%rd1122, %rd1120, %rd1121;
	add.s64 	%rd1123, %rd1117, %rd1612;
	add.s64 	%rd1124, %rd1123, %rd1609;
	add.s64 	%rd1612, %rd1124, %rd1122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r779,%dummy}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd1101;
	}
	shf.r.wrap.b32 	%r781, %r780, %r779, 14;
	shf.r.wrap.b32 	%r782, %r779, %r780, 14;
	mov.b64 	%rd1125, {%r782, %r781};
	shf.r.wrap.b32 	%r783, %r780, %r779, 18;
	shf.r.wrap.b32 	%r784, %r779, %r780, 18;
	mov.b64 	%rd1126, {%r784, %r783};
	xor.b64  	%rd1127, %rd1125, %rd1126;
	shf.l.wrap.b32 	%r785, %r779, %r780, 23;
	shf.l.wrap.b32 	%r786, %r780, %r779, 23;
	mov.b64 	%rd1128, {%r786, %r785};
	xor.b64  	%rd1129, %rd1127, %rd1128;
	xor.b64  	%rd1130, %rd1064, %rd1027;
	and.b64  	%rd1131, %rd1101, %rd1130;
	xor.b64  	%rd1132, %rd1131, %rd1027;
	ld.const.u64 	%rd1133, [%rd1603+280];
	add.s64 	%rd1134, %rd1133, %rd1624;
	add.s64 	%rd1135, %rd1134, %rd1612;
	add.s64 	%rd1136, %rd1135, %rd1132;
	add.s64 	%rd1137, %rd1136, %rd1129;
	add.s64 	%rd1138, %rd1137, %rd1620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r787,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r788}, %rd1112;
	}
	shf.r.wrap.b32 	%r789, %r788, %r787, 28;
	shf.r.wrap.b32 	%r790, %r787, %r788, 28;
	mov.b64 	%rd1139, {%r790, %r789};
	shf.l.wrap.b32 	%r791, %r787, %r788, 30;
	shf.l.wrap.b32 	%r792, %r788, %r787, 30;
	mov.b64 	%rd1140, {%r792, %r791};
	xor.b64  	%rd1141, %rd1139, %rd1140;
	shf.l.wrap.b32 	%r793, %r787, %r788, 25;
	shf.l.wrap.b32 	%r794, %r788, %r787, 25;
	mov.b64 	%rd1142, {%r794, %r793};
	xor.b64  	%rd1143, %rd1141, %rd1142;
	and.b64  	%rd1144, %rd1112, %rd1075;
	or.b64  	%rd1145, %rd1112, %rd1075;
	and.b64  	%rd1146, %rd1145, %rd1038;
	or.b64  	%rd1147, %rd1146, %rd1144;
	add.s64 	%rd1148, %rd1147, %rd1143;
	add.s64 	%rd1149, %rd1148, %rd1137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r795,%dummy}, %rd1614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r796}, %rd1614;
	}
	shf.r.wrap.b32 	%r797, %r796, %r795, 19;
	shf.r.wrap.b32 	%r798, %r795, %r796, 19;
	mov.b64 	%rd1150, {%r798, %r797};
	shf.l.wrap.b32 	%r799, %r795, %r796, 3;
	shf.l.wrap.b32 	%r800, %r796, %r795, 3;
	mov.b64 	%rd1151, {%r800, %r799};
	xor.b64  	%rd1152, %rd1150, %rd1151;
	shr.u64 	%rd1153, %rd1614, 6;
	xor.b64  	%rd1154, %rd1152, %rd1153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r801,%dummy}, %rd1608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r802}, %rd1608;
	}
	shf.r.wrap.b32 	%r803, %r802, %r801, 8;
	shf.r.wrap.b32 	%r804, %r801, %r802, 8;
	mov.b64 	%rd1155, {%r804, %r803};
	shf.r.wrap.b32 	%r805, %r802, %r801, 1;
	shf.r.wrap.b32 	%r806, %r801, %r802, 1;
	mov.b64 	%rd1156, {%r806, %r805};
	xor.b64  	%rd1157, %rd1156, %rd1155;
	shr.u64 	%rd1158, %rd1608, 7;
	xor.b64  	%rd1159, %rd1157, %rd1158;
	add.s64 	%rd1160, %rd1154, %rd1610;
	add.s64 	%rd1161, %rd1160, %rd1607;
	add.s64 	%rd1610, %rd1161, %rd1159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r807,%dummy}, %rd1138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r808}, %rd1138;
	}
	shf.r.wrap.b32 	%r809, %r808, %r807, 14;
	shf.r.wrap.b32 	%r810, %r807, %r808, 14;
	mov.b64 	%rd1162, {%r810, %r809};
	shf.r.wrap.b32 	%r811, %r808, %r807, 18;
	shf.r.wrap.b32 	%r812, %r807, %r808, 18;
	mov.b64 	%rd1163, {%r812, %r811};
	xor.b64  	%rd1164, %rd1162, %rd1163;
	shf.l.wrap.b32 	%r813, %r807, %r808, 23;
	shf.l.wrap.b32 	%r814, %r808, %r807, 23;
	mov.b64 	%rd1165, {%r814, %r813};
	xor.b64  	%rd1166, %rd1164, %rd1165;
	xor.b64  	%rd1167, %rd1101, %rd1064;
	and.b64  	%rd1168, %rd1138, %rd1167;
	xor.b64  	%rd1169, %rd1168, %rd1064;
	ld.const.u64 	%rd1170, [%rd1603+288];
	add.s64 	%rd1171, %rd1170, %rd1027;
	add.s64 	%rd1172, %rd1171, %rd1610;
	add.s64 	%rd1173, %rd1172, %rd1169;
	add.s64 	%rd1174, %rd1173, %rd1166;
	add.s64 	%rd1175, %rd1174, %rd1038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r815,%dummy}, %rd1149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r816}, %rd1149;
	}
	shf.r.wrap.b32 	%r817, %r816, %r815, 28;
	shf.r.wrap.b32 	%r818, %r815, %r816, 28;
	mov.b64 	%rd1176, {%r818, %r817};
	shf.l.wrap.b32 	%r819, %r815, %r816, 30;
	shf.l.wrap.b32 	%r820, %r816, %r815, 30;
	mov.b64 	%rd1177, {%r820, %r819};
	xor.b64  	%rd1178, %rd1176, %rd1177;
	shf.l.wrap.b32 	%r821, %r815, %r816, 25;
	shf.l.wrap.b32 	%r822, %r816, %r815, 25;
	mov.b64 	%rd1179, {%r822, %r821};
	xor.b64  	%rd1180, %rd1178, %rd1179;
	and.b64  	%rd1181, %rd1149, %rd1112;
	or.b64  	%rd1182, %rd1149, %rd1112;
	and.b64  	%rd1183, %rd1182, %rd1075;
	or.b64  	%rd1184, %rd1183, %rd1181;
	add.s64 	%rd1185, %rd1184, %rd1180;
	add.s64 	%rd1186, %rd1185, %rd1174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r823,%dummy}, %rd1612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r824}, %rd1612;
	}
	shf.r.wrap.b32 	%r825, %r824, %r823, 19;
	shf.r.wrap.b32 	%r826, %r823, %r824, 19;
	mov.b64 	%rd1187, {%r826, %r825};
	shf.l.wrap.b32 	%r827, %r823, %r824, 3;
	shf.l.wrap.b32 	%r828, %r824, %r823, 3;
	mov.b64 	%rd1188, {%r828, %r827};
	xor.b64  	%rd1189, %rd1187, %rd1188;
	shr.u64 	%rd1190, %rd1612, 6;
	xor.b64  	%rd1191, %rd1189, %rd1190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r829,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r830}, %rd1606;
	}
	shf.r.wrap.b32 	%r831, %r830, %r829, 8;
	shf.r.wrap.b32 	%r832, %r829, %r830, 8;
	mov.b64 	%rd1192, {%r832, %r831};
	shf.r.wrap.b32 	%r833, %r830, %r829, 1;
	shf.r.wrap.b32 	%r834, %r829, %r830, 1;
	mov.b64 	%rd1193, {%r834, %r833};
	xor.b64  	%rd1194, %rd1193, %rd1192;
	shr.u64 	%rd1195, %rd1606, 7;
	xor.b64  	%rd1196, %rd1194, %rd1195;
	add.s64 	%rd1197, %rd1191, %rd1608;
	add.s64 	%rd1198, %rd1197, %rd1619;
	add.s64 	%rd1608, %rd1198, %rd1196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r835,%dummy}, %rd1175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd1175;
	}
	shf.r.wrap.b32 	%r837, %r836, %r835, 14;
	shf.r.wrap.b32 	%r838, %r835, %r836, 14;
	mov.b64 	%rd1199, {%r838, %r837};
	shf.r.wrap.b32 	%r839, %r836, %r835, 18;
	shf.r.wrap.b32 	%r840, %r835, %r836, 18;
	mov.b64 	%rd1200, {%r840, %r839};
	xor.b64  	%rd1201, %rd1199, %rd1200;
	shf.l.wrap.b32 	%r841, %r835, %r836, 23;
	shf.l.wrap.b32 	%r842, %r836, %r835, 23;
	mov.b64 	%rd1202, {%r842, %r841};
	xor.b64  	%rd1203, %rd1201, %rd1202;
	xor.b64  	%rd1204, %rd1138, %rd1101;
	and.b64  	%rd1205, %rd1175, %rd1204;
	xor.b64  	%rd1206, %rd1205, %rd1101;
	ld.const.u64 	%rd1207, [%rd1603+296];
	add.s64 	%rd1208, %rd1207, %rd1064;
	add.s64 	%rd1209, %rd1208, %rd1608;
	add.s64 	%rd1210, %rd1209, %rd1206;
	add.s64 	%rd1211, %rd1210, %rd1203;
	add.s64 	%rd1212, %rd1211, %rd1075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r843,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r844}, %rd1186;
	}
	shf.r.wrap.b32 	%r845, %r844, %r843, 28;
	shf.r.wrap.b32 	%r846, %r843, %r844, 28;
	mov.b64 	%rd1213, {%r846, %r845};
	shf.l.wrap.b32 	%r847, %r843, %r844, 30;
	shf.l.wrap.b32 	%r848, %r844, %r843, 30;
	mov.b64 	%rd1214, {%r848, %r847};
	xor.b64  	%rd1215, %rd1213, %rd1214;
	shf.l.wrap.b32 	%r849, %r843, %r844, 25;
	shf.l.wrap.b32 	%r850, %r844, %r843, 25;
	mov.b64 	%rd1216, {%r850, %r849};
	xor.b64  	%rd1217, %rd1215, %rd1216;
	and.b64  	%rd1218, %rd1186, %rd1149;
	or.b64  	%rd1219, %rd1186, %rd1149;
	and.b64  	%rd1220, %rd1219, %rd1112;
	or.b64  	%rd1221, %rd1220, %rd1218;
	add.s64 	%rd1222, %rd1221, %rd1217;
	add.s64 	%rd1223, %rd1222, %rd1211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r851,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r852}, %rd1610;
	}
	shf.r.wrap.b32 	%r853, %r852, %r851, 19;
	shf.r.wrap.b32 	%r854, %r851, %r852, 19;
	mov.b64 	%rd1224, {%r854, %r853};
	shf.l.wrap.b32 	%r855, %r851, %r852, 3;
	shf.l.wrap.b32 	%r856, %r852, %r851, 3;
	mov.b64 	%rd1225, {%r856, %r855};
	xor.b64  	%rd1226, %rd1224, %rd1225;
	shr.u64 	%rd1227, %rd1610, 6;
	xor.b64  	%rd1228, %rd1226, %rd1227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r857,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r858}, %rd1605;
	}
	shf.r.wrap.b32 	%r859, %r858, %r857, 8;
	shf.r.wrap.b32 	%r860, %r857, %r858, 8;
	mov.b64 	%rd1229, {%r860, %r859};
	shf.r.wrap.b32 	%r861, %r858, %r857, 1;
	shf.r.wrap.b32 	%r862, %r857, %r858, 1;
	mov.b64 	%rd1230, {%r862, %r861};
	xor.b64  	%rd1231, %rd1230, %rd1229;
	shr.u64 	%rd1232, %rd1605, 7;
	xor.b64  	%rd1233, %rd1231, %rd1232;
	add.s64 	%rd1234, %rd1228, %rd1606;
	add.s64 	%rd1235, %rd1234, %rd1615;
	add.s64 	%rd1606, %rd1235, %rd1233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r863,%dummy}, %rd1212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r864}, %rd1212;
	}
	shf.r.wrap.b32 	%r865, %r864, %r863, 14;
	shf.r.wrap.b32 	%r866, %r863, %r864, 14;
	mov.b64 	%rd1236, {%r866, %r865};
	shf.r.wrap.b32 	%r867, %r864, %r863, 18;
	shf.r.wrap.b32 	%r868, %r863, %r864, 18;
	mov.b64 	%rd1237, {%r868, %r867};
	xor.b64  	%rd1238, %rd1236, %rd1237;
	shf.l.wrap.b32 	%r869, %r863, %r864, 23;
	shf.l.wrap.b32 	%r870, %r864, %r863, 23;
	mov.b64 	%rd1239, {%r870, %r869};
	xor.b64  	%rd1240, %rd1238, %rd1239;
	xor.b64  	%rd1241, %rd1175, %rd1138;
	and.b64  	%rd1242, %rd1212, %rd1241;
	xor.b64  	%rd1243, %rd1242, %rd1138;
	ld.const.u64 	%rd1244, [%rd1603+304];
	add.s64 	%rd1245, %rd1244, %rd1101;
	add.s64 	%rd1246, %rd1245, %rd1606;
	add.s64 	%rd1247, %rd1246, %rd1243;
	add.s64 	%rd1248, %rd1247, %rd1240;
	add.s64 	%rd1249, %rd1248, %rd1112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r871,%dummy}, %rd1223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r872}, %rd1223;
	}
	shf.r.wrap.b32 	%r873, %r872, %r871, 28;
	shf.r.wrap.b32 	%r874, %r871, %r872, 28;
	mov.b64 	%rd1250, {%r874, %r873};
	shf.l.wrap.b32 	%r875, %r871, %r872, 30;
	shf.l.wrap.b32 	%r876, %r872, %r871, 30;
	mov.b64 	%rd1251, {%r876, %r875};
	xor.b64  	%rd1252, %rd1250, %rd1251;
	shf.l.wrap.b32 	%r877, %r871, %r872, 25;
	shf.l.wrap.b32 	%r878, %r872, %r871, 25;
	mov.b64 	%rd1253, {%r878, %r877};
	xor.b64  	%rd1254, %rd1252, %rd1253;
	and.b64  	%rd1255, %rd1223, %rd1186;
	or.b64  	%rd1256, %rd1223, %rd1186;
	and.b64  	%rd1257, %rd1256, %rd1149;
	or.b64  	%rd1258, %rd1257, %rd1255;
	add.s64 	%rd1259, %rd1258, %rd1254;
	add.s64 	%rd1260, %rd1259, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r879,%dummy}, %rd1608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd1608;
	}
	shf.r.wrap.b32 	%r881, %r880, %r879, 19;
	shf.r.wrap.b32 	%r882, %r879, %r880, 19;
	mov.b64 	%rd1261, {%r882, %r881};
	shf.l.wrap.b32 	%r883, %r879, %r880, 3;
	shf.l.wrap.b32 	%r884, %r880, %r879, 3;
	mov.b64 	%rd1262, {%r884, %r883};
	xor.b64  	%rd1263, %rd1261, %rd1262;
	shr.u64 	%rd1264, %rd1608, 6;
	xor.b64  	%rd1265, %rd1263, %rd1264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd1604;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 8;
	shf.r.wrap.b32 	%r888, %r885, %r886, 8;
	mov.b64 	%rd1266, {%r888, %r887};
	shf.r.wrap.b32 	%r889, %r886, %r885, 1;
	shf.r.wrap.b32 	%r890, %r885, %r886, 1;
	mov.b64 	%rd1267, {%r890, %r889};
	xor.b64  	%rd1268, %rd1267, %rd1266;
	shr.u64 	%rd1269, %rd1604, 7;
	xor.b64  	%rd1270, %rd1268, %rd1269;
	add.s64 	%rd1271, %rd1265, %rd1605;
	add.s64 	%rd1272, %rd1271, %rd1617;
	add.s64 	%rd1605, %rd1272, %rd1270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r891,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r892}, %rd1249;
	}
	shf.r.wrap.b32 	%r893, %r892, %r891, 14;
	shf.r.wrap.b32 	%r894, %r891, %r892, 14;
	mov.b64 	%rd1273, {%r894, %r893};
	shf.r.wrap.b32 	%r895, %r892, %r891, 18;
	shf.r.wrap.b32 	%r896, %r891, %r892, 18;
	mov.b64 	%rd1274, {%r896, %r895};
	xor.b64  	%rd1275, %rd1273, %rd1274;
	shf.l.wrap.b32 	%r897, %r891, %r892, 23;
	shf.l.wrap.b32 	%r898, %r892, %r891, 23;
	mov.b64 	%rd1276, {%r898, %r897};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	xor.b64  	%rd1278, %rd1212, %rd1175;
	and.b64  	%rd1279, %rd1249, %rd1278;
	xor.b64  	%rd1280, %rd1279, %rd1175;
	ld.const.u64 	%rd1281, [%rd1603+312];
	add.s64 	%rd1282, %rd1281, %rd1138;
	add.s64 	%rd1283, %rd1282, %rd1605;
	add.s64 	%rd1284, %rd1283, %rd1280;
	add.s64 	%rd1285, %rd1284, %rd1277;
	add.s64 	%rd1286, %rd1285, %rd1149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r899,%dummy}, %rd1260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r900}, %rd1260;
	}
	shf.r.wrap.b32 	%r901, %r900, %r899, 28;
	shf.r.wrap.b32 	%r902, %r899, %r900, 28;
	mov.b64 	%rd1287, {%r902, %r901};
	shf.l.wrap.b32 	%r903, %r899, %r900, 30;
	shf.l.wrap.b32 	%r904, %r900, %r899, 30;
	mov.b64 	%rd1288, {%r904, %r903};
	xor.b64  	%rd1289, %rd1287, %rd1288;
	shf.l.wrap.b32 	%r905, %r899, %r900, 25;
	shf.l.wrap.b32 	%r906, %r900, %r899, 25;
	mov.b64 	%rd1290, {%r906, %r905};
	xor.b64  	%rd1291, %rd1289, %rd1290;
	and.b64  	%rd1292, %rd1260, %rd1223;
	or.b64  	%rd1293, %rd1260, %rd1223;
	and.b64  	%rd1294, %rd1293, %rd1186;
	or.b64  	%rd1295, %rd1294, %rd1292;
	add.s64 	%rd1296, %rd1295, %rd1291;
	add.s64 	%rd1297, %rd1296, %rd1285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r907,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r908}, %rd1606;
	}
	shf.r.wrap.b32 	%r909, %r908, %r907, 19;
	shf.r.wrap.b32 	%r910, %r907, %r908, 19;
	mov.b64 	%rd1298, {%r910, %r909};
	shf.l.wrap.b32 	%r911, %r907, %r908, 3;
	shf.l.wrap.b32 	%r912, %r908, %r907, 3;
	mov.b64 	%rd1299, {%r912, %r911};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	shr.u64 	%rd1301, %rd1606, 6;
	xor.b64  	%rd1302, %rd1300, %rd1301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r914}, %rd1616;
	}
	shf.r.wrap.b32 	%r915, %r914, %r913, 8;
	shf.r.wrap.b32 	%r916, %r913, %r914, 8;
	mov.b64 	%rd1303, {%r916, %r915};
	shf.r.wrap.b32 	%r917, %r914, %r913, 1;
	shf.r.wrap.b32 	%r918, %r913, %r914, 1;
	mov.b64 	%rd1304, {%r918, %r917};
	xor.b64  	%rd1305, %rd1304, %rd1303;
	shr.u64 	%rd1306, %rd1616, 7;
	xor.b64  	%rd1307, %rd1305, %rd1306;
	add.s64 	%rd1308, %rd1302, %rd1604;
	add.s64 	%rd1309, %rd1308, %rd1618;
	add.s64 	%rd1604, %rd1309, %rd1307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r919,%dummy}, %rd1286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd1286;
	}
	shf.r.wrap.b32 	%r921, %r920, %r919, 14;
	shf.r.wrap.b32 	%r922, %r919, %r920, 14;
	mov.b64 	%rd1310, {%r922, %r921};
	shf.r.wrap.b32 	%r923, %r920, %r919, 18;
	shf.r.wrap.b32 	%r924, %r919, %r920, 18;
	mov.b64 	%rd1311, {%r924, %r923};
	xor.b64  	%rd1312, %rd1310, %rd1311;
	shf.l.wrap.b32 	%r925, %r919, %r920, 23;
	shf.l.wrap.b32 	%r926, %r920, %r919, 23;
	mov.b64 	%rd1313, {%r926, %r925};
	xor.b64  	%rd1314, %rd1312, %rd1313;
	xor.b64  	%rd1315, %rd1249, %rd1212;
	and.b64  	%rd1316, %rd1286, %rd1315;
	xor.b64  	%rd1317, %rd1316, %rd1212;
	ld.const.u64 	%rd1318, [%rd1603+320];
	add.s64 	%rd1319, %rd1318, %rd1175;
	add.s64 	%rd1320, %rd1319, %rd1604;
	add.s64 	%rd1321, %rd1320, %rd1317;
	add.s64 	%rd1322, %rd1321, %rd1314;
	add.s64 	%rd1323, %rd1322, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r927,%dummy}, %rd1297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r928}, %rd1297;
	}
	shf.r.wrap.b32 	%r929, %r928, %r927, 28;
	shf.r.wrap.b32 	%r930, %r927, %r928, 28;
	mov.b64 	%rd1324, {%r930, %r929};
	shf.l.wrap.b32 	%r931, %r927, %r928, 30;
	shf.l.wrap.b32 	%r932, %r928, %r927, 30;
	mov.b64 	%rd1325, {%r932, %r931};
	xor.b64  	%rd1326, %rd1324, %rd1325;
	shf.l.wrap.b32 	%r933, %r927, %r928, 25;
	shf.l.wrap.b32 	%r934, %r928, %r927, 25;
	mov.b64 	%rd1327, {%r934, %r933};
	xor.b64  	%rd1328, %rd1326, %rd1327;
	and.b64  	%rd1329, %rd1297, %rd1260;
	or.b64  	%rd1330, %rd1297, %rd1260;
	and.b64  	%rd1331, %rd1330, %rd1223;
	or.b64  	%rd1332, %rd1331, %rd1329;
	add.s64 	%rd1333, %rd1332, %rd1328;
	add.s64 	%rd1334, %rd1333, %rd1322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r935,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r936}, %rd1605;
	}
	shf.r.wrap.b32 	%r937, %r936, %r935, 19;
	shf.r.wrap.b32 	%r938, %r935, %r936, 19;
	mov.b64 	%rd1335, {%r938, %r937};
	shf.l.wrap.b32 	%r939, %r935, %r936, 3;
	shf.l.wrap.b32 	%r940, %r936, %r935, 3;
	mov.b64 	%rd1336, {%r940, %r939};
	xor.b64  	%rd1337, %rd1335, %rd1336;
	shr.u64 	%rd1338, %rd1605, 6;
	xor.b64  	%rd1339, %rd1337, %rd1338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd1613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd1613;
	}
	shf.r.wrap.b32 	%r943, %r942, %r941, 8;
	shf.r.wrap.b32 	%r944, %r941, %r942, 8;
	mov.b64 	%rd1340, {%r944, %r943};
	shf.r.wrap.b32 	%r945, %r942, %r941, 1;
	shf.r.wrap.b32 	%r946, %r941, %r942, 1;
	mov.b64 	%rd1341, {%r946, %r945};
	xor.b64  	%rd1342, %rd1341, %rd1340;
	shr.u64 	%rd1343, %rd1613, 7;
	xor.b64  	%rd1344, %rd1342, %rd1343;
	add.s64 	%rd1345, %rd1339, %rd1616;
	add.s64 	%rd1346, %rd1345, %rd1614;
	add.s64 	%rd1616, %rd1346, %rd1344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r947,%dummy}, %rd1323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd1323;
	}
	shf.r.wrap.b32 	%r949, %r948, %r947, 14;
	shf.r.wrap.b32 	%r950, %r947, %r948, 14;
	mov.b64 	%rd1347, {%r950, %r949};
	shf.r.wrap.b32 	%r951, %r948, %r947, 18;
	shf.r.wrap.b32 	%r952, %r947, %r948, 18;
	mov.b64 	%rd1348, {%r952, %r951};
	xor.b64  	%rd1349, %rd1347, %rd1348;
	shf.l.wrap.b32 	%r953, %r947, %r948, 23;
	shf.l.wrap.b32 	%r954, %r948, %r947, 23;
	mov.b64 	%rd1350, {%r954, %r953};
	xor.b64  	%rd1351, %rd1349, %rd1350;
	xor.b64  	%rd1352, %rd1286, %rd1249;
	and.b64  	%rd1353, %rd1323, %rd1352;
	xor.b64  	%rd1354, %rd1353, %rd1249;
	ld.const.u64 	%rd1355, [%rd1603+328];
	add.s64 	%rd1356, %rd1355, %rd1212;
	add.s64 	%rd1357, %rd1356, %rd1616;
	add.s64 	%rd1358, %rd1357, %rd1354;
	add.s64 	%rd1359, %rd1358, %rd1351;
	add.s64 	%rd1360, %rd1359, %rd1223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r955,%dummy}, %rd1334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r956}, %rd1334;
	}
	shf.r.wrap.b32 	%r957, %r956, %r955, 28;
	shf.r.wrap.b32 	%r958, %r955, %r956, 28;
	mov.b64 	%rd1361, {%r958, %r957};
	shf.l.wrap.b32 	%r959, %r955, %r956, 30;
	shf.l.wrap.b32 	%r960, %r956, %r955, 30;
	mov.b64 	%rd1362, {%r960, %r959};
	xor.b64  	%rd1363, %rd1361, %rd1362;
	shf.l.wrap.b32 	%r961, %r955, %r956, 25;
	shf.l.wrap.b32 	%r962, %r956, %r955, 25;
	mov.b64 	%rd1364, {%r962, %r961};
	xor.b64  	%rd1365, %rd1363, %rd1364;
	and.b64  	%rd1366, %rd1334, %rd1297;
	or.b64  	%rd1367, %rd1334, %rd1297;
	and.b64  	%rd1368, %rd1367, %rd1260;
	or.b64  	%rd1369, %rd1368, %rd1366;
	add.s64 	%rd1370, %rd1369, %rd1365;
	add.s64 	%rd1371, %rd1370, %rd1359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r963,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r964}, %rd1604;
	}
	shf.r.wrap.b32 	%r965, %r964, %r963, 19;
	shf.r.wrap.b32 	%r966, %r963, %r964, 19;
	mov.b64 	%rd1372, {%r966, %r965};
	shf.l.wrap.b32 	%r967, %r963, %r964, 3;
	shf.l.wrap.b32 	%r968, %r964, %r963, 3;
	mov.b64 	%rd1373, {%r968, %r967};
	xor.b64  	%rd1374, %rd1372, %rd1373;
	shr.u64 	%rd1375, %rd1604, 6;
	xor.b64  	%rd1376, %rd1374, %rd1375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r969,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r970}, %rd1611;
	}
	shf.r.wrap.b32 	%r971, %r970, %r969, 8;
	shf.r.wrap.b32 	%r972, %r969, %r970, 8;
	mov.b64 	%rd1377, {%r972, %r971};
	shf.r.wrap.b32 	%r973, %r970, %r969, 1;
	shf.r.wrap.b32 	%r974, %r969, %r970, 1;
	mov.b64 	%rd1378, {%r974, %r973};
	xor.b64  	%rd1379, %rd1378, %rd1377;
	shr.u64 	%rd1380, %rd1611, 7;
	xor.b64  	%rd1381, %rd1379, %rd1380;
	add.s64 	%rd1382, %rd1376, %rd1613;
	add.s64 	%rd1383, %rd1382, %rd1612;
	add.s64 	%rd1613, %rd1383, %rd1381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r975,%dummy}, %rd1360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd1360;
	}
	shf.r.wrap.b32 	%r977, %r976, %r975, 14;
	shf.r.wrap.b32 	%r978, %r975, %r976, 14;
	mov.b64 	%rd1384, {%r978, %r977};
	shf.r.wrap.b32 	%r979, %r976, %r975, 18;
	shf.r.wrap.b32 	%r980, %r975, %r976, 18;
	mov.b64 	%rd1385, {%r980, %r979};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	shf.l.wrap.b32 	%r981, %r975, %r976, 23;
	shf.l.wrap.b32 	%r982, %r976, %r975, 23;
	mov.b64 	%rd1387, {%r982, %r981};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	xor.b64  	%rd1389, %rd1323, %rd1286;
	and.b64  	%rd1390, %rd1360, %rd1389;
	xor.b64  	%rd1391, %rd1390, %rd1286;
	ld.const.u64 	%rd1392, [%rd1603+336];
	add.s64 	%rd1393, %rd1392, %rd1249;
	add.s64 	%rd1394, %rd1393, %rd1613;
	add.s64 	%rd1395, %rd1394, %rd1391;
	add.s64 	%rd1396, %rd1395, %rd1388;
	add.s64 	%rd1397, %rd1396, %rd1260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r983,%dummy}, %rd1371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r984}, %rd1371;
	}
	shf.r.wrap.b32 	%r985, %r984, %r983, 28;
	shf.r.wrap.b32 	%r986, %r983, %r984, 28;
	mov.b64 	%rd1398, {%r986, %r985};
	shf.l.wrap.b32 	%r987, %r983, %r984, 30;
	shf.l.wrap.b32 	%r988, %r984, %r983, 30;
	mov.b64 	%rd1399, {%r988, %r987};
	xor.b64  	%rd1400, %rd1398, %rd1399;
	shf.l.wrap.b32 	%r989, %r983, %r984, 25;
	shf.l.wrap.b32 	%r990, %r984, %r983, 25;
	mov.b64 	%rd1401, {%r990, %r989};
	xor.b64  	%rd1402, %rd1400, %rd1401;
	and.b64  	%rd1403, %rd1371, %rd1334;
	or.b64  	%rd1404, %rd1371, %rd1334;
	and.b64  	%rd1405, %rd1404, %rd1297;
	or.b64  	%rd1406, %rd1405, %rd1403;
	add.s64 	%rd1407, %rd1406, %rd1402;
	add.s64 	%rd1408, %rd1407, %rd1396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd1616;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 19;
	shf.r.wrap.b32 	%r994, %r991, %r992, 19;
	mov.b64 	%rd1409, {%r994, %r993};
	shf.l.wrap.b32 	%r995, %r991, %r992, 3;
	shf.l.wrap.b32 	%r996, %r992, %r991, 3;
	mov.b64 	%rd1410, {%r996, %r995};
	xor.b64  	%rd1411, %rd1409, %rd1410;
	shr.u64 	%rd1412, %rd1616, 6;
	xor.b64  	%rd1413, %rd1411, %rd1412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd1609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd1609;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 8;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 8;
	mov.b64 	%rd1414, {%r1000, %r999};
	shf.r.wrap.b32 	%r1001, %r998, %r997, 1;
	shf.r.wrap.b32 	%r1002, %r997, %r998, 1;
	mov.b64 	%rd1415, {%r1002, %r1001};
	xor.b64  	%rd1416, %rd1415, %rd1414;
	shr.u64 	%rd1417, %rd1609, 7;
	xor.b64  	%rd1418, %rd1416, %rd1417;
	add.s64 	%rd1419, %rd1413, %rd1611;
	add.s64 	%rd1420, %rd1419, %rd1610;
	add.s64 	%rd1611, %rd1420, %rd1418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1003,%dummy}, %rd1397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1004}, %rd1397;
	}
	shf.r.wrap.b32 	%r1005, %r1004, %r1003, 14;
	shf.r.wrap.b32 	%r1006, %r1003, %r1004, 14;
	mov.b64 	%rd1421, {%r1006, %r1005};
	shf.r.wrap.b32 	%r1007, %r1004, %r1003, 18;
	shf.r.wrap.b32 	%r1008, %r1003, %r1004, 18;
	mov.b64 	%rd1422, {%r1008, %r1007};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	shf.l.wrap.b32 	%r1009, %r1003, %r1004, 23;
	shf.l.wrap.b32 	%r1010, %r1004, %r1003, 23;
	mov.b64 	%rd1424, {%r1010, %r1009};
	xor.b64  	%rd1425, %rd1423, %rd1424;
	xor.b64  	%rd1426, %rd1360, %rd1323;
	and.b64  	%rd1427, %rd1397, %rd1426;
	xor.b64  	%rd1428, %rd1427, %rd1323;
	ld.const.u64 	%rd1429, [%rd1603+344];
	add.s64 	%rd1430, %rd1429, %rd1286;
	add.s64 	%rd1431, %rd1430, %rd1611;
	add.s64 	%rd1432, %rd1431, %rd1428;
	add.s64 	%rd1433, %rd1432, %rd1425;
	add.s64 	%rd1434, %rd1433, %rd1297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1011,%dummy}, %rd1408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1012}, %rd1408;
	}
	shf.r.wrap.b32 	%r1013, %r1012, %r1011, 28;
	shf.r.wrap.b32 	%r1014, %r1011, %r1012, 28;
	mov.b64 	%rd1435, {%r1014, %r1013};
	shf.l.wrap.b32 	%r1015, %r1011, %r1012, 30;
	shf.l.wrap.b32 	%r1016, %r1012, %r1011, 30;
	mov.b64 	%rd1436, {%r1016, %r1015};
	xor.b64  	%rd1437, %rd1435, %rd1436;
	shf.l.wrap.b32 	%r1017, %r1011, %r1012, 25;
	shf.l.wrap.b32 	%r1018, %r1012, %r1011, 25;
	mov.b64 	%rd1438, {%r1018, %r1017};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	and.b64  	%rd1440, %rd1408, %rd1371;
	or.b64  	%rd1441, %rd1408, %rd1371;
	and.b64  	%rd1442, %rd1441, %rd1334;
	or.b64  	%rd1443, %rd1442, %rd1440;
	add.s64 	%rd1444, %rd1443, %rd1439;
	add.s64 	%rd1445, %rd1444, %rd1433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1019,%dummy}, %rd1613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1020}, %rd1613;
	}
	shf.r.wrap.b32 	%r1021, %r1020, %r1019, 19;
	shf.r.wrap.b32 	%r1022, %r1019, %r1020, 19;
	mov.b64 	%rd1446, {%r1022, %r1021};
	shf.l.wrap.b32 	%r1023, %r1019, %r1020, 3;
	shf.l.wrap.b32 	%r1024, %r1020, %r1019, 3;
	mov.b64 	%rd1447, {%r1024, %r1023};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	shr.u64 	%rd1449, %rd1613, 6;
	xor.b64  	%rd1450, %rd1448, %rd1449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1026}, %rd1607;
	}
	shf.r.wrap.b32 	%r1027, %r1026, %r1025, 8;
	shf.r.wrap.b32 	%r1028, %r1025, %r1026, 8;
	mov.b64 	%rd1451, {%r1028, %r1027};
	shf.r.wrap.b32 	%r1029, %r1026, %r1025, 1;
	shf.r.wrap.b32 	%r1030, %r1025, %r1026, 1;
	mov.b64 	%rd1452, {%r1030, %r1029};
	xor.b64  	%rd1453, %rd1452, %rd1451;
	shr.u64 	%rd1454, %rd1607, 7;
	xor.b64  	%rd1455, %rd1453, %rd1454;
	add.s64 	%rd1456, %rd1450, %rd1609;
	add.s64 	%rd1457, %rd1456, %rd1608;
	add.s64 	%rd1609, %rd1457, %rd1455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1031,%dummy}, %rd1434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1032}, %rd1434;
	}
	shf.r.wrap.b32 	%r1033, %r1032, %r1031, 14;
	shf.r.wrap.b32 	%r1034, %r1031, %r1032, 14;
	mov.b64 	%rd1458, {%r1034, %r1033};
	shf.r.wrap.b32 	%r1035, %r1032, %r1031, 18;
	shf.r.wrap.b32 	%r1036, %r1031, %r1032, 18;
	mov.b64 	%rd1459, {%r1036, %r1035};
	xor.b64  	%rd1460, %rd1458, %rd1459;
	shf.l.wrap.b32 	%r1037, %r1031, %r1032, 23;
	shf.l.wrap.b32 	%r1038, %r1032, %r1031, 23;
	mov.b64 	%rd1461, {%r1038, %r1037};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	xor.b64  	%rd1463, %rd1397, %rd1360;
	and.b64  	%rd1464, %rd1434, %rd1463;
	xor.b64  	%rd1465, %rd1464, %rd1360;
	ld.const.u64 	%rd1466, [%rd1603+352];
	add.s64 	%rd1467, %rd1466, %rd1323;
	add.s64 	%rd1468, %rd1467, %rd1609;
	add.s64 	%rd1469, %rd1468, %rd1465;
	add.s64 	%rd1470, %rd1469, %rd1462;
	add.s64 	%rd1627, %rd1470, %rd1334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1039,%dummy}, %rd1445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1040}, %rd1445;
	}
	shf.r.wrap.b32 	%r1041, %r1040, %r1039, 28;
	shf.r.wrap.b32 	%r1042, %r1039, %r1040, 28;
	mov.b64 	%rd1471, {%r1042, %r1041};
	shf.l.wrap.b32 	%r1043, %r1039, %r1040, 30;
	shf.l.wrap.b32 	%r1044, %r1040, %r1039, 30;
	mov.b64 	%rd1472, {%r1044, %r1043};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	shf.l.wrap.b32 	%r1045, %r1039, %r1040, 25;
	shf.l.wrap.b32 	%r1046, %r1040, %r1039, 25;
	mov.b64 	%rd1474, {%r1046, %r1045};
	xor.b64  	%rd1475, %rd1473, %rd1474;
	and.b64  	%rd1476, %rd1445, %rd1408;
	or.b64  	%rd1477, %rd1445, %rd1408;
	and.b64  	%rd1478, %rd1477, %rd1371;
	or.b64  	%rd1479, %rd1478, %rd1476;
	add.s64 	%rd1480, %rd1479, %rd1475;
	add.s64 	%rd1623, %rd1480, %rd1470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1047,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1048}, %rd1611;
	}
	shf.r.wrap.b32 	%r1049, %r1048, %r1047, 19;
	shf.r.wrap.b32 	%r1050, %r1047, %r1048, 19;
	mov.b64 	%rd1481, {%r1050, %r1049};
	shf.l.wrap.b32 	%r1051, %r1047, %r1048, 3;
	shf.l.wrap.b32 	%r1052, %r1048, %r1047, 3;
	mov.b64 	%rd1482, {%r1052, %r1051};
	xor.b64  	%rd1483, %rd1481, %rd1482;
	shr.u64 	%rd1484, %rd1611, 6;
	xor.b64  	%rd1485, %rd1483, %rd1484;
	shf.r.wrap.b32 	%r1053, %r683, %r684, 8;
	shf.r.wrap.b32 	%r1054, %r684, %r683, 8;
	mov.b64 	%rd1486, {%r1054, %r1053};
	shf.r.wrap.b32 	%r1055, %r683, %r684, 1;
	shf.r.wrap.b32 	%r1056, %r684, %r683, 1;
	mov.b64 	%rd1487, {%r1056, %r1055};
	xor.b64  	%rd1488, %rd1487, %rd1486;
	shr.u64 	%rd1489, %rd1619, 7;
	xor.b64  	%rd1490, %rd1488, %rd1489;
	add.s64 	%rd1491, %rd1485, %rd1607;
	add.s64 	%rd1492, %rd1491, %rd1606;
	add.s64 	%rd1607, %rd1492, %rd1490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1057,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1058}, %rd1627;
	}
	shf.r.wrap.b32 	%r1059, %r1058, %r1057, 14;
	shf.r.wrap.b32 	%r1060, %r1057, %r1058, 14;
	mov.b64 	%rd1493, {%r1060, %r1059};
	shf.r.wrap.b32 	%r1061, %r1058, %r1057, 18;
	shf.r.wrap.b32 	%r1062, %r1057, %r1058, 18;
	mov.b64 	%rd1494, {%r1062, %r1061};
	xor.b64  	%rd1495, %rd1493, %rd1494;
	shf.l.wrap.b32 	%r1063, %r1057, %r1058, 23;
	shf.l.wrap.b32 	%r1064, %r1058, %r1057, 23;
	mov.b64 	%rd1496, {%r1064, %r1063};
	xor.b64  	%rd1497, %rd1495, %rd1496;
	xor.b64  	%rd1498, %rd1434, %rd1397;
	and.b64  	%rd1499, %rd1627, %rd1498;
	xor.b64  	%rd1500, %rd1499, %rd1397;
	ld.const.u64 	%rd1501, [%rd1603+360];
	add.s64 	%rd1502, %rd1501, %rd1360;
	add.s64 	%rd1503, %rd1502, %rd1607;
	add.s64 	%rd1504, %rd1503, %rd1500;
	add.s64 	%rd1505, %rd1504, %rd1497;
	add.s64 	%rd1626, %rd1505, %rd1371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1065,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1066}, %rd1623;
	}
	shf.r.wrap.b32 	%r1067, %r1066, %r1065, 28;
	shf.r.wrap.b32 	%r1068, %r1065, %r1066, 28;
	mov.b64 	%rd1506, {%r1068, %r1067};
	shf.l.wrap.b32 	%r1069, %r1065, %r1066, 30;
	shf.l.wrap.b32 	%r1070, %r1066, %r1065, 30;
	mov.b64 	%rd1507, {%r1070, %r1069};
	xor.b64  	%rd1508, %rd1506, %rd1507;
	shf.l.wrap.b32 	%r1071, %r1065, %r1066, 25;
	shf.l.wrap.b32 	%r1072, %r1066, %r1065, 25;
	mov.b64 	%rd1509, {%r1072, %r1071};
	xor.b64  	%rd1510, %rd1508, %rd1509;
	and.b64  	%rd1511, %rd1623, %rd1445;
	or.b64  	%rd1512, %rd1623, %rd1445;
	and.b64  	%rd1513, %rd1512, %rd1408;
	or.b64  	%rd1514, %rd1513, %rd1511;
	add.s64 	%rd1515, %rd1514, %rd1510;
	add.s64 	%rd1622, %rd1515, %rd1505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1073,%dummy}, %rd1609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1074}, %rd1609;
	}
	shf.r.wrap.b32 	%r1075, %r1074, %r1073, 19;
	shf.r.wrap.b32 	%r1076, %r1073, %r1074, 19;
	mov.b64 	%rd1516, {%r1076, %r1075};
	shf.l.wrap.b32 	%r1077, %r1073, %r1074, 3;
	shf.l.wrap.b32 	%r1078, %r1074, %r1073, 3;
	mov.b64 	%rd1517, {%r1078, %r1077};
	xor.b64  	%rd1518, %rd1516, %rd1517;
	shr.u64 	%rd1519, %rd1609, 6;
	xor.b64  	%rd1520, %rd1518, %rd1519;
	shf.r.wrap.b32 	%r1079, %r711, %r712, 8;
	shf.r.wrap.b32 	%r1080, %r712, %r711, 8;
	mov.b64 	%rd1521, {%r1080, %r1079};
	shf.r.wrap.b32 	%r1081, %r711, %r712, 1;
	shf.r.wrap.b32 	%r1082, %r712, %r711, 1;
	mov.b64 	%rd1522, {%r1082, %r1081};
	xor.b64  	%rd1523, %rd1522, %rd1521;
	shr.u64 	%rd1524, %rd1615, 7;
	xor.b64  	%rd1525, %rd1523, %rd1524;
	add.s64 	%rd1526, %rd1520, %rd1619;
	add.s64 	%rd1527, %rd1526, %rd1605;
	add.s64 	%rd1619, %rd1527, %rd1525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1083,%dummy}, %rd1626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1084}, %rd1626;
	}
	shf.r.wrap.b32 	%r1085, %r1084, %r1083, 14;
	shf.r.wrap.b32 	%r1086, %r1083, %r1084, 14;
	mov.b64 	%rd1528, {%r1086, %r1085};
	shf.r.wrap.b32 	%r1087, %r1084, %r1083, 18;
	shf.r.wrap.b32 	%r1088, %r1083, %r1084, 18;
	mov.b64 	%rd1529, {%r1088, %r1087};
	xor.b64  	%rd1530, %rd1528, %rd1529;
	shf.l.wrap.b32 	%r1089, %r1083, %r1084, 23;
	shf.l.wrap.b32 	%r1090, %r1084, %r1083, 23;
	mov.b64 	%rd1531, {%r1090, %r1089};
	xor.b64  	%rd1532, %rd1530, %rd1531;
	xor.b64  	%rd1533, %rd1627, %rd1434;
	and.b64  	%rd1534, %rd1626, %rd1533;
	xor.b64  	%rd1535, %rd1534, %rd1434;
	ld.const.u64 	%rd1536, [%rd1603+368];
	add.s64 	%rd1537, %rd1536, %rd1397;
	add.s64 	%rd1538, %rd1537, %rd1619;
	add.s64 	%rd1539, %rd1538, %rd1535;
	add.s64 	%rd1540, %rd1539, %rd1532;
	add.s64 	%rd1625, %rd1540, %rd1408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1091,%dummy}, %rd1622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1092}, %rd1622;
	}
	shf.r.wrap.b32 	%r1093, %r1092, %r1091, 28;
	shf.r.wrap.b32 	%r1094, %r1091, %r1092, 28;
	mov.b64 	%rd1541, {%r1094, %r1093};
	shf.l.wrap.b32 	%r1095, %r1091, %r1092, 30;
	shf.l.wrap.b32 	%r1096, %r1092, %r1091, 30;
	mov.b64 	%rd1542, {%r1096, %r1095};
	xor.b64  	%rd1543, %rd1541, %rd1542;
	shf.l.wrap.b32 	%r1097, %r1091, %r1092, 25;
	shf.l.wrap.b32 	%r1098, %r1092, %r1091, 25;
	mov.b64 	%rd1544, {%r1098, %r1097};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	and.b64  	%rd1546, %rd1622, %rd1623;
	or.b64  	%rd1547, %rd1622, %rd1623;
	and.b64  	%rd1548, %rd1547, %rd1445;
	or.b64  	%rd1549, %rd1548, %rd1546;
	add.s64 	%rd1550, %rd1549, %rd1545;
	add.s64 	%rd1621, %rd1550, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1099,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1100}, %rd1607;
	}
	shf.r.wrap.b32 	%r1101, %r1100, %r1099, 19;
	shf.r.wrap.b32 	%r1102, %r1099, %r1100, 19;
	mov.b64 	%rd1551, {%r1102, %r1101};
	shf.l.wrap.b32 	%r1103, %r1099, %r1100, 3;
	shf.l.wrap.b32 	%r1104, %r1100, %r1099, 3;
	mov.b64 	%rd1552, {%r1104, %r1103};
	xor.b64  	%rd1553, %rd1551, %rd1552;
	shr.u64 	%rd1554, %rd1607, 6;
	xor.b64  	%rd1555, %rd1553, %rd1554;
	shf.r.wrap.b32 	%r1105, %r740, %r739, 1;
	shf.r.wrap.b32 	%r1106, %r739, %r740, 1;
	mov.b64 	%rd1556, {%r1106, %r1105};
	shf.r.wrap.b32 	%r1107, %r740, %r739, 8;
	shf.r.wrap.b32 	%r1108, %r739, %r740, 8;
	mov.b64 	%rd1557, {%r1108, %r1107};
	xor.b64  	%rd1558, %rd1556, %rd1557;
	shr.u64 	%rd1559, %rd1617, 7;
	xor.b64  	%rd1560, %rd1558, %rd1559;
	add.s64 	%rd1561, %rd1555, %rd1615;
	add.s64 	%rd1562, %rd1561, %rd1604;
	add.s64 	%rd1615, %rd1562, %rd1560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd1625;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 14;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 14;
	mov.b64 	%rd1563, {%r1112, %r1111};
	shf.r.wrap.b32 	%r1113, %r1110, %r1109, 18;
	shf.r.wrap.b32 	%r1114, %r1109, %r1110, 18;
	mov.b64 	%rd1564, {%r1114, %r1113};
	xor.b64  	%rd1565, %rd1563, %rd1564;
	shf.l.wrap.b32 	%r1115, %r1109, %r1110, 23;
	shf.l.wrap.b32 	%r1116, %r1110, %r1109, 23;
	mov.b64 	%rd1566, {%r1116, %r1115};
	xor.b64  	%rd1567, %rd1565, %rd1566;
	xor.b64  	%rd1568, %rd1626, %rd1627;
	and.b64  	%rd1569, %rd1625, %rd1568;
	xor.b64  	%rd1570, %rd1569, %rd1627;
	ld.const.u64 	%rd1571, [%rd1603+376];
	add.s64 	%rd1572, %rd1571, %rd1434;
	add.s64 	%rd1573, %rd1572, %rd1615;
	add.s64 	%rd1574, %rd1573, %rd1570;
	add.s64 	%rd1575, %rd1574, %rd1567;
	add.s64 	%rd1624, %rd1575, %rd1445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1117,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1118}, %rd1621;
	}
	shf.r.wrap.b32 	%r1119, %r1118, %r1117, 28;
	shf.r.wrap.b32 	%r1120, %r1117, %r1118, 28;
	mov.b64 	%rd1576, {%r1120, %r1119};
	shf.l.wrap.b32 	%r1121, %r1117, %r1118, 30;
	shf.l.wrap.b32 	%r1122, %r1118, %r1117, 30;
	mov.b64 	%rd1577, {%r1122, %r1121};
	xor.b64  	%rd1578, %rd1576, %rd1577;
	shf.l.wrap.b32 	%r1123, %r1117, %r1118, 25;
	shf.l.wrap.b32 	%r1124, %r1118, %r1117, 25;
	mov.b64 	%rd1579, {%r1124, %r1123};
	xor.b64  	%rd1580, %rd1578, %rd1579;
	and.b64  	%rd1581, %rd1621, %rd1622;
	or.b64  	%rd1582, %rd1621, %rd1622;
	and.b64  	%rd1583, %rd1582, %rd1623;
	or.b64  	%rd1584, %rd1583, %rd1581;
	add.s64 	%rd1585, %rd1584, %rd1580;
	add.s64 	%rd1620, %rd1585, %rd1575;
	add.s64 	%rd1603, %rd1603, 128;
	add.s32 	%r1145, %r1145, 16;
	setp.lt.u32 	%p2, %r1145, 65;
	@%p2 bra 	$L__BB7_3;

	add.s64 	%rd1635, %rd1620, 7640891576956012808;
	add.s64 	%rd1634, %rd1621, -4942790177534073029;
	add.s64 	%rd1633, %rd1622, 4354685564936845355;
	add.s64 	%rd1632, %rd1623, -6534734903238641935;
	add.s64 	%rd1631, %rd1624, 5840696475078001361;
	add.s64 	%rd1630, %rd1625, -7276294671716946913;
	add.s64 	%rd1629, %rd1626, 2270897969802886507;
	add.s64 	%rd1628, %rd1627, 6620516959819538809;
	add.s32 	%r1144, %r1144, 1;
	setp.lt.u32 	%p3, %r1144, %r12;
	@%p3 bra 	$L__BB7_2;

$L__BB7_5:
	sub.s32 	%r1127, %r2, %r12;
	st.global.u32 	[%rd118+64], %r1127;
	setp.eq.s32 	%p4, %r1127, 0;
	@%p4 bra 	$L__BB7_7;

	st.global.u64 	[%rd118], %rd1635;
	st.global.u64 	[%rd118+8], %rd1634;
	st.global.u64 	[%rd118+16], %rd1633;
	st.global.u64 	[%rd118+24], %rd1632;
	st.global.u64 	[%rd118+32], %rd1631;
	st.global.u64 	[%rd118+40], %rd1630;
	st.global.u64 	[%rd118+48], %rd1629;
	st.global.u64 	[%rd118+56], %rd1628;
	bra.uni 	$L__BB7_8;

$L__BB7_7:
	mov.b32 	%r1143, %envreg3;
	mov.u32 	%r1142, %tid.x;
	add.s32 	%r1141, %r1142, %r1143;
	mov.u32 	%r1140, %ctaid.x;
	mov.u32 	%r1139, %ntid.x;
	mad.lo.s32 	%r1138, %r1139, %r1140, %r1141;
	ld.param.u64 	%rd1594, [loop_sha512_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1128, %temp}, %rd1635;
	}
	mov.u32 	%r1129, 291;
	mov.u32 	%r1130, 0;
	prmt.b32 	%r1131, %r1128, %r1130, %r1129;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1132}, %rd1635;
	}
	prmt.b32 	%r1133, %r1132, %r1130, %r1129;
	mov.b64 	%rd1590, {%r1133, %r1131};
	mul.wide.u32 	%rd1591, %r1138, 16;
	add.s64 	%rd1592, %rd1594, %rd1591;
	st.global.u64 	[%rd1592], %rd1590;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1134, %temp}, %rd1634;
	}
	prmt.b32 	%r1135, %r1134, %r1130, %r1129;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1136}, %rd1634;
	}
	prmt.b32 	%r1137, %r1136, %r1130, %r1129;
	mov.b64 	%rd1593, {%r1137, %r1135};
	st.global.u64 	[%rd1592+8], %rd1593;

$L__BB7_8:
	ret;

}
	// .globl	sspr_salted_sha512
.entry sspr_salted_sha512(
	.param .u64 .ptr .global .align 4 sspr_salted_sha512_param_0,
	.param .u64 .ptr .global .align 8 sspr_salted_sha512_param_1,
	.param .u64 .ptr .const .align 4 sspr_salted_sha512_param_2,
	.param .u64 .ptr .global .align 8 sspr_salted_sha512_param_3
)
{
	.local .align 16 .b8 	__local_depot8[448];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<46>;
	.reg .b16 	%rs<38>;
	.reg .b32 	%r<8287>;
	.reg .b64 	%rd<12088>;


	mov.u64 	%SPL, __local_depot8;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd205, [sspr_salted_sha512_param_0];
	ld.param.u64 	%rd206, [sspr_salted_sha512_param_2];
	add.u64 	%rd1, %SPL, 0;
	add.u64 	%rd12030, %SP, 16;
	cvta.to.local.u64 	%rd12048, %rd12030;
	add.u64 	%rd210, %SP, 144;
	add.u64 	%rd12019, %SPL, 144;
	add.u64 	%rd211, %SP, 208;
	add.u64 	%rd4, %SPL, 208;
	mov.u32 	%r71, %ctaid.x;
	mov.u32 	%r72, %ntid.x;
	mov.u32 	%r73, %tid.x;
	mov.b32 	%r74, %envreg3;
	add.s32 	%r75, %r73, %r74;
	mad.lo.s32 	%r76, %r72, %r71, %r75;
	cvt.u64.u32 	%rd5, %r76;
	ld.const.u32 	%r1, [%rd206];
	setp.eq.s32 	%p1, %r1, 0;
	@%p1 bra 	$L__BB8_6;

	add.s64 	%rd12014, %rd206, 8;
	and.b32  	%r8255, %r1, 3;
	setp.eq.s32 	%p2, %r8255, 0;
	add.u64 	%rd12013, %SPL, 416;
	mov.u32 	%r8256, %r1;
	@%p2 bra 	$L__BB8_4;

	mov.u64 	%rd12009, %rd12013;
	mov.u64 	%rd12010, %rd12014;
	mov.u32 	%r8256, %r1;

$L__BB8_3:
	.pragma "nounroll";
	add.s32 	%r8256, %r8256, -1;
	add.s64 	%rd12014, %rd12010, 1;
	ld.const.u8 	%rs1, [%rd12010];
	add.s64 	%rd12013, %rd12009, 1;
	st.local.u8 	[%rd12009], %rs1;
	add.s32 	%r8255, %r8255, -1;
	setp.ne.s32 	%p3, %r8255, 0;
	mov.u64 	%rd12009, %rd12013;
	mov.u64 	%rd12010, %rd12014;
	@%p3 bra 	$L__BB8_3;

$L__BB8_4:
	add.s32 	%r77, %r1, -1;
	setp.lt.u32 	%p4, %r77, 3;
	@%p4 bra 	$L__BB8_6;

$L__BB8_5:
	ld.const.u8 	%rs2, [%rd12014];
	st.local.u8 	[%rd12013], %rs2;
	ld.const.u8 	%rs3, [%rd12014+1];
	st.local.u8 	[%rd12013+1], %rs3;
	ld.const.u8 	%rs4, [%rd12014+2];
	st.local.u8 	[%rd12013+2], %rs4;
	add.s64 	%rd19, %rd12014, 4;
	ld.const.u8 	%rs5, [%rd12014+3];
	add.s64 	%rd20, %rd12013, 4;
	st.local.u8 	[%rd12013+3], %rs5;
	add.s32 	%r8256, %r8256, -4;
	setp.ne.s32 	%p5, %r8256, 0;
	mov.u64 	%rd12013, %rd20;
	mov.u64 	%rd12014, %rd19;
	@%p5 bra 	$L__BB8_5;

$L__BB8_6:
	mul.lo.s64 	%rd213, %rd5, 68;
	add.s64 	%rd21, %rd205, %rd213;
	ld.global.u32 	%r10, [%rd21];
	setp.eq.s32 	%p6, %r10, 0;
	@%p6 bra 	$L__BB8_12;

	add.s64 	%rd12020, %rd21, 4;
	and.b32  	%r8259, %r10, 3;
	setp.eq.s32 	%p7, %r8259, 0;
	mov.u32 	%r8260, %r10;
	@%p7 bra 	$L__BB8_10;

	mov.u64 	%rd12015, %rd12019;
	mov.u64 	%rd12016, %rd12020;
	mov.u32 	%r8260, %r10;

$L__BB8_9:
	.pragma "nounroll";
	add.s32 	%r8260, %r8260, -1;
	add.s64 	%rd12020, %rd12016, 1;
	ld.global.u8 	%rs6, [%rd12016];
	add.s64 	%rd12019, %rd12015, 1;
	st.local.u8 	[%rd12015], %rs6;
	add.s32 	%r8259, %r8259, -1;
	setp.ne.s32 	%p8, %r8259, 0;
	mov.u64 	%rd12015, %rd12019;
	mov.u64 	%rd12016, %rd12020;
	@%p8 bra 	$L__BB8_9;

$L__BB8_10:
	add.s32 	%r78, %r10, -1;
	setp.lt.u32 	%p9, %r78, 3;
	@%p9 bra 	$L__BB8_12;

$L__BB8_11:
	ld.global.u8 	%rs7, [%rd12020];
	st.local.u8 	[%rd12019], %rs7;
	ld.global.u8 	%rs8, [%rd12020+1];
	st.local.u8 	[%rd12019+1], %rs8;
	ld.global.u8 	%rs9, [%rd12020+2];
	st.local.u8 	[%rd12019+2], %rs9;
	add.s64 	%rd33, %rd12020, 4;
	ld.global.u8 	%rs10, [%rd12020+3];
	add.s64 	%rd34, %rd12019, 4;
	st.local.u8 	[%rd12019+3], %rs10;
	add.s32 	%r8260, %r8260, -4;
	setp.ne.s32 	%p10, %r8260, 0;
	mov.u64 	%rd12019, %rd34;
	mov.u64 	%rd12020, %rd33;
	@%p10 bra 	$L__BB8_11;

$L__BB8_12:
	mov.u64 	%rd12021, 0;
	mov.u32 	%r8262, 0;
	st.local.u32 	[%rd4], %r8262;
	mov.u64 	%rd217, 7640891576956012808;
	st.local.u64 	[%rd4+8], %rd217;
	mov.u64 	%rd218, -4942790177534073029;
	st.local.u64 	[%rd4+16], %rd218;
	mov.u64 	%rd219, 4354685564936845355;
	st.local.u64 	[%rd4+24], %rd219;
	mov.u64 	%rd220, -6534734903238641935;
	st.local.u64 	[%rd4+32], %rd220;
	mov.u64 	%rd221, 5840696475078001361;
	st.local.u64 	[%rd4+40], %rd221;
	mov.u64 	%rd222, -7276294671716946913;
	st.local.u64 	[%rd4+48], %rd222;
	mov.u64 	%rd223, 2270897969802886507;
	st.local.u64 	[%rd4+56], %rd223;
	mov.u64 	%rd224, 6620516959819538809;
	st.local.u64 	[%rd4+64], %rd224;
	add.u64 	%rd226, %SP, 416;
	{ // callseq 112, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd211;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd226;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r1;
	call.uni 
	SHA512_Update, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 112
	ld.global.u32 	%r80, [%rd21];
	{ // callseq 113, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd211;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd210;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r80;
	call.uni 
	SHA512_Update, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 113
	add.s64 	%rd36, %rd12048, 1;

$L__BB8_13:
	add.s64 	%rd228, %rd36, %rd12021;
	mov.u16 	%rs11, 0;
	st.local.u8 	[%rd228], %rs11;
	add.s64 	%rd12021, %rd12021, 1;
	add.s32 	%r8262, %r8262, 1;
	setp.lt.u32 	%p11, %r8262, 127;
	@%p11 bra 	$L__BB8_13;

	mov.u16 	%rs12, 128;
	st.local.u8 	[%rd12048], %rs12;
	ld.local.u32 	%r21, [%rd4];
	shr.u32 	%r81, %r21, 21;
	shr.u32 	%r82, %r21, 13;
	cvt.u16.u32 	%rs13, %r21;
	and.b32  	%r83, %r81, 255;
	prmt.b32 	%r84, %r82, %r83, 30212;
	shl.b16 	%rs14, %rs13, 3;
	cvt.u32.u16 	%r85, %rs14;
	shr.u16 	%rs15, %rs13, 5;
	and.b16  	%rs16, %rs15, 255;
	cvt.u32.u16 	%r86, %rs16;
	prmt.b32 	%r87, %r85, %r86, 30212;
	prmt.b32 	%r88, %r87, %r84, 4180;
	mov.b32 	%r89, {%rs11, %rs11};
	st.local.v4.u32 	[%rd1], {%r89, %r89, %r89, %r88};
	and.b32  	%r8267, %r21, 127;
	setp.lt.u32 	%p12, %r8267, 112;
	selp.b32 	%r90, 112, 240, %p12;
	sub.s32 	%r8270, %r90, %r8267;
	setp.eq.s32 	%p13, %r8270, 0;
	@%p13 bra 	$L__BB8_34;

	add.s32 	%r91, %r21, %r8270;
	st.local.u32 	[%rd4], %r91;
	mov.u32 	%r92, 128;
	sub.s32 	%r24, %r92, %r8267;
	setp.lt.u32 	%p14, %r8270, %r24;
	setp.eq.s32 	%p15, %r8267, 0;
	or.pred  	%p16, %p15, %p14;
	@%p16 bra 	$L__BB8_23;

	setp.eq.s32 	%p17, %r24, 0;
	@%p17 bra 	$L__BB8_22;

	cvt.u64.u32 	%rd229, %r8267;
	add.s64 	%rd230, %rd4, %rd229;
	add.s64 	%rd12026, %rd230, 72;
	and.b32  	%r8264, %r24, 3;
	setp.eq.s32 	%p18, %r8264, 0;
	mov.u64 	%rd12027, %rd12048;
	mov.u32 	%r8265, %r24;
	@%p18 bra 	$L__BB8_20;

	mov.u64 	%rd12022, %rd12026;
	mov.u64 	%rd12023, %rd12048;
	mov.u32 	%r8265, %r24;

$L__BB8_19:
	.pragma "nounroll";
	add.s32 	%r8265, %r8265, -1;
	add.s64 	%rd12027, %rd12023, 1;
	ld.local.u8 	%rs18, [%rd12023];
	add.s64 	%rd12026, %rd12022, 1;
	st.local.u8 	[%rd12022], %rs18;
	add.s32 	%r8264, %r8264, -1;
	setp.ne.s32 	%p19, %r8264, 0;
	mov.u64 	%rd12022, %rd12026;
	mov.u64 	%rd12023, %rd12027;
	@%p19 bra 	$L__BB8_19;

$L__BB8_20:
	xor.b32  	%r93, %r8267, 127;
	setp.lt.u32 	%p20, %r93, 3;
	@%p20 bra 	$L__BB8_22;

$L__BB8_21:
	ld.local.u8 	%rs19, [%rd12027];
	st.local.u8 	[%rd12026], %rs19;
	ld.local.u8 	%rs20, [%rd12027+1];
	st.local.u8 	[%rd12026+1], %rs20;
	ld.local.u8 	%rs21, [%rd12027+2];
	st.local.u8 	[%rd12026+2], %rs21;
	add.s64 	%rd52, %rd12027, 4;
	ld.local.u8 	%rs22, [%rd12027+3];
	add.s64 	%rd53, %rd12026, 4;
	st.local.u8 	[%rd12026+3], %rs22;
	add.s32 	%r8265, %r8265, -4;
	setp.ne.s32 	%p21, %r8265, 0;
	mov.u64 	%rd12026, %rd53;
	mov.u64 	%rd12027, %rd52;
	@%p21 bra 	$L__BB8_21;

$L__BB8_22:
	ld.local.u64 	%rd231, [%rd4+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r95, %temp}, %rd231;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r96}, %rd231;
	}
	mov.u32 	%r97, 291;
	mov.u32 	%r8267, 0;
	prmt.b32 	%r98, %r95, %r8267, %r97;
	prmt.b32 	%r99, %r96, %r8267, %r97;
	mov.b64 	%rd232, {%r99, %r98};
	ld.local.u64 	%rd233, [%rd4+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r100, %temp}, %rd233;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r101}, %rd233;
	}
	prmt.b32 	%r102, %r100, %r8267, %r97;
	prmt.b32 	%r103, %r101, %r8267, %r97;
	mov.b64 	%rd234, {%r103, %r102};
	ld.local.u64 	%rd235, [%rd4+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r104, %temp}, %rd235;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r105}, %rd235;
	}
	prmt.b32 	%r106, %r104, %r8267, %r97;
	prmt.b32 	%r107, %r105, %r8267, %r97;
	mov.b64 	%rd236, {%r107, %r106};
	ld.local.u64 	%rd237, [%rd4+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r108, %temp}, %rd237;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r109}, %rd237;
	}
	prmt.b32 	%r110, %r108, %r8267, %r97;
	prmt.b32 	%r111, %r109, %r8267, %r97;
	mov.b64 	%rd238, {%r111, %r110};
	ld.local.u64 	%rd239, [%rd4+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r112, %temp}, %rd239;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r113}, %rd239;
	}
	prmt.b32 	%r114, %r112, %r8267, %r97;
	prmt.b32 	%r115, %r113, %r8267, %r97;
	mov.b64 	%rd240, {%r115, %r114};
	ld.local.u64 	%rd241, [%rd4+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r116, %temp}, %rd241;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r117}, %rd241;
	}
	prmt.b32 	%r118, %r116, %r8267, %r97;
	prmt.b32 	%r119, %r117, %r8267, %r97;
	mov.b64 	%rd242, {%r119, %r118};
	ld.local.u64 	%rd243, [%rd4+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r120, %temp}, %rd243;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r121}, %rd243;
	}
	prmt.b32 	%r122, %r120, %r8267, %r97;
	prmt.b32 	%r123, %r121, %r8267, %r97;
	mov.b64 	%rd244, {%r123, %r122};
	ld.local.u64 	%rd245, [%rd4+128];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r124, %temp}, %rd245;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r125}, %rd245;
	}
	prmt.b32 	%r126, %r124, %r8267, %r97;
	prmt.b32 	%r127, %r125, %r8267, %r97;
	mov.b64 	%rd246, {%r127, %r126};
	ld.local.u64 	%rd247, [%rd4+136];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r128, %temp}, %rd247;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r129}, %rd247;
	}
	prmt.b32 	%r130, %r128, %r8267, %r97;
	prmt.b32 	%r131, %r129, %r8267, %r97;
	mov.b64 	%rd248, {%r131, %r130};
	ld.local.u64 	%rd249, [%rd4+144];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r132, %temp}, %rd249;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r133}, %rd249;
	}
	prmt.b32 	%r134, %r132, %r8267, %r97;
	prmt.b32 	%r135, %r133, %r8267, %r97;
	mov.b64 	%rd250, {%r135, %r134};
	ld.local.u64 	%rd251, [%rd4+152];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r136, %temp}, %rd251;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r137}, %rd251;
	}
	prmt.b32 	%r138, %r136, %r8267, %r97;
	prmt.b32 	%r139, %r137, %r8267, %r97;
	mov.b64 	%rd252, {%r139, %r138};
	ld.local.u64 	%rd253, [%rd4+160];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r140, %temp}, %rd253;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r141}, %rd253;
	}
	prmt.b32 	%r142, %r140, %r8267, %r97;
	prmt.b32 	%r143, %r141, %r8267, %r97;
	mov.b64 	%rd254, {%r143, %r142};
	ld.local.u64 	%rd255, [%rd4+168];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r144, %temp}, %rd255;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r145}, %rd255;
	}
	prmt.b32 	%r146, %r144, %r8267, %r97;
	prmt.b32 	%r147, %r145, %r8267, %r97;
	mov.b64 	%rd256, {%r147, %r146};
	ld.local.u64 	%rd257, [%rd4+176];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r148, %temp}, %rd257;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r149}, %rd257;
	}
	prmt.b32 	%r150, %r148, %r8267, %r97;
	prmt.b32 	%r151, %r149, %r8267, %r97;
	mov.b64 	%rd258, {%r151, %r150};
	ld.local.u64 	%rd259, [%rd4+184];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r152, %temp}, %rd259;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r153}, %rd259;
	}
	prmt.b32 	%r154, %r152, %r8267, %r97;
	prmt.b32 	%r155, %r153, %r8267, %r97;
	mov.b64 	%rd260, {%r155, %r154};
	ld.local.u64 	%rd261, [%rd4+192];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r156, %temp}, %rd261;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r157}, %rd261;
	}
	prmt.b32 	%r158, %r156, %r8267, %r97;
	prmt.b32 	%r159, %r157, %r8267, %r97;
	mov.b64 	%rd262, {%r159, %r158};
	ld.local.u64 	%rd263, [%rd4+64];
	add.s64 	%rd264, %rd232, %rd263;
	ld.local.u64 	%rd265, [%rd4+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r160,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r161}, %rd265;
	}
	shf.r.wrap.b32 	%r162, %r161, %r160, 14;
	shf.r.wrap.b32 	%r163, %r160, %r161, 14;
	mov.b64 	%rd266, {%r163, %r162};
	shf.r.wrap.b32 	%r164, %r161, %r160, 18;
	shf.r.wrap.b32 	%r165, %r160, %r161, 18;
	mov.b64 	%rd267, {%r165, %r164};
	xor.b64  	%rd268, %rd266, %rd267;
	shf.l.wrap.b32 	%r166, %r160, %r161, 23;
	shf.l.wrap.b32 	%r167, %r161, %r160, 23;
	mov.b64 	%rd269, {%r167, %r166};
	xor.b64  	%rd270, %rd268, %rd269;
	add.s64 	%rd271, %rd264, %rd270;
	ld.local.u64 	%rd272, [%rd4+56];
	ld.local.u64 	%rd273, [%rd4+48];
	xor.b64  	%rd274, %rd272, %rd273;
	and.b64  	%rd275, %rd274, %rd265;
	xor.b64  	%rd276, %rd275, %rd272;
	add.s64 	%rd277, %rd271, %rd276;
	add.s64 	%rd278, %rd277, 4794697086780616226;
	ld.local.u64 	%rd279, [%rd4+32];
	add.s64 	%rd280, %rd278, %rd279;
	ld.local.u64 	%rd281, [%rd4+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r168,%dummy}, %rd281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r169}, %rd281;
	}
	shf.r.wrap.b32 	%r170, %r169, %r168, 28;
	shf.r.wrap.b32 	%r171, %r168, %r169, 28;
	mov.b64 	%rd282, {%r171, %r170};
	shf.l.wrap.b32 	%r172, %r168, %r169, 30;
	shf.l.wrap.b32 	%r173, %r169, %r168, 30;
	mov.b64 	%rd283, {%r173, %r172};
	xor.b64  	%rd284, %rd282, %rd283;
	shf.l.wrap.b32 	%r174, %r168, %r169, 25;
	shf.l.wrap.b32 	%r175, %r169, %r168, 25;
	mov.b64 	%rd285, {%r175, %r174};
	xor.b64  	%rd286, %rd284, %rd285;
	ld.local.u64 	%rd287, [%rd4+16];
	and.b64  	%rd288, %rd287, %rd281;
	or.b64  	%rd289, %rd287, %rd281;
	ld.local.u64 	%rd290, [%rd4+24];
	and.b64  	%rd291, %rd290, %rd289;
	or.b64  	%rd292, %rd291, %rd288;
	add.s64 	%rd293, %rd292, %rd286;
	add.s64 	%rd294, %rd293, %rd278;
	add.s64 	%rd295, %rd234, %rd272;
	xor.b64  	%rd296, %rd273, %rd265;
	and.b64  	%rd297, %rd280, %rd296;
	xor.b64  	%rd298, %rd297, %rd273;
	add.s64 	%rd299, %rd295, %rd298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r176,%dummy}, %rd280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r177}, %rd280;
	}
	shf.r.wrap.b32 	%r178, %r177, %r176, 14;
	shf.r.wrap.b32 	%r179, %r176, %r177, 14;
	mov.b64 	%rd300, {%r179, %r178};
	shf.r.wrap.b32 	%r180, %r177, %r176, 18;
	shf.r.wrap.b32 	%r181, %r176, %r177, 18;
	mov.b64 	%rd301, {%r181, %r180};
	xor.b64  	%rd302, %rd300, %rd301;
	shf.l.wrap.b32 	%r182, %r176, %r177, 23;
	shf.l.wrap.b32 	%r183, %r177, %r176, 23;
	mov.b64 	%rd303, {%r183, %r182};
	xor.b64  	%rd304, %rd302, %rd303;
	add.s64 	%rd305, %rd299, %rd304;
	add.s64 	%rd306, %rd305, 8158064640168781261;
	add.s64 	%rd307, %rd306, %rd290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r184,%dummy}, %rd294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r185}, %rd294;
	}
	shf.r.wrap.b32 	%r186, %r185, %r184, 28;
	shf.r.wrap.b32 	%r187, %r184, %r185, 28;
	mov.b64 	%rd308, {%r187, %r186};
	shf.l.wrap.b32 	%r188, %r184, %r185, 30;
	shf.l.wrap.b32 	%r189, %r185, %r184, 30;
	mov.b64 	%rd309, {%r189, %r188};
	xor.b64  	%rd310, %rd308, %rd309;
	shf.l.wrap.b32 	%r190, %r184, %r185, 25;
	shf.l.wrap.b32 	%r191, %r185, %r184, 25;
	mov.b64 	%rd311, {%r191, %r190};
	xor.b64  	%rd312, %rd310, %rd311;
	and.b64  	%rd313, %rd294, %rd281;
	or.b64  	%rd314, %rd294, %rd281;
	and.b64  	%rd315, %rd314, %rd287;
	or.b64  	%rd316, %rd315, %rd313;
	add.s64 	%rd317, %rd316, %rd312;
	add.s64 	%rd318, %rd317, %rd306;
	add.s64 	%rd319, %rd236, %rd273;
	xor.b64  	%rd320, %rd280, %rd265;
	and.b64  	%rd321, %rd307, %rd320;
	xor.b64  	%rd322, %rd321, %rd265;
	add.s64 	%rd323, %rd319, %rd322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r192,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r193}, %rd307;
	}
	shf.r.wrap.b32 	%r194, %r193, %r192, 14;
	shf.r.wrap.b32 	%r195, %r192, %r193, 14;
	mov.b64 	%rd324, {%r195, %r194};
	shf.r.wrap.b32 	%r196, %r193, %r192, 18;
	shf.r.wrap.b32 	%r197, %r192, %r193, 18;
	mov.b64 	%rd325, {%r197, %r196};
	xor.b64  	%rd326, %rd324, %rd325;
	shf.l.wrap.b32 	%r198, %r192, %r193, 23;
	shf.l.wrap.b32 	%r199, %r193, %r192, 23;
	mov.b64 	%rd327, {%r199, %r198};
	xor.b64  	%rd328, %rd326, %rd327;
	add.s64 	%rd329, %rd323, %rd328;
	add.s64 	%rd330, %rd329, -5349999486874862801;
	add.s64 	%rd331, %rd330, %rd287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r200,%dummy}, %rd318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r201}, %rd318;
	}
	shf.r.wrap.b32 	%r202, %r201, %r200, 28;
	shf.r.wrap.b32 	%r203, %r200, %r201, 28;
	mov.b64 	%rd332, {%r203, %r202};
	shf.l.wrap.b32 	%r204, %r200, %r201, 30;
	shf.l.wrap.b32 	%r205, %r201, %r200, 30;
	mov.b64 	%rd333, {%r205, %r204};
	xor.b64  	%rd334, %rd332, %rd333;
	shf.l.wrap.b32 	%r206, %r200, %r201, 25;
	shf.l.wrap.b32 	%r207, %r201, %r200, 25;
	mov.b64 	%rd335, {%r207, %r206};
	xor.b64  	%rd336, %rd334, %rd335;
	and.b64  	%rd337, %rd318, %rd294;
	or.b64  	%rd338, %rd318, %rd294;
	and.b64  	%rd339, %rd338, %rd281;
	or.b64  	%rd340, %rd339, %rd337;
	add.s64 	%rd341, %rd340, %rd336;
	add.s64 	%rd342, %rd341, %rd330;
	add.s64 	%rd343, %rd238, %rd265;
	xor.b64  	%rd344, %rd307, %rd280;
	and.b64  	%rd345, %rd331, %rd344;
	xor.b64  	%rd346, %rd345, %rd280;
	add.s64 	%rd347, %rd343, %rd346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r208,%dummy}, %rd331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r209}, %rd331;
	}
	shf.r.wrap.b32 	%r210, %r209, %r208, 14;
	shf.r.wrap.b32 	%r211, %r208, %r209, 14;
	mov.b64 	%rd348, {%r211, %r210};
	shf.r.wrap.b32 	%r212, %r209, %r208, 18;
	shf.r.wrap.b32 	%r213, %r208, %r209, 18;
	mov.b64 	%rd349, {%r213, %r212};
	xor.b64  	%rd350, %rd348, %rd349;
	shf.l.wrap.b32 	%r214, %r208, %r209, 23;
	shf.l.wrap.b32 	%r215, %r209, %r208, 23;
	mov.b64 	%rd351, {%r215, %r214};
	xor.b64  	%rd352, %rd350, %rd351;
	add.s64 	%rd353, %rd347, %rd352;
	add.s64 	%rd354, %rd353, -1606136188198331460;
	add.s64 	%rd355, %rd354, %rd281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r216,%dummy}, %rd342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r217}, %rd342;
	}
	shf.r.wrap.b32 	%r218, %r217, %r216, 28;
	shf.r.wrap.b32 	%r219, %r216, %r217, 28;
	mov.b64 	%rd356, {%r219, %r218};
	shf.l.wrap.b32 	%r220, %r216, %r217, 30;
	shf.l.wrap.b32 	%r221, %r217, %r216, 30;
	mov.b64 	%rd357, {%r221, %r220};
	xor.b64  	%rd358, %rd356, %rd357;
	shf.l.wrap.b32 	%r222, %r216, %r217, 25;
	shf.l.wrap.b32 	%r223, %r217, %r216, 25;
	mov.b64 	%rd359, {%r223, %r222};
	xor.b64  	%rd360, %rd358, %rd359;
	and.b64  	%rd361, %rd342, %rd318;
	or.b64  	%rd362, %rd342, %rd318;
	and.b64  	%rd363, %rd362, %rd294;
	or.b64  	%rd364, %rd363, %rd361;
	add.s64 	%rd365, %rd364, %rd360;
	add.s64 	%rd366, %rd365, %rd354;
	add.s64 	%rd367, %rd240, %rd280;
	xor.b64  	%rd368, %rd331, %rd307;
	and.b64  	%rd369, %rd355, %rd368;
	xor.b64  	%rd370, %rd369, %rd307;
	add.s64 	%rd371, %rd367, %rd370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r224,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r225}, %rd355;
	}
	shf.r.wrap.b32 	%r226, %r225, %r224, 14;
	shf.r.wrap.b32 	%r227, %r224, %r225, 14;
	mov.b64 	%rd372, {%r227, %r226};
	shf.r.wrap.b32 	%r228, %r225, %r224, 18;
	shf.r.wrap.b32 	%r229, %r224, %r225, 18;
	mov.b64 	%rd373, {%r229, %r228};
	xor.b64  	%rd374, %rd372, %rd373;
	shf.l.wrap.b32 	%r230, %r224, %r225, 23;
	shf.l.wrap.b32 	%r231, %r225, %r224, 23;
	mov.b64 	%rd375, {%r231, %r230};
	xor.b64  	%rd376, %rd374, %rd375;
	add.s64 	%rd377, %rd371, %rd376;
	add.s64 	%rd378, %rd377, 4131703408338449720;
	add.s64 	%rd379, %rd378, %rd294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r232,%dummy}, %rd366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd366;
	}
	shf.r.wrap.b32 	%r234, %r233, %r232, 28;
	shf.r.wrap.b32 	%r235, %r232, %r233, 28;
	mov.b64 	%rd380, {%r235, %r234};
	shf.l.wrap.b32 	%r236, %r232, %r233, 30;
	shf.l.wrap.b32 	%r237, %r233, %r232, 30;
	mov.b64 	%rd381, {%r237, %r236};
	xor.b64  	%rd382, %rd380, %rd381;
	shf.l.wrap.b32 	%r238, %r232, %r233, 25;
	shf.l.wrap.b32 	%r239, %r233, %r232, 25;
	mov.b64 	%rd383, {%r239, %r238};
	xor.b64  	%rd384, %rd382, %rd383;
	and.b64  	%rd385, %rd366, %rd342;
	or.b64  	%rd386, %rd366, %rd342;
	and.b64  	%rd387, %rd386, %rd318;
	or.b64  	%rd388, %rd387, %rd385;
	add.s64 	%rd389, %rd388, %rd384;
	add.s64 	%rd390, %rd389, %rd378;
	add.s64 	%rd391, %rd242, %rd307;
	xor.b64  	%rd392, %rd355, %rd331;
	and.b64  	%rd393, %rd379, %rd392;
	xor.b64  	%rd394, %rd393, %rd331;
	add.s64 	%rd395, %rd391, %rd394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r240,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r241}, %rd379;
	}
	shf.r.wrap.b32 	%r242, %r241, %r240, 14;
	shf.r.wrap.b32 	%r243, %r240, %r241, 14;
	mov.b64 	%rd396, {%r243, %r242};
	shf.r.wrap.b32 	%r244, %r241, %r240, 18;
	shf.r.wrap.b32 	%r245, %r240, %r241, 18;
	mov.b64 	%rd397, {%r245, %r244};
	xor.b64  	%rd398, %rd396, %rd397;
	shf.l.wrap.b32 	%r246, %r240, %r241, 23;
	shf.l.wrap.b32 	%r247, %r241, %r240, 23;
	mov.b64 	%rd399, {%r247, %r246};
	xor.b64  	%rd400, %rd398, %rd399;
	add.s64 	%rd401, %rd395, %rd400;
	add.s64 	%rd402, %rd401, 6480981068601479193;
	add.s64 	%rd403, %rd402, %rd318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r248,%dummy}, %rd390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd390;
	}
	shf.r.wrap.b32 	%r250, %r249, %r248, 28;
	shf.r.wrap.b32 	%r251, %r248, %r249, 28;
	mov.b64 	%rd404, {%r251, %r250};
	shf.l.wrap.b32 	%r252, %r248, %r249, 30;
	shf.l.wrap.b32 	%r253, %r249, %r248, 30;
	mov.b64 	%rd405, {%r253, %r252};
	xor.b64  	%rd406, %rd404, %rd405;
	shf.l.wrap.b32 	%r254, %r248, %r249, 25;
	shf.l.wrap.b32 	%r255, %r249, %r248, 25;
	mov.b64 	%rd407, {%r255, %r254};
	xor.b64  	%rd408, %rd406, %rd407;
	and.b64  	%rd409, %rd390, %rd366;
	or.b64  	%rd410, %rd390, %rd366;
	and.b64  	%rd411, %rd410, %rd342;
	or.b64  	%rd412, %rd411, %rd409;
	add.s64 	%rd413, %rd412, %rd408;
	add.s64 	%rd414, %rd413, %rd402;
	add.s64 	%rd415, %rd244, %rd331;
	xor.b64  	%rd416, %rd379, %rd355;
	and.b64  	%rd417, %rd403, %rd416;
	xor.b64  	%rd418, %rd417, %rd355;
	add.s64 	%rd419, %rd415, %rd418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r256,%dummy}, %rd403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r257}, %rd403;
	}
	shf.r.wrap.b32 	%r258, %r257, %r256, 14;
	shf.r.wrap.b32 	%r259, %r256, %r257, 14;
	mov.b64 	%rd420, {%r259, %r258};
	shf.r.wrap.b32 	%r260, %r257, %r256, 18;
	shf.r.wrap.b32 	%r261, %r256, %r257, 18;
	mov.b64 	%rd421, {%r261, %r260};
	xor.b64  	%rd422, %rd420, %rd421;
	shf.l.wrap.b32 	%r262, %r256, %r257, 23;
	shf.l.wrap.b32 	%r263, %r257, %r256, 23;
	mov.b64 	%rd423, {%r263, %r262};
	xor.b64  	%rd424, %rd422, %rd423;
	add.s64 	%rd425, %rd419, %rd424;
	add.s64 	%rd426, %rd425, -7908458776815382629;
	add.s64 	%rd427, %rd426, %rd342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r264,%dummy}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd414;
	}
	shf.r.wrap.b32 	%r266, %r265, %r264, 28;
	shf.r.wrap.b32 	%r267, %r264, %r265, 28;
	mov.b64 	%rd428, {%r267, %r266};
	shf.l.wrap.b32 	%r268, %r264, %r265, 30;
	shf.l.wrap.b32 	%r269, %r265, %r264, 30;
	mov.b64 	%rd429, {%r269, %r268};
	xor.b64  	%rd430, %rd428, %rd429;
	shf.l.wrap.b32 	%r270, %r264, %r265, 25;
	shf.l.wrap.b32 	%r271, %r265, %r264, 25;
	mov.b64 	%rd431, {%r271, %r270};
	xor.b64  	%rd432, %rd430, %rd431;
	and.b64  	%rd433, %rd414, %rd390;
	or.b64  	%rd434, %rd414, %rd390;
	and.b64  	%rd435, %rd434, %rd366;
	or.b64  	%rd436, %rd435, %rd433;
	add.s64 	%rd437, %rd436, %rd432;
	add.s64 	%rd438, %rd437, %rd426;
	add.s64 	%rd439, %rd246, %rd355;
	xor.b64  	%rd440, %rd403, %rd379;
	and.b64  	%rd441, %rd427, %rd440;
	xor.b64  	%rd442, %rd441, %rd379;
	add.s64 	%rd443, %rd439, %rd442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r272,%dummy}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r273}, %rd427;
	}
	shf.r.wrap.b32 	%r274, %r273, %r272, 14;
	shf.r.wrap.b32 	%r275, %r272, %r273, 14;
	mov.b64 	%rd444, {%r275, %r274};
	shf.r.wrap.b32 	%r276, %r273, %r272, 18;
	shf.r.wrap.b32 	%r277, %r272, %r273, 18;
	mov.b64 	%rd445, {%r277, %r276};
	xor.b64  	%rd446, %rd444, %rd445;
	shf.l.wrap.b32 	%r278, %r272, %r273, 23;
	shf.l.wrap.b32 	%r279, %r273, %r272, 23;
	mov.b64 	%rd447, {%r279, %r278};
	xor.b64  	%rd448, %rd446, %rd447;
	add.s64 	%rd449, %rd443, %rd448;
	add.s64 	%rd450, %rd449, -6116909921290321640;
	add.s64 	%rd451, %rd450, %rd366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r280,%dummy}, %rd438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r281}, %rd438;
	}
	shf.r.wrap.b32 	%r282, %r281, %r280, 28;
	shf.r.wrap.b32 	%r283, %r280, %r281, 28;
	mov.b64 	%rd452, {%r283, %r282};
	shf.l.wrap.b32 	%r284, %r280, %r281, 30;
	shf.l.wrap.b32 	%r285, %r281, %r280, 30;
	mov.b64 	%rd453, {%r285, %r284};
	xor.b64  	%rd454, %rd452, %rd453;
	shf.l.wrap.b32 	%r286, %r280, %r281, 25;
	shf.l.wrap.b32 	%r287, %r281, %r280, 25;
	mov.b64 	%rd455, {%r287, %r286};
	xor.b64  	%rd456, %rd454, %rd455;
	and.b64  	%rd457, %rd438, %rd414;
	or.b64  	%rd458, %rd438, %rd414;
	and.b64  	%rd459, %rd458, %rd390;
	or.b64  	%rd460, %rd459, %rd457;
	add.s64 	%rd461, %rd460, %rd456;
	add.s64 	%rd462, %rd461, %rd450;
	add.s64 	%rd463, %rd248, %rd379;
	xor.b64  	%rd464, %rd427, %rd403;
	and.b64  	%rd465, %rd451, %rd464;
	xor.b64  	%rd466, %rd465, %rd403;
	add.s64 	%rd467, %rd463, %rd466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r288,%dummy}, %rd451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r289}, %rd451;
	}
	shf.r.wrap.b32 	%r290, %r289, %r288, 14;
	shf.r.wrap.b32 	%r291, %r288, %r289, 14;
	mov.b64 	%rd468, {%r291, %r290};
	shf.r.wrap.b32 	%r292, %r289, %r288, 18;
	shf.r.wrap.b32 	%r293, %r288, %r289, 18;
	mov.b64 	%rd469, {%r293, %r292};
	xor.b64  	%rd470, %rd468, %rd469;
	shf.l.wrap.b32 	%r294, %r288, %r289, 23;
	shf.l.wrap.b32 	%r295, %r289, %r288, 23;
	mov.b64 	%rd471, {%r295, %r294};
	xor.b64  	%rd472, %rd470, %rd471;
	add.s64 	%rd473, %rd467, %rd472;
	add.s64 	%rd474, %rd473, -2880145864133508542;
	add.s64 	%rd475, %rd474, %rd390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r296,%dummy}, %rd462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r297}, %rd462;
	}
	shf.r.wrap.b32 	%r298, %r297, %r296, 28;
	shf.r.wrap.b32 	%r299, %r296, %r297, 28;
	mov.b64 	%rd476, {%r299, %r298};
	shf.l.wrap.b32 	%r300, %r296, %r297, 30;
	shf.l.wrap.b32 	%r301, %r297, %r296, 30;
	mov.b64 	%rd477, {%r301, %r300};
	xor.b64  	%rd478, %rd476, %rd477;
	shf.l.wrap.b32 	%r302, %r296, %r297, 25;
	shf.l.wrap.b32 	%r303, %r297, %r296, 25;
	mov.b64 	%rd479, {%r303, %r302};
	xor.b64  	%rd480, %rd478, %rd479;
	and.b64  	%rd481, %rd462, %rd438;
	or.b64  	%rd482, %rd462, %rd438;
	and.b64  	%rd483, %rd482, %rd414;
	or.b64  	%rd484, %rd483, %rd481;
	add.s64 	%rd485, %rd484, %rd480;
	add.s64 	%rd486, %rd485, %rd474;
	add.s64 	%rd487, %rd250, %rd403;
	xor.b64  	%rd488, %rd451, %rd427;
	and.b64  	%rd489, %rd475, %rd488;
	xor.b64  	%rd490, %rd489, %rd427;
	add.s64 	%rd491, %rd487, %rd490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r304,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r305}, %rd475;
	}
	shf.r.wrap.b32 	%r306, %r305, %r304, 14;
	shf.r.wrap.b32 	%r307, %r304, %r305, 14;
	mov.b64 	%rd492, {%r307, %r306};
	shf.r.wrap.b32 	%r308, %r305, %r304, 18;
	shf.r.wrap.b32 	%r309, %r304, %r305, 18;
	mov.b64 	%rd493, {%r309, %r308};
	xor.b64  	%rd494, %rd492, %rd493;
	shf.l.wrap.b32 	%r310, %r304, %r305, 23;
	shf.l.wrap.b32 	%r311, %r305, %r304, 23;
	mov.b64 	%rd495, {%r311, %r310};
	xor.b64  	%rd496, %rd494, %rd495;
	add.s64 	%rd497, %rd491, %rd496;
	add.s64 	%rd498, %rd497, 1334009975649890238;
	add.s64 	%rd499, %rd498, %rd414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd486;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 28;
	shf.r.wrap.b32 	%r315, %r312, %r313, 28;
	mov.b64 	%rd500, {%r315, %r314};
	shf.l.wrap.b32 	%r316, %r312, %r313, 30;
	shf.l.wrap.b32 	%r317, %r313, %r312, 30;
	mov.b64 	%rd501, {%r317, %r316};
	xor.b64  	%rd502, %rd500, %rd501;
	shf.l.wrap.b32 	%r318, %r312, %r313, 25;
	shf.l.wrap.b32 	%r319, %r313, %r312, 25;
	mov.b64 	%rd503, {%r319, %r318};
	xor.b64  	%rd504, %rd502, %rd503;
	and.b64  	%rd505, %rd486, %rd462;
	or.b64  	%rd506, %rd486, %rd462;
	and.b64  	%rd507, %rd506, %rd438;
	or.b64  	%rd508, %rd507, %rd505;
	add.s64 	%rd509, %rd508, %rd504;
	add.s64 	%rd510, %rd509, %rd498;
	add.s64 	%rd511, %rd252, %rd427;
	xor.b64  	%rd512, %rd475, %rd451;
	and.b64  	%rd513, %rd499, %rd512;
	xor.b64  	%rd514, %rd513, %rd451;
	add.s64 	%rd515, %rd511, %rd514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r320,%dummy}, %rd499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r321}, %rd499;
	}
	shf.r.wrap.b32 	%r322, %r321, %r320, 14;
	shf.r.wrap.b32 	%r323, %r320, %r321, 14;
	mov.b64 	%rd516, {%r323, %r322};
	shf.r.wrap.b32 	%r324, %r321, %r320, 18;
	shf.r.wrap.b32 	%r325, %r320, %r321, 18;
	mov.b64 	%rd517, {%r325, %r324};
	xor.b64  	%rd518, %rd516, %rd517;
	shf.l.wrap.b32 	%r326, %r320, %r321, 23;
	shf.l.wrap.b32 	%r327, %r321, %r320, 23;
	mov.b64 	%rd519, {%r327, %r326};
	xor.b64  	%rd520, %rd518, %rd519;
	add.s64 	%rd521, %rd515, %rd520;
	add.s64 	%rd522, %rd521, 2608012711638119052;
	add.s64 	%rd523, %rd522, %rd438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r328,%dummy}, %rd510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r329}, %rd510;
	}
	shf.r.wrap.b32 	%r330, %r329, %r328, 28;
	shf.r.wrap.b32 	%r331, %r328, %r329, 28;
	mov.b64 	%rd524, {%r331, %r330};
	shf.l.wrap.b32 	%r332, %r328, %r329, 30;
	shf.l.wrap.b32 	%r333, %r329, %r328, 30;
	mov.b64 	%rd525, {%r333, %r332};
	xor.b64  	%rd526, %rd524, %rd525;
	shf.l.wrap.b32 	%r334, %r328, %r329, 25;
	shf.l.wrap.b32 	%r335, %r329, %r328, 25;
	mov.b64 	%rd527, {%r335, %r334};
	xor.b64  	%rd528, %rd526, %rd527;
	and.b64  	%rd529, %rd510, %rd486;
	or.b64  	%rd530, %rd510, %rd486;
	and.b64  	%rd531, %rd530, %rd462;
	or.b64  	%rd532, %rd531, %rd529;
	add.s64 	%rd533, %rd532, %rd528;
	add.s64 	%rd534, %rd533, %rd522;
	add.s64 	%rd535, %rd254, %rd451;
	xor.b64  	%rd536, %rd499, %rd475;
	and.b64  	%rd537, %rd523, %rd536;
	xor.b64  	%rd538, %rd537, %rd475;
	add.s64 	%rd539, %rd535, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd523;
	}
	shf.r.wrap.b32 	%r338, %r337, %r336, 14;
	shf.r.wrap.b32 	%r339, %r336, %r337, 14;
	mov.b64 	%rd540, {%r339, %r338};
	shf.r.wrap.b32 	%r340, %r337, %r336, 18;
	shf.r.wrap.b32 	%r341, %r336, %r337, 18;
	mov.b64 	%rd541, {%r341, %r340};
	xor.b64  	%rd542, %rd540, %rd541;
	shf.l.wrap.b32 	%r342, %r336, %r337, 23;
	shf.l.wrap.b32 	%r343, %r337, %r336, 23;
	mov.b64 	%rd543, {%r343, %r342};
	xor.b64  	%rd544, %rd542, %rd543;
	add.s64 	%rd545, %rd539, %rd544;
	add.s64 	%rd546, %rd545, 6128411473006802146;
	add.s64 	%rd547, %rd546, %rd462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r344,%dummy}, %rd534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r345}, %rd534;
	}
	shf.r.wrap.b32 	%r346, %r345, %r344, 28;
	shf.r.wrap.b32 	%r347, %r344, %r345, 28;
	mov.b64 	%rd548, {%r347, %r346};
	shf.l.wrap.b32 	%r348, %r344, %r345, 30;
	shf.l.wrap.b32 	%r349, %r345, %r344, 30;
	mov.b64 	%rd549, {%r349, %r348};
	xor.b64  	%rd550, %rd548, %rd549;
	shf.l.wrap.b32 	%r350, %r344, %r345, 25;
	shf.l.wrap.b32 	%r351, %r345, %r344, 25;
	mov.b64 	%rd551, {%r351, %r350};
	xor.b64  	%rd552, %rd550, %rd551;
	and.b64  	%rd553, %rd534, %rd510;
	or.b64  	%rd554, %rd534, %rd510;
	and.b64  	%rd555, %rd554, %rd486;
	or.b64  	%rd556, %rd555, %rd553;
	add.s64 	%rd557, %rd556, %rd552;
	add.s64 	%rd558, %rd557, %rd546;
	add.s64 	%rd559, %rd256, %rd475;
	xor.b64  	%rd560, %rd523, %rd499;
	and.b64  	%rd561, %rd547, %rd560;
	xor.b64  	%rd562, %rd561, %rd499;
	add.s64 	%rd563, %rd559, %rd562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r352,%dummy}, %rd547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r353}, %rd547;
	}
	shf.r.wrap.b32 	%r354, %r353, %r352, 14;
	shf.r.wrap.b32 	%r355, %r352, %r353, 14;
	mov.b64 	%rd564, {%r355, %r354};
	shf.r.wrap.b32 	%r356, %r353, %r352, 18;
	shf.r.wrap.b32 	%r357, %r352, %r353, 18;
	mov.b64 	%rd565, {%r357, %r356};
	xor.b64  	%rd566, %rd564, %rd565;
	shf.l.wrap.b32 	%r358, %r352, %r353, 23;
	shf.l.wrap.b32 	%r359, %r353, %r352, 23;
	mov.b64 	%rd567, {%r359, %r358};
	xor.b64  	%rd568, %rd566, %rd567;
	add.s64 	%rd569, %rd563, %rd568;
	add.s64 	%rd570, %rd569, 8268148722764581231;
	add.s64 	%rd571, %rd570, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd558;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 28;
	shf.r.wrap.b32 	%r363, %r360, %r361, 28;
	mov.b64 	%rd572, {%r363, %r362};
	shf.l.wrap.b32 	%r364, %r360, %r361, 30;
	shf.l.wrap.b32 	%r365, %r361, %r360, 30;
	mov.b64 	%rd573, {%r365, %r364};
	xor.b64  	%rd574, %rd572, %rd573;
	shf.l.wrap.b32 	%r366, %r360, %r361, 25;
	shf.l.wrap.b32 	%r367, %r361, %r360, 25;
	mov.b64 	%rd575, {%r367, %r366};
	xor.b64  	%rd576, %rd574, %rd575;
	and.b64  	%rd577, %rd558, %rd534;
	or.b64  	%rd578, %rd558, %rd534;
	and.b64  	%rd579, %rd578, %rd510;
	or.b64  	%rd580, %rd579, %rd577;
	add.s64 	%rd581, %rd580, %rd576;
	add.s64 	%rd582, %rd581, %rd570;
	add.s64 	%rd583, %rd258, %rd499;
	xor.b64  	%rd584, %rd547, %rd523;
	and.b64  	%rd585, %rd571, %rd584;
	xor.b64  	%rd586, %rd585, %rd523;
	add.s64 	%rd587, %rd583, %rd586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r368,%dummy}, %rd571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r369}, %rd571;
	}
	shf.r.wrap.b32 	%r370, %r369, %r368, 14;
	shf.r.wrap.b32 	%r371, %r368, %r369, 14;
	mov.b64 	%rd588, {%r371, %r370};
	shf.r.wrap.b32 	%r372, %r369, %r368, 18;
	shf.r.wrap.b32 	%r373, %r368, %r369, 18;
	mov.b64 	%rd589, {%r373, %r372};
	xor.b64  	%rd590, %rd588, %rd589;
	shf.l.wrap.b32 	%r374, %r368, %r369, 23;
	shf.l.wrap.b32 	%r375, %r369, %r368, 23;
	mov.b64 	%rd591, {%r375, %r374};
	xor.b64  	%rd592, %rd590, %rd591;
	add.s64 	%rd593, %rd587, %rd592;
	add.s64 	%rd594, %rd593, -9160688886553864527;
	add.s64 	%rd595, %rd594, %rd510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r376,%dummy}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r377}, %rd582;
	}
	shf.r.wrap.b32 	%r378, %r377, %r376, 28;
	shf.r.wrap.b32 	%r379, %r376, %r377, 28;
	mov.b64 	%rd596, {%r379, %r378};
	shf.l.wrap.b32 	%r380, %r376, %r377, 30;
	shf.l.wrap.b32 	%r381, %r377, %r376, 30;
	mov.b64 	%rd597, {%r381, %r380};
	xor.b64  	%rd598, %rd596, %rd597;
	shf.l.wrap.b32 	%r382, %r376, %r377, 25;
	shf.l.wrap.b32 	%r383, %r377, %r376, 25;
	mov.b64 	%rd599, {%r383, %r382};
	xor.b64  	%rd600, %rd598, %rd599;
	and.b64  	%rd601, %rd582, %rd558;
	or.b64  	%rd602, %rd582, %rd558;
	and.b64  	%rd603, %rd602, %rd534;
	or.b64  	%rd604, %rd603, %rd601;
	add.s64 	%rd605, %rd604, %rd600;
	add.s64 	%rd606, %rd605, %rd594;
	add.s64 	%rd607, %rd260, %rd523;
	xor.b64  	%rd608, %rd571, %rd547;
	and.b64  	%rd609, %rd595, %rd608;
	xor.b64  	%rd610, %rd609, %rd547;
	add.s64 	%rd611, %rd607, %rd610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r384,%dummy}, %rd595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd595;
	}
	shf.r.wrap.b32 	%r386, %r385, %r384, 14;
	shf.r.wrap.b32 	%r387, %r384, %r385, 14;
	mov.b64 	%rd612, {%r387, %r386};
	shf.r.wrap.b32 	%r388, %r385, %r384, 18;
	shf.r.wrap.b32 	%r389, %r384, %r385, 18;
	mov.b64 	%rd613, {%r389, %r388};
	xor.b64  	%rd614, %rd612, %rd613;
	shf.l.wrap.b32 	%r390, %r384, %r385, 23;
	shf.l.wrap.b32 	%r391, %r385, %r384, 23;
	mov.b64 	%rd615, {%r391, %r390};
	xor.b64  	%rd616, %rd614, %rd615;
	add.s64 	%rd617, %rd611, %rd616;
	add.s64 	%rd618, %rd617, -7215885187991268811;
	add.s64 	%rd619, %rd618, %rd534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r392,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd606;
	}
	shf.r.wrap.b32 	%r394, %r393, %r392, 28;
	shf.r.wrap.b32 	%r395, %r392, %r393, 28;
	mov.b64 	%rd620, {%r395, %r394};
	shf.l.wrap.b32 	%r396, %r392, %r393, 30;
	shf.l.wrap.b32 	%r397, %r393, %r392, 30;
	mov.b64 	%rd621, {%r397, %r396};
	xor.b64  	%rd622, %rd620, %rd621;
	shf.l.wrap.b32 	%r398, %r392, %r393, 25;
	shf.l.wrap.b32 	%r399, %r393, %r392, 25;
	mov.b64 	%rd623, {%r399, %r398};
	xor.b64  	%rd624, %rd622, %rd623;
	and.b64  	%rd625, %rd606, %rd582;
	or.b64  	%rd626, %rd606, %rd582;
	and.b64  	%rd627, %rd626, %rd558;
	or.b64  	%rd628, %rd627, %rd625;
	add.s64 	%rd629, %rd628, %rd624;
	add.s64 	%rd630, %rd629, %rd618;
	add.s64 	%rd631, %rd262, %rd547;
	xor.b64  	%rd632, %rd595, %rd571;
	and.b64  	%rd633, %rd619, %rd632;
	xor.b64  	%rd634, %rd633, %rd571;
	add.s64 	%rd635, %rd631, %rd634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r400,%dummy}, %rd619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r401}, %rd619;
	}
	shf.r.wrap.b32 	%r402, %r401, %r400, 14;
	shf.r.wrap.b32 	%r403, %r400, %r401, 14;
	mov.b64 	%rd636, {%r403, %r402};
	shf.r.wrap.b32 	%r404, %r401, %r400, 18;
	shf.r.wrap.b32 	%r405, %r400, %r401, 18;
	mov.b64 	%rd637, {%r405, %r404};
	xor.b64  	%rd638, %rd636, %rd637;
	shf.l.wrap.b32 	%r406, %r400, %r401, 23;
	shf.l.wrap.b32 	%r407, %r401, %r400, 23;
	mov.b64 	%rd639, {%r407, %r406};
	xor.b64  	%rd640, %rd638, %rd639;
	add.s64 	%rd641, %rd635, %rd640;
	add.s64 	%rd642, %rd641, -4495734319001033068;
	add.s64 	%rd643, %rd642, %rd558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd630;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 28;
	shf.r.wrap.b32 	%r411, %r408, %r409, 28;
	mov.b64 	%rd644, {%r411, %r410};
	shf.l.wrap.b32 	%r412, %r408, %r409, 30;
	shf.l.wrap.b32 	%r413, %r409, %r408, 30;
	mov.b64 	%rd645, {%r413, %r412};
	xor.b64  	%rd646, %rd644, %rd645;
	shf.l.wrap.b32 	%r414, %r408, %r409, 25;
	shf.l.wrap.b32 	%r415, %r409, %r408, 25;
	mov.b64 	%rd647, {%r415, %r414};
	xor.b64  	%rd648, %rd646, %rd647;
	and.b64  	%rd649, %rd630, %rd606;
	or.b64  	%rd650, %rd630, %rd606;
	and.b64  	%rd651, %rd650, %rd582;
	or.b64  	%rd652, %rd651, %rd649;
	add.s64 	%rd653, %rd652, %rd648;
	add.s64 	%rd654, %rd653, %rd642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd260;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 19;
	shf.r.wrap.b32 	%r419, %r416, %r417, 19;
	mov.b64 	%rd655, {%r419, %r418};
	shf.l.wrap.b32 	%r420, %r416, %r417, 3;
	shf.l.wrap.b32 	%r421, %r417, %r416, 3;
	mov.b64 	%rd656, {%r421, %r420};
	xor.b64  	%rd657, %rd655, %rd656;
	shr.u64 	%rd658, %rd260, 6;
	xor.b64  	%rd659, %rd657, %rd658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r422,%dummy}, %rd234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r423}, %rd234;
	}
	shf.r.wrap.b32 	%r424, %r423, %r422, 1;
	shf.r.wrap.b32 	%r425, %r422, %r423, 1;
	mov.b64 	%rd660, {%r425, %r424};
	shf.r.wrap.b32 	%r426, %r423, %r422, 8;
	shf.r.wrap.b32 	%r427, %r422, %r423, 8;
	mov.b64 	%rd661, {%r427, %r426};
	xor.b64  	%rd662, %rd660, %rd661;
	shr.u64 	%rd663, %rd234, 7;
	xor.b64  	%rd664, %rd662, %rd663;
	add.s64 	%rd665, %rd664, %rd232;
	add.s64 	%rd666, %rd665, %rd250;
	add.s64 	%rd667, %rd666, %rd659;
	add.s64 	%rd668, %rd667, %rd571;
	xor.b64  	%rd669, %rd619, %rd595;
	and.b64  	%rd670, %rd643, %rd669;
	xor.b64  	%rd671, %rd670, %rd595;
	add.s64 	%rd672, %rd668, %rd671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r428,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd643;
	}
	shf.r.wrap.b32 	%r430, %r429, %r428, 14;
	shf.r.wrap.b32 	%r431, %r428, %r429, 14;
	mov.b64 	%rd673, {%r431, %r430};
	shf.r.wrap.b32 	%r432, %r429, %r428, 18;
	shf.r.wrap.b32 	%r433, %r428, %r429, 18;
	mov.b64 	%rd674, {%r433, %r432};
	xor.b64  	%rd675, %rd673, %rd674;
	shf.l.wrap.b32 	%r434, %r428, %r429, 23;
	shf.l.wrap.b32 	%r435, %r429, %r428, 23;
	mov.b64 	%rd676, {%r435, %r434};
	xor.b64  	%rd677, %rd675, %rd676;
	add.s64 	%rd678, %rd672, %rd677;
	add.s64 	%rd679, %rd678, -1973867731355612462;
	add.s64 	%rd680, %rd679, %rd582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r436,%dummy}, %rd654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r437}, %rd654;
	}
	shf.r.wrap.b32 	%r438, %r437, %r436, 28;
	shf.r.wrap.b32 	%r439, %r436, %r437, 28;
	mov.b64 	%rd681, {%r439, %r438};
	shf.l.wrap.b32 	%r440, %r436, %r437, 30;
	shf.l.wrap.b32 	%r441, %r437, %r436, 30;
	mov.b64 	%rd682, {%r441, %r440};
	xor.b64  	%rd683, %rd681, %rd682;
	shf.l.wrap.b32 	%r442, %r436, %r437, 25;
	shf.l.wrap.b32 	%r443, %r437, %r436, 25;
	mov.b64 	%rd684, {%r443, %r442};
	xor.b64  	%rd685, %rd683, %rd684;
	and.b64  	%rd686, %rd654, %rd630;
	or.b64  	%rd687, %rd654, %rd630;
	and.b64  	%rd688, %rd687, %rd606;
	or.b64  	%rd689, %rd688, %rd686;
	add.s64 	%rd690, %rd689, %rd685;
	add.s64 	%rd691, %rd690, %rd679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r444,%dummy}, %rd262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r445}, %rd262;
	}
	shf.r.wrap.b32 	%r446, %r445, %r444, 19;
	shf.r.wrap.b32 	%r447, %r444, %r445, 19;
	mov.b64 	%rd692, {%r447, %r446};
	shf.l.wrap.b32 	%r448, %r444, %r445, 3;
	shf.l.wrap.b32 	%r449, %r445, %r444, 3;
	mov.b64 	%rd693, {%r449, %r448};
	xor.b64  	%rd694, %rd692, %rd693;
	shr.u64 	%rd695, %rd262, 6;
	xor.b64  	%rd696, %rd694, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r450,%dummy}, %rd236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r451}, %rd236;
	}
	shf.r.wrap.b32 	%r452, %r451, %r450, 1;
	shf.r.wrap.b32 	%r453, %r450, %r451, 1;
	mov.b64 	%rd697, {%r453, %r452};
	shf.r.wrap.b32 	%r454, %r451, %r450, 8;
	shf.r.wrap.b32 	%r455, %r450, %r451, 8;
	mov.b64 	%rd698, {%r455, %r454};
	xor.b64  	%rd699, %rd697, %rd698;
	shr.u64 	%rd700, %rd236, 7;
	xor.b64  	%rd701, %rd699, %rd700;
	add.s64 	%rd702, %rd701, %rd234;
	add.s64 	%rd703, %rd702, %rd252;
	add.s64 	%rd704, %rd703, %rd696;
	add.s64 	%rd705, %rd704, %rd595;
	xor.b64  	%rd706, %rd643, %rd619;
	and.b64  	%rd707, %rd680, %rd706;
	xor.b64  	%rd708, %rd707, %rd619;
	add.s64 	%rd709, %rd705, %rd708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r456,%dummy}, %rd680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r457}, %rd680;
	}
	shf.r.wrap.b32 	%r458, %r457, %r456, 14;
	shf.r.wrap.b32 	%r459, %r456, %r457, 14;
	mov.b64 	%rd710, {%r459, %r458};
	shf.r.wrap.b32 	%r460, %r457, %r456, 18;
	shf.r.wrap.b32 	%r461, %r456, %r457, 18;
	mov.b64 	%rd711, {%r461, %r460};
	xor.b64  	%rd712, %rd710, %rd711;
	shf.l.wrap.b32 	%r462, %r456, %r457, 23;
	shf.l.wrap.b32 	%r463, %r457, %r456, 23;
	mov.b64 	%rd713, {%r463, %r462};
	xor.b64  	%rd714, %rd712, %rd713;
	add.s64 	%rd715, %rd709, %rd714;
	add.s64 	%rd716, %rd715, -1171420211273849373;
	add.s64 	%rd717, %rd716, %rd606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r464,%dummy}, %rd691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd691;
	}
	shf.r.wrap.b32 	%r466, %r465, %r464, 28;
	shf.r.wrap.b32 	%r467, %r464, %r465, 28;
	mov.b64 	%rd718, {%r467, %r466};
	shf.l.wrap.b32 	%r468, %r464, %r465, 30;
	shf.l.wrap.b32 	%r469, %r465, %r464, 30;
	mov.b64 	%rd719, {%r469, %r468};
	xor.b64  	%rd720, %rd718, %rd719;
	shf.l.wrap.b32 	%r470, %r464, %r465, 25;
	shf.l.wrap.b32 	%r471, %r465, %r464, 25;
	mov.b64 	%rd721, {%r471, %r470};
	xor.b64  	%rd722, %rd720, %rd721;
	and.b64  	%rd723, %rd691, %rd654;
	or.b64  	%rd724, %rd691, %rd654;
	and.b64  	%rd725, %rd724, %rd630;
	or.b64  	%rd726, %rd725, %rd723;
	add.s64 	%rd727, %rd726, %rd722;
	add.s64 	%rd728, %rd727, %rd716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd667;
	}
	shf.r.wrap.b32 	%r474, %r473, %r472, 19;
	shf.r.wrap.b32 	%r475, %r472, %r473, 19;
	mov.b64 	%rd729, {%r475, %r474};
	shf.l.wrap.b32 	%r476, %r472, %r473, 3;
	shf.l.wrap.b32 	%r477, %r473, %r472, 3;
	mov.b64 	%rd730, {%r477, %r476};
	xor.b64  	%rd731, %rd729, %rd730;
	shr.u64 	%rd732, %rd667, 6;
	xor.b64  	%rd733, %rd731, %rd732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r478,%dummy}, %rd238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r479}, %rd238;
	}
	shf.r.wrap.b32 	%r480, %r479, %r478, 1;
	shf.r.wrap.b32 	%r481, %r478, %r479, 1;
	mov.b64 	%rd734, {%r481, %r480};
	shf.r.wrap.b32 	%r482, %r479, %r478, 8;
	shf.r.wrap.b32 	%r483, %r478, %r479, 8;
	mov.b64 	%rd735, {%r483, %r482};
	xor.b64  	%rd736, %rd734, %rd735;
	shr.u64 	%rd737, %rd238, 7;
	xor.b64  	%rd738, %rd736, %rd737;
	add.s64 	%rd739, %rd738, %rd236;
	add.s64 	%rd740, %rd739, %rd254;
	add.s64 	%rd741, %rd740, %rd733;
	add.s64 	%rd742, %rd741, %rd619;
	xor.b64  	%rd743, %rd680, %rd643;
	and.b64  	%rd744, %rd717, %rd743;
	xor.b64  	%rd745, %rd744, %rd643;
	add.s64 	%rd746, %rd742, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r484,%dummy}, %rd717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r485}, %rd717;
	}
	shf.r.wrap.b32 	%r486, %r485, %r484, 14;
	shf.r.wrap.b32 	%r487, %r484, %r485, 14;
	mov.b64 	%rd747, {%r487, %r486};
	shf.r.wrap.b32 	%r488, %r485, %r484, 18;
	shf.r.wrap.b32 	%r489, %r484, %r485, 18;
	mov.b64 	%rd748, {%r489, %r488};
	xor.b64  	%rd749, %rd747, %rd748;
	shf.l.wrap.b32 	%r490, %r484, %r485, 23;
	shf.l.wrap.b32 	%r491, %r485, %r484, 23;
	mov.b64 	%rd750, {%r491, %r490};
	xor.b64  	%rd751, %rd749, %rd750;
	add.s64 	%rd752, %rd746, %rd751;
	add.s64 	%rd753, %rd752, 1135362057144423861;
	add.s64 	%rd754, %rd753, %rd630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd728;
	}
	shf.r.wrap.b32 	%r494, %r493, %r492, 28;
	shf.r.wrap.b32 	%r495, %r492, %r493, 28;
	mov.b64 	%rd755, {%r495, %r494};
	shf.l.wrap.b32 	%r496, %r492, %r493, 30;
	shf.l.wrap.b32 	%r497, %r493, %r492, 30;
	mov.b64 	%rd756, {%r497, %r496};
	xor.b64  	%rd757, %rd755, %rd756;
	shf.l.wrap.b32 	%r498, %r492, %r493, 25;
	shf.l.wrap.b32 	%r499, %r493, %r492, 25;
	mov.b64 	%rd758, {%r499, %r498};
	xor.b64  	%rd759, %rd757, %rd758;
	and.b64  	%rd760, %rd728, %rd691;
	or.b64  	%rd761, %rd728, %rd691;
	and.b64  	%rd762, %rd761, %rd654;
	or.b64  	%rd763, %rd762, %rd760;
	add.s64 	%rd764, %rd763, %rd759;
	add.s64 	%rd765, %rd764, %rd753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd704;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 19;
	shf.r.wrap.b32 	%r503, %r500, %r501, 19;
	mov.b64 	%rd766, {%r503, %r502};
	shf.l.wrap.b32 	%r504, %r500, %r501, 3;
	shf.l.wrap.b32 	%r505, %r501, %r500, 3;
	mov.b64 	%rd767, {%r505, %r504};
	xor.b64  	%rd768, %rd766, %rd767;
	shr.u64 	%rd769, %rd704, 6;
	xor.b64  	%rd770, %rd768, %rd769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd240;
	}
	shf.r.wrap.b32 	%r508, %r507, %r506, 1;
	shf.r.wrap.b32 	%r509, %r506, %r507, 1;
	mov.b64 	%rd771, {%r509, %r508};
	shf.r.wrap.b32 	%r510, %r507, %r506, 8;
	shf.r.wrap.b32 	%r511, %r506, %r507, 8;
	mov.b64 	%rd772, {%r511, %r510};
	xor.b64  	%rd773, %rd771, %rd772;
	shr.u64 	%rd774, %rd240, 7;
	xor.b64  	%rd775, %rd773, %rd774;
	add.s64 	%rd776, %rd775, %rd238;
	add.s64 	%rd777, %rd776, %rd256;
	add.s64 	%rd778, %rd777, %rd770;
	add.s64 	%rd779, %rd778, %rd643;
	xor.b64  	%rd780, %rd717, %rd680;
	and.b64  	%rd781, %rd754, %rd780;
	xor.b64  	%rd782, %rd781, %rd680;
	add.s64 	%rd783, %rd779, %rd782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r512,%dummy}, %rd754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r513}, %rd754;
	}
	shf.r.wrap.b32 	%r514, %r513, %r512, 14;
	shf.r.wrap.b32 	%r515, %r512, %r513, 14;
	mov.b64 	%rd784, {%r515, %r514};
	shf.r.wrap.b32 	%r516, %r513, %r512, 18;
	shf.r.wrap.b32 	%r517, %r512, %r513, 18;
	mov.b64 	%rd785, {%r517, %r516};
	xor.b64  	%rd786, %rd784, %rd785;
	shf.l.wrap.b32 	%r518, %r512, %r513, 23;
	shf.l.wrap.b32 	%r519, %r513, %r512, 23;
	mov.b64 	%rd787, {%r519, %r518};
	xor.b64  	%rd788, %rd786, %rd787;
	add.s64 	%rd789, %rd783, %rd788;
	add.s64 	%rd790, %rd789, 2597628984639134821;
	add.s64 	%rd791, %rd790, %rd654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r520,%dummy}, %rd765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r521}, %rd765;
	}
	shf.r.wrap.b32 	%r522, %r521, %r520, 28;
	shf.r.wrap.b32 	%r523, %r520, %r521, 28;
	mov.b64 	%rd792, {%r523, %r522};
	shf.l.wrap.b32 	%r524, %r520, %r521, 30;
	shf.l.wrap.b32 	%r525, %r521, %r520, 30;
	mov.b64 	%rd793, {%r525, %r524};
	xor.b64  	%rd794, %rd792, %rd793;
	shf.l.wrap.b32 	%r526, %r520, %r521, 25;
	shf.l.wrap.b32 	%r527, %r521, %r520, 25;
	mov.b64 	%rd795, {%r527, %r526};
	xor.b64  	%rd796, %rd794, %rd795;
	and.b64  	%rd797, %rd765, %rd728;
	or.b64  	%rd798, %rd765, %rd728;
	and.b64  	%rd799, %rd798, %rd691;
	or.b64  	%rd800, %rd799, %rd797;
	add.s64 	%rd801, %rd800, %rd796;
	add.s64 	%rd802, %rd801, %rd790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r528,%dummy}, %rd741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r529}, %rd741;
	}
	shf.r.wrap.b32 	%r530, %r529, %r528, 19;
	shf.r.wrap.b32 	%r531, %r528, %r529, 19;
	mov.b64 	%rd803, {%r531, %r530};
	shf.l.wrap.b32 	%r532, %r528, %r529, 3;
	shf.l.wrap.b32 	%r533, %r529, %r528, 3;
	mov.b64 	%rd804, {%r533, %r532};
	xor.b64  	%rd805, %rd803, %rd804;
	shr.u64 	%rd806, %rd741, 6;
	xor.b64  	%rd807, %rd805, %rd806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r534,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r535}, %rd242;
	}
	shf.r.wrap.b32 	%r536, %r535, %r534, 1;
	shf.r.wrap.b32 	%r537, %r534, %r535, 1;
	mov.b64 	%rd808, {%r537, %r536};
	shf.r.wrap.b32 	%r538, %r535, %r534, 8;
	shf.r.wrap.b32 	%r539, %r534, %r535, 8;
	mov.b64 	%rd809, {%r539, %r538};
	xor.b64  	%rd810, %rd808, %rd809;
	shr.u64 	%rd811, %rd242, 7;
	xor.b64  	%rd812, %rd810, %rd811;
	add.s64 	%rd813, %rd812, %rd240;
	add.s64 	%rd814, %rd813, %rd258;
	add.s64 	%rd815, %rd814, %rd807;
	add.s64 	%rd816, %rd815, %rd680;
	xor.b64  	%rd817, %rd754, %rd717;
	and.b64  	%rd818, %rd791, %rd817;
	xor.b64  	%rd819, %rd818, %rd717;
	add.s64 	%rd820, %rd816, %rd819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r540,%dummy}, %rd791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r541}, %rd791;
	}
	shf.r.wrap.b32 	%r542, %r541, %r540, 14;
	shf.r.wrap.b32 	%r543, %r540, %r541, 14;
	mov.b64 	%rd821, {%r543, %r542};
	shf.r.wrap.b32 	%r544, %r541, %r540, 18;
	shf.r.wrap.b32 	%r545, %r540, %r541, 18;
	mov.b64 	%rd822, {%r545, %r544};
	xor.b64  	%rd823, %rd821, %rd822;
	shf.l.wrap.b32 	%r546, %r540, %r541, 23;
	shf.l.wrap.b32 	%r547, %r541, %r540, 23;
	mov.b64 	%rd824, {%r547, %r546};
	xor.b64  	%rd825, %rd823, %rd824;
	add.s64 	%rd826, %rd820, %rd825;
	add.s64 	%rd827, %rd826, 3308224258029322869;
	add.s64 	%rd828, %rd827, %rd691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r548,%dummy}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r549}, %rd802;
	}
	shf.r.wrap.b32 	%r550, %r549, %r548, 28;
	shf.r.wrap.b32 	%r551, %r548, %r549, 28;
	mov.b64 	%rd829, {%r551, %r550};
	shf.l.wrap.b32 	%r552, %r548, %r549, 30;
	shf.l.wrap.b32 	%r553, %r549, %r548, 30;
	mov.b64 	%rd830, {%r553, %r552};
	xor.b64  	%rd831, %rd829, %rd830;
	shf.l.wrap.b32 	%r554, %r548, %r549, 25;
	shf.l.wrap.b32 	%r555, %r549, %r548, 25;
	mov.b64 	%rd832, {%r555, %r554};
	xor.b64  	%rd833, %rd831, %rd832;
	and.b64  	%rd834, %rd802, %rd765;
	or.b64  	%rd835, %rd802, %rd765;
	and.b64  	%rd836, %rd835, %rd728;
	or.b64  	%rd837, %rd836, %rd834;
	add.s64 	%rd838, %rd837, %rd833;
	add.s64 	%rd839, %rd838, %rd827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r556,%dummy}, %rd778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd778;
	}
	shf.r.wrap.b32 	%r558, %r557, %r556, 19;
	shf.r.wrap.b32 	%r559, %r556, %r557, 19;
	mov.b64 	%rd840, {%r559, %r558};
	shf.l.wrap.b32 	%r560, %r556, %r557, 3;
	shf.l.wrap.b32 	%r561, %r557, %r556, 3;
	mov.b64 	%rd841, {%r561, %r560};
	xor.b64  	%rd842, %rd840, %rd841;
	shr.u64 	%rd843, %rd778, 6;
	xor.b64  	%rd844, %rd842, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd244;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 1;
	shf.r.wrap.b32 	%r565, %r562, %r563, 1;
	mov.b64 	%rd845, {%r565, %r564};
	shf.r.wrap.b32 	%r566, %r563, %r562, 8;
	shf.r.wrap.b32 	%r567, %r562, %r563, 8;
	mov.b64 	%rd846, {%r567, %r566};
	xor.b64  	%rd847, %rd845, %rd846;
	shr.u64 	%rd848, %rd244, 7;
	xor.b64  	%rd849, %rd847, %rd848;
	add.s64 	%rd850, %rd849, %rd242;
	add.s64 	%rd851, %rd850, %rd260;
	add.s64 	%rd852, %rd851, %rd844;
	add.s64 	%rd853, %rd852, %rd717;
	xor.b64  	%rd854, %rd791, %rd754;
	and.b64  	%rd855, %rd828, %rd854;
	xor.b64  	%rd856, %rd855, %rd754;
	add.s64 	%rd857, %rd853, %rd856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r568,%dummy}, %rd828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd828;
	}
	shf.r.wrap.b32 	%r570, %r569, %r568, 14;
	shf.r.wrap.b32 	%r571, %r568, %r569, 14;
	mov.b64 	%rd858, {%r571, %r570};
	shf.r.wrap.b32 	%r572, %r569, %r568, 18;
	shf.r.wrap.b32 	%r573, %r568, %r569, 18;
	mov.b64 	%rd859, {%r573, %r572};
	xor.b64  	%rd860, %rd858, %rd859;
	shf.l.wrap.b32 	%r574, %r568, %r569, 23;
	shf.l.wrap.b32 	%r575, %r569, %r568, 23;
	mov.b64 	%rd861, {%r575, %r574};
	xor.b64  	%rd862, %rd860, %rd861;
	add.s64 	%rd863, %rd857, %rd862;
	add.s64 	%rd864, %rd863, 5365058923640841347;
	add.s64 	%rd865, %rd864, %rd728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r576,%dummy}, %rd839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r577}, %rd839;
	}
	shf.r.wrap.b32 	%r578, %r577, %r576, 28;
	shf.r.wrap.b32 	%r579, %r576, %r577, 28;
	mov.b64 	%rd866, {%r579, %r578};
	shf.l.wrap.b32 	%r580, %r576, %r577, 30;
	shf.l.wrap.b32 	%r581, %r577, %r576, 30;
	mov.b64 	%rd867, {%r581, %r580};
	xor.b64  	%rd868, %rd866, %rd867;
	shf.l.wrap.b32 	%r582, %r576, %r577, 25;
	shf.l.wrap.b32 	%r583, %r577, %r576, 25;
	mov.b64 	%rd869, {%r583, %r582};
	xor.b64  	%rd870, %rd868, %rd869;
	and.b64  	%rd871, %rd839, %rd802;
	or.b64  	%rd872, %rd839, %rd802;
	and.b64  	%rd873, %rd872, %rd765;
	or.b64  	%rd874, %rd873, %rd871;
	add.s64 	%rd875, %rd874, %rd870;
	add.s64 	%rd876, %rd875, %rd864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r584,%dummy}, %rd815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd815;
	}
	shf.r.wrap.b32 	%r586, %r585, %r584, 19;
	shf.r.wrap.b32 	%r587, %r584, %r585, 19;
	mov.b64 	%rd877, {%r587, %r586};
	shf.l.wrap.b32 	%r588, %r584, %r585, 3;
	shf.l.wrap.b32 	%r589, %r585, %r584, 3;
	mov.b64 	%rd878, {%r589, %r588};
	xor.b64  	%rd879, %rd877, %rd878;
	shr.u64 	%rd880, %rd815, 6;
	xor.b64  	%rd881, %rd879, %rd880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r590,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r591}, %rd246;
	}
	shf.r.wrap.b32 	%r592, %r591, %r590, 1;
	shf.r.wrap.b32 	%r593, %r590, %r591, 1;
	mov.b64 	%rd882, {%r593, %r592};
	shf.r.wrap.b32 	%r594, %r591, %r590, 8;
	shf.r.wrap.b32 	%r595, %r590, %r591, 8;
	mov.b64 	%rd883, {%r595, %r594};
	xor.b64  	%rd884, %rd882, %rd883;
	shr.u64 	%rd885, %rd246, 7;
	xor.b64  	%rd886, %rd884, %rd885;
	add.s64 	%rd887, %rd886, %rd244;
	add.s64 	%rd888, %rd887, %rd262;
	add.s64 	%rd889, %rd888, %rd881;
	add.s64 	%rd890, %rd889, %rd754;
	xor.b64  	%rd891, %rd828, %rd791;
	and.b64  	%rd892, %rd865, %rd891;
	xor.b64  	%rd893, %rd892, %rd791;
	add.s64 	%rd894, %rd890, %rd893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd865;
	}
	shf.r.wrap.b32 	%r598, %r597, %r596, 14;
	shf.r.wrap.b32 	%r599, %r596, %r597, 14;
	mov.b64 	%rd895, {%r599, %r598};
	shf.r.wrap.b32 	%r600, %r597, %r596, 18;
	shf.r.wrap.b32 	%r601, %r596, %r597, 18;
	mov.b64 	%rd896, {%r601, %r600};
	xor.b64  	%rd897, %rd895, %rd896;
	shf.l.wrap.b32 	%r602, %r596, %r597, 23;
	shf.l.wrap.b32 	%r603, %r597, %r596, 23;
	mov.b64 	%rd898, {%r603, %r602};
	xor.b64  	%rd899, %rd897, %rd898;
	add.s64 	%rd900, %rd894, %rd899;
	add.s64 	%rd901, %rd900, 6679025012923562964;
	add.s64 	%rd902, %rd901, %rd765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r604,%dummy}, %rd876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd876;
	}
	shf.r.wrap.b32 	%r606, %r605, %r604, 28;
	shf.r.wrap.b32 	%r607, %r604, %r605, 28;
	mov.b64 	%rd903, {%r607, %r606};
	shf.l.wrap.b32 	%r608, %r604, %r605, 30;
	shf.l.wrap.b32 	%r609, %r605, %r604, 30;
	mov.b64 	%rd904, {%r609, %r608};
	xor.b64  	%rd905, %rd903, %rd904;
	shf.l.wrap.b32 	%r610, %r604, %r605, 25;
	shf.l.wrap.b32 	%r611, %r605, %r604, 25;
	mov.b64 	%rd906, {%r611, %r610};
	xor.b64  	%rd907, %rd905, %rd906;
	and.b64  	%rd908, %rd876, %rd839;
	or.b64  	%rd909, %rd876, %rd839;
	and.b64  	%rd910, %rd909, %rd802;
	or.b64  	%rd911, %rd910, %rd908;
	add.s64 	%rd912, %rd911, %rd907;
	add.s64 	%rd913, %rd912, %rd901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd852;
	}
	shf.r.wrap.b32 	%r614, %r613, %r612, 19;
	shf.r.wrap.b32 	%r615, %r612, %r613, 19;
	mov.b64 	%rd914, {%r615, %r614};
	shf.l.wrap.b32 	%r616, %r612, %r613, 3;
	shf.l.wrap.b32 	%r617, %r613, %r612, 3;
	mov.b64 	%rd915, {%r617, %r616};
	xor.b64  	%rd916, %rd914, %rd915;
	shr.u64 	%rd917, %rd852, 6;
	xor.b64  	%rd918, %rd916, %rd917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r619}, %rd248;
	}
	shf.r.wrap.b32 	%r620, %r619, %r618, 1;
	shf.r.wrap.b32 	%r621, %r618, %r619, 1;
	mov.b64 	%rd919, {%r621, %r620};
	shf.r.wrap.b32 	%r622, %r619, %r618, 8;
	shf.r.wrap.b32 	%r623, %r618, %r619, 8;
	mov.b64 	%rd920, {%r623, %r622};
	xor.b64  	%rd921, %rd919, %rd920;
	shr.u64 	%rd922, %rd248, 7;
	xor.b64  	%rd923, %rd921, %rd922;
	add.s64 	%rd924, %rd923, %rd246;
	add.s64 	%rd925, %rd924, %rd667;
	add.s64 	%rd926, %rd925, %rd918;
	add.s64 	%rd927, %rd926, %rd791;
	xor.b64  	%rd928, %rd865, %rd828;
	and.b64  	%rd929, %rd902, %rd928;
	xor.b64  	%rd930, %rd929, %rd828;
	add.s64 	%rd931, %rd927, %rd930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r624,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r625}, %rd902;
	}
	shf.r.wrap.b32 	%r626, %r625, %r624, 14;
	shf.r.wrap.b32 	%r627, %r624, %r625, 14;
	mov.b64 	%rd932, {%r627, %r626};
	shf.r.wrap.b32 	%r628, %r625, %r624, 18;
	shf.r.wrap.b32 	%r629, %r624, %r625, 18;
	mov.b64 	%rd933, {%r629, %r628};
	xor.b64  	%rd934, %rd932, %rd933;
	shf.l.wrap.b32 	%r630, %r624, %r625, 23;
	shf.l.wrap.b32 	%r631, %r625, %r624, 23;
	mov.b64 	%rd935, {%r631, %r630};
	xor.b64  	%rd936, %rd934, %rd935;
	add.s64 	%rd937, %rd931, %rd936;
	add.s64 	%rd938, %rd937, 8573033837759648693;
	add.s64 	%rd939, %rd938, %rd802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r632,%dummy}, %rd913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r633}, %rd913;
	}
	shf.r.wrap.b32 	%r634, %r633, %r632, 28;
	shf.r.wrap.b32 	%r635, %r632, %r633, 28;
	mov.b64 	%rd940, {%r635, %r634};
	shf.l.wrap.b32 	%r636, %r632, %r633, 30;
	shf.l.wrap.b32 	%r637, %r633, %r632, 30;
	mov.b64 	%rd941, {%r637, %r636};
	xor.b64  	%rd942, %rd940, %rd941;
	shf.l.wrap.b32 	%r638, %r632, %r633, 25;
	shf.l.wrap.b32 	%r639, %r633, %r632, 25;
	mov.b64 	%rd943, {%r639, %r638};
	xor.b64  	%rd944, %rd942, %rd943;
	and.b64  	%rd945, %rd913, %rd876;
	or.b64  	%rd946, %rd913, %rd876;
	and.b64  	%rd947, %rd946, %rd839;
	or.b64  	%rd948, %rd947, %rd945;
	add.s64 	%rd949, %rd948, %rd944;
	add.s64 	%rd950, %rd949, %rd938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r640,%dummy}, %rd889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r641}, %rd889;
	}
	shf.r.wrap.b32 	%r642, %r641, %r640, 19;
	shf.r.wrap.b32 	%r643, %r640, %r641, 19;
	mov.b64 	%rd951, {%r643, %r642};
	shf.l.wrap.b32 	%r644, %r640, %r641, 3;
	shf.l.wrap.b32 	%r645, %r641, %r640, 3;
	mov.b64 	%rd952, {%r645, %r644};
	xor.b64  	%rd953, %rd951, %rd952;
	shr.u64 	%rd954, %rd889, 6;
	xor.b64  	%rd955, %rd953, %rd954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r646,%dummy}, %rd250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r647}, %rd250;
	}
	shf.r.wrap.b32 	%r648, %r647, %r646, 1;
	shf.r.wrap.b32 	%r649, %r646, %r647, 1;
	mov.b64 	%rd956, {%r649, %r648};
	shf.r.wrap.b32 	%r650, %r647, %r646, 8;
	shf.r.wrap.b32 	%r651, %r646, %r647, 8;
	mov.b64 	%rd957, {%r651, %r650};
	xor.b64  	%rd958, %rd956, %rd957;
	shr.u64 	%rd959, %rd250, 7;
	xor.b64  	%rd960, %rd958, %rd959;
	add.s64 	%rd961, %rd960, %rd248;
	add.s64 	%rd962, %rd961, %rd704;
	add.s64 	%rd963, %rd962, %rd955;
	add.s64 	%rd964, %rd963, %rd828;
	xor.b64  	%rd965, %rd902, %rd865;
	and.b64  	%rd966, %rd939, %rd965;
	xor.b64  	%rd967, %rd966, %rd865;
	add.s64 	%rd968, %rd964, %rd967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r652,%dummy}, %rd939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd939;
	}
	shf.r.wrap.b32 	%r654, %r653, %r652, 14;
	shf.r.wrap.b32 	%r655, %r652, %r653, 14;
	mov.b64 	%rd969, {%r655, %r654};
	shf.r.wrap.b32 	%r656, %r653, %r652, 18;
	shf.r.wrap.b32 	%r657, %r652, %r653, 18;
	mov.b64 	%rd970, {%r657, %r656};
	xor.b64  	%rd971, %rd969, %rd970;
	shf.l.wrap.b32 	%r658, %r652, %r653, 23;
	shf.l.wrap.b32 	%r659, %r653, %r652, 23;
	mov.b64 	%rd972, {%r659, %r658};
	xor.b64  	%rd973, %rd971, %rd972;
	add.s64 	%rd974, %rd968, %rd973;
	add.s64 	%rd975, %rd974, -7476448914759557205;
	add.s64 	%rd976, %rd975, %rd839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r660,%dummy}, %rd950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd950;
	}
	shf.r.wrap.b32 	%r662, %r661, %r660, 28;
	shf.r.wrap.b32 	%r663, %r660, %r661, 28;
	mov.b64 	%rd977, {%r663, %r662};
	shf.l.wrap.b32 	%r664, %r660, %r661, 30;
	shf.l.wrap.b32 	%r665, %r661, %r660, 30;
	mov.b64 	%rd978, {%r665, %r664};
	xor.b64  	%rd979, %rd977, %rd978;
	shf.l.wrap.b32 	%r666, %r660, %r661, 25;
	shf.l.wrap.b32 	%r667, %r661, %r660, 25;
	mov.b64 	%rd980, {%r667, %r666};
	xor.b64  	%rd981, %rd979, %rd980;
	and.b64  	%rd982, %rd950, %rd913;
	or.b64  	%rd983, %rd950, %rd913;
	and.b64  	%rd984, %rd983, %rd876;
	or.b64  	%rd985, %rd984, %rd982;
	add.s64 	%rd986, %rd985, %rd981;
	add.s64 	%rd987, %rd986, %rd975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r668,%dummy}, %rd926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd926;
	}
	shf.r.wrap.b32 	%r670, %r669, %r668, 19;
	shf.r.wrap.b32 	%r671, %r668, %r669, 19;
	mov.b64 	%rd988, {%r671, %r670};
	shf.l.wrap.b32 	%r672, %r668, %r669, 3;
	shf.l.wrap.b32 	%r673, %r669, %r668, 3;
	mov.b64 	%rd989, {%r673, %r672};
	xor.b64  	%rd990, %rd988, %rd989;
	shr.u64 	%rd991, %rd926, 6;
	xor.b64  	%rd992, %rd990, %rd991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd252;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 1;
	shf.r.wrap.b32 	%r677, %r674, %r675, 1;
	mov.b64 	%rd993, {%r677, %r676};
	shf.r.wrap.b32 	%r678, %r675, %r674, 8;
	shf.r.wrap.b32 	%r679, %r674, %r675, 8;
	mov.b64 	%rd994, {%r679, %r678};
	xor.b64  	%rd995, %rd993, %rd994;
	shr.u64 	%rd996, %rd252, 7;
	xor.b64  	%rd997, %rd995, %rd996;
	add.s64 	%rd998, %rd997, %rd250;
	add.s64 	%rd999, %rd998, %rd741;
	add.s64 	%rd1000, %rd999, %rd992;
	add.s64 	%rd1001, %rd1000, %rd865;
	xor.b64  	%rd1002, %rd939, %rd902;
	and.b64  	%rd1003, %rd976, %rd1002;
	xor.b64  	%rd1004, %rd1003, %rd902;
	add.s64 	%rd1005, %rd1001, %rd1004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r680,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r681}, %rd976;
	}
	shf.r.wrap.b32 	%r682, %r681, %r680, 14;
	shf.r.wrap.b32 	%r683, %r680, %r681, 14;
	mov.b64 	%rd1006, {%r683, %r682};
	shf.r.wrap.b32 	%r684, %r681, %r680, 18;
	shf.r.wrap.b32 	%r685, %r680, %r681, 18;
	mov.b64 	%rd1007, {%r685, %r684};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	shf.l.wrap.b32 	%r686, %r680, %r681, 23;
	shf.l.wrap.b32 	%r687, %r681, %r680, 23;
	mov.b64 	%rd1009, {%r687, %r686};
	xor.b64  	%rd1010, %rd1008, %rd1009;
	add.s64 	%rd1011, %rd1005, %rd1010;
	add.s64 	%rd1012, %rd1011, -6327057829258317296;
	add.s64 	%rd1013, %rd1012, %rd876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r688,%dummy}, %rd987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd987;
	}
	shf.r.wrap.b32 	%r690, %r689, %r688, 28;
	shf.r.wrap.b32 	%r691, %r688, %r689, 28;
	mov.b64 	%rd1014, {%r691, %r690};
	shf.l.wrap.b32 	%r692, %r688, %r689, 30;
	shf.l.wrap.b32 	%r693, %r689, %r688, 30;
	mov.b64 	%rd1015, {%r693, %r692};
	xor.b64  	%rd1016, %rd1014, %rd1015;
	shf.l.wrap.b32 	%r694, %r688, %r689, 25;
	shf.l.wrap.b32 	%r695, %r689, %r688, 25;
	mov.b64 	%rd1017, {%r695, %r694};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	and.b64  	%rd1019, %rd987, %rd950;
	or.b64  	%rd1020, %rd987, %rd950;
	and.b64  	%rd1021, %rd1020, %rd913;
	or.b64  	%rd1022, %rd1021, %rd1019;
	add.s64 	%rd1023, %rd1022, %rd1018;
	add.s64 	%rd1024, %rd1023, %rd1012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r696,%dummy}, %rd963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r697}, %rd963;
	}
	shf.r.wrap.b32 	%r698, %r697, %r696, 19;
	shf.r.wrap.b32 	%r699, %r696, %r697, 19;
	mov.b64 	%rd1025, {%r699, %r698};
	shf.l.wrap.b32 	%r700, %r696, %r697, 3;
	shf.l.wrap.b32 	%r701, %r697, %r696, 3;
	mov.b64 	%rd1026, {%r701, %r700};
	xor.b64  	%rd1027, %rd1025, %rd1026;
	shr.u64 	%rd1028, %rd963, 6;
	xor.b64  	%rd1029, %rd1027, %rd1028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r702,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r703}, %rd254;
	}
	shf.r.wrap.b32 	%r704, %r703, %r702, 1;
	shf.r.wrap.b32 	%r705, %r702, %r703, 1;
	mov.b64 	%rd1030, {%r705, %r704};
	shf.r.wrap.b32 	%r706, %r703, %r702, 8;
	shf.r.wrap.b32 	%r707, %r702, %r703, 8;
	mov.b64 	%rd1031, {%r707, %r706};
	xor.b64  	%rd1032, %rd1030, %rd1031;
	shr.u64 	%rd1033, %rd254, 7;
	xor.b64  	%rd1034, %rd1032, %rd1033;
	add.s64 	%rd1035, %rd1034, %rd252;
	add.s64 	%rd1036, %rd1035, %rd778;
	add.s64 	%rd1037, %rd1036, %rd1029;
	add.s64 	%rd1038, %rd1037, %rd902;
	xor.b64  	%rd1039, %rd976, %rd939;
	and.b64  	%rd1040, %rd1013, %rd1039;
	xor.b64  	%rd1041, %rd1040, %rd939;
	add.s64 	%rd1042, %rd1038, %rd1041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r708,%dummy}, %rd1013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r709}, %rd1013;
	}
	shf.r.wrap.b32 	%r710, %r709, %r708, 14;
	shf.r.wrap.b32 	%r711, %r708, %r709, 14;
	mov.b64 	%rd1043, {%r711, %r710};
	shf.r.wrap.b32 	%r712, %r709, %r708, 18;
	shf.r.wrap.b32 	%r713, %r708, %r709, 18;
	mov.b64 	%rd1044, {%r713, %r712};
	xor.b64  	%rd1045, %rd1043, %rd1044;
	shf.l.wrap.b32 	%r714, %r708, %r709, 23;
	shf.l.wrap.b32 	%r715, %r709, %r708, 23;
	mov.b64 	%rd1046, {%r715, %r714};
	xor.b64  	%rd1047, %rd1045, %rd1046;
	add.s64 	%rd1048, %rd1042, %rd1047;
	add.s64 	%rd1049, %rd1048, -5763719355590565569;
	add.s64 	%rd1050, %rd1049, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r716,%dummy}, %rd1024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd1024;
	}
	shf.r.wrap.b32 	%r718, %r717, %r716, 28;
	shf.r.wrap.b32 	%r719, %r716, %r717, 28;
	mov.b64 	%rd1051, {%r719, %r718};
	shf.l.wrap.b32 	%r720, %r716, %r717, 30;
	shf.l.wrap.b32 	%r721, %r717, %r716, 30;
	mov.b64 	%rd1052, {%r721, %r720};
	xor.b64  	%rd1053, %rd1051, %rd1052;
	shf.l.wrap.b32 	%r722, %r716, %r717, 25;
	shf.l.wrap.b32 	%r723, %r717, %r716, 25;
	mov.b64 	%rd1054, {%r723, %r722};
	xor.b64  	%rd1055, %rd1053, %rd1054;
	and.b64  	%rd1056, %rd1024, %rd987;
	or.b64  	%rd1057, %rd1024, %rd987;
	and.b64  	%rd1058, %rd1057, %rd950;
	or.b64  	%rd1059, %rd1058, %rd1056;
	add.s64 	%rd1060, %rd1059, %rd1055;
	add.s64 	%rd1061, %rd1060, %rd1049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r724,%dummy}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r725}, %rd1000;
	}
	shf.r.wrap.b32 	%r726, %r725, %r724, 19;
	shf.r.wrap.b32 	%r727, %r724, %r725, 19;
	mov.b64 	%rd1062, {%r727, %r726};
	shf.l.wrap.b32 	%r728, %r724, %r725, 3;
	shf.l.wrap.b32 	%r729, %r725, %r724, 3;
	mov.b64 	%rd1063, {%r729, %r728};
	xor.b64  	%rd1064, %rd1062, %rd1063;
	shr.u64 	%rd1065, %rd1000, 6;
	xor.b64  	%rd1066, %rd1064, %rd1065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r731}, %rd256;
	}
	shf.r.wrap.b32 	%r732, %r731, %r730, 1;
	shf.r.wrap.b32 	%r733, %r730, %r731, 1;
	mov.b64 	%rd1067, {%r733, %r732};
	shf.r.wrap.b32 	%r734, %r731, %r730, 8;
	shf.r.wrap.b32 	%r735, %r730, %r731, 8;
	mov.b64 	%rd1068, {%r735, %r734};
	xor.b64  	%rd1069, %rd1067, %rd1068;
	shr.u64 	%rd1070, %rd256, 7;
	xor.b64  	%rd1071, %rd1069, %rd1070;
	add.s64 	%rd1072, %rd1071, %rd254;
	add.s64 	%rd1073, %rd1072, %rd815;
	add.s64 	%rd1074, %rd1073, %rd1066;
	add.s64 	%rd1075, %rd1074, %rd939;
	xor.b64  	%rd1076, %rd1013, %rd976;
	and.b64  	%rd1077, %rd1050, %rd1076;
	xor.b64  	%rd1078, %rd1077, %rd976;
	add.s64 	%rd1079, %rd1075, %rd1078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r736,%dummy}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r737}, %rd1050;
	}
	shf.r.wrap.b32 	%r738, %r737, %r736, 14;
	shf.r.wrap.b32 	%r739, %r736, %r737, 14;
	mov.b64 	%rd1080, {%r739, %r738};
	shf.r.wrap.b32 	%r740, %r737, %r736, 18;
	shf.r.wrap.b32 	%r741, %r736, %r737, 18;
	mov.b64 	%rd1081, {%r741, %r740};
	xor.b64  	%rd1082, %rd1080, %rd1081;
	shf.l.wrap.b32 	%r742, %r736, %r737, 23;
	shf.l.wrap.b32 	%r743, %r737, %r736, 23;
	mov.b64 	%rd1083, {%r743, %r742};
	xor.b64  	%rd1084, %rd1082, %rd1083;
	add.s64 	%rd1085, %rd1079, %rd1084;
	add.s64 	%rd1086, %rd1085, -4658551843659510044;
	add.s64 	%rd1087, %rd1086, %rd950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r744,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r745}, %rd1061;
	}
	shf.r.wrap.b32 	%r746, %r745, %r744, 28;
	shf.r.wrap.b32 	%r747, %r744, %r745, 28;
	mov.b64 	%rd1088, {%r747, %r746};
	shf.l.wrap.b32 	%r748, %r744, %r745, 30;
	shf.l.wrap.b32 	%r749, %r745, %r744, 30;
	mov.b64 	%rd1089, {%r749, %r748};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	shf.l.wrap.b32 	%r750, %r744, %r745, 25;
	shf.l.wrap.b32 	%r751, %r745, %r744, 25;
	mov.b64 	%rd1091, {%r751, %r750};
	xor.b64  	%rd1092, %rd1090, %rd1091;
	and.b64  	%rd1093, %rd1061, %rd1024;
	or.b64  	%rd1094, %rd1061, %rd1024;
	and.b64  	%rd1095, %rd1094, %rd987;
	or.b64  	%rd1096, %rd1095, %rd1093;
	add.s64 	%rd1097, %rd1096, %rd1092;
	add.s64 	%rd1098, %rd1097, %rd1086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r752,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r753}, %rd1037;
	}
	shf.r.wrap.b32 	%r754, %r753, %r752, 19;
	shf.r.wrap.b32 	%r755, %r752, %r753, 19;
	mov.b64 	%rd1099, {%r755, %r754};
	shf.l.wrap.b32 	%r756, %r752, %r753, 3;
	shf.l.wrap.b32 	%r757, %r753, %r752, 3;
	mov.b64 	%rd1100, {%r757, %r756};
	xor.b64  	%rd1101, %rd1099, %rd1100;
	shr.u64 	%rd1102, %rd1037, 6;
	xor.b64  	%rd1103, %rd1101, %rd1102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r758,%dummy}, %rd258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r759}, %rd258;
	}
	shf.r.wrap.b32 	%r760, %r759, %r758, 1;
	shf.r.wrap.b32 	%r761, %r758, %r759, 1;
	mov.b64 	%rd1104, {%r761, %r760};
	shf.r.wrap.b32 	%r762, %r759, %r758, 8;
	shf.r.wrap.b32 	%r763, %r758, %r759, 8;
	mov.b64 	%rd1105, {%r763, %r762};
	xor.b64  	%rd1106, %rd1104, %rd1105;
	shr.u64 	%rd1107, %rd258, 7;
	xor.b64  	%rd1108, %rd1106, %rd1107;
	add.s64 	%rd1109, %rd1108, %rd256;
	add.s64 	%rd1110, %rd1109, %rd852;
	add.s64 	%rd1111, %rd1110, %rd1103;
	add.s64 	%rd1112, %rd1111, %rd976;
	xor.b64  	%rd1113, %rd1050, %rd1013;
	and.b64  	%rd1114, %rd1087, %rd1113;
	xor.b64  	%rd1115, %rd1114, %rd1013;
	add.s64 	%rd1116, %rd1112, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r764,%dummy}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r765}, %rd1087;
	}
	shf.r.wrap.b32 	%r766, %r765, %r764, 14;
	shf.r.wrap.b32 	%r767, %r764, %r765, 14;
	mov.b64 	%rd1117, {%r767, %r766};
	shf.r.wrap.b32 	%r768, %r765, %r764, 18;
	shf.r.wrap.b32 	%r769, %r764, %r765, 18;
	mov.b64 	%rd1118, {%r769, %r768};
	xor.b64  	%rd1119, %rd1117, %rd1118;
	shf.l.wrap.b32 	%r770, %r764, %r765, 23;
	shf.l.wrap.b32 	%r771, %r765, %r764, 23;
	mov.b64 	%rd1120, {%r771, %r770};
	xor.b64  	%rd1121, %rd1119, %rd1120;
	add.s64 	%rd1122, %rd1116, %rd1121;
	add.s64 	%rd1123, %rd1122, -4116276920077217854;
	add.s64 	%rd1124, %rd1123, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r772,%dummy}, %rd1098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r773}, %rd1098;
	}
	shf.r.wrap.b32 	%r774, %r773, %r772, 28;
	shf.r.wrap.b32 	%r775, %r772, %r773, 28;
	mov.b64 	%rd1125, {%r775, %r774};
	shf.l.wrap.b32 	%r776, %r772, %r773, 30;
	shf.l.wrap.b32 	%r777, %r773, %r772, 30;
	mov.b64 	%rd1126, {%r777, %r776};
	xor.b64  	%rd1127, %rd1125, %rd1126;
	shf.l.wrap.b32 	%r778, %r772, %r773, 25;
	shf.l.wrap.b32 	%r779, %r773, %r772, 25;
	mov.b64 	%rd1128, {%r779, %r778};
	xor.b64  	%rd1129, %rd1127, %rd1128;
	and.b64  	%rd1130, %rd1098, %rd1061;
	or.b64  	%rd1131, %rd1098, %rd1061;
	and.b64  	%rd1132, %rd1131, %rd1024;
	or.b64  	%rd1133, %rd1132, %rd1130;
	add.s64 	%rd1134, %rd1133, %rd1129;
	add.s64 	%rd1135, %rd1134, %rd1123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r780,%dummy}, %rd1074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r781}, %rd1074;
	}
	shf.r.wrap.b32 	%r782, %r781, %r780, 19;
	shf.r.wrap.b32 	%r783, %r780, %r781, 19;
	mov.b64 	%rd1136, {%r783, %r782};
	shf.l.wrap.b32 	%r784, %r780, %r781, 3;
	shf.l.wrap.b32 	%r785, %r781, %r780, 3;
	mov.b64 	%rd1137, {%r785, %r784};
	xor.b64  	%rd1138, %rd1136, %rd1137;
	shr.u64 	%rd1139, %rd1074, 6;
	xor.b64  	%rd1140, %rd1138, %rd1139;
	shf.r.wrap.b32 	%r786, %r417, %r416, 1;
	shf.r.wrap.b32 	%r787, %r416, %r417, 1;
	mov.b64 	%rd1141, {%r787, %r786};
	shf.r.wrap.b32 	%r788, %r417, %r416, 8;
	shf.r.wrap.b32 	%r789, %r416, %r417, 8;
	mov.b64 	%rd1142, {%r789, %r788};
	xor.b64  	%rd1143, %rd1141, %rd1142;
	shr.u64 	%rd1144, %rd260, 7;
	xor.b64  	%rd1145, %rd1143, %rd1144;
	add.s64 	%rd1146, %rd1145, %rd258;
	add.s64 	%rd1147, %rd1146, %rd889;
	add.s64 	%rd1148, %rd1147, %rd1140;
	add.s64 	%rd1149, %rd1148, %rd1013;
	xor.b64  	%rd1150, %rd1087, %rd1050;
	and.b64  	%rd1151, %rd1124, %rd1150;
	xor.b64  	%rd1152, %rd1151, %rd1050;
	add.s64 	%rd1153, %rd1149, %rd1152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r790,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r791}, %rd1124;
	}
	shf.r.wrap.b32 	%r792, %r791, %r790, 14;
	shf.r.wrap.b32 	%r793, %r790, %r791, 14;
	mov.b64 	%rd1154, {%r793, %r792};
	shf.r.wrap.b32 	%r794, %r791, %r790, 18;
	shf.r.wrap.b32 	%r795, %r790, %r791, 18;
	mov.b64 	%rd1155, {%r795, %r794};
	xor.b64  	%rd1156, %rd1154, %rd1155;
	shf.l.wrap.b32 	%r796, %r790, %r791, 23;
	shf.l.wrap.b32 	%r797, %r791, %r790, 23;
	mov.b64 	%rd1157, {%r797, %r796};
	xor.b64  	%rd1158, %rd1156, %rd1157;
	add.s64 	%rd1159, %rd1153, %rd1158;
	add.s64 	%rd1160, %rd1159, -3051310485924567259;
	add.s64 	%rd1161, %rd1160, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r798,%dummy}, %rd1135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r799}, %rd1135;
	}
	shf.r.wrap.b32 	%r800, %r799, %r798, 28;
	shf.r.wrap.b32 	%r801, %r798, %r799, 28;
	mov.b64 	%rd1162, {%r801, %r800};
	shf.l.wrap.b32 	%r802, %r798, %r799, 30;
	shf.l.wrap.b32 	%r803, %r799, %r798, 30;
	mov.b64 	%rd1163, {%r803, %r802};
	xor.b64  	%rd1164, %rd1162, %rd1163;
	shf.l.wrap.b32 	%r804, %r798, %r799, 25;
	shf.l.wrap.b32 	%r805, %r799, %r798, 25;
	mov.b64 	%rd1165, {%r805, %r804};
	xor.b64  	%rd1166, %rd1164, %rd1165;
	and.b64  	%rd1167, %rd1135, %rd1098;
	or.b64  	%rd1168, %rd1135, %rd1098;
	and.b64  	%rd1169, %rd1168, %rd1061;
	or.b64  	%rd1170, %rd1169, %rd1167;
	add.s64 	%rd1171, %rd1170, %rd1166;
	add.s64 	%rd1172, %rd1171, %rd1160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r807}, %rd1111;
	}
	shf.r.wrap.b32 	%r808, %r807, %r806, 19;
	shf.r.wrap.b32 	%r809, %r806, %r807, 19;
	mov.b64 	%rd1173, {%r809, %r808};
	shf.l.wrap.b32 	%r810, %r806, %r807, 3;
	shf.l.wrap.b32 	%r811, %r807, %r806, 3;
	mov.b64 	%rd1174, {%r811, %r810};
	xor.b64  	%rd1175, %rd1173, %rd1174;
	shr.u64 	%rd1176, %rd1111, 6;
	xor.b64  	%rd1177, %rd1175, %rd1176;
	shf.r.wrap.b32 	%r812, %r445, %r444, 1;
	shf.r.wrap.b32 	%r813, %r444, %r445, 1;
	mov.b64 	%rd1178, {%r813, %r812};
	shf.r.wrap.b32 	%r814, %r445, %r444, 8;
	shf.r.wrap.b32 	%r815, %r444, %r445, 8;
	mov.b64 	%rd1179, {%r815, %r814};
	xor.b64  	%rd1180, %rd1178, %rd1179;
	shr.u64 	%rd1181, %rd262, 7;
	xor.b64  	%rd1182, %rd1180, %rd1181;
	add.s64 	%rd1183, %rd1182, %rd260;
	add.s64 	%rd1184, %rd1183, %rd926;
	add.s64 	%rd1185, %rd1184, %rd1177;
	add.s64 	%rd1186, %rd1185, %rd1050;
	xor.b64  	%rd1187, %rd1124, %rd1087;
	and.b64  	%rd1188, %rd1161, %rd1187;
	xor.b64  	%rd1189, %rd1188, %rd1087;
	add.s64 	%rd1190, %rd1186, %rd1189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r816,%dummy}, %rd1161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r817}, %rd1161;
	}
	shf.r.wrap.b32 	%r818, %r817, %r816, 14;
	shf.r.wrap.b32 	%r819, %r816, %r817, 14;
	mov.b64 	%rd1191, {%r819, %r818};
	shf.r.wrap.b32 	%r820, %r817, %r816, 18;
	shf.r.wrap.b32 	%r821, %r816, %r817, 18;
	mov.b64 	%rd1192, {%r821, %r820};
	xor.b64  	%rd1193, %rd1191, %rd1192;
	shf.l.wrap.b32 	%r822, %r816, %r817, 23;
	shf.l.wrap.b32 	%r823, %r817, %r816, 23;
	mov.b64 	%rd1194, {%r823, %r822};
	xor.b64  	%rd1195, %rd1193, %rd1194;
	add.s64 	%rd1196, %rd1190, %rd1195;
	add.s64 	%rd1197, %rd1196, 489312712824947311;
	add.s64 	%rd1198, %rd1197, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r824,%dummy}, %rd1172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r825}, %rd1172;
	}
	shf.r.wrap.b32 	%r826, %r825, %r824, 28;
	shf.r.wrap.b32 	%r827, %r824, %r825, 28;
	mov.b64 	%rd1199, {%r827, %r826};
	shf.l.wrap.b32 	%r828, %r824, %r825, 30;
	shf.l.wrap.b32 	%r829, %r825, %r824, 30;
	mov.b64 	%rd1200, {%r829, %r828};
	xor.b64  	%rd1201, %rd1199, %rd1200;
	shf.l.wrap.b32 	%r830, %r824, %r825, 25;
	shf.l.wrap.b32 	%r831, %r825, %r824, 25;
	mov.b64 	%rd1202, {%r831, %r830};
	xor.b64  	%rd1203, %rd1201, %rd1202;
	and.b64  	%rd1204, %rd1172, %rd1135;
	or.b64  	%rd1205, %rd1172, %rd1135;
	and.b64  	%rd1206, %rd1205, %rd1098;
	or.b64  	%rd1207, %rd1206, %rd1204;
	add.s64 	%rd1208, %rd1207, %rd1203;
	add.s64 	%rd1209, %rd1208, %rd1197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r832,%dummy}, %rd1148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r833}, %rd1148;
	}
	shf.r.wrap.b32 	%r834, %r833, %r832, 19;
	shf.r.wrap.b32 	%r835, %r832, %r833, 19;
	mov.b64 	%rd1210, {%r835, %r834};
	shf.l.wrap.b32 	%r836, %r832, %r833, 3;
	shf.l.wrap.b32 	%r837, %r833, %r832, 3;
	mov.b64 	%rd1211, {%r837, %r836};
	xor.b64  	%rd1212, %rd1210, %rd1211;
	shr.u64 	%rd1213, %rd1148, 6;
	xor.b64  	%rd1214, %rd1212, %rd1213;
	shf.r.wrap.b32 	%r838, %r473, %r472, 1;
	shf.r.wrap.b32 	%r839, %r472, %r473, 1;
	mov.b64 	%rd1215, {%r839, %r838};
	shf.r.wrap.b32 	%r840, %r473, %r472, 8;
	shf.r.wrap.b32 	%r841, %r472, %r473, 8;
	mov.b64 	%rd1216, {%r841, %r840};
	xor.b64  	%rd1217, %rd1215, %rd1216;
	shr.u64 	%rd1218, %rd667, 7;
	xor.b64  	%rd1219, %rd1217, %rd1218;
	add.s64 	%rd1220, %rd1219, %rd262;
	add.s64 	%rd1221, %rd1220, %rd963;
	add.s64 	%rd1222, %rd1221, %rd1214;
	add.s64 	%rd1223, %rd1222, %rd1087;
	xor.b64  	%rd1224, %rd1161, %rd1124;
	and.b64  	%rd1225, %rd1198, %rd1224;
	xor.b64  	%rd1226, %rd1225, %rd1124;
	add.s64 	%rd1227, %rd1223, %rd1226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r842,%dummy}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r843}, %rd1198;
	}
	shf.r.wrap.b32 	%r844, %r843, %r842, 14;
	shf.r.wrap.b32 	%r845, %r842, %r843, 14;
	mov.b64 	%rd1228, {%r845, %r844};
	shf.r.wrap.b32 	%r846, %r843, %r842, 18;
	shf.r.wrap.b32 	%r847, %r842, %r843, 18;
	mov.b64 	%rd1229, {%r847, %r846};
	xor.b64  	%rd1230, %rd1228, %rd1229;
	shf.l.wrap.b32 	%r848, %r842, %r843, 23;
	shf.l.wrap.b32 	%r849, %r843, %r842, 23;
	mov.b64 	%rd1231, {%r849, %r848};
	xor.b64  	%rd1232, %rd1230, %rd1231;
	add.s64 	%rd1233, %rd1227, %rd1232;
	add.s64 	%rd1234, %rd1233, 1452737877330783856;
	add.s64 	%rd1235, %rd1234, %rd1098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r850,%dummy}, %rd1209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r851}, %rd1209;
	}
	shf.r.wrap.b32 	%r852, %r851, %r850, 28;
	shf.r.wrap.b32 	%r853, %r850, %r851, 28;
	mov.b64 	%rd1236, {%r853, %r852};
	shf.l.wrap.b32 	%r854, %r850, %r851, 30;
	shf.l.wrap.b32 	%r855, %r851, %r850, 30;
	mov.b64 	%rd1237, {%r855, %r854};
	xor.b64  	%rd1238, %rd1236, %rd1237;
	shf.l.wrap.b32 	%r856, %r850, %r851, 25;
	shf.l.wrap.b32 	%r857, %r851, %r850, 25;
	mov.b64 	%rd1239, {%r857, %r856};
	xor.b64  	%rd1240, %rd1238, %rd1239;
	and.b64  	%rd1241, %rd1209, %rd1172;
	or.b64  	%rd1242, %rd1209, %rd1172;
	and.b64  	%rd1243, %rd1242, %rd1135;
	or.b64  	%rd1244, %rd1243, %rd1241;
	add.s64 	%rd1245, %rd1244, %rd1240;
	add.s64 	%rd1246, %rd1245, %rd1234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r858,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r859}, %rd1185;
	}
	shf.r.wrap.b32 	%r860, %r859, %r858, 19;
	shf.r.wrap.b32 	%r861, %r858, %r859, 19;
	mov.b64 	%rd1247, {%r861, %r860};
	shf.l.wrap.b32 	%r862, %r858, %r859, 3;
	shf.l.wrap.b32 	%r863, %r859, %r858, 3;
	mov.b64 	%rd1248, {%r863, %r862};
	xor.b64  	%rd1249, %rd1247, %rd1248;
	shr.u64 	%rd1250, %rd1185, 6;
	xor.b64  	%rd1251, %rd1249, %rd1250;
	shf.r.wrap.b32 	%r864, %r501, %r500, 1;
	shf.r.wrap.b32 	%r865, %r500, %r501, 1;
	mov.b64 	%rd1252, {%r865, %r864};
	shf.r.wrap.b32 	%r866, %r501, %r500, 8;
	shf.r.wrap.b32 	%r867, %r500, %r501, 8;
	mov.b64 	%rd1253, {%r867, %r866};
	xor.b64  	%rd1254, %rd1252, %rd1253;
	shr.u64 	%rd1255, %rd704, 7;
	xor.b64  	%rd1256, %rd1254, %rd1255;
	add.s64 	%rd1257, %rd1256, %rd667;
	add.s64 	%rd1258, %rd1257, %rd1000;
	add.s64 	%rd1259, %rd1258, %rd1251;
	add.s64 	%rd1260, %rd1259, %rd1124;
	xor.b64  	%rd1261, %rd1198, %rd1161;
	and.b64  	%rd1262, %rd1235, %rd1261;
	xor.b64  	%rd1263, %rd1262, %rd1161;
	add.s64 	%rd1264, %rd1260, %rd1263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r868,%dummy}, %rd1235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r869}, %rd1235;
	}
	shf.r.wrap.b32 	%r870, %r869, %r868, 14;
	shf.r.wrap.b32 	%r871, %r868, %r869, 14;
	mov.b64 	%rd1265, {%r871, %r870};
	shf.r.wrap.b32 	%r872, %r869, %r868, 18;
	shf.r.wrap.b32 	%r873, %r868, %r869, 18;
	mov.b64 	%rd1266, {%r873, %r872};
	xor.b64  	%rd1267, %rd1265, %rd1266;
	shf.l.wrap.b32 	%r874, %r868, %r869, 23;
	shf.l.wrap.b32 	%r875, %r869, %r868, 23;
	mov.b64 	%rd1268, {%r875, %r874};
	xor.b64  	%rd1269, %rd1267, %rd1268;
	add.s64 	%rd1270, %rd1264, %rd1269;
	add.s64 	%rd1271, %rd1270, 2861767655752347644;
	add.s64 	%rd1272, %rd1271, %rd1135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r876,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r877}, %rd1246;
	}
	shf.r.wrap.b32 	%r878, %r877, %r876, 28;
	shf.r.wrap.b32 	%r879, %r876, %r877, 28;
	mov.b64 	%rd1273, {%r879, %r878};
	shf.l.wrap.b32 	%r880, %r876, %r877, 30;
	shf.l.wrap.b32 	%r881, %r877, %r876, 30;
	mov.b64 	%rd1274, {%r881, %r880};
	xor.b64  	%rd1275, %rd1273, %rd1274;
	shf.l.wrap.b32 	%r882, %r876, %r877, 25;
	shf.l.wrap.b32 	%r883, %r877, %r876, 25;
	mov.b64 	%rd1276, {%r883, %r882};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	and.b64  	%rd1278, %rd1246, %rd1209;
	or.b64  	%rd1279, %rd1246, %rd1209;
	and.b64  	%rd1280, %rd1279, %rd1172;
	or.b64  	%rd1281, %rd1280, %rd1278;
	add.s64 	%rd1282, %rd1281, %rd1277;
	add.s64 	%rd1283, %rd1282, %rd1271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r884,%dummy}, %rd1222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r885}, %rd1222;
	}
	shf.r.wrap.b32 	%r886, %r885, %r884, 19;
	shf.r.wrap.b32 	%r887, %r884, %r885, 19;
	mov.b64 	%rd1284, {%r887, %r886};
	shf.l.wrap.b32 	%r888, %r884, %r885, 3;
	shf.l.wrap.b32 	%r889, %r885, %r884, 3;
	mov.b64 	%rd1285, {%r889, %r888};
	xor.b64  	%rd1286, %rd1284, %rd1285;
	shr.u64 	%rd1287, %rd1222, 6;
	xor.b64  	%rd1288, %rd1286, %rd1287;
	shf.r.wrap.b32 	%r890, %r529, %r528, 1;
	shf.r.wrap.b32 	%r891, %r528, %r529, 1;
	mov.b64 	%rd1289, {%r891, %r890};
	shf.r.wrap.b32 	%r892, %r529, %r528, 8;
	shf.r.wrap.b32 	%r893, %r528, %r529, 8;
	mov.b64 	%rd1290, {%r893, %r892};
	xor.b64  	%rd1291, %rd1289, %rd1290;
	shr.u64 	%rd1292, %rd741, 7;
	xor.b64  	%rd1293, %rd1291, %rd1292;
	add.s64 	%rd1294, %rd1293, %rd704;
	add.s64 	%rd1295, %rd1294, %rd1037;
	add.s64 	%rd1296, %rd1295, %rd1288;
	add.s64 	%rd1297, %rd1296, %rd1161;
	xor.b64  	%rd1298, %rd1235, %rd1198;
	and.b64  	%rd1299, %rd1272, %rd1298;
	xor.b64  	%rd1300, %rd1299, %rd1198;
	add.s64 	%rd1301, %rd1297, %rd1300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd1272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r895}, %rd1272;
	}
	shf.r.wrap.b32 	%r896, %r895, %r894, 14;
	shf.r.wrap.b32 	%r897, %r894, %r895, 14;
	mov.b64 	%rd1302, {%r897, %r896};
	shf.r.wrap.b32 	%r898, %r895, %r894, 18;
	shf.r.wrap.b32 	%r899, %r894, %r895, 18;
	mov.b64 	%rd1303, {%r899, %r898};
	xor.b64  	%rd1304, %rd1302, %rd1303;
	shf.l.wrap.b32 	%r900, %r894, %r895, 23;
	shf.l.wrap.b32 	%r901, %r895, %r894, 23;
	mov.b64 	%rd1305, {%r901, %r900};
	xor.b64  	%rd1306, %rd1304, %rd1305;
	add.s64 	%rd1307, %rd1301, %rd1306;
	add.s64 	%rd1308, %rd1307, 3322285676063803686;
	add.s64 	%rd1309, %rd1308, %rd1172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd1283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r903}, %rd1283;
	}
	shf.r.wrap.b32 	%r904, %r903, %r902, 28;
	shf.r.wrap.b32 	%r905, %r902, %r903, 28;
	mov.b64 	%rd1310, {%r905, %r904};
	shf.l.wrap.b32 	%r906, %r902, %r903, 30;
	shf.l.wrap.b32 	%r907, %r903, %r902, 30;
	mov.b64 	%rd1311, {%r907, %r906};
	xor.b64  	%rd1312, %rd1310, %rd1311;
	shf.l.wrap.b32 	%r908, %r902, %r903, 25;
	shf.l.wrap.b32 	%r909, %r903, %r902, 25;
	mov.b64 	%rd1313, {%r909, %r908};
	xor.b64  	%rd1314, %rd1312, %rd1313;
	and.b64  	%rd1315, %rd1283, %rd1246;
	or.b64  	%rd1316, %rd1283, %rd1246;
	and.b64  	%rd1317, %rd1316, %rd1209;
	or.b64  	%rd1318, %rd1317, %rd1315;
	add.s64 	%rd1319, %rd1318, %rd1314;
	add.s64 	%rd1320, %rd1319, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r910,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r911}, %rd1259;
	}
	shf.r.wrap.b32 	%r912, %r911, %r910, 19;
	shf.r.wrap.b32 	%r913, %r910, %r911, 19;
	mov.b64 	%rd1321, {%r913, %r912};
	shf.l.wrap.b32 	%r914, %r910, %r911, 3;
	shf.l.wrap.b32 	%r915, %r911, %r910, 3;
	mov.b64 	%rd1322, {%r915, %r914};
	xor.b64  	%rd1323, %rd1321, %rd1322;
	shr.u64 	%rd1324, %rd1259, 6;
	xor.b64  	%rd1325, %rd1323, %rd1324;
	shf.r.wrap.b32 	%r916, %r557, %r556, 1;
	shf.r.wrap.b32 	%r917, %r556, %r557, 1;
	mov.b64 	%rd1326, {%r917, %r916};
	shf.r.wrap.b32 	%r918, %r557, %r556, 8;
	shf.r.wrap.b32 	%r919, %r556, %r557, 8;
	mov.b64 	%rd1327, {%r919, %r918};
	xor.b64  	%rd1328, %rd1326, %rd1327;
	shr.u64 	%rd1329, %rd778, 7;
	xor.b64  	%rd1330, %rd1328, %rd1329;
	add.s64 	%rd1331, %rd1330, %rd741;
	add.s64 	%rd1332, %rd1331, %rd1074;
	add.s64 	%rd1333, %rd1332, %rd1325;
	add.s64 	%rd1334, %rd1333, %rd1198;
	xor.b64  	%rd1335, %rd1272, %rd1235;
	and.b64  	%rd1336, %rd1309, %rd1335;
	xor.b64  	%rd1337, %rd1336, %rd1235;
	add.s64 	%rd1338, %rd1334, %rd1337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r920,%dummy}, %rd1309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r921}, %rd1309;
	}
	shf.r.wrap.b32 	%r922, %r921, %r920, 14;
	shf.r.wrap.b32 	%r923, %r920, %r921, 14;
	mov.b64 	%rd1339, {%r923, %r922};
	shf.r.wrap.b32 	%r924, %r921, %r920, 18;
	shf.r.wrap.b32 	%r925, %r920, %r921, 18;
	mov.b64 	%rd1340, {%r925, %r924};
	xor.b64  	%rd1341, %rd1339, %rd1340;
	shf.l.wrap.b32 	%r926, %r920, %r921, 23;
	shf.l.wrap.b32 	%r927, %r921, %r920, 23;
	mov.b64 	%rd1342, {%r927, %r926};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	add.s64 	%rd1344, %rd1338, %rd1343;
	add.s64 	%rd1345, %rd1344, 5560940570517711597;
	add.s64 	%rd1346, %rd1345, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r928,%dummy}, %rd1320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r929}, %rd1320;
	}
	shf.r.wrap.b32 	%r930, %r929, %r928, 28;
	shf.r.wrap.b32 	%r931, %r928, %r929, 28;
	mov.b64 	%rd1347, {%r931, %r930};
	shf.l.wrap.b32 	%r932, %r928, %r929, 30;
	shf.l.wrap.b32 	%r933, %r929, %r928, 30;
	mov.b64 	%rd1348, {%r933, %r932};
	xor.b64  	%rd1349, %rd1347, %rd1348;
	shf.l.wrap.b32 	%r934, %r928, %r929, 25;
	shf.l.wrap.b32 	%r935, %r929, %r928, 25;
	mov.b64 	%rd1350, {%r935, %r934};
	xor.b64  	%rd1351, %rd1349, %rd1350;
	and.b64  	%rd1352, %rd1320, %rd1283;
	or.b64  	%rd1353, %rd1320, %rd1283;
	and.b64  	%rd1354, %rd1353, %rd1246;
	or.b64  	%rd1355, %rd1354, %rd1352;
	add.s64 	%rd1356, %rd1355, %rd1351;
	add.s64 	%rd1357, %rd1356, %rd1345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r936,%dummy}, %rd1296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r937}, %rd1296;
	}
	shf.r.wrap.b32 	%r938, %r937, %r936, 19;
	shf.r.wrap.b32 	%r939, %r936, %r937, 19;
	mov.b64 	%rd1358, {%r939, %r938};
	shf.l.wrap.b32 	%r940, %r936, %r937, 3;
	shf.l.wrap.b32 	%r941, %r937, %r936, 3;
	mov.b64 	%rd1359, {%r941, %r940};
	xor.b64  	%rd1360, %rd1358, %rd1359;
	shr.u64 	%rd1361, %rd1296, 6;
	xor.b64  	%rd1362, %rd1360, %rd1361;
	shf.r.wrap.b32 	%r942, %r585, %r584, 1;
	shf.r.wrap.b32 	%r943, %r584, %r585, 1;
	mov.b64 	%rd1363, {%r943, %r942};
	shf.r.wrap.b32 	%r944, %r585, %r584, 8;
	shf.r.wrap.b32 	%r945, %r584, %r585, 8;
	mov.b64 	%rd1364, {%r945, %r944};
	xor.b64  	%rd1365, %rd1363, %rd1364;
	shr.u64 	%rd1366, %rd815, 7;
	xor.b64  	%rd1367, %rd1365, %rd1366;
	add.s64 	%rd1368, %rd1367, %rd778;
	add.s64 	%rd1369, %rd1368, %rd1111;
	add.s64 	%rd1370, %rd1369, %rd1362;
	add.s64 	%rd1371, %rd1370, %rd1235;
	xor.b64  	%rd1372, %rd1309, %rd1272;
	and.b64  	%rd1373, %rd1346, %rd1372;
	xor.b64  	%rd1374, %rd1373, %rd1272;
	add.s64 	%rd1375, %rd1371, %rd1374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r946,%dummy}, %rd1346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r947}, %rd1346;
	}
	shf.r.wrap.b32 	%r948, %r947, %r946, 14;
	shf.r.wrap.b32 	%r949, %r946, %r947, 14;
	mov.b64 	%rd1376, {%r949, %r948};
	shf.r.wrap.b32 	%r950, %r947, %r946, 18;
	shf.r.wrap.b32 	%r951, %r946, %r947, 18;
	mov.b64 	%rd1377, {%r951, %r950};
	xor.b64  	%rd1378, %rd1376, %rd1377;
	shf.l.wrap.b32 	%r952, %r946, %r947, 23;
	shf.l.wrap.b32 	%r953, %r947, %r946, 23;
	mov.b64 	%rd1379, {%r953, %r952};
	xor.b64  	%rd1380, %rd1378, %rd1379;
	add.s64 	%rd1381, %rd1375, %rd1380;
	add.s64 	%rd1382, %rd1381, 5996557281743188959;
	add.s64 	%rd1383, %rd1382, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r954,%dummy}, %rd1357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r955}, %rd1357;
	}
	shf.r.wrap.b32 	%r956, %r955, %r954, 28;
	shf.r.wrap.b32 	%r957, %r954, %r955, 28;
	mov.b64 	%rd1384, {%r957, %r956};
	shf.l.wrap.b32 	%r958, %r954, %r955, 30;
	shf.l.wrap.b32 	%r959, %r955, %r954, 30;
	mov.b64 	%rd1385, {%r959, %r958};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	shf.l.wrap.b32 	%r960, %r954, %r955, 25;
	shf.l.wrap.b32 	%r961, %r955, %r954, 25;
	mov.b64 	%rd1387, {%r961, %r960};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	and.b64  	%rd1389, %rd1357, %rd1320;
	or.b64  	%rd1390, %rd1357, %rd1320;
	and.b64  	%rd1391, %rd1390, %rd1283;
	or.b64  	%rd1392, %rd1391, %rd1389;
	add.s64 	%rd1393, %rd1392, %rd1388;
	add.s64 	%rd1394, %rd1393, %rd1382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r962,%dummy}, %rd1333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r963}, %rd1333;
	}
	shf.r.wrap.b32 	%r964, %r963, %r962, 19;
	shf.r.wrap.b32 	%r965, %r962, %r963, 19;
	mov.b64 	%rd1395, {%r965, %r964};
	shf.l.wrap.b32 	%r966, %r962, %r963, 3;
	shf.l.wrap.b32 	%r967, %r963, %r962, 3;
	mov.b64 	%rd1396, {%r967, %r966};
	xor.b64  	%rd1397, %rd1395, %rd1396;
	shr.u64 	%rd1398, %rd1333, 6;
	xor.b64  	%rd1399, %rd1397, %rd1398;
	shf.r.wrap.b32 	%r968, %r613, %r612, 1;
	shf.r.wrap.b32 	%r969, %r612, %r613, 1;
	mov.b64 	%rd1400, {%r969, %r968};
	shf.r.wrap.b32 	%r970, %r613, %r612, 8;
	shf.r.wrap.b32 	%r971, %r612, %r613, 8;
	mov.b64 	%rd1401, {%r971, %r970};
	xor.b64  	%rd1402, %rd1400, %rd1401;
	shr.u64 	%rd1403, %rd852, 7;
	xor.b64  	%rd1404, %rd1402, %rd1403;
	add.s64 	%rd1405, %rd1404, %rd815;
	add.s64 	%rd1406, %rd1405, %rd1148;
	add.s64 	%rd1407, %rd1406, %rd1399;
	add.s64 	%rd1408, %rd1407, %rd1272;
	xor.b64  	%rd1409, %rd1346, %rd1309;
	and.b64  	%rd1410, %rd1383, %rd1409;
	xor.b64  	%rd1411, %rd1410, %rd1309;
	add.s64 	%rd1412, %rd1408, %rd1411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r972,%dummy}, %rd1383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd1383;
	}
	shf.r.wrap.b32 	%r974, %r973, %r972, 14;
	shf.r.wrap.b32 	%r975, %r972, %r973, 14;
	mov.b64 	%rd1413, {%r975, %r974};
	shf.r.wrap.b32 	%r976, %r973, %r972, 18;
	shf.r.wrap.b32 	%r977, %r972, %r973, 18;
	mov.b64 	%rd1414, {%r977, %r976};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	shf.l.wrap.b32 	%r978, %r972, %r973, 23;
	shf.l.wrap.b32 	%r979, %r973, %r972, 23;
	mov.b64 	%rd1416, {%r979, %r978};
	xor.b64  	%rd1417, %rd1415, %rd1416;
	add.s64 	%rd1418, %rd1412, %rd1417;
	add.s64 	%rd1419, %rd1418, 7280758554555802590;
	add.s64 	%rd1420, %rd1419, %rd1283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r980,%dummy}, %rd1394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r981}, %rd1394;
	}
	shf.r.wrap.b32 	%r982, %r981, %r980, 28;
	shf.r.wrap.b32 	%r983, %r980, %r981, 28;
	mov.b64 	%rd1421, {%r983, %r982};
	shf.l.wrap.b32 	%r984, %r980, %r981, 30;
	shf.l.wrap.b32 	%r985, %r981, %r980, 30;
	mov.b64 	%rd1422, {%r985, %r984};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	shf.l.wrap.b32 	%r986, %r980, %r981, 25;
	shf.l.wrap.b32 	%r987, %r981, %r980, 25;
	mov.b64 	%rd1424, {%r987, %r986};
	xor.b64  	%rd1425, %rd1423, %rd1424;
	and.b64  	%rd1426, %rd1394, %rd1357;
	or.b64  	%rd1427, %rd1394, %rd1357;
	and.b64  	%rd1428, %rd1427, %rd1320;
	or.b64  	%rd1429, %rd1428, %rd1426;
	add.s64 	%rd1430, %rd1429, %rd1425;
	add.s64 	%rd1431, %rd1430, %rd1419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd1370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd1370;
	}
	shf.r.wrap.b32 	%r990, %r989, %r988, 19;
	shf.r.wrap.b32 	%r991, %r988, %r989, 19;
	mov.b64 	%rd1432, {%r991, %r990};
	shf.l.wrap.b32 	%r992, %r988, %r989, 3;
	shf.l.wrap.b32 	%r993, %r989, %r988, 3;
	mov.b64 	%rd1433, {%r993, %r992};
	xor.b64  	%rd1434, %rd1432, %rd1433;
	shr.u64 	%rd1435, %rd1370, 6;
	xor.b64  	%rd1436, %rd1434, %rd1435;
	shf.r.wrap.b32 	%r994, %r641, %r640, 1;
	shf.r.wrap.b32 	%r995, %r640, %r641, 1;
	mov.b64 	%rd1437, {%r995, %r994};
	shf.r.wrap.b32 	%r996, %r641, %r640, 8;
	shf.r.wrap.b32 	%r997, %r640, %r641, 8;
	mov.b64 	%rd1438, {%r997, %r996};
	xor.b64  	%rd1439, %rd1437, %rd1438;
	shr.u64 	%rd1440, %rd889, 7;
	xor.b64  	%rd1441, %rd1439, %rd1440;
	add.s64 	%rd1442, %rd1441, %rd852;
	add.s64 	%rd1443, %rd1442, %rd1185;
	add.s64 	%rd1444, %rd1443, %rd1436;
	add.s64 	%rd1445, %rd1444, %rd1309;
	xor.b64  	%rd1446, %rd1383, %rd1346;
	and.b64  	%rd1447, %rd1420, %rd1446;
	xor.b64  	%rd1448, %rd1447, %rd1346;
	add.s64 	%rd1449, %rd1445, %rd1448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r998,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r999}, %rd1420;
	}
	shf.r.wrap.b32 	%r1000, %r999, %r998, 14;
	shf.r.wrap.b32 	%r1001, %r998, %r999, 14;
	mov.b64 	%rd1450, {%r1001, %r1000};
	shf.r.wrap.b32 	%r1002, %r999, %r998, 18;
	shf.r.wrap.b32 	%r1003, %r998, %r999, 18;
	mov.b64 	%rd1451, {%r1003, %r1002};
	xor.b64  	%rd1452, %rd1450, %rd1451;
	shf.l.wrap.b32 	%r1004, %r998, %r999, 23;
	shf.l.wrap.b32 	%r1005, %r999, %r998, 23;
	mov.b64 	%rd1453, {%r1005, %r1004};
	xor.b64  	%rd1454, %rd1452, %rd1453;
	add.s64 	%rd1455, %rd1449, %rd1454;
	add.s64 	%rd1456, %rd1455, 8532644243296465576;
	add.s64 	%rd1457, %rd1456, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1006,%dummy}, %rd1431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1007}, %rd1431;
	}
	shf.r.wrap.b32 	%r1008, %r1007, %r1006, 28;
	shf.r.wrap.b32 	%r1009, %r1006, %r1007, 28;
	mov.b64 	%rd1458, {%r1009, %r1008};
	shf.l.wrap.b32 	%r1010, %r1006, %r1007, 30;
	shf.l.wrap.b32 	%r1011, %r1007, %r1006, 30;
	mov.b64 	%rd1459, {%r1011, %r1010};
	xor.b64  	%rd1460, %rd1458, %rd1459;
	shf.l.wrap.b32 	%r1012, %r1006, %r1007, 25;
	shf.l.wrap.b32 	%r1013, %r1007, %r1006, 25;
	mov.b64 	%rd1461, {%r1013, %r1012};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	and.b64  	%rd1463, %rd1431, %rd1394;
	or.b64  	%rd1464, %rd1431, %rd1394;
	and.b64  	%rd1465, %rd1464, %rd1357;
	or.b64  	%rd1466, %rd1465, %rd1463;
	add.s64 	%rd1467, %rd1466, %rd1462;
	add.s64 	%rd1468, %rd1467, %rd1456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1014,%dummy}, %rd1407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1015}, %rd1407;
	}
	shf.r.wrap.b32 	%r1016, %r1015, %r1014, 19;
	shf.r.wrap.b32 	%r1017, %r1014, %r1015, 19;
	mov.b64 	%rd1469, {%r1017, %r1016};
	shf.l.wrap.b32 	%r1018, %r1014, %r1015, 3;
	shf.l.wrap.b32 	%r1019, %r1015, %r1014, 3;
	mov.b64 	%rd1470, {%r1019, %r1018};
	xor.b64  	%rd1471, %rd1469, %rd1470;
	shr.u64 	%rd1472, %rd1407, 6;
	xor.b64  	%rd1473, %rd1471, %rd1472;
	shf.r.wrap.b32 	%r1020, %r669, %r668, 1;
	shf.r.wrap.b32 	%r1021, %r668, %r669, 1;
	mov.b64 	%rd1474, {%r1021, %r1020};
	shf.r.wrap.b32 	%r1022, %r669, %r668, 8;
	shf.r.wrap.b32 	%r1023, %r668, %r669, 8;
	mov.b64 	%rd1475, {%r1023, %r1022};
	xor.b64  	%rd1476, %rd1474, %rd1475;
	shr.u64 	%rd1477, %rd926, 7;
	xor.b64  	%rd1478, %rd1476, %rd1477;
	add.s64 	%rd1479, %rd1478, %rd889;
	add.s64 	%rd1480, %rd1479, %rd1222;
	add.s64 	%rd1481, %rd1480, %rd1473;
	add.s64 	%rd1482, %rd1481, %rd1346;
	xor.b64  	%rd1483, %rd1420, %rd1383;
	and.b64  	%rd1484, %rd1457, %rd1483;
	xor.b64  	%rd1485, %rd1484, %rd1383;
	add.s64 	%rd1486, %rd1482, %rd1485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1024,%dummy}, %rd1457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1025}, %rd1457;
	}
	shf.r.wrap.b32 	%r1026, %r1025, %r1024, 14;
	shf.r.wrap.b32 	%r1027, %r1024, %r1025, 14;
	mov.b64 	%rd1487, {%r1027, %r1026};
	shf.r.wrap.b32 	%r1028, %r1025, %r1024, 18;
	shf.r.wrap.b32 	%r1029, %r1024, %r1025, 18;
	mov.b64 	%rd1488, {%r1029, %r1028};
	xor.b64  	%rd1489, %rd1487, %rd1488;
	shf.l.wrap.b32 	%r1030, %r1024, %r1025, 23;
	shf.l.wrap.b32 	%r1031, %r1025, %r1024, 23;
	mov.b64 	%rd1490, {%r1031, %r1030};
	xor.b64  	%rd1491, %rd1489, %rd1490;
	add.s64 	%rd1492, %rd1486, %rd1491;
	add.s64 	%rd1493, %rd1492, -9096487096722542874;
	add.s64 	%rd1494, %rd1493, %rd1357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1032,%dummy}, %rd1468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1033}, %rd1468;
	}
	shf.r.wrap.b32 	%r1034, %r1033, %r1032, 28;
	shf.r.wrap.b32 	%r1035, %r1032, %r1033, 28;
	mov.b64 	%rd1495, {%r1035, %r1034};
	shf.l.wrap.b32 	%r1036, %r1032, %r1033, 30;
	shf.l.wrap.b32 	%r1037, %r1033, %r1032, 30;
	mov.b64 	%rd1496, {%r1037, %r1036};
	xor.b64  	%rd1497, %rd1495, %rd1496;
	shf.l.wrap.b32 	%r1038, %r1032, %r1033, 25;
	shf.l.wrap.b32 	%r1039, %r1033, %r1032, 25;
	mov.b64 	%rd1498, {%r1039, %r1038};
	xor.b64  	%rd1499, %rd1497, %rd1498;
	and.b64  	%rd1500, %rd1468, %rd1431;
	or.b64  	%rd1501, %rd1468, %rd1431;
	and.b64  	%rd1502, %rd1501, %rd1394;
	or.b64  	%rd1503, %rd1502, %rd1500;
	add.s64 	%rd1504, %rd1503, %rd1499;
	add.s64 	%rd1505, %rd1504, %rd1493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1040,%dummy}, %rd1444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1041}, %rd1444;
	}
	shf.r.wrap.b32 	%r1042, %r1041, %r1040, 19;
	shf.r.wrap.b32 	%r1043, %r1040, %r1041, 19;
	mov.b64 	%rd1506, {%r1043, %r1042};
	shf.l.wrap.b32 	%r1044, %r1040, %r1041, 3;
	shf.l.wrap.b32 	%r1045, %r1041, %r1040, 3;
	mov.b64 	%rd1507, {%r1045, %r1044};
	xor.b64  	%rd1508, %rd1506, %rd1507;
	shr.u64 	%rd1509, %rd1444, 6;
	xor.b64  	%rd1510, %rd1508, %rd1509;
	shf.r.wrap.b32 	%r1046, %r697, %r696, 1;
	shf.r.wrap.b32 	%r1047, %r696, %r697, 1;
	mov.b64 	%rd1511, {%r1047, %r1046};
	shf.r.wrap.b32 	%r1048, %r697, %r696, 8;
	shf.r.wrap.b32 	%r1049, %r696, %r697, 8;
	mov.b64 	%rd1512, {%r1049, %r1048};
	xor.b64  	%rd1513, %rd1511, %rd1512;
	shr.u64 	%rd1514, %rd963, 7;
	xor.b64  	%rd1515, %rd1513, %rd1514;
	add.s64 	%rd1516, %rd1515, %rd926;
	add.s64 	%rd1517, %rd1516, %rd1259;
	add.s64 	%rd1518, %rd1517, %rd1510;
	add.s64 	%rd1519, %rd1518, %rd1383;
	xor.b64  	%rd1520, %rd1457, %rd1420;
	and.b64  	%rd1521, %rd1494, %rd1520;
	xor.b64  	%rd1522, %rd1521, %rd1420;
	add.s64 	%rd1523, %rd1519, %rd1522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1050,%dummy}, %rd1494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1051}, %rd1494;
	}
	shf.r.wrap.b32 	%r1052, %r1051, %r1050, 14;
	shf.r.wrap.b32 	%r1053, %r1050, %r1051, 14;
	mov.b64 	%rd1524, {%r1053, %r1052};
	shf.r.wrap.b32 	%r1054, %r1051, %r1050, 18;
	shf.r.wrap.b32 	%r1055, %r1050, %r1051, 18;
	mov.b64 	%rd1525, {%r1055, %r1054};
	xor.b64  	%rd1526, %rd1524, %rd1525;
	shf.l.wrap.b32 	%r1056, %r1050, %r1051, 23;
	shf.l.wrap.b32 	%r1057, %r1051, %r1050, 23;
	mov.b64 	%rd1527, {%r1057, %r1056};
	xor.b64  	%rd1528, %rd1526, %rd1527;
	add.s64 	%rd1529, %rd1523, %rd1528;
	add.s64 	%rd1530, %rd1529, -7894198246740708037;
	add.s64 	%rd1531, %rd1530, %rd1394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1058,%dummy}, %rd1505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1059}, %rd1505;
	}
	shf.r.wrap.b32 	%r1060, %r1059, %r1058, 28;
	shf.r.wrap.b32 	%r1061, %r1058, %r1059, 28;
	mov.b64 	%rd1532, {%r1061, %r1060};
	shf.l.wrap.b32 	%r1062, %r1058, %r1059, 30;
	shf.l.wrap.b32 	%r1063, %r1059, %r1058, 30;
	mov.b64 	%rd1533, {%r1063, %r1062};
	xor.b64  	%rd1534, %rd1532, %rd1533;
	shf.l.wrap.b32 	%r1064, %r1058, %r1059, 25;
	shf.l.wrap.b32 	%r1065, %r1059, %r1058, 25;
	mov.b64 	%rd1535, {%r1065, %r1064};
	xor.b64  	%rd1536, %rd1534, %rd1535;
	and.b64  	%rd1537, %rd1505, %rd1468;
	or.b64  	%rd1538, %rd1505, %rd1468;
	and.b64  	%rd1539, %rd1538, %rd1431;
	or.b64  	%rd1540, %rd1539, %rd1537;
	add.s64 	%rd1541, %rd1540, %rd1536;
	add.s64 	%rd1542, %rd1541, %rd1530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd1481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1067}, %rd1481;
	}
	shf.r.wrap.b32 	%r1068, %r1067, %r1066, 19;
	shf.r.wrap.b32 	%r1069, %r1066, %r1067, 19;
	mov.b64 	%rd1543, {%r1069, %r1068};
	shf.l.wrap.b32 	%r1070, %r1066, %r1067, 3;
	shf.l.wrap.b32 	%r1071, %r1067, %r1066, 3;
	mov.b64 	%rd1544, {%r1071, %r1070};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	shr.u64 	%rd1546, %rd1481, 6;
	xor.b64  	%rd1547, %rd1545, %rd1546;
	shf.r.wrap.b32 	%r1072, %r725, %r724, 1;
	shf.r.wrap.b32 	%r1073, %r724, %r725, 1;
	mov.b64 	%rd1548, {%r1073, %r1072};
	shf.r.wrap.b32 	%r1074, %r725, %r724, 8;
	shf.r.wrap.b32 	%r1075, %r724, %r725, 8;
	mov.b64 	%rd1549, {%r1075, %r1074};
	xor.b64  	%rd1550, %rd1548, %rd1549;
	shr.u64 	%rd1551, %rd1000, 7;
	xor.b64  	%rd1552, %rd1550, %rd1551;
	add.s64 	%rd1553, %rd1552, %rd963;
	add.s64 	%rd1554, %rd1553, %rd1296;
	add.s64 	%rd1555, %rd1554, %rd1547;
	add.s64 	%rd1556, %rd1555, %rd1420;
	xor.b64  	%rd1557, %rd1494, %rd1457;
	and.b64  	%rd1558, %rd1531, %rd1557;
	xor.b64  	%rd1559, %rd1558, %rd1457;
	add.s64 	%rd1560, %rd1556, %rd1559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1076,%dummy}, %rd1531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1077}, %rd1531;
	}
	shf.r.wrap.b32 	%r1078, %r1077, %r1076, 14;
	shf.r.wrap.b32 	%r1079, %r1076, %r1077, 14;
	mov.b64 	%rd1561, {%r1079, %r1078};
	shf.r.wrap.b32 	%r1080, %r1077, %r1076, 18;
	shf.r.wrap.b32 	%r1081, %r1076, %r1077, 18;
	mov.b64 	%rd1562, {%r1081, %r1080};
	xor.b64  	%rd1563, %rd1561, %rd1562;
	shf.l.wrap.b32 	%r1082, %r1076, %r1077, 23;
	shf.l.wrap.b32 	%r1083, %r1077, %r1076, 23;
	mov.b64 	%rd1564, {%r1083, %r1082};
	xor.b64  	%rd1565, %rd1563, %rd1564;
	add.s64 	%rd1566, %rd1560, %rd1565;
	add.s64 	%rd1567, %rd1566, -6719396339535248540;
	add.s64 	%rd1568, %rd1567, %rd1431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1084,%dummy}, %rd1542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1085}, %rd1542;
	}
	shf.r.wrap.b32 	%r1086, %r1085, %r1084, 28;
	shf.r.wrap.b32 	%r1087, %r1084, %r1085, 28;
	mov.b64 	%rd1569, {%r1087, %r1086};
	shf.l.wrap.b32 	%r1088, %r1084, %r1085, 30;
	shf.l.wrap.b32 	%r1089, %r1085, %r1084, 30;
	mov.b64 	%rd1570, {%r1089, %r1088};
	xor.b64  	%rd1571, %rd1569, %rd1570;
	shf.l.wrap.b32 	%r1090, %r1084, %r1085, 25;
	shf.l.wrap.b32 	%r1091, %r1085, %r1084, 25;
	mov.b64 	%rd1572, {%r1091, %r1090};
	xor.b64  	%rd1573, %rd1571, %rd1572;
	and.b64  	%rd1574, %rd1542, %rd1505;
	or.b64  	%rd1575, %rd1542, %rd1505;
	and.b64  	%rd1576, %rd1575, %rd1468;
	or.b64  	%rd1577, %rd1576, %rd1574;
	add.s64 	%rd1578, %rd1577, %rd1573;
	add.s64 	%rd1579, %rd1578, %rd1567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1092,%dummy}, %rd1518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1093}, %rd1518;
	}
	shf.r.wrap.b32 	%r1094, %r1093, %r1092, 19;
	shf.r.wrap.b32 	%r1095, %r1092, %r1093, 19;
	mov.b64 	%rd1580, {%r1095, %r1094};
	shf.l.wrap.b32 	%r1096, %r1092, %r1093, 3;
	shf.l.wrap.b32 	%r1097, %r1093, %r1092, 3;
	mov.b64 	%rd1581, {%r1097, %r1096};
	xor.b64  	%rd1582, %rd1580, %rd1581;
	shr.u64 	%rd1583, %rd1518, 6;
	xor.b64  	%rd1584, %rd1582, %rd1583;
	shf.r.wrap.b32 	%r1098, %r753, %r752, 1;
	shf.r.wrap.b32 	%r1099, %r752, %r753, 1;
	mov.b64 	%rd1585, {%r1099, %r1098};
	shf.r.wrap.b32 	%r1100, %r753, %r752, 8;
	shf.r.wrap.b32 	%r1101, %r752, %r753, 8;
	mov.b64 	%rd1586, {%r1101, %r1100};
	xor.b64  	%rd1587, %rd1585, %rd1586;
	shr.u64 	%rd1588, %rd1037, 7;
	xor.b64  	%rd1589, %rd1587, %rd1588;
	add.s64 	%rd1590, %rd1589, %rd1000;
	add.s64 	%rd1591, %rd1590, %rd1333;
	add.s64 	%rd1592, %rd1591, %rd1584;
	add.s64 	%rd1593, %rd1592, %rd1457;
	xor.b64  	%rd1594, %rd1531, %rd1494;
	and.b64  	%rd1595, %rd1568, %rd1594;
	xor.b64  	%rd1596, %rd1595, %rd1494;
	add.s64 	%rd1597, %rd1593, %rd1596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1102,%dummy}, %rd1568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1103}, %rd1568;
	}
	shf.r.wrap.b32 	%r1104, %r1103, %r1102, 14;
	shf.r.wrap.b32 	%r1105, %r1102, %r1103, 14;
	mov.b64 	%rd1598, {%r1105, %r1104};
	shf.r.wrap.b32 	%r1106, %r1103, %r1102, 18;
	shf.r.wrap.b32 	%r1107, %r1102, %r1103, 18;
	mov.b64 	%rd1599, {%r1107, %r1106};
	xor.b64  	%rd1600, %rd1598, %rd1599;
	shf.l.wrap.b32 	%r1108, %r1102, %r1103, 23;
	shf.l.wrap.b32 	%r1109, %r1103, %r1102, 23;
	mov.b64 	%rd1601, {%r1109, %r1108};
	xor.b64  	%rd1602, %rd1600, %rd1601;
	add.s64 	%rd1603, %rd1597, %rd1602;
	add.s64 	%rd1604, %rd1603, -6333637450476146687;
	add.s64 	%rd1605, %rd1604, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1110,%dummy}, %rd1579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1111}, %rd1579;
	}
	shf.r.wrap.b32 	%r1112, %r1111, %r1110, 28;
	shf.r.wrap.b32 	%r1113, %r1110, %r1111, 28;
	mov.b64 	%rd1606, {%r1113, %r1112};
	shf.l.wrap.b32 	%r1114, %r1110, %r1111, 30;
	shf.l.wrap.b32 	%r1115, %r1111, %r1110, 30;
	mov.b64 	%rd1607, {%r1115, %r1114};
	xor.b64  	%rd1608, %rd1606, %rd1607;
	shf.l.wrap.b32 	%r1116, %r1110, %r1111, 25;
	shf.l.wrap.b32 	%r1117, %r1111, %r1110, 25;
	mov.b64 	%rd1609, {%r1117, %r1116};
	xor.b64  	%rd1610, %rd1608, %rd1609;
	and.b64  	%rd1611, %rd1579, %rd1542;
	or.b64  	%rd1612, %rd1579, %rd1542;
	and.b64  	%rd1613, %rd1612, %rd1505;
	or.b64  	%rd1614, %rd1613, %rd1611;
	add.s64 	%rd1615, %rd1614, %rd1610;
	add.s64 	%rd1616, %rd1615, %rd1604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1118,%dummy}, %rd1555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1119}, %rd1555;
	}
	shf.r.wrap.b32 	%r1120, %r1119, %r1118, 19;
	shf.r.wrap.b32 	%r1121, %r1118, %r1119, 19;
	mov.b64 	%rd1617, {%r1121, %r1120};
	shf.l.wrap.b32 	%r1122, %r1118, %r1119, 3;
	shf.l.wrap.b32 	%r1123, %r1119, %r1118, 3;
	mov.b64 	%rd1618, {%r1123, %r1122};
	xor.b64  	%rd1619, %rd1617, %rd1618;
	shr.u64 	%rd1620, %rd1555, 6;
	xor.b64  	%rd1621, %rd1619, %rd1620;
	shf.r.wrap.b32 	%r1124, %r781, %r780, 1;
	shf.r.wrap.b32 	%r1125, %r780, %r781, 1;
	mov.b64 	%rd1622, {%r1125, %r1124};
	shf.r.wrap.b32 	%r1126, %r781, %r780, 8;
	shf.r.wrap.b32 	%r1127, %r780, %r781, 8;
	mov.b64 	%rd1623, {%r1127, %r1126};
	xor.b64  	%rd1624, %rd1622, %rd1623;
	shr.u64 	%rd1625, %rd1074, 7;
	xor.b64  	%rd1626, %rd1624, %rd1625;
	add.s64 	%rd1627, %rd1626, %rd1037;
	add.s64 	%rd1628, %rd1627, %rd1370;
	add.s64 	%rd1629, %rd1628, %rd1621;
	add.s64 	%rd1630, %rd1629, %rd1494;
	xor.b64  	%rd1631, %rd1568, %rd1531;
	and.b64  	%rd1632, %rd1605, %rd1631;
	xor.b64  	%rd1633, %rd1632, %rd1531;
	add.s64 	%rd1634, %rd1630, %rd1633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1128,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd1605;
	}
	shf.r.wrap.b32 	%r1130, %r1129, %r1128, 14;
	shf.r.wrap.b32 	%r1131, %r1128, %r1129, 14;
	mov.b64 	%rd1635, {%r1131, %r1130};
	shf.r.wrap.b32 	%r1132, %r1129, %r1128, 18;
	shf.r.wrap.b32 	%r1133, %r1128, %r1129, 18;
	mov.b64 	%rd1636, {%r1133, %r1132};
	xor.b64  	%rd1637, %rd1635, %rd1636;
	shf.l.wrap.b32 	%r1134, %r1128, %r1129, 23;
	shf.l.wrap.b32 	%r1135, %r1129, %r1128, 23;
	mov.b64 	%rd1638, {%r1135, %r1134};
	xor.b64  	%rd1639, %rd1637, %rd1638;
	add.s64 	%rd1640, %rd1634, %rd1639;
	add.s64 	%rd1641, %rd1640, -4446306890439682159;
	add.s64 	%rd1642, %rd1641, %rd1505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1136,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd1616;
	}
	shf.r.wrap.b32 	%r1138, %r1137, %r1136, 28;
	shf.r.wrap.b32 	%r1139, %r1136, %r1137, 28;
	mov.b64 	%rd1643, {%r1139, %r1138};
	shf.l.wrap.b32 	%r1140, %r1136, %r1137, 30;
	shf.l.wrap.b32 	%r1141, %r1137, %r1136, 30;
	mov.b64 	%rd1644, {%r1141, %r1140};
	xor.b64  	%rd1645, %rd1643, %rd1644;
	shf.l.wrap.b32 	%r1142, %r1136, %r1137, 25;
	shf.l.wrap.b32 	%r1143, %r1137, %r1136, 25;
	mov.b64 	%rd1646, {%r1143, %r1142};
	xor.b64  	%rd1647, %rd1645, %rd1646;
	and.b64  	%rd1648, %rd1616, %rd1579;
	or.b64  	%rd1649, %rd1616, %rd1579;
	and.b64  	%rd1650, %rd1649, %rd1542;
	or.b64  	%rd1651, %rd1650, %rd1648;
	add.s64 	%rd1652, %rd1651, %rd1647;
	add.s64 	%rd1653, %rd1652, %rd1641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1144,%dummy}, %rd1592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1145}, %rd1592;
	}
	shf.r.wrap.b32 	%r1146, %r1145, %r1144, 19;
	shf.r.wrap.b32 	%r1147, %r1144, %r1145, 19;
	mov.b64 	%rd1654, {%r1147, %r1146};
	shf.l.wrap.b32 	%r1148, %r1144, %r1145, 3;
	shf.l.wrap.b32 	%r1149, %r1145, %r1144, 3;
	mov.b64 	%rd1655, {%r1149, %r1148};
	xor.b64  	%rd1656, %rd1654, %rd1655;
	shr.u64 	%rd1657, %rd1592, 6;
	xor.b64  	%rd1658, %rd1656, %rd1657;
	shf.r.wrap.b32 	%r1150, %r807, %r806, 1;
	shf.r.wrap.b32 	%r1151, %r806, %r807, 1;
	mov.b64 	%rd1659, {%r1151, %r1150};
	shf.r.wrap.b32 	%r1152, %r807, %r806, 8;
	shf.r.wrap.b32 	%r1153, %r806, %r807, 8;
	mov.b64 	%rd1660, {%r1153, %r1152};
	xor.b64  	%rd1661, %rd1659, %rd1660;
	shr.u64 	%rd1662, %rd1111, 7;
	xor.b64  	%rd1663, %rd1661, %rd1662;
	add.s64 	%rd1664, %rd1663, %rd1074;
	add.s64 	%rd1665, %rd1664, %rd1407;
	add.s64 	%rd1666, %rd1665, %rd1658;
	add.s64 	%rd1667, %rd1666, %rd1531;
	xor.b64  	%rd1668, %rd1605, %rd1568;
	and.b64  	%rd1669, %rd1642, %rd1668;
	xor.b64  	%rd1670, %rd1669, %rd1568;
	add.s64 	%rd1671, %rd1667, %rd1670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1154,%dummy}, %rd1642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1155}, %rd1642;
	}
	shf.r.wrap.b32 	%r1156, %r1155, %r1154, 14;
	shf.r.wrap.b32 	%r1157, %r1154, %r1155, 14;
	mov.b64 	%rd1672, {%r1157, %r1156};
	shf.r.wrap.b32 	%r1158, %r1155, %r1154, 18;
	shf.r.wrap.b32 	%r1159, %r1154, %r1155, 18;
	mov.b64 	%rd1673, {%r1159, %r1158};
	xor.b64  	%rd1674, %rd1672, %rd1673;
	shf.l.wrap.b32 	%r1160, %r1154, %r1155, 23;
	shf.l.wrap.b32 	%r1161, %r1155, %r1154, 23;
	mov.b64 	%rd1675, {%r1161, %r1160};
	xor.b64  	%rd1676, %rd1674, %rd1675;
	add.s64 	%rd1677, %rd1671, %rd1676;
	add.s64 	%rd1678, %rd1677, -4076793802049405392;
	add.s64 	%rd1679, %rd1678, %rd1542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd1653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1163}, %rd1653;
	}
	shf.r.wrap.b32 	%r1164, %r1163, %r1162, 28;
	shf.r.wrap.b32 	%r1165, %r1162, %r1163, 28;
	mov.b64 	%rd1680, {%r1165, %r1164};
	shf.l.wrap.b32 	%r1166, %r1162, %r1163, 30;
	shf.l.wrap.b32 	%r1167, %r1163, %r1162, 30;
	mov.b64 	%rd1681, {%r1167, %r1166};
	xor.b64  	%rd1682, %rd1680, %rd1681;
	shf.l.wrap.b32 	%r1168, %r1162, %r1163, 25;
	shf.l.wrap.b32 	%r1169, %r1163, %r1162, 25;
	mov.b64 	%rd1683, {%r1169, %r1168};
	xor.b64  	%rd1684, %rd1682, %rd1683;
	and.b64  	%rd1685, %rd1653, %rd1616;
	or.b64  	%rd1686, %rd1653, %rd1616;
	and.b64  	%rd1687, %rd1686, %rd1579;
	or.b64  	%rd1688, %rd1687, %rd1685;
	add.s64 	%rd1689, %rd1688, %rd1684;
	add.s64 	%rd1690, %rd1689, %rd1678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1170,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1171}, %rd1629;
	}
	shf.r.wrap.b32 	%r1172, %r1171, %r1170, 19;
	shf.r.wrap.b32 	%r1173, %r1170, %r1171, 19;
	mov.b64 	%rd1691, {%r1173, %r1172};
	shf.l.wrap.b32 	%r1174, %r1170, %r1171, 3;
	shf.l.wrap.b32 	%r1175, %r1171, %r1170, 3;
	mov.b64 	%rd1692, {%r1175, %r1174};
	xor.b64  	%rd1693, %rd1691, %rd1692;
	shr.u64 	%rd1694, %rd1629, 6;
	xor.b64  	%rd1695, %rd1693, %rd1694;
	shf.r.wrap.b32 	%r1176, %r833, %r832, 1;
	shf.r.wrap.b32 	%r1177, %r832, %r833, 1;
	mov.b64 	%rd1696, {%r1177, %r1176};
	shf.r.wrap.b32 	%r1178, %r833, %r832, 8;
	shf.r.wrap.b32 	%r1179, %r832, %r833, 8;
	mov.b64 	%rd1697, {%r1179, %r1178};
	xor.b64  	%rd1698, %rd1696, %rd1697;
	shr.u64 	%rd1699, %rd1148, 7;
	xor.b64  	%rd1700, %rd1698, %rd1699;
	add.s64 	%rd1701, %rd1700, %rd1111;
	add.s64 	%rd1702, %rd1701, %rd1444;
	add.s64 	%rd1703, %rd1702, %rd1695;
	add.s64 	%rd1704, %rd1703, %rd1568;
	xor.b64  	%rd1705, %rd1642, %rd1605;
	and.b64  	%rd1706, %rd1679, %rd1705;
	xor.b64  	%rd1707, %rd1706, %rd1605;
	add.s64 	%rd1708, %rd1704, %rd1707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1180,%dummy}, %rd1679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1181}, %rd1679;
	}
	shf.r.wrap.b32 	%r1182, %r1181, %r1180, 14;
	shf.r.wrap.b32 	%r1183, %r1180, %r1181, 14;
	mov.b64 	%rd1709, {%r1183, %r1182};
	shf.r.wrap.b32 	%r1184, %r1181, %r1180, 18;
	shf.r.wrap.b32 	%r1185, %r1180, %r1181, 18;
	mov.b64 	%rd1710, {%r1185, %r1184};
	xor.b64  	%rd1711, %rd1709, %rd1710;
	shf.l.wrap.b32 	%r1186, %r1180, %r1181, 23;
	shf.l.wrap.b32 	%r1187, %r1181, %r1180, 23;
	mov.b64 	%rd1712, {%r1187, %r1186};
	xor.b64  	%rd1713, %rd1711, %rd1712;
	add.s64 	%rd1714, %rd1708, %rd1713;
	add.s64 	%rd1715, %rd1714, -3345356375505022440;
	add.s64 	%rd1716, %rd1715, %rd1579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1188,%dummy}, %rd1690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1189}, %rd1690;
	}
	shf.r.wrap.b32 	%r1190, %r1189, %r1188, 28;
	shf.r.wrap.b32 	%r1191, %r1188, %r1189, 28;
	mov.b64 	%rd1717, {%r1191, %r1190};
	shf.l.wrap.b32 	%r1192, %r1188, %r1189, 30;
	shf.l.wrap.b32 	%r1193, %r1189, %r1188, 30;
	mov.b64 	%rd1718, {%r1193, %r1192};
	xor.b64  	%rd1719, %rd1717, %rd1718;
	shf.l.wrap.b32 	%r1194, %r1188, %r1189, 25;
	shf.l.wrap.b32 	%r1195, %r1189, %r1188, 25;
	mov.b64 	%rd1720, {%r1195, %r1194};
	xor.b64  	%rd1721, %rd1719, %rd1720;
	and.b64  	%rd1722, %rd1690, %rd1653;
	or.b64  	%rd1723, %rd1690, %rd1653;
	and.b64  	%rd1724, %rd1723, %rd1616;
	or.b64  	%rd1725, %rd1724, %rd1722;
	add.s64 	%rd1726, %rd1725, %rd1721;
	add.s64 	%rd1727, %rd1726, %rd1715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1196,%dummy}, %rd1666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1197}, %rd1666;
	}
	shf.r.wrap.b32 	%r1198, %r1197, %r1196, 19;
	shf.r.wrap.b32 	%r1199, %r1196, %r1197, 19;
	mov.b64 	%rd1728, {%r1199, %r1198};
	shf.l.wrap.b32 	%r1200, %r1196, %r1197, 3;
	shf.l.wrap.b32 	%r1201, %r1197, %r1196, 3;
	mov.b64 	%rd1729, {%r1201, %r1200};
	xor.b64  	%rd1730, %rd1728, %rd1729;
	shr.u64 	%rd1731, %rd1666, 6;
	xor.b64  	%rd1732, %rd1730, %rd1731;
	shf.r.wrap.b32 	%r1202, %r859, %r858, 1;
	shf.r.wrap.b32 	%r1203, %r858, %r859, 1;
	mov.b64 	%rd1733, {%r1203, %r1202};
	shf.r.wrap.b32 	%r1204, %r859, %r858, 8;
	shf.r.wrap.b32 	%r1205, %r858, %r859, 8;
	mov.b64 	%rd1734, {%r1205, %r1204};
	xor.b64  	%rd1735, %rd1733, %rd1734;
	shr.u64 	%rd1736, %rd1185, 7;
	xor.b64  	%rd1737, %rd1735, %rd1736;
	add.s64 	%rd1738, %rd1737, %rd1148;
	add.s64 	%rd1739, %rd1738, %rd1481;
	add.s64 	%rd1740, %rd1739, %rd1732;
	add.s64 	%rd1741, %rd1740, %rd1605;
	xor.b64  	%rd1742, %rd1679, %rd1642;
	and.b64  	%rd1743, %rd1716, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd1642;
	add.s64 	%rd1745, %rd1741, %rd1744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1206,%dummy}, %rd1716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1207}, %rd1716;
	}
	shf.r.wrap.b32 	%r1208, %r1207, %r1206, 14;
	shf.r.wrap.b32 	%r1209, %r1206, %r1207, 14;
	mov.b64 	%rd1746, {%r1209, %r1208};
	shf.r.wrap.b32 	%r1210, %r1207, %r1206, 18;
	shf.r.wrap.b32 	%r1211, %r1206, %r1207, 18;
	mov.b64 	%rd1747, {%r1211, %r1210};
	xor.b64  	%rd1748, %rd1746, %rd1747;
	shf.l.wrap.b32 	%r1212, %r1206, %r1207, 23;
	shf.l.wrap.b32 	%r1213, %r1207, %r1206, 23;
	mov.b64 	%rd1749, {%r1213, %r1212};
	xor.b64  	%rd1750, %rd1748, %rd1749;
	add.s64 	%rd1751, %rd1745, %rd1750;
	add.s64 	%rd1752, %rd1751, -2983346525034927856;
	add.s64 	%rd1753, %rd1752, %rd1616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1214,%dummy}, %rd1727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1215}, %rd1727;
	}
	shf.r.wrap.b32 	%r1216, %r1215, %r1214, 28;
	shf.r.wrap.b32 	%r1217, %r1214, %r1215, 28;
	mov.b64 	%rd1754, {%r1217, %r1216};
	shf.l.wrap.b32 	%r1218, %r1214, %r1215, 30;
	shf.l.wrap.b32 	%r1219, %r1215, %r1214, 30;
	mov.b64 	%rd1755, {%r1219, %r1218};
	xor.b64  	%rd1756, %rd1754, %rd1755;
	shf.l.wrap.b32 	%r1220, %r1214, %r1215, 25;
	shf.l.wrap.b32 	%r1221, %r1215, %r1214, 25;
	mov.b64 	%rd1757, {%r1221, %r1220};
	xor.b64  	%rd1758, %rd1756, %rd1757;
	and.b64  	%rd1759, %rd1727, %rd1690;
	or.b64  	%rd1760, %rd1727, %rd1690;
	and.b64  	%rd1761, %rd1760, %rd1653;
	or.b64  	%rd1762, %rd1761, %rd1759;
	add.s64 	%rd1763, %rd1762, %rd1758;
	add.s64 	%rd1764, %rd1763, %rd1752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1222,%dummy}, %rd1703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1223}, %rd1703;
	}
	shf.r.wrap.b32 	%r1224, %r1223, %r1222, 19;
	shf.r.wrap.b32 	%r1225, %r1222, %r1223, 19;
	mov.b64 	%rd1765, {%r1225, %r1224};
	shf.l.wrap.b32 	%r1226, %r1222, %r1223, 3;
	shf.l.wrap.b32 	%r1227, %r1223, %r1222, 3;
	mov.b64 	%rd1766, {%r1227, %r1226};
	xor.b64  	%rd1767, %rd1765, %rd1766;
	shr.u64 	%rd1768, %rd1703, 6;
	xor.b64  	%rd1769, %rd1767, %rd1768;
	shf.r.wrap.b32 	%r1228, %r885, %r884, 1;
	shf.r.wrap.b32 	%r1229, %r884, %r885, 1;
	mov.b64 	%rd1770, {%r1229, %r1228};
	shf.r.wrap.b32 	%r1230, %r885, %r884, 8;
	shf.r.wrap.b32 	%r1231, %r884, %r885, 8;
	mov.b64 	%rd1771, {%r1231, %r1230};
	xor.b64  	%rd1772, %rd1770, %rd1771;
	shr.u64 	%rd1773, %rd1222, 7;
	xor.b64  	%rd1774, %rd1772, %rd1773;
	add.s64 	%rd1775, %rd1774, %rd1185;
	add.s64 	%rd1776, %rd1775, %rd1518;
	add.s64 	%rd1777, %rd1776, %rd1769;
	add.s64 	%rd1778, %rd1777, %rd1642;
	xor.b64  	%rd1779, %rd1716, %rd1679;
	and.b64  	%rd1780, %rd1753, %rd1779;
	xor.b64  	%rd1781, %rd1780, %rd1679;
	add.s64 	%rd1782, %rd1778, %rd1781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1232,%dummy}, %rd1753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1233}, %rd1753;
	}
	shf.r.wrap.b32 	%r1234, %r1233, %r1232, 14;
	shf.r.wrap.b32 	%r1235, %r1232, %r1233, 14;
	mov.b64 	%rd1783, {%r1235, %r1234};
	shf.r.wrap.b32 	%r1236, %r1233, %r1232, 18;
	shf.r.wrap.b32 	%r1237, %r1232, %r1233, 18;
	mov.b64 	%rd1784, {%r1237, %r1236};
	xor.b64  	%rd1785, %rd1783, %rd1784;
	shf.l.wrap.b32 	%r1238, %r1232, %r1233, 23;
	shf.l.wrap.b32 	%r1239, %r1233, %r1232, 23;
	mov.b64 	%rd1786, {%r1239, %r1238};
	xor.b64  	%rd1787, %rd1785, %rd1786;
	add.s64 	%rd1788, %rd1782, %rd1787;
	add.s64 	%rd1789, %rd1788, -860691631967231958;
	add.s64 	%rd1790, %rd1789, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1240,%dummy}, %rd1764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd1764;
	}
	shf.r.wrap.b32 	%r1242, %r1241, %r1240, 28;
	shf.r.wrap.b32 	%r1243, %r1240, %r1241, 28;
	mov.b64 	%rd1791, {%r1243, %r1242};
	shf.l.wrap.b32 	%r1244, %r1240, %r1241, 30;
	shf.l.wrap.b32 	%r1245, %r1241, %r1240, 30;
	mov.b64 	%rd1792, {%r1245, %r1244};
	xor.b64  	%rd1793, %rd1791, %rd1792;
	shf.l.wrap.b32 	%r1246, %r1240, %r1241, 25;
	shf.l.wrap.b32 	%r1247, %r1241, %r1240, 25;
	mov.b64 	%rd1794, {%r1247, %r1246};
	xor.b64  	%rd1795, %rd1793, %rd1794;
	and.b64  	%rd1796, %rd1764, %rd1727;
	or.b64  	%rd1797, %rd1764, %rd1727;
	and.b64  	%rd1798, %rd1797, %rd1690;
	or.b64  	%rd1799, %rd1798, %rd1796;
	add.s64 	%rd1800, %rd1799, %rd1795;
	add.s64 	%rd1801, %rd1800, %rd1789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1248,%dummy}, %rd1740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd1740;
	}
	shf.r.wrap.b32 	%r1250, %r1249, %r1248, 19;
	shf.r.wrap.b32 	%r1251, %r1248, %r1249, 19;
	mov.b64 	%rd1802, {%r1251, %r1250};
	shf.l.wrap.b32 	%r1252, %r1248, %r1249, 3;
	shf.l.wrap.b32 	%r1253, %r1249, %r1248, 3;
	mov.b64 	%rd1803, {%r1253, %r1252};
	xor.b64  	%rd1804, %rd1802, %rd1803;
	shr.u64 	%rd1805, %rd1740, 6;
	xor.b64  	%rd1806, %rd1804, %rd1805;
	shf.r.wrap.b32 	%r1254, %r911, %r910, 1;
	shf.r.wrap.b32 	%r1255, %r910, %r911, 1;
	mov.b64 	%rd1807, {%r1255, %r1254};
	shf.r.wrap.b32 	%r1256, %r911, %r910, 8;
	shf.r.wrap.b32 	%r1257, %r910, %r911, 8;
	mov.b64 	%rd1808, {%r1257, %r1256};
	xor.b64  	%rd1809, %rd1807, %rd1808;
	shr.u64 	%rd1810, %rd1259, 7;
	xor.b64  	%rd1811, %rd1809, %rd1810;
	add.s64 	%rd1812, %rd1811, %rd1222;
	add.s64 	%rd1813, %rd1812, %rd1555;
	add.s64 	%rd1814, %rd1813, %rd1806;
	add.s64 	%rd1815, %rd1814, %rd1679;
	xor.b64  	%rd1816, %rd1753, %rd1716;
	and.b64  	%rd1817, %rd1790, %rd1816;
	xor.b64  	%rd1818, %rd1817, %rd1716;
	add.s64 	%rd1819, %rd1815, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1258,%dummy}, %rd1790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1259}, %rd1790;
	}
	shf.r.wrap.b32 	%r1260, %r1259, %r1258, 14;
	shf.r.wrap.b32 	%r1261, %r1258, %r1259, 14;
	mov.b64 	%rd1820, {%r1261, %r1260};
	shf.r.wrap.b32 	%r1262, %r1259, %r1258, 18;
	shf.r.wrap.b32 	%r1263, %r1258, %r1259, 18;
	mov.b64 	%rd1821, {%r1263, %r1262};
	xor.b64  	%rd1822, %rd1820, %rd1821;
	shf.l.wrap.b32 	%r1264, %r1258, %r1259, 23;
	shf.l.wrap.b32 	%r1265, %r1259, %r1258, 23;
	mov.b64 	%rd1823, {%r1265, %r1264};
	xor.b64  	%rd1824, %rd1822, %rd1823;
	add.s64 	%rd1825, %rd1819, %rd1824;
	add.s64 	%rd1826, %rd1825, 1182934255886127544;
	add.s64 	%rd1827, %rd1826, %rd1690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1266,%dummy}, %rd1801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1267}, %rd1801;
	}
	shf.r.wrap.b32 	%r1268, %r1267, %r1266, 28;
	shf.r.wrap.b32 	%r1269, %r1266, %r1267, 28;
	mov.b64 	%rd1828, {%r1269, %r1268};
	shf.l.wrap.b32 	%r1270, %r1266, %r1267, 30;
	shf.l.wrap.b32 	%r1271, %r1267, %r1266, 30;
	mov.b64 	%rd1829, {%r1271, %r1270};
	xor.b64  	%rd1830, %rd1828, %rd1829;
	shf.l.wrap.b32 	%r1272, %r1266, %r1267, 25;
	shf.l.wrap.b32 	%r1273, %r1267, %r1266, 25;
	mov.b64 	%rd1831, {%r1273, %r1272};
	xor.b64  	%rd1832, %rd1830, %rd1831;
	and.b64  	%rd1833, %rd1801, %rd1764;
	or.b64  	%rd1834, %rd1801, %rd1764;
	and.b64  	%rd1835, %rd1834, %rd1727;
	or.b64  	%rd1836, %rd1835, %rd1833;
	add.s64 	%rd1837, %rd1836, %rd1832;
	add.s64 	%rd1838, %rd1837, %rd1826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd1777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1275}, %rd1777;
	}
	shf.r.wrap.b32 	%r1276, %r1275, %r1274, 19;
	shf.r.wrap.b32 	%r1277, %r1274, %r1275, 19;
	mov.b64 	%rd1839, {%r1277, %r1276};
	shf.l.wrap.b32 	%r1278, %r1274, %r1275, 3;
	shf.l.wrap.b32 	%r1279, %r1275, %r1274, 3;
	mov.b64 	%rd1840, {%r1279, %r1278};
	xor.b64  	%rd1841, %rd1839, %rd1840;
	shr.u64 	%rd1842, %rd1777, 6;
	xor.b64  	%rd1843, %rd1841, %rd1842;
	shf.r.wrap.b32 	%r1280, %r937, %r936, 1;
	shf.r.wrap.b32 	%r1281, %r936, %r937, 1;
	mov.b64 	%rd1844, {%r1281, %r1280};
	shf.r.wrap.b32 	%r1282, %r937, %r936, 8;
	shf.r.wrap.b32 	%r1283, %r936, %r937, 8;
	mov.b64 	%rd1845, {%r1283, %r1282};
	xor.b64  	%rd1846, %rd1844, %rd1845;
	shr.u64 	%rd1847, %rd1296, 7;
	xor.b64  	%rd1848, %rd1846, %rd1847;
	add.s64 	%rd1849, %rd1848, %rd1259;
	add.s64 	%rd1850, %rd1849, %rd1592;
	add.s64 	%rd1851, %rd1850, %rd1843;
	add.s64 	%rd1852, %rd1851, %rd1716;
	xor.b64  	%rd1853, %rd1790, %rd1753;
	and.b64  	%rd1854, %rd1827, %rd1853;
	xor.b64  	%rd1855, %rd1854, %rd1753;
	add.s64 	%rd1856, %rd1852, %rd1855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1284,%dummy}, %rd1827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1285}, %rd1827;
	}
	shf.r.wrap.b32 	%r1286, %r1285, %r1284, 14;
	shf.r.wrap.b32 	%r1287, %r1284, %r1285, 14;
	mov.b64 	%rd1857, {%r1287, %r1286};
	shf.r.wrap.b32 	%r1288, %r1285, %r1284, 18;
	shf.r.wrap.b32 	%r1289, %r1284, %r1285, 18;
	mov.b64 	%rd1858, {%r1289, %r1288};
	xor.b64  	%rd1859, %rd1857, %rd1858;
	shf.l.wrap.b32 	%r1290, %r1284, %r1285, 23;
	shf.l.wrap.b32 	%r1291, %r1285, %r1284, 23;
	mov.b64 	%rd1860, {%r1291, %r1290};
	xor.b64  	%rd1861, %rd1859, %rd1860;
	add.s64 	%rd1862, %rd1856, %rd1861;
	add.s64 	%rd1863, %rd1862, 1847814050463011016;
	add.s64 	%rd1864, %rd1863, %rd1727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd1838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1838;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 28;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 28;
	mov.b64 	%rd1865, {%r1295, %r1294};
	shf.l.wrap.b32 	%r1296, %r1292, %r1293, 30;
	shf.l.wrap.b32 	%r1297, %r1293, %r1292, 30;
	mov.b64 	%rd1866, {%r1297, %r1296};
	xor.b64  	%rd1867, %rd1865, %rd1866;
	shf.l.wrap.b32 	%r1298, %r1292, %r1293, 25;
	shf.l.wrap.b32 	%r1299, %r1293, %r1292, 25;
	mov.b64 	%rd1868, {%r1299, %r1298};
	xor.b64  	%rd1869, %rd1867, %rd1868;
	and.b64  	%rd1870, %rd1838, %rd1801;
	or.b64  	%rd1871, %rd1838, %rd1801;
	and.b64  	%rd1872, %rd1871, %rd1764;
	or.b64  	%rd1873, %rd1872, %rd1870;
	add.s64 	%rd1874, %rd1873, %rd1869;
	add.s64 	%rd1875, %rd1874, %rd1863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1300,%dummy}, %rd1814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd1814;
	}
	shf.r.wrap.b32 	%r1302, %r1301, %r1300, 19;
	shf.r.wrap.b32 	%r1303, %r1300, %r1301, 19;
	mov.b64 	%rd1876, {%r1303, %r1302};
	shf.l.wrap.b32 	%r1304, %r1300, %r1301, 3;
	shf.l.wrap.b32 	%r1305, %r1301, %r1300, 3;
	mov.b64 	%rd1877, {%r1305, %r1304};
	xor.b64  	%rd1878, %rd1876, %rd1877;
	shr.u64 	%rd1879, %rd1814, 6;
	xor.b64  	%rd1880, %rd1878, %rd1879;
	shf.r.wrap.b32 	%r1306, %r963, %r962, 1;
	shf.r.wrap.b32 	%r1307, %r962, %r963, 1;
	mov.b64 	%rd1881, {%r1307, %r1306};
	shf.r.wrap.b32 	%r1308, %r963, %r962, 8;
	shf.r.wrap.b32 	%r1309, %r962, %r963, 8;
	mov.b64 	%rd1882, {%r1309, %r1308};
	xor.b64  	%rd1883, %rd1881, %rd1882;
	shr.u64 	%rd1884, %rd1333, 7;
	xor.b64  	%rd1885, %rd1883, %rd1884;
	add.s64 	%rd1886, %rd1885, %rd1296;
	add.s64 	%rd1887, %rd1886, %rd1629;
	add.s64 	%rd1888, %rd1887, %rd1880;
	add.s64 	%rd1889, %rd1888, %rd1753;
	xor.b64  	%rd1890, %rd1827, %rd1790;
	and.b64  	%rd1891, %rd1864, %rd1890;
	xor.b64  	%rd1892, %rd1891, %rd1790;
	add.s64 	%rd1893, %rd1889, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd1864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1311}, %rd1864;
	}
	shf.r.wrap.b32 	%r1312, %r1311, %r1310, 14;
	shf.r.wrap.b32 	%r1313, %r1310, %r1311, 14;
	mov.b64 	%rd1894, {%r1313, %r1312};
	shf.r.wrap.b32 	%r1314, %r1311, %r1310, 18;
	shf.r.wrap.b32 	%r1315, %r1310, %r1311, 18;
	mov.b64 	%rd1895, {%r1315, %r1314};
	xor.b64  	%rd1896, %rd1894, %rd1895;
	shf.l.wrap.b32 	%r1316, %r1310, %r1311, 23;
	shf.l.wrap.b32 	%r1317, %r1311, %r1310, 23;
	mov.b64 	%rd1897, {%r1317, %r1316};
	xor.b64  	%rd1898, %rd1896, %rd1897;
	add.s64 	%rd1899, %rd1893, %rd1898;
	add.s64 	%rd1900, %rd1899, 2177327727835720531;
	add.s64 	%rd1901, %rd1900, %rd1764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd1875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd1875;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 28;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 28;
	mov.b64 	%rd1902, {%r1321, %r1320};
	shf.l.wrap.b32 	%r1322, %r1318, %r1319, 30;
	shf.l.wrap.b32 	%r1323, %r1319, %r1318, 30;
	mov.b64 	%rd1903, {%r1323, %r1322};
	xor.b64  	%rd1904, %rd1902, %rd1903;
	shf.l.wrap.b32 	%r1324, %r1318, %r1319, 25;
	shf.l.wrap.b32 	%r1325, %r1319, %r1318, 25;
	mov.b64 	%rd1905, {%r1325, %r1324};
	xor.b64  	%rd1906, %rd1904, %rd1905;
	and.b64  	%rd1907, %rd1875, %rd1838;
	or.b64  	%rd1908, %rd1875, %rd1838;
	and.b64  	%rd1909, %rd1908, %rd1801;
	or.b64  	%rd1910, %rd1909, %rd1907;
	add.s64 	%rd1911, %rd1910, %rd1906;
	add.s64 	%rd1912, %rd1911, %rd1900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd1851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd1851;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 19;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 19;
	mov.b64 	%rd1913, {%r1329, %r1328};
	shf.l.wrap.b32 	%r1330, %r1326, %r1327, 3;
	shf.l.wrap.b32 	%r1331, %r1327, %r1326, 3;
	mov.b64 	%rd1914, {%r1331, %r1330};
	xor.b64  	%rd1915, %rd1913, %rd1914;
	shr.u64 	%rd1916, %rd1851, 6;
	xor.b64  	%rd1917, %rd1915, %rd1916;
	shf.r.wrap.b32 	%r1332, %r989, %r988, 1;
	shf.r.wrap.b32 	%r1333, %r988, %r989, 1;
	mov.b64 	%rd1918, {%r1333, %r1332};
	shf.r.wrap.b32 	%r1334, %r989, %r988, 8;
	shf.r.wrap.b32 	%r1335, %r988, %r989, 8;
	mov.b64 	%rd1919, {%r1335, %r1334};
	xor.b64  	%rd1920, %rd1918, %rd1919;
	shr.u64 	%rd1921, %rd1370, 7;
	xor.b64  	%rd1922, %rd1920, %rd1921;
	add.s64 	%rd1923, %rd1922, %rd1333;
	add.s64 	%rd1924, %rd1923, %rd1666;
	add.s64 	%rd1925, %rd1924, %rd1917;
	add.s64 	%rd1926, %rd1925, %rd1790;
	xor.b64  	%rd1927, %rd1864, %rd1827;
	and.b64  	%rd1928, %rd1901, %rd1927;
	xor.b64  	%rd1929, %rd1928, %rd1827;
	add.s64 	%rd1930, %rd1926, %rd1929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1336,%dummy}, %rd1901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1337}, %rd1901;
	}
	shf.r.wrap.b32 	%r1338, %r1337, %r1336, 14;
	shf.r.wrap.b32 	%r1339, %r1336, %r1337, 14;
	mov.b64 	%rd1931, {%r1339, %r1338};
	shf.r.wrap.b32 	%r1340, %r1337, %r1336, 18;
	shf.r.wrap.b32 	%r1341, %r1336, %r1337, 18;
	mov.b64 	%rd1932, {%r1341, %r1340};
	xor.b64  	%rd1933, %rd1931, %rd1932;
	shf.l.wrap.b32 	%r1342, %r1336, %r1337, 23;
	shf.l.wrap.b32 	%r1343, %r1337, %r1336, 23;
	mov.b64 	%rd1934, {%r1343, %r1342};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	add.s64 	%rd1936, %rd1930, %rd1935;
	add.s64 	%rd1937, %rd1936, 2830643537854262169;
	add.s64 	%rd1938, %rd1937, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1344,%dummy}, %rd1912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1345}, %rd1912;
	}
	shf.r.wrap.b32 	%r1346, %r1345, %r1344, 28;
	shf.r.wrap.b32 	%r1347, %r1344, %r1345, 28;
	mov.b64 	%rd1939, {%r1347, %r1346};
	shf.l.wrap.b32 	%r1348, %r1344, %r1345, 30;
	shf.l.wrap.b32 	%r1349, %r1345, %r1344, 30;
	mov.b64 	%rd1940, {%r1349, %r1348};
	xor.b64  	%rd1941, %rd1939, %rd1940;
	shf.l.wrap.b32 	%r1350, %r1344, %r1345, 25;
	shf.l.wrap.b32 	%r1351, %r1345, %r1344, 25;
	mov.b64 	%rd1942, {%r1351, %r1350};
	xor.b64  	%rd1943, %rd1941, %rd1942;
	and.b64  	%rd1944, %rd1912, %rd1875;
	or.b64  	%rd1945, %rd1912, %rd1875;
	and.b64  	%rd1946, %rd1945, %rd1838;
	or.b64  	%rd1947, %rd1946, %rd1944;
	add.s64 	%rd1948, %rd1947, %rd1943;
	add.s64 	%rd1949, %rd1948, %rd1937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1352,%dummy}, %rd1888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1353}, %rd1888;
	}
	shf.r.wrap.b32 	%r1354, %r1353, %r1352, 19;
	shf.r.wrap.b32 	%r1355, %r1352, %r1353, 19;
	mov.b64 	%rd1950, {%r1355, %r1354};
	shf.l.wrap.b32 	%r1356, %r1352, %r1353, 3;
	shf.l.wrap.b32 	%r1357, %r1353, %r1352, 3;
	mov.b64 	%rd1951, {%r1357, %r1356};
	xor.b64  	%rd1952, %rd1950, %rd1951;
	shr.u64 	%rd1953, %rd1888, 6;
	xor.b64  	%rd1954, %rd1952, %rd1953;
	shf.r.wrap.b32 	%r1358, %r1015, %r1014, 1;
	shf.r.wrap.b32 	%r1359, %r1014, %r1015, 1;
	mov.b64 	%rd1955, {%r1359, %r1358};
	shf.r.wrap.b32 	%r1360, %r1015, %r1014, 8;
	shf.r.wrap.b32 	%r1361, %r1014, %r1015, 8;
	mov.b64 	%rd1956, {%r1361, %r1360};
	xor.b64  	%rd1957, %rd1955, %rd1956;
	shr.u64 	%rd1958, %rd1407, 7;
	xor.b64  	%rd1959, %rd1957, %rd1958;
	add.s64 	%rd1960, %rd1959, %rd1370;
	add.s64 	%rd1961, %rd1960, %rd1703;
	add.s64 	%rd1962, %rd1961, %rd1954;
	add.s64 	%rd1963, %rd1962, %rd1827;
	xor.b64  	%rd1964, %rd1901, %rd1864;
	and.b64  	%rd1965, %rd1938, %rd1964;
	xor.b64  	%rd1966, %rd1965, %rd1864;
	add.s64 	%rd1967, %rd1963, %rd1966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1362,%dummy}, %rd1938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1363}, %rd1938;
	}
	shf.r.wrap.b32 	%r1364, %r1363, %r1362, 14;
	shf.r.wrap.b32 	%r1365, %r1362, %r1363, 14;
	mov.b64 	%rd1968, {%r1365, %r1364};
	shf.r.wrap.b32 	%r1366, %r1363, %r1362, 18;
	shf.r.wrap.b32 	%r1367, %r1362, %r1363, 18;
	mov.b64 	%rd1969, {%r1367, %r1366};
	xor.b64  	%rd1970, %rd1968, %rd1969;
	shf.l.wrap.b32 	%r1368, %r1362, %r1363, 23;
	shf.l.wrap.b32 	%r1369, %r1363, %r1362, 23;
	mov.b64 	%rd1971, {%r1369, %r1368};
	xor.b64  	%rd1972, %rd1970, %rd1971;
	add.s64 	%rd1973, %rd1967, %rd1972;
	add.s64 	%rd1974, %rd1973, 3796741975233480872;
	add.s64 	%rd1975, %rd1974, %rd1838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd1949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1371}, %rd1949;
	}
	shf.r.wrap.b32 	%r1372, %r1371, %r1370, 28;
	shf.r.wrap.b32 	%r1373, %r1370, %r1371, 28;
	mov.b64 	%rd1976, {%r1373, %r1372};
	shf.l.wrap.b32 	%r1374, %r1370, %r1371, 30;
	shf.l.wrap.b32 	%r1375, %r1371, %r1370, 30;
	mov.b64 	%rd1977, {%r1375, %r1374};
	xor.b64  	%rd1978, %rd1976, %rd1977;
	shf.l.wrap.b32 	%r1376, %r1370, %r1371, 25;
	shf.l.wrap.b32 	%r1377, %r1371, %r1370, 25;
	mov.b64 	%rd1979, {%r1377, %r1376};
	xor.b64  	%rd1980, %rd1978, %rd1979;
	and.b64  	%rd1981, %rd1949, %rd1912;
	or.b64  	%rd1982, %rd1949, %rd1912;
	and.b64  	%rd1983, %rd1982, %rd1875;
	or.b64  	%rd1984, %rd1983, %rd1981;
	add.s64 	%rd1985, %rd1984, %rd1980;
	add.s64 	%rd1986, %rd1985, %rd1974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1378,%dummy}, %rd1925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1379}, %rd1925;
	}
	shf.r.wrap.b32 	%r1380, %r1379, %r1378, 19;
	shf.r.wrap.b32 	%r1381, %r1378, %r1379, 19;
	mov.b64 	%rd1987, {%r1381, %r1380};
	shf.l.wrap.b32 	%r1382, %r1378, %r1379, 3;
	shf.l.wrap.b32 	%r1383, %r1379, %r1378, 3;
	mov.b64 	%rd1988, {%r1383, %r1382};
	xor.b64  	%rd1989, %rd1987, %rd1988;
	shr.u64 	%rd1990, %rd1925, 6;
	xor.b64  	%rd1991, %rd1989, %rd1990;
	shf.r.wrap.b32 	%r1384, %r1041, %r1040, 1;
	shf.r.wrap.b32 	%r1385, %r1040, %r1041, 1;
	mov.b64 	%rd1992, {%r1385, %r1384};
	shf.r.wrap.b32 	%r1386, %r1041, %r1040, 8;
	shf.r.wrap.b32 	%r1387, %r1040, %r1041, 8;
	mov.b64 	%rd1993, {%r1387, %r1386};
	xor.b64  	%rd1994, %rd1992, %rd1993;
	shr.u64 	%rd1995, %rd1444, 7;
	xor.b64  	%rd1996, %rd1994, %rd1995;
	add.s64 	%rd1997, %rd1996, %rd1407;
	add.s64 	%rd1998, %rd1997, %rd1740;
	add.s64 	%rd1999, %rd1998, %rd1991;
	add.s64 	%rd2000, %rd1999, %rd1864;
	xor.b64  	%rd2001, %rd1938, %rd1901;
	and.b64  	%rd2002, %rd1975, %rd2001;
	xor.b64  	%rd2003, %rd2002, %rd1901;
	add.s64 	%rd2004, %rd2000, %rd2003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1388,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1389}, %rd1975;
	}
	shf.r.wrap.b32 	%r1390, %r1389, %r1388, 14;
	shf.r.wrap.b32 	%r1391, %r1388, %r1389, 14;
	mov.b64 	%rd2005, {%r1391, %r1390};
	shf.r.wrap.b32 	%r1392, %r1389, %r1388, 18;
	shf.r.wrap.b32 	%r1393, %r1388, %r1389, 18;
	mov.b64 	%rd2006, {%r1393, %r1392};
	xor.b64  	%rd2007, %rd2005, %rd2006;
	shf.l.wrap.b32 	%r1394, %r1388, %r1389, 23;
	shf.l.wrap.b32 	%r1395, %r1389, %r1388, 23;
	mov.b64 	%rd2008, {%r1395, %r1394};
	xor.b64  	%rd2009, %rd2007, %rd2008;
	add.s64 	%rd2010, %rd2004, %rd2009;
	add.s64 	%rd2011, %rd2010, 4115178125766777443;
	add.s64 	%rd2012, %rd2011, %rd1875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1396,%dummy}, %rd1986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1397}, %rd1986;
	}
	shf.r.wrap.b32 	%r1398, %r1397, %r1396, 28;
	shf.r.wrap.b32 	%r1399, %r1396, %r1397, 28;
	mov.b64 	%rd2013, {%r1399, %r1398};
	shf.l.wrap.b32 	%r1400, %r1396, %r1397, 30;
	shf.l.wrap.b32 	%r1401, %r1397, %r1396, 30;
	mov.b64 	%rd2014, {%r1401, %r1400};
	xor.b64  	%rd2015, %rd2013, %rd2014;
	shf.l.wrap.b32 	%r1402, %r1396, %r1397, 25;
	shf.l.wrap.b32 	%r1403, %r1397, %r1396, 25;
	mov.b64 	%rd2016, {%r1403, %r1402};
	xor.b64  	%rd2017, %rd2015, %rd2016;
	and.b64  	%rd2018, %rd1986, %rd1949;
	or.b64  	%rd2019, %rd1986, %rd1949;
	and.b64  	%rd2020, %rd2019, %rd1912;
	or.b64  	%rd2021, %rd2020, %rd2018;
	add.s64 	%rd2022, %rd2021, %rd2017;
	add.s64 	%rd2023, %rd2022, %rd2011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1404,%dummy}, %rd1962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1405}, %rd1962;
	}
	shf.r.wrap.b32 	%r1406, %r1405, %r1404, 19;
	shf.r.wrap.b32 	%r1407, %r1404, %r1405, 19;
	mov.b64 	%rd2024, {%r1407, %r1406};
	shf.l.wrap.b32 	%r1408, %r1404, %r1405, 3;
	shf.l.wrap.b32 	%r1409, %r1405, %r1404, 3;
	mov.b64 	%rd2025, {%r1409, %r1408};
	xor.b64  	%rd2026, %rd2024, %rd2025;
	shr.u64 	%rd2027, %rd1962, 6;
	xor.b64  	%rd2028, %rd2026, %rd2027;
	shf.r.wrap.b32 	%r1410, %r1067, %r1066, 1;
	shf.r.wrap.b32 	%r1411, %r1066, %r1067, 1;
	mov.b64 	%rd2029, {%r1411, %r1410};
	shf.r.wrap.b32 	%r1412, %r1067, %r1066, 8;
	shf.r.wrap.b32 	%r1413, %r1066, %r1067, 8;
	mov.b64 	%rd2030, {%r1413, %r1412};
	xor.b64  	%rd2031, %rd2029, %rd2030;
	shr.u64 	%rd2032, %rd1481, 7;
	xor.b64  	%rd2033, %rd2031, %rd2032;
	add.s64 	%rd2034, %rd2033, %rd1444;
	add.s64 	%rd2035, %rd2034, %rd1777;
	add.s64 	%rd2036, %rd2035, %rd2028;
	add.s64 	%rd2037, %rd2036, %rd1901;
	xor.b64  	%rd2038, %rd1975, %rd1938;
	and.b64  	%rd2039, %rd2012, %rd2038;
	xor.b64  	%rd2040, %rd2039, %rd1938;
	add.s64 	%rd2041, %rd2037, %rd2040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd2012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd2012;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 14;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 14;
	mov.b64 	%rd2042, {%r1417, %r1416};
	shf.r.wrap.b32 	%r1418, %r1415, %r1414, 18;
	shf.r.wrap.b32 	%r1419, %r1414, %r1415, 18;
	mov.b64 	%rd2043, {%r1419, %r1418};
	xor.b64  	%rd2044, %rd2042, %rd2043;
	shf.l.wrap.b32 	%r1420, %r1414, %r1415, 23;
	shf.l.wrap.b32 	%r1421, %r1415, %r1414, 23;
	mov.b64 	%rd2045, {%r1421, %r1420};
	xor.b64  	%rd2046, %rd2044, %rd2045;
	add.s64 	%rd2047, %rd2041, %rd2046;
	add.s64 	%rd2048, %rd2047, 5681478168544905931;
	add.s64 	%rd2049, %rd2048, %rd1912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd2023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1423}, %rd2023;
	}
	shf.r.wrap.b32 	%r1424, %r1423, %r1422, 28;
	shf.r.wrap.b32 	%r1425, %r1422, %r1423, 28;
	mov.b64 	%rd2050, {%r1425, %r1424};
	shf.l.wrap.b32 	%r1426, %r1422, %r1423, 30;
	shf.l.wrap.b32 	%r1427, %r1423, %r1422, 30;
	mov.b64 	%rd2051, {%r1427, %r1426};
	xor.b64  	%rd2052, %rd2050, %rd2051;
	shf.l.wrap.b32 	%r1428, %r1422, %r1423, 25;
	shf.l.wrap.b32 	%r1429, %r1423, %r1422, 25;
	mov.b64 	%rd2053, {%r1429, %r1428};
	xor.b64  	%rd2054, %rd2052, %rd2053;
	and.b64  	%rd2055, %rd2023, %rd1986;
	or.b64  	%rd2056, %rd2023, %rd1986;
	and.b64  	%rd2057, %rd2056, %rd1949;
	or.b64  	%rd2058, %rd2057, %rd2055;
	add.s64 	%rd2059, %rd2058, %rd2054;
	add.s64 	%rd2060, %rd2059, %rd2048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd1999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd1999;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 19;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 19;
	mov.b64 	%rd2061, {%r1433, %r1432};
	shf.l.wrap.b32 	%r1434, %r1430, %r1431, 3;
	shf.l.wrap.b32 	%r1435, %r1431, %r1430, 3;
	mov.b64 	%rd2062, {%r1435, %r1434};
	xor.b64  	%rd2063, %rd2061, %rd2062;
	shr.u64 	%rd2064, %rd1999, 6;
	xor.b64  	%rd2065, %rd2063, %rd2064;
	shf.r.wrap.b32 	%r1436, %r1093, %r1092, 1;
	shf.r.wrap.b32 	%r1437, %r1092, %r1093, 1;
	mov.b64 	%rd2066, {%r1437, %r1436};
	shf.r.wrap.b32 	%r1438, %r1093, %r1092, 8;
	shf.r.wrap.b32 	%r1439, %r1092, %r1093, 8;
	mov.b64 	%rd2067, {%r1439, %r1438};
	xor.b64  	%rd2068, %rd2066, %rd2067;
	shr.u64 	%rd2069, %rd1518, 7;
	xor.b64  	%rd2070, %rd2068, %rd2069;
	add.s64 	%rd2071, %rd2070, %rd1481;
	add.s64 	%rd2072, %rd2071, %rd1814;
	add.s64 	%rd2073, %rd2072, %rd2065;
	add.s64 	%rd2074, %rd2073, %rd1938;
	xor.b64  	%rd2075, %rd2012, %rd1975;
	and.b64  	%rd2076, %rd2049, %rd2075;
	xor.b64  	%rd2077, %rd2076, %rd1975;
	add.s64 	%rd2078, %rd2074, %rd2077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1440,%dummy}, %rd2049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1441}, %rd2049;
	}
	shf.r.wrap.b32 	%r1442, %r1441, %r1440, 14;
	shf.r.wrap.b32 	%r1443, %r1440, %r1441, 14;
	mov.b64 	%rd2079, {%r1443, %r1442};
	shf.r.wrap.b32 	%r1444, %r1441, %r1440, 18;
	shf.r.wrap.b32 	%r1445, %r1440, %r1441, 18;
	mov.b64 	%rd2080, {%r1445, %r1444};
	xor.b64  	%rd2081, %rd2079, %rd2080;
	shf.l.wrap.b32 	%r1446, %r1440, %r1441, 23;
	shf.l.wrap.b32 	%r1447, %r1441, %r1440, 23;
	mov.b64 	%rd2082, {%r1447, %r1446};
	xor.b64  	%rd2083, %rd2081, %rd2082;
	add.s64 	%rd2084, %rd2078, %rd2083;
	add.s64 	%rd2085, %rd2084, 6601373596472566643;
	add.s64 	%rd2086, %rd2085, %rd1949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1448,%dummy}, %rd2060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1449}, %rd2060;
	}
	shf.r.wrap.b32 	%r1450, %r1449, %r1448, 28;
	shf.r.wrap.b32 	%r1451, %r1448, %r1449, 28;
	mov.b64 	%rd2087, {%r1451, %r1450};
	shf.l.wrap.b32 	%r1452, %r1448, %r1449, 30;
	shf.l.wrap.b32 	%r1453, %r1449, %r1448, 30;
	mov.b64 	%rd2088, {%r1453, %r1452};
	xor.b64  	%rd2089, %rd2087, %rd2088;
	shf.l.wrap.b32 	%r1454, %r1448, %r1449, 25;
	shf.l.wrap.b32 	%r1455, %r1449, %r1448, 25;
	mov.b64 	%rd2090, {%r1455, %r1454};
	xor.b64  	%rd2091, %rd2089, %rd2090;
	and.b64  	%rd2092, %rd2060, %rd2023;
	or.b64  	%rd2093, %rd2060, %rd2023;
	and.b64  	%rd2094, %rd2093, %rd1986;
	or.b64  	%rd2095, %rd2094, %rd2092;
	add.s64 	%rd2096, %rd2095, %rd2091;
	add.s64 	%rd2097, %rd2096, %rd2085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1456,%dummy}, %rd2036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1457}, %rd2036;
	}
	shf.r.wrap.b32 	%r1458, %r1457, %r1456, 19;
	shf.r.wrap.b32 	%r1459, %r1456, %r1457, 19;
	mov.b64 	%rd2098, {%r1459, %r1458};
	shf.l.wrap.b32 	%r1460, %r1456, %r1457, 3;
	shf.l.wrap.b32 	%r1461, %r1457, %r1456, 3;
	mov.b64 	%rd2099, {%r1461, %r1460};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	shr.u64 	%rd2101, %rd2036, 6;
	xor.b64  	%rd2102, %rd2100, %rd2101;
	shf.r.wrap.b32 	%r1462, %r1119, %r1118, 1;
	shf.r.wrap.b32 	%r1463, %r1118, %r1119, 1;
	mov.b64 	%rd2103, {%r1463, %r1462};
	shf.r.wrap.b32 	%r1464, %r1119, %r1118, 8;
	shf.r.wrap.b32 	%r1465, %r1118, %r1119, 8;
	mov.b64 	%rd2104, {%r1465, %r1464};
	xor.b64  	%rd2105, %rd2103, %rd2104;
	shr.u64 	%rd2106, %rd1555, 7;
	xor.b64  	%rd2107, %rd2105, %rd2106;
	add.s64 	%rd2108, %rd2107, %rd1518;
	add.s64 	%rd2109, %rd2108, %rd1851;
	add.s64 	%rd2110, %rd2109, %rd2102;
	add.s64 	%rd2111, %rd2110, %rd1975;
	xor.b64  	%rd2112, %rd2049, %rd2012;
	and.b64  	%rd2113, %rd2086, %rd2112;
	xor.b64  	%rd2114, %rd2113, %rd2012;
	add.s64 	%rd2115, %rd2111, %rd2114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1466,%dummy}, %rd2086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1467}, %rd2086;
	}
	shf.r.wrap.b32 	%r1468, %r1467, %r1466, 14;
	shf.r.wrap.b32 	%r1469, %r1466, %r1467, 14;
	mov.b64 	%rd2116, {%r1469, %r1468};
	shf.r.wrap.b32 	%r1470, %r1467, %r1466, 18;
	shf.r.wrap.b32 	%r1471, %r1466, %r1467, 18;
	mov.b64 	%rd2117, {%r1471, %r1470};
	xor.b64  	%rd2118, %rd2116, %rd2117;
	shf.l.wrap.b32 	%r1472, %r1466, %r1467, 23;
	shf.l.wrap.b32 	%r1473, %r1467, %r1466, 23;
	mov.b64 	%rd2119, {%r1473, %r1472};
	xor.b64  	%rd2120, %rd2118, %rd2119;
	add.s64 	%rd2121, %rd2115, %rd2120;
	add.s64 	%rd2122, %rd2121, 7507060721942968483;
	add.s64 	%rd2123, %rd2122, %rd1986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1474,%dummy}, %rd2097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1475}, %rd2097;
	}
	shf.r.wrap.b32 	%r1476, %r1475, %r1474, 28;
	shf.r.wrap.b32 	%r1477, %r1474, %r1475, 28;
	mov.b64 	%rd2124, {%r1477, %r1476};
	shf.l.wrap.b32 	%r1478, %r1474, %r1475, 30;
	shf.l.wrap.b32 	%r1479, %r1475, %r1474, 30;
	mov.b64 	%rd2125, {%r1479, %r1478};
	xor.b64  	%rd2126, %rd2124, %rd2125;
	shf.l.wrap.b32 	%r1480, %r1474, %r1475, 25;
	shf.l.wrap.b32 	%r1481, %r1475, %r1474, 25;
	mov.b64 	%rd2127, {%r1481, %r1480};
	xor.b64  	%rd2128, %rd2126, %rd2127;
	and.b64  	%rd2129, %rd2097, %rd2060;
	or.b64  	%rd2130, %rd2097, %rd2060;
	and.b64  	%rd2131, %rd2130, %rd2023;
	or.b64  	%rd2132, %rd2131, %rd2129;
	add.s64 	%rd2133, %rd2132, %rd2128;
	add.s64 	%rd2134, %rd2133, %rd2122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1482,%dummy}, %rd2073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1483}, %rd2073;
	}
	shf.r.wrap.b32 	%r1484, %r1483, %r1482, 19;
	shf.r.wrap.b32 	%r1485, %r1482, %r1483, 19;
	mov.b64 	%rd2135, {%r1485, %r1484};
	shf.l.wrap.b32 	%r1486, %r1482, %r1483, 3;
	shf.l.wrap.b32 	%r1487, %r1483, %r1482, 3;
	mov.b64 	%rd2136, {%r1487, %r1486};
	xor.b64  	%rd2137, %rd2135, %rd2136;
	shr.u64 	%rd2138, %rd2073, 6;
	xor.b64  	%rd2139, %rd2137, %rd2138;
	shf.r.wrap.b32 	%r1488, %r1145, %r1144, 1;
	shf.r.wrap.b32 	%r1489, %r1144, %r1145, 1;
	mov.b64 	%rd2140, {%r1489, %r1488};
	shf.r.wrap.b32 	%r1490, %r1145, %r1144, 8;
	shf.r.wrap.b32 	%r1491, %r1144, %r1145, 8;
	mov.b64 	%rd2141, {%r1491, %r1490};
	xor.b64  	%rd2142, %rd2140, %rd2141;
	shr.u64 	%rd2143, %rd1592, 7;
	xor.b64  	%rd2144, %rd2142, %rd2143;
	add.s64 	%rd2145, %rd2144, %rd1555;
	add.s64 	%rd2146, %rd2145, %rd1888;
	add.s64 	%rd2147, %rd2146, %rd2139;
	add.s64 	%rd2148, %rd2147, %rd2012;
	xor.b64  	%rd2149, %rd2086, %rd2049;
	and.b64  	%rd2150, %rd2123, %rd2149;
	xor.b64  	%rd2151, %rd2150, %rd2049;
	add.s64 	%rd2152, %rd2148, %rd2151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1492,%dummy}, %rd2123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1493}, %rd2123;
	}
	shf.r.wrap.b32 	%r1494, %r1493, %r1492, 14;
	shf.r.wrap.b32 	%r1495, %r1492, %r1493, 14;
	mov.b64 	%rd2153, {%r1495, %r1494};
	shf.r.wrap.b32 	%r1496, %r1493, %r1492, 18;
	shf.r.wrap.b32 	%r1497, %r1492, %r1493, 18;
	mov.b64 	%rd2154, {%r1497, %r1496};
	xor.b64  	%rd2155, %rd2153, %rd2154;
	shf.l.wrap.b32 	%r1498, %r1492, %r1493, 23;
	shf.l.wrap.b32 	%r1499, %r1493, %r1492, 23;
	mov.b64 	%rd2156, {%r1499, %r1498};
	xor.b64  	%rd2157, %rd2155, %rd2156;
	add.s64 	%rd2158, %rd2152, %rd2157;
	add.s64 	%rd2159, %rd2158, 8399075790359081724;
	add.s64 	%rd2160, %rd2159, %rd2023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1500,%dummy}, %rd2134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1501}, %rd2134;
	}
	shf.r.wrap.b32 	%r1502, %r1501, %r1500, 28;
	shf.r.wrap.b32 	%r1503, %r1500, %r1501, 28;
	mov.b64 	%rd2161, {%r1503, %r1502};
	shf.l.wrap.b32 	%r1504, %r1500, %r1501, 30;
	shf.l.wrap.b32 	%r1505, %r1501, %r1500, 30;
	mov.b64 	%rd2162, {%r1505, %r1504};
	xor.b64  	%rd2163, %rd2161, %rd2162;
	shf.l.wrap.b32 	%r1506, %r1500, %r1501, 25;
	shf.l.wrap.b32 	%r1507, %r1501, %r1500, 25;
	mov.b64 	%rd2164, {%r1507, %r1506};
	xor.b64  	%rd2165, %rd2163, %rd2164;
	and.b64  	%rd2166, %rd2134, %rd2097;
	or.b64  	%rd2167, %rd2134, %rd2097;
	and.b64  	%rd2168, %rd2167, %rd2060;
	or.b64  	%rd2169, %rd2168, %rd2166;
	add.s64 	%rd2170, %rd2169, %rd2165;
	add.s64 	%rd2171, %rd2170, %rd2159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1508,%dummy}, %rd2110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1509}, %rd2110;
	}
	shf.r.wrap.b32 	%r1510, %r1509, %r1508, 19;
	shf.r.wrap.b32 	%r1511, %r1508, %r1509, 19;
	mov.b64 	%rd2172, {%r1511, %r1510};
	shf.l.wrap.b32 	%r1512, %r1508, %r1509, 3;
	shf.l.wrap.b32 	%r1513, %r1509, %r1508, 3;
	mov.b64 	%rd2173, {%r1513, %r1512};
	xor.b64  	%rd2174, %rd2172, %rd2173;
	shr.u64 	%rd2175, %rd2110, 6;
	xor.b64  	%rd2176, %rd2174, %rd2175;
	shf.r.wrap.b32 	%r1514, %r1171, %r1170, 1;
	shf.r.wrap.b32 	%r1515, %r1170, %r1171, 1;
	mov.b64 	%rd2177, {%r1515, %r1514};
	shf.r.wrap.b32 	%r1516, %r1171, %r1170, 8;
	shf.r.wrap.b32 	%r1517, %r1170, %r1171, 8;
	mov.b64 	%rd2178, {%r1517, %r1516};
	xor.b64  	%rd2179, %rd2177, %rd2178;
	shr.u64 	%rd2180, %rd1629, 7;
	xor.b64  	%rd2181, %rd2179, %rd2180;
	add.s64 	%rd2182, %rd2181, %rd1592;
	add.s64 	%rd2183, %rd2182, %rd1925;
	add.s64 	%rd2184, %rd2183, %rd2176;
	add.s64 	%rd2185, %rd2184, %rd2049;
	xor.b64  	%rd2186, %rd2123, %rd2086;
	and.b64  	%rd2187, %rd2160, %rd2186;
	xor.b64  	%rd2188, %rd2187, %rd2086;
	add.s64 	%rd2189, %rd2185, %rd2188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1518,%dummy}, %rd2160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1519}, %rd2160;
	}
	shf.r.wrap.b32 	%r1520, %r1519, %r1518, 14;
	shf.r.wrap.b32 	%r1521, %r1518, %r1519, 14;
	mov.b64 	%rd2190, {%r1521, %r1520};
	shf.r.wrap.b32 	%r1522, %r1519, %r1518, 18;
	shf.r.wrap.b32 	%r1523, %r1518, %r1519, 18;
	mov.b64 	%rd2191, {%r1523, %r1522};
	xor.b64  	%rd2192, %rd2190, %rd2191;
	shf.l.wrap.b32 	%r1524, %r1518, %r1519, 23;
	shf.l.wrap.b32 	%r1525, %r1519, %r1518, 23;
	mov.b64 	%rd2193, {%r1525, %r1524};
	xor.b64  	%rd2194, %rd2192, %rd2193;
	add.s64 	%rd2195, %rd2189, %rd2194;
	add.s64 	%rd2196, %rd2195, 8693463985226723168;
	add.s64 	%rd2197, %rd2196, %rd2060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1526,%dummy}, %rd2171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1527}, %rd2171;
	}
	shf.r.wrap.b32 	%r1528, %r1527, %r1526, 28;
	shf.r.wrap.b32 	%r1529, %r1526, %r1527, 28;
	mov.b64 	%rd2198, {%r1529, %r1528};
	shf.l.wrap.b32 	%r1530, %r1526, %r1527, 30;
	shf.l.wrap.b32 	%r1531, %r1527, %r1526, 30;
	mov.b64 	%rd2199, {%r1531, %r1530};
	xor.b64  	%rd2200, %rd2198, %rd2199;
	shf.l.wrap.b32 	%r1532, %r1526, %r1527, 25;
	shf.l.wrap.b32 	%r1533, %r1527, %r1526, 25;
	mov.b64 	%rd2201, {%r1533, %r1532};
	xor.b64  	%rd2202, %rd2200, %rd2201;
	and.b64  	%rd2203, %rd2171, %rd2134;
	or.b64  	%rd2204, %rd2171, %rd2134;
	and.b64  	%rd2205, %rd2204, %rd2097;
	or.b64  	%rd2206, %rd2205, %rd2203;
	add.s64 	%rd2207, %rd2206, %rd2202;
	add.s64 	%rd2208, %rd2207, %rd2196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd2147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1535}, %rd2147;
	}
	shf.r.wrap.b32 	%r1536, %r1535, %r1534, 19;
	shf.r.wrap.b32 	%r1537, %r1534, %r1535, 19;
	mov.b64 	%rd2209, {%r1537, %r1536};
	shf.l.wrap.b32 	%r1538, %r1534, %r1535, 3;
	shf.l.wrap.b32 	%r1539, %r1535, %r1534, 3;
	mov.b64 	%rd2210, {%r1539, %r1538};
	xor.b64  	%rd2211, %rd2209, %rd2210;
	shr.u64 	%rd2212, %rd2147, 6;
	xor.b64  	%rd2213, %rd2211, %rd2212;
	shf.r.wrap.b32 	%r1540, %r1197, %r1196, 1;
	shf.r.wrap.b32 	%r1541, %r1196, %r1197, 1;
	mov.b64 	%rd2214, {%r1541, %r1540};
	shf.r.wrap.b32 	%r1542, %r1197, %r1196, 8;
	shf.r.wrap.b32 	%r1543, %r1196, %r1197, 8;
	mov.b64 	%rd2215, {%r1543, %r1542};
	xor.b64  	%rd2216, %rd2214, %rd2215;
	shr.u64 	%rd2217, %rd1666, 7;
	xor.b64  	%rd2218, %rd2216, %rd2217;
	add.s64 	%rd2219, %rd2218, %rd1629;
	add.s64 	%rd2220, %rd2219, %rd1962;
	add.s64 	%rd2221, %rd2220, %rd2213;
	add.s64 	%rd2222, %rd2221, %rd2086;
	xor.b64  	%rd2223, %rd2160, %rd2123;
	and.b64  	%rd2224, %rd2197, %rd2223;
	xor.b64  	%rd2225, %rd2224, %rd2123;
	add.s64 	%rd2226, %rd2222, %rd2225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1544,%dummy}, %rd2197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1545}, %rd2197;
	}
	shf.r.wrap.b32 	%r1546, %r1545, %r1544, 14;
	shf.r.wrap.b32 	%r1547, %r1544, %r1545, 14;
	mov.b64 	%rd2227, {%r1547, %r1546};
	shf.r.wrap.b32 	%r1548, %r1545, %r1544, 18;
	shf.r.wrap.b32 	%r1549, %r1544, %r1545, 18;
	mov.b64 	%rd2228, {%r1549, %r1548};
	xor.b64  	%rd2229, %rd2227, %rd2228;
	shf.l.wrap.b32 	%r1550, %r1544, %r1545, 23;
	shf.l.wrap.b32 	%r1551, %r1545, %r1544, 23;
	mov.b64 	%rd2230, {%r1551, %r1550};
	xor.b64  	%rd2231, %rd2229, %rd2230;
	add.s64 	%rd2232, %rd2226, %rd2231;
	add.s64 	%rd2233, %rd2232, -8878714635349349518;
	add.s64 	%rd2234, %rd2233, %rd2097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1552,%dummy}, %rd2208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd2208;
	}
	shf.r.wrap.b32 	%r1554, %r1553, %r1552, 28;
	shf.r.wrap.b32 	%r1555, %r1552, %r1553, 28;
	mov.b64 	%rd2235, {%r1555, %r1554};
	shf.l.wrap.b32 	%r1556, %r1552, %r1553, 30;
	shf.l.wrap.b32 	%r1557, %r1553, %r1552, 30;
	mov.b64 	%rd2236, {%r1557, %r1556};
	xor.b64  	%rd2237, %rd2235, %rd2236;
	shf.l.wrap.b32 	%r1558, %r1552, %r1553, 25;
	shf.l.wrap.b32 	%r1559, %r1553, %r1552, 25;
	mov.b64 	%rd2238, {%r1559, %r1558};
	xor.b64  	%rd2239, %rd2237, %rd2238;
	and.b64  	%rd2240, %rd2208, %rd2171;
	or.b64  	%rd2241, %rd2208, %rd2171;
	and.b64  	%rd2242, %rd2241, %rd2134;
	or.b64  	%rd2243, %rd2242, %rd2240;
	add.s64 	%rd2244, %rd2243, %rd2239;
	add.s64 	%rd2245, %rd2244, %rd2233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1560,%dummy}, %rd2184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1561}, %rd2184;
	}
	shf.r.wrap.b32 	%r1562, %r1561, %r1560, 19;
	shf.r.wrap.b32 	%r1563, %r1560, %r1561, 19;
	mov.b64 	%rd2246, {%r1563, %r1562};
	shf.l.wrap.b32 	%r1564, %r1560, %r1561, 3;
	shf.l.wrap.b32 	%r1565, %r1561, %r1560, 3;
	mov.b64 	%rd2247, {%r1565, %r1564};
	xor.b64  	%rd2248, %rd2246, %rd2247;
	shr.u64 	%rd2249, %rd2184, 6;
	xor.b64  	%rd2250, %rd2248, %rd2249;
	shf.r.wrap.b32 	%r1566, %r1223, %r1222, 1;
	shf.r.wrap.b32 	%r1567, %r1222, %r1223, 1;
	mov.b64 	%rd2251, {%r1567, %r1566};
	shf.r.wrap.b32 	%r1568, %r1223, %r1222, 8;
	shf.r.wrap.b32 	%r1569, %r1222, %r1223, 8;
	mov.b64 	%rd2252, {%r1569, %r1568};
	xor.b64  	%rd2253, %rd2251, %rd2252;
	shr.u64 	%rd2254, %rd1703, 7;
	xor.b64  	%rd2255, %rd2253, %rd2254;
	add.s64 	%rd2256, %rd2255, %rd1666;
	add.s64 	%rd2257, %rd2256, %rd1999;
	add.s64 	%rd2258, %rd2257, %rd2250;
	add.s64 	%rd2259, %rd2258, %rd2123;
	xor.b64  	%rd2260, %rd2197, %rd2160;
	and.b64  	%rd2261, %rd2234, %rd2260;
	xor.b64  	%rd2262, %rd2261, %rd2160;
	add.s64 	%rd2263, %rd2259, %rd2262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1570,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1571}, %rd2234;
	}
	shf.r.wrap.b32 	%r1572, %r1571, %r1570, 14;
	shf.r.wrap.b32 	%r1573, %r1570, %r1571, 14;
	mov.b64 	%rd2264, {%r1573, %r1572};
	shf.r.wrap.b32 	%r1574, %r1571, %r1570, 18;
	shf.r.wrap.b32 	%r1575, %r1570, %r1571, 18;
	mov.b64 	%rd2265, {%r1575, %r1574};
	xor.b64  	%rd2266, %rd2264, %rd2265;
	shf.l.wrap.b32 	%r1576, %r1570, %r1571, 23;
	shf.l.wrap.b32 	%r1577, %r1571, %r1570, 23;
	mov.b64 	%rd2267, {%r1577, %r1576};
	xor.b64  	%rd2268, %rd2266, %rd2267;
	add.s64 	%rd2269, %rd2263, %rd2268;
	add.s64 	%rd2270, %rd2269, -8302665154208450068;
	add.s64 	%rd2271, %rd2270, %rd2134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1578,%dummy}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1579}, %rd2245;
	}
	shf.r.wrap.b32 	%r1580, %r1579, %r1578, 28;
	shf.r.wrap.b32 	%r1581, %r1578, %r1579, 28;
	mov.b64 	%rd2272, {%r1581, %r1580};
	shf.l.wrap.b32 	%r1582, %r1578, %r1579, 30;
	shf.l.wrap.b32 	%r1583, %r1579, %r1578, 30;
	mov.b64 	%rd2273, {%r1583, %r1582};
	xor.b64  	%rd2274, %rd2272, %rd2273;
	shf.l.wrap.b32 	%r1584, %r1578, %r1579, 25;
	shf.l.wrap.b32 	%r1585, %r1579, %r1578, 25;
	mov.b64 	%rd2275, {%r1585, %r1584};
	xor.b64  	%rd2276, %rd2274, %rd2275;
	and.b64  	%rd2277, %rd2245, %rd2208;
	or.b64  	%rd2278, %rd2245, %rd2208;
	and.b64  	%rd2279, %rd2278, %rd2171;
	or.b64  	%rd2280, %rd2279, %rd2277;
	add.s64 	%rd2281, %rd2280, %rd2276;
	add.s64 	%rd2282, %rd2281, %rd2270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd2221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd2221;
	}
	shf.r.wrap.b32 	%r1588, %r1587, %r1586, 19;
	shf.r.wrap.b32 	%r1589, %r1586, %r1587, 19;
	mov.b64 	%rd2283, {%r1589, %r1588};
	shf.l.wrap.b32 	%r1590, %r1586, %r1587, 3;
	shf.l.wrap.b32 	%r1591, %r1587, %r1586, 3;
	mov.b64 	%rd2284, {%r1591, %r1590};
	xor.b64  	%rd2285, %rd2283, %rd2284;
	shr.u64 	%rd2286, %rd2221, 6;
	xor.b64  	%rd2287, %rd2285, %rd2286;
	shf.r.wrap.b32 	%r1592, %r1249, %r1248, 1;
	shf.r.wrap.b32 	%r1593, %r1248, %r1249, 1;
	mov.b64 	%rd2288, {%r1593, %r1592};
	shf.r.wrap.b32 	%r1594, %r1249, %r1248, 8;
	shf.r.wrap.b32 	%r1595, %r1248, %r1249, 8;
	mov.b64 	%rd2289, {%r1595, %r1594};
	xor.b64  	%rd2290, %rd2288, %rd2289;
	shr.u64 	%rd2291, %rd1740, 7;
	xor.b64  	%rd2292, %rd2290, %rd2291;
	add.s64 	%rd2293, %rd2292, %rd1703;
	add.s64 	%rd2294, %rd2293, %rd2036;
	add.s64 	%rd2295, %rd2294, %rd2287;
	add.s64 	%rd2296, %rd2295, %rd2160;
	xor.b64  	%rd2297, %rd2234, %rd2197;
	and.b64  	%rd2298, %rd2271, %rd2297;
	xor.b64  	%rd2299, %rd2298, %rd2197;
	add.s64 	%rd2300, %rd2296, %rd2299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1596,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1597}, %rd2271;
	}
	shf.r.wrap.b32 	%r1598, %r1597, %r1596, 14;
	shf.r.wrap.b32 	%r1599, %r1596, %r1597, 14;
	mov.b64 	%rd2301, {%r1599, %r1598};
	shf.r.wrap.b32 	%r1600, %r1597, %r1596, 18;
	shf.r.wrap.b32 	%r1601, %r1596, %r1597, 18;
	mov.b64 	%rd2302, {%r1601, %r1600};
	xor.b64  	%rd2303, %rd2301, %rd2302;
	shf.l.wrap.b32 	%r1602, %r1596, %r1597, 23;
	shf.l.wrap.b32 	%r1603, %r1597, %r1596, 23;
	mov.b64 	%rd2304, {%r1603, %r1602};
	xor.b64  	%rd2305, %rd2303, %rd2304;
	add.s64 	%rd2306, %rd2300, %rd2305;
	add.s64 	%rd2307, %rd2306, -8016688836872298968;
	add.s64 	%rd2308, %rd2307, %rd2171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1604,%dummy}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1605}, %rd2282;
	}
	shf.r.wrap.b32 	%r1606, %r1605, %r1604, 28;
	shf.r.wrap.b32 	%r1607, %r1604, %r1605, 28;
	mov.b64 	%rd2309, {%r1607, %r1606};
	shf.l.wrap.b32 	%r1608, %r1604, %r1605, 30;
	shf.l.wrap.b32 	%r1609, %r1605, %r1604, 30;
	mov.b64 	%rd2310, {%r1609, %r1608};
	xor.b64  	%rd2311, %rd2309, %rd2310;
	shf.l.wrap.b32 	%r1610, %r1604, %r1605, 25;
	shf.l.wrap.b32 	%r1611, %r1605, %r1604, 25;
	mov.b64 	%rd2312, {%r1611, %r1610};
	xor.b64  	%rd2313, %rd2311, %rd2312;
	and.b64  	%rd2314, %rd2282, %rd2245;
	or.b64  	%rd2315, %rd2282, %rd2245;
	and.b64  	%rd2316, %rd2315, %rd2208;
	or.b64  	%rd2317, %rd2316, %rd2314;
	add.s64 	%rd2318, %rd2317, %rd2313;
	add.s64 	%rd2319, %rd2318, %rd2307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1612,%dummy}, %rd2258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1613}, %rd2258;
	}
	shf.r.wrap.b32 	%r1614, %r1613, %r1612, 19;
	shf.r.wrap.b32 	%r1615, %r1612, %r1613, 19;
	mov.b64 	%rd2320, {%r1615, %r1614};
	shf.l.wrap.b32 	%r1616, %r1612, %r1613, 3;
	shf.l.wrap.b32 	%r1617, %r1613, %r1612, 3;
	mov.b64 	%rd2321, {%r1617, %r1616};
	xor.b64  	%rd2322, %rd2320, %rd2321;
	shr.u64 	%rd2323, %rd2258, 6;
	xor.b64  	%rd2324, %rd2322, %rd2323;
	shf.r.wrap.b32 	%r1618, %r1275, %r1274, 1;
	shf.r.wrap.b32 	%r1619, %r1274, %r1275, 1;
	mov.b64 	%rd2325, {%r1619, %r1618};
	shf.r.wrap.b32 	%r1620, %r1275, %r1274, 8;
	shf.r.wrap.b32 	%r1621, %r1274, %r1275, 8;
	mov.b64 	%rd2326, {%r1621, %r1620};
	xor.b64  	%rd2327, %rd2325, %rd2326;
	shr.u64 	%rd2328, %rd1777, 7;
	xor.b64  	%rd2329, %rd2327, %rd2328;
	add.s64 	%rd2330, %rd2329, %rd1740;
	add.s64 	%rd2331, %rd2330, %rd2073;
	add.s64 	%rd2332, %rd2331, %rd2324;
	add.s64 	%rd2333, %rd2332, %rd2197;
	xor.b64  	%rd2334, %rd2271, %rd2234;
	and.b64  	%rd2335, %rd2308, %rd2334;
	xor.b64  	%rd2336, %rd2335, %rd2234;
	add.s64 	%rd2337, %rd2333, %rd2336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1622,%dummy}, %rd2308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1623}, %rd2308;
	}
	shf.r.wrap.b32 	%r1624, %r1623, %r1622, 14;
	shf.r.wrap.b32 	%r1625, %r1622, %r1623, 14;
	mov.b64 	%rd2338, {%r1625, %r1624};
	shf.r.wrap.b32 	%r1626, %r1623, %r1622, 18;
	shf.r.wrap.b32 	%r1627, %r1622, %r1623, 18;
	mov.b64 	%rd2339, {%r1627, %r1626};
	xor.b64  	%rd2340, %rd2338, %rd2339;
	shf.l.wrap.b32 	%r1628, %r1622, %r1623, 23;
	shf.l.wrap.b32 	%r1629, %r1623, %r1622, 23;
	mov.b64 	%rd2341, {%r1629, %r1628};
	xor.b64  	%rd2342, %rd2340, %rd2341;
	add.s64 	%rd2343, %rd2337, %rd2342;
	add.s64 	%rd2344, %rd2343, -6606660893046293015;
	add.s64 	%rd2345, %rd2344, %rd2208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1630,%dummy}, %rd2319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1631}, %rd2319;
	}
	shf.r.wrap.b32 	%r1632, %r1631, %r1630, 28;
	shf.r.wrap.b32 	%r1633, %r1630, %r1631, 28;
	mov.b64 	%rd2346, {%r1633, %r1632};
	shf.l.wrap.b32 	%r1634, %r1630, %r1631, 30;
	shf.l.wrap.b32 	%r1635, %r1631, %r1630, 30;
	mov.b64 	%rd2347, {%r1635, %r1634};
	xor.b64  	%rd2348, %rd2346, %rd2347;
	shf.l.wrap.b32 	%r1636, %r1630, %r1631, 25;
	shf.l.wrap.b32 	%r1637, %r1631, %r1630, 25;
	mov.b64 	%rd2349, {%r1637, %r1636};
	xor.b64  	%rd2350, %rd2348, %rd2349;
	and.b64  	%rd2351, %rd2319, %rd2282;
	or.b64  	%rd2352, %rd2319, %rd2282;
	and.b64  	%rd2353, %rd2352, %rd2245;
	or.b64  	%rd2354, %rd2353, %rd2351;
	add.s64 	%rd2355, %rd2354, %rd2350;
	add.s64 	%rd2356, %rd2355, %rd2344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1638,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1639}, %rd2295;
	}
	shf.r.wrap.b32 	%r1640, %r1639, %r1638, 19;
	shf.r.wrap.b32 	%r1641, %r1638, %r1639, 19;
	mov.b64 	%rd2357, {%r1641, %r1640};
	shf.l.wrap.b32 	%r1642, %r1638, %r1639, 3;
	shf.l.wrap.b32 	%r1643, %r1639, %r1638, 3;
	mov.b64 	%rd2358, {%r1643, %r1642};
	xor.b64  	%rd2359, %rd2357, %rd2358;
	shr.u64 	%rd2360, %rd2295, 6;
	xor.b64  	%rd2361, %rd2359, %rd2360;
	shf.r.wrap.b32 	%r1644, %r1301, %r1300, 1;
	shf.r.wrap.b32 	%r1645, %r1300, %r1301, 1;
	mov.b64 	%rd2362, {%r1645, %r1644};
	shf.r.wrap.b32 	%r1646, %r1301, %r1300, 8;
	shf.r.wrap.b32 	%r1647, %r1300, %r1301, 8;
	mov.b64 	%rd2363, {%r1647, %r1646};
	xor.b64  	%rd2364, %rd2362, %rd2363;
	shr.u64 	%rd2365, %rd1814, 7;
	xor.b64  	%rd2366, %rd2364, %rd2365;
	add.s64 	%rd2367, %rd2366, %rd1777;
	add.s64 	%rd2368, %rd2367, %rd2110;
	add.s64 	%rd2369, %rd2368, %rd2361;
	add.s64 	%rd2370, %rd2369, %rd2234;
	xor.b64  	%rd2371, %rd2308, %rd2271;
	and.b64  	%rd2372, %rd2345, %rd2371;
	xor.b64  	%rd2373, %rd2372, %rd2271;
	add.s64 	%rd2374, %rd2370, %rd2373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1648,%dummy}, %rd2345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1649}, %rd2345;
	}
	shf.r.wrap.b32 	%r1650, %r1649, %r1648, 14;
	shf.r.wrap.b32 	%r1651, %r1648, %r1649, 14;
	mov.b64 	%rd2375, {%r1651, %r1650};
	shf.r.wrap.b32 	%r1652, %r1649, %r1648, 18;
	shf.r.wrap.b32 	%r1653, %r1648, %r1649, 18;
	mov.b64 	%rd2376, {%r1653, %r1652};
	xor.b64  	%rd2377, %rd2375, %rd2376;
	shf.l.wrap.b32 	%r1654, %r1648, %r1649, 23;
	shf.l.wrap.b32 	%r1655, %r1649, %r1648, 23;
	mov.b64 	%rd2378, {%r1655, %r1654};
	xor.b64  	%rd2379, %rd2377, %rd2378;
	add.s64 	%rd2380, %rd2374, %rd2379;
	add.s64 	%rd2381, %rd2380, -4685533653050689259;
	add.s64 	%rd2382, %rd2381, %rd2245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1656,%dummy}, %rd2356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd2356;
	}
	shf.r.wrap.b32 	%r1658, %r1657, %r1656, 28;
	shf.r.wrap.b32 	%r1659, %r1656, %r1657, 28;
	mov.b64 	%rd2383, {%r1659, %r1658};
	shf.l.wrap.b32 	%r1660, %r1656, %r1657, 30;
	shf.l.wrap.b32 	%r1661, %r1657, %r1656, 30;
	mov.b64 	%rd2384, {%r1661, %r1660};
	xor.b64  	%rd2385, %rd2383, %rd2384;
	shf.l.wrap.b32 	%r1662, %r1656, %r1657, 25;
	shf.l.wrap.b32 	%r1663, %r1657, %r1656, 25;
	mov.b64 	%rd2386, {%r1663, %r1662};
	xor.b64  	%rd2387, %rd2385, %rd2386;
	and.b64  	%rd2388, %rd2356, %rd2319;
	or.b64  	%rd2389, %rd2356, %rd2319;
	and.b64  	%rd2390, %rd2389, %rd2282;
	or.b64  	%rd2391, %rd2390, %rd2388;
	add.s64 	%rd2392, %rd2391, %rd2387;
	add.s64 	%rd2393, %rd2392, %rd2381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1664,%dummy}, %rd2332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1665}, %rd2332;
	}
	shf.r.wrap.b32 	%r1666, %r1665, %r1664, 19;
	shf.r.wrap.b32 	%r1667, %r1664, %r1665, 19;
	mov.b64 	%rd2394, {%r1667, %r1666};
	shf.l.wrap.b32 	%r1668, %r1664, %r1665, 3;
	shf.l.wrap.b32 	%r1669, %r1665, %r1664, 3;
	mov.b64 	%rd2395, {%r1669, %r1668};
	xor.b64  	%rd2396, %rd2394, %rd2395;
	shr.u64 	%rd2397, %rd2332, 6;
	xor.b64  	%rd2398, %rd2396, %rd2397;
	shf.r.wrap.b32 	%r1670, %r1327, %r1326, 1;
	shf.r.wrap.b32 	%r1671, %r1326, %r1327, 1;
	mov.b64 	%rd2399, {%r1671, %r1670};
	shf.r.wrap.b32 	%r1672, %r1327, %r1326, 8;
	shf.r.wrap.b32 	%r1673, %r1326, %r1327, 8;
	mov.b64 	%rd2400, {%r1673, %r1672};
	xor.b64  	%rd2401, %rd2399, %rd2400;
	shr.u64 	%rd2402, %rd1851, 7;
	xor.b64  	%rd2403, %rd2401, %rd2402;
	add.s64 	%rd2404, %rd2403, %rd1814;
	add.s64 	%rd2405, %rd2404, %rd2147;
	add.s64 	%rd2406, %rd2405, %rd2398;
	add.s64 	%rd2407, %rd2406, %rd2271;
	xor.b64  	%rd2408, %rd2345, %rd2308;
	and.b64  	%rd2409, %rd2382, %rd2408;
	xor.b64  	%rd2410, %rd2409, %rd2308;
	add.s64 	%rd2411, %rd2407, %rd2410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd2382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1675}, %rd2382;
	}
	shf.r.wrap.b32 	%r1676, %r1675, %r1674, 14;
	shf.r.wrap.b32 	%r1677, %r1674, %r1675, 14;
	mov.b64 	%rd2412, {%r1677, %r1676};
	shf.r.wrap.b32 	%r1678, %r1675, %r1674, 18;
	shf.r.wrap.b32 	%r1679, %r1674, %r1675, 18;
	mov.b64 	%rd2413, {%r1679, %r1678};
	xor.b64  	%rd2414, %rd2412, %rd2413;
	shf.l.wrap.b32 	%r1680, %r1674, %r1675, 23;
	shf.l.wrap.b32 	%r1681, %r1675, %r1674, 23;
	mov.b64 	%rd2415, {%r1681, %r1680};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	add.s64 	%rd2417, %rd2411, %rd2416;
	add.s64 	%rd2418, %rd2417, -4147400797238176981;
	add.s64 	%rd2419, %rd2418, %rd2282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1682,%dummy}, %rd2393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1683}, %rd2393;
	}
	shf.r.wrap.b32 	%r1684, %r1683, %r1682, 28;
	shf.r.wrap.b32 	%r1685, %r1682, %r1683, 28;
	mov.b64 	%rd2420, {%r1685, %r1684};
	shf.l.wrap.b32 	%r1686, %r1682, %r1683, 30;
	shf.l.wrap.b32 	%r1687, %r1683, %r1682, 30;
	mov.b64 	%rd2421, {%r1687, %r1686};
	xor.b64  	%rd2422, %rd2420, %rd2421;
	shf.l.wrap.b32 	%r1688, %r1682, %r1683, 25;
	shf.l.wrap.b32 	%r1689, %r1683, %r1682, 25;
	mov.b64 	%rd2423, {%r1689, %r1688};
	xor.b64  	%rd2424, %rd2422, %rd2423;
	and.b64  	%rd2425, %rd2393, %rd2356;
	or.b64  	%rd2426, %rd2393, %rd2356;
	and.b64  	%rd2427, %rd2426, %rd2319;
	or.b64  	%rd2428, %rd2427, %rd2425;
	add.s64 	%rd2429, %rd2428, %rd2424;
	add.s64 	%rd2430, %rd2429, %rd2418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1690,%dummy}, %rd2369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1691}, %rd2369;
	}
	shf.r.wrap.b32 	%r1692, %r1691, %r1690, 19;
	shf.r.wrap.b32 	%r1693, %r1690, %r1691, 19;
	mov.b64 	%rd2431, {%r1693, %r1692};
	shf.l.wrap.b32 	%r1694, %r1690, %r1691, 3;
	shf.l.wrap.b32 	%r1695, %r1691, %r1690, 3;
	mov.b64 	%rd2432, {%r1695, %r1694};
	xor.b64  	%rd2433, %rd2431, %rd2432;
	shr.u64 	%rd2434, %rd2369, 6;
	xor.b64  	%rd2435, %rd2433, %rd2434;
	shf.r.wrap.b32 	%r1696, %r1353, %r1352, 1;
	shf.r.wrap.b32 	%r1697, %r1352, %r1353, 1;
	mov.b64 	%rd2436, {%r1697, %r1696};
	shf.r.wrap.b32 	%r1698, %r1353, %r1352, 8;
	shf.r.wrap.b32 	%r1699, %r1352, %r1353, 8;
	mov.b64 	%rd2437, {%r1699, %r1698};
	xor.b64  	%rd2438, %rd2436, %rd2437;
	shr.u64 	%rd2439, %rd1888, 7;
	xor.b64  	%rd2440, %rd2438, %rd2439;
	add.s64 	%rd2441, %rd2440, %rd1851;
	add.s64 	%rd2442, %rd2441, %rd2184;
	add.s64 	%rd2443, %rd2442, %rd2435;
	add.s64 	%rd2444, %rd2443, %rd2308;
	xor.b64  	%rd2445, %rd2382, %rd2345;
	and.b64  	%rd2446, %rd2419, %rd2445;
	xor.b64  	%rd2447, %rd2446, %rd2345;
	add.s64 	%rd2448, %rd2444, %rd2447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1700,%dummy}, %rd2419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1701}, %rd2419;
	}
	shf.r.wrap.b32 	%r1702, %r1701, %r1700, 14;
	shf.r.wrap.b32 	%r1703, %r1700, %r1701, 14;
	mov.b64 	%rd2449, {%r1703, %r1702};
	shf.r.wrap.b32 	%r1704, %r1701, %r1700, 18;
	shf.r.wrap.b32 	%r1705, %r1700, %r1701, 18;
	mov.b64 	%rd2450, {%r1705, %r1704};
	xor.b64  	%rd2451, %rd2449, %rd2450;
	shf.l.wrap.b32 	%r1706, %r1700, %r1701, 23;
	shf.l.wrap.b32 	%r1707, %r1701, %r1700, 23;
	mov.b64 	%rd2452, {%r1707, %r1706};
	xor.b64  	%rd2453, %rd2451, %rd2452;
	add.s64 	%rd2454, %rd2448, %rd2453;
	add.s64 	%rd2455, %rd2454, -3880063495543823972;
	add.s64 	%rd2456, %rd2455, %rd2319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1708,%dummy}, %rd2430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1709}, %rd2430;
	}
	shf.r.wrap.b32 	%r1710, %r1709, %r1708, 28;
	shf.r.wrap.b32 	%r1711, %r1708, %r1709, 28;
	mov.b64 	%rd2457, {%r1711, %r1710};
	shf.l.wrap.b32 	%r1712, %r1708, %r1709, 30;
	shf.l.wrap.b32 	%r1713, %r1709, %r1708, 30;
	mov.b64 	%rd2458, {%r1713, %r1712};
	xor.b64  	%rd2459, %rd2457, %rd2458;
	shf.l.wrap.b32 	%r1714, %r1708, %r1709, 25;
	shf.l.wrap.b32 	%r1715, %r1709, %r1708, 25;
	mov.b64 	%rd2460, {%r1715, %r1714};
	xor.b64  	%rd2461, %rd2459, %rd2460;
	and.b64  	%rd2462, %rd2430, %rd2393;
	or.b64  	%rd2463, %rd2430, %rd2393;
	and.b64  	%rd2464, %rd2463, %rd2356;
	or.b64  	%rd2465, %rd2464, %rd2462;
	add.s64 	%rd2466, %rd2465, %rd2461;
	add.s64 	%rd2467, %rd2466, %rd2455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1716,%dummy}, %rd2406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1717}, %rd2406;
	}
	shf.r.wrap.b32 	%r1718, %r1717, %r1716, 19;
	shf.r.wrap.b32 	%r1719, %r1716, %r1717, 19;
	mov.b64 	%rd2468, {%r1719, %r1718};
	shf.l.wrap.b32 	%r1720, %r1716, %r1717, 3;
	shf.l.wrap.b32 	%r1721, %r1717, %r1716, 3;
	mov.b64 	%rd2469, {%r1721, %r1720};
	xor.b64  	%rd2470, %rd2468, %rd2469;
	shr.u64 	%rd2471, %rd2406, 6;
	xor.b64  	%rd2472, %rd2470, %rd2471;
	shf.r.wrap.b32 	%r1722, %r1379, %r1378, 1;
	shf.r.wrap.b32 	%r1723, %r1378, %r1379, 1;
	mov.b64 	%rd2473, {%r1723, %r1722};
	shf.r.wrap.b32 	%r1724, %r1379, %r1378, 8;
	shf.r.wrap.b32 	%r1725, %r1378, %r1379, 8;
	mov.b64 	%rd2474, {%r1725, %r1724};
	xor.b64  	%rd2475, %rd2473, %rd2474;
	shr.u64 	%rd2476, %rd1925, 7;
	xor.b64  	%rd2477, %rd2475, %rd2476;
	add.s64 	%rd2478, %rd2477, %rd1888;
	add.s64 	%rd2479, %rd2478, %rd2221;
	add.s64 	%rd2480, %rd2479, %rd2472;
	add.s64 	%rd2481, %rd2480, %rd2345;
	xor.b64  	%rd2482, %rd2419, %rd2382;
	and.b64  	%rd2483, %rd2456, %rd2482;
	xor.b64  	%rd2484, %rd2483, %rd2382;
	add.s64 	%rd2485, %rd2481, %rd2484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1726,%dummy}, %rd2456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1727}, %rd2456;
	}
	shf.r.wrap.b32 	%r1728, %r1727, %r1726, 14;
	shf.r.wrap.b32 	%r1729, %r1726, %r1727, 14;
	mov.b64 	%rd2486, {%r1729, %r1728};
	shf.r.wrap.b32 	%r1730, %r1727, %r1726, 18;
	shf.r.wrap.b32 	%r1731, %r1726, %r1727, 18;
	mov.b64 	%rd2487, {%r1731, %r1730};
	xor.b64  	%rd2488, %rd2486, %rd2487;
	shf.l.wrap.b32 	%r1732, %r1726, %r1727, 23;
	shf.l.wrap.b32 	%r1733, %r1727, %r1726, 23;
	mov.b64 	%rd2489, {%r1733, %r1732};
	xor.b64  	%rd2490, %rd2488, %rd2489;
	add.s64 	%rd2491, %rd2485, %rd2490;
	add.s64 	%rd2492, %rd2491, -3348786107499101689;
	add.s64 	%rd2493, %rd2492, %rd2356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd2467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1735}, %rd2467;
	}
	shf.r.wrap.b32 	%r1736, %r1735, %r1734, 28;
	shf.r.wrap.b32 	%r1737, %r1734, %r1735, 28;
	mov.b64 	%rd2494, {%r1737, %r1736};
	shf.l.wrap.b32 	%r1738, %r1734, %r1735, 30;
	shf.l.wrap.b32 	%r1739, %r1735, %r1734, 30;
	mov.b64 	%rd2495, {%r1739, %r1738};
	xor.b64  	%rd2496, %rd2494, %rd2495;
	shf.l.wrap.b32 	%r1740, %r1734, %r1735, 25;
	shf.l.wrap.b32 	%r1741, %r1735, %r1734, 25;
	mov.b64 	%rd2497, {%r1741, %r1740};
	xor.b64  	%rd2498, %rd2496, %rd2497;
	and.b64  	%rd2499, %rd2467, %rd2430;
	or.b64  	%rd2500, %rd2467, %rd2430;
	and.b64  	%rd2501, %rd2500, %rd2393;
	or.b64  	%rd2502, %rd2501, %rd2499;
	add.s64 	%rd2503, %rd2502, %rd2498;
	add.s64 	%rd2504, %rd2503, %rd2492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd2443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1743}, %rd2443;
	}
	shf.r.wrap.b32 	%r1744, %r1743, %r1742, 19;
	shf.r.wrap.b32 	%r1745, %r1742, %r1743, 19;
	mov.b64 	%rd2505, {%r1745, %r1744};
	shf.l.wrap.b32 	%r1746, %r1742, %r1743, 3;
	shf.l.wrap.b32 	%r1747, %r1743, %r1742, 3;
	mov.b64 	%rd2506, {%r1747, %r1746};
	xor.b64  	%rd2507, %rd2505, %rd2506;
	shr.u64 	%rd2508, %rd2443, 6;
	xor.b64  	%rd2509, %rd2507, %rd2508;
	shf.r.wrap.b32 	%r1748, %r1405, %r1404, 1;
	shf.r.wrap.b32 	%r1749, %r1404, %r1405, 1;
	mov.b64 	%rd2510, {%r1749, %r1748};
	shf.r.wrap.b32 	%r1750, %r1405, %r1404, 8;
	shf.r.wrap.b32 	%r1751, %r1404, %r1405, 8;
	mov.b64 	%rd2511, {%r1751, %r1750};
	xor.b64  	%rd2512, %rd2510, %rd2511;
	shr.u64 	%rd2513, %rd1962, 7;
	xor.b64  	%rd2514, %rd2512, %rd2513;
	add.s64 	%rd2515, %rd2514, %rd1925;
	add.s64 	%rd2516, %rd2515, %rd2258;
	add.s64 	%rd2517, %rd2516, %rd2509;
	add.s64 	%rd2518, %rd2517, %rd2382;
	xor.b64  	%rd2519, %rd2456, %rd2419;
	and.b64  	%rd2520, %rd2493, %rd2519;
	xor.b64  	%rd2521, %rd2520, %rd2419;
	add.s64 	%rd2522, %rd2518, %rd2521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1752,%dummy}, %rd2493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1753}, %rd2493;
	}
	shf.r.wrap.b32 	%r1754, %r1753, %r1752, 14;
	shf.r.wrap.b32 	%r1755, %r1752, %r1753, 14;
	mov.b64 	%rd2523, {%r1755, %r1754};
	shf.r.wrap.b32 	%r1756, %r1753, %r1752, 18;
	shf.r.wrap.b32 	%r1757, %r1752, %r1753, 18;
	mov.b64 	%rd2524, {%r1757, %r1756};
	xor.b64  	%rd2525, %rd2523, %rd2524;
	shf.l.wrap.b32 	%r1758, %r1752, %r1753, 23;
	shf.l.wrap.b32 	%r1759, %r1753, %r1752, 23;
	mov.b64 	%rd2526, {%r1759, %r1758};
	xor.b64  	%rd2527, %rd2525, %rd2526;
	add.s64 	%rd2528, %rd2522, %rd2527;
	add.s64 	%rd2529, %rd2528, -1523767162380948706;
	add.s64 	%rd2530, %rd2529, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1760,%dummy}, %rd2504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1761}, %rd2504;
	}
	shf.r.wrap.b32 	%r1762, %r1761, %r1760, 28;
	shf.r.wrap.b32 	%r1763, %r1760, %r1761, 28;
	mov.b64 	%rd2531, {%r1763, %r1762};
	shf.l.wrap.b32 	%r1764, %r1760, %r1761, 30;
	shf.l.wrap.b32 	%r1765, %r1761, %r1760, 30;
	mov.b64 	%rd2532, {%r1765, %r1764};
	xor.b64  	%rd2533, %rd2531, %rd2532;
	shf.l.wrap.b32 	%r1766, %r1760, %r1761, 25;
	shf.l.wrap.b32 	%r1767, %r1761, %r1760, 25;
	mov.b64 	%rd2534, {%r1767, %r1766};
	xor.b64  	%rd2535, %rd2533, %rd2534;
	and.b64  	%rd2536, %rd2504, %rd2467;
	or.b64  	%rd2537, %rd2504, %rd2467;
	and.b64  	%rd2538, %rd2537, %rd2430;
	or.b64  	%rd2539, %rd2538, %rd2536;
	add.s64 	%rd2540, %rd2539, %rd2535;
	add.s64 	%rd2541, %rd2540, %rd2529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd2480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd2480;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 19;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 19;
	mov.b64 	%rd2542, {%r1771, %r1770};
	shf.l.wrap.b32 	%r1772, %r1768, %r1769, 3;
	shf.l.wrap.b32 	%r1773, %r1769, %r1768, 3;
	mov.b64 	%rd2543, {%r1773, %r1772};
	xor.b64  	%rd2544, %rd2542, %rd2543;
	shr.u64 	%rd2545, %rd2480, 6;
	xor.b64  	%rd2546, %rd2544, %rd2545;
	shf.r.wrap.b32 	%r1774, %r1431, %r1430, 1;
	shf.r.wrap.b32 	%r1775, %r1430, %r1431, 1;
	mov.b64 	%rd2547, {%r1775, %r1774};
	shf.r.wrap.b32 	%r1776, %r1431, %r1430, 8;
	shf.r.wrap.b32 	%r1777, %r1430, %r1431, 8;
	mov.b64 	%rd2548, {%r1777, %r1776};
	xor.b64  	%rd2549, %rd2547, %rd2548;
	shr.u64 	%rd2550, %rd1999, 7;
	xor.b64  	%rd2551, %rd2549, %rd2550;
	add.s64 	%rd2552, %rd2551, %rd1962;
	add.s64 	%rd2553, %rd2552, %rd2295;
	add.s64 	%rd2554, %rd2553, %rd2546;
	add.s64 	%rd2555, %rd2554, %rd2419;
	xor.b64  	%rd2556, %rd2493, %rd2456;
	and.b64  	%rd2557, %rd2530, %rd2556;
	xor.b64  	%rd2558, %rd2557, %rd2456;
	add.s64 	%rd2559, %rd2555, %rd2558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1778,%dummy}, %rd2530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1779}, %rd2530;
	}
	shf.r.wrap.b32 	%r1780, %r1779, %r1778, 14;
	shf.r.wrap.b32 	%r1781, %r1778, %r1779, 14;
	mov.b64 	%rd2560, {%r1781, %r1780};
	shf.r.wrap.b32 	%r1782, %r1779, %r1778, 18;
	shf.r.wrap.b32 	%r1783, %r1778, %r1779, 18;
	mov.b64 	%rd2561, {%r1783, %r1782};
	xor.b64  	%rd2562, %rd2560, %rd2561;
	shf.l.wrap.b32 	%r1784, %r1778, %r1779, 23;
	shf.l.wrap.b32 	%r1785, %r1779, %r1778, 23;
	mov.b64 	%rd2563, {%r1785, %r1784};
	xor.b64  	%rd2564, %rd2562, %rd2563;
	add.s64 	%rd2565, %rd2559, %rd2564;
	add.s64 	%rd2566, %rd2565, -757361751448694408;
	add.s64 	%rd2567, %rd2566, %rd2430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1786,%dummy}, %rd2541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1787}, %rd2541;
	}
	shf.r.wrap.b32 	%r1788, %r1787, %r1786, 28;
	shf.r.wrap.b32 	%r1789, %r1786, %r1787, 28;
	mov.b64 	%rd2568, {%r1789, %r1788};
	shf.l.wrap.b32 	%r1790, %r1786, %r1787, 30;
	shf.l.wrap.b32 	%r1791, %r1787, %r1786, 30;
	mov.b64 	%rd2569, {%r1791, %r1790};
	xor.b64  	%rd2570, %rd2568, %rd2569;
	shf.l.wrap.b32 	%r1792, %r1786, %r1787, 25;
	shf.l.wrap.b32 	%r1793, %r1787, %r1786, 25;
	mov.b64 	%rd2571, {%r1793, %r1792};
	xor.b64  	%rd2572, %rd2570, %rd2571;
	and.b64  	%rd2573, %rd2541, %rd2504;
	or.b64  	%rd2574, %rd2541, %rd2504;
	and.b64  	%rd2575, %rd2574, %rd2467;
	or.b64  	%rd2576, %rd2575, %rd2573;
	add.s64 	%rd2577, %rd2576, %rd2572;
	add.s64 	%rd2578, %rd2577, %rd2566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1794,%dummy}, %rd2517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1795}, %rd2517;
	}
	shf.r.wrap.b32 	%r1796, %r1795, %r1794, 19;
	shf.r.wrap.b32 	%r1797, %r1794, %r1795, 19;
	mov.b64 	%rd2579, {%r1797, %r1796};
	shf.l.wrap.b32 	%r1798, %r1794, %r1795, 3;
	shf.l.wrap.b32 	%r1799, %r1795, %r1794, 3;
	mov.b64 	%rd2580, {%r1799, %r1798};
	xor.b64  	%rd2581, %rd2579, %rd2580;
	shr.u64 	%rd2582, %rd2517, 6;
	xor.b64  	%rd2583, %rd2581, %rd2582;
	shf.r.wrap.b32 	%r1800, %r1457, %r1456, 1;
	shf.r.wrap.b32 	%r1801, %r1456, %r1457, 1;
	mov.b64 	%rd2584, {%r1801, %r1800};
	shf.r.wrap.b32 	%r1802, %r1457, %r1456, 8;
	shf.r.wrap.b32 	%r1803, %r1456, %r1457, 8;
	mov.b64 	%rd2585, {%r1803, %r1802};
	xor.b64  	%rd2586, %rd2584, %rd2585;
	shr.u64 	%rd2587, %rd2036, 7;
	xor.b64  	%rd2588, %rd2586, %rd2587;
	add.s64 	%rd2589, %rd2588, %rd1999;
	add.s64 	%rd2590, %rd2589, %rd2332;
	add.s64 	%rd2591, %rd2590, %rd2583;
	add.s64 	%rd2592, %rd2591, %rd2456;
	xor.b64  	%rd2593, %rd2530, %rd2493;
	and.b64  	%rd2594, %rd2567, %rd2593;
	xor.b64  	%rd2595, %rd2594, %rd2493;
	add.s64 	%rd2596, %rd2592, %rd2595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1804,%dummy}, %rd2567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1805}, %rd2567;
	}
	shf.r.wrap.b32 	%r1806, %r1805, %r1804, 14;
	shf.r.wrap.b32 	%r1807, %r1804, %r1805, 14;
	mov.b64 	%rd2597, {%r1807, %r1806};
	shf.r.wrap.b32 	%r1808, %r1805, %r1804, 18;
	shf.r.wrap.b32 	%r1809, %r1804, %r1805, 18;
	mov.b64 	%rd2598, {%r1809, %r1808};
	xor.b64  	%rd2599, %rd2597, %rd2598;
	shf.l.wrap.b32 	%r1810, %r1804, %r1805, 23;
	shf.l.wrap.b32 	%r1811, %r1805, %r1804, 23;
	mov.b64 	%rd2600, {%r1811, %r1810};
	xor.b64  	%rd2601, %rd2599, %rd2600;
	add.s64 	%rd2602, %rd2596, %rd2601;
	add.s64 	%rd2603, %rd2602, 500013540394364858;
	add.s64 	%rd2604, %rd2603, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1812,%dummy}, %rd2578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1813}, %rd2578;
	}
	shf.r.wrap.b32 	%r1814, %r1813, %r1812, 28;
	shf.r.wrap.b32 	%r1815, %r1812, %r1813, 28;
	mov.b64 	%rd2605, {%r1815, %r1814};
	shf.l.wrap.b32 	%r1816, %r1812, %r1813, 30;
	shf.l.wrap.b32 	%r1817, %r1813, %r1812, 30;
	mov.b64 	%rd2606, {%r1817, %r1816};
	xor.b64  	%rd2607, %rd2605, %rd2606;
	shf.l.wrap.b32 	%r1818, %r1812, %r1813, 25;
	shf.l.wrap.b32 	%r1819, %r1813, %r1812, 25;
	mov.b64 	%rd2608, {%r1819, %r1818};
	xor.b64  	%rd2609, %rd2607, %rd2608;
	and.b64  	%rd2610, %rd2578, %rd2541;
	or.b64  	%rd2611, %rd2578, %rd2541;
	and.b64  	%rd2612, %rd2611, %rd2504;
	or.b64  	%rd2613, %rd2612, %rd2610;
	add.s64 	%rd2614, %rd2613, %rd2609;
	add.s64 	%rd2615, %rd2614, %rd2603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1820,%dummy}, %rd2554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1821}, %rd2554;
	}
	shf.r.wrap.b32 	%r1822, %r1821, %r1820, 19;
	shf.r.wrap.b32 	%r1823, %r1820, %r1821, 19;
	mov.b64 	%rd2616, {%r1823, %r1822};
	shf.l.wrap.b32 	%r1824, %r1820, %r1821, 3;
	shf.l.wrap.b32 	%r1825, %r1821, %r1820, 3;
	mov.b64 	%rd2617, {%r1825, %r1824};
	xor.b64  	%rd2618, %rd2616, %rd2617;
	shr.u64 	%rd2619, %rd2554, 6;
	xor.b64  	%rd2620, %rd2618, %rd2619;
	shf.r.wrap.b32 	%r1826, %r1483, %r1482, 1;
	shf.r.wrap.b32 	%r1827, %r1482, %r1483, 1;
	mov.b64 	%rd2621, {%r1827, %r1826};
	shf.r.wrap.b32 	%r1828, %r1483, %r1482, 8;
	shf.r.wrap.b32 	%r1829, %r1482, %r1483, 8;
	mov.b64 	%rd2622, {%r1829, %r1828};
	xor.b64  	%rd2623, %rd2621, %rd2622;
	shr.u64 	%rd2624, %rd2073, 7;
	xor.b64  	%rd2625, %rd2623, %rd2624;
	add.s64 	%rd2626, %rd2625, %rd2036;
	add.s64 	%rd2627, %rd2626, %rd2369;
	add.s64 	%rd2628, %rd2627, %rd2620;
	add.s64 	%rd2629, %rd2628, %rd2493;
	xor.b64  	%rd2630, %rd2567, %rd2530;
	and.b64  	%rd2631, %rd2604, %rd2630;
	xor.b64  	%rd2632, %rd2631, %rd2530;
	add.s64 	%rd2633, %rd2629, %rd2632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1830,%dummy}, %rd2604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1831}, %rd2604;
	}
	shf.r.wrap.b32 	%r1832, %r1831, %r1830, 14;
	shf.r.wrap.b32 	%r1833, %r1830, %r1831, 14;
	mov.b64 	%rd2634, {%r1833, %r1832};
	shf.r.wrap.b32 	%r1834, %r1831, %r1830, 18;
	shf.r.wrap.b32 	%r1835, %r1830, %r1831, 18;
	mov.b64 	%rd2635, {%r1835, %r1834};
	xor.b64  	%rd2636, %rd2634, %rd2635;
	shf.l.wrap.b32 	%r1836, %r1830, %r1831, 23;
	shf.l.wrap.b32 	%r1837, %r1831, %r1830, 23;
	mov.b64 	%rd2637, {%r1837, %r1836};
	xor.b64  	%rd2638, %rd2636, %rd2637;
	add.s64 	%rd2639, %rd2633, %rd2638;
	add.s64 	%rd2640, %rd2639, 748580250866718886;
	add.s64 	%rd2641, %rd2640, %rd2504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1838,%dummy}, %rd2615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1839}, %rd2615;
	}
	shf.r.wrap.b32 	%r1840, %r1839, %r1838, 28;
	shf.r.wrap.b32 	%r1841, %r1838, %r1839, 28;
	mov.b64 	%rd2642, {%r1841, %r1840};
	shf.l.wrap.b32 	%r1842, %r1838, %r1839, 30;
	shf.l.wrap.b32 	%r1843, %r1839, %r1838, 30;
	mov.b64 	%rd2643, {%r1843, %r1842};
	xor.b64  	%rd2644, %rd2642, %rd2643;
	shf.l.wrap.b32 	%r1844, %r1838, %r1839, 25;
	shf.l.wrap.b32 	%r1845, %r1839, %r1838, 25;
	mov.b64 	%rd2645, {%r1845, %r1844};
	xor.b64  	%rd2646, %rd2644, %rd2645;
	and.b64  	%rd2647, %rd2615, %rd2578;
	or.b64  	%rd2648, %rd2615, %rd2578;
	and.b64  	%rd2649, %rd2648, %rd2541;
	or.b64  	%rd2650, %rd2649, %rd2647;
	add.s64 	%rd2651, %rd2650, %rd2646;
	add.s64 	%rd2652, %rd2651, %rd2640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd2591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd2591;
	}
	shf.r.wrap.b32 	%r1848, %r1847, %r1846, 19;
	shf.r.wrap.b32 	%r1849, %r1846, %r1847, 19;
	mov.b64 	%rd2653, {%r1849, %r1848};
	shf.l.wrap.b32 	%r1850, %r1846, %r1847, 3;
	shf.l.wrap.b32 	%r1851, %r1847, %r1846, 3;
	mov.b64 	%rd2654, {%r1851, %r1850};
	xor.b64  	%rd2655, %rd2653, %rd2654;
	shr.u64 	%rd2656, %rd2591, 6;
	xor.b64  	%rd2657, %rd2655, %rd2656;
	shf.r.wrap.b32 	%r1852, %r1509, %r1508, 1;
	shf.r.wrap.b32 	%r1853, %r1508, %r1509, 1;
	mov.b64 	%rd2658, {%r1853, %r1852};
	shf.r.wrap.b32 	%r1854, %r1509, %r1508, 8;
	shf.r.wrap.b32 	%r1855, %r1508, %r1509, 8;
	mov.b64 	%rd2659, {%r1855, %r1854};
	xor.b64  	%rd2660, %rd2658, %rd2659;
	shr.u64 	%rd2661, %rd2110, 7;
	xor.b64  	%rd2662, %rd2660, %rd2661;
	add.s64 	%rd2663, %rd2662, %rd2073;
	add.s64 	%rd2664, %rd2663, %rd2406;
	add.s64 	%rd2665, %rd2664, %rd2657;
	add.s64 	%rd2666, %rd2665, %rd2530;
	xor.b64  	%rd2667, %rd2604, %rd2567;
	and.b64  	%rd2668, %rd2641, %rd2667;
	xor.b64  	%rd2669, %rd2668, %rd2567;
	add.s64 	%rd2670, %rd2666, %rd2669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1856,%dummy}, %rd2641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1857}, %rd2641;
	}
	shf.r.wrap.b32 	%r1858, %r1857, %r1856, 14;
	shf.r.wrap.b32 	%r1859, %r1856, %r1857, 14;
	mov.b64 	%rd2671, {%r1859, %r1858};
	shf.r.wrap.b32 	%r1860, %r1857, %r1856, 18;
	shf.r.wrap.b32 	%r1861, %r1856, %r1857, 18;
	mov.b64 	%rd2672, {%r1861, %r1860};
	xor.b64  	%rd2673, %rd2671, %rd2672;
	shf.l.wrap.b32 	%r1862, %r1856, %r1857, 23;
	shf.l.wrap.b32 	%r1863, %r1857, %r1856, 23;
	mov.b64 	%rd2674, {%r1863, %r1862};
	xor.b64  	%rd2675, %rd2673, %rd2674;
	add.s64 	%rd2676, %rd2670, %rd2675;
	add.s64 	%rd2677, %rd2676, 1242879168328830382;
	add.s64 	%rd2678, %rd2677, %rd2541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1864,%dummy}, %rd2652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1865}, %rd2652;
	}
	shf.r.wrap.b32 	%r1866, %r1865, %r1864, 28;
	shf.r.wrap.b32 	%r1867, %r1864, %r1865, 28;
	mov.b64 	%rd2679, {%r1867, %r1866};
	shf.l.wrap.b32 	%r1868, %r1864, %r1865, 30;
	shf.l.wrap.b32 	%r1869, %r1865, %r1864, 30;
	mov.b64 	%rd2680, {%r1869, %r1868};
	xor.b64  	%rd2681, %rd2679, %rd2680;
	shf.l.wrap.b32 	%r1870, %r1864, %r1865, 25;
	shf.l.wrap.b32 	%r1871, %r1865, %r1864, 25;
	mov.b64 	%rd2682, {%r1871, %r1870};
	xor.b64  	%rd2683, %rd2681, %rd2682;
	and.b64  	%rd2684, %rd2652, %rd2615;
	or.b64  	%rd2685, %rd2652, %rd2615;
	and.b64  	%rd2686, %rd2685, %rd2578;
	or.b64  	%rd2687, %rd2686, %rd2684;
	add.s64 	%rd2688, %rd2687, %rd2683;
	add.s64 	%rd2689, %rd2688, %rd2677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1872,%dummy}, %rd2628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1873}, %rd2628;
	}
	shf.r.wrap.b32 	%r1874, %r1873, %r1872, 19;
	shf.r.wrap.b32 	%r1875, %r1872, %r1873, 19;
	mov.b64 	%rd2690, {%r1875, %r1874};
	shf.l.wrap.b32 	%r1876, %r1872, %r1873, 3;
	shf.l.wrap.b32 	%r1877, %r1873, %r1872, 3;
	mov.b64 	%rd2691, {%r1877, %r1876};
	xor.b64  	%rd2692, %rd2690, %rd2691;
	shr.u64 	%rd2693, %rd2628, 6;
	xor.b64  	%rd2694, %rd2692, %rd2693;
	shf.r.wrap.b32 	%r1878, %r1535, %r1534, 1;
	shf.r.wrap.b32 	%r1879, %r1534, %r1535, 1;
	mov.b64 	%rd2695, {%r1879, %r1878};
	shf.r.wrap.b32 	%r1880, %r1535, %r1534, 8;
	shf.r.wrap.b32 	%r1881, %r1534, %r1535, 8;
	mov.b64 	%rd2696, {%r1881, %r1880};
	xor.b64  	%rd2697, %rd2695, %rd2696;
	shr.u64 	%rd2698, %rd2147, 7;
	xor.b64  	%rd2699, %rd2697, %rd2698;
	add.s64 	%rd2700, %rd2699, %rd2110;
	add.s64 	%rd2701, %rd2700, %rd2443;
	add.s64 	%rd2702, %rd2701, %rd2694;
	add.s64 	%rd2703, %rd2702, %rd2567;
	xor.b64  	%rd2704, %rd2641, %rd2604;
	and.b64  	%rd2705, %rd2678, %rd2704;
	xor.b64  	%rd2706, %rd2705, %rd2604;
	add.s64 	%rd2707, %rd2703, %rd2706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1882,%dummy}, %rd2678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1883}, %rd2678;
	}
	shf.r.wrap.b32 	%r1884, %r1883, %r1882, 14;
	shf.r.wrap.b32 	%r1885, %r1882, %r1883, 14;
	mov.b64 	%rd2708, {%r1885, %r1884};
	shf.r.wrap.b32 	%r1886, %r1883, %r1882, 18;
	shf.r.wrap.b32 	%r1887, %r1882, %r1883, 18;
	mov.b64 	%rd2709, {%r1887, %r1886};
	xor.b64  	%rd2710, %rd2708, %rd2709;
	shf.l.wrap.b32 	%r1888, %r1882, %r1883, 23;
	shf.l.wrap.b32 	%r1889, %r1883, %r1882, 23;
	mov.b64 	%rd2711, {%r1889, %r1888};
	xor.b64  	%rd2712, %rd2710, %rd2711;
	add.s64 	%rd2713, %rd2707, %rd2712;
	add.s64 	%rd2714, %rd2713, 1977374033974150939;
	add.s64 	%rd2715, %rd2714, %rd2578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1890,%dummy}, %rd2689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1891}, %rd2689;
	}
	shf.r.wrap.b32 	%r1892, %r1891, %r1890, 28;
	shf.r.wrap.b32 	%r1893, %r1890, %r1891, 28;
	mov.b64 	%rd2716, {%r1893, %r1892};
	shf.l.wrap.b32 	%r1894, %r1890, %r1891, 30;
	shf.l.wrap.b32 	%r1895, %r1891, %r1890, 30;
	mov.b64 	%rd2717, {%r1895, %r1894};
	xor.b64  	%rd2718, %rd2716, %rd2717;
	shf.l.wrap.b32 	%r1896, %r1890, %r1891, 25;
	shf.l.wrap.b32 	%r1897, %r1891, %r1890, 25;
	mov.b64 	%rd2719, {%r1897, %r1896};
	xor.b64  	%rd2720, %rd2718, %rd2719;
	and.b64  	%rd2721, %rd2689, %rd2652;
	or.b64  	%rd2722, %rd2689, %rd2652;
	and.b64  	%rd2723, %rd2722, %rd2615;
	or.b64  	%rd2724, %rd2723, %rd2721;
	add.s64 	%rd2725, %rd2724, %rd2720;
	add.s64 	%rd2726, %rd2725, %rd2714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1898,%dummy}, %rd2665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1899}, %rd2665;
	}
	shf.r.wrap.b32 	%r1900, %r1899, %r1898, 19;
	shf.r.wrap.b32 	%r1901, %r1898, %r1899, 19;
	mov.b64 	%rd2727, {%r1901, %r1900};
	shf.l.wrap.b32 	%r1902, %r1898, %r1899, 3;
	shf.l.wrap.b32 	%r1903, %r1899, %r1898, 3;
	mov.b64 	%rd2728, {%r1903, %r1902};
	xor.b64  	%rd2729, %rd2727, %rd2728;
	shr.u64 	%rd2730, %rd2665, 6;
	xor.b64  	%rd2731, %rd2729, %rd2730;
	shf.r.wrap.b32 	%r1904, %r1561, %r1560, 1;
	shf.r.wrap.b32 	%r1905, %r1560, %r1561, 1;
	mov.b64 	%rd2732, {%r1905, %r1904};
	shf.r.wrap.b32 	%r1906, %r1561, %r1560, 8;
	shf.r.wrap.b32 	%r1907, %r1560, %r1561, 8;
	mov.b64 	%rd2733, {%r1907, %r1906};
	xor.b64  	%rd2734, %rd2732, %rd2733;
	shr.u64 	%rd2735, %rd2184, 7;
	xor.b64  	%rd2736, %rd2734, %rd2735;
	add.s64 	%rd2737, %rd2736, %rd2147;
	add.s64 	%rd2738, %rd2737, %rd2480;
	add.s64 	%rd2739, %rd2738, %rd2731;
	add.s64 	%rd2740, %rd2739, %rd2604;
	xor.b64  	%rd2741, %rd2678, %rd2641;
	and.b64  	%rd2742, %rd2715, %rd2741;
	xor.b64  	%rd2743, %rd2742, %rd2641;
	add.s64 	%rd2744, %rd2740, %rd2743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1908,%dummy}, %rd2715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1909}, %rd2715;
	}
	shf.r.wrap.b32 	%r1910, %r1909, %r1908, 14;
	shf.r.wrap.b32 	%r1911, %r1908, %r1909, 14;
	mov.b64 	%rd2745, {%r1911, %r1910};
	shf.r.wrap.b32 	%r1912, %r1909, %r1908, 18;
	shf.r.wrap.b32 	%r1913, %r1908, %r1909, 18;
	mov.b64 	%rd2746, {%r1913, %r1912};
	xor.b64  	%rd2747, %rd2745, %rd2746;
	shf.l.wrap.b32 	%r1914, %r1908, %r1909, 23;
	shf.l.wrap.b32 	%r1915, %r1909, %r1908, 23;
	mov.b64 	%rd2748, {%r1915, %r1914};
	xor.b64  	%rd2749, %rd2747, %rd2748;
	add.s64 	%rd2750, %rd2744, %rd2749;
	add.s64 	%rd2751, %rd2750, 2944078676154940804;
	add.s64 	%rd2752, %rd2751, %rd2615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1916,%dummy}, %rd2726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1917}, %rd2726;
	}
	shf.r.wrap.b32 	%r1918, %r1917, %r1916, 28;
	shf.r.wrap.b32 	%r1919, %r1916, %r1917, 28;
	mov.b64 	%rd2753, {%r1919, %r1918};
	shf.l.wrap.b32 	%r1920, %r1916, %r1917, 30;
	shf.l.wrap.b32 	%r1921, %r1917, %r1916, 30;
	mov.b64 	%rd2754, {%r1921, %r1920};
	xor.b64  	%rd2755, %rd2753, %rd2754;
	shf.l.wrap.b32 	%r1922, %r1916, %r1917, 25;
	shf.l.wrap.b32 	%r1923, %r1917, %r1916, 25;
	mov.b64 	%rd2756, {%r1923, %r1922};
	xor.b64  	%rd2757, %rd2755, %rd2756;
	and.b64  	%rd2758, %rd2726, %rd2689;
	or.b64  	%rd2759, %rd2726, %rd2689;
	and.b64  	%rd2760, %rd2759, %rd2652;
	or.b64  	%rd2761, %rd2760, %rd2758;
	add.s64 	%rd2762, %rd2761, %rd2757;
	add.s64 	%rd2763, %rd2762, %rd2751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1924,%dummy}, %rd2702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1925}, %rd2702;
	}
	shf.r.wrap.b32 	%r1926, %r1925, %r1924, 19;
	shf.r.wrap.b32 	%r1927, %r1924, %r1925, 19;
	mov.b64 	%rd2764, {%r1927, %r1926};
	shf.l.wrap.b32 	%r1928, %r1924, %r1925, 3;
	shf.l.wrap.b32 	%r1929, %r1925, %r1924, 3;
	mov.b64 	%rd2765, {%r1929, %r1928};
	xor.b64  	%rd2766, %rd2764, %rd2765;
	shr.u64 	%rd2767, %rd2702, 6;
	xor.b64  	%rd2768, %rd2766, %rd2767;
	shf.r.wrap.b32 	%r1930, %r1587, %r1586, 1;
	shf.r.wrap.b32 	%r1931, %r1586, %r1587, 1;
	mov.b64 	%rd2769, {%r1931, %r1930};
	shf.r.wrap.b32 	%r1932, %r1587, %r1586, 8;
	shf.r.wrap.b32 	%r1933, %r1586, %r1587, 8;
	mov.b64 	%rd2770, {%r1933, %r1932};
	xor.b64  	%rd2771, %rd2769, %rd2770;
	shr.u64 	%rd2772, %rd2221, 7;
	xor.b64  	%rd2773, %rd2771, %rd2772;
	add.s64 	%rd2774, %rd2773, %rd2184;
	add.s64 	%rd2775, %rd2774, %rd2517;
	add.s64 	%rd2776, %rd2775, %rd2768;
	add.s64 	%rd2777, %rd2776, %rd2641;
	xor.b64  	%rd2778, %rd2715, %rd2678;
	and.b64  	%rd2779, %rd2752, %rd2778;
	xor.b64  	%rd2780, %rd2779, %rd2678;
	add.s64 	%rd2781, %rd2777, %rd2780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1934,%dummy}, %rd2752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1935}, %rd2752;
	}
	shf.r.wrap.b32 	%r1936, %r1935, %r1934, 14;
	shf.r.wrap.b32 	%r1937, %r1934, %r1935, 14;
	mov.b64 	%rd2782, {%r1937, %r1936};
	shf.r.wrap.b32 	%r1938, %r1935, %r1934, 18;
	shf.r.wrap.b32 	%r1939, %r1934, %r1935, 18;
	mov.b64 	%rd2783, {%r1939, %r1938};
	xor.b64  	%rd2784, %rd2782, %rd2783;
	shf.l.wrap.b32 	%r1940, %r1934, %r1935, 23;
	shf.l.wrap.b32 	%r1941, %r1935, %r1934, 23;
	mov.b64 	%rd2785, {%r1941, %r1940};
	xor.b64  	%rd2786, %rd2784, %rd2785;
	add.s64 	%rd2787, %rd2781, %rd2786;
	add.s64 	%rd2788, %rd2787, 3659926193048069267;
	add.s64 	%rd2789, %rd2788, %rd2652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1942,%dummy}, %rd2763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1943}, %rd2763;
	}
	shf.r.wrap.b32 	%r1944, %r1943, %r1942, 28;
	shf.r.wrap.b32 	%r1945, %r1942, %r1943, 28;
	mov.b64 	%rd2790, {%r1945, %r1944};
	shf.l.wrap.b32 	%r1946, %r1942, %r1943, 30;
	shf.l.wrap.b32 	%r1947, %r1943, %r1942, 30;
	mov.b64 	%rd2791, {%r1947, %r1946};
	xor.b64  	%rd2792, %rd2790, %rd2791;
	shf.l.wrap.b32 	%r1948, %r1942, %r1943, 25;
	shf.l.wrap.b32 	%r1949, %r1943, %r1942, 25;
	mov.b64 	%rd2793, {%r1949, %r1948};
	xor.b64  	%rd2794, %rd2792, %rd2793;
	and.b64  	%rd2795, %rd2763, %rd2726;
	or.b64  	%rd2796, %rd2763, %rd2726;
	and.b64  	%rd2797, %rd2796, %rd2689;
	or.b64  	%rd2798, %rd2797, %rd2795;
	add.s64 	%rd2799, %rd2798, %rd2794;
	add.s64 	%rd2800, %rd2799, %rd2788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd2739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1951}, %rd2739;
	}
	shf.r.wrap.b32 	%r1952, %r1951, %r1950, 19;
	shf.r.wrap.b32 	%r1953, %r1950, %r1951, 19;
	mov.b64 	%rd2801, {%r1953, %r1952};
	shf.l.wrap.b32 	%r1954, %r1950, %r1951, 3;
	shf.l.wrap.b32 	%r1955, %r1951, %r1950, 3;
	mov.b64 	%rd2802, {%r1955, %r1954};
	xor.b64  	%rd2803, %rd2801, %rd2802;
	shr.u64 	%rd2804, %rd2739, 6;
	xor.b64  	%rd2805, %rd2803, %rd2804;
	shf.r.wrap.b32 	%r1956, %r1613, %r1612, 1;
	shf.r.wrap.b32 	%r1957, %r1612, %r1613, 1;
	mov.b64 	%rd2806, {%r1957, %r1956};
	shf.r.wrap.b32 	%r1958, %r1613, %r1612, 8;
	shf.r.wrap.b32 	%r1959, %r1612, %r1613, 8;
	mov.b64 	%rd2807, {%r1959, %r1958};
	xor.b64  	%rd2808, %rd2806, %rd2807;
	shr.u64 	%rd2809, %rd2258, 7;
	xor.b64  	%rd2810, %rd2808, %rd2809;
	add.s64 	%rd2811, %rd2810, %rd2221;
	add.s64 	%rd2812, %rd2811, %rd2554;
	add.s64 	%rd2813, %rd2812, %rd2805;
	add.s64 	%rd2814, %rd2813, %rd2678;
	xor.b64  	%rd2815, %rd2752, %rd2715;
	and.b64  	%rd2816, %rd2789, %rd2815;
	xor.b64  	%rd2817, %rd2816, %rd2715;
	add.s64 	%rd2818, %rd2814, %rd2817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1960,%dummy}, %rd2789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1961}, %rd2789;
	}
	shf.r.wrap.b32 	%r1962, %r1961, %r1960, 14;
	shf.r.wrap.b32 	%r1963, %r1960, %r1961, 14;
	mov.b64 	%rd2819, {%r1963, %r1962};
	shf.r.wrap.b32 	%r1964, %r1961, %r1960, 18;
	shf.r.wrap.b32 	%r1965, %r1960, %r1961, 18;
	mov.b64 	%rd2820, {%r1965, %r1964};
	xor.b64  	%rd2821, %rd2819, %rd2820;
	shf.l.wrap.b32 	%r1966, %r1960, %r1961, 23;
	shf.l.wrap.b32 	%r1967, %r1961, %r1960, 23;
	mov.b64 	%rd2822, {%r1967, %r1966};
	xor.b64  	%rd2823, %rd2821, %rd2822;
	add.s64 	%rd2824, %rd2818, %rd2823;
	add.s64 	%rd2825, %rd2824, 4368137639120453308;
	add.s64 	%rd2826, %rd2825, %rd2689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1968,%dummy}, %rd2800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1969}, %rd2800;
	}
	shf.r.wrap.b32 	%r1970, %r1969, %r1968, 28;
	shf.r.wrap.b32 	%r1971, %r1968, %r1969, 28;
	mov.b64 	%rd2827, {%r1971, %r1970};
	shf.l.wrap.b32 	%r1972, %r1968, %r1969, 30;
	shf.l.wrap.b32 	%r1973, %r1969, %r1968, 30;
	mov.b64 	%rd2828, {%r1973, %r1972};
	xor.b64  	%rd2829, %rd2827, %rd2828;
	shf.l.wrap.b32 	%r1974, %r1968, %r1969, 25;
	shf.l.wrap.b32 	%r1975, %r1969, %r1968, 25;
	mov.b64 	%rd2830, {%r1975, %r1974};
	xor.b64  	%rd2831, %rd2829, %rd2830;
	and.b64  	%rd2832, %rd2800, %rd2763;
	or.b64  	%rd2833, %rd2800, %rd2763;
	and.b64  	%rd2834, %rd2833, %rd2726;
	or.b64  	%rd2835, %rd2834, %rd2832;
	add.s64 	%rd2836, %rd2835, %rd2831;
	add.s64 	%rd2837, %rd2836, %rd2825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1976,%dummy}, %rd2776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1977}, %rd2776;
	}
	shf.r.wrap.b32 	%r1978, %r1977, %r1976, 19;
	shf.r.wrap.b32 	%r1979, %r1976, %r1977, 19;
	mov.b64 	%rd2838, {%r1979, %r1978};
	shf.l.wrap.b32 	%r1980, %r1976, %r1977, 3;
	shf.l.wrap.b32 	%r1981, %r1977, %r1976, 3;
	mov.b64 	%rd2839, {%r1981, %r1980};
	xor.b64  	%rd2840, %rd2838, %rd2839;
	shr.u64 	%rd2841, %rd2776, 6;
	xor.b64  	%rd2842, %rd2840, %rd2841;
	shf.r.wrap.b32 	%r1982, %r1639, %r1638, 1;
	shf.r.wrap.b32 	%r1983, %r1638, %r1639, 1;
	mov.b64 	%rd2843, {%r1983, %r1982};
	shf.r.wrap.b32 	%r1984, %r1639, %r1638, 8;
	shf.r.wrap.b32 	%r1985, %r1638, %r1639, 8;
	mov.b64 	%rd2844, {%r1985, %r1984};
	xor.b64  	%rd2845, %rd2843, %rd2844;
	shr.u64 	%rd2846, %rd2295, 7;
	xor.b64  	%rd2847, %rd2845, %rd2846;
	add.s64 	%rd2848, %rd2847, %rd2258;
	add.s64 	%rd2849, %rd2848, %rd2591;
	add.s64 	%rd2850, %rd2849, %rd2842;
	add.s64 	%rd2851, %rd2850, %rd2715;
	xor.b64  	%rd2852, %rd2789, %rd2752;
	and.b64  	%rd2853, %rd2826, %rd2852;
	xor.b64  	%rd2854, %rd2853, %rd2752;
	add.s64 	%rd2855, %rd2851, %rd2854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1986,%dummy}, %rd2826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1987}, %rd2826;
	}
	shf.r.wrap.b32 	%r1988, %r1987, %r1986, 14;
	shf.r.wrap.b32 	%r1989, %r1986, %r1987, 14;
	mov.b64 	%rd2856, {%r1989, %r1988};
	shf.r.wrap.b32 	%r1990, %r1987, %r1986, 18;
	shf.r.wrap.b32 	%r1991, %r1986, %r1987, 18;
	mov.b64 	%rd2857, {%r1991, %r1990};
	xor.b64  	%rd2858, %rd2856, %rd2857;
	shf.l.wrap.b32 	%r1992, %r1986, %r1987, 23;
	shf.l.wrap.b32 	%r1993, %r1987, %r1986, 23;
	mov.b64 	%rd2859, {%r1993, %r1992};
	xor.b64  	%rd2860, %rd2858, %rd2859;
	add.s64 	%rd2861, %rd2855, %rd2860;
	add.s64 	%rd2862, %rd2861, 4836135668995329356;
	add.s64 	%rd2863, %rd2862, %rd2726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1994,%dummy}, %rd2837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1995}, %rd2837;
	}
	shf.r.wrap.b32 	%r1996, %r1995, %r1994, 28;
	shf.r.wrap.b32 	%r1997, %r1994, %r1995, 28;
	mov.b64 	%rd2864, {%r1997, %r1996};
	shf.l.wrap.b32 	%r1998, %r1994, %r1995, 30;
	shf.l.wrap.b32 	%r1999, %r1995, %r1994, 30;
	mov.b64 	%rd2865, {%r1999, %r1998};
	xor.b64  	%rd2866, %rd2864, %rd2865;
	shf.l.wrap.b32 	%r2000, %r1994, %r1995, 25;
	shf.l.wrap.b32 	%r2001, %r1995, %r1994, 25;
	mov.b64 	%rd2867, {%r2001, %r2000};
	xor.b64  	%rd2868, %rd2866, %rd2867;
	and.b64  	%rd2869, %rd2837, %rd2800;
	or.b64  	%rd2870, %rd2837, %rd2800;
	and.b64  	%rd2871, %rd2870, %rd2763;
	or.b64  	%rd2872, %rd2871, %rd2869;
	add.s64 	%rd2873, %rd2872, %rd2868;
	add.s64 	%rd2874, %rd2873, %rd2862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2002,%dummy}, %rd2813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2003}, %rd2813;
	}
	shf.r.wrap.b32 	%r2004, %r2003, %r2002, 19;
	shf.r.wrap.b32 	%r2005, %r2002, %r2003, 19;
	mov.b64 	%rd2875, {%r2005, %r2004};
	shf.l.wrap.b32 	%r2006, %r2002, %r2003, 3;
	shf.l.wrap.b32 	%r2007, %r2003, %r2002, 3;
	mov.b64 	%rd2876, {%r2007, %r2006};
	xor.b64  	%rd2877, %rd2875, %rd2876;
	shr.u64 	%rd2878, %rd2813, 6;
	xor.b64  	%rd2879, %rd2877, %rd2878;
	shf.r.wrap.b32 	%r2008, %r1665, %r1664, 1;
	shf.r.wrap.b32 	%r2009, %r1664, %r1665, 1;
	mov.b64 	%rd2880, {%r2009, %r2008};
	shf.r.wrap.b32 	%r2010, %r1665, %r1664, 8;
	shf.r.wrap.b32 	%r2011, %r1664, %r1665, 8;
	mov.b64 	%rd2881, {%r2011, %r2010};
	xor.b64  	%rd2882, %rd2880, %rd2881;
	shr.u64 	%rd2883, %rd2332, 7;
	xor.b64  	%rd2884, %rd2882, %rd2883;
	add.s64 	%rd2885, %rd2884, %rd2295;
	add.s64 	%rd2886, %rd2885, %rd2628;
	add.s64 	%rd2887, %rd2886, %rd2879;
	add.s64 	%rd2888, %rd2887, %rd2752;
	xor.b64  	%rd2889, %rd2826, %rd2789;
	and.b64  	%rd2890, %rd2863, %rd2889;
	xor.b64  	%rd2891, %rd2890, %rd2789;
	add.s64 	%rd2892, %rd2888, %rd2891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2012,%dummy}, %rd2863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2013}, %rd2863;
	}
	shf.r.wrap.b32 	%r2014, %r2013, %r2012, 14;
	shf.r.wrap.b32 	%r2015, %r2012, %r2013, 14;
	mov.b64 	%rd2893, {%r2015, %r2014};
	shf.r.wrap.b32 	%r2016, %r2013, %r2012, 18;
	shf.r.wrap.b32 	%r2017, %r2012, %r2013, 18;
	mov.b64 	%rd2894, {%r2017, %r2016};
	xor.b64  	%rd2895, %rd2893, %rd2894;
	shf.l.wrap.b32 	%r2018, %r2012, %r2013, 23;
	shf.l.wrap.b32 	%r2019, %r2013, %r2012, 23;
	mov.b64 	%rd2896, {%r2019, %r2018};
	xor.b64  	%rd2897, %rd2895, %rd2896;
	add.s64 	%rd2898, %rd2892, %rd2897;
	add.s64 	%rd2899, %rd2898, 5532061633213252278;
	add.s64 	%rd2900, %rd2899, %rd2763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2020,%dummy}, %rd2874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd2874;
	}
	shf.r.wrap.b32 	%r2022, %r2021, %r2020, 28;
	shf.r.wrap.b32 	%r2023, %r2020, %r2021, 28;
	mov.b64 	%rd2901, {%r2023, %r2022};
	shf.l.wrap.b32 	%r2024, %r2020, %r2021, 30;
	shf.l.wrap.b32 	%r2025, %r2021, %r2020, 30;
	mov.b64 	%rd2902, {%r2025, %r2024};
	xor.b64  	%rd2903, %rd2901, %rd2902;
	shf.l.wrap.b32 	%r2026, %r2020, %r2021, 25;
	shf.l.wrap.b32 	%r2027, %r2021, %r2020, 25;
	mov.b64 	%rd2904, {%r2027, %r2026};
	xor.b64  	%rd2905, %rd2903, %rd2904;
	and.b64  	%rd2906, %rd2874, %rd2837;
	or.b64  	%rd2907, %rd2874, %rd2837;
	and.b64  	%rd2908, %rd2907, %rd2800;
	or.b64  	%rd2909, %rd2908, %rd2906;
	add.s64 	%rd2910, %rd2909, %rd2905;
	add.s64 	%rd2911, %rd2910, %rd2899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2028,%dummy}, %rd2850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2029}, %rd2850;
	}
	shf.r.wrap.b32 	%r2030, %r2029, %r2028, 19;
	shf.r.wrap.b32 	%r2031, %r2028, %r2029, 19;
	mov.b64 	%rd2912, {%r2031, %r2030};
	shf.l.wrap.b32 	%r2032, %r2028, %r2029, 3;
	shf.l.wrap.b32 	%r2033, %r2029, %r2028, 3;
	mov.b64 	%rd2913, {%r2033, %r2032};
	xor.b64  	%rd2914, %rd2912, %rd2913;
	shr.u64 	%rd2915, %rd2850, 6;
	xor.b64  	%rd2916, %rd2914, %rd2915;
	shf.r.wrap.b32 	%r2034, %r1691, %r1690, 1;
	shf.r.wrap.b32 	%r2035, %r1690, %r1691, 1;
	mov.b64 	%rd2917, {%r2035, %r2034};
	shf.r.wrap.b32 	%r2036, %r1691, %r1690, 8;
	shf.r.wrap.b32 	%r2037, %r1690, %r1691, 8;
	mov.b64 	%rd2918, {%r2037, %r2036};
	xor.b64  	%rd2919, %rd2917, %rd2918;
	shr.u64 	%rd2920, %rd2369, 7;
	xor.b64  	%rd2921, %rd2919, %rd2920;
	add.s64 	%rd2922, %rd2921, %rd2332;
	add.s64 	%rd2923, %rd2922, %rd2665;
	add.s64 	%rd2924, %rd2923, %rd2916;
	add.s64 	%rd2925, %rd2924, %rd2789;
	xor.b64  	%rd2926, %rd2863, %rd2826;
	and.b64  	%rd2927, %rd2900, %rd2926;
	xor.b64  	%rd2928, %rd2927, %rd2826;
	add.s64 	%rd2929, %rd2925, %rd2928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2038,%dummy}, %rd2900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2039}, %rd2900;
	}
	shf.r.wrap.b32 	%r2040, %r2039, %r2038, 14;
	shf.r.wrap.b32 	%r2041, %r2038, %r2039, 14;
	mov.b64 	%rd2930, {%r2041, %r2040};
	shf.r.wrap.b32 	%r2042, %r2039, %r2038, 18;
	shf.r.wrap.b32 	%r2043, %r2038, %r2039, 18;
	mov.b64 	%rd2931, {%r2043, %r2042};
	xor.b64  	%rd2932, %rd2930, %rd2931;
	shf.l.wrap.b32 	%r2044, %r2038, %r2039, 23;
	shf.l.wrap.b32 	%r2045, %r2039, %r2038, 23;
	mov.b64 	%rd2933, {%r2045, %r2044};
	xor.b64  	%rd2934, %rd2932, %rd2933;
	add.s64 	%rd2935, %rd2929, %rd2934;
	add.s64 	%rd2936, %rd2935, 6448918945643986474;
	add.s64 	%rd2937, %rd2936, %rd2800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2046,%dummy}, %rd2911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2047}, %rd2911;
	}
	shf.r.wrap.b32 	%r2048, %r2047, %r2046, 28;
	shf.r.wrap.b32 	%r2049, %r2046, %r2047, 28;
	mov.b64 	%rd2938, {%r2049, %r2048};
	shf.l.wrap.b32 	%r2050, %r2046, %r2047, 30;
	shf.l.wrap.b32 	%r2051, %r2047, %r2046, 30;
	mov.b64 	%rd2939, {%r2051, %r2050};
	xor.b64  	%rd2940, %rd2938, %rd2939;
	shf.l.wrap.b32 	%r2052, %r2046, %r2047, 25;
	shf.l.wrap.b32 	%r2053, %r2047, %r2046, 25;
	mov.b64 	%rd2941, {%r2053, %r2052};
	xor.b64  	%rd2942, %rd2940, %rd2941;
	and.b64  	%rd2943, %rd2911, %rd2874;
	or.b64  	%rd2944, %rd2911, %rd2874;
	and.b64  	%rd2945, %rd2944, %rd2837;
	or.b64  	%rd2946, %rd2945, %rd2943;
	add.s64 	%rd2947, %rd2946, %rd2942;
	add.s64 	%rd2948, %rd2947, %rd2936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2054,%dummy}, %rd2887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2055}, %rd2887;
	}
	shf.r.wrap.b32 	%r2056, %r2055, %r2054, 19;
	shf.r.wrap.b32 	%r2057, %r2054, %r2055, 19;
	mov.b64 	%rd2949, {%r2057, %r2056};
	shf.l.wrap.b32 	%r2058, %r2054, %r2055, 3;
	shf.l.wrap.b32 	%r2059, %r2055, %r2054, 3;
	mov.b64 	%rd2950, {%r2059, %r2058};
	xor.b64  	%rd2951, %rd2949, %rd2950;
	shr.u64 	%rd2952, %rd2887, 6;
	xor.b64  	%rd2953, %rd2951, %rd2952;
	shf.r.wrap.b32 	%r2060, %r1717, %r1716, 1;
	shf.r.wrap.b32 	%r2061, %r1716, %r1717, 1;
	mov.b64 	%rd2954, {%r2061, %r2060};
	shf.r.wrap.b32 	%r2062, %r1717, %r1716, 8;
	shf.r.wrap.b32 	%r2063, %r1716, %r1717, 8;
	mov.b64 	%rd2955, {%r2063, %r2062};
	xor.b64  	%rd2956, %rd2954, %rd2955;
	shr.u64 	%rd2957, %rd2406, 7;
	xor.b64  	%rd2958, %rd2956, %rd2957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2064,%dummy}, %rd2937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2065}, %rd2937;
	}
	shf.r.wrap.b32 	%r2066, %r2065, %r2064, 14;
	shf.r.wrap.b32 	%r2067, %r2064, %r2065, 14;
	mov.b64 	%rd2959, {%r2067, %r2066};
	shf.r.wrap.b32 	%r2068, %r2065, %r2064, 18;
	shf.r.wrap.b32 	%r2069, %r2064, %r2065, 18;
	mov.b64 	%rd2960, {%r2069, %r2068};
	xor.b64  	%rd2961, %rd2959, %rd2960;
	shf.l.wrap.b32 	%r2070, %r2064, %r2065, 23;
	shf.l.wrap.b32 	%r2071, %r2065, %r2064, 23;
	mov.b64 	%rd2962, {%r2071, %r2070};
	xor.b64  	%rd2963, %rd2961, %rd2962;
	xor.b64  	%rd2964, %rd2900, %rd2863;
	and.b64  	%rd2965, %rd2937, %rd2964;
	xor.b64  	%rd2966, %rd2965, %rd2863;
	add.s64 	%rd2967, %rd2369, %rd2958;
	add.s64 	%rd2968, %rd2967, %rd2702;
	add.s64 	%rd2969, %rd2968, %rd2953;
	add.s64 	%rd2970, %rd2969, %rd2826;
	add.s64 	%rd2971, %rd2970, %rd2966;
	add.s64 	%rd2972, %rd2971, %rd2963;
	add.s64 	%rd2973, %rd2972, 6902733635092675308;
	add.s64 	%rd2974, %rd2973, %rd2837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2072,%dummy}, %rd2948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2073}, %rd2948;
	}
	shf.r.wrap.b32 	%r2074, %r2073, %r2072, 28;
	shf.r.wrap.b32 	%r2075, %r2072, %r2073, 28;
	mov.b64 	%rd2975, {%r2075, %r2074};
	shf.l.wrap.b32 	%r2076, %r2072, %r2073, 30;
	shf.l.wrap.b32 	%r2077, %r2073, %r2072, 30;
	mov.b64 	%rd2976, {%r2077, %r2076};
	xor.b64  	%rd2977, %rd2975, %rd2976;
	shf.l.wrap.b32 	%r2078, %r2072, %r2073, 25;
	shf.l.wrap.b32 	%r2079, %r2073, %r2072, 25;
	mov.b64 	%rd2978, {%r2079, %r2078};
	xor.b64  	%rd2979, %rd2977, %rd2978;
	and.b64  	%rd2980, %rd2948, %rd2911;
	or.b64  	%rd2981, %rd2948, %rd2911;
	and.b64  	%rd2982, %rd2981, %rd2874;
	or.b64  	%rd2983, %rd2982, %rd2980;
	add.s64 	%rd2984, %rd2983, %rd2979;
	add.s64 	%rd2985, %rd2984, %rd2973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2080,%dummy}, %rd2924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2081}, %rd2924;
	}
	shf.r.wrap.b32 	%r2082, %r2081, %r2080, 19;
	shf.r.wrap.b32 	%r2083, %r2080, %r2081, 19;
	mov.b64 	%rd2986, {%r2083, %r2082};
	shf.l.wrap.b32 	%r2084, %r2080, %r2081, 3;
	shf.l.wrap.b32 	%r2085, %r2081, %r2080, 3;
	mov.b64 	%rd2987, {%r2085, %r2084};
	xor.b64  	%rd2988, %rd2986, %rd2987;
	shr.u64 	%rd2989, %rd2924, 6;
	xor.b64  	%rd2990, %rd2988, %rd2989;
	shf.r.wrap.b32 	%r2086, %r1743, %r1742, 1;
	shf.r.wrap.b32 	%r2087, %r1742, %r1743, 1;
	mov.b64 	%rd2991, {%r2087, %r2086};
	shf.r.wrap.b32 	%r2088, %r1743, %r1742, 8;
	shf.r.wrap.b32 	%r2089, %r1742, %r1743, 8;
	mov.b64 	%rd2992, {%r2089, %r2088};
	xor.b64  	%rd2993, %rd2991, %rd2992;
	shr.u64 	%rd2994, %rd2443, 7;
	xor.b64  	%rd2995, %rd2993, %rd2994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2090,%dummy}, %rd2974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2091}, %rd2974;
	}
	shf.r.wrap.b32 	%r2092, %r2091, %r2090, 14;
	shf.r.wrap.b32 	%r2093, %r2090, %r2091, 14;
	mov.b64 	%rd2996, {%r2093, %r2092};
	shf.r.wrap.b32 	%r2094, %r2091, %r2090, 18;
	shf.r.wrap.b32 	%r2095, %r2090, %r2091, 18;
	mov.b64 	%rd2997, {%r2095, %r2094};
	xor.b64  	%rd2998, %rd2996, %rd2997;
	shf.l.wrap.b32 	%r2096, %r2090, %r2091, 23;
	shf.l.wrap.b32 	%r2097, %r2091, %r2090, 23;
	mov.b64 	%rd2999, {%r2097, %r2096};
	xor.b64  	%rd3000, %rd2998, %rd2999;
	xor.b64  	%rd3001, %rd2937, %rd2900;
	and.b64  	%rd3002, %rd2974, %rd3001;
	xor.b64  	%rd3003, %rd3002, %rd2900;
	add.s64 	%rd3004, %rd2406, %rd2995;
	add.s64 	%rd3005, %rd3004, %rd2739;
	add.s64 	%rd3006, %rd3005, %rd2990;
	add.s64 	%rd3007, %rd3006, %rd2863;
	add.s64 	%rd3008, %rd3007, %rd3003;
	add.s64 	%rd3009, %rd3008, %rd3000;
	add.s64 	%rd3010, %rd3009, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2098,%dummy}, %rd2985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2099}, %rd2985;
	}
	shf.r.wrap.b32 	%r2100, %r2099, %r2098, 28;
	shf.r.wrap.b32 	%r2101, %r2098, %r2099, 28;
	mov.b64 	%rd3011, {%r2101, %r2100};
	shf.l.wrap.b32 	%r2102, %r2098, %r2099, 30;
	shf.l.wrap.b32 	%r2103, %r2099, %r2098, 30;
	mov.b64 	%rd3012, {%r2103, %r2102};
	xor.b64  	%rd3013, %rd3011, %rd3012;
	shf.l.wrap.b32 	%r2104, %r2098, %r2099, 25;
	shf.l.wrap.b32 	%r2105, %r2099, %r2098, 25;
	mov.b64 	%rd3014, {%r2105, %r2104};
	xor.b64  	%rd3015, %rd3013, %rd3014;
	and.b64  	%rd3016, %rd2985, %rd2948;
	or.b64  	%rd3017, %rd2985, %rd2948;
	and.b64  	%rd3018, %rd3017, %rd2911;
	or.b64  	%rd3019, %rd3018, %rd3016;
	add.s64 	%rd3020, %rd3015, %rd281;
	add.s64 	%rd3021, %rd3020, %rd3019;
	add.s64 	%rd3022, %rd3021, %rd3010;
	st.local.u64 	[%rd4+8], %rd3022;
	add.s64 	%rd3023, %rd2985, %rd287;
	st.local.u64 	[%rd4+16], %rd3023;
	add.s64 	%rd3024, %rd2948, %rd290;
	st.local.u64 	[%rd4+24], %rd3024;
	add.s64 	%rd3025, %rd2911, %rd279;
	st.local.u64 	[%rd4+32], %rd3025;
	add.s64 	%rd3026, %rd2874, %rd265;
	add.s64 	%rd3027, %rd3026, %rd3010;
	st.local.u64 	[%rd4+40], %rd3027;
	add.s64 	%rd3028, %rd2974, %rd273;
	st.local.u64 	[%rd4+48], %rd3028;
	add.s64 	%rd3029, %rd2937, %rd272;
	st.local.u64 	[%rd4+56], %rd3029;
	add.s64 	%rd3030, %rd2900, %rd263;
	st.local.u64 	[%rd4+64], %rd3030;
	cvt.u64.u32 	%rd3031, %r24;
	add.s64 	%rd12048, %rd12048, %rd3031;
	add.u64 	%rd3032, %SP, 16;
	add.s64 	%rd12030, %rd3032, %rd3031;
	sub.s32 	%r8270, %r8270, %r24;

$L__BB8_23:
	setp.lt.u32 	%p22, %r8270, 128;
	@%p22 bra 	$L__BB8_28;

$L__BB8_24:
	and.b64  	%rd3033, %rd12030, 7;
	setp.eq.s64 	%p23, %rd3033, 0;
	@%p23 bra 	$L__BB8_26;

	ld.local.u8 	%rd3034, [%rd12048];
	shl.b64 	%rd3035, %rd3034, 56;
	ld.local.u8 	%rd3036, [%rd12048+1];
	shl.b64 	%rd3037, %rd3036, 48;
	or.b64  	%rd3038, %rd3037, %rd3035;
	ld.local.u8 	%rd3039, [%rd12048+2];
	shl.b64 	%rd3040, %rd3039, 40;
	or.b64  	%rd3041, %rd3038, %rd3040;
	ld.local.u8 	%rd3042, [%rd12048+3];
	shl.b64 	%rd3043, %rd3042, 32;
	or.b64  	%rd3044, %rd3041, %rd3043;
	ld.local.u8 	%r2106, [%rd12048+4];
	mul.wide.u32 	%rd3045, %r2106, 16777216;
	or.b64  	%rd3046, %rd3044, %rd3045;
	ld.local.u8 	%r2107, [%rd12048+5];
	mul.wide.u32 	%rd3047, %r2107, 65536;
	or.b64  	%rd3048, %rd3046, %rd3047;
	ld.local.u8 	%r2108, [%rd12048+6];
	mul.wide.u32 	%rd3049, %r2108, 256;
	or.b64  	%rd3050, %rd3048, %rd3049;
	ld.local.u8 	%rd3051, [%rd12048+7];
	or.b64  	%rd12047, %rd3050, %rd3051;
	ld.local.u8 	%rd3052, [%rd12048+8];
	shl.b64 	%rd3053, %rd3052, 56;
	ld.local.u8 	%rd3054, [%rd12048+9];
	shl.b64 	%rd3055, %rd3054, 48;
	or.b64  	%rd3056, %rd3055, %rd3053;
	ld.local.u8 	%rd3057, [%rd12048+10];
	shl.b64 	%rd3058, %rd3057, 40;
	or.b64  	%rd3059, %rd3056, %rd3058;
	ld.local.u8 	%rd3060, [%rd12048+11];
	shl.b64 	%rd3061, %rd3060, 32;
	or.b64  	%rd3062, %rd3059, %rd3061;
	ld.local.u8 	%r2109, [%rd12048+12];
	mul.wide.u32 	%rd3063, %r2109, 16777216;
	or.b64  	%rd3064, %rd3062, %rd3063;
	ld.local.u8 	%r2110, [%rd12048+13];
	mul.wide.u32 	%rd3065, %r2110, 65536;
	or.b64  	%rd3066, %rd3064, %rd3065;
	ld.local.u8 	%r2111, [%rd12048+14];
	mul.wide.u32 	%rd3067, %r2111, 256;
	or.b64  	%rd3068, %rd3066, %rd3067;
	ld.local.u8 	%rd3069, [%rd12048+15];
	or.b64  	%rd12046, %rd3068, %rd3069;
	ld.local.u8 	%rd3070, [%rd12048+16];
	shl.b64 	%rd3071, %rd3070, 56;
	ld.local.u8 	%rd3072, [%rd12048+17];
	shl.b64 	%rd3073, %rd3072, 48;
	or.b64  	%rd3074, %rd3073, %rd3071;
	ld.local.u8 	%rd3075, [%rd12048+18];
	shl.b64 	%rd3076, %rd3075, 40;
	or.b64  	%rd3077, %rd3074, %rd3076;
	ld.local.u8 	%rd3078, [%rd12048+19];
	shl.b64 	%rd3079, %rd3078, 32;
	or.b64  	%rd3080, %rd3077, %rd3079;
	ld.local.u8 	%r2112, [%rd12048+20];
	mul.wide.u32 	%rd3081, %r2112, 16777216;
	or.b64  	%rd3082, %rd3080, %rd3081;
	ld.local.u8 	%r2113, [%rd12048+21];
	mul.wide.u32 	%rd3083, %r2113, 65536;
	or.b64  	%rd3084, %rd3082, %rd3083;
	ld.local.u8 	%r2114, [%rd12048+22];
	mul.wide.u32 	%rd3085, %r2114, 256;
	or.b64  	%rd3086, %rd3084, %rd3085;
	ld.local.u8 	%rd3087, [%rd12048+23];
	or.b64  	%rd12045, %rd3086, %rd3087;
	ld.local.u8 	%rd3088, [%rd12048+24];
	shl.b64 	%rd3089, %rd3088, 56;
	ld.local.u8 	%rd3090, [%rd12048+25];
	shl.b64 	%rd3091, %rd3090, 48;
	or.b64  	%rd3092, %rd3091, %rd3089;
	ld.local.u8 	%rd3093, [%rd12048+26];
	shl.b64 	%rd3094, %rd3093, 40;
	or.b64  	%rd3095, %rd3092, %rd3094;
	ld.local.u8 	%rd3096, [%rd12048+27];
	shl.b64 	%rd3097, %rd3096, 32;
	or.b64  	%rd3098, %rd3095, %rd3097;
	ld.local.u8 	%r2115, [%rd12048+28];
	mul.wide.u32 	%rd3099, %r2115, 16777216;
	or.b64  	%rd3100, %rd3098, %rd3099;
	ld.local.u8 	%r2116, [%rd12048+29];
	mul.wide.u32 	%rd3101, %r2116, 65536;
	or.b64  	%rd3102, %rd3100, %rd3101;
	ld.local.u8 	%r2117, [%rd12048+30];
	mul.wide.u32 	%rd3103, %r2117, 256;
	or.b64  	%rd3104, %rd3102, %rd3103;
	ld.local.u8 	%rd3105, [%rd12048+31];
	or.b64  	%rd12044, %rd3104, %rd3105;
	ld.local.u8 	%rd3106, [%rd12048+32];
	shl.b64 	%rd3107, %rd3106, 56;
	ld.local.u8 	%rd3108, [%rd12048+33];
	shl.b64 	%rd3109, %rd3108, 48;
	or.b64  	%rd3110, %rd3109, %rd3107;
	ld.local.u8 	%rd3111, [%rd12048+34];
	shl.b64 	%rd3112, %rd3111, 40;
	or.b64  	%rd3113, %rd3110, %rd3112;
	ld.local.u8 	%rd3114, [%rd12048+35];
	shl.b64 	%rd3115, %rd3114, 32;
	or.b64  	%rd3116, %rd3113, %rd3115;
	ld.local.u8 	%r2118, [%rd12048+36];
	mul.wide.u32 	%rd3117, %r2118, 16777216;
	or.b64  	%rd3118, %rd3116, %rd3117;
	ld.local.u8 	%r2119, [%rd12048+37];
	mul.wide.u32 	%rd3119, %r2119, 65536;
	or.b64  	%rd3120, %rd3118, %rd3119;
	ld.local.u8 	%r2120, [%rd12048+38];
	mul.wide.u32 	%rd3121, %r2120, 256;
	or.b64  	%rd3122, %rd3120, %rd3121;
	ld.local.u8 	%rd3123, [%rd12048+39];
	or.b64  	%rd12043, %rd3122, %rd3123;
	ld.local.u8 	%rd3124, [%rd12048+40];
	shl.b64 	%rd3125, %rd3124, 56;
	ld.local.u8 	%rd3126, [%rd12048+41];
	shl.b64 	%rd3127, %rd3126, 48;
	or.b64  	%rd3128, %rd3127, %rd3125;
	ld.local.u8 	%rd3129, [%rd12048+42];
	shl.b64 	%rd3130, %rd3129, 40;
	or.b64  	%rd3131, %rd3128, %rd3130;
	ld.local.u8 	%rd3132, [%rd12048+43];
	shl.b64 	%rd3133, %rd3132, 32;
	or.b64  	%rd3134, %rd3131, %rd3133;
	ld.local.u8 	%r2121, [%rd12048+44];
	mul.wide.u32 	%rd3135, %r2121, 16777216;
	or.b64  	%rd3136, %rd3134, %rd3135;
	ld.local.u8 	%r2122, [%rd12048+45];
	mul.wide.u32 	%rd3137, %r2122, 65536;
	or.b64  	%rd3138, %rd3136, %rd3137;
	ld.local.u8 	%r2123, [%rd12048+46];
	mul.wide.u32 	%rd3139, %r2123, 256;
	or.b64  	%rd3140, %rd3138, %rd3139;
	ld.local.u8 	%rd3141, [%rd12048+47];
	or.b64  	%rd12042, %rd3140, %rd3141;
	ld.local.u8 	%rd3142, [%rd12048+48];
	shl.b64 	%rd3143, %rd3142, 56;
	ld.local.u8 	%rd3144, [%rd12048+49];
	shl.b64 	%rd3145, %rd3144, 48;
	or.b64  	%rd3146, %rd3145, %rd3143;
	ld.local.u8 	%rd3147, [%rd12048+50];
	shl.b64 	%rd3148, %rd3147, 40;
	or.b64  	%rd3149, %rd3146, %rd3148;
	ld.local.u8 	%rd3150, [%rd12048+51];
	shl.b64 	%rd3151, %rd3150, 32;
	or.b64  	%rd3152, %rd3149, %rd3151;
	ld.local.u8 	%r2124, [%rd12048+52];
	mul.wide.u32 	%rd3153, %r2124, 16777216;
	or.b64  	%rd3154, %rd3152, %rd3153;
	ld.local.u8 	%r2125, [%rd12048+53];
	mul.wide.u32 	%rd3155, %r2125, 65536;
	or.b64  	%rd3156, %rd3154, %rd3155;
	ld.local.u8 	%r2126, [%rd12048+54];
	mul.wide.u32 	%rd3157, %r2126, 256;
	or.b64  	%rd3158, %rd3156, %rd3157;
	ld.local.u8 	%rd3159, [%rd12048+55];
	or.b64  	%rd12041, %rd3158, %rd3159;
	ld.local.u8 	%rd3160, [%rd12048+56];
	shl.b64 	%rd3161, %rd3160, 56;
	ld.local.u8 	%rd3162, [%rd12048+57];
	shl.b64 	%rd3163, %rd3162, 48;
	or.b64  	%rd3164, %rd3163, %rd3161;
	ld.local.u8 	%rd3165, [%rd12048+58];
	shl.b64 	%rd3166, %rd3165, 40;
	or.b64  	%rd3167, %rd3164, %rd3166;
	ld.local.u8 	%rd3168, [%rd12048+59];
	shl.b64 	%rd3169, %rd3168, 32;
	or.b64  	%rd3170, %rd3167, %rd3169;
	ld.local.u8 	%r2127, [%rd12048+60];
	mul.wide.u32 	%rd3171, %r2127, 16777216;
	or.b64  	%rd3172, %rd3170, %rd3171;
	ld.local.u8 	%r2128, [%rd12048+61];
	mul.wide.u32 	%rd3173, %r2128, 65536;
	or.b64  	%rd3174, %rd3172, %rd3173;
	ld.local.u8 	%r2129, [%rd12048+62];
	mul.wide.u32 	%rd3175, %r2129, 256;
	or.b64  	%rd3176, %rd3174, %rd3175;
	ld.local.u8 	%rd3177, [%rd12048+63];
	or.b64  	%rd12040, %rd3176, %rd3177;
	ld.local.u8 	%rd3178, [%rd12048+64];
	shl.b64 	%rd3179, %rd3178, 56;
	ld.local.u8 	%rd3180, [%rd12048+65];
	shl.b64 	%rd3181, %rd3180, 48;
	or.b64  	%rd3182, %rd3181, %rd3179;
	ld.local.u8 	%rd3183, [%rd12048+66];
	shl.b64 	%rd3184, %rd3183, 40;
	or.b64  	%rd3185, %rd3182, %rd3184;
	ld.local.u8 	%rd3186, [%rd12048+67];
	shl.b64 	%rd3187, %rd3186, 32;
	or.b64  	%rd3188, %rd3185, %rd3187;
	ld.local.u8 	%r2130, [%rd12048+68];
	mul.wide.u32 	%rd3189, %r2130, 16777216;
	or.b64  	%rd3190, %rd3188, %rd3189;
	ld.local.u8 	%r2131, [%rd12048+69];
	mul.wide.u32 	%rd3191, %r2131, 65536;
	or.b64  	%rd3192, %rd3190, %rd3191;
	ld.local.u8 	%r2132, [%rd12048+70];
	mul.wide.u32 	%rd3193, %r2132, 256;
	or.b64  	%rd3194, %rd3192, %rd3193;
	ld.local.u8 	%rd3195, [%rd12048+71];
	or.b64  	%rd12039, %rd3194, %rd3195;
	ld.local.u8 	%rd3196, [%rd12048+72];
	shl.b64 	%rd3197, %rd3196, 56;
	ld.local.u8 	%rd3198, [%rd12048+73];
	shl.b64 	%rd3199, %rd3198, 48;
	or.b64  	%rd3200, %rd3199, %rd3197;
	ld.local.u8 	%rd3201, [%rd12048+74];
	shl.b64 	%rd3202, %rd3201, 40;
	or.b64  	%rd3203, %rd3200, %rd3202;
	ld.local.u8 	%rd3204, [%rd12048+75];
	shl.b64 	%rd3205, %rd3204, 32;
	or.b64  	%rd3206, %rd3203, %rd3205;
	ld.local.u8 	%r2133, [%rd12048+76];
	mul.wide.u32 	%rd3207, %r2133, 16777216;
	or.b64  	%rd3208, %rd3206, %rd3207;
	ld.local.u8 	%r2134, [%rd12048+77];
	mul.wide.u32 	%rd3209, %r2134, 65536;
	or.b64  	%rd3210, %rd3208, %rd3209;
	ld.local.u8 	%r2135, [%rd12048+78];
	mul.wide.u32 	%rd3211, %r2135, 256;
	or.b64  	%rd3212, %rd3210, %rd3211;
	ld.local.u8 	%rd3213, [%rd12048+79];
	or.b64  	%rd12038, %rd3212, %rd3213;
	ld.local.u8 	%rd3214, [%rd12048+80];
	shl.b64 	%rd3215, %rd3214, 56;
	ld.local.u8 	%rd3216, [%rd12048+81];
	shl.b64 	%rd3217, %rd3216, 48;
	or.b64  	%rd3218, %rd3217, %rd3215;
	ld.local.u8 	%rd3219, [%rd12048+82];
	shl.b64 	%rd3220, %rd3219, 40;
	or.b64  	%rd3221, %rd3218, %rd3220;
	ld.local.u8 	%rd3222, [%rd12048+83];
	shl.b64 	%rd3223, %rd3222, 32;
	or.b64  	%rd3224, %rd3221, %rd3223;
	ld.local.u8 	%r2136, [%rd12048+84];
	mul.wide.u32 	%rd3225, %r2136, 16777216;
	or.b64  	%rd3226, %rd3224, %rd3225;
	ld.local.u8 	%r2137, [%rd12048+85];
	mul.wide.u32 	%rd3227, %r2137, 65536;
	or.b64  	%rd3228, %rd3226, %rd3227;
	ld.local.u8 	%r2138, [%rd12048+86];
	mul.wide.u32 	%rd3229, %r2138, 256;
	or.b64  	%rd3230, %rd3228, %rd3229;
	ld.local.u8 	%rd3231, [%rd12048+87];
	or.b64  	%rd12037, %rd3230, %rd3231;
	ld.local.u8 	%rd3232, [%rd12048+88];
	shl.b64 	%rd3233, %rd3232, 56;
	ld.local.u8 	%rd3234, [%rd12048+89];
	shl.b64 	%rd3235, %rd3234, 48;
	or.b64  	%rd3236, %rd3235, %rd3233;
	ld.local.u8 	%rd3237, [%rd12048+90];
	shl.b64 	%rd3238, %rd3237, 40;
	or.b64  	%rd3239, %rd3236, %rd3238;
	ld.local.u8 	%rd3240, [%rd12048+91];
	shl.b64 	%rd3241, %rd3240, 32;
	or.b64  	%rd3242, %rd3239, %rd3241;
	ld.local.u8 	%r2139, [%rd12048+92];
	mul.wide.u32 	%rd3243, %r2139, 16777216;
	or.b64  	%rd3244, %rd3242, %rd3243;
	ld.local.u8 	%r2140, [%rd12048+93];
	mul.wide.u32 	%rd3245, %r2140, 65536;
	or.b64  	%rd3246, %rd3244, %rd3245;
	ld.local.u8 	%r2141, [%rd12048+94];
	mul.wide.u32 	%rd3247, %r2141, 256;
	or.b64  	%rd3248, %rd3246, %rd3247;
	ld.local.u8 	%rd3249, [%rd12048+95];
	or.b64  	%rd12036, %rd3248, %rd3249;
	ld.local.u8 	%rd3250, [%rd12048+96];
	shl.b64 	%rd3251, %rd3250, 56;
	ld.local.u8 	%rd3252, [%rd12048+97];
	shl.b64 	%rd3253, %rd3252, 48;
	or.b64  	%rd3254, %rd3253, %rd3251;
	ld.local.u8 	%rd3255, [%rd12048+98];
	shl.b64 	%rd3256, %rd3255, 40;
	or.b64  	%rd3257, %rd3254, %rd3256;
	ld.local.u8 	%rd3258, [%rd12048+99];
	shl.b64 	%rd3259, %rd3258, 32;
	or.b64  	%rd3260, %rd3257, %rd3259;
	ld.local.u8 	%r2142, [%rd12048+100];
	mul.wide.u32 	%rd3261, %r2142, 16777216;
	or.b64  	%rd3262, %rd3260, %rd3261;
	ld.local.u8 	%r2143, [%rd12048+101];
	mul.wide.u32 	%rd3263, %r2143, 65536;
	or.b64  	%rd3264, %rd3262, %rd3263;
	ld.local.u8 	%r2144, [%rd12048+102];
	mul.wide.u32 	%rd3265, %r2144, 256;
	or.b64  	%rd3266, %rd3264, %rd3265;
	ld.local.u8 	%rd3267, [%rd12048+103];
	or.b64  	%rd12035, %rd3266, %rd3267;
	ld.local.u8 	%rd3268, [%rd12048+104];
	shl.b64 	%rd3269, %rd3268, 56;
	ld.local.u8 	%rd3270, [%rd12048+105];
	shl.b64 	%rd3271, %rd3270, 48;
	or.b64  	%rd3272, %rd3271, %rd3269;
	ld.local.u8 	%rd3273, [%rd12048+106];
	shl.b64 	%rd3274, %rd3273, 40;
	or.b64  	%rd3275, %rd3272, %rd3274;
	ld.local.u8 	%rd3276, [%rd12048+107];
	shl.b64 	%rd3277, %rd3276, 32;
	or.b64  	%rd3278, %rd3275, %rd3277;
	ld.local.u8 	%r2145, [%rd12048+108];
	mul.wide.u32 	%rd3279, %r2145, 16777216;
	or.b64  	%rd3280, %rd3278, %rd3279;
	ld.local.u8 	%r2146, [%rd12048+109];
	mul.wide.u32 	%rd3281, %r2146, 65536;
	or.b64  	%rd3282, %rd3280, %rd3281;
	ld.local.u8 	%r2147, [%rd12048+110];
	mul.wide.u32 	%rd3283, %r2147, 256;
	or.b64  	%rd3284, %rd3282, %rd3283;
	ld.local.u8 	%rd3285, [%rd12048+111];
	or.b64  	%rd12034, %rd3284, %rd3285;
	ld.local.u8 	%rd3286, [%rd12048+112];
	shl.b64 	%rd3287, %rd3286, 56;
	ld.local.u8 	%rd3288, [%rd12048+113];
	shl.b64 	%rd3289, %rd3288, 48;
	or.b64  	%rd3290, %rd3289, %rd3287;
	ld.local.u8 	%rd3291, [%rd12048+114];
	shl.b64 	%rd3292, %rd3291, 40;
	or.b64  	%rd3293, %rd3290, %rd3292;
	ld.local.u8 	%rd3294, [%rd12048+115];
	shl.b64 	%rd3295, %rd3294, 32;
	or.b64  	%rd3296, %rd3293, %rd3295;
	ld.local.u8 	%r2148, [%rd12048+116];
	mul.wide.u32 	%rd3297, %r2148, 16777216;
	or.b64  	%rd3298, %rd3296, %rd3297;
	ld.local.u8 	%r2149, [%rd12048+117];
	mul.wide.u32 	%rd3299, %r2149, 65536;
	or.b64  	%rd3300, %rd3298, %rd3299;
	ld.local.u8 	%r2150, [%rd12048+118];
	mul.wide.u32 	%rd3301, %r2150, 256;
	or.b64  	%rd3302, %rd3300, %rd3301;
	ld.local.u8 	%rd3303, [%rd12048+119];
	or.b64  	%rd12033, %rd3302, %rd3303;
	ld.local.u8 	%rd3304, [%rd12048+120];
	ld.local.u8 	%rd3305, [%rd12048+121];
	ld.local.u8 	%rd3306, [%rd12048+122];
	ld.local.u8 	%rd3307, [%rd12048+123];
	ld.local.u8 	%r2151, [%rd12048+124];
	mul.wide.u32 	%rd3308, %r2151, 16777216;
	ld.local.u8 	%r2152, [%rd12048+125];
	mul.wide.u32 	%rd3309, %r2152, 65536;
	ld.local.u8 	%r2153, [%rd12048+126];
	mul.wide.u32 	%rd3310, %r2153, 256;
	ld.local.u8 	%rd3311, [%rd12048+127];
	shl.b64 	%rd3312, %rd3305, 48;
	shl.b64 	%rd3313, %rd3304, 56;
	shl.b64 	%rd3314, %rd3306, 40;
	or.b64  	%rd3315, %rd3312, %rd3313;
	shl.b64 	%rd3316, %rd3307, 32;
	or.b64  	%rd3317, %rd3315, %rd3314;
	or.b64  	%rd3318, %rd3317, %rd3316;
	or.b64  	%rd3319, %rd3318, %rd3308;
	or.b64  	%rd3320, %rd3319, %rd3309;
	or.b64  	%rd3321, %rd3320, %rd3310;
	or.b64  	%rd12032, %rd3321, %rd3311;
	bra.uni 	$L__BB8_27;

$L__BB8_26:
	ld.local.u64 	%rd3322, [%rd12048];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2154, %temp}, %rd3322;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2155}, %rd3322;
	}
	mov.u32 	%r2156, 291;
	mov.u32 	%r2157, 0;
	prmt.b32 	%r2158, %r2154, %r2157, %r2156;
	prmt.b32 	%r2159, %r2155, %r2157, %r2156;
	mov.b64 	%rd12047, {%r2159, %r2158};
	ld.local.u64 	%rd3323, [%rd12048+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2160, %temp}, %rd3323;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2161}, %rd3323;
	}
	prmt.b32 	%r2162, %r2160, %r2157, %r2156;
	prmt.b32 	%r2163, %r2161, %r2157, %r2156;
	mov.b64 	%rd12046, {%r2163, %r2162};
	ld.local.u64 	%rd3324, [%rd12048+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2164, %temp}, %rd3324;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2165}, %rd3324;
	}
	prmt.b32 	%r2166, %r2164, %r2157, %r2156;
	prmt.b32 	%r2167, %r2165, %r2157, %r2156;
	mov.b64 	%rd12045, {%r2167, %r2166};
	ld.local.u64 	%rd3325, [%rd12048+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2168, %temp}, %rd3325;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2169}, %rd3325;
	}
	prmt.b32 	%r2170, %r2168, %r2157, %r2156;
	prmt.b32 	%r2171, %r2169, %r2157, %r2156;
	mov.b64 	%rd12044, {%r2171, %r2170};
	ld.local.u64 	%rd3326, [%rd12048+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2172, %temp}, %rd3326;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2173}, %rd3326;
	}
	prmt.b32 	%r2174, %r2172, %r2157, %r2156;
	prmt.b32 	%r2175, %r2173, %r2157, %r2156;
	mov.b64 	%rd12043, {%r2175, %r2174};
	ld.local.u64 	%rd3327, [%rd12048+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2176, %temp}, %rd3327;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2177}, %rd3327;
	}
	prmt.b32 	%r2178, %r2176, %r2157, %r2156;
	prmt.b32 	%r2179, %r2177, %r2157, %r2156;
	mov.b64 	%rd12042, {%r2179, %r2178};
	ld.local.u64 	%rd3328, [%rd12048+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2180, %temp}, %rd3328;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2181}, %rd3328;
	}
	prmt.b32 	%r2182, %r2180, %r2157, %r2156;
	prmt.b32 	%r2183, %r2181, %r2157, %r2156;
	mov.b64 	%rd12041, {%r2183, %r2182};
	ld.local.u64 	%rd3329, [%rd12048+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2184, %temp}, %rd3329;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2185}, %rd3329;
	}
	prmt.b32 	%r2186, %r2184, %r2157, %r2156;
	prmt.b32 	%r2187, %r2185, %r2157, %r2156;
	mov.b64 	%rd12040, {%r2187, %r2186};
	ld.local.u64 	%rd3330, [%rd12048+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2188, %temp}, %rd3330;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2189}, %rd3330;
	}
	prmt.b32 	%r2190, %r2188, %r2157, %r2156;
	prmt.b32 	%r2191, %r2189, %r2157, %r2156;
	mov.b64 	%rd12039, {%r2191, %r2190};
	ld.local.u64 	%rd3331, [%rd12048+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2192, %temp}, %rd3331;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2193}, %rd3331;
	}
	prmt.b32 	%r2194, %r2192, %r2157, %r2156;
	prmt.b32 	%r2195, %r2193, %r2157, %r2156;
	mov.b64 	%rd12038, {%r2195, %r2194};
	ld.local.u64 	%rd3332, [%rd12048+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2196, %temp}, %rd3332;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2197}, %rd3332;
	}
	prmt.b32 	%r2198, %r2196, %r2157, %r2156;
	prmt.b32 	%r2199, %r2197, %r2157, %r2156;
	mov.b64 	%rd12037, {%r2199, %r2198};
	ld.local.u64 	%rd3333, [%rd12048+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2200, %temp}, %rd3333;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2201}, %rd3333;
	}
	prmt.b32 	%r2202, %r2200, %r2157, %r2156;
	prmt.b32 	%r2203, %r2201, %r2157, %r2156;
	mov.b64 	%rd12036, {%r2203, %r2202};
	ld.local.u64 	%rd3334, [%rd12048+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2204, %temp}, %rd3334;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2205}, %rd3334;
	}
	prmt.b32 	%r2206, %r2204, %r2157, %r2156;
	prmt.b32 	%r2207, %r2205, %r2157, %r2156;
	mov.b64 	%rd12035, {%r2207, %r2206};
	ld.local.u64 	%rd3335, [%rd12048+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2208, %temp}, %rd3335;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2209}, %rd3335;
	}
	prmt.b32 	%r2210, %r2208, %r2157, %r2156;
	prmt.b32 	%r2211, %r2209, %r2157, %r2156;
	mov.b64 	%rd12034, {%r2211, %r2210};
	ld.local.u64 	%rd3336, [%rd12048+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2212, %temp}, %rd3336;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2213}, %rd3336;
	}
	prmt.b32 	%r2214, %r2212, %r2157, %r2156;
	prmt.b32 	%r2215, %r2213, %r2157, %r2156;
	mov.b64 	%rd12033, {%r2215, %r2214};
	ld.local.u64 	%rd3337, [%rd12048+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2216, %temp}, %rd3337;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2217}, %rd3337;
	}
	prmt.b32 	%r2218, %r2216, %r2157, %r2156;
	prmt.b32 	%r2219, %r2217, %r2157, %r2156;
	mov.b64 	%rd12032, {%r2219, %r2218};

$L__BB8_27:
	ld.local.u64 	%rd3338, [%rd4+64];
	add.s64 	%rd3339, %rd12047, %rd3338;
	ld.local.u64 	%rd3340, [%rd4+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2220,%dummy}, %rd3340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2221}, %rd3340;
	}
	shf.r.wrap.b32 	%r2222, %r2221, %r2220, 14;
	shf.r.wrap.b32 	%r2223, %r2220, %r2221, 14;
	mov.b64 	%rd3341, {%r2223, %r2222};
	shf.r.wrap.b32 	%r2224, %r2221, %r2220, 18;
	shf.r.wrap.b32 	%r2225, %r2220, %r2221, 18;
	mov.b64 	%rd3342, {%r2225, %r2224};
	xor.b64  	%rd3343, %rd3341, %rd3342;
	shf.l.wrap.b32 	%r2226, %r2220, %r2221, 23;
	shf.l.wrap.b32 	%r2227, %r2221, %r2220, 23;
	mov.b64 	%rd3344, {%r2227, %r2226};
	xor.b64  	%rd3345, %rd3343, %rd3344;
	add.s64 	%rd3346, %rd3339, %rd3345;
	ld.local.u64 	%rd3347, [%rd4+56];
	ld.local.u64 	%rd3348, [%rd4+48];
	xor.b64  	%rd3349, %rd3347, %rd3348;
	and.b64  	%rd3350, %rd3349, %rd3340;
	xor.b64  	%rd3351, %rd3350, %rd3347;
	add.s64 	%rd3352, %rd3346, %rd3351;
	add.s64 	%rd3353, %rd3352, 4794697086780616226;
	ld.local.u64 	%rd3354, [%rd4+32];
	add.s64 	%rd3355, %rd3353, %rd3354;
	ld.local.u64 	%rd3356, [%rd4+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2228,%dummy}, %rd3356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2229}, %rd3356;
	}
	shf.r.wrap.b32 	%r2230, %r2229, %r2228, 28;
	shf.r.wrap.b32 	%r2231, %r2228, %r2229, 28;
	mov.b64 	%rd3357, {%r2231, %r2230};
	shf.l.wrap.b32 	%r2232, %r2228, %r2229, 30;
	shf.l.wrap.b32 	%r2233, %r2229, %r2228, 30;
	mov.b64 	%rd3358, {%r2233, %r2232};
	xor.b64  	%rd3359, %rd3357, %rd3358;
	shf.l.wrap.b32 	%r2234, %r2228, %r2229, 25;
	shf.l.wrap.b32 	%r2235, %r2229, %r2228, 25;
	mov.b64 	%rd3360, {%r2235, %r2234};
	xor.b64  	%rd3361, %rd3359, %rd3360;
	ld.local.u64 	%rd3362, [%rd4+16];
	and.b64  	%rd3363, %rd3362, %rd3356;
	or.b64  	%rd3364, %rd3362, %rd3356;
	ld.local.u64 	%rd3365, [%rd4+24];
	and.b64  	%rd3366, %rd3365, %rd3364;
	or.b64  	%rd3367, %rd3366, %rd3363;
	add.s64 	%rd3368, %rd3367, %rd3361;
	add.s64 	%rd3369, %rd3368, %rd3353;
	add.s64 	%rd3370, %rd12046, %rd3347;
	xor.b64  	%rd3371, %rd3348, %rd3340;
	and.b64  	%rd3372, %rd3355, %rd3371;
	xor.b64  	%rd3373, %rd3372, %rd3348;
	add.s64 	%rd3374, %rd3370, %rd3373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2236,%dummy}, %rd3355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2237}, %rd3355;
	}
	shf.r.wrap.b32 	%r2238, %r2237, %r2236, 14;
	shf.r.wrap.b32 	%r2239, %r2236, %r2237, 14;
	mov.b64 	%rd3375, {%r2239, %r2238};
	shf.r.wrap.b32 	%r2240, %r2237, %r2236, 18;
	shf.r.wrap.b32 	%r2241, %r2236, %r2237, 18;
	mov.b64 	%rd3376, {%r2241, %r2240};
	xor.b64  	%rd3377, %rd3375, %rd3376;
	shf.l.wrap.b32 	%r2242, %r2236, %r2237, 23;
	shf.l.wrap.b32 	%r2243, %r2237, %r2236, 23;
	mov.b64 	%rd3378, {%r2243, %r2242};
	xor.b64  	%rd3379, %rd3377, %rd3378;
	add.s64 	%rd3380, %rd3374, %rd3379;
	add.s64 	%rd3381, %rd3380, 8158064640168781261;
	add.s64 	%rd3382, %rd3381, %rd3365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2244,%dummy}, %rd3369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2245}, %rd3369;
	}
	shf.r.wrap.b32 	%r2246, %r2245, %r2244, 28;
	shf.r.wrap.b32 	%r2247, %r2244, %r2245, 28;
	mov.b64 	%rd3383, {%r2247, %r2246};
	shf.l.wrap.b32 	%r2248, %r2244, %r2245, 30;
	shf.l.wrap.b32 	%r2249, %r2245, %r2244, 30;
	mov.b64 	%rd3384, {%r2249, %r2248};
	xor.b64  	%rd3385, %rd3383, %rd3384;
	shf.l.wrap.b32 	%r2250, %r2244, %r2245, 25;
	shf.l.wrap.b32 	%r2251, %r2245, %r2244, 25;
	mov.b64 	%rd3386, {%r2251, %r2250};
	xor.b64  	%rd3387, %rd3385, %rd3386;
	and.b64  	%rd3388, %rd3369, %rd3356;
	or.b64  	%rd3389, %rd3369, %rd3356;
	and.b64  	%rd3390, %rd3389, %rd3362;
	or.b64  	%rd3391, %rd3390, %rd3388;
	add.s64 	%rd3392, %rd3391, %rd3387;
	add.s64 	%rd3393, %rd3392, %rd3381;
	add.s64 	%rd3394, %rd12045, %rd3348;
	xor.b64  	%rd3395, %rd3355, %rd3340;
	and.b64  	%rd3396, %rd3382, %rd3395;
	xor.b64  	%rd3397, %rd3396, %rd3340;
	add.s64 	%rd3398, %rd3394, %rd3397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2252,%dummy}, %rd3382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2253}, %rd3382;
	}
	shf.r.wrap.b32 	%r2254, %r2253, %r2252, 14;
	shf.r.wrap.b32 	%r2255, %r2252, %r2253, 14;
	mov.b64 	%rd3399, {%r2255, %r2254};
	shf.r.wrap.b32 	%r2256, %r2253, %r2252, 18;
	shf.r.wrap.b32 	%r2257, %r2252, %r2253, 18;
	mov.b64 	%rd3400, {%r2257, %r2256};
	xor.b64  	%rd3401, %rd3399, %rd3400;
	shf.l.wrap.b32 	%r2258, %r2252, %r2253, 23;
	shf.l.wrap.b32 	%r2259, %r2253, %r2252, 23;
	mov.b64 	%rd3402, {%r2259, %r2258};
	xor.b64  	%rd3403, %rd3401, %rd3402;
	add.s64 	%rd3404, %rd3398, %rd3403;
	add.s64 	%rd3405, %rd3404, -5349999486874862801;
	add.s64 	%rd3406, %rd3405, %rd3362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2260,%dummy}, %rd3393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2261}, %rd3393;
	}
	shf.r.wrap.b32 	%r2262, %r2261, %r2260, 28;
	shf.r.wrap.b32 	%r2263, %r2260, %r2261, 28;
	mov.b64 	%rd3407, {%r2263, %r2262};
	shf.l.wrap.b32 	%r2264, %r2260, %r2261, 30;
	shf.l.wrap.b32 	%r2265, %r2261, %r2260, 30;
	mov.b64 	%rd3408, {%r2265, %r2264};
	xor.b64  	%rd3409, %rd3407, %rd3408;
	shf.l.wrap.b32 	%r2266, %r2260, %r2261, 25;
	shf.l.wrap.b32 	%r2267, %r2261, %r2260, 25;
	mov.b64 	%rd3410, {%r2267, %r2266};
	xor.b64  	%rd3411, %rd3409, %rd3410;
	and.b64  	%rd3412, %rd3393, %rd3369;
	or.b64  	%rd3413, %rd3393, %rd3369;
	and.b64  	%rd3414, %rd3413, %rd3356;
	or.b64  	%rd3415, %rd3414, %rd3412;
	add.s64 	%rd3416, %rd3415, %rd3411;
	add.s64 	%rd3417, %rd3416, %rd3405;
	add.s64 	%rd3418, %rd12044, %rd3340;
	xor.b64  	%rd3419, %rd3382, %rd3355;
	and.b64  	%rd3420, %rd3406, %rd3419;
	xor.b64  	%rd3421, %rd3420, %rd3355;
	add.s64 	%rd3422, %rd3418, %rd3421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2268,%dummy}, %rd3406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2269}, %rd3406;
	}
	shf.r.wrap.b32 	%r2270, %r2269, %r2268, 14;
	shf.r.wrap.b32 	%r2271, %r2268, %r2269, 14;
	mov.b64 	%rd3423, {%r2271, %r2270};
	shf.r.wrap.b32 	%r2272, %r2269, %r2268, 18;
	shf.r.wrap.b32 	%r2273, %r2268, %r2269, 18;
	mov.b64 	%rd3424, {%r2273, %r2272};
	xor.b64  	%rd3425, %rd3423, %rd3424;
	shf.l.wrap.b32 	%r2274, %r2268, %r2269, 23;
	shf.l.wrap.b32 	%r2275, %r2269, %r2268, 23;
	mov.b64 	%rd3426, {%r2275, %r2274};
	xor.b64  	%rd3427, %rd3425, %rd3426;
	add.s64 	%rd3428, %rd3422, %rd3427;
	add.s64 	%rd3429, %rd3428, -1606136188198331460;
	add.s64 	%rd3430, %rd3429, %rd3356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2276,%dummy}, %rd3417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2277}, %rd3417;
	}
	shf.r.wrap.b32 	%r2278, %r2277, %r2276, 28;
	shf.r.wrap.b32 	%r2279, %r2276, %r2277, 28;
	mov.b64 	%rd3431, {%r2279, %r2278};
	shf.l.wrap.b32 	%r2280, %r2276, %r2277, 30;
	shf.l.wrap.b32 	%r2281, %r2277, %r2276, 30;
	mov.b64 	%rd3432, {%r2281, %r2280};
	xor.b64  	%rd3433, %rd3431, %rd3432;
	shf.l.wrap.b32 	%r2282, %r2276, %r2277, 25;
	shf.l.wrap.b32 	%r2283, %r2277, %r2276, 25;
	mov.b64 	%rd3434, {%r2283, %r2282};
	xor.b64  	%rd3435, %rd3433, %rd3434;
	and.b64  	%rd3436, %rd3417, %rd3393;
	or.b64  	%rd3437, %rd3417, %rd3393;
	and.b64  	%rd3438, %rd3437, %rd3369;
	or.b64  	%rd3439, %rd3438, %rd3436;
	add.s64 	%rd3440, %rd3439, %rd3435;
	add.s64 	%rd3441, %rd3440, %rd3429;
	add.s64 	%rd3442, %rd12043, %rd3355;
	xor.b64  	%rd3443, %rd3406, %rd3382;
	and.b64  	%rd3444, %rd3430, %rd3443;
	xor.b64  	%rd3445, %rd3444, %rd3382;
	add.s64 	%rd3446, %rd3442, %rd3445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2284,%dummy}, %rd3430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2285}, %rd3430;
	}
	shf.r.wrap.b32 	%r2286, %r2285, %r2284, 14;
	shf.r.wrap.b32 	%r2287, %r2284, %r2285, 14;
	mov.b64 	%rd3447, {%r2287, %r2286};
	shf.r.wrap.b32 	%r2288, %r2285, %r2284, 18;
	shf.r.wrap.b32 	%r2289, %r2284, %r2285, 18;
	mov.b64 	%rd3448, {%r2289, %r2288};
	xor.b64  	%rd3449, %rd3447, %rd3448;
	shf.l.wrap.b32 	%r2290, %r2284, %r2285, 23;
	shf.l.wrap.b32 	%r2291, %r2285, %r2284, 23;
	mov.b64 	%rd3450, {%r2291, %r2290};
	xor.b64  	%rd3451, %rd3449, %rd3450;
	add.s64 	%rd3452, %rd3446, %rd3451;
	add.s64 	%rd3453, %rd3452, 4131703408338449720;
	add.s64 	%rd3454, %rd3453, %rd3369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2292,%dummy}, %rd3441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2293}, %rd3441;
	}
	shf.r.wrap.b32 	%r2294, %r2293, %r2292, 28;
	shf.r.wrap.b32 	%r2295, %r2292, %r2293, 28;
	mov.b64 	%rd3455, {%r2295, %r2294};
	shf.l.wrap.b32 	%r2296, %r2292, %r2293, 30;
	shf.l.wrap.b32 	%r2297, %r2293, %r2292, 30;
	mov.b64 	%rd3456, {%r2297, %r2296};
	xor.b64  	%rd3457, %rd3455, %rd3456;
	shf.l.wrap.b32 	%r2298, %r2292, %r2293, 25;
	shf.l.wrap.b32 	%r2299, %r2293, %r2292, 25;
	mov.b64 	%rd3458, {%r2299, %r2298};
	xor.b64  	%rd3459, %rd3457, %rd3458;
	and.b64  	%rd3460, %rd3441, %rd3417;
	or.b64  	%rd3461, %rd3441, %rd3417;
	and.b64  	%rd3462, %rd3461, %rd3393;
	or.b64  	%rd3463, %rd3462, %rd3460;
	add.s64 	%rd3464, %rd3463, %rd3459;
	add.s64 	%rd3465, %rd3464, %rd3453;
	add.s64 	%rd3466, %rd12042, %rd3382;
	xor.b64  	%rd3467, %rd3430, %rd3406;
	and.b64  	%rd3468, %rd3454, %rd3467;
	xor.b64  	%rd3469, %rd3468, %rd3406;
	add.s64 	%rd3470, %rd3466, %rd3469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2300,%dummy}, %rd3454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2301}, %rd3454;
	}
	shf.r.wrap.b32 	%r2302, %r2301, %r2300, 14;
	shf.r.wrap.b32 	%r2303, %r2300, %r2301, 14;
	mov.b64 	%rd3471, {%r2303, %r2302};
	shf.r.wrap.b32 	%r2304, %r2301, %r2300, 18;
	shf.r.wrap.b32 	%r2305, %r2300, %r2301, 18;
	mov.b64 	%rd3472, {%r2305, %r2304};
	xor.b64  	%rd3473, %rd3471, %rd3472;
	shf.l.wrap.b32 	%r2306, %r2300, %r2301, 23;
	shf.l.wrap.b32 	%r2307, %r2301, %r2300, 23;
	mov.b64 	%rd3474, {%r2307, %r2306};
	xor.b64  	%rd3475, %rd3473, %rd3474;
	add.s64 	%rd3476, %rd3470, %rd3475;
	add.s64 	%rd3477, %rd3476, 6480981068601479193;
	add.s64 	%rd3478, %rd3477, %rd3393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2308,%dummy}, %rd3465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2309}, %rd3465;
	}
	shf.r.wrap.b32 	%r2310, %r2309, %r2308, 28;
	shf.r.wrap.b32 	%r2311, %r2308, %r2309, 28;
	mov.b64 	%rd3479, {%r2311, %r2310};
	shf.l.wrap.b32 	%r2312, %r2308, %r2309, 30;
	shf.l.wrap.b32 	%r2313, %r2309, %r2308, 30;
	mov.b64 	%rd3480, {%r2313, %r2312};
	xor.b64  	%rd3481, %rd3479, %rd3480;
	shf.l.wrap.b32 	%r2314, %r2308, %r2309, 25;
	shf.l.wrap.b32 	%r2315, %r2309, %r2308, 25;
	mov.b64 	%rd3482, {%r2315, %r2314};
	xor.b64  	%rd3483, %rd3481, %rd3482;
	and.b64  	%rd3484, %rd3465, %rd3441;
	or.b64  	%rd3485, %rd3465, %rd3441;
	and.b64  	%rd3486, %rd3485, %rd3417;
	or.b64  	%rd3487, %rd3486, %rd3484;
	add.s64 	%rd3488, %rd3487, %rd3483;
	add.s64 	%rd3489, %rd3488, %rd3477;
	add.s64 	%rd3490, %rd12041, %rd3406;
	xor.b64  	%rd3491, %rd3454, %rd3430;
	and.b64  	%rd3492, %rd3478, %rd3491;
	xor.b64  	%rd3493, %rd3492, %rd3430;
	add.s64 	%rd3494, %rd3490, %rd3493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2316,%dummy}, %rd3478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2317}, %rd3478;
	}
	shf.r.wrap.b32 	%r2318, %r2317, %r2316, 14;
	shf.r.wrap.b32 	%r2319, %r2316, %r2317, 14;
	mov.b64 	%rd3495, {%r2319, %r2318};
	shf.r.wrap.b32 	%r2320, %r2317, %r2316, 18;
	shf.r.wrap.b32 	%r2321, %r2316, %r2317, 18;
	mov.b64 	%rd3496, {%r2321, %r2320};
	xor.b64  	%rd3497, %rd3495, %rd3496;
	shf.l.wrap.b32 	%r2322, %r2316, %r2317, 23;
	shf.l.wrap.b32 	%r2323, %r2317, %r2316, 23;
	mov.b64 	%rd3498, {%r2323, %r2322};
	xor.b64  	%rd3499, %rd3497, %rd3498;
	add.s64 	%rd3500, %rd3494, %rd3499;
	add.s64 	%rd3501, %rd3500, -7908458776815382629;
	add.s64 	%rd3502, %rd3501, %rd3417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2324,%dummy}, %rd3489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2325}, %rd3489;
	}
	shf.r.wrap.b32 	%r2326, %r2325, %r2324, 28;
	shf.r.wrap.b32 	%r2327, %r2324, %r2325, 28;
	mov.b64 	%rd3503, {%r2327, %r2326};
	shf.l.wrap.b32 	%r2328, %r2324, %r2325, 30;
	shf.l.wrap.b32 	%r2329, %r2325, %r2324, 30;
	mov.b64 	%rd3504, {%r2329, %r2328};
	xor.b64  	%rd3505, %rd3503, %rd3504;
	shf.l.wrap.b32 	%r2330, %r2324, %r2325, 25;
	shf.l.wrap.b32 	%r2331, %r2325, %r2324, 25;
	mov.b64 	%rd3506, {%r2331, %r2330};
	xor.b64  	%rd3507, %rd3505, %rd3506;
	and.b64  	%rd3508, %rd3489, %rd3465;
	or.b64  	%rd3509, %rd3489, %rd3465;
	and.b64  	%rd3510, %rd3509, %rd3441;
	or.b64  	%rd3511, %rd3510, %rd3508;
	add.s64 	%rd3512, %rd3511, %rd3507;
	add.s64 	%rd3513, %rd3512, %rd3501;
	add.s64 	%rd3514, %rd12040, %rd3430;
	xor.b64  	%rd3515, %rd3478, %rd3454;
	and.b64  	%rd3516, %rd3502, %rd3515;
	xor.b64  	%rd3517, %rd3516, %rd3454;
	add.s64 	%rd3518, %rd3514, %rd3517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2332,%dummy}, %rd3502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2333}, %rd3502;
	}
	shf.r.wrap.b32 	%r2334, %r2333, %r2332, 14;
	shf.r.wrap.b32 	%r2335, %r2332, %r2333, 14;
	mov.b64 	%rd3519, {%r2335, %r2334};
	shf.r.wrap.b32 	%r2336, %r2333, %r2332, 18;
	shf.r.wrap.b32 	%r2337, %r2332, %r2333, 18;
	mov.b64 	%rd3520, {%r2337, %r2336};
	xor.b64  	%rd3521, %rd3519, %rd3520;
	shf.l.wrap.b32 	%r2338, %r2332, %r2333, 23;
	shf.l.wrap.b32 	%r2339, %r2333, %r2332, 23;
	mov.b64 	%rd3522, {%r2339, %r2338};
	xor.b64  	%rd3523, %rd3521, %rd3522;
	add.s64 	%rd3524, %rd3518, %rd3523;
	add.s64 	%rd3525, %rd3524, -6116909921290321640;
	add.s64 	%rd3526, %rd3525, %rd3441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2340,%dummy}, %rd3513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2341}, %rd3513;
	}
	shf.r.wrap.b32 	%r2342, %r2341, %r2340, 28;
	shf.r.wrap.b32 	%r2343, %r2340, %r2341, 28;
	mov.b64 	%rd3527, {%r2343, %r2342};
	shf.l.wrap.b32 	%r2344, %r2340, %r2341, 30;
	shf.l.wrap.b32 	%r2345, %r2341, %r2340, 30;
	mov.b64 	%rd3528, {%r2345, %r2344};
	xor.b64  	%rd3529, %rd3527, %rd3528;
	shf.l.wrap.b32 	%r2346, %r2340, %r2341, 25;
	shf.l.wrap.b32 	%r2347, %r2341, %r2340, 25;
	mov.b64 	%rd3530, {%r2347, %r2346};
	xor.b64  	%rd3531, %rd3529, %rd3530;
	and.b64  	%rd3532, %rd3513, %rd3489;
	or.b64  	%rd3533, %rd3513, %rd3489;
	and.b64  	%rd3534, %rd3533, %rd3465;
	or.b64  	%rd3535, %rd3534, %rd3532;
	add.s64 	%rd3536, %rd3535, %rd3531;
	add.s64 	%rd3537, %rd3536, %rd3525;
	add.s64 	%rd3538, %rd12039, %rd3454;
	xor.b64  	%rd3539, %rd3502, %rd3478;
	and.b64  	%rd3540, %rd3526, %rd3539;
	xor.b64  	%rd3541, %rd3540, %rd3478;
	add.s64 	%rd3542, %rd3538, %rd3541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2348,%dummy}, %rd3526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2349}, %rd3526;
	}
	shf.r.wrap.b32 	%r2350, %r2349, %r2348, 14;
	shf.r.wrap.b32 	%r2351, %r2348, %r2349, 14;
	mov.b64 	%rd3543, {%r2351, %r2350};
	shf.r.wrap.b32 	%r2352, %r2349, %r2348, 18;
	shf.r.wrap.b32 	%r2353, %r2348, %r2349, 18;
	mov.b64 	%rd3544, {%r2353, %r2352};
	xor.b64  	%rd3545, %rd3543, %rd3544;
	shf.l.wrap.b32 	%r2354, %r2348, %r2349, 23;
	shf.l.wrap.b32 	%r2355, %r2349, %r2348, 23;
	mov.b64 	%rd3546, {%r2355, %r2354};
	xor.b64  	%rd3547, %rd3545, %rd3546;
	add.s64 	%rd3548, %rd3542, %rd3547;
	add.s64 	%rd3549, %rd3548, -2880145864133508542;
	add.s64 	%rd3550, %rd3549, %rd3465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2356,%dummy}, %rd3537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2357}, %rd3537;
	}
	shf.r.wrap.b32 	%r2358, %r2357, %r2356, 28;
	shf.r.wrap.b32 	%r2359, %r2356, %r2357, 28;
	mov.b64 	%rd3551, {%r2359, %r2358};
	shf.l.wrap.b32 	%r2360, %r2356, %r2357, 30;
	shf.l.wrap.b32 	%r2361, %r2357, %r2356, 30;
	mov.b64 	%rd3552, {%r2361, %r2360};
	xor.b64  	%rd3553, %rd3551, %rd3552;
	shf.l.wrap.b32 	%r2362, %r2356, %r2357, 25;
	shf.l.wrap.b32 	%r2363, %r2357, %r2356, 25;
	mov.b64 	%rd3554, {%r2363, %r2362};
	xor.b64  	%rd3555, %rd3553, %rd3554;
	and.b64  	%rd3556, %rd3537, %rd3513;
	or.b64  	%rd3557, %rd3537, %rd3513;
	and.b64  	%rd3558, %rd3557, %rd3489;
	or.b64  	%rd3559, %rd3558, %rd3556;
	add.s64 	%rd3560, %rd3559, %rd3555;
	add.s64 	%rd3561, %rd3560, %rd3549;
	add.s64 	%rd3562, %rd12038, %rd3478;
	xor.b64  	%rd3563, %rd3526, %rd3502;
	and.b64  	%rd3564, %rd3550, %rd3563;
	xor.b64  	%rd3565, %rd3564, %rd3502;
	add.s64 	%rd3566, %rd3562, %rd3565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2364,%dummy}, %rd3550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2365}, %rd3550;
	}
	shf.r.wrap.b32 	%r2366, %r2365, %r2364, 14;
	shf.r.wrap.b32 	%r2367, %r2364, %r2365, 14;
	mov.b64 	%rd3567, {%r2367, %r2366};
	shf.r.wrap.b32 	%r2368, %r2365, %r2364, 18;
	shf.r.wrap.b32 	%r2369, %r2364, %r2365, 18;
	mov.b64 	%rd3568, {%r2369, %r2368};
	xor.b64  	%rd3569, %rd3567, %rd3568;
	shf.l.wrap.b32 	%r2370, %r2364, %r2365, 23;
	shf.l.wrap.b32 	%r2371, %r2365, %r2364, 23;
	mov.b64 	%rd3570, {%r2371, %r2370};
	xor.b64  	%rd3571, %rd3569, %rd3570;
	add.s64 	%rd3572, %rd3566, %rd3571;
	add.s64 	%rd3573, %rd3572, 1334009975649890238;
	add.s64 	%rd3574, %rd3573, %rd3489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2372,%dummy}, %rd3561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2373}, %rd3561;
	}
	shf.r.wrap.b32 	%r2374, %r2373, %r2372, 28;
	shf.r.wrap.b32 	%r2375, %r2372, %r2373, 28;
	mov.b64 	%rd3575, {%r2375, %r2374};
	shf.l.wrap.b32 	%r2376, %r2372, %r2373, 30;
	shf.l.wrap.b32 	%r2377, %r2373, %r2372, 30;
	mov.b64 	%rd3576, {%r2377, %r2376};
	xor.b64  	%rd3577, %rd3575, %rd3576;
	shf.l.wrap.b32 	%r2378, %r2372, %r2373, 25;
	shf.l.wrap.b32 	%r2379, %r2373, %r2372, 25;
	mov.b64 	%rd3578, {%r2379, %r2378};
	xor.b64  	%rd3579, %rd3577, %rd3578;
	and.b64  	%rd3580, %rd3561, %rd3537;
	or.b64  	%rd3581, %rd3561, %rd3537;
	and.b64  	%rd3582, %rd3581, %rd3513;
	or.b64  	%rd3583, %rd3582, %rd3580;
	add.s64 	%rd3584, %rd3583, %rd3579;
	add.s64 	%rd3585, %rd3584, %rd3573;
	add.s64 	%rd3586, %rd12037, %rd3502;
	xor.b64  	%rd3587, %rd3550, %rd3526;
	and.b64  	%rd3588, %rd3574, %rd3587;
	xor.b64  	%rd3589, %rd3588, %rd3526;
	add.s64 	%rd3590, %rd3586, %rd3589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2380,%dummy}, %rd3574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2381}, %rd3574;
	}
	shf.r.wrap.b32 	%r2382, %r2381, %r2380, 14;
	shf.r.wrap.b32 	%r2383, %r2380, %r2381, 14;
	mov.b64 	%rd3591, {%r2383, %r2382};
	shf.r.wrap.b32 	%r2384, %r2381, %r2380, 18;
	shf.r.wrap.b32 	%r2385, %r2380, %r2381, 18;
	mov.b64 	%rd3592, {%r2385, %r2384};
	xor.b64  	%rd3593, %rd3591, %rd3592;
	shf.l.wrap.b32 	%r2386, %r2380, %r2381, 23;
	shf.l.wrap.b32 	%r2387, %r2381, %r2380, 23;
	mov.b64 	%rd3594, {%r2387, %r2386};
	xor.b64  	%rd3595, %rd3593, %rd3594;
	add.s64 	%rd3596, %rd3590, %rd3595;
	add.s64 	%rd3597, %rd3596, 2608012711638119052;
	add.s64 	%rd3598, %rd3597, %rd3513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2388,%dummy}, %rd3585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2389}, %rd3585;
	}
	shf.r.wrap.b32 	%r2390, %r2389, %r2388, 28;
	shf.r.wrap.b32 	%r2391, %r2388, %r2389, 28;
	mov.b64 	%rd3599, {%r2391, %r2390};
	shf.l.wrap.b32 	%r2392, %r2388, %r2389, 30;
	shf.l.wrap.b32 	%r2393, %r2389, %r2388, 30;
	mov.b64 	%rd3600, {%r2393, %r2392};
	xor.b64  	%rd3601, %rd3599, %rd3600;
	shf.l.wrap.b32 	%r2394, %r2388, %r2389, 25;
	shf.l.wrap.b32 	%r2395, %r2389, %r2388, 25;
	mov.b64 	%rd3602, {%r2395, %r2394};
	xor.b64  	%rd3603, %rd3601, %rd3602;
	and.b64  	%rd3604, %rd3585, %rd3561;
	or.b64  	%rd3605, %rd3585, %rd3561;
	and.b64  	%rd3606, %rd3605, %rd3537;
	or.b64  	%rd3607, %rd3606, %rd3604;
	add.s64 	%rd3608, %rd3607, %rd3603;
	add.s64 	%rd3609, %rd3608, %rd3597;
	add.s64 	%rd3610, %rd12036, %rd3526;
	xor.b64  	%rd3611, %rd3574, %rd3550;
	and.b64  	%rd3612, %rd3598, %rd3611;
	xor.b64  	%rd3613, %rd3612, %rd3550;
	add.s64 	%rd3614, %rd3610, %rd3613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2396,%dummy}, %rd3598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2397}, %rd3598;
	}
	shf.r.wrap.b32 	%r2398, %r2397, %r2396, 14;
	shf.r.wrap.b32 	%r2399, %r2396, %r2397, 14;
	mov.b64 	%rd3615, {%r2399, %r2398};
	shf.r.wrap.b32 	%r2400, %r2397, %r2396, 18;
	shf.r.wrap.b32 	%r2401, %r2396, %r2397, 18;
	mov.b64 	%rd3616, {%r2401, %r2400};
	xor.b64  	%rd3617, %rd3615, %rd3616;
	shf.l.wrap.b32 	%r2402, %r2396, %r2397, 23;
	shf.l.wrap.b32 	%r2403, %r2397, %r2396, 23;
	mov.b64 	%rd3618, {%r2403, %r2402};
	xor.b64  	%rd3619, %rd3617, %rd3618;
	add.s64 	%rd3620, %rd3614, %rd3619;
	add.s64 	%rd3621, %rd3620, 6128411473006802146;
	add.s64 	%rd3622, %rd3621, %rd3537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2404,%dummy}, %rd3609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2405}, %rd3609;
	}
	shf.r.wrap.b32 	%r2406, %r2405, %r2404, 28;
	shf.r.wrap.b32 	%r2407, %r2404, %r2405, 28;
	mov.b64 	%rd3623, {%r2407, %r2406};
	shf.l.wrap.b32 	%r2408, %r2404, %r2405, 30;
	shf.l.wrap.b32 	%r2409, %r2405, %r2404, 30;
	mov.b64 	%rd3624, {%r2409, %r2408};
	xor.b64  	%rd3625, %rd3623, %rd3624;
	shf.l.wrap.b32 	%r2410, %r2404, %r2405, 25;
	shf.l.wrap.b32 	%r2411, %r2405, %r2404, 25;
	mov.b64 	%rd3626, {%r2411, %r2410};
	xor.b64  	%rd3627, %rd3625, %rd3626;
	and.b64  	%rd3628, %rd3609, %rd3585;
	or.b64  	%rd3629, %rd3609, %rd3585;
	and.b64  	%rd3630, %rd3629, %rd3561;
	or.b64  	%rd3631, %rd3630, %rd3628;
	add.s64 	%rd3632, %rd3631, %rd3627;
	add.s64 	%rd3633, %rd3632, %rd3621;
	add.s64 	%rd3634, %rd12035, %rd3550;
	xor.b64  	%rd3635, %rd3598, %rd3574;
	and.b64  	%rd3636, %rd3622, %rd3635;
	xor.b64  	%rd3637, %rd3636, %rd3574;
	add.s64 	%rd3638, %rd3634, %rd3637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2412,%dummy}, %rd3622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2413}, %rd3622;
	}
	shf.r.wrap.b32 	%r2414, %r2413, %r2412, 14;
	shf.r.wrap.b32 	%r2415, %r2412, %r2413, 14;
	mov.b64 	%rd3639, {%r2415, %r2414};
	shf.r.wrap.b32 	%r2416, %r2413, %r2412, 18;
	shf.r.wrap.b32 	%r2417, %r2412, %r2413, 18;
	mov.b64 	%rd3640, {%r2417, %r2416};
	xor.b64  	%rd3641, %rd3639, %rd3640;
	shf.l.wrap.b32 	%r2418, %r2412, %r2413, 23;
	shf.l.wrap.b32 	%r2419, %r2413, %r2412, 23;
	mov.b64 	%rd3642, {%r2419, %r2418};
	xor.b64  	%rd3643, %rd3641, %rd3642;
	add.s64 	%rd3644, %rd3638, %rd3643;
	add.s64 	%rd3645, %rd3644, 8268148722764581231;
	add.s64 	%rd3646, %rd3645, %rd3561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2420,%dummy}, %rd3633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2421}, %rd3633;
	}
	shf.r.wrap.b32 	%r2422, %r2421, %r2420, 28;
	shf.r.wrap.b32 	%r2423, %r2420, %r2421, 28;
	mov.b64 	%rd3647, {%r2423, %r2422};
	shf.l.wrap.b32 	%r2424, %r2420, %r2421, 30;
	shf.l.wrap.b32 	%r2425, %r2421, %r2420, 30;
	mov.b64 	%rd3648, {%r2425, %r2424};
	xor.b64  	%rd3649, %rd3647, %rd3648;
	shf.l.wrap.b32 	%r2426, %r2420, %r2421, 25;
	shf.l.wrap.b32 	%r2427, %r2421, %r2420, 25;
	mov.b64 	%rd3650, {%r2427, %r2426};
	xor.b64  	%rd3651, %rd3649, %rd3650;
	and.b64  	%rd3652, %rd3633, %rd3609;
	or.b64  	%rd3653, %rd3633, %rd3609;
	and.b64  	%rd3654, %rd3653, %rd3585;
	or.b64  	%rd3655, %rd3654, %rd3652;
	add.s64 	%rd3656, %rd3655, %rd3651;
	add.s64 	%rd3657, %rd3656, %rd3645;
	add.s64 	%rd3658, %rd12034, %rd3574;
	xor.b64  	%rd3659, %rd3622, %rd3598;
	and.b64  	%rd3660, %rd3646, %rd3659;
	xor.b64  	%rd3661, %rd3660, %rd3598;
	add.s64 	%rd3662, %rd3658, %rd3661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2428,%dummy}, %rd3646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2429}, %rd3646;
	}
	shf.r.wrap.b32 	%r2430, %r2429, %r2428, 14;
	shf.r.wrap.b32 	%r2431, %r2428, %r2429, 14;
	mov.b64 	%rd3663, {%r2431, %r2430};
	shf.r.wrap.b32 	%r2432, %r2429, %r2428, 18;
	shf.r.wrap.b32 	%r2433, %r2428, %r2429, 18;
	mov.b64 	%rd3664, {%r2433, %r2432};
	xor.b64  	%rd3665, %rd3663, %rd3664;
	shf.l.wrap.b32 	%r2434, %r2428, %r2429, 23;
	shf.l.wrap.b32 	%r2435, %r2429, %r2428, 23;
	mov.b64 	%rd3666, {%r2435, %r2434};
	xor.b64  	%rd3667, %rd3665, %rd3666;
	add.s64 	%rd3668, %rd3662, %rd3667;
	add.s64 	%rd3669, %rd3668, -9160688886553864527;
	add.s64 	%rd3670, %rd3669, %rd3585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2436,%dummy}, %rd3657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2437}, %rd3657;
	}
	shf.r.wrap.b32 	%r2438, %r2437, %r2436, 28;
	shf.r.wrap.b32 	%r2439, %r2436, %r2437, 28;
	mov.b64 	%rd3671, {%r2439, %r2438};
	shf.l.wrap.b32 	%r2440, %r2436, %r2437, 30;
	shf.l.wrap.b32 	%r2441, %r2437, %r2436, 30;
	mov.b64 	%rd3672, {%r2441, %r2440};
	xor.b64  	%rd3673, %rd3671, %rd3672;
	shf.l.wrap.b32 	%r2442, %r2436, %r2437, 25;
	shf.l.wrap.b32 	%r2443, %r2437, %r2436, 25;
	mov.b64 	%rd3674, {%r2443, %r2442};
	xor.b64  	%rd3675, %rd3673, %rd3674;
	and.b64  	%rd3676, %rd3657, %rd3633;
	or.b64  	%rd3677, %rd3657, %rd3633;
	and.b64  	%rd3678, %rd3677, %rd3609;
	or.b64  	%rd3679, %rd3678, %rd3676;
	add.s64 	%rd3680, %rd3679, %rd3675;
	add.s64 	%rd3681, %rd3680, %rd3669;
	add.s64 	%rd3682, %rd12033, %rd3598;
	xor.b64  	%rd3683, %rd3646, %rd3622;
	and.b64  	%rd3684, %rd3670, %rd3683;
	xor.b64  	%rd3685, %rd3684, %rd3622;
	add.s64 	%rd3686, %rd3682, %rd3685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2444,%dummy}, %rd3670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2445}, %rd3670;
	}
	shf.r.wrap.b32 	%r2446, %r2445, %r2444, 14;
	shf.r.wrap.b32 	%r2447, %r2444, %r2445, 14;
	mov.b64 	%rd3687, {%r2447, %r2446};
	shf.r.wrap.b32 	%r2448, %r2445, %r2444, 18;
	shf.r.wrap.b32 	%r2449, %r2444, %r2445, 18;
	mov.b64 	%rd3688, {%r2449, %r2448};
	xor.b64  	%rd3689, %rd3687, %rd3688;
	shf.l.wrap.b32 	%r2450, %r2444, %r2445, 23;
	shf.l.wrap.b32 	%r2451, %r2445, %r2444, 23;
	mov.b64 	%rd3690, {%r2451, %r2450};
	xor.b64  	%rd3691, %rd3689, %rd3690;
	add.s64 	%rd3692, %rd3686, %rd3691;
	add.s64 	%rd3693, %rd3692, -7215885187991268811;
	add.s64 	%rd3694, %rd3693, %rd3609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2452,%dummy}, %rd3681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2453}, %rd3681;
	}
	shf.r.wrap.b32 	%r2454, %r2453, %r2452, 28;
	shf.r.wrap.b32 	%r2455, %r2452, %r2453, 28;
	mov.b64 	%rd3695, {%r2455, %r2454};
	shf.l.wrap.b32 	%r2456, %r2452, %r2453, 30;
	shf.l.wrap.b32 	%r2457, %r2453, %r2452, 30;
	mov.b64 	%rd3696, {%r2457, %r2456};
	xor.b64  	%rd3697, %rd3695, %rd3696;
	shf.l.wrap.b32 	%r2458, %r2452, %r2453, 25;
	shf.l.wrap.b32 	%r2459, %r2453, %r2452, 25;
	mov.b64 	%rd3698, {%r2459, %r2458};
	xor.b64  	%rd3699, %rd3697, %rd3698;
	and.b64  	%rd3700, %rd3681, %rd3657;
	or.b64  	%rd3701, %rd3681, %rd3657;
	and.b64  	%rd3702, %rd3701, %rd3633;
	or.b64  	%rd3703, %rd3702, %rd3700;
	add.s64 	%rd3704, %rd3703, %rd3699;
	add.s64 	%rd3705, %rd3704, %rd3693;
	add.s64 	%rd3706, %rd12032, %rd3622;
	xor.b64  	%rd3707, %rd3670, %rd3646;
	and.b64  	%rd3708, %rd3694, %rd3707;
	xor.b64  	%rd3709, %rd3708, %rd3646;
	add.s64 	%rd3710, %rd3706, %rd3709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2460,%dummy}, %rd3694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2461}, %rd3694;
	}
	shf.r.wrap.b32 	%r2462, %r2461, %r2460, 14;
	shf.r.wrap.b32 	%r2463, %r2460, %r2461, 14;
	mov.b64 	%rd3711, {%r2463, %r2462};
	shf.r.wrap.b32 	%r2464, %r2461, %r2460, 18;
	shf.r.wrap.b32 	%r2465, %r2460, %r2461, 18;
	mov.b64 	%rd3712, {%r2465, %r2464};
	xor.b64  	%rd3713, %rd3711, %rd3712;
	shf.l.wrap.b32 	%r2466, %r2460, %r2461, 23;
	shf.l.wrap.b32 	%r2467, %r2461, %r2460, 23;
	mov.b64 	%rd3714, {%r2467, %r2466};
	xor.b64  	%rd3715, %rd3713, %rd3714;
	add.s64 	%rd3716, %rd3710, %rd3715;
	add.s64 	%rd3717, %rd3716, -4495734319001033068;
	add.s64 	%rd3718, %rd3717, %rd3633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2468,%dummy}, %rd3705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2469}, %rd3705;
	}
	shf.r.wrap.b32 	%r2470, %r2469, %r2468, 28;
	shf.r.wrap.b32 	%r2471, %r2468, %r2469, 28;
	mov.b64 	%rd3719, {%r2471, %r2470};
	shf.l.wrap.b32 	%r2472, %r2468, %r2469, 30;
	shf.l.wrap.b32 	%r2473, %r2469, %r2468, 30;
	mov.b64 	%rd3720, {%r2473, %r2472};
	xor.b64  	%rd3721, %rd3719, %rd3720;
	shf.l.wrap.b32 	%r2474, %r2468, %r2469, 25;
	shf.l.wrap.b32 	%r2475, %r2469, %r2468, 25;
	mov.b64 	%rd3722, {%r2475, %r2474};
	xor.b64  	%rd3723, %rd3721, %rd3722;
	and.b64  	%rd3724, %rd3705, %rd3681;
	or.b64  	%rd3725, %rd3705, %rd3681;
	and.b64  	%rd3726, %rd3725, %rd3657;
	or.b64  	%rd3727, %rd3726, %rd3724;
	add.s64 	%rd3728, %rd3727, %rd3723;
	add.s64 	%rd3729, %rd3728, %rd3717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2476}, %rd12033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2477,%dummy}, %rd12033;
	}
	shf.l.wrap.b32 	%r2478, %r2477, %r2476, 3;
	shf.l.wrap.b32 	%r2479, %r2476, %r2477, 3;
	mov.b64 	%rd3730, {%r2479, %r2478};
	shf.r.wrap.b32 	%r2480, %r2476, %r2477, 19;
	shf.r.wrap.b32 	%r2481, %r2477, %r2476, 19;
	mov.b64 	%rd3731, {%r2481, %r2480};
	xor.b64  	%rd3732, %rd3731, %rd3730;
	shr.u64 	%rd3733, %rd12033, 6;
	xor.b64  	%rd3734, %rd3732, %rd3733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2482,%dummy}, %rd12046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2483}, %rd12046;
	}
	shf.r.wrap.b32 	%r2484, %r2483, %r2482, 8;
	shf.r.wrap.b32 	%r2485, %r2482, %r2483, 8;
	mov.b64 	%rd3735, {%r2485, %r2484};
	shf.r.wrap.b32 	%r2486, %r2483, %r2482, 1;
	shf.r.wrap.b32 	%r2487, %r2482, %r2483, 1;
	mov.b64 	%rd3736, {%r2487, %r2486};
	xor.b64  	%rd3737, %rd3736, %rd3735;
	shr.u64 	%rd3738, %rd12046, 7;
	xor.b64  	%rd3739, %rd3737, %rd3738;
	add.s64 	%rd3740, %rd12038, %rd3734;
	add.s64 	%rd3741, %rd3740, %rd12047;
	add.s64 	%rd3742, %rd3741, %rd3739;
	add.s64 	%rd3743, %rd3742, %rd3646;
	xor.b64  	%rd3744, %rd3694, %rd3670;
	and.b64  	%rd3745, %rd3718, %rd3744;
	xor.b64  	%rd3746, %rd3745, %rd3670;
	add.s64 	%rd3747, %rd3743, %rd3746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2488,%dummy}, %rd3718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2489}, %rd3718;
	}
	shf.r.wrap.b32 	%r2490, %r2489, %r2488, 14;
	shf.r.wrap.b32 	%r2491, %r2488, %r2489, 14;
	mov.b64 	%rd3748, {%r2491, %r2490};
	shf.r.wrap.b32 	%r2492, %r2489, %r2488, 18;
	shf.r.wrap.b32 	%r2493, %r2488, %r2489, 18;
	mov.b64 	%rd3749, {%r2493, %r2492};
	xor.b64  	%rd3750, %rd3748, %rd3749;
	shf.l.wrap.b32 	%r2494, %r2488, %r2489, 23;
	shf.l.wrap.b32 	%r2495, %r2489, %r2488, 23;
	mov.b64 	%rd3751, {%r2495, %r2494};
	xor.b64  	%rd3752, %rd3750, %rd3751;
	add.s64 	%rd3753, %rd3747, %rd3752;
	add.s64 	%rd3754, %rd3753, -1973867731355612462;
	add.s64 	%rd3755, %rd3754, %rd3657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd3729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2497}, %rd3729;
	}
	shf.r.wrap.b32 	%r2498, %r2497, %r2496, 28;
	shf.r.wrap.b32 	%r2499, %r2496, %r2497, 28;
	mov.b64 	%rd3756, {%r2499, %r2498};
	shf.l.wrap.b32 	%r2500, %r2496, %r2497, 30;
	shf.l.wrap.b32 	%r2501, %r2497, %r2496, 30;
	mov.b64 	%rd3757, {%r2501, %r2500};
	xor.b64  	%rd3758, %rd3756, %rd3757;
	shf.l.wrap.b32 	%r2502, %r2496, %r2497, 25;
	shf.l.wrap.b32 	%r2503, %r2497, %r2496, 25;
	mov.b64 	%rd3759, {%r2503, %r2502};
	xor.b64  	%rd3760, %rd3758, %rd3759;
	and.b64  	%rd3761, %rd3729, %rd3705;
	or.b64  	%rd3762, %rd3729, %rd3705;
	and.b64  	%rd3763, %rd3762, %rd3681;
	or.b64  	%rd3764, %rd3763, %rd3761;
	add.s64 	%rd3765, %rd3764, %rd3760;
	add.s64 	%rd3766, %rd3765, %rd3754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2504}, %rd12032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2505,%dummy}, %rd12032;
	}
	shf.l.wrap.b32 	%r2506, %r2505, %r2504, 3;
	shf.l.wrap.b32 	%r2507, %r2504, %r2505, 3;
	mov.b64 	%rd3767, {%r2507, %r2506};
	shf.r.wrap.b32 	%r2508, %r2504, %r2505, 19;
	shf.r.wrap.b32 	%r2509, %r2505, %r2504, 19;
	mov.b64 	%rd3768, {%r2509, %r2508};
	xor.b64  	%rd3769, %rd3768, %rd3767;
	shr.u64 	%rd3770, %rd12032, 6;
	xor.b64  	%rd3771, %rd3769, %rd3770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2510,%dummy}, %rd12045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2511}, %rd12045;
	}
	shf.r.wrap.b32 	%r2512, %r2511, %r2510, 8;
	shf.r.wrap.b32 	%r2513, %r2510, %r2511, 8;
	mov.b64 	%rd3772, {%r2513, %r2512};
	shf.r.wrap.b32 	%r2514, %r2511, %r2510, 1;
	shf.r.wrap.b32 	%r2515, %r2510, %r2511, 1;
	mov.b64 	%rd3773, {%r2515, %r2514};
	xor.b64  	%rd3774, %rd3773, %rd3772;
	shr.u64 	%rd3775, %rd12045, 7;
	xor.b64  	%rd3776, %rd3774, %rd3775;
	add.s64 	%rd3777, %rd12037, %rd3771;
	add.s64 	%rd3778, %rd3777, %rd12046;
	add.s64 	%rd3779, %rd3778, %rd3776;
	add.s64 	%rd3780, %rd3779, %rd3670;
	xor.b64  	%rd3781, %rd3718, %rd3694;
	and.b64  	%rd3782, %rd3755, %rd3781;
	xor.b64  	%rd3783, %rd3782, %rd3694;
	add.s64 	%rd3784, %rd3780, %rd3783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2516,%dummy}, %rd3755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2517}, %rd3755;
	}
	shf.r.wrap.b32 	%r2518, %r2517, %r2516, 14;
	shf.r.wrap.b32 	%r2519, %r2516, %r2517, 14;
	mov.b64 	%rd3785, {%r2519, %r2518};
	shf.r.wrap.b32 	%r2520, %r2517, %r2516, 18;
	shf.r.wrap.b32 	%r2521, %r2516, %r2517, 18;
	mov.b64 	%rd3786, {%r2521, %r2520};
	xor.b64  	%rd3787, %rd3785, %rd3786;
	shf.l.wrap.b32 	%r2522, %r2516, %r2517, 23;
	shf.l.wrap.b32 	%r2523, %r2517, %r2516, 23;
	mov.b64 	%rd3788, {%r2523, %r2522};
	xor.b64  	%rd3789, %rd3787, %rd3788;
	add.s64 	%rd3790, %rd3784, %rd3789;
	add.s64 	%rd3791, %rd3790, -1171420211273849373;
	add.s64 	%rd3792, %rd3791, %rd3681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2524,%dummy}, %rd3766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2525}, %rd3766;
	}
	shf.r.wrap.b32 	%r2526, %r2525, %r2524, 28;
	shf.r.wrap.b32 	%r2527, %r2524, %r2525, 28;
	mov.b64 	%rd3793, {%r2527, %r2526};
	shf.l.wrap.b32 	%r2528, %r2524, %r2525, 30;
	shf.l.wrap.b32 	%r2529, %r2525, %r2524, 30;
	mov.b64 	%rd3794, {%r2529, %r2528};
	xor.b64  	%rd3795, %rd3793, %rd3794;
	shf.l.wrap.b32 	%r2530, %r2524, %r2525, 25;
	shf.l.wrap.b32 	%r2531, %r2525, %r2524, 25;
	mov.b64 	%rd3796, {%r2531, %r2530};
	xor.b64  	%rd3797, %rd3795, %rd3796;
	and.b64  	%rd3798, %rd3766, %rd3729;
	or.b64  	%rd3799, %rd3766, %rd3729;
	and.b64  	%rd3800, %rd3799, %rd3705;
	or.b64  	%rd3801, %rd3800, %rd3798;
	add.s64 	%rd3802, %rd3801, %rd3797;
	add.s64 	%rd3803, %rd3802, %rd3791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2532,%dummy}, %rd3742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2533}, %rd3742;
	}
	shf.r.wrap.b32 	%r2534, %r2533, %r2532, 19;
	shf.r.wrap.b32 	%r2535, %r2532, %r2533, 19;
	mov.b64 	%rd3804, {%r2535, %r2534};
	shf.l.wrap.b32 	%r2536, %r2532, %r2533, 3;
	shf.l.wrap.b32 	%r2537, %r2533, %r2532, 3;
	mov.b64 	%rd3805, {%r2537, %r2536};
	xor.b64  	%rd3806, %rd3804, %rd3805;
	shr.u64 	%rd3807, %rd3742, 6;
	xor.b64  	%rd3808, %rd3806, %rd3807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2538,%dummy}, %rd12044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2539}, %rd12044;
	}
	shf.r.wrap.b32 	%r2540, %r2539, %r2538, 8;
	shf.r.wrap.b32 	%r2541, %r2538, %r2539, 8;
	mov.b64 	%rd3809, {%r2541, %r2540};
	shf.r.wrap.b32 	%r2542, %r2539, %r2538, 1;
	shf.r.wrap.b32 	%r2543, %r2538, %r2539, 1;
	mov.b64 	%rd3810, {%r2543, %r2542};
	xor.b64  	%rd3811, %rd3810, %rd3809;
	shr.u64 	%rd3812, %rd12044, 7;
	xor.b64  	%rd3813, %rd3811, %rd3812;
	add.s64 	%rd3814, %rd12045, %rd12036;
	add.s64 	%rd3815, %rd3814, %rd3813;
	add.s64 	%rd3816, %rd3815, %rd3808;
	add.s64 	%rd3817, %rd3816, %rd3694;
	xor.b64  	%rd3818, %rd3755, %rd3718;
	and.b64  	%rd3819, %rd3792, %rd3818;
	xor.b64  	%rd3820, %rd3819, %rd3718;
	add.s64 	%rd3821, %rd3817, %rd3820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2544,%dummy}, %rd3792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2545}, %rd3792;
	}
	shf.r.wrap.b32 	%r2546, %r2545, %r2544, 14;
	shf.r.wrap.b32 	%r2547, %r2544, %r2545, 14;
	mov.b64 	%rd3822, {%r2547, %r2546};
	shf.r.wrap.b32 	%r2548, %r2545, %r2544, 18;
	shf.r.wrap.b32 	%r2549, %r2544, %r2545, 18;
	mov.b64 	%rd3823, {%r2549, %r2548};
	xor.b64  	%rd3824, %rd3822, %rd3823;
	shf.l.wrap.b32 	%r2550, %r2544, %r2545, 23;
	shf.l.wrap.b32 	%r2551, %r2545, %r2544, 23;
	mov.b64 	%rd3825, {%r2551, %r2550};
	xor.b64  	%rd3826, %rd3824, %rd3825;
	add.s64 	%rd3827, %rd3821, %rd3826;
	add.s64 	%rd3828, %rd3827, 1135362057144423861;
	add.s64 	%rd3829, %rd3828, %rd3705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2552,%dummy}, %rd3803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2553}, %rd3803;
	}
	shf.r.wrap.b32 	%r2554, %r2553, %r2552, 28;
	shf.r.wrap.b32 	%r2555, %r2552, %r2553, 28;
	mov.b64 	%rd3830, {%r2555, %r2554};
	shf.l.wrap.b32 	%r2556, %r2552, %r2553, 30;
	shf.l.wrap.b32 	%r2557, %r2553, %r2552, 30;
	mov.b64 	%rd3831, {%r2557, %r2556};
	xor.b64  	%rd3832, %rd3830, %rd3831;
	shf.l.wrap.b32 	%r2558, %r2552, %r2553, 25;
	shf.l.wrap.b32 	%r2559, %r2553, %r2552, 25;
	mov.b64 	%rd3833, {%r2559, %r2558};
	xor.b64  	%rd3834, %rd3832, %rd3833;
	and.b64  	%rd3835, %rd3803, %rd3766;
	or.b64  	%rd3836, %rd3803, %rd3766;
	and.b64  	%rd3837, %rd3836, %rd3729;
	or.b64  	%rd3838, %rd3837, %rd3835;
	add.s64 	%rd3839, %rd3838, %rd3834;
	add.s64 	%rd3840, %rd3839, %rd3828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2560,%dummy}, %rd3779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2561}, %rd3779;
	}
	shf.r.wrap.b32 	%r2562, %r2561, %r2560, 19;
	shf.r.wrap.b32 	%r2563, %r2560, %r2561, 19;
	mov.b64 	%rd3841, {%r2563, %r2562};
	shf.l.wrap.b32 	%r2564, %r2560, %r2561, 3;
	shf.l.wrap.b32 	%r2565, %r2561, %r2560, 3;
	mov.b64 	%rd3842, {%r2565, %r2564};
	xor.b64  	%rd3843, %rd3841, %rd3842;
	shr.u64 	%rd3844, %rd3779, 6;
	xor.b64  	%rd3845, %rd3843, %rd3844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2566,%dummy}, %rd12043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2567}, %rd12043;
	}
	shf.r.wrap.b32 	%r2568, %r2567, %r2566, 8;
	shf.r.wrap.b32 	%r2569, %r2566, %r2567, 8;
	mov.b64 	%rd3846, {%r2569, %r2568};
	shf.r.wrap.b32 	%r2570, %r2567, %r2566, 1;
	shf.r.wrap.b32 	%r2571, %r2566, %r2567, 1;
	mov.b64 	%rd3847, {%r2571, %r2570};
	xor.b64  	%rd3848, %rd3847, %rd3846;
	shr.u64 	%rd3849, %rd12043, 7;
	xor.b64  	%rd3850, %rd3848, %rd3849;
	add.s64 	%rd3851, %rd12044, %rd12035;
	add.s64 	%rd3852, %rd3851, %rd3850;
	add.s64 	%rd3853, %rd3852, %rd3845;
	add.s64 	%rd3854, %rd3853, %rd3718;
	xor.b64  	%rd3855, %rd3792, %rd3755;
	and.b64  	%rd3856, %rd3829, %rd3855;
	xor.b64  	%rd3857, %rd3856, %rd3755;
	add.s64 	%rd3858, %rd3854, %rd3857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2572,%dummy}, %rd3829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2573}, %rd3829;
	}
	shf.r.wrap.b32 	%r2574, %r2573, %r2572, 14;
	shf.r.wrap.b32 	%r2575, %r2572, %r2573, 14;
	mov.b64 	%rd3859, {%r2575, %r2574};
	shf.r.wrap.b32 	%r2576, %r2573, %r2572, 18;
	shf.r.wrap.b32 	%r2577, %r2572, %r2573, 18;
	mov.b64 	%rd3860, {%r2577, %r2576};
	xor.b64  	%rd3861, %rd3859, %rd3860;
	shf.l.wrap.b32 	%r2578, %r2572, %r2573, 23;
	shf.l.wrap.b32 	%r2579, %r2573, %r2572, 23;
	mov.b64 	%rd3862, {%r2579, %r2578};
	xor.b64  	%rd3863, %rd3861, %rd3862;
	add.s64 	%rd3864, %rd3858, %rd3863;
	add.s64 	%rd3865, %rd3864, 2597628984639134821;
	add.s64 	%rd3866, %rd3865, %rd3729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2580,%dummy}, %rd3840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2581}, %rd3840;
	}
	shf.r.wrap.b32 	%r2582, %r2581, %r2580, 28;
	shf.r.wrap.b32 	%r2583, %r2580, %r2581, 28;
	mov.b64 	%rd3867, {%r2583, %r2582};
	shf.l.wrap.b32 	%r2584, %r2580, %r2581, 30;
	shf.l.wrap.b32 	%r2585, %r2581, %r2580, 30;
	mov.b64 	%rd3868, {%r2585, %r2584};
	xor.b64  	%rd3869, %rd3867, %rd3868;
	shf.l.wrap.b32 	%r2586, %r2580, %r2581, 25;
	shf.l.wrap.b32 	%r2587, %r2581, %r2580, 25;
	mov.b64 	%rd3870, {%r2587, %r2586};
	xor.b64  	%rd3871, %rd3869, %rd3870;
	and.b64  	%rd3872, %rd3840, %rd3803;
	or.b64  	%rd3873, %rd3840, %rd3803;
	and.b64  	%rd3874, %rd3873, %rd3766;
	or.b64  	%rd3875, %rd3874, %rd3872;
	add.s64 	%rd3876, %rd3875, %rd3871;
	add.s64 	%rd3877, %rd3876, %rd3865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2588,%dummy}, %rd3816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2589}, %rd3816;
	}
	shf.r.wrap.b32 	%r2590, %r2589, %r2588, 19;
	shf.r.wrap.b32 	%r2591, %r2588, %r2589, 19;
	mov.b64 	%rd3878, {%r2591, %r2590};
	shf.l.wrap.b32 	%r2592, %r2588, %r2589, 3;
	shf.l.wrap.b32 	%r2593, %r2589, %r2588, 3;
	mov.b64 	%rd3879, {%r2593, %r2592};
	xor.b64  	%rd3880, %rd3878, %rd3879;
	shr.u64 	%rd3881, %rd3816, 6;
	xor.b64  	%rd3882, %rd3880, %rd3881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2594,%dummy}, %rd12042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2595}, %rd12042;
	}
	shf.r.wrap.b32 	%r2596, %r2595, %r2594, 8;
	shf.r.wrap.b32 	%r2597, %r2594, %r2595, 8;
	mov.b64 	%rd3883, {%r2597, %r2596};
	shf.r.wrap.b32 	%r2598, %r2595, %r2594, 1;
	shf.r.wrap.b32 	%r2599, %r2594, %r2595, 1;
	mov.b64 	%rd3884, {%r2599, %r2598};
	xor.b64  	%rd3885, %rd3884, %rd3883;
	shr.u64 	%rd3886, %rd12042, 7;
	xor.b64  	%rd3887, %rd3885, %rd3886;
	add.s64 	%rd3888, %rd12043, %rd12034;
	add.s64 	%rd3889, %rd3888, %rd3887;
	add.s64 	%rd3890, %rd3889, %rd3882;
	add.s64 	%rd3891, %rd3890, %rd3755;
	xor.b64  	%rd3892, %rd3829, %rd3792;
	and.b64  	%rd3893, %rd3866, %rd3892;
	xor.b64  	%rd3894, %rd3893, %rd3792;
	add.s64 	%rd3895, %rd3891, %rd3894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2600,%dummy}, %rd3866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2601}, %rd3866;
	}
	shf.r.wrap.b32 	%r2602, %r2601, %r2600, 14;
	shf.r.wrap.b32 	%r2603, %r2600, %r2601, 14;
	mov.b64 	%rd3896, {%r2603, %r2602};
	shf.r.wrap.b32 	%r2604, %r2601, %r2600, 18;
	shf.r.wrap.b32 	%r2605, %r2600, %r2601, 18;
	mov.b64 	%rd3897, {%r2605, %r2604};
	xor.b64  	%rd3898, %rd3896, %rd3897;
	shf.l.wrap.b32 	%r2606, %r2600, %r2601, 23;
	shf.l.wrap.b32 	%r2607, %r2601, %r2600, 23;
	mov.b64 	%rd3899, {%r2607, %r2606};
	xor.b64  	%rd3900, %rd3898, %rd3899;
	add.s64 	%rd3901, %rd3895, %rd3900;
	add.s64 	%rd3902, %rd3901, 3308224258029322869;
	add.s64 	%rd3903, %rd3902, %rd3766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2608,%dummy}, %rd3877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2609}, %rd3877;
	}
	shf.r.wrap.b32 	%r2610, %r2609, %r2608, 28;
	shf.r.wrap.b32 	%r2611, %r2608, %r2609, 28;
	mov.b64 	%rd3904, {%r2611, %r2610};
	shf.l.wrap.b32 	%r2612, %r2608, %r2609, 30;
	shf.l.wrap.b32 	%r2613, %r2609, %r2608, 30;
	mov.b64 	%rd3905, {%r2613, %r2612};
	xor.b64  	%rd3906, %rd3904, %rd3905;
	shf.l.wrap.b32 	%r2614, %r2608, %r2609, 25;
	shf.l.wrap.b32 	%r2615, %r2609, %r2608, 25;
	mov.b64 	%rd3907, {%r2615, %r2614};
	xor.b64  	%rd3908, %rd3906, %rd3907;
	and.b64  	%rd3909, %rd3877, %rd3840;
	or.b64  	%rd3910, %rd3877, %rd3840;
	and.b64  	%rd3911, %rd3910, %rd3803;
	or.b64  	%rd3912, %rd3911, %rd3909;
	add.s64 	%rd3913, %rd3912, %rd3908;
	add.s64 	%rd3914, %rd3913, %rd3902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2616,%dummy}, %rd3853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2617}, %rd3853;
	}
	shf.r.wrap.b32 	%r2618, %r2617, %r2616, 19;
	shf.r.wrap.b32 	%r2619, %r2616, %r2617, 19;
	mov.b64 	%rd3915, {%r2619, %r2618};
	shf.l.wrap.b32 	%r2620, %r2616, %r2617, 3;
	shf.l.wrap.b32 	%r2621, %r2617, %r2616, 3;
	mov.b64 	%rd3916, {%r2621, %r2620};
	xor.b64  	%rd3917, %rd3915, %rd3916;
	shr.u64 	%rd3918, %rd3853, 6;
	xor.b64  	%rd3919, %rd3917, %rd3918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2622,%dummy}, %rd12041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2623}, %rd12041;
	}
	shf.r.wrap.b32 	%r2624, %r2623, %r2622, 8;
	shf.r.wrap.b32 	%r2625, %r2622, %r2623, 8;
	mov.b64 	%rd3920, {%r2625, %r2624};
	shf.r.wrap.b32 	%r2626, %r2623, %r2622, 1;
	shf.r.wrap.b32 	%r2627, %r2622, %r2623, 1;
	mov.b64 	%rd3921, {%r2627, %r2626};
	xor.b64  	%rd3922, %rd3921, %rd3920;
	shr.u64 	%rd3923, %rd12041, 7;
	xor.b64  	%rd3924, %rd3922, %rd3923;
	add.s64 	%rd3925, %rd12042, %rd12033;
	add.s64 	%rd3926, %rd3925, %rd3924;
	add.s64 	%rd3927, %rd3926, %rd3919;
	add.s64 	%rd3928, %rd3927, %rd3792;
	xor.b64  	%rd3929, %rd3866, %rd3829;
	and.b64  	%rd3930, %rd3903, %rd3929;
	xor.b64  	%rd3931, %rd3930, %rd3829;
	add.s64 	%rd3932, %rd3928, %rd3931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2628,%dummy}, %rd3903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2629}, %rd3903;
	}
	shf.r.wrap.b32 	%r2630, %r2629, %r2628, 14;
	shf.r.wrap.b32 	%r2631, %r2628, %r2629, 14;
	mov.b64 	%rd3933, {%r2631, %r2630};
	shf.r.wrap.b32 	%r2632, %r2629, %r2628, 18;
	shf.r.wrap.b32 	%r2633, %r2628, %r2629, 18;
	mov.b64 	%rd3934, {%r2633, %r2632};
	xor.b64  	%rd3935, %rd3933, %rd3934;
	shf.l.wrap.b32 	%r2634, %r2628, %r2629, 23;
	shf.l.wrap.b32 	%r2635, %r2629, %r2628, 23;
	mov.b64 	%rd3936, {%r2635, %r2634};
	xor.b64  	%rd3937, %rd3935, %rd3936;
	add.s64 	%rd3938, %rd3932, %rd3937;
	add.s64 	%rd3939, %rd3938, 5365058923640841347;
	add.s64 	%rd3940, %rd3939, %rd3803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2636,%dummy}, %rd3914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2637}, %rd3914;
	}
	shf.r.wrap.b32 	%r2638, %r2637, %r2636, 28;
	shf.r.wrap.b32 	%r2639, %r2636, %r2637, 28;
	mov.b64 	%rd3941, {%r2639, %r2638};
	shf.l.wrap.b32 	%r2640, %r2636, %r2637, 30;
	shf.l.wrap.b32 	%r2641, %r2637, %r2636, 30;
	mov.b64 	%rd3942, {%r2641, %r2640};
	xor.b64  	%rd3943, %rd3941, %rd3942;
	shf.l.wrap.b32 	%r2642, %r2636, %r2637, 25;
	shf.l.wrap.b32 	%r2643, %r2637, %r2636, 25;
	mov.b64 	%rd3944, {%r2643, %r2642};
	xor.b64  	%rd3945, %rd3943, %rd3944;
	and.b64  	%rd3946, %rd3914, %rd3877;
	or.b64  	%rd3947, %rd3914, %rd3877;
	and.b64  	%rd3948, %rd3947, %rd3840;
	or.b64  	%rd3949, %rd3948, %rd3946;
	add.s64 	%rd3950, %rd3949, %rd3945;
	add.s64 	%rd3951, %rd3950, %rd3939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2644,%dummy}, %rd3890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2645}, %rd3890;
	}
	shf.r.wrap.b32 	%r2646, %r2645, %r2644, 19;
	shf.r.wrap.b32 	%r2647, %r2644, %r2645, 19;
	mov.b64 	%rd3952, {%r2647, %r2646};
	shf.l.wrap.b32 	%r2648, %r2644, %r2645, 3;
	shf.l.wrap.b32 	%r2649, %r2645, %r2644, 3;
	mov.b64 	%rd3953, {%r2649, %r2648};
	xor.b64  	%rd3954, %rd3952, %rd3953;
	shr.u64 	%rd3955, %rd3890, 6;
	xor.b64  	%rd3956, %rd3954, %rd3955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2650,%dummy}, %rd12040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2651}, %rd12040;
	}
	shf.r.wrap.b32 	%r2652, %r2651, %r2650, 8;
	shf.r.wrap.b32 	%r2653, %r2650, %r2651, 8;
	mov.b64 	%rd3957, {%r2653, %r2652};
	shf.r.wrap.b32 	%r2654, %r2651, %r2650, 1;
	shf.r.wrap.b32 	%r2655, %r2650, %r2651, 1;
	mov.b64 	%rd3958, {%r2655, %r2654};
	xor.b64  	%rd3959, %rd3958, %rd3957;
	shr.u64 	%rd3960, %rd12040, 7;
	xor.b64  	%rd3961, %rd3959, %rd3960;
	add.s64 	%rd3962, %rd12041, %rd12032;
	add.s64 	%rd3963, %rd3962, %rd3961;
	add.s64 	%rd3964, %rd3963, %rd3956;
	add.s64 	%rd3965, %rd3964, %rd3829;
	xor.b64  	%rd3966, %rd3903, %rd3866;
	and.b64  	%rd3967, %rd3940, %rd3966;
	xor.b64  	%rd3968, %rd3967, %rd3866;
	add.s64 	%rd3969, %rd3965, %rd3968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2656,%dummy}, %rd3940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2657}, %rd3940;
	}
	shf.r.wrap.b32 	%r2658, %r2657, %r2656, 14;
	shf.r.wrap.b32 	%r2659, %r2656, %r2657, 14;
	mov.b64 	%rd3970, {%r2659, %r2658};
	shf.r.wrap.b32 	%r2660, %r2657, %r2656, 18;
	shf.r.wrap.b32 	%r2661, %r2656, %r2657, 18;
	mov.b64 	%rd3971, {%r2661, %r2660};
	xor.b64  	%rd3972, %rd3970, %rd3971;
	shf.l.wrap.b32 	%r2662, %r2656, %r2657, 23;
	shf.l.wrap.b32 	%r2663, %r2657, %r2656, 23;
	mov.b64 	%rd3973, {%r2663, %r2662};
	xor.b64  	%rd3974, %rd3972, %rd3973;
	add.s64 	%rd3975, %rd3969, %rd3974;
	add.s64 	%rd3976, %rd3975, 6679025012923562964;
	add.s64 	%rd3977, %rd3976, %rd3840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2664,%dummy}, %rd3951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2665}, %rd3951;
	}
	shf.r.wrap.b32 	%r2666, %r2665, %r2664, 28;
	shf.r.wrap.b32 	%r2667, %r2664, %r2665, 28;
	mov.b64 	%rd3978, {%r2667, %r2666};
	shf.l.wrap.b32 	%r2668, %r2664, %r2665, 30;
	shf.l.wrap.b32 	%r2669, %r2665, %r2664, 30;
	mov.b64 	%rd3979, {%r2669, %r2668};
	xor.b64  	%rd3980, %rd3978, %rd3979;
	shf.l.wrap.b32 	%r2670, %r2664, %r2665, 25;
	shf.l.wrap.b32 	%r2671, %r2665, %r2664, 25;
	mov.b64 	%rd3981, {%r2671, %r2670};
	xor.b64  	%rd3982, %rd3980, %rd3981;
	and.b64  	%rd3983, %rd3951, %rd3914;
	or.b64  	%rd3984, %rd3951, %rd3914;
	and.b64  	%rd3985, %rd3984, %rd3877;
	or.b64  	%rd3986, %rd3985, %rd3983;
	add.s64 	%rd3987, %rd3986, %rd3982;
	add.s64 	%rd3988, %rd3987, %rd3976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2672,%dummy}, %rd3927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2673}, %rd3927;
	}
	shf.r.wrap.b32 	%r2674, %r2673, %r2672, 19;
	shf.r.wrap.b32 	%r2675, %r2672, %r2673, 19;
	mov.b64 	%rd3989, {%r2675, %r2674};
	shf.l.wrap.b32 	%r2676, %r2672, %r2673, 3;
	shf.l.wrap.b32 	%r2677, %r2673, %r2672, 3;
	mov.b64 	%rd3990, {%r2677, %r2676};
	xor.b64  	%rd3991, %rd3989, %rd3990;
	shr.u64 	%rd3992, %rd3927, 6;
	xor.b64  	%rd3993, %rd3991, %rd3992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2678,%dummy}, %rd12039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2679}, %rd12039;
	}
	shf.r.wrap.b32 	%r2680, %r2679, %r2678, 8;
	shf.r.wrap.b32 	%r2681, %r2678, %r2679, 8;
	mov.b64 	%rd3994, {%r2681, %r2680};
	shf.r.wrap.b32 	%r2682, %r2679, %r2678, 1;
	shf.r.wrap.b32 	%r2683, %r2678, %r2679, 1;
	mov.b64 	%rd3995, {%r2683, %r2682};
	xor.b64  	%rd3996, %rd3995, %rd3994;
	shr.u64 	%rd3997, %rd12039, 7;
	xor.b64  	%rd3998, %rd3996, %rd3997;
	add.s64 	%rd3999, %rd3998, %rd12040;
	add.s64 	%rd4000, %rd3999, %rd3742;
	add.s64 	%rd4001, %rd4000, %rd3993;
	add.s64 	%rd4002, %rd4001, %rd3866;
	xor.b64  	%rd4003, %rd3940, %rd3903;
	and.b64  	%rd4004, %rd3977, %rd4003;
	xor.b64  	%rd4005, %rd4004, %rd3903;
	add.s64 	%rd4006, %rd4002, %rd4005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2684,%dummy}, %rd3977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2685}, %rd3977;
	}
	shf.r.wrap.b32 	%r2686, %r2685, %r2684, 14;
	shf.r.wrap.b32 	%r2687, %r2684, %r2685, 14;
	mov.b64 	%rd4007, {%r2687, %r2686};
	shf.r.wrap.b32 	%r2688, %r2685, %r2684, 18;
	shf.r.wrap.b32 	%r2689, %r2684, %r2685, 18;
	mov.b64 	%rd4008, {%r2689, %r2688};
	xor.b64  	%rd4009, %rd4007, %rd4008;
	shf.l.wrap.b32 	%r2690, %r2684, %r2685, 23;
	shf.l.wrap.b32 	%r2691, %r2685, %r2684, 23;
	mov.b64 	%rd4010, {%r2691, %r2690};
	xor.b64  	%rd4011, %rd4009, %rd4010;
	add.s64 	%rd4012, %rd4006, %rd4011;
	add.s64 	%rd4013, %rd4012, 8573033837759648693;
	add.s64 	%rd4014, %rd4013, %rd3877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2692,%dummy}, %rd3988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2693}, %rd3988;
	}
	shf.r.wrap.b32 	%r2694, %r2693, %r2692, 28;
	shf.r.wrap.b32 	%r2695, %r2692, %r2693, 28;
	mov.b64 	%rd4015, {%r2695, %r2694};
	shf.l.wrap.b32 	%r2696, %r2692, %r2693, 30;
	shf.l.wrap.b32 	%r2697, %r2693, %r2692, 30;
	mov.b64 	%rd4016, {%r2697, %r2696};
	xor.b64  	%rd4017, %rd4015, %rd4016;
	shf.l.wrap.b32 	%r2698, %r2692, %r2693, 25;
	shf.l.wrap.b32 	%r2699, %r2693, %r2692, 25;
	mov.b64 	%rd4018, {%r2699, %r2698};
	xor.b64  	%rd4019, %rd4017, %rd4018;
	and.b64  	%rd4020, %rd3988, %rd3951;
	or.b64  	%rd4021, %rd3988, %rd3951;
	and.b64  	%rd4022, %rd4021, %rd3914;
	or.b64  	%rd4023, %rd4022, %rd4020;
	add.s64 	%rd4024, %rd4023, %rd4019;
	add.s64 	%rd4025, %rd4024, %rd4013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2700,%dummy}, %rd3964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2701}, %rd3964;
	}
	shf.r.wrap.b32 	%r2702, %r2701, %r2700, 19;
	shf.r.wrap.b32 	%r2703, %r2700, %r2701, 19;
	mov.b64 	%rd4026, {%r2703, %r2702};
	shf.l.wrap.b32 	%r2704, %r2700, %r2701, 3;
	shf.l.wrap.b32 	%r2705, %r2701, %r2700, 3;
	mov.b64 	%rd4027, {%r2705, %r2704};
	xor.b64  	%rd4028, %rd4026, %rd4027;
	shr.u64 	%rd4029, %rd3964, 6;
	xor.b64  	%rd4030, %rd4028, %rd4029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2706,%dummy}, %rd12038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2707}, %rd12038;
	}
	shf.r.wrap.b32 	%r2708, %r2707, %r2706, 8;
	shf.r.wrap.b32 	%r2709, %r2706, %r2707, 8;
	mov.b64 	%rd4031, {%r2709, %r2708};
	shf.r.wrap.b32 	%r2710, %r2707, %r2706, 1;
	shf.r.wrap.b32 	%r2711, %r2706, %r2707, 1;
	mov.b64 	%rd4032, {%r2711, %r2710};
	xor.b64  	%rd4033, %rd4032, %rd4031;
	shr.u64 	%rd4034, %rd12038, 7;
	xor.b64  	%rd4035, %rd4033, %rd4034;
	add.s64 	%rd4036, %rd4035, %rd12039;
	add.s64 	%rd4037, %rd4036, %rd3779;
	add.s64 	%rd4038, %rd4037, %rd4030;
	add.s64 	%rd4039, %rd4038, %rd3903;
	xor.b64  	%rd4040, %rd3977, %rd3940;
	and.b64  	%rd4041, %rd4014, %rd4040;
	xor.b64  	%rd4042, %rd4041, %rd3940;
	add.s64 	%rd4043, %rd4039, %rd4042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2712,%dummy}, %rd4014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2713}, %rd4014;
	}
	shf.r.wrap.b32 	%r2714, %r2713, %r2712, 14;
	shf.r.wrap.b32 	%r2715, %r2712, %r2713, 14;
	mov.b64 	%rd4044, {%r2715, %r2714};
	shf.r.wrap.b32 	%r2716, %r2713, %r2712, 18;
	shf.r.wrap.b32 	%r2717, %r2712, %r2713, 18;
	mov.b64 	%rd4045, {%r2717, %r2716};
	xor.b64  	%rd4046, %rd4044, %rd4045;
	shf.l.wrap.b32 	%r2718, %r2712, %r2713, 23;
	shf.l.wrap.b32 	%r2719, %r2713, %r2712, 23;
	mov.b64 	%rd4047, {%r2719, %r2718};
	xor.b64  	%rd4048, %rd4046, %rd4047;
	add.s64 	%rd4049, %rd4043, %rd4048;
	add.s64 	%rd4050, %rd4049, -7476448914759557205;
	add.s64 	%rd4051, %rd4050, %rd3914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2720,%dummy}, %rd4025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2721}, %rd4025;
	}
	shf.r.wrap.b32 	%r2722, %r2721, %r2720, 28;
	shf.r.wrap.b32 	%r2723, %r2720, %r2721, 28;
	mov.b64 	%rd4052, {%r2723, %r2722};
	shf.l.wrap.b32 	%r2724, %r2720, %r2721, 30;
	shf.l.wrap.b32 	%r2725, %r2721, %r2720, 30;
	mov.b64 	%rd4053, {%r2725, %r2724};
	xor.b64  	%rd4054, %rd4052, %rd4053;
	shf.l.wrap.b32 	%r2726, %r2720, %r2721, 25;
	shf.l.wrap.b32 	%r2727, %r2721, %r2720, 25;
	mov.b64 	%rd4055, {%r2727, %r2726};
	xor.b64  	%rd4056, %rd4054, %rd4055;
	and.b64  	%rd4057, %rd4025, %rd3988;
	or.b64  	%rd4058, %rd4025, %rd3988;
	and.b64  	%rd4059, %rd4058, %rd3951;
	or.b64  	%rd4060, %rd4059, %rd4057;
	add.s64 	%rd4061, %rd4060, %rd4056;
	add.s64 	%rd4062, %rd4061, %rd4050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2728,%dummy}, %rd4001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2729}, %rd4001;
	}
	shf.r.wrap.b32 	%r2730, %r2729, %r2728, 19;
	shf.r.wrap.b32 	%r2731, %r2728, %r2729, 19;
	mov.b64 	%rd4063, {%r2731, %r2730};
	shf.l.wrap.b32 	%r2732, %r2728, %r2729, 3;
	shf.l.wrap.b32 	%r2733, %r2729, %r2728, 3;
	mov.b64 	%rd4064, {%r2733, %r2732};
	xor.b64  	%rd4065, %rd4063, %rd4064;
	shr.u64 	%rd4066, %rd4001, 6;
	xor.b64  	%rd4067, %rd4065, %rd4066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2734,%dummy}, %rd12037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2735}, %rd12037;
	}
	shf.r.wrap.b32 	%r2736, %r2735, %r2734, 8;
	shf.r.wrap.b32 	%r2737, %r2734, %r2735, 8;
	mov.b64 	%rd4068, {%r2737, %r2736};
	shf.r.wrap.b32 	%r2738, %r2735, %r2734, 1;
	shf.r.wrap.b32 	%r2739, %r2734, %r2735, 1;
	mov.b64 	%rd4069, {%r2739, %r2738};
	xor.b64  	%rd4070, %rd4069, %rd4068;
	shr.u64 	%rd4071, %rd12037, 7;
	xor.b64  	%rd4072, %rd4070, %rd4071;
	add.s64 	%rd4073, %rd4072, %rd12038;
	add.s64 	%rd4074, %rd4073, %rd3816;
	add.s64 	%rd4075, %rd4074, %rd4067;
	add.s64 	%rd4076, %rd4075, %rd3940;
	xor.b64  	%rd4077, %rd4014, %rd3977;
	and.b64  	%rd4078, %rd4051, %rd4077;
	xor.b64  	%rd4079, %rd4078, %rd3977;
	add.s64 	%rd4080, %rd4076, %rd4079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2740,%dummy}, %rd4051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2741}, %rd4051;
	}
	shf.r.wrap.b32 	%r2742, %r2741, %r2740, 14;
	shf.r.wrap.b32 	%r2743, %r2740, %r2741, 14;
	mov.b64 	%rd4081, {%r2743, %r2742};
	shf.r.wrap.b32 	%r2744, %r2741, %r2740, 18;
	shf.r.wrap.b32 	%r2745, %r2740, %r2741, 18;
	mov.b64 	%rd4082, {%r2745, %r2744};
	xor.b64  	%rd4083, %rd4081, %rd4082;
	shf.l.wrap.b32 	%r2746, %r2740, %r2741, 23;
	shf.l.wrap.b32 	%r2747, %r2741, %r2740, 23;
	mov.b64 	%rd4084, {%r2747, %r2746};
	xor.b64  	%rd4085, %rd4083, %rd4084;
	add.s64 	%rd4086, %rd4080, %rd4085;
	add.s64 	%rd4087, %rd4086, -6327057829258317296;
	add.s64 	%rd4088, %rd4087, %rd3951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2748,%dummy}, %rd4062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2749}, %rd4062;
	}
	shf.r.wrap.b32 	%r2750, %r2749, %r2748, 28;
	shf.r.wrap.b32 	%r2751, %r2748, %r2749, 28;
	mov.b64 	%rd4089, {%r2751, %r2750};
	shf.l.wrap.b32 	%r2752, %r2748, %r2749, 30;
	shf.l.wrap.b32 	%r2753, %r2749, %r2748, 30;
	mov.b64 	%rd4090, {%r2753, %r2752};
	xor.b64  	%rd4091, %rd4089, %rd4090;
	shf.l.wrap.b32 	%r2754, %r2748, %r2749, 25;
	shf.l.wrap.b32 	%r2755, %r2749, %r2748, 25;
	mov.b64 	%rd4092, {%r2755, %r2754};
	xor.b64  	%rd4093, %rd4091, %rd4092;
	and.b64  	%rd4094, %rd4062, %rd4025;
	or.b64  	%rd4095, %rd4062, %rd4025;
	and.b64  	%rd4096, %rd4095, %rd3988;
	or.b64  	%rd4097, %rd4096, %rd4094;
	add.s64 	%rd4098, %rd4097, %rd4093;
	add.s64 	%rd4099, %rd4098, %rd4087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2756,%dummy}, %rd4038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2757}, %rd4038;
	}
	shf.r.wrap.b32 	%r2758, %r2757, %r2756, 19;
	shf.r.wrap.b32 	%r2759, %r2756, %r2757, 19;
	mov.b64 	%rd4100, {%r2759, %r2758};
	shf.l.wrap.b32 	%r2760, %r2756, %r2757, 3;
	shf.l.wrap.b32 	%r2761, %r2757, %r2756, 3;
	mov.b64 	%rd4101, {%r2761, %r2760};
	xor.b64  	%rd4102, %rd4100, %rd4101;
	shr.u64 	%rd4103, %rd4038, 6;
	xor.b64  	%rd4104, %rd4102, %rd4103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2762,%dummy}, %rd12036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2763}, %rd12036;
	}
	shf.r.wrap.b32 	%r2764, %r2763, %r2762, 8;
	shf.r.wrap.b32 	%r2765, %r2762, %r2763, 8;
	mov.b64 	%rd4105, {%r2765, %r2764};
	shf.r.wrap.b32 	%r2766, %r2763, %r2762, 1;
	shf.r.wrap.b32 	%r2767, %r2762, %r2763, 1;
	mov.b64 	%rd4106, {%r2767, %r2766};
	xor.b64  	%rd4107, %rd4106, %rd4105;
	shr.u64 	%rd4108, %rd12036, 7;
	xor.b64  	%rd4109, %rd4107, %rd4108;
	add.s64 	%rd4110, %rd4109, %rd12037;
	add.s64 	%rd4111, %rd4110, %rd3853;
	add.s64 	%rd4112, %rd4111, %rd4104;
	add.s64 	%rd4113, %rd4112, %rd3977;
	xor.b64  	%rd4114, %rd4051, %rd4014;
	and.b64  	%rd4115, %rd4088, %rd4114;
	xor.b64  	%rd4116, %rd4115, %rd4014;
	add.s64 	%rd4117, %rd4113, %rd4116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2768,%dummy}, %rd4088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2769}, %rd4088;
	}
	shf.r.wrap.b32 	%r2770, %r2769, %r2768, 14;
	shf.r.wrap.b32 	%r2771, %r2768, %r2769, 14;
	mov.b64 	%rd4118, {%r2771, %r2770};
	shf.r.wrap.b32 	%r2772, %r2769, %r2768, 18;
	shf.r.wrap.b32 	%r2773, %r2768, %r2769, 18;
	mov.b64 	%rd4119, {%r2773, %r2772};
	xor.b64  	%rd4120, %rd4118, %rd4119;
	shf.l.wrap.b32 	%r2774, %r2768, %r2769, 23;
	shf.l.wrap.b32 	%r2775, %r2769, %r2768, 23;
	mov.b64 	%rd4121, {%r2775, %r2774};
	xor.b64  	%rd4122, %rd4120, %rd4121;
	add.s64 	%rd4123, %rd4117, %rd4122;
	add.s64 	%rd4124, %rd4123, -5763719355590565569;
	add.s64 	%rd4125, %rd4124, %rd3988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2776,%dummy}, %rd4099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2777}, %rd4099;
	}
	shf.r.wrap.b32 	%r2778, %r2777, %r2776, 28;
	shf.r.wrap.b32 	%r2779, %r2776, %r2777, 28;
	mov.b64 	%rd4126, {%r2779, %r2778};
	shf.l.wrap.b32 	%r2780, %r2776, %r2777, 30;
	shf.l.wrap.b32 	%r2781, %r2777, %r2776, 30;
	mov.b64 	%rd4127, {%r2781, %r2780};
	xor.b64  	%rd4128, %rd4126, %rd4127;
	shf.l.wrap.b32 	%r2782, %r2776, %r2777, 25;
	shf.l.wrap.b32 	%r2783, %r2777, %r2776, 25;
	mov.b64 	%rd4129, {%r2783, %r2782};
	xor.b64  	%rd4130, %rd4128, %rd4129;
	and.b64  	%rd4131, %rd4099, %rd4062;
	or.b64  	%rd4132, %rd4099, %rd4062;
	and.b64  	%rd4133, %rd4132, %rd4025;
	or.b64  	%rd4134, %rd4133, %rd4131;
	add.s64 	%rd4135, %rd4134, %rd4130;
	add.s64 	%rd4136, %rd4135, %rd4124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2784,%dummy}, %rd4075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2785}, %rd4075;
	}
	shf.r.wrap.b32 	%r2786, %r2785, %r2784, 19;
	shf.r.wrap.b32 	%r2787, %r2784, %r2785, 19;
	mov.b64 	%rd4137, {%r2787, %r2786};
	shf.l.wrap.b32 	%r2788, %r2784, %r2785, 3;
	shf.l.wrap.b32 	%r2789, %r2785, %r2784, 3;
	mov.b64 	%rd4138, {%r2789, %r2788};
	xor.b64  	%rd4139, %rd4137, %rd4138;
	shr.u64 	%rd4140, %rd4075, 6;
	xor.b64  	%rd4141, %rd4139, %rd4140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2790,%dummy}, %rd12035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2791}, %rd12035;
	}
	shf.r.wrap.b32 	%r2792, %r2791, %r2790, 8;
	shf.r.wrap.b32 	%r2793, %r2790, %r2791, 8;
	mov.b64 	%rd4142, {%r2793, %r2792};
	shf.r.wrap.b32 	%r2794, %r2791, %r2790, 1;
	shf.r.wrap.b32 	%r2795, %r2790, %r2791, 1;
	mov.b64 	%rd4143, {%r2795, %r2794};
	xor.b64  	%rd4144, %rd4143, %rd4142;
	shr.u64 	%rd4145, %rd12035, 7;
	xor.b64  	%rd4146, %rd4144, %rd4145;
	add.s64 	%rd4147, %rd4146, %rd12036;
	add.s64 	%rd4148, %rd4147, %rd3890;
	add.s64 	%rd4149, %rd4148, %rd4141;
	add.s64 	%rd4150, %rd4149, %rd4014;
	xor.b64  	%rd4151, %rd4088, %rd4051;
	and.b64  	%rd4152, %rd4125, %rd4151;
	xor.b64  	%rd4153, %rd4152, %rd4051;
	add.s64 	%rd4154, %rd4150, %rd4153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2796,%dummy}, %rd4125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2797}, %rd4125;
	}
	shf.r.wrap.b32 	%r2798, %r2797, %r2796, 14;
	shf.r.wrap.b32 	%r2799, %r2796, %r2797, 14;
	mov.b64 	%rd4155, {%r2799, %r2798};
	shf.r.wrap.b32 	%r2800, %r2797, %r2796, 18;
	shf.r.wrap.b32 	%r2801, %r2796, %r2797, 18;
	mov.b64 	%rd4156, {%r2801, %r2800};
	xor.b64  	%rd4157, %rd4155, %rd4156;
	shf.l.wrap.b32 	%r2802, %r2796, %r2797, 23;
	shf.l.wrap.b32 	%r2803, %r2797, %r2796, 23;
	mov.b64 	%rd4158, {%r2803, %r2802};
	xor.b64  	%rd4159, %rd4157, %rd4158;
	add.s64 	%rd4160, %rd4154, %rd4159;
	add.s64 	%rd4161, %rd4160, -4658551843659510044;
	add.s64 	%rd4162, %rd4161, %rd4025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2804,%dummy}, %rd4136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2805}, %rd4136;
	}
	shf.r.wrap.b32 	%r2806, %r2805, %r2804, 28;
	shf.r.wrap.b32 	%r2807, %r2804, %r2805, 28;
	mov.b64 	%rd4163, {%r2807, %r2806};
	shf.l.wrap.b32 	%r2808, %r2804, %r2805, 30;
	shf.l.wrap.b32 	%r2809, %r2805, %r2804, 30;
	mov.b64 	%rd4164, {%r2809, %r2808};
	xor.b64  	%rd4165, %rd4163, %rd4164;
	shf.l.wrap.b32 	%r2810, %r2804, %r2805, 25;
	shf.l.wrap.b32 	%r2811, %r2805, %r2804, 25;
	mov.b64 	%rd4166, {%r2811, %r2810};
	xor.b64  	%rd4167, %rd4165, %rd4166;
	and.b64  	%rd4168, %rd4136, %rd4099;
	or.b64  	%rd4169, %rd4136, %rd4099;
	and.b64  	%rd4170, %rd4169, %rd4062;
	or.b64  	%rd4171, %rd4170, %rd4168;
	add.s64 	%rd4172, %rd4171, %rd4167;
	add.s64 	%rd4173, %rd4172, %rd4161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2812,%dummy}, %rd4112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2813}, %rd4112;
	}
	shf.r.wrap.b32 	%r2814, %r2813, %r2812, 19;
	shf.r.wrap.b32 	%r2815, %r2812, %r2813, 19;
	mov.b64 	%rd4174, {%r2815, %r2814};
	shf.l.wrap.b32 	%r2816, %r2812, %r2813, 3;
	shf.l.wrap.b32 	%r2817, %r2813, %r2812, 3;
	mov.b64 	%rd4175, {%r2817, %r2816};
	xor.b64  	%rd4176, %rd4174, %rd4175;
	shr.u64 	%rd4177, %rd4112, 6;
	xor.b64  	%rd4178, %rd4176, %rd4177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2818,%dummy}, %rd12034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2819}, %rd12034;
	}
	shf.r.wrap.b32 	%r2820, %r2819, %r2818, 8;
	shf.r.wrap.b32 	%r2821, %r2818, %r2819, 8;
	mov.b64 	%rd4179, {%r2821, %r2820};
	shf.r.wrap.b32 	%r2822, %r2819, %r2818, 1;
	shf.r.wrap.b32 	%r2823, %r2818, %r2819, 1;
	mov.b64 	%rd4180, {%r2823, %r2822};
	xor.b64  	%rd4181, %rd4180, %rd4179;
	shr.u64 	%rd4182, %rd12034, 7;
	xor.b64  	%rd4183, %rd4181, %rd4182;
	add.s64 	%rd4184, %rd4183, %rd12035;
	add.s64 	%rd4185, %rd4184, %rd3927;
	add.s64 	%rd4186, %rd4185, %rd4178;
	add.s64 	%rd4187, %rd4186, %rd4051;
	xor.b64  	%rd4188, %rd4125, %rd4088;
	and.b64  	%rd4189, %rd4162, %rd4188;
	xor.b64  	%rd4190, %rd4189, %rd4088;
	add.s64 	%rd4191, %rd4187, %rd4190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2824,%dummy}, %rd4162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2825}, %rd4162;
	}
	shf.r.wrap.b32 	%r2826, %r2825, %r2824, 14;
	shf.r.wrap.b32 	%r2827, %r2824, %r2825, 14;
	mov.b64 	%rd4192, {%r2827, %r2826};
	shf.r.wrap.b32 	%r2828, %r2825, %r2824, 18;
	shf.r.wrap.b32 	%r2829, %r2824, %r2825, 18;
	mov.b64 	%rd4193, {%r2829, %r2828};
	xor.b64  	%rd4194, %rd4192, %rd4193;
	shf.l.wrap.b32 	%r2830, %r2824, %r2825, 23;
	shf.l.wrap.b32 	%r2831, %r2825, %r2824, 23;
	mov.b64 	%rd4195, {%r2831, %r2830};
	xor.b64  	%rd4196, %rd4194, %rd4195;
	add.s64 	%rd4197, %rd4191, %rd4196;
	add.s64 	%rd4198, %rd4197, -4116276920077217854;
	add.s64 	%rd4199, %rd4198, %rd4062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2832,%dummy}, %rd4173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2833}, %rd4173;
	}
	shf.r.wrap.b32 	%r2834, %r2833, %r2832, 28;
	shf.r.wrap.b32 	%r2835, %r2832, %r2833, 28;
	mov.b64 	%rd4200, {%r2835, %r2834};
	shf.l.wrap.b32 	%r2836, %r2832, %r2833, 30;
	shf.l.wrap.b32 	%r2837, %r2833, %r2832, 30;
	mov.b64 	%rd4201, {%r2837, %r2836};
	xor.b64  	%rd4202, %rd4200, %rd4201;
	shf.l.wrap.b32 	%r2838, %r2832, %r2833, 25;
	shf.l.wrap.b32 	%r2839, %r2833, %r2832, 25;
	mov.b64 	%rd4203, {%r2839, %r2838};
	xor.b64  	%rd4204, %rd4202, %rd4203;
	and.b64  	%rd4205, %rd4173, %rd4136;
	or.b64  	%rd4206, %rd4173, %rd4136;
	and.b64  	%rd4207, %rd4206, %rd4099;
	or.b64  	%rd4208, %rd4207, %rd4205;
	add.s64 	%rd4209, %rd4208, %rd4204;
	add.s64 	%rd4210, %rd4209, %rd4198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2840,%dummy}, %rd4149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2841}, %rd4149;
	}
	shf.r.wrap.b32 	%r2842, %r2841, %r2840, 19;
	shf.r.wrap.b32 	%r2843, %r2840, %r2841, 19;
	mov.b64 	%rd4211, {%r2843, %r2842};
	shf.l.wrap.b32 	%r2844, %r2840, %r2841, 3;
	shf.l.wrap.b32 	%r2845, %r2841, %r2840, 3;
	mov.b64 	%rd4212, {%r2845, %r2844};
	xor.b64  	%rd4213, %rd4211, %rd4212;
	shr.u64 	%rd4214, %rd4149, 6;
	xor.b64  	%rd4215, %rd4213, %rd4214;
	shf.r.wrap.b32 	%r2846, %r2476, %r2477, 8;
	shf.r.wrap.b32 	%r2847, %r2477, %r2476, 8;
	mov.b64 	%rd4216, {%r2847, %r2846};
	shf.r.wrap.b32 	%r2848, %r2476, %r2477, 1;
	shf.r.wrap.b32 	%r2849, %r2477, %r2476, 1;
	mov.b64 	%rd4217, {%r2849, %r2848};
	xor.b64  	%rd4218, %rd4217, %rd4216;
	shr.u64 	%rd4219, %rd12033, 7;
	xor.b64  	%rd4220, %rd4218, %rd4219;
	add.s64 	%rd4221, %rd4220, %rd12034;
	add.s64 	%rd4222, %rd4221, %rd3964;
	add.s64 	%rd4223, %rd4222, %rd4215;
	add.s64 	%rd4224, %rd4223, %rd4088;
	xor.b64  	%rd4225, %rd4162, %rd4125;
	and.b64  	%rd4226, %rd4199, %rd4225;
	xor.b64  	%rd4227, %rd4226, %rd4125;
	add.s64 	%rd4228, %rd4224, %rd4227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2850,%dummy}, %rd4199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2851}, %rd4199;
	}
	shf.r.wrap.b32 	%r2852, %r2851, %r2850, 14;
	shf.r.wrap.b32 	%r2853, %r2850, %r2851, 14;
	mov.b64 	%rd4229, {%r2853, %r2852};
	shf.r.wrap.b32 	%r2854, %r2851, %r2850, 18;
	shf.r.wrap.b32 	%r2855, %r2850, %r2851, 18;
	mov.b64 	%rd4230, {%r2855, %r2854};
	xor.b64  	%rd4231, %rd4229, %rd4230;
	shf.l.wrap.b32 	%r2856, %r2850, %r2851, 23;
	shf.l.wrap.b32 	%r2857, %r2851, %r2850, 23;
	mov.b64 	%rd4232, {%r2857, %r2856};
	xor.b64  	%rd4233, %rd4231, %rd4232;
	add.s64 	%rd4234, %rd4228, %rd4233;
	add.s64 	%rd4235, %rd4234, -3051310485924567259;
	add.s64 	%rd4236, %rd4235, %rd4099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2858,%dummy}, %rd4210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2859}, %rd4210;
	}
	shf.r.wrap.b32 	%r2860, %r2859, %r2858, 28;
	shf.r.wrap.b32 	%r2861, %r2858, %r2859, 28;
	mov.b64 	%rd4237, {%r2861, %r2860};
	shf.l.wrap.b32 	%r2862, %r2858, %r2859, 30;
	shf.l.wrap.b32 	%r2863, %r2859, %r2858, 30;
	mov.b64 	%rd4238, {%r2863, %r2862};
	xor.b64  	%rd4239, %rd4237, %rd4238;
	shf.l.wrap.b32 	%r2864, %r2858, %r2859, 25;
	shf.l.wrap.b32 	%r2865, %r2859, %r2858, 25;
	mov.b64 	%rd4240, {%r2865, %r2864};
	xor.b64  	%rd4241, %rd4239, %rd4240;
	and.b64  	%rd4242, %rd4210, %rd4173;
	or.b64  	%rd4243, %rd4210, %rd4173;
	and.b64  	%rd4244, %rd4243, %rd4136;
	or.b64  	%rd4245, %rd4244, %rd4242;
	add.s64 	%rd4246, %rd4245, %rd4241;
	add.s64 	%rd4247, %rd4246, %rd4235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2866,%dummy}, %rd4186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2867}, %rd4186;
	}
	shf.r.wrap.b32 	%r2868, %r2867, %r2866, 19;
	shf.r.wrap.b32 	%r2869, %r2866, %r2867, 19;
	mov.b64 	%rd4248, {%r2869, %r2868};
	shf.l.wrap.b32 	%r2870, %r2866, %r2867, 3;
	shf.l.wrap.b32 	%r2871, %r2867, %r2866, 3;
	mov.b64 	%rd4249, {%r2871, %r2870};
	xor.b64  	%rd4250, %rd4248, %rd4249;
	shr.u64 	%rd4251, %rd4186, 6;
	xor.b64  	%rd4252, %rd4250, %rd4251;
	shf.r.wrap.b32 	%r2872, %r2504, %r2505, 8;
	shf.r.wrap.b32 	%r2873, %r2505, %r2504, 8;
	mov.b64 	%rd4253, {%r2873, %r2872};
	shf.r.wrap.b32 	%r2874, %r2504, %r2505, 1;
	shf.r.wrap.b32 	%r2875, %r2505, %r2504, 1;
	mov.b64 	%rd4254, {%r2875, %r2874};
	xor.b64  	%rd4255, %rd4254, %rd4253;
	shr.u64 	%rd4256, %rd12032, 7;
	xor.b64  	%rd4257, %rd4255, %rd4256;
	add.s64 	%rd4258, %rd4257, %rd12033;
	add.s64 	%rd4259, %rd4258, %rd4001;
	add.s64 	%rd4260, %rd4259, %rd4252;
	add.s64 	%rd4261, %rd4260, %rd4125;
	xor.b64  	%rd4262, %rd4199, %rd4162;
	and.b64  	%rd4263, %rd4236, %rd4262;
	xor.b64  	%rd4264, %rd4263, %rd4162;
	add.s64 	%rd4265, %rd4261, %rd4264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2876,%dummy}, %rd4236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2877}, %rd4236;
	}
	shf.r.wrap.b32 	%r2878, %r2877, %r2876, 14;
	shf.r.wrap.b32 	%r2879, %r2876, %r2877, 14;
	mov.b64 	%rd4266, {%r2879, %r2878};
	shf.r.wrap.b32 	%r2880, %r2877, %r2876, 18;
	shf.r.wrap.b32 	%r2881, %r2876, %r2877, 18;
	mov.b64 	%rd4267, {%r2881, %r2880};
	xor.b64  	%rd4268, %rd4266, %rd4267;
	shf.l.wrap.b32 	%r2882, %r2876, %r2877, 23;
	shf.l.wrap.b32 	%r2883, %r2877, %r2876, 23;
	mov.b64 	%rd4269, {%r2883, %r2882};
	xor.b64  	%rd4270, %rd4268, %rd4269;
	add.s64 	%rd4271, %rd4265, %rd4270;
	add.s64 	%rd4272, %rd4271, 489312712824947311;
	add.s64 	%rd4273, %rd4272, %rd4136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2884,%dummy}, %rd4247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2885}, %rd4247;
	}
	shf.r.wrap.b32 	%r2886, %r2885, %r2884, 28;
	shf.r.wrap.b32 	%r2887, %r2884, %r2885, 28;
	mov.b64 	%rd4274, {%r2887, %r2886};
	shf.l.wrap.b32 	%r2888, %r2884, %r2885, 30;
	shf.l.wrap.b32 	%r2889, %r2885, %r2884, 30;
	mov.b64 	%rd4275, {%r2889, %r2888};
	xor.b64  	%rd4276, %rd4274, %rd4275;
	shf.l.wrap.b32 	%r2890, %r2884, %r2885, 25;
	shf.l.wrap.b32 	%r2891, %r2885, %r2884, 25;
	mov.b64 	%rd4277, {%r2891, %r2890};
	xor.b64  	%rd4278, %rd4276, %rd4277;
	and.b64  	%rd4279, %rd4247, %rd4210;
	or.b64  	%rd4280, %rd4247, %rd4210;
	and.b64  	%rd4281, %rd4280, %rd4173;
	or.b64  	%rd4282, %rd4281, %rd4279;
	add.s64 	%rd4283, %rd4282, %rd4278;
	add.s64 	%rd4284, %rd4283, %rd4272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2892,%dummy}, %rd4223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2893}, %rd4223;
	}
	shf.r.wrap.b32 	%r2894, %r2893, %r2892, 19;
	shf.r.wrap.b32 	%r2895, %r2892, %r2893, 19;
	mov.b64 	%rd4285, {%r2895, %r2894};
	shf.l.wrap.b32 	%r2896, %r2892, %r2893, 3;
	shf.l.wrap.b32 	%r2897, %r2893, %r2892, 3;
	mov.b64 	%rd4286, {%r2897, %r2896};
	xor.b64  	%rd4287, %rd4285, %rd4286;
	shr.u64 	%rd4288, %rd4223, 6;
	xor.b64  	%rd4289, %rd4287, %rd4288;
	shf.r.wrap.b32 	%r2898, %r2533, %r2532, 1;
	shf.r.wrap.b32 	%r2899, %r2532, %r2533, 1;
	mov.b64 	%rd4290, {%r2899, %r2898};
	shf.r.wrap.b32 	%r2900, %r2533, %r2532, 8;
	shf.r.wrap.b32 	%r2901, %r2532, %r2533, 8;
	mov.b64 	%rd4291, {%r2901, %r2900};
	xor.b64  	%rd4292, %rd4290, %rd4291;
	shr.u64 	%rd4293, %rd3742, 7;
	xor.b64  	%rd4294, %rd4292, %rd4293;
	add.s64 	%rd4295, %rd4294, %rd12032;
	add.s64 	%rd4296, %rd4295, %rd4038;
	add.s64 	%rd4297, %rd4296, %rd4289;
	add.s64 	%rd4298, %rd4297, %rd4162;
	xor.b64  	%rd4299, %rd4236, %rd4199;
	and.b64  	%rd4300, %rd4273, %rd4299;
	xor.b64  	%rd4301, %rd4300, %rd4199;
	add.s64 	%rd4302, %rd4298, %rd4301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2902,%dummy}, %rd4273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2903}, %rd4273;
	}
	shf.r.wrap.b32 	%r2904, %r2903, %r2902, 14;
	shf.r.wrap.b32 	%r2905, %r2902, %r2903, 14;
	mov.b64 	%rd4303, {%r2905, %r2904};
	shf.r.wrap.b32 	%r2906, %r2903, %r2902, 18;
	shf.r.wrap.b32 	%r2907, %r2902, %r2903, 18;
	mov.b64 	%rd4304, {%r2907, %r2906};
	xor.b64  	%rd4305, %rd4303, %rd4304;
	shf.l.wrap.b32 	%r2908, %r2902, %r2903, 23;
	shf.l.wrap.b32 	%r2909, %r2903, %r2902, 23;
	mov.b64 	%rd4306, {%r2909, %r2908};
	xor.b64  	%rd4307, %rd4305, %rd4306;
	add.s64 	%rd4308, %rd4302, %rd4307;
	add.s64 	%rd4309, %rd4308, 1452737877330783856;
	add.s64 	%rd4310, %rd4309, %rd4173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2910,%dummy}, %rd4284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2911}, %rd4284;
	}
	shf.r.wrap.b32 	%r2912, %r2911, %r2910, 28;
	shf.r.wrap.b32 	%r2913, %r2910, %r2911, 28;
	mov.b64 	%rd4311, {%r2913, %r2912};
	shf.l.wrap.b32 	%r2914, %r2910, %r2911, 30;
	shf.l.wrap.b32 	%r2915, %r2911, %r2910, 30;
	mov.b64 	%rd4312, {%r2915, %r2914};
	xor.b64  	%rd4313, %rd4311, %rd4312;
	shf.l.wrap.b32 	%r2916, %r2910, %r2911, 25;
	shf.l.wrap.b32 	%r2917, %r2911, %r2910, 25;
	mov.b64 	%rd4314, {%r2917, %r2916};
	xor.b64  	%rd4315, %rd4313, %rd4314;
	and.b64  	%rd4316, %rd4284, %rd4247;
	or.b64  	%rd4317, %rd4284, %rd4247;
	and.b64  	%rd4318, %rd4317, %rd4210;
	or.b64  	%rd4319, %rd4318, %rd4316;
	add.s64 	%rd4320, %rd4319, %rd4315;
	add.s64 	%rd4321, %rd4320, %rd4309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2918,%dummy}, %rd4260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2919}, %rd4260;
	}
	shf.r.wrap.b32 	%r2920, %r2919, %r2918, 19;
	shf.r.wrap.b32 	%r2921, %r2918, %r2919, 19;
	mov.b64 	%rd4322, {%r2921, %r2920};
	shf.l.wrap.b32 	%r2922, %r2918, %r2919, 3;
	shf.l.wrap.b32 	%r2923, %r2919, %r2918, 3;
	mov.b64 	%rd4323, {%r2923, %r2922};
	xor.b64  	%rd4324, %rd4322, %rd4323;
	shr.u64 	%rd4325, %rd4260, 6;
	xor.b64  	%rd4326, %rd4324, %rd4325;
	shf.r.wrap.b32 	%r2924, %r2561, %r2560, 1;
	shf.r.wrap.b32 	%r2925, %r2560, %r2561, 1;
	mov.b64 	%rd4327, {%r2925, %r2924};
	shf.r.wrap.b32 	%r2926, %r2561, %r2560, 8;
	shf.r.wrap.b32 	%r2927, %r2560, %r2561, 8;
	mov.b64 	%rd4328, {%r2927, %r2926};
	xor.b64  	%rd4329, %rd4327, %rd4328;
	shr.u64 	%rd4330, %rd3779, 7;
	xor.b64  	%rd4331, %rd4329, %rd4330;
	add.s64 	%rd4332, %rd4331, %rd3742;
	add.s64 	%rd4333, %rd4332, %rd4075;
	add.s64 	%rd4334, %rd4333, %rd4326;
	add.s64 	%rd4335, %rd4334, %rd4199;
	xor.b64  	%rd4336, %rd4273, %rd4236;
	and.b64  	%rd4337, %rd4310, %rd4336;
	xor.b64  	%rd4338, %rd4337, %rd4236;
	add.s64 	%rd4339, %rd4335, %rd4338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2928,%dummy}, %rd4310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2929}, %rd4310;
	}
	shf.r.wrap.b32 	%r2930, %r2929, %r2928, 14;
	shf.r.wrap.b32 	%r2931, %r2928, %r2929, 14;
	mov.b64 	%rd4340, {%r2931, %r2930};
	shf.r.wrap.b32 	%r2932, %r2929, %r2928, 18;
	shf.r.wrap.b32 	%r2933, %r2928, %r2929, 18;
	mov.b64 	%rd4341, {%r2933, %r2932};
	xor.b64  	%rd4342, %rd4340, %rd4341;
	shf.l.wrap.b32 	%r2934, %r2928, %r2929, 23;
	shf.l.wrap.b32 	%r2935, %r2929, %r2928, 23;
	mov.b64 	%rd4343, {%r2935, %r2934};
	xor.b64  	%rd4344, %rd4342, %rd4343;
	add.s64 	%rd4345, %rd4339, %rd4344;
	add.s64 	%rd4346, %rd4345, 2861767655752347644;
	add.s64 	%rd4347, %rd4346, %rd4210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2936,%dummy}, %rd4321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2937}, %rd4321;
	}
	shf.r.wrap.b32 	%r2938, %r2937, %r2936, 28;
	shf.r.wrap.b32 	%r2939, %r2936, %r2937, 28;
	mov.b64 	%rd4348, {%r2939, %r2938};
	shf.l.wrap.b32 	%r2940, %r2936, %r2937, 30;
	shf.l.wrap.b32 	%r2941, %r2937, %r2936, 30;
	mov.b64 	%rd4349, {%r2941, %r2940};
	xor.b64  	%rd4350, %rd4348, %rd4349;
	shf.l.wrap.b32 	%r2942, %r2936, %r2937, 25;
	shf.l.wrap.b32 	%r2943, %r2937, %r2936, 25;
	mov.b64 	%rd4351, {%r2943, %r2942};
	xor.b64  	%rd4352, %rd4350, %rd4351;
	and.b64  	%rd4353, %rd4321, %rd4284;
	or.b64  	%rd4354, %rd4321, %rd4284;
	and.b64  	%rd4355, %rd4354, %rd4247;
	or.b64  	%rd4356, %rd4355, %rd4353;
	add.s64 	%rd4357, %rd4356, %rd4352;
	add.s64 	%rd4358, %rd4357, %rd4346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2944,%dummy}, %rd4297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2945}, %rd4297;
	}
	shf.r.wrap.b32 	%r2946, %r2945, %r2944, 19;
	shf.r.wrap.b32 	%r2947, %r2944, %r2945, 19;
	mov.b64 	%rd4359, {%r2947, %r2946};
	shf.l.wrap.b32 	%r2948, %r2944, %r2945, 3;
	shf.l.wrap.b32 	%r2949, %r2945, %r2944, 3;
	mov.b64 	%rd4360, {%r2949, %r2948};
	xor.b64  	%rd4361, %rd4359, %rd4360;
	shr.u64 	%rd4362, %rd4297, 6;
	xor.b64  	%rd4363, %rd4361, %rd4362;
	shf.r.wrap.b32 	%r2950, %r2589, %r2588, 1;
	shf.r.wrap.b32 	%r2951, %r2588, %r2589, 1;
	mov.b64 	%rd4364, {%r2951, %r2950};
	shf.r.wrap.b32 	%r2952, %r2589, %r2588, 8;
	shf.r.wrap.b32 	%r2953, %r2588, %r2589, 8;
	mov.b64 	%rd4365, {%r2953, %r2952};
	xor.b64  	%rd4366, %rd4364, %rd4365;
	shr.u64 	%rd4367, %rd3816, 7;
	xor.b64  	%rd4368, %rd4366, %rd4367;
	add.s64 	%rd4369, %rd4368, %rd3779;
	add.s64 	%rd4370, %rd4369, %rd4112;
	add.s64 	%rd4371, %rd4370, %rd4363;
	add.s64 	%rd4372, %rd4371, %rd4236;
	xor.b64  	%rd4373, %rd4310, %rd4273;
	and.b64  	%rd4374, %rd4347, %rd4373;
	xor.b64  	%rd4375, %rd4374, %rd4273;
	add.s64 	%rd4376, %rd4372, %rd4375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2954,%dummy}, %rd4347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2955}, %rd4347;
	}
	shf.r.wrap.b32 	%r2956, %r2955, %r2954, 14;
	shf.r.wrap.b32 	%r2957, %r2954, %r2955, 14;
	mov.b64 	%rd4377, {%r2957, %r2956};
	shf.r.wrap.b32 	%r2958, %r2955, %r2954, 18;
	shf.r.wrap.b32 	%r2959, %r2954, %r2955, 18;
	mov.b64 	%rd4378, {%r2959, %r2958};
	xor.b64  	%rd4379, %rd4377, %rd4378;
	shf.l.wrap.b32 	%r2960, %r2954, %r2955, 23;
	shf.l.wrap.b32 	%r2961, %r2955, %r2954, 23;
	mov.b64 	%rd4380, {%r2961, %r2960};
	xor.b64  	%rd4381, %rd4379, %rd4380;
	add.s64 	%rd4382, %rd4376, %rd4381;
	add.s64 	%rd4383, %rd4382, 3322285676063803686;
	add.s64 	%rd4384, %rd4383, %rd4247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2962,%dummy}, %rd4358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2963}, %rd4358;
	}
	shf.r.wrap.b32 	%r2964, %r2963, %r2962, 28;
	shf.r.wrap.b32 	%r2965, %r2962, %r2963, 28;
	mov.b64 	%rd4385, {%r2965, %r2964};
	shf.l.wrap.b32 	%r2966, %r2962, %r2963, 30;
	shf.l.wrap.b32 	%r2967, %r2963, %r2962, 30;
	mov.b64 	%rd4386, {%r2967, %r2966};
	xor.b64  	%rd4387, %rd4385, %rd4386;
	shf.l.wrap.b32 	%r2968, %r2962, %r2963, 25;
	shf.l.wrap.b32 	%r2969, %r2963, %r2962, 25;
	mov.b64 	%rd4388, {%r2969, %r2968};
	xor.b64  	%rd4389, %rd4387, %rd4388;
	and.b64  	%rd4390, %rd4358, %rd4321;
	or.b64  	%rd4391, %rd4358, %rd4321;
	and.b64  	%rd4392, %rd4391, %rd4284;
	or.b64  	%rd4393, %rd4392, %rd4390;
	add.s64 	%rd4394, %rd4393, %rd4389;
	add.s64 	%rd4395, %rd4394, %rd4383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2970,%dummy}, %rd4334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2971}, %rd4334;
	}
	shf.r.wrap.b32 	%r2972, %r2971, %r2970, 19;
	shf.r.wrap.b32 	%r2973, %r2970, %r2971, 19;
	mov.b64 	%rd4396, {%r2973, %r2972};
	shf.l.wrap.b32 	%r2974, %r2970, %r2971, 3;
	shf.l.wrap.b32 	%r2975, %r2971, %r2970, 3;
	mov.b64 	%rd4397, {%r2975, %r2974};
	xor.b64  	%rd4398, %rd4396, %rd4397;
	shr.u64 	%rd4399, %rd4334, 6;
	xor.b64  	%rd4400, %rd4398, %rd4399;
	shf.r.wrap.b32 	%r2976, %r2617, %r2616, 1;
	shf.r.wrap.b32 	%r2977, %r2616, %r2617, 1;
	mov.b64 	%rd4401, {%r2977, %r2976};
	shf.r.wrap.b32 	%r2978, %r2617, %r2616, 8;
	shf.r.wrap.b32 	%r2979, %r2616, %r2617, 8;
	mov.b64 	%rd4402, {%r2979, %r2978};
	xor.b64  	%rd4403, %rd4401, %rd4402;
	shr.u64 	%rd4404, %rd3853, 7;
	xor.b64  	%rd4405, %rd4403, %rd4404;
	add.s64 	%rd4406, %rd4405, %rd3816;
	add.s64 	%rd4407, %rd4406, %rd4149;
	add.s64 	%rd4408, %rd4407, %rd4400;
	add.s64 	%rd4409, %rd4408, %rd4273;
	xor.b64  	%rd4410, %rd4347, %rd4310;
	and.b64  	%rd4411, %rd4384, %rd4410;
	xor.b64  	%rd4412, %rd4411, %rd4310;
	add.s64 	%rd4413, %rd4409, %rd4412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2980,%dummy}, %rd4384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2981}, %rd4384;
	}
	shf.r.wrap.b32 	%r2982, %r2981, %r2980, 14;
	shf.r.wrap.b32 	%r2983, %r2980, %r2981, 14;
	mov.b64 	%rd4414, {%r2983, %r2982};
	shf.r.wrap.b32 	%r2984, %r2981, %r2980, 18;
	shf.r.wrap.b32 	%r2985, %r2980, %r2981, 18;
	mov.b64 	%rd4415, {%r2985, %r2984};
	xor.b64  	%rd4416, %rd4414, %rd4415;
	shf.l.wrap.b32 	%r2986, %r2980, %r2981, 23;
	shf.l.wrap.b32 	%r2987, %r2981, %r2980, 23;
	mov.b64 	%rd4417, {%r2987, %r2986};
	xor.b64  	%rd4418, %rd4416, %rd4417;
	add.s64 	%rd4419, %rd4413, %rd4418;
	add.s64 	%rd4420, %rd4419, 5560940570517711597;
	add.s64 	%rd4421, %rd4420, %rd4284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2988,%dummy}, %rd4395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2989}, %rd4395;
	}
	shf.r.wrap.b32 	%r2990, %r2989, %r2988, 28;
	shf.r.wrap.b32 	%r2991, %r2988, %r2989, 28;
	mov.b64 	%rd4422, {%r2991, %r2990};
	shf.l.wrap.b32 	%r2992, %r2988, %r2989, 30;
	shf.l.wrap.b32 	%r2993, %r2989, %r2988, 30;
	mov.b64 	%rd4423, {%r2993, %r2992};
	xor.b64  	%rd4424, %rd4422, %rd4423;
	shf.l.wrap.b32 	%r2994, %r2988, %r2989, 25;
	shf.l.wrap.b32 	%r2995, %r2989, %r2988, 25;
	mov.b64 	%rd4425, {%r2995, %r2994};
	xor.b64  	%rd4426, %rd4424, %rd4425;
	and.b64  	%rd4427, %rd4395, %rd4358;
	or.b64  	%rd4428, %rd4395, %rd4358;
	and.b64  	%rd4429, %rd4428, %rd4321;
	or.b64  	%rd4430, %rd4429, %rd4427;
	add.s64 	%rd4431, %rd4430, %rd4426;
	add.s64 	%rd4432, %rd4431, %rd4420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2996,%dummy}, %rd4371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2997}, %rd4371;
	}
	shf.r.wrap.b32 	%r2998, %r2997, %r2996, 19;
	shf.r.wrap.b32 	%r2999, %r2996, %r2997, 19;
	mov.b64 	%rd4433, {%r2999, %r2998};
	shf.l.wrap.b32 	%r3000, %r2996, %r2997, 3;
	shf.l.wrap.b32 	%r3001, %r2997, %r2996, 3;
	mov.b64 	%rd4434, {%r3001, %r3000};
	xor.b64  	%rd4435, %rd4433, %rd4434;
	shr.u64 	%rd4436, %rd4371, 6;
	xor.b64  	%rd4437, %rd4435, %rd4436;
	shf.r.wrap.b32 	%r3002, %r2645, %r2644, 1;
	shf.r.wrap.b32 	%r3003, %r2644, %r2645, 1;
	mov.b64 	%rd4438, {%r3003, %r3002};
	shf.r.wrap.b32 	%r3004, %r2645, %r2644, 8;
	shf.r.wrap.b32 	%r3005, %r2644, %r2645, 8;
	mov.b64 	%rd4439, {%r3005, %r3004};
	xor.b64  	%rd4440, %rd4438, %rd4439;
	shr.u64 	%rd4441, %rd3890, 7;
	xor.b64  	%rd4442, %rd4440, %rd4441;
	add.s64 	%rd4443, %rd4442, %rd3853;
	add.s64 	%rd4444, %rd4443, %rd4186;
	add.s64 	%rd4445, %rd4444, %rd4437;
	add.s64 	%rd4446, %rd4445, %rd4310;
	xor.b64  	%rd4447, %rd4384, %rd4347;
	and.b64  	%rd4448, %rd4421, %rd4447;
	xor.b64  	%rd4449, %rd4448, %rd4347;
	add.s64 	%rd4450, %rd4446, %rd4449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3006,%dummy}, %rd4421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3007}, %rd4421;
	}
	shf.r.wrap.b32 	%r3008, %r3007, %r3006, 14;
	shf.r.wrap.b32 	%r3009, %r3006, %r3007, 14;
	mov.b64 	%rd4451, {%r3009, %r3008};
	shf.r.wrap.b32 	%r3010, %r3007, %r3006, 18;
	shf.r.wrap.b32 	%r3011, %r3006, %r3007, 18;
	mov.b64 	%rd4452, {%r3011, %r3010};
	xor.b64  	%rd4453, %rd4451, %rd4452;
	shf.l.wrap.b32 	%r3012, %r3006, %r3007, 23;
	shf.l.wrap.b32 	%r3013, %r3007, %r3006, 23;
	mov.b64 	%rd4454, {%r3013, %r3012};
	xor.b64  	%rd4455, %rd4453, %rd4454;
	add.s64 	%rd4456, %rd4450, %rd4455;
	add.s64 	%rd4457, %rd4456, 5996557281743188959;
	add.s64 	%rd4458, %rd4457, %rd4321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3014,%dummy}, %rd4432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3015}, %rd4432;
	}
	shf.r.wrap.b32 	%r3016, %r3015, %r3014, 28;
	shf.r.wrap.b32 	%r3017, %r3014, %r3015, 28;
	mov.b64 	%rd4459, {%r3017, %r3016};
	shf.l.wrap.b32 	%r3018, %r3014, %r3015, 30;
	shf.l.wrap.b32 	%r3019, %r3015, %r3014, 30;
	mov.b64 	%rd4460, {%r3019, %r3018};
	xor.b64  	%rd4461, %rd4459, %rd4460;
	shf.l.wrap.b32 	%r3020, %r3014, %r3015, 25;
	shf.l.wrap.b32 	%r3021, %r3015, %r3014, 25;
	mov.b64 	%rd4462, {%r3021, %r3020};
	xor.b64  	%rd4463, %rd4461, %rd4462;
	and.b64  	%rd4464, %rd4432, %rd4395;
	or.b64  	%rd4465, %rd4432, %rd4395;
	and.b64  	%rd4466, %rd4465, %rd4358;
	or.b64  	%rd4467, %rd4466, %rd4464;
	add.s64 	%rd4468, %rd4467, %rd4463;
	add.s64 	%rd4469, %rd4468, %rd4457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3022,%dummy}, %rd4408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3023}, %rd4408;
	}
	shf.r.wrap.b32 	%r3024, %r3023, %r3022, 19;
	shf.r.wrap.b32 	%r3025, %r3022, %r3023, 19;
	mov.b64 	%rd4470, {%r3025, %r3024};
	shf.l.wrap.b32 	%r3026, %r3022, %r3023, 3;
	shf.l.wrap.b32 	%r3027, %r3023, %r3022, 3;
	mov.b64 	%rd4471, {%r3027, %r3026};
	xor.b64  	%rd4472, %rd4470, %rd4471;
	shr.u64 	%rd4473, %rd4408, 6;
	xor.b64  	%rd4474, %rd4472, %rd4473;
	shf.r.wrap.b32 	%r3028, %r2673, %r2672, 1;
	shf.r.wrap.b32 	%r3029, %r2672, %r2673, 1;
	mov.b64 	%rd4475, {%r3029, %r3028};
	shf.r.wrap.b32 	%r3030, %r2673, %r2672, 8;
	shf.r.wrap.b32 	%r3031, %r2672, %r2673, 8;
	mov.b64 	%rd4476, {%r3031, %r3030};
	xor.b64  	%rd4477, %rd4475, %rd4476;
	shr.u64 	%rd4478, %rd3927, 7;
	xor.b64  	%rd4479, %rd4477, %rd4478;
	add.s64 	%rd4480, %rd4479, %rd3890;
	add.s64 	%rd4481, %rd4480, %rd4223;
	add.s64 	%rd4482, %rd4481, %rd4474;
	add.s64 	%rd4483, %rd4482, %rd4347;
	xor.b64  	%rd4484, %rd4421, %rd4384;
	and.b64  	%rd4485, %rd4458, %rd4484;
	xor.b64  	%rd4486, %rd4485, %rd4384;
	add.s64 	%rd4487, %rd4483, %rd4486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3032,%dummy}, %rd4458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3033}, %rd4458;
	}
	shf.r.wrap.b32 	%r3034, %r3033, %r3032, 14;
	shf.r.wrap.b32 	%r3035, %r3032, %r3033, 14;
	mov.b64 	%rd4488, {%r3035, %r3034};
	shf.r.wrap.b32 	%r3036, %r3033, %r3032, 18;
	shf.r.wrap.b32 	%r3037, %r3032, %r3033, 18;
	mov.b64 	%rd4489, {%r3037, %r3036};
	xor.b64  	%rd4490, %rd4488, %rd4489;
	shf.l.wrap.b32 	%r3038, %r3032, %r3033, 23;
	shf.l.wrap.b32 	%r3039, %r3033, %r3032, 23;
	mov.b64 	%rd4491, {%r3039, %r3038};
	xor.b64  	%rd4492, %rd4490, %rd4491;
	add.s64 	%rd4493, %rd4487, %rd4492;
	add.s64 	%rd4494, %rd4493, 7280758554555802590;
	add.s64 	%rd4495, %rd4494, %rd4358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3040,%dummy}, %rd4469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3041}, %rd4469;
	}
	shf.r.wrap.b32 	%r3042, %r3041, %r3040, 28;
	shf.r.wrap.b32 	%r3043, %r3040, %r3041, 28;
	mov.b64 	%rd4496, {%r3043, %r3042};
	shf.l.wrap.b32 	%r3044, %r3040, %r3041, 30;
	shf.l.wrap.b32 	%r3045, %r3041, %r3040, 30;
	mov.b64 	%rd4497, {%r3045, %r3044};
	xor.b64  	%rd4498, %rd4496, %rd4497;
	shf.l.wrap.b32 	%r3046, %r3040, %r3041, 25;
	shf.l.wrap.b32 	%r3047, %r3041, %r3040, 25;
	mov.b64 	%rd4499, {%r3047, %r3046};
	xor.b64  	%rd4500, %rd4498, %rd4499;
	and.b64  	%rd4501, %rd4469, %rd4432;
	or.b64  	%rd4502, %rd4469, %rd4432;
	and.b64  	%rd4503, %rd4502, %rd4395;
	or.b64  	%rd4504, %rd4503, %rd4501;
	add.s64 	%rd4505, %rd4504, %rd4500;
	add.s64 	%rd4506, %rd4505, %rd4494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3048,%dummy}, %rd4445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3049}, %rd4445;
	}
	shf.r.wrap.b32 	%r3050, %r3049, %r3048, 19;
	shf.r.wrap.b32 	%r3051, %r3048, %r3049, 19;
	mov.b64 	%rd4507, {%r3051, %r3050};
	shf.l.wrap.b32 	%r3052, %r3048, %r3049, 3;
	shf.l.wrap.b32 	%r3053, %r3049, %r3048, 3;
	mov.b64 	%rd4508, {%r3053, %r3052};
	xor.b64  	%rd4509, %rd4507, %rd4508;
	shr.u64 	%rd4510, %rd4445, 6;
	xor.b64  	%rd4511, %rd4509, %rd4510;
	shf.r.wrap.b32 	%r3054, %r2701, %r2700, 1;
	shf.r.wrap.b32 	%r3055, %r2700, %r2701, 1;
	mov.b64 	%rd4512, {%r3055, %r3054};
	shf.r.wrap.b32 	%r3056, %r2701, %r2700, 8;
	shf.r.wrap.b32 	%r3057, %r2700, %r2701, 8;
	mov.b64 	%rd4513, {%r3057, %r3056};
	xor.b64  	%rd4514, %rd4512, %rd4513;
	shr.u64 	%rd4515, %rd3964, 7;
	xor.b64  	%rd4516, %rd4514, %rd4515;
	add.s64 	%rd4517, %rd4516, %rd3927;
	add.s64 	%rd4518, %rd4517, %rd4260;
	add.s64 	%rd4519, %rd4518, %rd4511;
	add.s64 	%rd4520, %rd4519, %rd4384;
	xor.b64  	%rd4521, %rd4458, %rd4421;
	and.b64  	%rd4522, %rd4495, %rd4521;
	xor.b64  	%rd4523, %rd4522, %rd4421;
	add.s64 	%rd4524, %rd4520, %rd4523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3058,%dummy}, %rd4495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3059}, %rd4495;
	}
	shf.r.wrap.b32 	%r3060, %r3059, %r3058, 14;
	shf.r.wrap.b32 	%r3061, %r3058, %r3059, 14;
	mov.b64 	%rd4525, {%r3061, %r3060};
	shf.r.wrap.b32 	%r3062, %r3059, %r3058, 18;
	shf.r.wrap.b32 	%r3063, %r3058, %r3059, 18;
	mov.b64 	%rd4526, {%r3063, %r3062};
	xor.b64  	%rd4527, %rd4525, %rd4526;
	shf.l.wrap.b32 	%r3064, %r3058, %r3059, 23;
	shf.l.wrap.b32 	%r3065, %r3059, %r3058, 23;
	mov.b64 	%rd4528, {%r3065, %r3064};
	xor.b64  	%rd4529, %rd4527, %rd4528;
	add.s64 	%rd4530, %rd4524, %rd4529;
	add.s64 	%rd4531, %rd4530, 8532644243296465576;
	add.s64 	%rd4532, %rd4531, %rd4395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3066,%dummy}, %rd4506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3067}, %rd4506;
	}
	shf.r.wrap.b32 	%r3068, %r3067, %r3066, 28;
	shf.r.wrap.b32 	%r3069, %r3066, %r3067, 28;
	mov.b64 	%rd4533, {%r3069, %r3068};
	shf.l.wrap.b32 	%r3070, %r3066, %r3067, 30;
	shf.l.wrap.b32 	%r3071, %r3067, %r3066, 30;
	mov.b64 	%rd4534, {%r3071, %r3070};
	xor.b64  	%rd4535, %rd4533, %rd4534;
	shf.l.wrap.b32 	%r3072, %r3066, %r3067, 25;
	shf.l.wrap.b32 	%r3073, %r3067, %r3066, 25;
	mov.b64 	%rd4536, {%r3073, %r3072};
	xor.b64  	%rd4537, %rd4535, %rd4536;
	and.b64  	%rd4538, %rd4506, %rd4469;
	or.b64  	%rd4539, %rd4506, %rd4469;
	and.b64  	%rd4540, %rd4539, %rd4432;
	or.b64  	%rd4541, %rd4540, %rd4538;
	add.s64 	%rd4542, %rd4541, %rd4537;
	add.s64 	%rd4543, %rd4542, %rd4531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3074,%dummy}, %rd4482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3075}, %rd4482;
	}
	shf.r.wrap.b32 	%r3076, %r3075, %r3074, 19;
	shf.r.wrap.b32 	%r3077, %r3074, %r3075, 19;
	mov.b64 	%rd4544, {%r3077, %r3076};
	shf.l.wrap.b32 	%r3078, %r3074, %r3075, 3;
	shf.l.wrap.b32 	%r3079, %r3075, %r3074, 3;
	mov.b64 	%rd4545, {%r3079, %r3078};
	xor.b64  	%rd4546, %rd4544, %rd4545;
	shr.u64 	%rd4547, %rd4482, 6;
	xor.b64  	%rd4548, %rd4546, %rd4547;
	shf.r.wrap.b32 	%r3080, %r2729, %r2728, 1;
	shf.r.wrap.b32 	%r3081, %r2728, %r2729, 1;
	mov.b64 	%rd4549, {%r3081, %r3080};
	shf.r.wrap.b32 	%r3082, %r2729, %r2728, 8;
	shf.r.wrap.b32 	%r3083, %r2728, %r2729, 8;
	mov.b64 	%rd4550, {%r3083, %r3082};
	xor.b64  	%rd4551, %rd4549, %rd4550;
	shr.u64 	%rd4552, %rd4001, 7;
	xor.b64  	%rd4553, %rd4551, %rd4552;
	add.s64 	%rd4554, %rd4553, %rd3964;
	add.s64 	%rd4555, %rd4554, %rd4297;
	add.s64 	%rd4556, %rd4555, %rd4548;
	add.s64 	%rd4557, %rd4556, %rd4421;
	xor.b64  	%rd4558, %rd4495, %rd4458;
	and.b64  	%rd4559, %rd4532, %rd4558;
	xor.b64  	%rd4560, %rd4559, %rd4458;
	add.s64 	%rd4561, %rd4557, %rd4560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3084,%dummy}, %rd4532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3085}, %rd4532;
	}
	shf.r.wrap.b32 	%r3086, %r3085, %r3084, 14;
	shf.r.wrap.b32 	%r3087, %r3084, %r3085, 14;
	mov.b64 	%rd4562, {%r3087, %r3086};
	shf.r.wrap.b32 	%r3088, %r3085, %r3084, 18;
	shf.r.wrap.b32 	%r3089, %r3084, %r3085, 18;
	mov.b64 	%rd4563, {%r3089, %r3088};
	xor.b64  	%rd4564, %rd4562, %rd4563;
	shf.l.wrap.b32 	%r3090, %r3084, %r3085, 23;
	shf.l.wrap.b32 	%r3091, %r3085, %r3084, 23;
	mov.b64 	%rd4565, {%r3091, %r3090};
	xor.b64  	%rd4566, %rd4564, %rd4565;
	add.s64 	%rd4567, %rd4561, %rd4566;
	add.s64 	%rd4568, %rd4567, -9096487096722542874;
	add.s64 	%rd4569, %rd4568, %rd4432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3092,%dummy}, %rd4543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3093}, %rd4543;
	}
	shf.r.wrap.b32 	%r3094, %r3093, %r3092, 28;
	shf.r.wrap.b32 	%r3095, %r3092, %r3093, 28;
	mov.b64 	%rd4570, {%r3095, %r3094};
	shf.l.wrap.b32 	%r3096, %r3092, %r3093, 30;
	shf.l.wrap.b32 	%r3097, %r3093, %r3092, 30;
	mov.b64 	%rd4571, {%r3097, %r3096};
	xor.b64  	%rd4572, %rd4570, %rd4571;
	shf.l.wrap.b32 	%r3098, %r3092, %r3093, 25;
	shf.l.wrap.b32 	%r3099, %r3093, %r3092, 25;
	mov.b64 	%rd4573, {%r3099, %r3098};
	xor.b64  	%rd4574, %rd4572, %rd4573;
	and.b64  	%rd4575, %rd4543, %rd4506;
	or.b64  	%rd4576, %rd4543, %rd4506;
	and.b64  	%rd4577, %rd4576, %rd4469;
	or.b64  	%rd4578, %rd4577, %rd4575;
	add.s64 	%rd4579, %rd4578, %rd4574;
	add.s64 	%rd4580, %rd4579, %rd4568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3100,%dummy}, %rd4519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3101}, %rd4519;
	}
	shf.r.wrap.b32 	%r3102, %r3101, %r3100, 19;
	shf.r.wrap.b32 	%r3103, %r3100, %r3101, 19;
	mov.b64 	%rd4581, {%r3103, %r3102};
	shf.l.wrap.b32 	%r3104, %r3100, %r3101, 3;
	shf.l.wrap.b32 	%r3105, %r3101, %r3100, 3;
	mov.b64 	%rd4582, {%r3105, %r3104};
	xor.b64  	%rd4583, %rd4581, %rd4582;
	shr.u64 	%rd4584, %rd4519, 6;
	xor.b64  	%rd4585, %rd4583, %rd4584;
	shf.r.wrap.b32 	%r3106, %r2757, %r2756, 1;
	shf.r.wrap.b32 	%r3107, %r2756, %r2757, 1;
	mov.b64 	%rd4586, {%r3107, %r3106};
	shf.r.wrap.b32 	%r3108, %r2757, %r2756, 8;
	shf.r.wrap.b32 	%r3109, %r2756, %r2757, 8;
	mov.b64 	%rd4587, {%r3109, %r3108};
	xor.b64  	%rd4588, %rd4586, %rd4587;
	shr.u64 	%rd4589, %rd4038, 7;
	xor.b64  	%rd4590, %rd4588, %rd4589;
	add.s64 	%rd4591, %rd4590, %rd4001;
	add.s64 	%rd4592, %rd4591, %rd4334;
	add.s64 	%rd4593, %rd4592, %rd4585;
	add.s64 	%rd4594, %rd4593, %rd4458;
	xor.b64  	%rd4595, %rd4532, %rd4495;
	and.b64  	%rd4596, %rd4569, %rd4595;
	xor.b64  	%rd4597, %rd4596, %rd4495;
	add.s64 	%rd4598, %rd4594, %rd4597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3110,%dummy}, %rd4569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3111}, %rd4569;
	}
	shf.r.wrap.b32 	%r3112, %r3111, %r3110, 14;
	shf.r.wrap.b32 	%r3113, %r3110, %r3111, 14;
	mov.b64 	%rd4599, {%r3113, %r3112};
	shf.r.wrap.b32 	%r3114, %r3111, %r3110, 18;
	shf.r.wrap.b32 	%r3115, %r3110, %r3111, 18;
	mov.b64 	%rd4600, {%r3115, %r3114};
	xor.b64  	%rd4601, %rd4599, %rd4600;
	shf.l.wrap.b32 	%r3116, %r3110, %r3111, 23;
	shf.l.wrap.b32 	%r3117, %r3111, %r3110, 23;
	mov.b64 	%rd4602, {%r3117, %r3116};
	xor.b64  	%rd4603, %rd4601, %rd4602;
	add.s64 	%rd4604, %rd4598, %rd4603;
	add.s64 	%rd4605, %rd4604, -7894198246740708037;
	add.s64 	%rd4606, %rd4605, %rd4469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3118,%dummy}, %rd4580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3119}, %rd4580;
	}
	shf.r.wrap.b32 	%r3120, %r3119, %r3118, 28;
	shf.r.wrap.b32 	%r3121, %r3118, %r3119, 28;
	mov.b64 	%rd4607, {%r3121, %r3120};
	shf.l.wrap.b32 	%r3122, %r3118, %r3119, 30;
	shf.l.wrap.b32 	%r3123, %r3119, %r3118, 30;
	mov.b64 	%rd4608, {%r3123, %r3122};
	xor.b64  	%rd4609, %rd4607, %rd4608;
	shf.l.wrap.b32 	%r3124, %r3118, %r3119, 25;
	shf.l.wrap.b32 	%r3125, %r3119, %r3118, 25;
	mov.b64 	%rd4610, {%r3125, %r3124};
	xor.b64  	%rd4611, %rd4609, %rd4610;
	and.b64  	%rd4612, %rd4580, %rd4543;
	or.b64  	%rd4613, %rd4580, %rd4543;
	and.b64  	%rd4614, %rd4613, %rd4506;
	or.b64  	%rd4615, %rd4614, %rd4612;
	add.s64 	%rd4616, %rd4615, %rd4611;
	add.s64 	%rd4617, %rd4616, %rd4605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3126,%dummy}, %rd4556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3127}, %rd4556;
	}
	shf.r.wrap.b32 	%r3128, %r3127, %r3126, 19;
	shf.r.wrap.b32 	%r3129, %r3126, %r3127, 19;
	mov.b64 	%rd4618, {%r3129, %r3128};
	shf.l.wrap.b32 	%r3130, %r3126, %r3127, 3;
	shf.l.wrap.b32 	%r3131, %r3127, %r3126, 3;
	mov.b64 	%rd4619, {%r3131, %r3130};
	xor.b64  	%rd4620, %rd4618, %rd4619;
	shr.u64 	%rd4621, %rd4556, 6;
	xor.b64  	%rd4622, %rd4620, %rd4621;
	shf.r.wrap.b32 	%r3132, %r2785, %r2784, 1;
	shf.r.wrap.b32 	%r3133, %r2784, %r2785, 1;
	mov.b64 	%rd4623, {%r3133, %r3132};
	shf.r.wrap.b32 	%r3134, %r2785, %r2784, 8;
	shf.r.wrap.b32 	%r3135, %r2784, %r2785, 8;
	mov.b64 	%rd4624, {%r3135, %r3134};
	xor.b64  	%rd4625, %rd4623, %rd4624;
	shr.u64 	%rd4626, %rd4075, 7;
	xor.b64  	%rd4627, %rd4625, %rd4626;
	add.s64 	%rd4628, %rd4627, %rd4038;
	add.s64 	%rd4629, %rd4628, %rd4371;
	add.s64 	%rd4630, %rd4629, %rd4622;
	add.s64 	%rd4631, %rd4630, %rd4495;
	xor.b64  	%rd4632, %rd4569, %rd4532;
	and.b64  	%rd4633, %rd4606, %rd4632;
	xor.b64  	%rd4634, %rd4633, %rd4532;
	add.s64 	%rd4635, %rd4631, %rd4634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3136,%dummy}, %rd4606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3137}, %rd4606;
	}
	shf.r.wrap.b32 	%r3138, %r3137, %r3136, 14;
	shf.r.wrap.b32 	%r3139, %r3136, %r3137, 14;
	mov.b64 	%rd4636, {%r3139, %r3138};
	shf.r.wrap.b32 	%r3140, %r3137, %r3136, 18;
	shf.r.wrap.b32 	%r3141, %r3136, %r3137, 18;
	mov.b64 	%rd4637, {%r3141, %r3140};
	xor.b64  	%rd4638, %rd4636, %rd4637;
	shf.l.wrap.b32 	%r3142, %r3136, %r3137, 23;
	shf.l.wrap.b32 	%r3143, %r3137, %r3136, 23;
	mov.b64 	%rd4639, {%r3143, %r3142};
	xor.b64  	%rd4640, %rd4638, %rd4639;
	add.s64 	%rd4641, %rd4635, %rd4640;
	add.s64 	%rd4642, %rd4641, -6719396339535248540;
	add.s64 	%rd4643, %rd4642, %rd4506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3144,%dummy}, %rd4617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3145}, %rd4617;
	}
	shf.r.wrap.b32 	%r3146, %r3145, %r3144, 28;
	shf.r.wrap.b32 	%r3147, %r3144, %r3145, 28;
	mov.b64 	%rd4644, {%r3147, %r3146};
	shf.l.wrap.b32 	%r3148, %r3144, %r3145, 30;
	shf.l.wrap.b32 	%r3149, %r3145, %r3144, 30;
	mov.b64 	%rd4645, {%r3149, %r3148};
	xor.b64  	%rd4646, %rd4644, %rd4645;
	shf.l.wrap.b32 	%r3150, %r3144, %r3145, 25;
	shf.l.wrap.b32 	%r3151, %r3145, %r3144, 25;
	mov.b64 	%rd4647, {%r3151, %r3150};
	xor.b64  	%rd4648, %rd4646, %rd4647;
	and.b64  	%rd4649, %rd4617, %rd4580;
	or.b64  	%rd4650, %rd4617, %rd4580;
	and.b64  	%rd4651, %rd4650, %rd4543;
	or.b64  	%rd4652, %rd4651, %rd4649;
	add.s64 	%rd4653, %rd4652, %rd4648;
	add.s64 	%rd4654, %rd4653, %rd4642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3152,%dummy}, %rd4593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3153}, %rd4593;
	}
	shf.r.wrap.b32 	%r3154, %r3153, %r3152, 19;
	shf.r.wrap.b32 	%r3155, %r3152, %r3153, 19;
	mov.b64 	%rd4655, {%r3155, %r3154};
	shf.l.wrap.b32 	%r3156, %r3152, %r3153, 3;
	shf.l.wrap.b32 	%r3157, %r3153, %r3152, 3;
	mov.b64 	%rd4656, {%r3157, %r3156};
	xor.b64  	%rd4657, %rd4655, %rd4656;
	shr.u64 	%rd4658, %rd4593, 6;
	xor.b64  	%rd4659, %rd4657, %rd4658;
	shf.r.wrap.b32 	%r3158, %r2813, %r2812, 1;
	shf.r.wrap.b32 	%r3159, %r2812, %r2813, 1;
	mov.b64 	%rd4660, {%r3159, %r3158};
	shf.r.wrap.b32 	%r3160, %r2813, %r2812, 8;
	shf.r.wrap.b32 	%r3161, %r2812, %r2813, 8;
	mov.b64 	%rd4661, {%r3161, %r3160};
	xor.b64  	%rd4662, %rd4660, %rd4661;
	shr.u64 	%rd4663, %rd4112, 7;
	xor.b64  	%rd4664, %rd4662, %rd4663;
	add.s64 	%rd4665, %rd4664, %rd4075;
	add.s64 	%rd4666, %rd4665, %rd4408;
	add.s64 	%rd4667, %rd4666, %rd4659;
	add.s64 	%rd4668, %rd4667, %rd4532;
	xor.b64  	%rd4669, %rd4606, %rd4569;
	and.b64  	%rd4670, %rd4643, %rd4669;
	xor.b64  	%rd4671, %rd4670, %rd4569;
	add.s64 	%rd4672, %rd4668, %rd4671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3162,%dummy}, %rd4643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3163}, %rd4643;
	}
	shf.r.wrap.b32 	%r3164, %r3163, %r3162, 14;
	shf.r.wrap.b32 	%r3165, %r3162, %r3163, 14;
	mov.b64 	%rd4673, {%r3165, %r3164};
	shf.r.wrap.b32 	%r3166, %r3163, %r3162, 18;
	shf.r.wrap.b32 	%r3167, %r3162, %r3163, 18;
	mov.b64 	%rd4674, {%r3167, %r3166};
	xor.b64  	%rd4675, %rd4673, %rd4674;
	shf.l.wrap.b32 	%r3168, %r3162, %r3163, 23;
	shf.l.wrap.b32 	%r3169, %r3163, %r3162, 23;
	mov.b64 	%rd4676, {%r3169, %r3168};
	xor.b64  	%rd4677, %rd4675, %rd4676;
	add.s64 	%rd4678, %rd4672, %rd4677;
	add.s64 	%rd4679, %rd4678, -6333637450476146687;
	add.s64 	%rd4680, %rd4679, %rd4543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3170,%dummy}, %rd4654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3171}, %rd4654;
	}
	shf.r.wrap.b32 	%r3172, %r3171, %r3170, 28;
	shf.r.wrap.b32 	%r3173, %r3170, %r3171, 28;
	mov.b64 	%rd4681, {%r3173, %r3172};
	shf.l.wrap.b32 	%r3174, %r3170, %r3171, 30;
	shf.l.wrap.b32 	%r3175, %r3171, %r3170, 30;
	mov.b64 	%rd4682, {%r3175, %r3174};
	xor.b64  	%rd4683, %rd4681, %rd4682;
	shf.l.wrap.b32 	%r3176, %r3170, %r3171, 25;
	shf.l.wrap.b32 	%r3177, %r3171, %r3170, 25;
	mov.b64 	%rd4684, {%r3177, %r3176};
	xor.b64  	%rd4685, %rd4683, %rd4684;
	and.b64  	%rd4686, %rd4654, %rd4617;
	or.b64  	%rd4687, %rd4654, %rd4617;
	and.b64  	%rd4688, %rd4687, %rd4580;
	or.b64  	%rd4689, %rd4688, %rd4686;
	add.s64 	%rd4690, %rd4689, %rd4685;
	add.s64 	%rd4691, %rd4690, %rd4679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3178,%dummy}, %rd4630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3179}, %rd4630;
	}
	shf.r.wrap.b32 	%r3180, %r3179, %r3178, 19;
	shf.r.wrap.b32 	%r3181, %r3178, %r3179, 19;
	mov.b64 	%rd4692, {%r3181, %r3180};
	shf.l.wrap.b32 	%r3182, %r3178, %r3179, 3;
	shf.l.wrap.b32 	%r3183, %r3179, %r3178, 3;
	mov.b64 	%rd4693, {%r3183, %r3182};
	xor.b64  	%rd4694, %rd4692, %rd4693;
	shr.u64 	%rd4695, %rd4630, 6;
	xor.b64  	%rd4696, %rd4694, %rd4695;
	shf.r.wrap.b32 	%r3184, %r2841, %r2840, 1;
	shf.r.wrap.b32 	%r3185, %r2840, %r2841, 1;
	mov.b64 	%rd4697, {%r3185, %r3184};
	shf.r.wrap.b32 	%r3186, %r2841, %r2840, 8;
	shf.r.wrap.b32 	%r3187, %r2840, %r2841, 8;
	mov.b64 	%rd4698, {%r3187, %r3186};
	xor.b64  	%rd4699, %rd4697, %rd4698;
	shr.u64 	%rd4700, %rd4149, 7;
	xor.b64  	%rd4701, %rd4699, %rd4700;
	add.s64 	%rd4702, %rd4701, %rd4112;
	add.s64 	%rd4703, %rd4702, %rd4445;
	add.s64 	%rd4704, %rd4703, %rd4696;
	add.s64 	%rd4705, %rd4704, %rd4569;
	xor.b64  	%rd4706, %rd4643, %rd4606;
	and.b64  	%rd4707, %rd4680, %rd4706;
	xor.b64  	%rd4708, %rd4707, %rd4606;
	add.s64 	%rd4709, %rd4705, %rd4708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3188,%dummy}, %rd4680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3189}, %rd4680;
	}
	shf.r.wrap.b32 	%r3190, %r3189, %r3188, 14;
	shf.r.wrap.b32 	%r3191, %r3188, %r3189, 14;
	mov.b64 	%rd4710, {%r3191, %r3190};
	shf.r.wrap.b32 	%r3192, %r3189, %r3188, 18;
	shf.r.wrap.b32 	%r3193, %r3188, %r3189, 18;
	mov.b64 	%rd4711, {%r3193, %r3192};
	xor.b64  	%rd4712, %rd4710, %rd4711;
	shf.l.wrap.b32 	%r3194, %r3188, %r3189, 23;
	shf.l.wrap.b32 	%r3195, %r3189, %r3188, 23;
	mov.b64 	%rd4713, {%r3195, %r3194};
	xor.b64  	%rd4714, %rd4712, %rd4713;
	add.s64 	%rd4715, %rd4709, %rd4714;
	add.s64 	%rd4716, %rd4715, -4446306890439682159;
	add.s64 	%rd4717, %rd4716, %rd4580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3196,%dummy}, %rd4691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3197}, %rd4691;
	}
	shf.r.wrap.b32 	%r3198, %r3197, %r3196, 28;
	shf.r.wrap.b32 	%r3199, %r3196, %r3197, 28;
	mov.b64 	%rd4718, {%r3199, %r3198};
	shf.l.wrap.b32 	%r3200, %r3196, %r3197, 30;
	shf.l.wrap.b32 	%r3201, %r3197, %r3196, 30;
	mov.b64 	%rd4719, {%r3201, %r3200};
	xor.b64  	%rd4720, %rd4718, %rd4719;
	shf.l.wrap.b32 	%r3202, %r3196, %r3197, 25;
	shf.l.wrap.b32 	%r3203, %r3197, %r3196, 25;
	mov.b64 	%rd4721, {%r3203, %r3202};
	xor.b64  	%rd4722, %rd4720, %rd4721;
	and.b64  	%rd4723, %rd4691, %rd4654;
	or.b64  	%rd4724, %rd4691, %rd4654;
	and.b64  	%rd4725, %rd4724, %rd4617;
	or.b64  	%rd4726, %rd4725, %rd4723;
	add.s64 	%rd4727, %rd4726, %rd4722;
	add.s64 	%rd4728, %rd4727, %rd4716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3204,%dummy}, %rd4667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3205}, %rd4667;
	}
	shf.r.wrap.b32 	%r3206, %r3205, %r3204, 19;
	shf.r.wrap.b32 	%r3207, %r3204, %r3205, 19;
	mov.b64 	%rd4729, {%r3207, %r3206};
	shf.l.wrap.b32 	%r3208, %r3204, %r3205, 3;
	shf.l.wrap.b32 	%r3209, %r3205, %r3204, 3;
	mov.b64 	%rd4730, {%r3209, %r3208};
	xor.b64  	%rd4731, %rd4729, %rd4730;
	shr.u64 	%rd4732, %rd4667, 6;
	xor.b64  	%rd4733, %rd4731, %rd4732;
	shf.r.wrap.b32 	%r3210, %r2867, %r2866, 1;
	shf.r.wrap.b32 	%r3211, %r2866, %r2867, 1;
	mov.b64 	%rd4734, {%r3211, %r3210};
	shf.r.wrap.b32 	%r3212, %r2867, %r2866, 8;
	shf.r.wrap.b32 	%r3213, %r2866, %r2867, 8;
	mov.b64 	%rd4735, {%r3213, %r3212};
	xor.b64  	%rd4736, %rd4734, %rd4735;
	shr.u64 	%rd4737, %rd4186, 7;
	xor.b64  	%rd4738, %rd4736, %rd4737;
	add.s64 	%rd4739, %rd4738, %rd4149;
	add.s64 	%rd4740, %rd4739, %rd4482;
	add.s64 	%rd4741, %rd4740, %rd4733;
	add.s64 	%rd4742, %rd4741, %rd4606;
	xor.b64  	%rd4743, %rd4680, %rd4643;
	and.b64  	%rd4744, %rd4717, %rd4743;
	xor.b64  	%rd4745, %rd4744, %rd4643;
	add.s64 	%rd4746, %rd4742, %rd4745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3214,%dummy}, %rd4717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3215}, %rd4717;
	}
	shf.r.wrap.b32 	%r3216, %r3215, %r3214, 14;
	shf.r.wrap.b32 	%r3217, %r3214, %r3215, 14;
	mov.b64 	%rd4747, {%r3217, %r3216};
	shf.r.wrap.b32 	%r3218, %r3215, %r3214, 18;
	shf.r.wrap.b32 	%r3219, %r3214, %r3215, 18;
	mov.b64 	%rd4748, {%r3219, %r3218};
	xor.b64  	%rd4749, %rd4747, %rd4748;
	shf.l.wrap.b32 	%r3220, %r3214, %r3215, 23;
	shf.l.wrap.b32 	%r3221, %r3215, %r3214, 23;
	mov.b64 	%rd4750, {%r3221, %r3220};
	xor.b64  	%rd4751, %rd4749, %rd4750;
	add.s64 	%rd4752, %rd4746, %rd4751;
	add.s64 	%rd4753, %rd4752, -4076793802049405392;
	add.s64 	%rd4754, %rd4753, %rd4617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3222,%dummy}, %rd4728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3223}, %rd4728;
	}
	shf.r.wrap.b32 	%r3224, %r3223, %r3222, 28;
	shf.r.wrap.b32 	%r3225, %r3222, %r3223, 28;
	mov.b64 	%rd4755, {%r3225, %r3224};
	shf.l.wrap.b32 	%r3226, %r3222, %r3223, 30;
	shf.l.wrap.b32 	%r3227, %r3223, %r3222, 30;
	mov.b64 	%rd4756, {%r3227, %r3226};
	xor.b64  	%rd4757, %rd4755, %rd4756;
	shf.l.wrap.b32 	%r3228, %r3222, %r3223, 25;
	shf.l.wrap.b32 	%r3229, %r3223, %r3222, 25;
	mov.b64 	%rd4758, {%r3229, %r3228};
	xor.b64  	%rd4759, %rd4757, %rd4758;
	and.b64  	%rd4760, %rd4728, %rd4691;
	or.b64  	%rd4761, %rd4728, %rd4691;
	and.b64  	%rd4762, %rd4761, %rd4654;
	or.b64  	%rd4763, %rd4762, %rd4760;
	add.s64 	%rd4764, %rd4763, %rd4759;
	add.s64 	%rd4765, %rd4764, %rd4753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3230,%dummy}, %rd4704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3231}, %rd4704;
	}
	shf.r.wrap.b32 	%r3232, %r3231, %r3230, 19;
	shf.r.wrap.b32 	%r3233, %r3230, %r3231, 19;
	mov.b64 	%rd4766, {%r3233, %r3232};
	shf.l.wrap.b32 	%r3234, %r3230, %r3231, 3;
	shf.l.wrap.b32 	%r3235, %r3231, %r3230, 3;
	mov.b64 	%rd4767, {%r3235, %r3234};
	xor.b64  	%rd4768, %rd4766, %rd4767;
	shr.u64 	%rd4769, %rd4704, 6;
	xor.b64  	%rd4770, %rd4768, %rd4769;
	shf.r.wrap.b32 	%r3236, %r2893, %r2892, 1;
	shf.r.wrap.b32 	%r3237, %r2892, %r2893, 1;
	mov.b64 	%rd4771, {%r3237, %r3236};
	shf.r.wrap.b32 	%r3238, %r2893, %r2892, 8;
	shf.r.wrap.b32 	%r3239, %r2892, %r2893, 8;
	mov.b64 	%rd4772, {%r3239, %r3238};
	xor.b64  	%rd4773, %rd4771, %rd4772;
	shr.u64 	%rd4774, %rd4223, 7;
	xor.b64  	%rd4775, %rd4773, %rd4774;
	add.s64 	%rd4776, %rd4775, %rd4186;
	add.s64 	%rd4777, %rd4776, %rd4519;
	add.s64 	%rd4778, %rd4777, %rd4770;
	add.s64 	%rd4779, %rd4778, %rd4643;
	xor.b64  	%rd4780, %rd4717, %rd4680;
	and.b64  	%rd4781, %rd4754, %rd4780;
	xor.b64  	%rd4782, %rd4781, %rd4680;
	add.s64 	%rd4783, %rd4779, %rd4782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3240,%dummy}, %rd4754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3241}, %rd4754;
	}
	shf.r.wrap.b32 	%r3242, %r3241, %r3240, 14;
	shf.r.wrap.b32 	%r3243, %r3240, %r3241, 14;
	mov.b64 	%rd4784, {%r3243, %r3242};
	shf.r.wrap.b32 	%r3244, %r3241, %r3240, 18;
	shf.r.wrap.b32 	%r3245, %r3240, %r3241, 18;
	mov.b64 	%rd4785, {%r3245, %r3244};
	xor.b64  	%rd4786, %rd4784, %rd4785;
	shf.l.wrap.b32 	%r3246, %r3240, %r3241, 23;
	shf.l.wrap.b32 	%r3247, %r3241, %r3240, 23;
	mov.b64 	%rd4787, {%r3247, %r3246};
	xor.b64  	%rd4788, %rd4786, %rd4787;
	add.s64 	%rd4789, %rd4783, %rd4788;
	add.s64 	%rd4790, %rd4789, -3345356375505022440;
	add.s64 	%rd4791, %rd4790, %rd4654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3248,%dummy}, %rd4765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3249}, %rd4765;
	}
	shf.r.wrap.b32 	%r3250, %r3249, %r3248, 28;
	shf.r.wrap.b32 	%r3251, %r3248, %r3249, 28;
	mov.b64 	%rd4792, {%r3251, %r3250};
	shf.l.wrap.b32 	%r3252, %r3248, %r3249, 30;
	shf.l.wrap.b32 	%r3253, %r3249, %r3248, 30;
	mov.b64 	%rd4793, {%r3253, %r3252};
	xor.b64  	%rd4794, %rd4792, %rd4793;
	shf.l.wrap.b32 	%r3254, %r3248, %r3249, 25;
	shf.l.wrap.b32 	%r3255, %r3249, %r3248, 25;
	mov.b64 	%rd4795, {%r3255, %r3254};
	xor.b64  	%rd4796, %rd4794, %rd4795;
	and.b64  	%rd4797, %rd4765, %rd4728;
	or.b64  	%rd4798, %rd4765, %rd4728;
	and.b64  	%rd4799, %rd4798, %rd4691;
	or.b64  	%rd4800, %rd4799, %rd4797;
	add.s64 	%rd4801, %rd4800, %rd4796;
	add.s64 	%rd4802, %rd4801, %rd4790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3256,%dummy}, %rd4741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3257}, %rd4741;
	}
	shf.r.wrap.b32 	%r3258, %r3257, %r3256, 19;
	shf.r.wrap.b32 	%r3259, %r3256, %r3257, 19;
	mov.b64 	%rd4803, {%r3259, %r3258};
	shf.l.wrap.b32 	%r3260, %r3256, %r3257, 3;
	shf.l.wrap.b32 	%r3261, %r3257, %r3256, 3;
	mov.b64 	%rd4804, {%r3261, %r3260};
	xor.b64  	%rd4805, %rd4803, %rd4804;
	shr.u64 	%rd4806, %rd4741, 6;
	xor.b64  	%rd4807, %rd4805, %rd4806;
	shf.r.wrap.b32 	%r3262, %r2919, %r2918, 1;
	shf.r.wrap.b32 	%r3263, %r2918, %r2919, 1;
	mov.b64 	%rd4808, {%r3263, %r3262};
	shf.r.wrap.b32 	%r3264, %r2919, %r2918, 8;
	shf.r.wrap.b32 	%r3265, %r2918, %r2919, 8;
	mov.b64 	%rd4809, {%r3265, %r3264};
	xor.b64  	%rd4810, %rd4808, %rd4809;
	shr.u64 	%rd4811, %rd4260, 7;
	xor.b64  	%rd4812, %rd4810, %rd4811;
	add.s64 	%rd4813, %rd4812, %rd4223;
	add.s64 	%rd4814, %rd4813, %rd4556;
	add.s64 	%rd4815, %rd4814, %rd4807;
	add.s64 	%rd4816, %rd4815, %rd4680;
	xor.b64  	%rd4817, %rd4754, %rd4717;
	and.b64  	%rd4818, %rd4791, %rd4817;
	xor.b64  	%rd4819, %rd4818, %rd4717;
	add.s64 	%rd4820, %rd4816, %rd4819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3266,%dummy}, %rd4791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3267}, %rd4791;
	}
	shf.r.wrap.b32 	%r3268, %r3267, %r3266, 14;
	shf.r.wrap.b32 	%r3269, %r3266, %r3267, 14;
	mov.b64 	%rd4821, {%r3269, %r3268};
	shf.r.wrap.b32 	%r3270, %r3267, %r3266, 18;
	shf.r.wrap.b32 	%r3271, %r3266, %r3267, 18;
	mov.b64 	%rd4822, {%r3271, %r3270};
	xor.b64  	%rd4823, %rd4821, %rd4822;
	shf.l.wrap.b32 	%r3272, %r3266, %r3267, 23;
	shf.l.wrap.b32 	%r3273, %r3267, %r3266, 23;
	mov.b64 	%rd4824, {%r3273, %r3272};
	xor.b64  	%rd4825, %rd4823, %rd4824;
	add.s64 	%rd4826, %rd4820, %rd4825;
	add.s64 	%rd4827, %rd4826, -2983346525034927856;
	add.s64 	%rd4828, %rd4827, %rd4691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3274,%dummy}, %rd4802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3275}, %rd4802;
	}
	shf.r.wrap.b32 	%r3276, %r3275, %r3274, 28;
	shf.r.wrap.b32 	%r3277, %r3274, %r3275, 28;
	mov.b64 	%rd4829, {%r3277, %r3276};
	shf.l.wrap.b32 	%r3278, %r3274, %r3275, 30;
	shf.l.wrap.b32 	%r3279, %r3275, %r3274, 30;
	mov.b64 	%rd4830, {%r3279, %r3278};
	xor.b64  	%rd4831, %rd4829, %rd4830;
	shf.l.wrap.b32 	%r3280, %r3274, %r3275, 25;
	shf.l.wrap.b32 	%r3281, %r3275, %r3274, 25;
	mov.b64 	%rd4832, {%r3281, %r3280};
	xor.b64  	%rd4833, %rd4831, %rd4832;
	and.b64  	%rd4834, %rd4802, %rd4765;
	or.b64  	%rd4835, %rd4802, %rd4765;
	and.b64  	%rd4836, %rd4835, %rd4728;
	or.b64  	%rd4837, %rd4836, %rd4834;
	add.s64 	%rd4838, %rd4837, %rd4833;
	add.s64 	%rd4839, %rd4838, %rd4827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3282,%dummy}, %rd4778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3283}, %rd4778;
	}
	shf.r.wrap.b32 	%r3284, %r3283, %r3282, 19;
	shf.r.wrap.b32 	%r3285, %r3282, %r3283, 19;
	mov.b64 	%rd4840, {%r3285, %r3284};
	shf.l.wrap.b32 	%r3286, %r3282, %r3283, 3;
	shf.l.wrap.b32 	%r3287, %r3283, %r3282, 3;
	mov.b64 	%rd4841, {%r3287, %r3286};
	xor.b64  	%rd4842, %rd4840, %rd4841;
	shr.u64 	%rd4843, %rd4778, 6;
	xor.b64  	%rd4844, %rd4842, %rd4843;
	shf.r.wrap.b32 	%r3288, %r2945, %r2944, 1;
	shf.r.wrap.b32 	%r3289, %r2944, %r2945, 1;
	mov.b64 	%rd4845, {%r3289, %r3288};
	shf.r.wrap.b32 	%r3290, %r2945, %r2944, 8;
	shf.r.wrap.b32 	%r3291, %r2944, %r2945, 8;
	mov.b64 	%rd4846, {%r3291, %r3290};
	xor.b64  	%rd4847, %rd4845, %rd4846;
	shr.u64 	%rd4848, %rd4297, 7;
	xor.b64  	%rd4849, %rd4847, %rd4848;
	add.s64 	%rd4850, %rd4849, %rd4260;
	add.s64 	%rd4851, %rd4850, %rd4593;
	add.s64 	%rd4852, %rd4851, %rd4844;
	add.s64 	%rd4853, %rd4852, %rd4717;
	xor.b64  	%rd4854, %rd4791, %rd4754;
	and.b64  	%rd4855, %rd4828, %rd4854;
	xor.b64  	%rd4856, %rd4855, %rd4754;
	add.s64 	%rd4857, %rd4853, %rd4856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3292,%dummy}, %rd4828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3293}, %rd4828;
	}
	shf.r.wrap.b32 	%r3294, %r3293, %r3292, 14;
	shf.r.wrap.b32 	%r3295, %r3292, %r3293, 14;
	mov.b64 	%rd4858, {%r3295, %r3294};
	shf.r.wrap.b32 	%r3296, %r3293, %r3292, 18;
	shf.r.wrap.b32 	%r3297, %r3292, %r3293, 18;
	mov.b64 	%rd4859, {%r3297, %r3296};
	xor.b64  	%rd4860, %rd4858, %rd4859;
	shf.l.wrap.b32 	%r3298, %r3292, %r3293, 23;
	shf.l.wrap.b32 	%r3299, %r3293, %r3292, 23;
	mov.b64 	%rd4861, {%r3299, %r3298};
	xor.b64  	%rd4862, %rd4860, %rd4861;
	add.s64 	%rd4863, %rd4857, %rd4862;
	add.s64 	%rd4864, %rd4863, -860691631967231958;
	add.s64 	%rd4865, %rd4864, %rd4728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3300,%dummy}, %rd4839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3301}, %rd4839;
	}
	shf.r.wrap.b32 	%r3302, %r3301, %r3300, 28;
	shf.r.wrap.b32 	%r3303, %r3300, %r3301, 28;
	mov.b64 	%rd4866, {%r3303, %r3302};
	shf.l.wrap.b32 	%r3304, %r3300, %r3301, 30;
	shf.l.wrap.b32 	%r3305, %r3301, %r3300, 30;
	mov.b64 	%rd4867, {%r3305, %r3304};
	xor.b64  	%rd4868, %rd4866, %rd4867;
	shf.l.wrap.b32 	%r3306, %r3300, %r3301, 25;
	shf.l.wrap.b32 	%r3307, %r3301, %r3300, 25;
	mov.b64 	%rd4869, {%r3307, %r3306};
	xor.b64  	%rd4870, %rd4868, %rd4869;
	and.b64  	%rd4871, %rd4839, %rd4802;
	or.b64  	%rd4872, %rd4839, %rd4802;
	and.b64  	%rd4873, %rd4872, %rd4765;
	or.b64  	%rd4874, %rd4873, %rd4871;
	add.s64 	%rd4875, %rd4874, %rd4870;
	add.s64 	%rd4876, %rd4875, %rd4864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3308,%dummy}, %rd4815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3309}, %rd4815;
	}
	shf.r.wrap.b32 	%r3310, %r3309, %r3308, 19;
	shf.r.wrap.b32 	%r3311, %r3308, %r3309, 19;
	mov.b64 	%rd4877, {%r3311, %r3310};
	shf.l.wrap.b32 	%r3312, %r3308, %r3309, 3;
	shf.l.wrap.b32 	%r3313, %r3309, %r3308, 3;
	mov.b64 	%rd4878, {%r3313, %r3312};
	xor.b64  	%rd4879, %rd4877, %rd4878;
	shr.u64 	%rd4880, %rd4815, 6;
	xor.b64  	%rd4881, %rd4879, %rd4880;
	shf.r.wrap.b32 	%r3314, %r2971, %r2970, 1;
	shf.r.wrap.b32 	%r3315, %r2970, %r2971, 1;
	mov.b64 	%rd4882, {%r3315, %r3314};
	shf.r.wrap.b32 	%r3316, %r2971, %r2970, 8;
	shf.r.wrap.b32 	%r3317, %r2970, %r2971, 8;
	mov.b64 	%rd4883, {%r3317, %r3316};
	xor.b64  	%rd4884, %rd4882, %rd4883;
	shr.u64 	%rd4885, %rd4334, 7;
	xor.b64  	%rd4886, %rd4884, %rd4885;
	add.s64 	%rd4887, %rd4886, %rd4297;
	add.s64 	%rd4888, %rd4887, %rd4630;
	add.s64 	%rd4889, %rd4888, %rd4881;
	add.s64 	%rd4890, %rd4889, %rd4754;
	xor.b64  	%rd4891, %rd4828, %rd4791;
	and.b64  	%rd4892, %rd4865, %rd4891;
	xor.b64  	%rd4893, %rd4892, %rd4791;
	add.s64 	%rd4894, %rd4890, %rd4893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3318,%dummy}, %rd4865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3319}, %rd4865;
	}
	shf.r.wrap.b32 	%r3320, %r3319, %r3318, 14;
	shf.r.wrap.b32 	%r3321, %r3318, %r3319, 14;
	mov.b64 	%rd4895, {%r3321, %r3320};
	shf.r.wrap.b32 	%r3322, %r3319, %r3318, 18;
	shf.r.wrap.b32 	%r3323, %r3318, %r3319, 18;
	mov.b64 	%rd4896, {%r3323, %r3322};
	xor.b64  	%rd4897, %rd4895, %rd4896;
	shf.l.wrap.b32 	%r3324, %r3318, %r3319, 23;
	shf.l.wrap.b32 	%r3325, %r3319, %r3318, 23;
	mov.b64 	%rd4898, {%r3325, %r3324};
	xor.b64  	%rd4899, %rd4897, %rd4898;
	add.s64 	%rd4900, %rd4894, %rd4899;
	add.s64 	%rd4901, %rd4900, 1182934255886127544;
	add.s64 	%rd4902, %rd4901, %rd4765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3326,%dummy}, %rd4876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3327}, %rd4876;
	}
	shf.r.wrap.b32 	%r3328, %r3327, %r3326, 28;
	shf.r.wrap.b32 	%r3329, %r3326, %r3327, 28;
	mov.b64 	%rd4903, {%r3329, %r3328};
	shf.l.wrap.b32 	%r3330, %r3326, %r3327, 30;
	shf.l.wrap.b32 	%r3331, %r3327, %r3326, 30;
	mov.b64 	%rd4904, {%r3331, %r3330};
	xor.b64  	%rd4905, %rd4903, %rd4904;
	shf.l.wrap.b32 	%r3332, %r3326, %r3327, 25;
	shf.l.wrap.b32 	%r3333, %r3327, %r3326, 25;
	mov.b64 	%rd4906, {%r3333, %r3332};
	xor.b64  	%rd4907, %rd4905, %rd4906;
	and.b64  	%rd4908, %rd4876, %rd4839;
	or.b64  	%rd4909, %rd4876, %rd4839;
	and.b64  	%rd4910, %rd4909, %rd4802;
	or.b64  	%rd4911, %rd4910, %rd4908;
	add.s64 	%rd4912, %rd4911, %rd4907;
	add.s64 	%rd4913, %rd4912, %rd4901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3334,%dummy}, %rd4852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3335}, %rd4852;
	}
	shf.r.wrap.b32 	%r3336, %r3335, %r3334, 19;
	shf.r.wrap.b32 	%r3337, %r3334, %r3335, 19;
	mov.b64 	%rd4914, {%r3337, %r3336};
	shf.l.wrap.b32 	%r3338, %r3334, %r3335, 3;
	shf.l.wrap.b32 	%r3339, %r3335, %r3334, 3;
	mov.b64 	%rd4915, {%r3339, %r3338};
	xor.b64  	%rd4916, %rd4914, %rd4915;
	shr.u64 	%rd4917, %rd4852, 6;
	xor.b64  	%rd4918, %rd4916, %rd4917;
	shf.r.wrap.b32 	%r3340, %r2997, %r2996, 1;
	shf.r.wrap.b32 	%r3341, %r2996, %r2997, 1;
	mov.b64 	%rd4919, {%r3341, %r3340};
	shf.r.wrap.b32 	%r3342, %r2997, %r2996, 8;
	shf.r.wrap.b32 	%r3343, %r2996, %r2997, 8;
	mov.b64 	%rd4920, {%r3343, %r3342};
	xor.b64  	%rd4921, %rd4919, %rd4920;
	shr.u64 	%rd4922, %rd4371, 7;
	xor.b64  	%rd4923, %rd4921, %rd4922;
	add.s64 	%rd4924, %rd4923, %rd4334;
	add.s64 	%rd4925, %rd4924, %rd4667;
	add.s64 	%rd4926, %rd4925, %rd4918;
	add.s64 	%rd4927, %rd4926, %rd4791;
	xor.b64  	%rd4928, %rd4865, %rd4828;
	and.b64  	%rd4929, %rd4902, %rd4928;
	xor.b64  	%rd4930, %rd4929, %rd4828;
	add.s64 	%rd4931, %rd4927, %rd4930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3344,%dummy}, %rd4902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3345}, %rd4902;
	}
	shf.r.wrap.b32 	%r3346, %r3345, %r3344, 14;
	shf.r.wrap.b32 	%r3347, %r3344, %r3345, 14;
	mov.b64 	%rd4932, {%r3347, %r3346};
	shf.r.wrap.b32 	%r3348, %r3345, %r3344, 18;
	shf.r.wrap.b32 	%r3349, %r3344, %r3345, 18;
	mov.b64 	%rd4933, {%r3349, %r3348};
	xor.b64  	%rd4934, %rd4932, %rd4933;
	shf.l.wrap.b32 	%r3350, %r3344, %r3345, 23;
	shf.l.wrap.b32 	%r3351, %r3345, %r3344, 23;
	mov.b64 	%rd4935, {%r3351, %r3350};
	xor.b64  	%rd4936, %rd4934, %rd4935;
	add.s64 	%rd4937, %rd4931, %rd4936;
	add.s64 	%rd4938, %rd4937, 1847814050463011016;
	add.s64 	%rd4939, %rd4938, %rd4802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3352,%dummy}, %rd4913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3353}, %rd4913;
	}
	shf.r.wrap.b32 	%r3354, %r3353, %r3352, 28;
	shf.r.wrap.b32 	%r3355, %r3352, %r3353, 28;
	mov.b64 	%rd4940, {%r3355, %r3354};
	shf.l.wrap.b32 	%r3356, %r3352, %r3353, 30;
	shf.l.wrap.b32 	%r3357, %r3353, %r3352, 30;
	mov.b64 	%rd4941, {%r3357, %r3356};
	xor.b64  	%rd4942, %rd4940, %rd4941;
	shf.l.wrap.b32 	%r3358, %r3352, %r3353, 25;
	shf.l.wrap.b32 	%r3359, %r3353, %r3352, 25;
	mov.b64 	%rd4943, {%r3359, %r3358};
	xor.b64  	%rd4944, %rd4942, %rd4943;
	and.b64  	%rd4945, %rd4913, %rd4876;
	or.b64  	%rd4946, %rd4913, %rd4876;
	and.b64  	%rd4947, %rd4946, %rd4839;
	or.b64  	%rd4948, %rd4947, %rd4945;
	add.s64 	%rd4949, %rd4948, %rd4944;
	add.s64 	%rd4950, %rd4949, %rd4938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3360,%dummy}, %rd4889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3361}, %rd4889;
	}
	shf.r.wrap.b32 	%r3362, %r3361, %r3360, 19;
	shf.r.wrap.b32 	%r3363, %r3360, %r3361, 19;
	mov.b64 	%rd4951, {%r3363, %r3362};
	shf.l.wrap.b32 	%r3364, %r3360, %r3361, 3;
	shf.l.wrap.b32 	%r3365, %r3361, %r3360, 3;
	mov.b64 	%rd4952, {%r3365, %r3364};
	xor.b64  	%rd4953, %rd4951, %rd4952;
	shr.u64 	%rd4954, %rd4889, 6;
	xor.b64  	%rd4955, %rd4953, %rd4954;
	shf.r.wrap.b32 	%r3366, %r3023, %r3022, 1;
	shf.r.wrap.b32 	%r3367, %r3022, %r3023, 1;
	mov.b64 	%rd4956, {%r3367, %r3366};
	shf.r.wrap.b32 	%r3368, %r3023, %r3022, 8;
	shf.r.wrap.b32 	%r3369, %r3022, %r3023, 8;
	mov.b64 	%rd4957, {%r3369, %r3368};
	xor.b64  	%rd4958, %rd4956, %rd4957;
	shr.u64 	%rd4959, %rd4408, 7;
	xor.b64  	%rd4960, %rd4958, %rd4959;
	add.s64 	%rd4961, %rd4960, %rd4371;
	add.s64 	%rd4962, %rd4961, %rd4704;
	add.s64 	%rd4963, %rd4962, %rd4955;
	add.s64 	%rd4964, %rd4963, %rd4828;
	xor.b64  	%rd4965, %rd4902, %rd4865;
	and.b64  	%rd4966, %rd4939, %rd4965;
	xor.b64  	%rd4967, %rd4966, %rd4865;
	add.s64 	%rd4968, %rd4964, %rd4967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3370,%dummy}, %rd4939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3371}, %rd4939;
	}
	shf.r.wrap.b32 	%r3372, %r3371, %r3370, 14;
	shf.r.wrap.b32 	%r3373, %r3370, %r3371, 14;
	mov.b64 	%rd4969, {%r3373, %r3372};
	shf.r.wrap.b32 	%r3374, %r3371, %r3370, 18;
	shf.r.wrap.b32 	%r3375, %r3370, %r3371, 18;
	mov.b64 	%rd4970, {%r3375, %r3374};
	xor.b64  	%rd4971, %rd4969, %rd4970;
	shf.l.wrap.b32 	%r3376, %r3370, %r3371, 23;
	shf.l.wrap.b32 	%r3377, %r3371, %r3370, 23;
	mov.b64 	%rd4972, {%r3377, %r3376};
	xor.b64  	%rd4973, %rd4971, %rd4972;
	add.s64 	%rd4974, %rd4968, %rd4973;
	add.s64 	%rd4975, %rd4974, 2177327727835720531;
	add.s64 	%rd4976, %rd4975, %rd4839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3378,%dummy}, %rd4950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3379}, %rd4950;
	}
	shf.r.wrap.b32 	%r3380, %r3379, %r3378, 28;
	shf.r.wrap.b32 	%r3381, %r3378, %r3379, 28;
	mov.b64 	%rd4977, {%r3381, %r3380};
	shf.l.wrap.b32 	%r3382, %r3378, %r3379, 30;
	shf.l.wrap.b32 	%r3383, %r3379, %r3378, 30;
	mov.b64 	%rd4978, {%r3383, %r3382};
	xor.b64  	%rd4979, %rd4977, %rd4978;
	shf.l.wrap.b32 	%r3384, %r3378, %r3379, 25;
	shf.l.wrap.b32 	%r3385, %r3379, %r3378, 25;
	mov.b64 	%rd4980, {%r3385, %r3384};
	xor.b64  	%rd4981, %rd4979, %rd4980;
	and.b64  	%rd4982, %rd4950, %rd4913;
	or.b64  	%rd4983, %rd4950, %rd4913;
	and.b64  	%rd4984, %rd4983, %rd4876;
	or.b64  	%rd4985, %rd4984, %rd4982;
	add.s64 	%rd4986, %rd4985, %rd4981;
	add.s64 	%rd4987, %rd4986, %rd4975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3386,%dummy}, %rd4926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3387}, %rd4926;
	}
	shf.r.wrap.b32 	%r3388, %r3387, %r3386, 19;
	shf.r.wrap.b32 	%r3389, %r3386, %r3387, 19;
	mov.b64 	%rd4988, {%r3389, %r3388};
	shf.l.wrap.b32 	%r3390, %r3386, %r3387, 3;
	shf.l.wrap.b32 	%r3391, %r3387, %r3386, 3;
	mov.b64 	%rd4989, {%r3391, %r3390};
	xor.b64  	%rd4990, %rd4988, %rd4989;
	shr.u64 	%rd4991, %rd4926, 6;
	xor.b64  	%rd4992, %rd4990, %rd4991;
	shf.r.wrap.b32 	%r3392, %r3049, %r3048, 1;
	shf.r.wrap.b32 	%r3393, %r3048, %r3049, 1;
	mov.b64 	%rd4993, {%r3393, %r3392};
	shf.r.wrap.b32 	%r3394, %r3049, %r3048, 8;
	shf.r.wrap.b32 	%r3395, %r3048, %r3049, 8;
	mov.b64 	%rd4994, {%r3395, %r3394};
	xor.b64  	%rd4995, %rd4993, %rd4994;
	shr.u64 	%rd4996, %rd4445, 7;
	xor.b64  	%rd4997, %rd4995, %rd4996;
	add.s64 	%rd4998, %rd4997, %rd4408;
	add.s64 	%rd4999, %rd4998, %rd4741;
	add.s64 	%rd5000, %rd4999, %rd4992;
	add.s64 	%rd5001, %rd5000, %rd4865;
	xor.b64  	%rd5002, %rd4939, %rd4902;
	and.b64  	%rd5003, %rd4976, %rd5002;
	xor.b64  	%rd5004, %rd5003, %rd4902;
	add.s64 	%rd5005, %rd5001, %rd5004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3396,%dummy}, %rd4976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3397}, %rd4976;
	}
	shf.r.wrap.b32 	%r3398, %r3397, %r3396, 14;
	shf.r.wrap.b32 	%r3399, %r3396, %r3397, 14;
	mov.b64 	%rd5006, {%r3399, %r3398};
	shf.r.wrap.b32 	%r3400, %r3397, %r3396, 18;
	shf.r.wrap.b32 	%r3401, %r3396, %r3397, 18;
	mov.b64 	%rd5007, {%r3401, %r3400};
	xor.b64  	%rd5008, %rd5006, %rd5007;
	shf.l.wrap.b32 	%r3402, %r3396, %r3397, 23;
	shf.l.wrap.b32 	%r3403, %r3397, %r3396, 23;
	mov.b64 	%rd5009, {%r3403, %r3402};
	xor.b64  	%rd5010, %rd5008, %rd5009;
	add.s64 	%rd5011, %rd5005, %rd5010;
	add.s64 	%rd5012, %rd5011, 2830643537854262169;
	add.s64 	%rd5013, %rd5012, %rd4876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3404,%dummy}, %rd4987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3405}, %rd4987;
	}
	shf.r.wrap.b32 	%r3406, %r3405, %r3404, 28;
	shf.r.wrap.b32 	%r3407, %r3404, %r3405, 28;
	mov.b64 	%rd5014, {%r3407, %r3406};
	shf.l.wrap.b32 	%r3408, %r3404, %r3405, 30;
	shf.l.wrap.b32 	%r3409, %r3405, %r3404, 30;
	mov.b64 	%rd5015, {%r3409, %r3408};
	xor.b64  	%rd5016, %rd5014, %rd5015;
	shf.l.wrap.b32 	%r3410, %r3404, %r3405, 25;
	shf.l.wrap.b32 	%r3411, %r3405, %r3404, 25;
	mov.b64 	%rd5017, {%r3411, %r3410};
	xor.b64  	%rd5018, %rd5016, %rd5017;
	and.b64  	%rd5019, %rd4987, %rd4950;
	or.b64  	%rd5020, %rd4987, %rd4950;
	and.b64  	%rd5021, %rd5020, %rd4913;
	or.b64  	%rd5022, %rd5021, %rd5019;
	add.s64 	%rd5023, %rd5022, %rd5018;
	add.s64 	%rd5024, %rd5023, %rd5012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3412,%dummy}, %rd4963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3413}, %rd4963;
	}
	shf.r.wrap.b32 	%r3414, %r3413, %r3412, 19;
	shf.r.wrap.b32 	%r3415, %r3412, %r3413, 19;
	mov.b64 	%rd5025, {%r3415, %r3414};
	shf.l.wrap.b32 	%r3416, %r3412, %r3413, 3;
	shf.l.wrap.b32 	%r3417, %r3413, %r3412, 3;
	mov.b64 	%rd5026, {%r3417, %r3416};
	xor.b64  	%rd5027, %rd5025, %rd5026;
	shr.u64 	%rd5028, %rd4963, 6;
	xor.b64  	%rd5029, %rd5027, %rd5028;
	shf.r.wrap.b32 	%r3418, %r3075, %r3074, 1;
	shf.r.wrap.b32 	%r3419, %r3074, %r3075, 1;
	mov.b64 	%rd5030, {%r3419, %r3418};
	shf.r.wrap.b32 	%r3420, %r3075, %r3074, 8;
	shf.r.wrap.b32 	%r3421, %r3074, %r3075, 8;
	mov.b64 	%rd5031, {%r3421, %r3420};
	xor.b64  	%rd5032, %rd5030, %rd5031;
	shr.u64 	%rd5033, %rd4482, 7;
	xor.b64  	%rd5034, %rd5032, %rd5033;
	add.s64 	%rd5035, %rd5034, %rd4445;
	add.s64 	%rd5036, %rd5035, %rd4778;
	add.s64 	%rd5037, %rd5036, %rd5029;
	add.s64 	%rd5038, %rd5037, %rd4902;
	xor.b64  	%rd5039, %rd4976, %rd4939;
	and.b64  	%rd5040, %rd5013, %rd5039;
	xor.b64  	%rd5041, %rd5040, %rd4939;
	add.s64 	%rd5042, %rd5038, %rd5041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3422,%dummy}, %rd5013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3423}, %rd5013;
	}
	shf.r.wrap.b32 	%r3424, %r3423, %r3422, 14;
	shf.r.wrap.b32 	%r3425, %r3422, %r3423, 14;
	mov.b64 	%rd5043, {%r3425, %r3424};
	shf.r.wrap.b32 	%r3426, %r3423, %r3422, 18;
	shf.r.wrap.b32 	%r3427, %r3422, %r3423, 18;
	mov.b64 	%rd5044, {%r3427, %r3426};
	xor.b64  	%rd5045, %rd5043, %rd5044;
	shf.l.wrap.b32 	%r3428, %r3422, %r3423, 23;
	shf.l.wrap.b32 	%r3429, %r3423, %r3422, 23;
	mov.b64 	%rd5046, {%r3429, %r3428};
	xor.b64  	%rd5047, %rd5045, %rd5046;
	add.s64 	%rd5048, %rd5042, %rd5047;
	add.s64 	%rd5049, %rd5048, 3796741975233480872;
	add.s64 	%rd5050, %rd5049, %rd4913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3430,%dummy}, %rd5024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3431}, %rd5024;
	}
	shf.r.wrap.b32 	%r3432, %r3431, %r3430, 28;
	shf.r.wrap.b32 	%r3433, %r3430, %r3431, 28;
	mov.b64 	%rd5051, {%r3433, %r3432};
	shf.l.wrap.b32 	%r3434, %r3430, %r3431, 30;
	shf.l.wrap.b32 	%r3435, %r3431, %r3430, 30;
	mov.b64 	%rd5052, {%r3435, %r3434};
	xor.b64  	%rd5053, %rd5051, %rd5052;
	shf.l.wrap.b32 	%r3436, %r3430, %r3431, 25;
	shf.l.wrap.b32 	%r3437, %r3431, %r3430, 25;
	mov.b64 	%rd5054, {%r3437, %r3436};
	xor.b64  	%rd5055, %rd5053, %rd5054;
	and.b64  	%rd5056, %rd5024, %rd4987;
	or.b64  	%rd5057, %rd5024, %rd4987;
	and.b64  	%rd5058, %rd5057, %rd4950;
	or.b64  	%rd5059, %rd5058, %rd5056;
	add.s64 	%rd5060, %rd5059, %rd5055;
	add.s64 	%rd5061, %rd5060, %rd5049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3438,%dummy}, %rd5000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3439}, %rd5000;
	}
	shf.r.wrap.b32 	%r3440, %r3439, %r3438, 19;
	shf.r.wrap.b32 	%r3441, %r3438, %r3439, 19;
	mov.b64 	%rd5062, {%r3441, %r3440};
	shf.l.wrap.b32 	%r3442, %r3438, %r3439, 3;
	shf.l.wrap.b32 	%r3443, %r3439, %r3438, 3;
	mov.b64 	%rd5063, {%r3443, %r3442};
	xor.b64  	%rd5064, %rd5062, %rd5063;
	shr.u64 	%rd5065, %rd5000, 6;
	xor.b64  	%rd5066, %rd5064, %rd5065;
	shf.r.wrap.b32 	%r3444, %r3101, %r3100, 1;
	shf.r.wrap.b32 	%r3445, %r3100, %r3101, 1;
	mov.b64 	%rd5067, {%r3445, %r3444};
	shf.r.wrap.b32 	%r3446, %r3101, %r3100, 8;
	shf.r.wrap.b32 	%r3447, %r3100, %r3101, 8;
	mov.b64 	%rd5068, {%r3447, %r3446};
	xor.b64  	%rd5069, %rd5067, %rd5068;
	shr.u64 	%rd5070, %rd4519, 7;
	xor.b64  	%rd5071, %rd5069, %rd5070;
	add.s64 	%rd5072, %rd5071, %rd4482;
	add.s64 	%rd5073, %rd5072, %rd4815;
	add.s64 	%rd5074, %rd5073, %rd5066;
	add.s64 	%rd5075, %rd5074, %rd4939;
	xor.b64  	%rd5076, %rd5013, %rd4976;
	and.b64  	%rd5077, %rd5050, %rd5076;
	xor.b64  	%rd5078, %rd5077, %rd4976;
	add.s64 	%rd5079, %rd5075, %rd5078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3448,%dummy}, %rd5050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3449}, %rd5050;
	}
	shf.r.wrap.b32 	%r3450, %r3449, %r3448, 14;
	shf.r.wrap.b32 	%r3451, %r3448, %r3449, 14;
	mov.b64 	%rd5080, {%r3451, %r3450};
	shf.r.wrap.b32 	%r3452, %r3449, %r3448, 18;
	shf.r.wrap.b32 	%r3453, %r3448, %r3449, 18;
	mov.b64 	%rd5081, {%r3453, %r3452};
	xor.b64  	%rd5082, %rd5080, %rd5081;
	shf.l.wrap.b32 	%r3454, %r3448, %r3449, 23;
	shf.l.wrap.b32 	%r3455, %r3449, %r3448, 23;
	mov.b64 	%rd5083, {%r3455, %r3454};
	xor.b64  	%rd5084, %rd5082, %rd5083;
	add.s64 	%rd5085, %rd5079, %rd5084;
	add.s64 	%rd5086, %rd5085, 4115178125766777443;
	add.s64 	%rd5087, %rd5086, %rd4950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3456,%dummy}, %rd5061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3457}, %rd5061;
	}
	shf.r.wrap.b32 	%r3458, %r3457, %r3456, 28;
	shf.r.wrap.b32 	%r3459, %r3456, %r3457, 28;
	mov.b64 	%rd5088, {%r3459, %r3458};
	shf.l.wrap.b32 	%r3460, %r3456, %r3457, 30;
	shf.l.wrap.b32 	%r3461, %r3457, %r3456, 30;
	mov.b64 	%rd5089, {%r3461, %r3460};
	xor.b64  	%rd5090, %rd5088, %rd5089;
	shf.l.wrap.b32 	%r3462, %r3456, %r3457, 25;
	shf.l.wrap.b32 	%r3463, %r3457, %r3456, 25;
	mov.b64 	%rd5091, {%r3463, %r3462};
	xor.b64  	%rd5092, %rd5090, %rd5091;
	and.b64  	%rd5093, %rd5061, %rd5024;
	or.b64  	%rd5094, %rd5061, %rd5024;
	and.b64  	%rd5095, %rd5094, %rd4987;
	or.b64  	%rd5096, %rd5095, %rd5093;
	add.s64 	%rd5097, %rd5096, %rd5092;
	add.s64 	%rd5098, %rd5097, %rd5086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3464,%dummy}, %rd5037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3465}, %rd5037;
	}
	shf.r.wrap.b32 	%r3466, %r3465, %r3464, 19;
	shf.r.wrap.b32 	%r3467, %r3464, %r3465, 19;
	mov.b64 	%rd5099, {%r3467, %r3466};
	shf.l.wrap.b32 	%r3468, %r3464, %r3465, 3;
	shf.l.wrap.b32 	%r3469, %r3465, %r3464, 3;
	mov.b64 	%rd5100, {%r3469, %r3468};
	xor.b64  	%rd5101, %rd5099, %rd5100;
	shr.u64 	%rd5102, %rd5037, 6;
	xor.b64  	%rd5103, %rd5101, %rd5102;
	shf.r.wrap.b32 	%r3470, %r3127, %r3126, 1;
	shf.r.wrap.b32 	%r3471, %r3126, %r3127, 1;
	mov.b64 	%rd5104, {%r3471, %r3470};
	shf.r.wrap.b32 	%r3472, %r3127, %r3126, 8;
	shf.r.wrap.b32 	%r3473, %r3126, %r3127, 8;
	mov.b64 	%rd5105, {%r3473, %r3472};
	xor.b64  	%rd5106, %rd5104, %rd5105;
	shr.u64 	%rd5107, %rd4556, 7;
	xor.b64  	%rd5108, %rd5106, %rd5107;
	add.s64 	%rd5109, %rd5108, %rd4519;
	add.s64 	%rd5110, %rd5109, %rd4852;
	add.s64 	%rd5111, %rd5110, %rd5103;
	add.s64 	%rd5112, %rd5111, %rd4976;
	xor.b64  	%rd5113, %rd5050, %rd5013;
	and.b64  	%rd5114, %rd5087, %rd5113;
	xor.b64  	%rd5115, %rd5114, %rd5013;
	add.s64 	%rd5116, %rd5112, %rd5115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3474,%dummy}, %rd5087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3475}, %rd5087;
	}
	shf.r.wrap.b32 	%r3476, %r3475, %r3474, 14;
	shf.r.wrap.b32 	%r3477, %r3474, %r3475, 14;
	mov.b64 	%rd5117, {%r3477, %r3476};
	shf.r.wrap.b32 	%r3478, %r3475, %r3474, 18;
	shf.r.wrap.b32 	%r3479, %r3474, %r3475, 18;
	mov.b64 	%rd5118, {%r3479, %r3478};
	xor.b64  	%rd5119, %rd5117, %rd5118;
	shf.l.wrap.b32 	%r3480, %r3474, %r3475, 23;
	shf.l.wrap.b32 	%r3481, %r3475, %r3474, 23;
	mov.b64 	%rd5120, {%r3481, %r3480};
	xor.b64  	%rd5121, %rd5119, %rd5120;
	add.s64 	%rd5122, %rd5116, %rd5121;
	add.s64 	%rd5123, %rd5122, 5681478168544905931;
	add.s64 	%rd5124, %rd5123, %rd4987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3482,%dummy}, %rd5098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3483}, %rd5098;
	}
	shf.r.wrap.b32 	%r3484, %r3483, %r3482, 28;
	shf.r.wrap.b32 	%r3485, %r3482, %r3483, 28;
	mov.b64 	%rd5125, {%r3485, %r3484};
	shf.l.wrap.b32 	%r3486, %r3482, %r3483, 30;
	shf.l.wrap.b32 	%r3487, %r3483, %r3482, 30;
	mov.b64 	%rd5126, {%r3487, %r3486};
	xor.b64  	%rd5127, %rd5125, %rd5126;
	shf.l.wrap.b32 	%r3488, %r3482, %r3483, 25;
	shf.l.wrap.b32 	%r3489, %r3483, %r3482, 25;
	mov.b64 	%rd5128, {%r3489, %r3488};
	xor.b64  	%rd5129, %rd5127, %rd5128;
	and.b64  	%rd5130, %rd5098, %rd5061;
	or.b64  	%rd5131, %rd5098, %rd5061;
	and.b64  	%rd5132, %rd5131, %rd5024;
	or.b64  	%rd5133, %rd5132, %rd5130;
	add.s64 	%rd5134, %rd5133, %rd5129;
	add.s64 	%rd5135, %rd5134, %rd5123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3490,%dummy}, %rd5074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3491}, %rd5074;
	}
	shf.r.wrap.b32 	%r3492, %r3491, %r3490, 19;
	shf.r.wrap.b32 	%r3493, %r3490, %r3491, 19;
	mov.b64 	%rd5136, {%r3493, %r3492};
	shf.l.wrap.b32 	%r3494, %r3490, %r3491, 3;
	shf.l.wrap.b32 	%r3495, %r3491, %r3490, 3;
	mov.b64 	%rd5137, {%r3495, %r3494};
	xor.b64  	%rd5138, %rd5136, %rd5137;
	shr.u64 	%rd5139, %rd5074, 6;
	xor.b64  	%rd5140, %rd5138, %rd5139;
	shf.r.wrap.b32 	%r3496, %r3153, %r3152, 1;
	shf.r.wrap.b32 	%r3497, %r3152, %r3153, 1;
	mov.b64 	%rd5141, {%r3497, %r3496};
	shf.r.wrap.b32 	%r3498, %r3153, %r3152, 8;
	shf.r.wrap.b32 	%r3499, %r3152, %r3153, 8;
	mov.b64 	%rd5142, {%r3499, %r3498};
	xor.b64  	%rd5143, %rd5141, %rd5142;
	shr.u64 	%rd5144, %rd4593, 7;
	xor.b64  	%rd5145, %rd5143, %rd5144;
	add.s64 	%rd5146, %rd5145, %rd4556;
	add.s64 	%rd5147, %rd5146, %rd4889;
	add.s64 	%rd5148, %rd5147, %rd5140;
	add.s64 	%rd5149, %rd5148, %rd5013;
	xor.b64  	%rd5150, %rd5087, %rd5050;
	and.b64  	%rd5151, %rd5124, %rd5150;
	xor.b64  	%rd5152, %rd5151, %rd5050;
	add.s64 	%rd5153, %rd5149, %rd5152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3500,%dummy}, %rd5124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3501}, %rd5124;
	}
	shf.r.wrap.b32 	%r3502, %r3501, %r3500, 14;
	shf.r.wrap.b32 	%r3503, %r3500, %r3501, 14;
	mov.b64 	%rd5154, {%r3503, %r3502};
	shf.r.wrap.b32 	%r3504, %r3501, %r3500, 18;
	shf.r.wrap.b32 	%r3505, %r3500, %r3501, 18;
	mov.b64 	%rd5155, {%r3505, %r3504};
	xor.b64  	%rd5156, %rd5154, %rd5155;
	shf.l.wrap.b32 	%r3506, %r3500, %r3501, 23;
	shf.l.wrap.b32 	%r3507, %r3501, %r3500, 23;
	mov.b64 	%rd5157, {%r3507, %r3506};
	xor.b64  	%rd5158, %rd5156, %rd5157;
	add.s64 	%rd5159, %rd5153, %rd5158;
	add.s64 	%rd5160, %rd5159, 6601373596472566643;
	add.s64 	%rd5161, %rd5160, %rd5024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3508,%dummy}, %rd5135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3509}, %rd5135;
	}
	shf.r.wrap.b32 	%r3510, %r3509, %r3508, 28;
	shf.r.wrap.b32 	%r3511, %r3508, %r3509, 28;
	mov.b64 	%rd5162, {%r3511, %r3510};
	shf.l.wrap.b32 	%r3512, %r3508, %r3509, 30;
	shf.l.wrap.b32 	%r3513, %r3509, %r3508, 30;
	mov.b64 	%rd5163, {%r3513, %r3512};
	xor.b64  	%rd5164, %rd5162, %rd5163;
	shf.l.wrap.b32 	%r3514, %r3508, %r3509, 25;
	shf.l.wrap.b32 	%r3515, %r3509, %r3508, 25;
	mov.b64 	%rd5165, {%r3515, %r3514};
	xor.b64  	%rd5166, %rd5164, %rd5165;
	and.b64  	%rd5167, %rd5135, %rd5098;
	or.b64  	%rd5168, %rd5135, %rd5098;
	and.b64  	%rd5169, %rd5168, %rd5061;
	or.b64  	%rd5170, %rd5169, %rd5167;
	add.s64 	%rd5171, %rd5170, %rd5166;
	add.s64 	%rd5172, %rd5171, %rd5160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3516,%dummy}, %rd5111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3517}, %rd5111;
	}
	shf.r.wrap.b32 	%r3518, %r3517, %r3516, 19;
	shf.r.wrap.b32 	%r3519, %r3516, %r3517, 19;
	mov.b64 	%rd5173, {%r3519, %r3518};
	shf.l.wrap.b32 	%r3520, %r3516, %r3517, 3;
	shf.l.wrap.b32 	%r3521, %r3517, %r3516, 3;
	mov.b64 	%rd5174, {%r3521, %r3520};
	xor.b64  	%rd5175, %rd5173, %rd5174;
	shr.u64 	%rd5176, %rd5111, 6;
	xor.b64  	%rd5177, %rd5175, %rd5176;
	shf.r.wrap.b32 	%r3522, %r3179, %r3178, 1;
	shf.r.wrap.b32 	%r3523, %r3178, %r3179, 1;
	mov.b64 	%rd5178, {%r3523, %r3522};
	shf.r.wrap.b32 	%r3524, %r3179, %r3178, 8;
	shf.r.wrap.b32 	%r3525, %r3178, %r3179, 8;
	mov.b64 	%rd5179, {%r3525, %r3524};
	xor.b64  	%rd5180, %rd5178, %rd5179;
	shr.u64 	%rd5181, %rd4630, 7;
	xor.b64  	%rd5182, %rd5180, %rd5181;
	add.s64 	%rd5183, %rd5182, %rd4593;
	add.s64 	%rd5184, %rd5183, %rd4926;
	add.s64 	%rd5185, %rd5184, %rd5177;
	add.s64 	%rd5186, %rd5185, %rd5050;
	xor.b64  	%rd5187, %rd5124, %rd5087;
	and.b64  	%rd5188, %rd5161, %rd5187;
	xor.b64  	%rd5189, %rd5188, %rd5087;
	add.s64 	%rd5190, %rd5186, %rd5189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3526,%dummy}, %rd5161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3527}, %rd5161;
	}
	shf.r.wrap.b32 	%r3528, %r3527, %r3526, 14;
	shf.r.wrap.b32 	%r3529, %r3526, %r3527, 14;
	mov.b64 	%rd5191, {%r3529, %r3528};
	shf.r.wrap.b32 	%r3530, %r3527, %r3526, 18;
	shf.r.wrap.b32 	%r3531, %r3526, %r3527, 18;
	mov.b64 	%rd5192, {%r3531, %r3530};
	xor.b64  	%rd5193, %rd5191, %rd5192;
	shf.l.wrap.b32 	%r3532, %r3526, %r3527, 23;
	shf.l.wrap.b32 	%r3533, %r3527, %r3526, 23;
	mov.b64 	%rd5194, {%r3533, %r3532};
	xor.b64  	%rd5195, %rd5193, %rd5194;
	add.s64 	%rd5196, %rd5190, %rd5195;
	add.s64 	%rd5197, %rd5196, 7507060721942968483;
	add.s64 	%rd5198, %rd5197, %rd5061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3534,%dummy}, %rd5172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3535}, %rd5172;
	}
	shf.r.wrap.b32 	%r3536, %r3535, %r3534, 28;
	shf.r.wrap.b32 	%r3537, %r3534, %r3535, 28;
	mov.b64 	%rd5199, {%r3537, %r3536};
	shf.l.wrap.b32 	%r3538, %r3534, %r3535, 30;
	shf.l.wrap.b32 	%r3539, %r3535, %r3534, 30;
	mov.b64 	%rd5200, {%r3539, %r3538};
	xor.b64  	%rd5201, %rd5199, %rd5200;
	shf.l.wrap.b32 	%r3540, %r3534, %r3535, 25;
	shf.l.wrap.b32 	%r3541, %r3535, %r3534, 25;
	mov.b64 	%rd5202, {%r3541, %r3540};
	xor.b64  	%rd5203, %rd5201, %rd5202;
	and.b64  	%rd5204, %rd5172, %rd5135;
	or.b64  	%rd5205, %rd5172, %rd5135;
	and.b64  	%rd5206, %rd5205, %rd5098;
	or.b64  	%rd5207, %rd5206, %rd5204;
	add.s64 	%rd5208, %rd5207, %rd5203;
	add.s64 	%rd5209, %rd5208, %rd5197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3542,%dummy}, %rd5148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3543}, %rd5148;
	}
	shf.r.wrap.b32 	%r3544, %r3543, %r3542, 19;
	shf.r.wrap.b32 	%r3545, %r3542, %r3543, 19;
	mov.b64 	%rd5210, {%r3545, %r3544};
	shf.l.wrap.b32 	%r3546, %r3542, %r3543, 3;
	shf.l.wrap.b32 	%r3547, %r3543, %r3542, 3;
	mov.b64 	%rd5211, {%r3547, %r3546};
	xor.b64  	%rd5212, %rd5210, %rd5211;
	shr.u64 	%rd5213, %rd5148, 6;
	xor.b64  	%rd5214, %rd5212, %rd5213;
	shf.r.wrap.b32 	%r3548, %r3205, %r3204, 1;
	shf.r.wrap.b32 	%r3549, %r3204, %r3205, 1;
	mov.b64 	%rd5215, {%r3549, %r3548};
	shf.r.wrap.b32 	%r3550, %r3205, %r3204, 8;
	shf.r.wrap.b32 	%r3551, %r3204, %r3205, 8;
	mov.b64 	%rd5216, {%r3551, %r3550};
	xor.b64  	%rd5217, %rd5215, %rd5216;
	shr.u64 	%rd5218, %rd4667, 7;
	xor.b64  	%rd5219, %rd5217, %rd5218;
	add.s64 	%rd5220, %rd5219, %rd4630;
	add.s64 	%rd5221, %rd5220, %rd4963;
	add.s64 	%rd5222, %rd5221, %rd5214;
	add.s64 	%rd5223, %rd5222, %rd5087;
	xor.b64  	%rd5224, %rd5161, %rd5124;
	and.b64  	%rd5225, %rd5198, %rd5224;
	xor.b64  	%rd5226, %rd5225, %rd5124;
	add.s64 	%rd5227, %rd5223, %rd5226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3552,%dummy}, %rd5198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3553}, %rd5198;
	}
	shf.r.wrap.b32 	%r3554, %r3553, %r3552, 14;
	shf.r.wrap.b32 	%r3555, %r3552, %r3553, 14;
	mov.b64 	%rd5228, {%r3555, %r3554};
	shf.r.wrap.b32 	%r3556, %r3553, %r3552, 18;
	shf.r.wrap.b32 	%r3557, %r3552, %r3553, 18;
	mov.b64 	%rd5229, {%r3557, %r3556};
	xor.b64  	%rd5230, %rd5228, %rd5229;
	shf.l.wrap.b32 	%r3558, %r3552, %r3553, 23;
	shf.l.wrap.b32 	%r3559, %r3553, %r3552, 23;
	mov.b64 	%rd5231, {%r3559, %r3558};
	xor.b64  	%rd5232, %rd5230, %rd5231;
	add.s64 	%rd5233, %rd5227, %rd5232;
	add.s64 	%rd5234, %rd5233, 8399075790359081724;
	add.s64 	%rd5235, %rd5234, %rd5098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3560,%dummy}, %rd5209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3561}, %rd5209;
	}
	shf.r.wrap.b32 	%r3562, %r3561, %r3560, 28;
	shf.r.wrap.b32 	%r3563, %r3560, %r3561, 28;
	mov.b64 	%rd5236, {%r3563, %r3562};
	shf.l.wrap.b32 	%r3564, %r3560, %r3561, 30;
	shf.l.wrap.b32 	%r3565, %r3561, %r3560, 30;
	mov.b64 	%rd5237, {%r3565, %r3564};
	xor.b64  	%rd5238, %rd5236, %rd5237;
	shf.l.wrap.b32 	%r3566, %r3560, %r3561, 25;
	shf.l.wrap.b32 	%r3567, %r3561, %r3560, 25;
	mov.b64 	%rd5239, {%r3567, %r3566};
	xor.b64  	%rd5240, %rd5238, %rd5239;
	and.b64  	%rd5241, %rd5209, %rd5172;
	or.b64  	%rd5242, %rd5209, %rd5172;
	and.b64  	%rd5243, %rd5242, %rd5135;
	or.b64  	%rd5244, %rd5243, %rd5241;
	add.s64 	%rd5245, %rd5244, %rd5240;
	add.s64 	%rd5246, %rd5245, %rd5234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3568,%dummy}, %rd5185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3569}, %rd5185;
	}
	shf.r.wrap.b32 	%r3570, %r3569, %r3568, 19;
	shf.r.wrap.b32 	%r3571, %r3568, %r3569, 19;
	mov.b64 	%rd5247, {%r3571, %r3570};
	shf.l.wrap.b32 	%r3572, %r3568, %r3569, 3;
	shf.l.wrap.b32 	%r3573, %r3569, %r3568, 3;
	mov.b64 	%rd5248, {%r3573, %r3572};
	xor.b64  	%rd5249, %rd5247, %rd5248;
	shr.u64 	%rd5250, %rd5185, 6;
	xor.b64  	%rd5251, %rd5249, %rd5250;
	shf.r.wrap.b32 	%r3574, %r3231, %r3230, 1;
	shf.r.wrap.b32 	%r3575, %r3230, %r3231, 1;
	mov.b64 	%rd5252, {%r3575, %r3574};
	shf.r.wrap.b32 	%r3576, %r3231, %r3230, 8;
	shf.r.wrap.b32 	%r3577, %r3230, %r3231, 8;
	mov.b64 	%rd5253, {%r3577, %r3576};
	xor.b64  	%rd5254, %rd5252, %rd5253;
	shr.u64 	%rd5255, %rd4704, 7;
	xor.b64  	%rd5256, %rd5254, %rd5255;
	add.s64 	%rd5257, %rd5256, %rd4667;
	add.s64 	%rd5258, %rd5257, %rd5000;
	add.s64 	%rd5259, %rd5258, %rd5251;
	add.s64 	%rd5260, %rd5259, %rd5124;
	xor.b64  	%rd5261, %rd5198, %rd5161;
	and.b64  	%rd5262, %rd5235, %rd5261;
	xor.b64  	%rd5263, %rd5262, %rd5161;
	add.s64 	%rd5264, %rd5260, %rd5263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3578,%dummy}, %rd5235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3579}, %rd5235;
	}
	shf.r.wrap.b32 	%r3580, %r3579, %r3578, 14;
	shf.r.wrap.b32 	%r3581, %r3578, %r3579, 14;
	mov.b64 	%rd5265, {%r3581, %r3580};
	shf.r.wrap.b32 	%r3582, %r3579, %r3578, 18;
	shf.r.wrap.b32 	%r3583, %r3578, %r3579, 18;
	mov.b64 	%rd5266, {%r3583, %r3582};
	xor.b64  	%rd5267, %rd5265, %rd5266;
	shf.l.wrap.b32 	%r3584, %r3578, %r3579, 23;
	shf.l.wrap.b32 	%r3585, %r3579, %r3578, 23;
	mov.b64 	%rd5268, {%r3585, %r3584};
	xor.b64  	%rd5269, %rd5267, %rd5268;
	add.s64 	%rd5270, %rd5264, %rd5269;
	add.s64 	%rd5271, %rd5270, 8693463985226723168;
	add.s64 	%rd5272, %rd5271, %rd5135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3586,%dummy}, %rd5246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3587}, %rd5246;
	}
	shf.r.wrap.b32 	%r3588, %r3587, %r3586, 28;
	shf.r.wrap.b32 	%r3589, %r3586, %r3587, 28;
	mov.b64 	%rd5273, {%r3589, %r3588};
	shf.l.wrap.b32 	%r3590, %r3586, %r3587, 30;
	shf.l.wrap.b32 	%r3591, %r3587, %r3586, 30;
	mov.b64 	%rd5274, {%r3591, %r3590};
	xor.b64  	%rd5275, %rd5273, %rd5274;
	shf.l.wrap.b32 	%r3592, %r3586, %r3587, 25;
	shf.l.wrap.b32 	%r3593, %r3587, %r3586, 25;
	mov.b64 	%rd5276, {%r3593, %r3592};
	xor.b64  	%rd5277, %rd5275, %rd5276;
	and.b64  	%rd5278, %rd5246, %rd5209;
	or.b64  	%rd5279, %rd5246, %rd5209;
	and.b64  	%rd5280, %rd5279, %rd5172;
	or.b64  	%rd5281, %rd5280, %rd5278;
	add.s64 	%rd5282, %rd5281, %rd5277;
	add.s64 	%rd5283, %rd5282, %rd5271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3594,%dummy}, %rd5222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3595}, %rd5222;
	}
	shf.r.wrap.b32 	%r3596, %r3595, %r3594, 19;
	shf.r.wrap.b32 	%r3597, %r3594, %r3595, 19;
	mov.b64 	%rd5284, {%r3597, %r3596};
	shf.l.wrap.b32 	%r3598, %r3594, %r3595, 3;
	shf.l.wrap.b32 	%r3599, %r3595, %r3594, 3;
	mov.b64 	%rd5285, {%r3599, %r3598};
	xor.b64  	%rd5286, %rd5284, %rd5285;
	shr.u64 	%rd5287, %rd5222, 6;
	xor.b64  	%rd5288, %rd5286, %rd5287;
	shf.r.wrap.b32 	%r3600, %r3257, %r3256, 1;
	shf.r.wrap.b32 	%r3601, %r3256, %r3257, 1;
	mov.b64 	%rd5289, {%r3601, %r3600};
	shf.r.wrap.b32 	%r3602, %r3257, %r3256, 8;
	shf.r.wrap.b32 	%r3603, %r3256, %r3257, 8;
	mov.b64 	%rd5290, {%r3603, %r3602};
	xor.b64  	%rd5291, %rd5289, %rd5290;
	shr.u64 	%rd5292, %rd4741, 7;
	xor.b64  	%rd5293, %rd5291, %rd5292;
	add.s64 	%rd5294, %rd5293, %rd4704;
	add.s64 	%rd5295, %rd5294, %rd5037;
	add.s64 	%rd5296, %rd5295, %rd5288;
	add.s64 	%rd5297, %rd5296, %rd5161;
	xor.b64  	%rd5298, %rd5235, %rd5198;
	and.b64  	%rd5299, %rd5272, %rd5298;
	xor.b64  	%rd5300, %rd5299, %rd5198;
	add.s64 	%rd5301, %rd5297, %rd5300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3604,%dummy}, %rd5272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3605}, %rd5272;
	}
	shf.r.wrap.b32 	%r3606, %r3605, %r3604, 14;
	shf.r.wrap.b32 	%r3607, %r3604, %r3605, 14;
	mov.b64 	%rd5302, {%r3607, %r3606};
	shf.r.wrap.b32 	%r3608, %r3605, %r3604, 18;
	shf.r.wrap.b32 	%r3609, %r3604, %r3605, 18;
	mov.b64 	%rd5303, {%r3609, %r3608};
	xor.b64  	%rd5304, %rd5302, %rd5303;
	shf.l.wrap.b32 	%r3610, %r3604, %r3605, 23;
	shf.l.wrap.b32 	%r3611, %r3605, %r3604, 23;
	mov.b64 	%rd5305, {%r3611, %r3610};
	xor.b64  	%rd5306, %rd5304, %rd5305;
	add.s64 	%rd5307, %rd5301, %rd5306;
	add.s64 	%rd5308, %rd5307, -8878714635349349518;
	add.s64 	%rd5309, %rd5308, %rd5172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3612,%dummy}, %rd5283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3613}, %rd5283;
	}
	shf.r.wrap.b32 	%r3614, %r3613, %r3612, 28;
	shf.r.wrap.b32 	%r3615, %r3612, %r3613, 28;
	mov.b64 	%rd5310, {%r3615, %r3614};
	shf.l.wrap.b32 	%r3616, %r3612, %r3613, 30;
	shf.l.wrap.b32 	%r3617, %r3613, %r3612, 30;
	mov.b64 	%rd5311, {%r3617, %r3616};
	xor.b64  	%rd5312, %rd5310, %rd5311;
	shf.l.wrap.b32 	%r3618, %r3612, %r3613, 25;
	shf.l.wrap.b32 	%r3619, %r3613, %r3612, 25;
	mov.b64 	%rd5313, {%r3619, %r3618};
	xor.b64  	%rd5314, %rd5312, %rd5313;
	and.b64  	%rd5315, %rd5283, %rd5246;
	or.b64  	%rd5316, %rd5283, %rd5246;
	and.b64  	%rd5317, %rd5316, %rd5209;
	or.b64  	%rd5318, %rd5317, %rd5315;
	add.s64 	%rd5319, %rd5318, %rd5314;
	add.s64 	%rd5320, %rd5319, %rd5308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3620,%dummy}, %rd5259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3621}, %rd5259;
	}
	shf.r.wrap.b32 	%r3622, %r3621, %r3620, 19;
	shf.r.wrap.b32 	%r3623, %r3620, %r3621, 19;
	mov.b64 	%rd5321, {%r3623, %r3622};
	shf.l.wrap.b32 	%r3624, %r3620, %r3621, 3;
	shf.l.wrap.b32 	%r3625, %r3621, %r3620, 3;
	mov.b64 	%rd5322, {%r3625, %r3624};
	xor.b64  	%rd5323, %rd5321, %rd5322;
	shr.u64 	%rd5324, %rd5259, 6;
	xor.b64  	%rd5325, %rd5323, %rd5324;
	shf.r.wrap.b32 	%r3626, %r3283, %r3282, 1;
	shf.r.wrap.b32 	%r3627, %r3282, %r3283, 1;
	mov.b64 	%rd5326, {%r3627, %r3626};
	shf.r.wrap.b32 	%r3628, %r3283, %r3282, 8;
	shf.r.wrap.b32 	%r3629, %r3282, %r3283, 8;
	mov.b64 	%rd5327, {%r3629, %r3628};
	xor.b64  	%rd5328, %rd5326, %rd5327;
	shr.u64 	%rd5329, %rd4778, 7;
	xor.b64  	%rd5330, %rd5328, %rd5329;
	add.s64 	%rd5331, %rd5330, %rd4741;
	add.s64 	%rd5332, %rd5331, %rd5074;
	add.s64 	%rd5333, %rd5332, %rd5325;
	add.s64 	%rd5334, %rd5333, %rd5198;
	xor.b64  	%rd5335, %rd5272, %rd5235;
	and.b64  	%rd5336, %rd5309, %rd5335;
	xor.b64  	%rd5337, %rd5336, %rd5235;
	add.s64 	%rd5338, %rd5334, %rd5337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3630,%dummy}, %rd5309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3631}, %rd5309;
	}
	shf.r.wrap.b32 	%r3632, %r3631, %r3630, 14;
	shf.r.wrap.b32 	%r3633, %r3630, %r3631, 14;
	mov.b64 	%rd5339, {%r3633, %r3632};
	shf.r.wrap.b32 	%r3634, %r3631, %r3630, 18;
	shf.r.wrap.b32 	%r3635, %r3630, %r3631, 18;
	mov.b64 	%rd5340, {%r3635, %r3634};
	xor.b64  	%rd5341, %rd5339, %rd5340;
	shf.l.wrap.b32 	%r3636, %r3630, %r3631, 23;
	shf.l.wrap.b32 	%r3637, %r3631, %r3630, 23;
	mov.b64 	%rd5342, {%r3637, %r3636};
	xor.b64  	%rd5343, %rd5341, %rd5342;
	add.s64 	%rd5344, %rd5338, %rd5343;
	add.s64 	%rd5345, %rd5344, -8302665154208450068;
	add.s64 	%rd5346, %rd5345, %rd5209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3638,%dummy}, %rd5320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3639}, %rd5320;
	}
	shf.r.wrap.b32 	%r3640, %r3639, %r3638, 28;
	shf.r.wrap.b32 	%r3641, %r3638, %r3639, 28;
	mov.b64 	%rd5347, {%r3641, %r3640};
	shf.l.wrap.b32 	%r3642, %r3638, %r3639, 30;
	shf.l.wrap.b32 	%r3643, %r3639, %r3638, 30;
	mov.b64 	%rd5348, {%r3643, %r3642};
	xor.b64  	%rd5349, %rd5347, %rd5348;
	shf.l.wrap.b32 	%r3644, %r3638, %r3639, 25;
	shf.l.wrap.b32 	%r3645, %r3639, %r3638, 25;
	mov.b64 	%rd5350, {%r3645, %r3644};
	xor.b64  	%rd5351, %rd5349, %rd5350;
	and.b64  	%rd5352, %rd5320, %rd5283;
	or.b64  	%rd5353, %rd5320, %rd5283;
	and.b64  	%rd5354, %rd5353, %rd5246;
	or.b64  	%rd5355, %rd5354, %rd5352;
	add.s64 	%rd5356, %rd5355, %rd5351;
	add.s64 	%rd5357, %rd5356, %rd5345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3646,%dummy}, %rd5296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3647}, %rd5296;
	}
	shf.r.wrap.b32 	%r3648, %r3647, %r3646, 19;
	shf.r.wrap.b32 	%r3649, %r3646, %r3647, 19;
	mov.b64 	%rd5358, {%r3649, %r3648};
	shf.l.wrap.b32 	%r3650, %r3646, %r3647, 3;
	shf.l.wrap.b32 	%r3651, %r3647, %r3646, 3;
	mov.b64 	%rd5359, {%r3651, %r3650};
	xor.b64  	%rd5360, %rd5358, %rd5359;
	shr.u64 	%rd5361, %rd5296, 6;
	xor.b64  	%rd5362, %rd5360, %rd5361;
	shf.r.wrap.b32 	%r3652, %r3309, %r3308, 1;
	shf.r.wrap.b32 	%r3653, %r3308, %r3309, 1;
	mov.b64 	%rd5363, {%r3653, %r3652};
	shf.r.wrap.b32 	%r3654, %r3309, %r3308, 8;
	shf.r.wrap.b32 	%r3655, %r3308, %r3309, 8;
	mov.b64 	%rd5364, {%r3655, %r3654};
	xor.b64  	%rd5365, %rd5363, %rd5364;
	shr.u64 	%rd5366, %rd4815, 7;
	xor.b64  	%rd5367, %rd5365, %rd5366;
	add.s64 	%rd5368, %rd5367, %rd4778;
	add.s64 	%rd5369, %rd5368, %rd5111;
	add.s64 	%rd5370, %rd5369, %rd5362;
	add.s64 	%rd5371, %rd5370, %rd5235;
	xor.b64  	%rd5372, %rd5309, %rd5272;
	and.b64  	%rd5373, %rd5346, %rd5372;
	xor.b64  	%rd5374, %rd5373, %rd5272;
	add.s64 	%rd5375, %rd5371, %rd5374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3656,%dummy}, %rd5346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3657}, %rd5346;
	}
	shf.r.wrap.b32 	%r3658, %r3657, %r3656, 14;
	shf.r.wrap.b32 	%r3659, %r3656, %r3657, 14;
	mov.b64 	%rd5376, {%r3659, %r3658};
	shf.r.wrap.b32 	%r3660, %r3657, %r3656, 18;
	shf.r.wrap.b32 	%r3661, %r3656, %r3657, 18;
	mov.b64 	%rd5377, {%r3661, %r3660};
	xor.b64  	%rd5378, %rd5376, %rd5377;
	shf.l.wrap.b32 	%r3662, %r3656, %r3657, 23;
	shf.l.wrap.b32 	%r3663, %r3657, %r3656, 23;
	mov.b64 	%rd5379, {%r3663, %r3662};
	xor.b64  	%rd5380, %rd5378, %rd5379;
	add.s64 	%rd5381, %rd5375, %rd5380;
	add.s64 	%rd5382, %rd5381, -8016688836872298968;
	add.s64 	%rd5383, %rd5382, %rd5246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3664,%dummy}, %rd5357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3665}, %rd5357;
	}
	shf.r.wrap.b32 	%r3666, %r3665, %r3664, 28;
	shf.r.wrap.b32 	%r3667, %r3664, %r3665, 28;
	mov.b64 	%rd5384, {%r3667, %r3666};
	shf.l.wrap.b32 	%r3668, %r3664, %r3665, 30;
	shf.l.wrap.b32 	%r3669, %r3665, %r3664, 30;
	mov.b64 	%rd5385, {%r3669, %r3668};
	xor.b64  	%rd5386, %rd5384, %rd5385;
	shf.l.wrap.b32 	%r3670, %r3664, %r3665, 25;
	shf.l.wrap.b32 	%r3671, %r3665, %r3664, 25;
	mov.b64 	%rd5387, {%r3671, %r3670};
	xor.b64  	%rd5388, %rd5386, %rd5387;
	and.b64  	%rd5389, %rd5357, %rd5320;
	or.b64  	%rd5390, %rd5357, %rd5320;
	and.b64  	%rd5391, %rd5390, %rd5283;
	or.b64  	%rd5392, %rd5391, %rd5389;
	add.s64 	%rd5393, %rd5392, %rd5388;
	add.s64 	%rd5394, %rd5393, %rd5382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3672,%dummy}, %rd5333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3673}, %rd5333;
	}
	shf.r.wrap.b32 	%r3674, %r3673, %r3672, 19;
	shf.r.wrap.b32 	%r3675, %r3672, %r3673, 19;
	mov.b64 	%rd5395, {%r3675, %r3674};
	shf.l.wrap.b32 	%r3676, %r3672, %r3673, 3;
	shf.l.wrap.b32 	%r3677, %r3673, %r3672, 3;
	mov.b64 	%rd5396, {%r3677, %r3676};
	xor.b64  	%rd5397, %rd5395, %rd5396;
	shr.u64 	%rd5398, %rd5333, 6;
	xor.b64  	%rd5399, %rd5397, %rd5398;
	shf.r.wrap.b32 	%r3678, %r3335, %r3334, 1;
	shf.r.wrap.b32 	%r3679, %r3334, %r3335, 1;
	mov.b64 	%rd5400, {%r3679, %r3678};
	shf.r.wrap.b32 	%r3680, %r3335, %r3334, 8;
	shf.r.wrap.b32 	%r3681, %r3334, %r3335, 8;
	mov.b64 	%rd5401, {%r3681, %r3680};
	xor.b64  	%rd5402, %rd5400, %rd5401;
	shr.u64 	%rd5403, %rd4852, 7;
	xor.b64  	%rd5404, %rd5402, %rd5403;
	add.s64 	%rd5405, %rd5404, %rd4815;
	add.s64 	%rd5406, %rd5405, %rd5148;
	add.s64 	%rd5407, %rd5406, %rd5399;
	add.s64 	%rd5408, %rd5407, %rd5272;
	xor.b64  	%rd5409, %rd5346, %rd5309;
	and.b64  	%rd5410, %rd5383, %rd5409;
	xor.b64  	%rd5411, %rd5410, %rd5309;
	add.s64 	%rd5412, %rd5408, %rd5411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3682,%dummy}, %rd5383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3683}, %rd5383;
	}
	shf.r.wrap.b32 	%r3684, %r3683, %r3682, 14;
	shf.r.wrap.b32 	%r3685, %r3682, %r3683, 14;
	mov.b64 	%rd5413, {%r3685, %r3684};
	shf.r.wrap.b32 	%r3686, %r3683, %r3682, 18;
	shf.r.wrap.b32 	%r3687, %r3682, %r3683, 18;
	mov.b64 	%rd5414, {%r3687, %r3686};
	xor.b64  	%rd5415, %rd5413, %rd5414;
	shf.l.wrap.b32 	%r3688, %r3682, %r3683, 23;
	shf.l.wrap.b32 	%r3689, %r3683, %r3682, 23;
	mov.b64 	%rd5416, {%r3689, %r3688};
	xor.b64  	%rd5417, %rd5415, %rd5416;
	add.s64 	%rd5418, %rd5412, %rd5417;
	add.s64 	%rd5419, %rd5418, -6606660893046293015;
	add.s64 	%rd5420, %rd5419, %rd5283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3690,%dummy}, %rd5394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3691}, %rd5394;
	}
	shf.r.wrap.b32 	%r3692, %r3691, %r3690, 28;
	shf.r.wrap.b32 	%r3693, %r3690, %r3691, 28;
	mov.b64 	%rd5421, {%r3693, %r3692};
	shf.l.wrap.b32 	%r3694, %r3690, %r3691, 30;
	shf.l.wrap.b32 	%r3695, %r3691, %r3690, 30;
	mov.b64 	%rd5422, {%r3695, %r3694};
	xor.b64  	%rd5423, %rd5421, %rd5422;
	shf.l.wrap.b32 	%r3696, %r3690, %r3691, 25;
	shf.l.wrap.b32 	%r3697, %r3691, %r3690, 25;
	mov.b64 	%rd5424, {%r3697, %r3696};
	xor.b64  	%rd5425, %rd5423, %rd5424;
	and.b64  	%rd5426, %rd5394, %rd5357;
	or.b64  	%rd5427, %rd5394, %rd5357;
	and.b64  	%rd5428, %rd5427, %rd5320;
	or.b64  	%rd5429, %rd5428, %rd5426;
	add.s64 	%rd5430, %rd5429, %rd5425;
	add.s64 	%rd5431, %rd5430, %rd5419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3698,%dummy}, %rd5370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3699}, %rd5370;
	}
	shf.r.wrap.b32 	%r3700, %r3699, %r3698, 19;
	shf.r.wrap.b32 	%r3701, %r3698, %r3699, 19;
	mov.b64 	%rd5432, {%r3701, %r3700};
	shf.l.wrap.b32 	%r3702, %r3698, %r3699, 3;
	shf.l.wrap.b32 	%r3703, %r3699, %r3698, 3;
	mov.b64 	%rd5433, {%r3703, %r3702};
	xor.b64  	%rd5434, %rd5432, %rd5433;
	shr.u64 	%rd5435, %rd5370, 6;
	xor.b64  	%rd5436, %rd5434, %rd5435;
	shf.r.wrap.b32 	%r3704, %r3361, %r3360, 1;
	shf.r.wrap.b32 	%r3705, %r3360, %r3361, 1;
	mov.b64 	%rd5437, {%r3705, %r3704};
	shf.r.wrap.b32 	%r3706, %r3361, %r3360, 8;
	shf.r.wrap.b32 	%r3707, %r3360, %r3361, 8;
	mov.b64 	%rd5438, {%r3707, %r3706};
	xor.b64  	%rd5439, %rd5437, %rd5438;
	shr.u64 	%rd5440, %rd4889, 7;
	xor.b64  	%rd5441, %rd5439, %rd5440;
	add.s64 	%rd5442, %rd5441, %rd4852;
	add.s64 	%rd5443, %rd5442, %rd5185;
	add.s64 	%rd5444, %rd5443, %rd5436;
	add.s64 	%rd5445, %rd5444, %rd5309;
	xor.b64  	%rd5446, %rd5383, %rd5346;
	and.b64  	%rd5447, %rd5420, %rd5446;
	xor.b64  	%rd5448, %rd5447, %rd5346;
	add.s64 	%rd5449, %rd5445, %rd5448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3708,%dummy}, %rd5420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3709}, %rd5420;
	}
	shf.r.wrap.b32 	%r3710, %r3709, %r3708, 14;
	shf.r.wrap.b32 	%r3711, %r3708, %r3709, 14;
	mov.b64 	%rd5450, {%r3711, %r3710};
	shf.r.wrap.b32 	%r3712, %r3709, %r3708, 18;
	shf.r.wrap.b32 	%r3713, %r3708, %r3709, 18;
	mov.b64 	%rd5451, {%r3713, %r3712};
	xor.b64  	%rd5452, %rd5450, %rd5451;
	shf.l.wrap.b32 	%r3714, %r3708, %r3709, 23;
	shf.l.wrap.b32 	%r3715, %r3709, %r3708, 23;
	mov.b64 	%rd5453, {%r3715, %r3714};
	xor.b64  	%rd5454, %rd5452, %rd5453;
	add.s64 	%rd5455, %rd5449, %rd5454;
	add.s64 	%rd5456, %rd5455, -4685533653050689259;
	add.s64 	%rd5457, %rd5456, %rd5320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3716,%dummy}, %rd5431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3717}, %rd5431;
	}
	shf.r.wrap.b32 	%r3718, %r3717, %r3716, 28;
	shf.r.wrap.b32 	%r3719, %r3716, %r3717, 28;
	mov.b64 	%rd5458, {%r3719, %r3718};
	shf.l.wrap.b32 	%r3720, %r3716, %r3717, 30;
	shf.l.wrap.b32 	%r3721, %r3717, %r3716, 30;
	mov.b64 	%rd5459, {%r3721, %r3720};
	xor.b64  	%rd5460, %rd5458, %rd5459;
	shf.l.wrap.b32 	%r3722, %r3716, %r3717, 25;
	shf.l.wrap.b32 	%r3723, %r3717, %r3716, 25;
	mov.b64 	%rd5461, {%r3723, %r3722};
	xor.b64  	%rd5462, %rd5460, %rd5461;
	and.b64  	%rd5463, %rd5431, %rd5394;
	or.b64  	%rd5464, %rd5431, %rd5394;
	and.b64  	%rd5465, %rd5464, %rd5357;
	or.b64  	%rd5466, %rd5465, %rd5463;
	add.s64 	%rd5467, %rd5466, %rd5462;
	add.s64 	%rd5468, %rd5467, %rd5456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3724,%dummy}, %rd5407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3725}, %rd5407;
	}
	shf.r.wrap.b32 	%r3726, %r3725, %r3724, 19;
	shf.r.wrap.b32 	%r3727, %r3724, %r3725, 19;
	mov.b64 	%rd5469, {%r3727, %r3726};
	shf.l.wrap.b32 	%r3728, %r3724, %r3725, 3;
	shf.l.wrap.b32 	%r3729, %r3725, %r3724, 3;
	mov.b64 	%rd5470, {%r3729, %r3728};
	xor.b64  	%rd5471, %rd5469, %rd5470;
	shr.u64 	%rd5472, %rd5407, 6;
	xor.b64  	%rd5473, %rd5471, %rd5472;
	shf.r.wrap.b32 	%r3730, %r3387, %r3386, 1;
	shf.r.wrap.b32 	%r3731, %r3386, %r3387, 1;
	mov.b64 	%rd5474, {%r3731, %r3730};
	shf.r.wrap.b32 	%r3732, %r3387, %r3386, 8;
	shf.r.wrap.b32 	%r3733, %r3386, %r3387, 8;
	mov.b64 	%rd5475, {%r3733, %r3732};
	xor.b64  	%rd5476, %rd5474, %rd5475;
	shr.u64 	%rd5477, %rd4926, 7;
	xor.b64  	%rd5478, %rd5476, %rd5477;
	add.s64 	%rd5479, %rd5478, %rd4889;
	add.s64 	%rd5480, %rd5479, %rd5222;
	add.s64 	%rd5481, %rd5480, %rd5473;
	add.s64 	%rd5482, %rd5481, %rd5346;
	xor.b64  	%rd5483, %rd5420, %rd5383;
	and.b64  	%rd5484, %rd5457, %rd5483;
	xor.b64  	%rd5485, %rd5484, %rd5383;
	add.s64 	%rd5486, %rd5482, %rd5485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3734,%dummy}, %rd5457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3735}, %rd5457;
	}
	shf.r.wrap.b32 	%r3736, %r3735, %r3734, 14;
	shf.r.wrap.b32 	%r3737, %r3734, %r3735, 14;
	mov.b64 	%rd5487, {%r3737, %r3736};
	shf.r.wrap.b32 	%r3738, %r3735, %r3734, 18;
	shf.r.wrap.b32 	%r3739, %r3734, %r3735, 18;
	mov.b64 	%rd5488, {%r3739, %r3738};
	xor.b64  	%rd5489, %rd5487, %rd5488;
	shf.l.wrap.b32 	%r3740, %r3734, %r3735, 23;
	shf.l.wrap.b32 	%r3741, %r3735, %r3734, 23;
	mov.b64 	%rd5490, {%r3741, %r3740};
	xor.b64  	%rd5491, %rd5489, %rd5490;
	add.s64 	%rd5492, %rd5486, %rd5491;
	add.s64 	%rd5493, %rd5492, -4147400797238176981;
	add.s64 	%rd5494, %rd5493, %rd5357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3742,%dummy}, %rd5468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3743}, %rd5468;
	}
	shf.r.wrap.b32 	%r3744, %r3743, %r3742, 28;
	shf.r.wrap.b32 	%r3745, %r3742, %r3743, 28;
	mov.b64 	%rd5495, {%r3745, %r3744};
	shf.l.wrap.b32 	%r3746, %r3742, %r3743, 30;
	shf.l.wrap.b32 	%r3747, %r3743, %r3742, 30;
	mov.b64 	%rd5496, {%r3747, %r3746};
	xor.b64  	%rd5497, %rd5495, %rd5496;
	shf.l.wrap.b32 	%r3748, %r3742, %r3743, 25;
	shf.l.wrap.b32 	%r3749, %r3743, %r3742, 25;
	mov.b64 	%rd5498, {%r3749, %r3748};
	xor.b64  	%rd5499, %rd5497, %rd5498;
	and.b64  	%rd5500, %rd5468, %rd5431;
	or.b64  	%rd5501, %rd5468, %rd5431;
	and.b64  	%rd5502, %rd5501, %rd5394;
	or.b64  	%rd5503, %rd5502, %rd5500;
	add.s64 	%rd5504, %rd5503, %rd5499;
	add.s64 	%rd5505, %rd5504, %rd5493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3750,%dummy}, %rd5444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3751}, %rd5444;
	}
	shf.r.wrap.b32 	%r3752, %r3751, %r3750, 19;
	shf.r.wrap.b32 	%r3753, %r3750, %r3751, 19;
	mov.b64 	%rd5506, {%r3753, %r3752};
	shf.l.wrap.b32 	%r3754, %r3750, %r3751, 3;
	shf.l.wrap.b32 	%r3755, %r3751, %r3750, 3;
	mov.b64 	%rd5507, {%r3755, %r3754};
	xor.b64  	%rd5508, %rd5506, %rd5507;
	shr.u64 	%rd5509, %rd5444, 6;
	xor.b64  	%rd5510, %rd5508, %rd5509;
	shf.r.wrap.b32 	%r3756, %r3413, %r3412, 1;
	shf.r.wrap.b32 	%r3757, %r3412, %r3413, 1;
	mov.b64 	%rd5511, {%r3757, %r3756};
	shf.r.wrap.b32 	%r3758, %r3413, %r3412, 8;
	shf.r.wrap.b32 	%r3759, %r3412, %r3413, 8;
	mov.b64 	%rd5512, {%r3759, %r3758};
	xor.b64  	%rd5513, %rd5511, %rd5512;
	shr.u64 	%rd5514, %rd4963, 7;
	xor.b64  	%rd5515, %rd5513, %rd5514;
	add.s64 	%rd5516, %rd5515, %rd4926;
	add.s64 	%rd5517, %rd5516, %rd5259;
	add.s64 	%rd5518, %rd5517, %rd5510;
	add.s64 	%rd5519, %rd5518, %rd5383;
	xor.b64  	%rd5520, %rd5457, %rd5420;
	and.b64  	%rd5521, %rd5494, %rd5520;
	xor.b64  	%rd5522, %rd5521, %rd5420;
	add.s64 	%rd5523, %rd5519, %rd5522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3760,%dummy}, %rd5494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3761}, %rd5494;
	}
	shf.r.wrap.b32 	%r3762, %r3761, %r3760, 14;
	shf.r.wrap.b32 	%r3763, %r3760, %r3761, 14;
	mov.b64 	%rd5524, {%r3763, %r3762};
	shf.r.wrap.b32 	%r3764, %r3761, %r3760, 18;
	shf.r.wrap.b32 	%r3765, %r3760, %r3761, 18;
	mov.b64 	%rd5525, {%r3765, %r3764};
	xor.b64  	%rd5526, %rd5524, %rd5525;
	shf.l.wrap.b32 	%r3766, %r3760, %r3761, 23;
	shf.l.wrap.b32 	%r3767, %r3761, %r3760, 23;
	mov.b64 	%rd5527, {%r3767, %r3766};
	xor.b64  	%rd5528, %rd5526, %rd5527;
	add.s64 	%rd5529, %rd5523, %rd5528;
	add.s64 	%rd5530, %rd5529, -3880063495543823972;
	add.s64 	%rd5531, %rd5530, %rd5394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3768,%dummy}, %rd5505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3769}, %rd5505;
	}
	shf.r.wrap.b32 	%r3770, %r3769, %r3768, 28;
	shf.r.wrap.b32 	%r3771, %r3768, %r3769, 28;
	mov.b64 	%rd5532, {%r3771, %r3770};
	shf.l.wrap.b32 	%r3772, %r3768, %r3769, 30;
	shf.l.wrap.b32 	%r3773, %r3769, %r3768, 30;
	mov.b64 	%rd5533, {%r3773, %r3772};
	xor.b64  	%rd5534, %rd5532, %rd5533;
	shf.l.wrap.b32 	%r3774, %r3768, %r3769, 25;
	shf.l.wrap.b32 	%r3775, %r3769, %r3768, 25;
	mov.b64 	%rd5535, {%r3775, %r3774};
	xor.b64  	%rd5536, %rd5534, %rd5535;
	and.b64  	%rd5537, %rd5505, %rd5468;
	or.b64  	%rd5538, %rd5505, %rd5468;
	and.b64  	%rd5539, %rd5538, %rd5431;
	or.b64  	%rd5540, %rd5539, %rd5537;
	add.s64 	%rd5541, %rd5540, %rd5536;
	add.s64 	%rd5542, %rd5541, %rd5530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3776,%dummy}, %rd5481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3777}, %rd5481;
	}
	shf.r.wrap.b32 	%r3778, %r3777, %r3776, 19;
	shf.r.wrap.b32 	%r3779, %r3776, %r3777, 19;
	mov.b64 	%rd5543, {%r3779, %r3778};
	shf.l.wrap.b32 	%r3780, %r3776, %r3777, 3;
	shf.l.wrap.b32 	%r3781, %r3777, %r3776, 3;
	mov.b64 	%rd5544, {%r3781, %r3780};
	xor.b64  	%rd5545, %rd5543, %rd5544;
	shr.u64 	%rd5546, %rd5481, 6;
	xor.b64  	%rd5547, %rd5545, %rd5546;
	shf.r.wrap.b32 	%r3782, %r3439, %r3438, 1;
	shf.r.wrap.b32 	%r3783, %r3438, %r3439, 1;
	mov.b64 	%rd5548, {%r3783, %r3782};
	shf.r.wrap.b32 	%r3784, %r3439, %r3438, 8;
	shf.r.wrap.b32 	%r3785, %r3438, %r3439, 8;
	mov.b64 	%rd5549, {%r3785, %r3784};
	xor.b64  	%rd5550, %rd5548, %rd5549;
	shr.u64 	%rd5551, %rd5000, 7;
	xor.b64  	%rd5552, %rd5550, %rd5551;
	add.s64 	%rd5553, %rd5552, %rd4963;
	add.s64 	%rd5554, %rd5553, %rd5296;
	add.s64 	%rd5555, %rd5554, %rd5547;
	add.s64 	%rd5556, %rd5555, %rd5420;
	xor.b64  	%rd5557, %rd5494, %rd5457;
	and.b64  	%rd5558, %rd5531, %rd5557;
	xor.b64  	%rd5559, %rd5558, %rd5457;
	add.s64 	%rd5560, %rd5556, %rd5559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3786,%dummy}, %rd5531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3787}, %rd5531;
	}
	shf.r.wrap.b32 	%r3788, %r3787, %r3786, 14;
	shf.r.wrap.b32 	%r3789, %r3786, %r3787, 14;
	mov.b64 	%rd5561, {%r3789, %r3788};
	shf.r.wrap.b32 	%r3790, %r3787, %r3786, 18;
	shf.r.wrap.b32 	%r3791, %r3786, %r3787, 18;
	mov.b64 	%rd5562, {%r3791, %r3790};
	xor.b64  	%rd5563, %rd5561, %rd5562;
	shf.l.wrap.b32 	%r3792, %r3786, %r3787, 23;
	shf.l.wrap.b32 	%r3793, %r3787, %r3786, 23;
	mov.b64 	%rd5564, {%r3793, %r3792};
	xor.b64  	%rd5565, %rd5563, %rd5564;
	add.s64 	%rd5566, %rd5560, %rd5565;
	add.s64 	%rd5567, %rd5566, -3348786107499101689;
	add.s64 	%rd5568, %rd5567, %rd5431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3794,%dummy}, %rd5542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3795}, %rd5542;
	}
	shf.r.wrap.b32 	%r3796, %r3795, %r3794, 28;
	shf.r.wrap.b32 	%r3797, %r3794, %r3795, 28;
	mov.b64 	%rd5569, {%r3797, %r3796};
	shf.l.wrap.b32 	%r3798, %r3794, %r3795, 30;
	shf.l.wrap.b32 	%r3799, %r3795, %r3794, 30;
	mov.b64 	%rd5570, {%r3799, %r3798};
	xor.b64  	%rd5571, %rd5569, %rd5570;
	shf.l.wrap.b32 	%r3800, %r3794, %r3795, 25;
	shf.l.wrap.b32 	%r3801, %r3795, %r3794, 25;
	mov.b64 	%rd5572, {%r3801, %r3800};
	xor.b64  	%rd5573, %rd5571, %rd5572;
	and.b64  	%rd5574, %rd5542, %rd5505;
	or.b64  	%rd5575, %rd5542, %rd5505;
	and.b64  	%rd5576, %rd5575, %rd5468;
	or.b64  	%rd5577, %rd5576, %rd5574;
	add.s64 	%rd5578, %rd5577, %rd5573;
	add.s64 	%rd5579, %rd5578, %rd5567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3802,%dummy}, %rd5518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3803}, %rd5518;
	}
	shf.r.wrap.b32 	%r3804, %r3803, %r3802, 19;
	shf.r.wrap.b32 	%r3805, %r3802, %r3803, 19;
	mov.b64 	%rd5580, {%r3805, %r3804};
	shf.l.wrap.b32 	%r3806, %r3802, %r3803, 3;
	shf.l.wrap.b32 	%r3807, %r3803, %r3802, 3;
	mov.b64 	%rd5581, {%r3807, %r3806};
	xor.b64  	%rd5582, %rd5580, %rd5581;
	shr.u64 	%rd5583, %rd5518, 6;
	xor.b64  	%rd5584, %rd5582, %rd5583;
	shf.r.wrap.b32 	%r3808, %r3465, %r3464, 1;
	shf.r.wrap.b32 	%r3809, %r3464, %r3465, 1;
	mov.b64 	%rd5585, {%r3809, %r3808};
	shf.r.wrap.b32 	%r3810, %r3465, %r3464, 8;
	shf.r.wrap.b32 	%r3811, %r3464, %r3465, 8;
	mov.b64 	%rd5586, {%r3811, %r3810};
	xor.b64  	%rd5587, %rd5585, %rd5586;
	shr.u64 	%rd5588, %rd5037, 7;
	xor.b64  	%rd5589, %rd5587, %rd5588;
	add.s64 	%rd5590, %rd5589, %rd5000;
	add.s64 	%rd5591, %rd5590, %rd5333;
	add.s64 	%rd5592, %rd5591, %rd5584;
	add.s64 	%rd5593, %rd5592, %rd5457;
	xor.b64  	%rd5594, %rd5531, %rd5494;
	and.b64  	%rd5595, %rd5568, %rd5594;
	xor.b64  	%rd5596, %rd5595, %rd5494;
	add.s64 	%rd5597, %rd5593, %rd5596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3812,%dummy}, %rd5568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3813}, %rd5568;
	}
	shf.r.wrap.b32 	%r3814, %r3813, %r3812, 14;
	shf.r.wrap.b32 	%r3815, %r3812, %r3813, 14;
	mov.b64 	%rd5598, {%r3815, %r3814};
	shf.r.wrap.b32 	%r3816, %r3813, %r3812, 18;
	shf.r.wrap.b32 	%r3817, %r3812, %r3813, 18;
	mov.b64 	%rd5599, {%r3817, %r3816};
	xor.b64  	%rd5600, %rd5598, %rd5599;
	shf.l.wrap.b32 	%r3818, %r3812, %r3813, 23;
	shf.l.wrap.b32 	%r3819, %r3813, %r3812, 23;
	mov.b64 	%rd5601, {%r3819, %r3818};
	xor.b64  	%rd5602, %rd5600, %rd5601;
	add.s64 	%rd5603, %rd5597, %rd5602;
	add.s64 	%rd5604, %rd5603, -1523767162380948706;
	add.s64 	%rd5605, %rd5604, %rd5468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3820,%dummy}, %rd5579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3821}, %rd5579;
	}
	shf.r.wrap.b32 	%r3822, %r3821, %r3820, 28;
	shf.r.wrap.b32 	%r3823, %r3820, %r3821, 28;
	mov.b64 	%rd5606, {%r3823, %r3822};
	shf.l.wrap.b32 	%r3824, %r3820, %r3821, 30;
	shf.l.wrap.b32 	%r3825, %r3821, %r3820, 30;
	mov.b64 	%rd5607, {%r3825, %r3824};
	xor.b64  	%rd5608, %rd5606, %rd5607;
	shf.l.wrap.b32 	%r3826, %r3820, %r3821, 25;
	shf.l.wrap.b32 	%r3827, %r3821, %r3820, 25;
	mov.b64 	%rd5609, {%r3827, %r3826};
	xor.b64  	%rd5610, %rd5608, %rd5609;
	and.b64  	%rd5611, %rd5579, %rd5542;
	or.b64  	%rd5612, %rd5579, %rd5542;
	and.b64  	%rd5613, %rd5612, %rd5505;
	or.b64  	%rd5614, %rd5613, %rd5611;
	add.s64 	%rd5615, %rd5614, %rd5610;
	add.s64 	%rd5616, %rd5615, %rd5604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3828,%dummy}, %rd5555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3829}, %rd5555;
	}
	shf.r.wrap.b32 	%r3830, %r3829, %r3828, 19;
	shf.r.wrap.b32 	%r3831, %r3828, %r3829, 19;
	mov.b64 	%rd5617, {%r3831, %r3830};
	shf.l.wrap.b32 	%r3832, %r3828, %r3829, 3;
	shf.l.wrap.b32 	%r3833, %r3829, %r3828, 3;
	mov.b64 	%rd5618, {%r3833, %r3832};
	xor.b64  	%rd5619, %rd5617, %rd5618;
	shr.u64 	%rd5620, %rd5555, 6;
	xor.b64  	%rd5621, %rd5619, %rd5620;
	shf.r.wrap.b32 	%r3834, %r3491, %r3490, 1;
	shf.r.wrap.b32 	%r3835, %r3490, %r3491, 1;
	mov.b64 	%rd5622, {%r3835, %r3834};
	shf.r.wrap.b32 	%r3836, %r3491, %r3490, 8;
	shf.r.wrap.b32 	%r3837, %r3490, %r3491, 8;
	mov.b64 	%rd5623, {%r3837, %r3836};
	xor.b64  	%rd5624, %rd5622, %rd5623;
	shr.u64 	%rd5625, %rd5074, 7;
	xor.b64  	%rd5626, %rd5624, %rd5625;
	add.s64 	%rd5627, %rd5626, %rd5037;
	add.s64 	%rd5628, %rd5627, %rd5370;
	add.s64 	%rd5629, %rd5628, %rd5621;
	add.s64 	%rd5630, %rd5629, %rd5494;
	xor.b64  	%rd5631, %rd5568, %rd5531;
	and.b64  	%rd5632, %rd5605, %rd5631;
	xor.b64  	%rd5633, %rd5632, %rd5531;
	add.s64 	%rd5634, %rd5630, %rd5633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3838,%dummy}, %rd5605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3839}, %rd5605;
	}
	shf.r.wrap.b32 	%r3840, %r3839, %r3838, 14;
	shf.r.wrap.b32 	%r3841, %r3838, %r3839, 14;
	mov.b64 	%rd5635, {%r3841, %r3840};
	shf.r.wrap.b32 	%r3842, %r3839, %r3838, 18;
	shf.r.wrap.b32 	%r3843, %r3838, %r3839, 18;
	mov.b64 	%rd5636, {%r3843, %r3842};
	xor.b64  	%rd5637, %rd5635, %rd5636;
	shf.l.wrap.b32 	%r3844, %r3838, %r3839, 23;
	shf.l.wrap.b32 	%r3845, %r3839, %r3838, 23;
	mov.b64 	%rd5638, {%r3845, %r3844};
	xor.b64  	%rd5639, %rd5637, %rd5638;
	add.s64 	%rd5640, %rd5634, %rd5639;
	add.s64 	%rd5641, %rd5640, -757361751448694408;
	add.s64 	%rd5642, %rd5641, %rd5505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3846,%dummy}, %rd5616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3847}, %rd5616;
	}
	shf.r.wrap.b32 	%r3848, %r3847, %r3846, 28;
	shf.r.wrap.b32 	%r3849, %r3846, %r3847, 28;
	mov.b64 	%rd5643, {%r3849, %r3848};
	shf.l.wrap.b32 	%r3850, %r3846, %r3847, 30;
	shf.l.wrap.b32 	%r3851, %r3847, %r3846, 30;
	mov.b64 	%rd5644, {%r3851, %r3850};
	xor.b64  	%rd5645, %rd5643, %rd5644;
	shf.l.wrap.b32 	%r3852, %r3846, %r3847, 25;
	shf.l.wrap.b32 	%r3853, %r3847, %r3846, 25;
	mov.b64 	%rd5646, {%r3853, %r3852};
	xor.b64  	%rd5647, %rd5645, %rd5646;
	and.b64  	%rd5648, %rd5616, %rd5579;
	or.b64  	%rd5649, %rd5616, %rd5579;
	and.b64  	%rd5650, %rd5649, %rd5542;
	or.b64  	%rd5651, %rd5650, %rd5648;
	add.s64 	%rd5652, %rd5651, %rd5647;
	add.s64 	%rd5653, %rd5652, %rd5641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3854,%dummy}, %rd5592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3855}, %rd5592;
	}
	shf.r.wrap.b32 	%r3856, %r3855, %r3854, 19;
	shf.r.wrap.b32 	%r3857, %r3854, %r3855, 19;
	mov.b64 	%rd5654, {%r3857, %r3856};
	shf.l.wrap.b32 	%r3858, %r3854, %r3855, 3;
	shf.l.wrap.b32 	%r3859, %r3855, %r3854, 3;
	mov.b64 	%rd5655, {%r3859, %r3858};
	xor.b64  	%rd5656, %rd5654, %rd5655;
	shr.u64 	%rd5657, %rd5592, 6;
	xor.b64  	%rd5658, %rd5656, %rd5657;
	shf.r.wrap.b32 	%r3860, %r3517, %r3516, 1;
	shf.r.wrap.b32 	%r3861, %r3516, %r3517, 1;
	mov.b64 	%rd5659, {%r3861, %r3860};
	shf.r.wrap.b32 	%r3862, %r3517, %r3516, 8;
	shf.r.wrap.b32 	%r3863, %r3516, %r3517, 8;
	mov.b64 	%rd5660, {%r3863, %r3862};
	xor.b64  	%rd5661, %rd5659, %rd5660;
	shr.u64 	%rd5662, %rd5111, 7;
	xor.b64  	%rd5663, %rd5661, %rd5662;
	add.s64 	%rd5664, %rd5663, %rd5074;
	add.s64 	%rd5665, %rd5664, %rd5407;
	add.s64 	%rd5666, %rd5665, %rd5658;
	add.s64 	%rd5667, %rd5666, %rd5531;
	xor.b64  	%rd5668, %rd5605, %rd5568;
	and.b64  	%rd5669, %rd5642, %rd5668;
	xor.b64  	%rd5670, %rd5669, %rd5568;
	add.s64 	%rd5671, %rd5667, %rd5670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3864,%dummy}, %rd5642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3865}, %rd5642;
	}
	shf.r.wrap.b32 	%r3866, %r3865, %r3864, 14;
	shf.r.wrap.b32 	%r3867, %r3864, %r3865, 14;
	mov.b64 	%rd5672, {%r3867, %r3866};
	shf.r.wrap.b32 	%r3868, %r3865, %r3864, 18;
	shf.r.wrap.b32 	%r3869, %r3864, %r3865, 18;
	mov.b64 	%rd5673, {%r3869, %r3868};
	xor.b64  	%rd5674, %rd5672, %rd5673;
	shf.l.wrap.b32 	%r3870, %r3864, %r3865, 23;
	shf.l.wrap.b32 	%r3871, %r3865, %r3864, 23;
	mov.b64 	%rd5675, {%r3871, %r3870};
	xor.b64  	%rd5676, %rd5674, %rd5675;
	add.s64 	%rd5677, %rd5671, %rd5676;
	add.s64 	%rd5678, %rd5677, 500013540394364858;
	add.s64 	%rd5679, %rd5678, %rd5542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3872,%dummy}, %rd5653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3873}, %rd5653;
	}
	shf.r.wrap.b32 	%r3874, %r3873, %r3872, 28;
	shf.r.wrap.b32 	%r3875, %r3872, %r3873, 28;
	mov.b64 	%rd5680, {%r3875, %r3874};
	shf.l.wrap.b32 	%r3876, %r3872, %r3873, 30;
	shf.l.wrap.b32 	%r3877, %r3873, %r3872, 30;
	mov.b64 	%rd5681, {%r3877, %r3876};
	xor.b64  	%rd5682, %rd5680, %rd5681;
	shf.l.wrap.b32 	%r3878, %r3872, %r3873, 25;
	shf.l.wrap.b32 	%r3879, %r3873, %r3872, 25;
	mov.b64 	%rd5683, {%r3879, %r3878};
	xor.b64  	%rd5684, %rd5682, %rd5683;
	and.b64  	%rd5685, %rd5653, %rd5616;
	or.b64  	%rd5686, %rd5653, %rd5616;
	and.b64  	%rd5687, %rd5686, %rd5579;
	or.b64  	%rd5688, %rd5687, %rd5685;
	add.s64 	%rd5689, %rd5688, %rd5684;
	add.s64 	%rd5690, %rd5689, %rd5678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3880,%dummy}, %rd5629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3881}, %rd5629;
	}
	shf.r.wrap.b32 	%r3882, %r3881, %r3880, 19;
	shf.r.wrap.b32 	%r3883, %r3880, %r3881, 19;
	mov.b64 	%rd5691, {%r3883, %r3882};
	shf.l.wrap.b32 	%r3884, %r3880, %r3881, 3;
	shf.l.wrap.b32 	%r3885, %r3881, %r3880, 3;
	mov.b64 	%rd5692, {%r3885, %r3884};
	xor.b64  	%rd5693, %rd5691, %rd5692;
	shr.u64 	%rd5694, %rd5629, 6;
	xor.b64  	%rd5695, %rd5693, %rd5694;
	shf.r.wrap.b32 	%r3886, %r3543, %r3542, 1;
	shf.r.wrap.b32 	%r3887, %r3542, %r3543, 1;
	mov.b64 	%rd5696, {%r3887, %r3886};
	shf.r.wrap.b32 	%r3888, %r3543, %r3542, 8;
	shf.r.wrap.b32 	%r3889, %r3542, %r3543, 8;
	mov.b64 	%rd5697, {%r3889, %r3888};
	xor.b64  	%rd5698, %rd5696, %rd5697;
	shr.u64 	%rd5699, %rd5148, 7;
	xor.b64  	%rd5700, %rd5698, %rd5699;
	add.s64 	%rd5701, %rd5700, %rd5111;
	add.s64 	%rd5702, %rd5701, %rd5444;
	add.s64 	%rd5703, %rd5702, %rd5695;
	add.s64 	%rd5704, %rd5703, %rd5568;
	xor.b64  	%rd5705, %rd5642, %rd5605;
	and.b64  	%rd5706, %rd5679, %rd5705;
	xor.b64  	%rd5707, %rd5706, %rd5605;
	add.s64 	%rd5708, %rd5704, %rd5707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3890,%dummy}, %rd5679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3891}, %rd5679;
	}
	shf.r.wrap.b32 	%r3892, %r3891, %r3890, 14;
	shf.r.wrap.b32 	%r3893, %r3890, %r3891, 14;
	mov.b64 	%rd5709, {%r3893, %r3892};
	shf.r.wrap.b32 	%r3894, %r3891, %r3890, 18;
	shf.r.wrap.b32 	%r3895, %r3890, %r3891, 18;
	mov.b64 	%rd5710, {%r3895, %r3894};
	xor.b64  	%rd5711, %rd5709, %rd5710;
	shf.l.wrap.b32 	%r3896, %r3890, %r3891, 23;
	shf.l.wrap.b32 	%r3897, %r3891, %r3890, 23;
	mov.b64 	%rd5712, {%r3897, %r3896};
	xor.b64  	%rd5713, %rd5711, %rd5712;
	add.s64 	%rd5714, %rd5708, %rd5713;
	add.s64 	%rd5715, %rd5714, 748580250866718886;
	add.s64 	%rd5716, %rd5715, %rd5579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3898,%dummy}, %rd5690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3899}, %rd5690;
	}
	shf.r.wrap.b32 	%r3900, %r3899, %r3898, 28;
	shf.r.wrap.b32 	%r3901, %r3898, %r3899, 28;
	mov.b64 	%rd5717, {%r3901, %r3900};
	shf.l.wrap.b32 	%r3902, %r3898, %r3899, 30;
	shf.l.wrap.b32 	%r3903, %r3899, %r3898, 30;
	mov.b64 	%rd5718, {%r3903, %r3902};
	xor.b64  	%rd5719, %rd5717, %rd5718;
	shf.l.wrap.b32 	%r3904, %r3898, %r3899, 25;
	shf.l.wrap.b32 	%r3905, %r3899, %r3898, 25;
	mov.b64 	%rd5720, {%r3905, %r3904};
	xor.b64  	%rd5721, %rd5719, %rd5720;
	and.b64  	%rd5722, %rd5690, %rd5653;
	or.b64  	%rd5723, %rd5690, %rd5653;
	and.b64  	%rd5724, %rd5723, %rd5616;
	or.b64  	%rd5725, %rd5724, %rd5722;
	add.s64 	%rd5726, %rd5725, %rd5721;
	add.s64 	%rd5727, %rd5726, %rd5715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3906,%dummy}, %rd5666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3907}, %rd5666;
	}
	shf.r.wrap.b32 	%r3908, %r3907, %r3906, 19;
	shf.r.wrap.b32 	%r3909, %r3906, %r3907, 19;
	mov.b64 	%rd5728, {%r3909, %r3908};
	shf.l.wrap.b32 	%r3910, %r3906, %r3907, 3;
	shf.l.wrap.b32 	%r3911, %r3907, %r3906, 3;
	mov.b64 	%rd5729, {%r3911, %r3910};
	xor.b64  	%rd5730, %rd5728, %rd5729;
	shr.u64 	%rd5731, %rd5666, 6;
	xor.b64  	%rd5732, %rd5730, %rd5731;
	shf.r.wrap.b32 	%r3912, %r3569, %r3568, 1;
	shf.r.wrap.b32 	%r3913, %r3568, %r3569, 1;
	mov.b64 	%rd5733, {%r3913, %r3912};
	shf.r.wrap.b32 	%r3914, %r3569, %r3568, 8;
	shf.r.wrap.b32 	%r3915, %r3568, %r3569, 8;
	mov.b64 	%rd5734, {%r3915, %r3914};
	xor.b64  	%rd5735, %rd5733, %rd5734;
	shr.u64 	%rd5736, %rd5185, 7;
	xor.b64  	%rd5737, %rd5735, %rd5736;
	add.s64 	%rd5738, %rd5737, %rd5148;
	add.s64 	%rd5739, %rd5738, %rd5481;
	add.s64 	%rd5740, %rd5739, %rd5732;
	add.s64 	%rd5741, %rd5740, %rd5605;
	xor.b64  	%rd5742, %rd5679, %rd5642;
	and.b64  	%rd5743, %rd5716, %rd5742;
	xor.b64  	%rd5744, %rd5743, %rd5642;
	add.s64 	%rd5745, %rd5741, %rd5744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3916,%dummy}, %rd5716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3917}, %rd5716;
	}
	shf.r.wrap.b32 	%r3918, %r3917, %r3916, 14;
	shf.r.wrap.b32 	%r3919, %r3916, %r3917, 14;
	mov.b64 	%rd5746, {%r3919, %r3918};
	shf.r.wrap.b32 	%r3920, %r3917, %r3916, 18;
	shf.r.wrap.b32 	%r3921, %r3916, %r3917, 18;
	mov.b64 	%rd5747, {%r3921, %r3920};
	xor.b64  	%rd5748, %rd5746, %rd5747;
	shf.l.wrap.b32 	%r3922, %r3916, %r3917, 23;
	shf.l.wrap.b32 	%r3923, %r3917, %r3916, 23;
	mov.b64 	%rd5749, {%r3923, %r3922};
	xor.b64  	%rd5750, %rd5748, %rd5749;
	add.s64 	%rd5751, %rd5745, %rd5750;
	add.s64 	%rd5752, %rd5751, 1242879168328830382;
	add.s64 	%rd5753, %rd5752, %rd5616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3924,%dummy}, %rd5727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3925}, %rd5727;
	}
	shf.r.wrap.b32 	%r3926, %r3925, %r3924, 28;
	shf.r.wrap.b32 	%r3927, %r3924, %r3925, 28;
	mov.b64 	%rd5754, {%r3927, %r3926};
	shf.l.wrap.b32 	%r3928, %r3924, %r3925, 30;
	shf.l.wrap.b32 	%r3929, %r3925, %r3924, 30;
	mov.b64 	%rd5755, {%r3929, %r3928};
	xor.b64  	%rd5756, %rd5754, %rd5755;
	shf.l.wrap.b32 	%r3930, %r3924, %r3925, 25;
	shf.l.wrap.b32 	%r3931, %r3925, %r3924, 25;
	mov.b64 	%rd5757, {%r3931, %r3930};
	xor.b64  	%rd5758, %rd5756, %rd5757;
	and.b64  	%rd5759, %rd5727, %rd5690;
	or.b64  	%rd5760, %rd5727, %rd5690;
	and.b64  	%rd5761, %rd5760, %rd5653;
	or.b64  	%rd5762, %rd5761, %rd5759;
	add.s64 	%rd5763, %rd5762, %rd5758;
	add.s64 	%rd5764, %rd5763, %rd5752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3932,%dummy}, %rd5703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3933}, %rd5703;
	}
	shf.r.wrap.b32 	%r3934, %r3933, %r3932, 19;
	shf.r.wrap.b32 	%r3935, %r3932, %r3933, 19;
	mov.b64 	%rd5765, {%r3935, %r3934};
	shf.l.wrap.b32 	%r3936, %r3932, %r3933, 3;
	shf.l.wrap.b32 	%r3937, %r3933, %r3932, 3;
	mov.b64 	%rd5766, {%r3937, %r3936};
	xor.b64  	%rd5767, %rd5765, %rd5766;
	shr.u64 	%rd5768, %rd5703, 6;
	xor.b64  	%rd5769, %rd5767, %rd5768;
	shf.r.wrap.b32 	%r3938, %r3595, %r3594, 1;
	shf.r.wrap.b32 	%r3939, %r3594, %r3595, 1;
	mov.b64 	%rd5770, {%r3939, %r3938};
	shf.r.wrap.b32 	%r3940, %r3595, %r3594, 8;
	shf.r.wrap.b32 	%r3941, %r3594, %r3595, 8;
	mov.b64 	%rd5771, {%r3941, %r3940};
	xor.b64  	%rd5772, %rd5770, %rd5771;
	shr.u64 	%rd5773, %rd5222, 7;
	xor.b64  	%rd5774, %rd5772, %rd5773;
	add.s64 	%rd5775, %rd5774, %rd5185;
	add.s64 	%rd5776, %rd5775, %rd5518;
	add.s64 	%rd5777, %rd5776, %rd5769;
	add.s64 	%rd5778, %rd5777, %rd5642;
	xor.b64  	%rd5779, %rd5716, %rd5679;
	and.b64  	%rd5780, %rd5753, %rd5779;
	xor.b64  	%rd5781, %rd5780, %rd5679;
	add.s64 	%rd5782, %rd5778, %rd5781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3942,%dummy}, %rd5753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3943}, %rd5753;
	}
	shf.r.wrap.b32 	%r3944, %r3943, %r3942, 14;
	shf.r.wrap.b32 	%r3945, %r3942, %r3943, 14;
	mov.b64 	%rd5783, {%r3945, %r3944};
	shf.r.wrap.b32 	%r3946, %r3943, %r3942, 18;
	shf.r.wrap.b32 	%r3947, %r3942, %r3943, 18;
	mov.b64 	%rd5784, {%r3947, %r3946};
	xor.b64  	%rd5785, %rd5783, %rd5784;
	shf.l.wrap.b32 	%r3948, %r3942, %r3943, 23;
	shf.l.wrap.b32 	%r3949, %r3943, %r3942, 23;
	mov.b64 	%rd5786, {%r3949, %r3948};
	xor.b64  	%rd5787, %rd5785, %rd5786;
	add.s64 	%rd5788, %rd5782, %rd5787;
	add.s64 	%rd5789, %rd5788, 1977374033974150939;
	add.s64 	%rd5790, %rd5789, %rd5653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3950,%dummy}, %rd5764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3951}, %rd5764;
	}
	shf.r.wrap.b32 	%r3952, %r3951, %r3950, 28;
	shf.r.wrap.b32 	%r3953, %r3950, %r3951, 28;
	mov.b64 	%rd5791, {%r3953, %r3952};
	shf.l.wrap.b32 	%r3954, %r3950, %r3951, 30;
	shf.l.wrap.b32 	%r3955, %r3951, %r3950, 30;
	mov.b64 	%rd5792, {%r3955, %r3954};
	xor.b64  	%rd5793, %rd5791, %rd5792;
	shf.l.wrap.b32 	%r3956, %r3950, %r3951, 25;
	shf.l.wrap.b32 	%r3957, %r3951, %r3950, 25;
	mov.b64 	%rd5794, {%r3957, %r3956};
	xor.b64  	%rd5795, %rd5793, %rd5794;
	and.b64  	%rd5796, %rd5764, %rd5727;
	or.b64  	%rd5797, %rd5764, %rd5727;
	and.b64  	%rd5798, %rd5797, %rd5690;
	or.b64  	%rd5799, %rd5798, %rd5796;
	add.s64 	%rd5800, %rd5799, %rd5795;
	add.s64 	%rd5801, %rd5800, %rd5789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3958,%dummy}, %rd5740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3959}, %rd5740;
	}
	shf.r.wrap.b32 	%r3960, %r3959, %r3958, 19;
	shf.r.wrap.b32 	%r3961, %r3958, %r3959, 19;
	mov.b64 	%rd5802, {%r3961, %r3960};
	shf.l.wrap.b32 	%r3962, %r3958, %r3959, 3;
	shf.l.wrap.b32 	%r3963, %r3959, %r3958, 3;
	mov.b64 	%rd5803, {%r3963, %r3962};
	xor.b64  	%rd5804, %rd5802, %rd5803;
	shr.u64 	%rd5805, %rd5740, 6;
	xor.b64  	%rd5806, %rd5804, %rd5805;
	shf.r.wrap.b32 	%r3964, %r3621, %r3620, 1;
	shf.r.wrap.b32 	%r3965, %r3620, %r3621, 1;
	mov.b64 	%rd5807, {%r3965, %r3964};
	shf.r.wrap.b32 	%r3966, %r3621, %r3620, 8;
	shf.r.wrap.b32 	%r3967, %r3620, %r3621, 8;
	mov.b64 	%rd5808, {%r3967, %r3966};
	xor.b64  	%rd5809, %rd5807, %rd5808;
	shr.u64 	%rd5810, %rd5259, 7;
	xor.b64  	%rd5811, %rd5809, %rd5810;
	add.s64 	%rd5812, %rd5811, %rd5222;
	add.s64 	%rd5813, %rd5812, %rd5555;
	add.s64 	%rd5814, %rd5813, %rd5806;
	add.s64 	%rd5815, %rd5814, %rd5679;
	xor.b64  	%rd5816, %rd5753, %rd5716;
	and.b64  	%rd5817, %rd5790, %rd5816;
	xor.b64  	%rd5818, %rd5817, %rd5716;
	add.s64 	%rd5819, %rd5815, %rd5818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3968,%dummy}, %rd5790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3969}, %rd5790;
	}
	shf.r.wrap.b32 	%r3970, %r3969, %r3968, 14;
	shf.r.wrap.b32 	%r3971, %r3968, %r3969, 14;
	mov.b64 	%rd5820, {%r3971, %r3970};
	shf.r.wrap.b32 	%r3972, %r3969, %r3968, 18;
	shf.r.wrap.b32 	%r3973, %r3968, %r3969, 18;
	mov.b64 	%rd5821, {%r3973, %r3972};
	xor.b64  	%rd5822, %rd5820, %rd5821;
	shf.l.wrap.b32 	%r3974, %r3968, %r3969, 23;
	shf.l.wrap.b32 	%r3975, %r3969, %r3968, 23;
	mov.b64 	%rd5823, {%r3975, %r3974};
	xor.b64  	%rd5824, %rd5822, %rd5823;
	add.s64 	%rd5825, %rd5819, %rd5824;
	add.s64 	%rd5826, %rd5825, 2944078676154940804;
	add.s64 	%rd5827, %rd5826, %rd5690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3976,%dummy}, %rd5801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3977}, %rd5801;
	}
	shf.r.wrap.b32 	%r3978, %r3977, %r3976, 28;
	shf.r.wrap.b32 	%r3979, %r3976, %r3977, 28;
	mov.b64 	%rd5828, {%r3979, %r3978};
	shf.l.wrap.b32 	%r3980, %r3976, %r3977, 30;
	shf.l.wrap.b32 	%r3981, %r3977, %r3976, 30;
	mov.b64 	%rd5829, {%r3981, %r3980};
	xor.b64  	%rd5830, %rd5828, %rd5829;
	shf.l.wrap.b32 	%r3982, %r3976, %r3977, 25;
	shf.l.wrap.b32 	%r3983, %r3977, %r3976, 25;
	mov.b64 	%rd5831, {%r3983, %r3982};
	xor.b64  	%rd5832, %rd5830, %rd5831;
	and.b64  	%rd5833, %rd5801, %rd5764;
	or.b64  	%rd5834, %rd5801, %rd5764;
	and.b64  	%rd5835, %rd5834, %rd5727;
	or.b64  	%rd5836, %rd5835, %rd5833;
	add.s64 	%rd5837, %rd5836, %rd5832;
	add.s64 	%rd5838, %rd5837, %rd5826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3984,%dummy}, %rd5777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3985}, %rd5777;
	}
	shf.r.wrap.b32 	%r3986, %r3985, %r3984, 19;
	shf.r.wrap.b32 	%r3987, %r3984, %r3985, 19;
	mov.b64 	%rd5839, {%r3987, %r3986};
	shf.l.wrap.b32 	%r3988, %r3984, %r3985, 3;
	shf.l.wrap.b32 	%r3989, %r3985, %r3984, 3;
	mov.b64 	%rd5840, {%r3989, %r3988};
	xor.b64  	%rd5841, %rd5839, %rd5840;
	shr.u64 	%rd5842, %rd5777, 6;
	xor.b64  	%rd5843, %rd5841, %rd5842;
	shf.r.wrap.b32 	%r3990, %r3647, %r3646, 1;
	shf.r.wrap.b32 	%r3991, %r3646, %r3647, 1;
	mov.b64 	%rd5844, {%r3991, %r3990};
	shf.r.wrap.b32 	%r3992, %r3647, %r3646, 8;
	shf.r.wrap.b32 	%r3993, %r3646, %r3647, 8;
	mov.b64 	%rd5845, {%r3993, %r3992};
	xor.b64  	%rd5846, %rd5844, %rd5845;
	shr.u64 	%rd5847, %rd5296, 7;
	xor.b64  	%rd5848, %rd5846, %rd5847;
	add.s64 	%rd5849, %rd5848, %rd5259;
	add.s64 	%rd5850, %rd5849, %rd5592;
	add.s64 	%rd5851, %rd5850, %rd5843;
	add.s64 	%rd5852, %rd5851, %rd5716;
	xor.b64  	%rd5853, %rd5790, %rd5753;
	and.b64  	%rd5854, %rd5827, %rd5853;
	xor.b64  	%rd5855, %rd5854, %rd5753;
	add.s64 	%rd5856, %rd5852, %rd5855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3994,%dummy}, %rd5827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3995}, %rd5827;
	}
	shf.r.wrap.b32 	%r3996, %r3995, %r3994, 14;
	shf.r.wrap.b32 	%r3997, %r3994, %r3995, 14;
	mov.b64 	%rd5857, {%r3997, %r3996};
	shf.r.wrap.b32 	%r3998, %r3995, %r3994, 18;
	shf.r.wrap.b32 	%r3999, %r3994, %r3995, 18;
	mov.b64 	%rd5858, {%r3999, %r3998};
	xor.b64  	%rd5859, %rd5857, %rd5858;
	shf.l.wrap.b32 	%r4000, %r3994, %r3995, 23;
	shf.l.wrap.b32 	%r4001, %r3995, %r3994, 23;
	mov.b64 	%rd5860, {%r4001, %r4000};
	xor.b64  	%rd5861, %rd5859, %rd5860;
	add.s64 	%rd5862, %rd5856, %rd5861;
	add.s64 	%rd5863, %rd5862, 3659926193048069267;
	add.s64 	%rd5864, %rd5863, %rd5727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4002,%dummy}, %rd5838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4003}, %rd5838;
	}
	shf.r.wrap.b32 	%r4004, %r4003, %r4002, 28;
	shf.r.wrap.b32 	%r4005, %r4002, %r4003, 28;
	mov.b64 	%rd5865, {%r4005, %r4004};
	shf.l.wrap.b32 	%r4006, %r4002, %r4003, 30;
	shf.l.wrap.b32 	%r4007, %r4003, %r4002, 30;
	mov.b64 	%rd5866, {%r4007, %r4006};
	xor.b64  	%rd5867, %rd5865, %rd5866;
	shf.l.wrap.b32 	%r4008, %r4002, %r4003, 25;
	shf.l.wrap.b32 	%r4009, %r4003, %r4002, 25;
	mov.b64 	%rd5868, {%r4009, %r4008};
	xor.b64  	%rd5869, %rd5867, %rd5868;
	and.b64  	%rd5870, %rd5838, %rd5801;
	or.b64  	%rd5871, %rd5838, %rd5801;
	and.b64  	%rd5872, %rd5871, %rd5764;
	or.b64  	%rd5873, %rd5872, %rd5870;
	add.s64 	%rd5874, %rd5873, %rd5869;
	add.s64 	%rd5875, %rd5874, %rd5863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4010,%dummy}, %rd5814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4011}, %rd5814;
	}
	shf.r.wrap.b32 	%r4012, %r4011, %r4010, 19;
	shf.r.wrap.b32 	%r4013, %r4010, %r4011, 19;
	mov.b64 	%rd5876, {%r4013, %r4012};
	shf.l.wrap.b32 	%r4014, %r4010, %r4011, 3;
	shf.l.wrap.b32 	%r4015, %r4011, %r4010, 3;
	mov.b64 	%rd5877, {%r4015, %r4014};
	xor.b64  	%rd5878, %rd5876, %rd5877;
	shr.u64 	%rd5879, %rd5814, 6;
	xor.b64  	%rd5880, %rd5878, %rd5879;
	shf.r.wrap.b32 	%r4016, %r3673, %r3672, 1;
	shf.r.wrap.b32 	%r4017, %r3672, %r3673, 1;
	mov.b64 	%rd5881, {%r4017, %r4016};
	shf.r.wrap.b32 	%r4018, %r3673, %r3672, 8;
	shf.r.wrap.b32 	%r4019, %r3672, %r3673, 8;
	mov.b64 	%rd5882, {%r4019, %r4018};
	xor.b64  	%rd5883, %rd5881, %rd5882;
	shr.u64 	%rd5884, %rd5333, 7;
	xor.b64  	%rd5885, %rd5883, %rd5884;
	add.s64 	%rd5886, %rd5885, %rd5296;
	add.s64 	%rd5887, %rd5886, %rd5629;
	add.s64 	%rd5888, %rd5887, %rd5880;
	add.s64 	%rd5889, %rd5888, %rd5753;
	xor.b64  	%rd5890, %rd5827, %rd5790;
	and.b64  	%rd5891, %rd5864, %rd5890;
	xor.b64  	%rd5892, %rd5891, %rd5790;
	add.s64 	%rd5893, %rd5889, %rd5892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4020,%dummy}, %rd5864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4021}, %rd5864;
	}
	shf.r.wrap.b32 	%r4022, %r4021, %r4020, 14;
	shf.r.wrap.b32 	%r4023, %r4020, %r4021, 14;
	mov.b64 	%rd5894, {%r4023, %r4022};
	shf.r.wrap.b32 	%r4024, %r4021, %r4020, 18;
	shf.r.wrap.b32 	%r4025, %r4020, %r4021, 18;
	mov.b64 	%rd5895, {%r4025, %r4024};
	xor.b64  	%rd5896, %rd5894, %rd5895;
	shf.l.wrap.b32 	%r4026, %r4020, %r4021, 23;
	shf.l.wrap.b32 	%r4027, %r4021, %r4020, 23;
	mov.b64 	%rd5897, {%r4027, %r4026};
	xor.b64  	%rd5898, %rd5896, %rd5897;
	add.s64 	%rd5899, %rd5893, %rd5898;
	add.s64 	%rd5900, %rd5899, 4368137639120453308;
	add.s64 	%rd5901, %rd5900, %rd5764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4028,%dummy}, %rd5875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4029}, %rd5875;
	}
	shf.r.wrap.b32 	%r4030, %r4029, %r4028, 28;
	shf.r.wrap.b32 	%r4031, %r4028, %r4029, 28;
	mov.b64 	%rd5902, {%r4031, %r4030};
	shf.l.wrap.b32 	%r4032, %r4028, %r4029, 30;
	shf.l.wrap.b32 	%r4033, %r4029, %r4028, 30;
	mov.b64 	%rd5903, {%r4033, %r4032};
	xor.b64  	%rd5904, %rd5902, %rd5903;
	shf.l.wrap.b32 	%r4034, %r4028, %r4029, 25;
	shf.l.wrap.b32 	%r4035, %r4029, %r4028, 25;
	mov.b64 	%rd5905, {%r4035, %r4034};
	xor.b64  	%rd5906, %rd5904, %rd5905;
	and.b64  	%rd5907, %rd5875, %rd5838;
	or.b64  	%rd5908, %rd5875, %rd5838;
	and.b64  	%rd5909, %rd5908, %rd5801;
	or.b64  	%rd5910, %rd5909, %rd5907;
	add.s64 	%rd5911, %rd5910, %rd5906;
	add.s64 	%rd5912, %rd5911, %rd5900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4036,%dummy}, %rd5851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4037}, %rd5851;
	}
	shf.r.wrap.b32 	%r4038, %r4037, %r4036, 19;
	shf.r.wrap.b32 	%r4039, %r4036, %r4037, 19;
	mov.b64 	%rd5913, {%r4039, %r4038};
	shf.l.wrap.b32 	%r4040, %r4036, %r4037, 3;
	shf.l.wrap.b32 	%r4041, %r4037, %r4036, 3;
	mov.b64 	%rd5914, {%r4041, %r4040};
	xor.b64  	%rd5915, %rd5913, %rd5914;
	shr.u64 	%rd5916, %rd5851, 6;
	xor.b64  	%rd5917, %rd5915, %rd5916;
	shf.r.wrap.b32 	%r4042, %r3699, %r3698, 1;
	shf.r.wrap.b32 	%r4043, %r3698, %r3699, 1;
	mov.b64 	%rd5918, {%r4043, %r4042};
	shf.r.wrap.b32 	%r4044, %r3699, %r3698, 8;
	shf.r.wrap.b32 	%r4045, %r3698, %r3699, 8;
	mov.b64 	%rd5919, {%r4045, %r4044};
	xor.b64  	%rd5920, %rd5918, %rd5919;
	shr.u64 	%rd5921, %rd5370, 7;
	xor.b64  	%rd5922, %rd5920, %rd5921;
	add.s64 	%rd5923, %rd5922, %rd5333;
	add.s64 	%rd5924, %rd5923, %rd5666;
	add.s64 	%rd5925, %rd5924, %rd5917;
	add.s64 	%rd5926, %rd5925, %rd5790;
	xor.b64  	%rd5927, %rd5864, %rd5827;
	and.b64  	%rd5928, %rd5901, %rd5927;
	xor.b64  	%rd5929, %rd5928, %rd5827;
	add.s64 	%rd5930, %rd5926, %rd5929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4046,%dummy}, %rd5901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4047}, %rd5901;
	}
	shf.r.wrap.b32 	%r4048, %r4047, %r4046, 14;
	shf.r.wrap.b32 	%r4049, %r4046, %r4047, 14;
	mov.b64 	%rd5931, {%r4049, %r4048};
	shf.r.wrap.b32 	%r4050, %r4047, %r4046, 18;
	shf.r.wrap.b32 	%r4051, %r4046, %r4047, 18;
	mov.b64 	%rd5932, {%r4051, %r4050};
	xor.b64  	%rd5933, %rd5931, %rd5932;
	shf.l.wrap.b32 	%r4052, %r4046, %r4047, 23;
	shf.l.wrap.b32 	%r4053, %r4047, %r4046, 23;
	mov.b64 	%rd5934, {%r4053, %r4052};
	xor.b64  	%rd5935, %rd5933, %rd5934;
	add.s64 	%rd5936, %rd5930, %rd5935;
	add.s64 	%rd5937, %rd5936, 4836135668995329356;
	add.s64 	%rd5938, %rd5937, %rd5801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4054,%dummy}, %rd5912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4055}, %rd5912;
	}
	shf.r.wrap.b32 	%r4056, %r4055, %r4054, 28;
	shf.r.wrap.b32 	%r4057, %r4054, %r4055, 28;
	mov.b64 	%rd5939, {%r4057, %r4056};
	shf.l.wrap.b32 	%r4058, %r4054, %r4055, 30;
	shf.l.wrap.b32 	%r4059, %r4055, %r4054, 30;
	mov.b64 	%rd5940, {%r4059, %r4058};
	xor.b64  	%rd5941, %rd5939, %rd5940;
	shf.l.wrap.b32 	%r4060, %r4054, %r4055, 25;
	shf.l.wrap.b32 	%r4061, %r4055, %r4054, 25;
	mov.b64 	%rd5942, {%r4061, %r4060};
	xor.b64  	%rd5943, %rd5941, %rd5942;
	and.b64  	%rd5944, %rd5912, %rd5875;
	or.b64  	%rd5945, %rd5912, %rd5875;
	and.b64  	%rd5946, %rd5945, %rd5838;
	or.b64  	%rd5947, %rd5946, %rd5944;
	add.s64 	%rd5948, %rd5947, %rd5943;
	add.s64 	%rd5949, %rd5948, %rd5937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4062,%dummy}, %rd5888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4063}, %rd5888;
	}
	shf.r.wrap.b32 	%r4064, %r4063, %r4062, 19;
	shf.r.wrap.b32 	%r4065, %r4062, %r4063, 19;
	mov.b64 	%rd5950, {%r4065, %r4064};
	shf.l.wrap.b32 	%r4066, %r4062, %r4063, 3;
	shf.l.wrap.b32 	%r4067, %r4063, %r4062, 3;
	mov.b64 	%rd5951, {%r4067, %r4066};
	xor.b64  	%rd5952, %rd5950, %rd5951;
	shr.u64 	%rd5953, %rd5888, 6;
	xor.b64  	%rd5954, %rd5952, %rd5953;
	shf.r.wrap.b32 	%r4068, %r3725, %r3724, 1;
	shf.r.wrap.b32 	%r4069, %r3724, %r3725, 1;
	mov.b64 	%rd5955, {%r4069, %r4068};
	shf.r.wrap.b32 	%r4070, %r3725, %r3724, 8;
	shf.r.wrap.b32 	%r4071, %r3724, %r3725, 8;
	mov.b64 	%rd5956, {%r4071, %r4070};
	xor.b64  	%rd5957, %rd5955, %rd5956;
	shr.u64 	%rd5958, %rd5407, 7;
	xor.b64  	%rd5959, %rd5957, %rd5958;
	add.s64 	%rd5960, %rd5959, %rd5370;
	add.s64 	%rd5961, %rd5960, %rd5703;
	add.s64 	%rd5962, %rd5961, %rd5954;
	add.s64 	%rd5963, %rd5962, %rd5827;
	xor.b64  	%rd5964, %rd5901, %rd5864;
	and.b64  	%rd5965, %rd5938, %rd5964;
	xor.b64  	%rd5966, %rd5965, %rd5864;
	add.s64 	%rd5967, %rd5963, %rd5966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4072,%dummy}, %rd5938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4073}, %rd5938;
	}
	shf.r.wrap.b32 	%r4074, %r4073, %r4072, 14;
	shf.r.wrap.b32 	%r4075, %r4072, %r4073, 14;
	mov.b64 	%rd5968, {%r4075, %r4074};
	shf.r.wrap.b32 	%r4076, %r4073, %r4072, 18;
	shf.r.wrap.b32 	%r4077, %r4072, %r4073, 18;
	mov.b64 	%rd5969, {%r4077, %r4076};
	xor.b64  	%rd5970, %rd5968, %rd5969;
	shf.l.wrap.b32 	%r4078, %r4072, %r4073, 23;
	shf.l.wrap.b32 	%r4079, %r4073, %r4072, 23;
	mov.b64 	%rd5971, {%r4079, %r4078};
	xor.b64  	%rd5972, %rd5970, %rd5971;
	add.s64 	%rd5973, %rd5967, %rd5972;
	add.s64 	%rd5974, %rd5973, 5532061633213252278;
	add.s64 	%rd5975, %rd5974, %rd5838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4080,%dummy}, %rd5949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4081}, %rd5949;
	}
	shf.r.wrap.b32 	%r4082, %r4081, %r4080, 28;
	shf.r.wrap.b32 	%r4083, %r4080, %r4081, 28;
	mov.b64 	%rd5976, {%r4083, %r4082};
	shf.l.wrap.b32 	%r4084, %r4080, %r4081, 30;
	shf.l.wrap.b32 	%r4085, %r4081, %r4080, 30;
	mov.b64 	%rd5977, {%r4085, %r4084};
	xor.b64  	%rd5978, %rd5976, %rd5977;
	shf.l.wrap.b32 	%r4086, %r4080, %r4081, 25;
	shf.l.wrap.b32 	%r4087, %r4081, %r4080, 25;
	mov.b64 	%rd5979, {%r4087, %r4086};
	xor.b64  	%rd5980, %rd5978, %rd5979;
	and.b64  	%rd5981, %rd5949, %rd5912;
	or.b64  	%rd5982, %rd5949, %rd5912;
	and.b64  	%rd5983, %rd5982, %rd5875;
	or.b64  	%rd5984, %rd5983, %rd5981;
	add.s64 	%rd5985, %rd5984, %rd5980;
	add.s64 	%rd5986, %rd5985, %rd5974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4088,%dummy}, %rd5925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4089}, %rd5925;
	}
	shf.r.wrap.b32 	%r4090, %r4089, %r4088, 19;
	shf.r.wrap.b32 	%r4091, %r4088, %r4089, 19;
	mov.b64 	%rd5987, {%r4091, %r4090};
	shf.l.wrap.b32 	%r4092, %r4088, %r4089, 3;
	shf.l.wrap.b32 	%r4093, %r4089, %r4088, 3;
	mov.b64 	%rd5988, {%r4093, %r4092};
	xor.b64  	%rd5989, %rd5987, %rd5988;
	shr.u64 	%rd5990, %rd5925, 6;
	xor.b64  	%rd5991, %rd5989, %rd5990;
	shf.r.wrap.b32 	%r4094, %r3751, %r3750, 1;
	shf.r.wrap.b32 	%r4095, %r3750, %r3751, 1;
	mov.b64 	%rd5992, {%r4095, %r4094};
	shf.r.wrap.b32 	%r4096, %r3751, %r3750, 8;
	shf.r.wrap.b32 	%r4097, %r3750, %r3751, 8;
	mov.b64 	%rd5993, {%r4097, %r4096};
	xor.b64  	%rd5994, %rd5992, %rd5993;
	shr.u64 	%rd5995, %rd5444, 7;
	xor.b64  	%rd5996, %rd5994, %rd5995;
	add.s64 	%rd5997, %rd5996, %rd5407;
	add.s64 	%rd5998, %rd5997, %rd5740;
	add.s64 	%rd5999, %rd5998, %rd5991;
	add.s64 	%rd6000, %rd5999, %rd5864;
	xor.b64  	%rd6001, %rd5938, %rd5901;
	and.b64  	%rd6002, %rd5975, %rd6001;
	xor.b64  	%rd6003, %rd6002, %rd5901;
	add.s64 	%rd6004, %rd6000, %rd6003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4098,%dummy}, %rd5975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4099}, %rd5975;
	}
	shf.r.wrap.b32 	%r4100, %r4099, %r4098, 14;
	shf.r.wrap.b32 	%r4101, %r4098, %r4099, 14;
	mov.b64 	%rd6005, {%r4101, %r4100};
	shf.r.wrap.b32 	%r4102, %r4099, %r4098, 18;
	shf.r.wrap.b32 	%r4103, %r4098, %r4099, 18;
	mov.b64 	%rd6006, {%r4103, %r4102};
	xor.b64  	%rd6007, %rd6005, %rd6006;
	shf.l.wrap.b32 	%r4104, %r4098, %r4099, 23;
	shf.l.wrap.b32 	%r4105, %r4099, %r4098, 23;
	mov.b64 	%rd6008, {%r4105, %r4104};
	xor.b64  	%rd6009, %rd6007, %rd6008;
	add.s64 	%rd6010, %rd6004, %rd6009;
	add.s64 	%rd6011, %rd6010, 6448918945643986474;
	add.s64 	%rd6012, %rd6011, %rd5875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4106,%dummy}, %rd5986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4107}, %rd5986;
	}
	shf.r.wrap.b32 	%r4108, %r4107, %r4106, 28;
	shf.r.wrap.b32 	%r4109, %r4106, %r4107, 28;
	mov.b64 	%rd6013, {%r4109, %r4108};
	shf.l.wrap.b32 	%r4110, %r4106, %r4107, 30;
	shf.l.wrap.b32 	%r4111, %r4107, %r4106, 30;
	mov.b64 	%rd6014, {%r4111, %r4110};
	xor.b64  	%rd6015, %rd6013, %rd6014;
	shf.l.wrap.b32 	%r4112, %r4106, %r4107, 25;
	shf.l.wrap.b32 	%r4113, %r4107, %r4106, 25;
	mov.b64 	%rd6016, {%r4113, %r4112};
	xor.b64  	%rd6017, %rd6015, %rd6016;
	and.b64  	%rd6018, %rd5986, %rd5949;
	or.b64  	%rd6019, %rd5986, %rd5949;
	and.b64  	%rd6020, %rd6019, %rd5912;
	or.b64  	%rd6021, %rd6020, %rd6018;
	add.s64 	%rd6022, %rd6021, %rd6017;
	add.s64 	%rd6023, %rd6022, %rd6011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4114,%dummy}, %rd5962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4115}, %rd5962;
	}
	shf.r.wrap.b32 	%r4116, %r4115, %r4114, 19;
	shf.r.wrap.b32 	%r4117, %r4114, %r4115, 19;
	mov.b64 	%rd6024, {%r4117, %r4116};
	shf.l.wrap.b32 	%r4118, %r4114, %r4115, 3;
	shf.l.wrap.b32 	%r4119, %r4115, %r4114, 3;
	mov.b64 	%rd6025, {%r4119, %r4118};
	xor.b64  	%rd6026, %rd6024, %rd6025;
	shr.u64 	%rd6027, %rd5962, 6;
	xor.b64  	%rd6028, %rd6026, %rd6027;
	shf.r.wrap.b32 	%r4120, %r3777, %r3776, 1;
	shf.r.wrap.b32 	%r4121, %r3776, %r3777, 1;
	mov.b64 	%rd6029, {%r4121, %r4120};
	shf.r.wrap.b32 	%r4122, %r3777, %r3776, 8;
	shf.r.wrap.b32 	%r4123, %r3776, %r3777, 8;
	mov.b64 	%rd6030, {%r4123, %r4122};
	xor.b64  	%rd6031, %rd6029, %rd6030;
	shr.u64 	%rd6032, %rd5481, 7;
	xor.b64  	%rd6033, %rd6031, %rd6032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4124,%dummy}, %rd6012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4125}, %rd6012;
	}
	shf.r.wrap.b32 	%r4126, %r4125, %r4124, 14;
	shf.r.wrap.b32 	%r4127, %r4124, %r4125, 14;
	mov.b64 	%rd6034, {%r4127, %r4126};
	shf.r.wrap.b32 	%r4128, %r4125, %r4124, 18;
	shf.r.wrap.b32 	%r4129, %r4124, %r4125, 18;
	mov.b64 	%rd6035, {%r4129, %r4128};
	xor.b64  	%rd6036, %rd6034, %rd6035;
	shf.l.wrap.b32 	%r4130, %r4124, %r4125, 23;
	shf.l.wrap.b32 	%r4131, %r4125, %r4124, 23;
	mov.b64 	%rd6037, {%r4131, %r4130};
	xor.b64  	%rd6038, %rd6036, %rd6037;
	xor.b64  	%rd6039, %rd5975, %rd5938;
	and.b64  	%rd6040, %rd6012, %rd6039;
	xor.b64  	%rd6041, %rd6040, %rd5938;
	add.s64 	%rd6042, %rd5444, %rd6033;
	add.s64 	%rd6043, %rd6042, %rd5777;
	add.s64 	%rd6044, %rd6043, %rd6028;
	add.s64 	%rd6045, %rd6044, %rd5901;
	add.s64 	%rd6046, %rd6045, %rd6041;
	add.s64 	%rd6047, %rd6046, %rd6038;
	add.s64 	%rd6048, %rd6047, 6902733635092675308;
	add.s64 	%rd6049, %rd6048, %rd5912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4132,%dummy}, %rd6023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4133}, %rd6023;
	}
	shf.r.wrap.b32 	%r4134, %r4133, %r4132, 28;
	shf.r.wrap.b32 	%r4135, %r4132, %r4133, 28;
	mov.b64 	%rd6050, {%r4135, %r4134};
	shf.l.wrap.b32 	%r4136, %r4132, %r4133, 30;
	shf.l.wrap.b32 	%r4137, %r4133, %r4132, 30;
	mov.b64 	%rd6051, {%r4137, %r4136};
	xor.b64  	%rd6052, %rd6050, %rd6051;
	shf.l.wrap.b32 	%r4138, %r4132, %r4133, 25;
	shf.l.wrap.b32 	%r4139, %r4133, %r4132, 25;
	mov.b64 	%rd6053, {%r4139, %r4138};
	xor.b64  	%rd6054, %rd6052, %rd6053;
	and.b64  	%rd6055, %rd6023, %rd5986;
	or.b64  	%rd6056, %rd6023, %rd5986;
	and.b64  	%rd6057, %rd6056, %rd5949;
	or.b64  	%rd6058, %rd6057, %rd6055;
	add.s64 	%rd6059, %rd6058, %rd6054;
	add.s64 	%rd6060, %rd6059, %rd6048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4140,%dummy}, %rd5999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4141}, %rd5999;
	}
	shf.r.wrap.b32 	%r4142, %r4141, %r4140, 19;
	shf.r.wrap.b32 	%r4143, %r4140, %r4141, 19;
	mov.b64 	%rd6061, {%r4143, %r4142};
	shf.l.wrap.b32 	%r4144, %r4140, %r4141, 3;
	shf.l.wrap.b32 	%r4145, %r4141, %r4140, 3;
	mov.b64 	%rd6062, {%r4145, %r4144};
	xor.b64  	%rd6063, %rd6061, %rd6062;
	shr.u64 	%rd6064, %rd5999, 6;
	xor.b64  	%rd6065, %rd6063, %rd6064;
	shf.r.wrap.b32 	%r4146, %r3803, %r3802, 1;
	shf.r.wrap.b32 	%r4147, %r3802, %r3803, 1;
	mov.b64 	%rd6066, {%r4147, %r4146};
	shf.r.wrap.b32 	%r4148, %r3803, %r3802, 8;
	shf.r.wrap.b32 	%r4149, %r3802, %r3803, 8;
	mov.b64 	%rd6067, {%r4149, %r4148};
	xor.b64  	%rd6068, %rd6066, %rd6067;
	shr.u64 	%rd6069, %rd5518, 7;
	xor.b64  	%rd6070, %rd6068, %rd6069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4150,%dummy}, %rd6049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4151}, %rd6049;
	}
	shf.r.wrap.b32 	%r4152, %r4151, %r4150, 14;
	shf.r.wrap.b32 	%r4153, %r4150, %r4151, 14;
	mov.b64 	%rd6071, {%r4153, %r4152};
	shf.r.wrap.b32 	%r4154, %r4151, %r4150, 18;
	shf.r.wrap.b32 	%r4155, %r4150, %r4151, 18;
	mov.b64 	%rd6072, {%r4155, %r4154};
	xor.b64  	%rd6073, %rd6071, %rd6072;
	shf.l.wrap.b32 	%r4156, %r4150, %r4151, 23;
	shf.l.wrap.b32 	%r4157, %r4151, %r4150, 23;
	mov.b64 	%rd6074, {%r4157, %r4156};
	xor.b64  	%rd6075, %rd6073, %rd6074;
	xor.b64  	%rd6076, %rd6012, %rd5975;
	and.b64  	%rd6077, %rd6049, %rd6076;
	xor.b64  	%rd6078, %rd6077, %rd5975;
	add.s64 	%rd6079, %rd5481, %rd6070;
	add.s64 	%rd6080, %rd6079, %rd5814;
	add.s64 	%rd6081, %rd6080, %rd6065;
	add.s64 	%rd6082, %rd6081, %rd5938;
	add.s64 	%rd6083, %rd6082, %rd6078;
	add.s64 	%rd6084, %rd6083, %rd6075;
	add.s64 	%rd6085, %rd6084, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4158,%dummy}, %rd6060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4159}, %rd6060;
	}
	shf.r.wrap.b32 	%r4160, %r4159, %r4158, 28;
	shf.r.wrap.b32 	%r4161, %r4158, %r4159, 28;
	mov.b64 	%rd6086, {%r4161, %r4160};
	shf.l.wrap.b32 	%r4162, %r4158, %r4159, 30;
	shf.l.wrap.b32 	%r4163, %r4159, %r4158, 30;
	mov.b64 	%rd6087, {%r4163, %r4162};
	xor.b64  	%rd6088, %rd6086, %rd6087;
	shf.l.wrap.b32 	%r4164, %r4158, %r4159, 25;
	shf.l.wrap.b32 	%r4165, %r4159, %r4158, 25;
	mov.b64 	%rd6089, {%r4165, %r4164};
	xor.b64  	%rd6090, %rd6088, %rd6089;
	and.b64  	%rd6091, %rd6060, %rd6023;
	or.b64  	%rd6092, %rd6060, %rd6023;
	and.b64  	%rd6093, %rd6092, %rd5986;
	or.b64  	%rd6094, %rd6093, %rd6091;
	add.s64 	%rd6095, %rd6090, %rd3356;
	add.s64 	%rd6096, %rd6095, %rd6094;
	add.s64 	%rd6097, %rd6096, %rd6085;
	st.local.u64 	[%rd4+8], %rd6097;
	add.s64 	%rd6098, %rd6060, %rd3362;
	st.local.u64 	[%rd4+16], %rd6098;
	add.s64 	%rd6099, %rd6023, %rd3365;
	st.local.u64 	[%rd4+24], %rd6099;
	add.s64 	%rd6100, %rd5986, %rd3354;
	st.local.u64 	[%rd4+32], %rd6100;
	add.s64 	%rd6101, %rd5949, %rd3340;
	add.s64 	%rd6102, %rd6101, %rd6085;
	st.local.u64 	[%rd4+40], %rd6102;
	add.s64 	%rd6103, %rd6049, %rd3348;
	st.local.u64 	[%rd4+48], %rd6103;
	add.s64 	%rd6104, %rd6012, %rd3347;
	st.local.u64 	[%rd4+56], %rd6104;
	add.s64 	%rd6105, %rd5975, %rd3338;
	st.local.u64 	[%rd4+64], %rd6105;
	add.s64 	%rd12048, %rd12048, 128;
	add.s64 	%rd12030, %rd12030, 128;
	add.s32 	%r8270, %r8270, -128;
	setp.gt.u32 	%p24, %r8270, 127;
	@%p24 bra 	$L__BB8_24;

$L__BB8_28:
	setp.eq.s32 	%p25, %r8270, 0;
	@%p25 bra 	$L__BB8_34;

	cvt.u64.u32 	%rd6106, %r8267;
	add.s64 	%rd6107, %rd4, %rd6106;
	add.s64 	%rd12053, %rd6107, 72;
	and.b32  	%r8272, %r8270, 3;
	setp.eq.s32 	%p26, %r8272, 0;
	mov.u32 	%r8273, %r8270;
	@%p26 bra 	$L__BB8_32;

	mov.u64 	%rd12049, %rd12053;
	mov.u64 	%rd12050, %rd12048;
	mov.u32 	%r8273, %r8270;

$L__BB8_31:
	.pragma "nounroll";
	add.s32 	%r8273, %r8273, -1;
	add.s64 	%rd12048, %rd12050, 1;
	ld.local.u8 	%rs23, [%rd12050];
	add.s64 	%rd12053, %rd12049, 1;
	st.local.u8 	[%rd12049], %rs23;
	add.s32 	%r8272, %r8272, -1;
	setp.ne.s32 	%p27, %r8272, 0;
	mov.u64 	%rd12049, %rd12053;
	mov.u64 	%rd12050, %rd12048;
	@%p27 bra 	$L__BB8_31;

$L__BB8_32:
	add.s32 	%r4166, %r8270, -1;
	setp.lt.u32 	%p28, %r4166, 3;
	@%p28 bra 	$L__BB8_34;

$L__BB8_33:
	ld.local.u8 	%rs24, [%rd12048];
	st.local.u8 	[%rd12053], %rs24;
	ld.local.u8 	%rs25, [%rd12048+1];
	st.local.u8 	[%rd12053+1], %rs25;
	ld.local.u8 	%rs26, [%rd12048+2];
	st.local.u8 	[%rd12053+2], %rs26;
	add.s64 	%rd120, %rd12048, 4;
	ld.local.u8 	%rs27, [%rd12048+3];
	add.s64 	%rd121, %rd12053, 4;
	st.local.u8 	[%rd12053+3], %rs27;
	add.s32 	%r8273, %r8273, -4;
	setp.ne.s32 	%p29, %r8273, 0;
	mov.u64 	%rd12053, %rd121;
	mov.u64 	%rd12048, %rd120;
	@%p29 bra 	$L__BB8_33;

$L__BB8_34:
	add.u64 	%rd12081, %SPL, 0;
	add.u64 	%rd12063, %SP, 0;
	ld.local.u32 	%r4168, [%rd4];
	and.b32  	%r8279, %r4168, 127;
	mov.u32 	%r4169, 128;
	sub.s32 	%r48, %r4169, %r8279;
	add.s32 	%r4170, %r4168, 16;
	mov.u32 	%r8282, 16;
	st.local.u32 	[%rd4], %r4170;
	setp.eq.s32 	%p30, %r8279, 0;
	setp.gt.u32 	%p31, %r48, 16;
	or.pred  	%p32, %p30, %p31;
	@%p32 bra 	$L__BB8_42;

	setp.eq.s32 	%p33, %r48, 0;
	@%p33 bra 	$L__BB8_41;

	add.u64 	%rd12060, %SPL, 0;
	cvt.u64.u32 	%rd6108, %r8279;
	add.s64 	%rd6109, %rd4, %rd6108;
	add.s64 	%rd12059, %rd6109, 72;
	and.b32  	%r8276, %r48, 3;
	setp.eq.s32 	%p34, %r8276, 0;
	mov.u32 	%r8277, %r48;
	@%p34 bra 	$L__BB8_39;

	add.u64 	%rd12056, %SPL, 0;
	mov.u64 	%rd12055, %rd12059;
	mov.u32 	%r8277, %r48;

$L__BB8_38:
	.pragma "nounroll";
	add.s32 	%r8277, %r8277, -1;
	add.s64 	%rd12060, %rd12056, 1;
	ld.local.u8 	%rs28, [%rd12056];
	add.s64 	%rd12059, %rd12055, 1;
	st.local.u8 	[%rd12055], %rs28;
	add.s32 	%r8276, %r8276, -1;
	setp.ne.s32 	%p35, %r8276, 0;
	mov.u64 	%rd12055, %rd12059;
	mov.u64 	%rd12056, %rd12060;
	@%p35 bra 	$L__BB8_38;

$L__BB8_39:
	xor.b32  	%r4171, %r8279, 127;
	setp.lt.u32 	%p36, %r4171, 3;
	@%p36 bra 	$L__BB8_41;

$L__BB8_40:
	ld.local.u8 	%rs29, [%rd12060];
	st.local.u8 	[%rd12059], %rs29;
	ld.local.u8 	%rs30, [%rd12060+1];
	st.local.u8 	[%rd12059+1], %rs30;
	ld.local.u8 	%rs31, [%rd12060+2];
	st.local.u8 	[%rd12059+2], %rs31;
	add.s64 	%rd135, %rd12060, 4;
	ld.local.u8 	%rs32, [%rd12060+3];
	add.s64 	%rd136, %rd12059, 4;
	st.local.u8 	[%rd12059+3], %rs32;
	add.s32 	%r8277, %r8277, -4;
	setp.ne.s32 	%p37, %r8277, 0;
	mov.u64 	%rd12059, %rd136;
	mov.u64 	%rd12060, %rd135;
	@%p37 bra 	$L__BB8_40;

$L__BB8_41:
	add.u64 	%rd12007, %SPL, 0;
	ld.local.u64 	%rd6110, [%rd4+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4173, %temp}, %rd6110;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4174}, %rd6110;
	}
	mov.u32 	%r4175, 291;
	mov.u32 	%r8279, 0;
	prmt.b32 	%r4176, %r4173, %r8279, %r4175;
	prmt.b32 	%r4177, %r4174, %r8279, %r4175;
	mov.b64 	%rd6111, {%r4177, %r4176};
	ld.local.u64 	%rd6112, [%rd4+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4178, %temp}, %rd6112;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4179}, %rd6112;
	}
	prmt.b32 	%r4180, %r4178, %r8279, %r4175;
	prmt.b32 	%r4181, %r4179, %r8279, %r4175;
	mov.b64 	%rd6113, {%r4181, %r4180};
	ld.local.u64 	%rd6114, [%rd4+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4182, %temp}, %rd6114;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4183}, %rd6114;
	}
	prmt.b32 	%r4184, %r4182, %r8279, %r4175;
	prmt.b32 	%r4185, %r4183, %r8279, %r4175;
	mov.b64 	%rd6115, {%r4185, %r4184};
	ld.local.u64 	%rd6116, [%rd4+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4186, %temp}, %rd6116;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4187}, %rd6116;
	}
	prmt.b32 	%r4188, %r4186, %r8279, %r4175;
	prmt.b32 	%r4189, %r4187, %r8279, %r4175;
	mov.b64 	%rd6117, {%r4189, %r4188};
	ld.local.u64 	%rd6118, [%rd4+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4190, %temp}, %rd6118;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4191}, %rd6118;
	}
	prmt.b32 	%r4192, %r4190, %r8279, %r4175;
	prmt.b32 	%r4193, %r4191, %r8279, %r4175;
	mov.b64 	%rd6119, {%r4193, %r4192};
	ld.local.u64 	%rd6120, [%rd4+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4194, %temp}, %rd6120;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4195}, %rd6120;
	}
	prmt.b32 	%r4196, %r4194, %r8279, %r4175;
	prmt.b32 	%r4197, %r4195, %r8279, %r4175;
	mov.b64 	%rd6121, {%r4197, %r4196};
	ld.local.u64 	%rd6122, [%rd4+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4198, %temp}, %rd6122;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4199}, %rd6122;
	}
	prmt.b32 	%r4200, %r4198, %r8279, %r4175;
	prmt.b32 	%r4201, %r4199, %r8279, %r4175;
	mov.b64 	%rd6123, {%r4201, %r4200};
	ld.local.u64 	%rd6124, [%rd4+128];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4202, %temp}, %rd6124;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4203}, %rd6124;
	}
	prmt.b32 	%r4204, %r4202, %r8279, %r4175;
	prmt.b32 	%r4205, %r4203, %r8279, %r4175;
	mov.b64 	%rd6125, {%r4205, %r4204};
	ld.local.u64 	%rd6126, [%rd4+136];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4206, %temp}, %rd6126;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4207}, %rd6126;
	}
	prmt.b32 	%r4208, %r4206, %r8279, %r4175;
	prmt.b32 	%r4209, %r4207, %r8279, %r4175;
	mov.b64 	%rd6127, {%r4209, %r4208};
	ld.local.u64 	%rd6128, [%rd4+144];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4210, %temp}, %rd6128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4211}, %rd6128;
	}
	prmt.b32 	%r4212, %r4210, %r8279, %r4175;
	prmt.b32 	%r4213, %r4211, %r8279, %r4175;
	mov.b64 	%rd6129, {%r4213, %r4212};
	ld.local.u64 	%rd6130, [%rd4+152];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4214, %temp}, %rd6130;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4215}, %rd6130;
	}
	prmt.b32 	%r4216, %r4214, %r8279, %r4175;
	prmt.b32 	%r4217, %r4215, %r8279, %r4175;
	mov.b64 	%rd6131, {%r4217, %r4216};
	ld.local.u64 	%rd6132, [%rd4+160];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4218, %temp}, %rd6132;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4219}, %rd6132;
	}
	prmt.b32 	%r4220, %r4218, %r8279, %r4175;
	prmt.b32 	%r4221, %r4219, %r8279, %r4175;
	mov.b64 	%rd6133, {%r4221, %r4220};
	ld.local.u64 	%rd6134, [%rd4+168];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4222, %temp}, %rd6134;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4223}, %rd6134;
	}
	prmt.b32 	%r4224, %r4222, %r8279, %r4175;
	prmt.b32 	%r4225, %r4223, %r8279, %r4175;
	mov.b64 	%rd6135, {%r4225, %r4224};
	ld.local.u64 	%rd6136, [%rd4+176];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4226, %temp}, %rd6136;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4227}, %rd6136;
	}
	prmt.b32 	%r4228, %r4226, %r8279, %r4175;
	prmt.b32 	%r4229, %r4227, %r8279, %r4175;
	mov.b64 	%rd6137, {%r4229, %r4228};
	ld.local.u64 	%rd6138, [%rd4+184];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4230, %temp}, %rd6138;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4231}, %rd6138;
	}
	prmt.b32 	%r4232, %r4230, %r8279, %r4175;
	prmt.b32 	%r4233, %r4231, %r8279, %r4175;
	mov.b64 	%rd6139, {%r4233, %r4232};
	ld.local.u64 	%rd6140, [%rd4+192];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r4234, %temp}, %rd6140;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4235}, %rd6140;
	}
	prmt.b32 	%r4236, %r4234, %r8279, %r4175;
	prmt.b32 	%r4237, %r4235, %r8279, %r4175;
	mov.b64 	%rd6141, {%r4237, %r4236};
	ld.local.u64 	%rd6142, [%rd4+64];
	add.s64 	%rd6143, %rd6111, %rd6142;
	ld.local.u64 	%rd6144, [%rd4+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4238,%dummy}, %rd6144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4239}, %rd6144;
	}
	shf.r.wrap.b32 	%r4240, %r4239, %r4238, 14;
	shf.r.wrap.b32 	%r4241, %r4238, %r4239, 14;
	mov.b64 	%rd6145, {%r4241, %r4240};
	shf.r.wrap.b32 	%r4242, %r4239, %r4238, 18;
	shf.r.wrap.b32 	%r4243, %r4238, %r4239, 18;
	mov.b64 	%rd6146, {%r4243, %r4242};
	xor.b64  	%rd6147, %rd6145, %rd6146;
	shf.l.wrap.b32 	%r4244, %r4238, %r4239, 23;
	shf.l.wrap.b32 	%r4245, %r4239, %r4238, 23;
	mov.b64 	%rd6148, {%r4245, %r4244};
	xor.b64  	%rd6149, %rd6147, %rd6148;
	add.s64 	%rd6150, %rd6143, %rd6149;
	ld.local.u64 	%rd6151, [%rd4+56];
	ld.local.u64 	%rd6152, [%rd4+48];
	xor.b64  	%rd6153, %rd6151, %rd6152;
	and.b64  	%rd6154, %rd6153, %rd6144;
	xor.b64  	%rd6155, %rd6154, %rd6151;
	add.s64 	%rd6156, %rd6150, %rd6155;
	add.s64 	%rd6157, %rd6156, 4794697086780616226;
	ld.local.u64 	%rd6158, [%rd4+32];
	add.s64 	%rd6159, %rd6157, %rd6158;
	ld.local.u64 	%rd6160, [%rd4+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4246,%dummy}, %rd6160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4247}, %rd6160;
	}
	shf.r.wrap.b32 	%r4248, %r4247, %r4246, 28;
	shf.r.wrap.b32 	%r4249, %r4246, %r4247, 28;
	mov.b64 	%rd6161, {%r4249, %r4248};
	shf.l.wrap.b32 	%r4250, %r4246, %r4247, 30;
	shf.l.wrap.b32 	%r4251, %r4247, %r4246, 30;
	mov.b64 	%rd6162, {%r4251, %r4250};
	xor.b64  	%rd6163, %rd6161, %rd6162;
	shf.l.wrap.b32 	%r4252, %r4246, %r4247, 25;
	shf.l.wrap.b32 	%r4253, %r4247, %r4246, 25;
	mov.b64 	%rd6164, {%r4253, %r4252};
	xor.b64  	%rd6165, %rd6163, %rd6164;
	ld.local.u64 	%rd6166, [%rd4+16];
	and.b64  	%rd6167, %rd6166, %rd6160;
	or.b64  	%rd6168, %rd6166, %rd6160;
	ld.local.u64 	%rd6169, [%rd4+24];
	and.b64  	%rd6170, %rd6169, %rd6168;
	or.b64  	%rd6171, %rd6170, %rd6167;
	add.s64 	%rd6172, %rd6171, %rd6165;
	add.s64 	%rd6173, %rd6172, %rd6157;
	add.s64 	%rd6174, %rd6113, %rd6151;
	xor.b64  	%rd6175, %rd6152, %rd6144;
	and.b64  	%rd6176, %rd6159, %rd6175;
	xor.b64  	%rd6177, %rd6176, %rd6152;
	add.s64 	%rd6178, %rd6174, %rd6177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4254,%dummy}, %rd6159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4255}, %rd6159;
	}
	shf.r.wrap.b32 	%r4256, %r4255, %r4254, 14;
	shf.r.wrap.b32 	%r4257, %r4254, %r4255, 14;
	mov.b64 	%rd6179, {%r4257, %r4256};
	shf.r.wrap.b32 	%r4258, %r4255, %r4254, 18;
	shf.r.wrap.b32 	%r4259, %r4254, %r4255, 18;
	mov.b64 	%rd6180, {%r4259, %r4258};
	xor.b64  	%rd6181, %rd6179, %rd6180;
	shf.l.wrap.b32 	%r4260, %r4254, %r4255, 23;
	shf.l.wrap.b32 	%r4261, %r4255, %r4254, 23;
	mov.b64 	%rd6182, {%r4261, %r4260};
	xor.b64  	%rd6183, %rd6181, %rd6182;
	add.s64 	%rd6184, %rd6178, %rd6183;
	add.s64 	%rd6185, %rd6184, 8158064640168781261;
	add.s64 	%rd6186, %rd6185, %rd6169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4262,%dummy}, %rd6173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4263}, %rd6173;
	}
	shf.r.wrap.b32 	%r4264, %r4263, %r4262, 28;
	shf.r.wrap.b32 	%r4265, %r4262, %r4263, 28;
	mov.b64 	%rd6187, {%r4265, %r4264};
	shf.l.wrap.b32 	%r4266, %r4262, %r4263, 30;
	shf.l.wrap.b32 	%r4267, %r4263, %r4262, 30;
	mov.b64 	%rd6188, {%r4267, %r4266};
	xor.b64  	%rd6189, %rd6187, %rd6188;
	shf.l.wrap.b32 	%r4268, %r4262, %r4263, 25;
	shf.l.wrap.b32 	%r4269, %r4263, %r4262, 25;
	mov.b64 	%rd6190, {%r4269, %r4268};
	xor.b64  	%rd6191, %rd6189, %rd6190;
	and.b64  	%rd6192, %rd6173, %rd6160;
	or.b64  	%rd6193, %rd6173, %rd6160;
	and.b64  	%rd6194, %rd6193, %rd6166;
	or.b64  	%rd6195, %rd6194, %rd6192;
	add.s64 	%rd6196, %rd6195, %rd6191;
	add.s64 	%rd6197, %rd6196, %rd6185;
	add.s64 	%rd6198, %rd6115, %rd6152;
	xor.b64  	%rd6199, %rd6159, %rd6144;
	and.b64  	%rd6200, %rd6186, %rd6199;
	xor.b64  	%rd6201, %rd6200, %rd6144;
	add.s64 	%rd6202, %rd6198, %rd6201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4270,%dummy}, %rd6186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4271}, %rd6186;
	}
	shf.r.wrap.b32 	%r4272, %r4271, %r4270, 14;
	shf.r.wrap.b32 	%r4273, %r4270, %r4271, 14;
	mov.b64 	%rd6203, {%r4273, %r4272};
	shf.r.wrap.b32 	%r4274, %r4271, %r4270, 18;
	shf.r.wrap.b32 	%r4275, %r4270, %r4271, 18;
	mov.b64 	%rd6204, {%r4275, %r4274};
	xor.b64  	%rd6205, %rd6203, %rd6204;
	shf.l.wrap.b32 	%r4276, %r4270, %r4271, 23;
	shf.l.wrap.b32 	%r4277, %r4271, %r4270, 23;
	mov.b64 	%rd6206, {%r4277, %r4276};
	xor.b64  	%rd6207, %rd6205, %rd6206;
	add.s64 	%rd6208, %rd6202, %rd6207;
	add.s64 	%rd6209, %rd6208, -5349999486874862801;
	add.s64 	%rd6210, %rd6209, %rd6166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4278,%dummy}, %rd6197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4279}, %rd6197;
	}
	shf.r.wrap.b32 	%r4280, %r4279, %r4278, 28;
	shf.r.wrap.b32 	%r4281, %r4278, %r4279, 28;
	mov.b64 	%rd6211, {%r4281, %r4280};
	shf.l.wrap.b32 	%r4282, %r4278, %r4279, 30;
	shf.l.wrap.b32 	%r4283, %r4279, %r4278, 30;
	mov.b64 	%rd6212, {%r4283, %r4282};
	xor.b64  	%rd6213, %rd6211, %rd6212;
	shf.l.wrap.b32 	%r4284, %r4278, %r4279, 25;
	shf.l.wrap.b32 	%r4285, %r4279, %r4278, 25;
	mov.b64 	%rd6214, {%r4285, %r4284};
	xor.b64  	%rd6215, %rd6213, %rd6214;
	and.b64  	%rd6216, %rd6197, %rd6173;
	or.b64  	%rd6217, %rd6197, %rd6173;
	and.b64  	%rd6218, %rd6217, %rd6160;
	or.b64  	%rd6219, %rd6218, %rd6216;
	add.s64 	%rd6220, %rd6219, %rd6215;
	add.s64 	%rd6221, %rd6220, %rd6209;
	add.s64 	%rd6222, %rd6117, %rd6144;
	xor.b64  	%rd6223, %rd6186, %rd6159;
	and.b64  	%rd6224, %rd6210, %rd6223;
	xor.b64  	%rd6225, %rd6224, %rd6159;
	add.s64 	%rd6226, %rd6222, %rd6225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4286,%dummy}, %rd6210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4287}, %rd6210;
	}
	shf.r.wrap.b32 	%r4288, %r4287, %r4286, 14;
	shf.r.wrap.b32 	%r4289, %r4286, %r4287, 14;
	mov.b64 	%rd6227, {%r4289, %r4288};
	shf.r.wrap.b32 	%r4290, %r4287, %r4286, 18;
	shf.r.wrap.b32 	%r4291, %r4286, %r4287, 18;
	mov.b64 	%rd6228, {%r4291, %r4290};
	xor.b64  	%rd6229, %rd6227, %rd6228;
	shf.l.wrap.b32 	%r4292, %r4286, %r4287, 23;
	shf.l.wrap.b32 	%r4293, %r4287, %r4286, 23;
	mov.b64 	%rd6230, {%r4293, %r4292};
	xor.b64  	%rd6231, %rd6229, %rd6230;
	add.s64 	%rd6232, %rd6226, %rd6231;
	add.s64 	%rd6233, %rd6232, -1606136188198331460;
	add.s64 	%rd6234, %rd6233, %rd6160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4294,%dummy}, %rd6221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4295}, %rd6221;
	}
	shf.r.wrap.b32 	%r4296, %r4295, %r4294, 28;
	shf.r.wrap.b32 	%r4297, %r4294, %r4295, 28;
	mov.b64 	%rd6235, {%r4297, %r4296};
	shf.l.wrap.b32 	%r4298, %r4294, %r4295, 30;
	shf.l.wrap.b32 	%r4299, %r4295, %r4294, 30;
	mov.b64 	%rd6236, {%r4299, %r4298};
	xor.b64  	%rd6237, %rd6235, %rd6236;
	shf.l.wrap.b32 	%r4300, %r4294, %r4295, 25;
	shf.l.wrap.b32 	%r4301, %r4295, %r4294, 25;
	mov.b64 	%rd6238, {%r4301, %r4300};
	xor.b64  	%rd6239, %rd6237, %rd6238;
	and.b64  	%rd6240, %rd6221, %rd6197;
	or.b64  	%rd6241, %rd6221, %rd6197;
	and.b64  	%rd6242, %rd6241, %rd6173;
	or.b64  	%rd6243, %rd6242, %rd6240;
	add.s64 	%rd6244, %rd6243, %rd6239;
	add.s64 	%rd6245, %rd6244, %rd6233;
	add.s64 	%rd6246, %rd6119, %rd6159;
	xor.b64  	%rd6247, %rd6210, %rd6186;
	and.b64  	%rd6248, %rd6234, %rd6247;
	xor.b64  	%rd6249, %rd6248, %rd6186;
	add.s64 	%rd6250, %rd6246, %rd6249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4302,%dummy}, %rd6234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4303}, %rd6234;
	}
	shf.r.wrap.b32 	%r4304, %r4303, %r4302, 14;
	shf.r.wrap.b32 	%r4305, %r4302, %r4303, 14;
	mov.b64 	%rd6251, {%r4305, %r4304};
	shf.r.wrap.b32 	%r4306, %r4303, %r4302, 18;
	shf.r.wrap.b32 	%r4307, %r4302, %r4303, 18;
	mov.b64 	%rd6252, {%r4307, %r4306};
	xor.b64  	%rd6253, %rd6251, %rd6252;
	shf.l.wrap.b32 	%r4308, %r4302, %r4303, 23;
	shf.l.wrap.b32 	%r4309, %r4303, %r4302, 23;
	mov.b64 	%rd6254, {%r4309, %r4308};
	xor.b64  	%rd6255, %rd6253, %rd6254;
	add.s64 	%rd6256, %rd6250, %rd6255;
	add.s64 	%rd6257, %rd6256, 4131703408338449720;
	add.s64 	%rd6258, %rd6257, %rd6173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4310,%dummy}, %rd6245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4311}, %rd6245;
	}
	shf.r.wrap.b32 	%r4312, %r4311, %r4310, 28;
	shf.r.wrap.b32 	%r4313, %r4310, %r4311, 28;
	mov.b64 	%rd6259, {%r4313, %r4312};
	shf.l.wrap.b32 	%r4314, %r4310, %r4311, 30;
	shf.l.wrap.b32 	%r4315, %r4311, %r4310, 30;
	mov.b64 	%rd6260, {%r4315, %r4314};
	xor.b64  	%rd6261, %rd6259, %rd6260;
	shf.l.wrap.b32 	%r4316, %r4310, %r4311, 25;
	shf.l.wrap.b32 	%r4317, %r4311, %r4310, 25;
	mov.b64 	%rd6262, {%r4317, %r4316};
	xor.b64  	%rd6263, %rd6261, %rd6262;
	and.b64  	%rd6264, %rd6245, %rd6221;
	or.b64  	%rd6265, %rd6245, %rd6221;
	and.b64  	%rd6266, %rd6265, %rd6197;
	or.b64  	%rd6267, %rd6266, %rd6264;
	add.s64 	%rd6268, %rd6267, %rd6263;
	add.s64 	%rd6269, %rd6268, %rd6257;
	add.s64 	%rd6270, %rd6121, %rd6186;
	xor.b64  	%rd6271, %rd6234, %rd6210;
	and.b64  	%rd6272, %rd6258, %rd6271;
	xor.b64  	%rd6273, %rd6272, %rd6210;
	add.s64 	%rd6274, %rd6270, %rd6273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4318,%dummy}, %rd6258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4319}, %rd6258;
	}
	shf.r.wrap.b32 	%r4320, %r4319, %r4318, 14;
	shf.r.wrap.b32 	%r4321, %r4318, %r4319, 14;
	mov.b64 	%rd6275, {%r4321, %r4320};
	shf.r.wrap.b32 	%r4322, %r4319, %r4318, 18;
	shf.r.wrap.b32 	%r4323, %r4318, %r4319, 18;
	mov.b64 	%rd6276, {%r4323, %r4322};
	xor.b64  	%rd6277, %rd6275, %rd6276;
	shf.l.wrap.b32 	%r4324, %r4318, %r4319, 23;
	shf.l.wrap.b32 	%r4325, %r4319, %r4318, 23;
	mov.b64 	%rd6278, {%r4325, %r4324};
	xor.b64  	%rd6279, %rd6277, %rd6278;
	add.s64 	%rd6280, %rd6274, %rd6279;
	add.s64 	%rd6281, %rd6280, 6480981068601479193;
	add.s64 	%rd6282, %rd6281, %rd6197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4326,%dummy}, %rd6269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4327}, %rd6269;
	}
	shf.r.wrap.b32 	%r4328, %r4327, %r4326, 28;
	shf.r.wrap.b32 	%r4329, %r4326, %r4327, 28;
	mov.b64 	%rd6283, {%r4329, %r4328};
	shf.l.wrap.b32 	%r4330, %r4326, %r4327, 30;
	shf.l.wrap.b32 	%r4331, %r4327, %r4326, 30;
	mov.b64 	%rd6284, {%r4331, %r4330};
	xor.b64  	%rd6285, %rd6283, %rd6284;
	shf.l.wrap.b32 	%r4332, %r4326, %r4327, 25;
	shf.l.wrap.b32 	%r4333, %r4327, %r4326, 25;
	mov.b64 	%rd6286, {%r4333, %r4332};
	xor.b64  	%rd6287, %rd6285, %rd6286;
	and.b64  	%rd6288, %rd6269, %rd6245;
	or.b64  	%rd6289, %rd6269, %rd6245;
	and.b64  	%rd6290, %rd6289, %rd6221;
	or.b64  	%rd6291, %rd6290, %rd6288;
	add.s64 	%rd6292, %rd6291, %rd6287;
	add.s64 	%rd6293, %rd6292, %rd6281;
	add.s64 	%rd6294, %rd6123, %rd6210;
	xor.b64  	%rd6295, %rd6258, %rd6234;
	and.b64  	%rd6296, %rd6282, %rd6295;
	xor.b64  	%rd6297, %rd6296, %rd6234;
	add.s64 	%rd6298, %rd6294, %rd6297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4334,%dummy}, %rd6282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4335}, %rd6282;
	}
	shf.r.wrap.b32 	%r4336, %r4335, %r4334, 14;
	shf.r.wrap.b32 	%r4337, %r4334, %r4335, 14;
	mov.b64 	%rd6299, {%r4337, %r4336};
	shf.r.wrap.b32 	%r4338, %r4335, %r4334, 18;
	shf.r.wrap.b32 	%r4339, %r4334, %r4335, 18;
	mov.b64 	%rd6300, {%r4339, %r4338};
	xor.b64  	%rd6301, %rd6299, %rd6300;
	shf.l.wrap.b32 	%r4340, %r4334, %r4335, 23;
	shf.l.wrap.b32 	%r4341, %r4335, %r4334, 23;
	mov.b64 	%rd6302, {%r4341, %r4340};
	xor.b64  	%rd6303, %rd6301, %rd6302;
	add.s64 	%rd6304, %rd6298, %rd6303;
	add.s64 	%rd6305, %rd6304, -7908458776815382629;
	add.s64 	%rd6306, %rd6305, %rd6221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4342,%dummy}, %rd6293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4343}, %rd6293;
	}
	shf.r.wrap.b32 	%r4344, %r4343, %r4342, 28;
	shf.r.wrap.b32 	%r4345, %r4342, %r4343, 28;
	mov.b64 	%rd6307, {%r4345, %r4344};
	shf.l.wrap.b32 	%r4346, %r4342, %r4343, 30;
	shf.l.wrap.b32 	%r4347, %r4343, %r4342, 30;
	mov.b64 	%rd6308, {%r4347, %r4346};
	xor.b64  	%rd6309, %rd6307, %rd6308;
	shf.l.wrap.b32 	%r4348, %r4342, %r4343, 25;
	shf.l.wrap.b32 	%r4349, %r4343, %r4342, 25;
	mov.b64 	%rd6310, {%r4349, %r4348};
	xor.b64  	%rd6311, %rd6309, %rd6310;
	and.b64  	%rd6312, %rd6293, %rd6269;
	or.b64  	%rd6313, %rd6293, %rd6269;
	and.b64  	%rd6314, %rd6313, %rd6245;
	or.b64  	%rd6315, %rd6314, %rd6312;
	add.s64 	%rd6316, %rd6315, %rd6311;
	add.s64 	%rd6317, %rd6316, %rd6305;
	add.s64 	%rd6318, %rd6125, %rd6234;
	xor.b64  	%rd6319, %rd6282, %rd6258;
	and.b64  	%rd6320, %rd6306, %rd6319;
	xor.b64  	%rd6321, %rd6320, %rd6258;
	add.s64 	%rd6322, %rd6318, %rd6321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4350,%dummy}, %rd6306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4351}, %rd6306;
	}
	shf.r.wrap.b32 	%r4352, %r4351, %r4350, 14;
	shf.r.wrap.b32 	%r4353, %r4350, %r4351, 14;
	mov.b64 	%rd6323, {%r4353, %r4352};
	shf.r.wrap.b32 	%r4354, %r4351, %r4350, 18;
	shf.r.wrap.b32 	%r4355, %r4350, %r4351, 18;
	mov.b64 	%rd6324, {%r4355, %r4354};
	xor.b64  	%rd6325, %rd6323, %rd6324;
	shf.l.wrap.b32 	%r4356, %r4350, %r4351, 23;
	shf.l.wrap.b32 	%r4357, %r4351, %r4350, 23;
	mov.b64 	%rd6326, {%r4357, %r4356};
	xor.b64  	%rd6327, %rd6325, %rd6326;
	add.s64 	%rd6328, %rd6322, %rd6327;
	add.s64 	%rd6329, %rd6328, -6116909921290321640;
	add.s64 	%rd6330, %rd6329, %rd6245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4358,%dummy}, %rd6317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4359}, %rd6317;
	}
	shf.r.wrap.b32 	%r4360, %r4359, %r4358, 28;
	shf.r.wrap.b32 	%r4361, %r4358, %r4359, 28;
	mov.b64 	%rd6331, {%r4361, %r4360};
	shf.l.wrap.b32 	%r4362, %r4358, %r4359, 30;
	shf.l.wrap.b32 	%r4363, %r4359, %r4358, 30;
	mov.b64 	%rd6332, {%r4363, %r4362};
	xor.b64  	%rd6333, %rd6331, %rd6332;
	shf.l.wrap.b32 	%r4364, %r4358, %r4359, 25;
	shf.l.wrap.b32 	%r4365, %r4359, %r4358, 25;
	mov.b64 	%rd6334, {%r4365, %r4364};
	xor.b64  	%rd6335, %rd6333, %rd6334;
	and.b64  	%rd6336, %rd6317, %rd6293;
	or.b64  	%rd6337, %rd6317, %rd6293;
	and.b64  	%rd6338, %rd6337, %rd6269;
	or.b64  	%rd6339, %rd6338, %rd6336;
	add.s64 	%rd6340, %rd6339, %rd6335;
	add.s64 	%rd6341, %rd6340, %rd6329;
	add.s64 	%rd6342, %rd6127, %rd6258;
	xor.b64  	%rd6343, %rd6306, %rd6282;
	and.b64  	%rd6344, %rd6330, %rd6343;
	xor.b64  	%rd6345, %rd6344, %rd6282;
	add.s64 	%rd6346, %rd6342, %rd6345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4366,%dummy}, %rd6330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4367}, %rd6330;
	}
	shf.r.wrap.b32 	%r4368, %r4367, %r4366, 14;
	shf.r.wrap.b32 	%r4369, %r4366, %r4367, 14;
	mov.b64 	%rd6347, {%r4369, %r4368};
	shf.r.wrap.b32 	%r4370, %r4367, %r4366, 18;
	shf.r.wrap.b32 	%r4371, %r4366, %r4367, 18;
	mov.b64 	%rd6348, {%r4371, %r4370};
	xor.b64  	%rd6349, %rd6347, %rd6348;
	shf.l.wrap.b32 	%r4372, %r4366, %r4367, 23;
	shf.l.wrap.b32 	%r4373, %r4367, %r4366, 23;
	mov.b64 	%rd6350, {%r4373, %r4372};
	xor.b64  	%rd6351, %rd6349, %rd6350;
	add.s64 	%rd6352, %rd6346, %rd6351;
	add.s64 	%rd6353, %rd6352, -2880145864133508542;
	add.s64 	%rd6354, %rd6353, %rd6269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4374,%dummy}, %rd6341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4375}, %rd6341;
	}
	shf.r.wrap.b32 	%r4376, %r4375, %r4374, 28;
	shf.r.wrap.b32 	%r4377, %r4374, %r4375, 28;
	mov.b64 	%rd6355, {%r4377, %r4376};
	shf.l.wrap.b32 	%r4378, %r4374, %r4375, 30;
	shf.l.wrap.b32 	%r4379, %r4375, %r4374, 30;
	mov.b64 	%rd6356, {%r4379, %r4378};
	xor.b64  	%rd6357, %rd6355, %rd6356;
	shf.l.wrap.b32 	%r4380, %r4374, %r4375, 25;
	shf.l.wrap.b32 	%r4381, %r4375, %r4374, 25;
	mov.b64 	%rd6358, {%r4381, %r4380};
	xor.b64  	%rd6359, %rd6357, %rd6358;
	and.b64  	%rd6360, %rd6341, %rd6317;
	or.b64  	%rd6361, %rd6341, %rd6317;
	and.b64  	%rd6362, %rd6361, %rd6293;
	or.b64  	%rd6363, %rd6362, %rd6360;
	add.s64 	%rd6364, %rd6363, %rd6359;
	add.s64 	%rd6365, %rd6364, %rd6353;
	add.s64 	%rd6366, %rd6129, %rd6282;
	xor.b64  	%rd6367, %rd6330, %rd6306;
	and.b64  	%rd6368, %rd6354, %rd6367;
	xor.b64  	%rd6369, %rd6368, %rd6306;
	add.s64 	%rd6370, %rd6366, %rd6369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4382,%dummy}, %rd6354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4383}, %rd6354;
	}
	shf.r.wrap.b32 	%r4384, %r4383, %r4382, 14;
	shf.r.wrap.b32 	%r4385, %r4382, %r4383, 14;
	mov.b64 	%rd6371, {%r4385, %r4384};
	shf.r.wrap.b32 	%r4386, %r4383, %r4382, 18;
	shf.r.wrap.b32 	%r4387, %r4382, %r4383, 18;
	mov.b64 	%rd6372, {%r4387, %r4386};
	xor.b64  	%rd6373, %rd6371, %rd6372;
	shf.l.wrap.b32 	%r4388, %r4382, %r4383, 23;
	shf.l.wrap.b32 	%r4389, %r4383, %r4382, 23;
	mov.b64 	%rd6374, {%r4389, %r4388};
	xor.b64  	%rd6375, %rd6373, %rd6374;
	add.s64 	%rd6376, %rd6370, %rd6375;
	add.s64 	%rd6377, %rd6376, 1334009975649890238;
	add.s64 	%rd6378, %rd6377, %rd6293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4390,%dummy}, %rd6365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4391}, %rd6365;
	}
	shf.r.wrap.b32 	%r4392, %r4391, %r4390, 28;
	shf.r.wrap.b32 	%r4393, %r4390, %r4391, 28;
	mov.b64 	%rd6379, {%r4393, %r4392};
	shf.l.wrap.b32 	%r4394, %r4390, %r4391, 30;
	shf.l.wrap.b32 	%r4395, %r4391, %r4390, 30;
	mov.b64 	%rd6380, {%r4395, %r4394};
	xor.b64  	%rd6381, %rd6379, %rd6380;
	shf.l.wrap.b32 	%r4396, %r4390, %r4391, 25;
	shf.l.wrap.b32 	%r4397, %r4391, %r4390, 25;
	mov.b64 	%rd6382, {%r4397, %r4396};
	xor.b64  	%rd6383, %rd6381, %rd6382;
	and.b64  	%rd6384, %rd6365, %rd6341;
	or.b64  	%rd6385, %rd6365, %rd6341;
	and.b64  	%rd6386, %rd6385, %rd6317;
	or.b64  	%rd6387, %rd6386, %rd6384;
	add.s64 	%rd6388, %rd6387, %rd6383;
	add.s64 	%rd6389, %rd6388, %rd6377;
	add.s64 	%rd6390, %rd6131, %rd6306;
	xor.b64  	%rd6391, %rd6354, %rd6330;
	and.b64  	%rd6392, %rd6378, %rd6391;
	xor.b64  	%rd6393, %rd6392, %rd6330;
	add.s64 	%rd6394, %rd6390, %rd6393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4398,%dummy}, %rd6378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4399}, %rd6378;
	}
	shf.r.wrap.b32 	%r4400, %r4399, %r4398, 14;
	shf.r.wrap.b32 	%r4401, %r4398, %r4399, 14;
	mov.b64 	%rd6395, {%r4401, %r4400};
	shf.r.wrap.b32 	%r4402, %r4399, %r4398, 18;
	shf.r.wrap.b32 	%r4403, %r4398, %r4399, 18;
	mov.b64 	%rd6396, {%r4403, %r4402};
	xor.b64  	%rd6397, %rd6395, %rd6396;
	shf.l.wrap.b32 	%r4404, %r4398, %r4399, 23;
	shf.l.wrap.b32 	%r4405, %r4399, %r4398, 23;
	mov.b64 	%rd6398, {%r4405, %r4404};
	xor.b64  	%rd6399, %rd6397, %rd6398;
	add.s64 	%rd6400, %rd6394, %rd6399;
	add.s64 	%rd6401, %rd6400, 2608012711638119052;
	add.s64 	%rd6402, %rd6401, %rd6317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4406,%dummy}, %rd6389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4407}, %rd6389;
	}
	shf.r.wrap.b32 	%r4408, %r4407, %r4406, 28;
	shf.r.wrap.b32 	%r4409, %r4406, %r4407, 28;
	mov.b64 	%rd6403, {%r4409, %r4408};
	shf.l.wrap.b32 	%r4410, %r4406, %r4407, 30;
	shf.l.wrap.b32 	%r4411, %r4407, %r4406, 30;
	mov.b64 	%rd6404, {%r4411, %r4410};
	xor.b64  	%rd6405, %rd6403, %rd6404;
	shf.l.wrap.b32 	%r4412, %r4406, %r4407, 25;
	shf.l.wrap.b32 	%r4413, %r4407, %r4406, 25;
	mov.b64 	%rd6406, {%r4413, %r4412};
	xor.b64  	%rd6407, %rd6405, %rd6406;
	and.b64  	%rd6408, %rd6389, %rd6365;
	or.b64  	%rd6409, %rd6389, %rd6365;
	and.b64  	%rd6410, %rd6409, %rd6341;
	or.b64  	%rd6411, %rd6410, %rd6408;
	add.s64 	%rd6412, %rd6411, %rd6407;
	add.s64 	%rd6413, %rd6412, %rd6401;
	add.s64 	%rd6414, %rd6133, %rd6330;
	xor.b64  	%rd6415, %rd6378, %rd6354;
	and.b64  	%rd6416, %rd6402, %rd6415;
	xor.b64  	%rd6417, %rd6416, %rd6354;
	add.s64 	%rd6418, %rd6414, %rd6417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4414,%dummy}, %rd6402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4415}, %rd6402;
	}
	shf.r.wrap.b32 	%r4416, %r4415, %r4414, 14;
	shf.r.wrap.b32 	%r4417, %r4414, %r4415, 14;
	mov.b64 	%rd6419, {%r4417, %r4416};
	shf.r.wrap.b32 	%r4418, %r4415, %r4414, 18;
	shf.r.wrap.b32 	%r4419, %r4414, %r4415, 18;
	mov.b64 	%rd6420, {%r4419, %r4418};
	xor.b64  	%rd6421, %rd6419, %rd6420;
	shf.l.wrap.b32 	%r4420, %r4414, %r4415, 23;
	shf.l.wrap.b32 	%r4421, %r4415, %r4414, 23;
	mov.b64 	%rd6422, {%r4421, %r4420};
	xor.b64  	%rd6423, %rd6421, %rd6422;
	add.s64 	%rd6424, %rd6418, %rd6423;
	add.s64 	%rd6425, %rd6424, 6128411473006802146;
	add.s64 	%rd6426, %rd6425, %rd6341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4422,%dummy}, %rd6413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4423}, %rd6413;
	}
	shf.r.wrap.b32 	%r4424, %r4423, %r4422, 28;
	shf.r.wrap.b32 	%r4425, %r4422, %r4423, 28;
	mov.b64 	%rd6427, {%r4425, %r4424};
	shf.l.wrap.b32 	%r4426, %r4422, %r4423, 30;
	shf.l.wrap.b32 	%r4427, %r4423, %r4422, 30;
	mov.b64 	%rd6428, {%r4427, %r4426};
	xor.b64  	%rd6429, %rd6427, %rd6428;
	shf.l.wrap.b32 	%r4428, %r4422, %r4423, 25;
	shf.l.wrap.b32 	%r4429, %r4423, %r4422, 25;
	mov.b64 	%rd6430, {%r4429, %r4428};
	xor.b64  	%rd6431, %rd6429, %rd6430;
	and.b64  	%rd6432, %rd6413, %rd6389;
	or.b64  	%rd6433, %rd6413, %rd6389;
	and.b64  	%rd6434, %rd6433, %rd6365;
	or.b64  	%rd6435, %rd6434, %rd6432;
	add.s64 	%rd6436, %rd6435, %rd6431;
	add.s64 	%rd6437, %rd6436, %rd6425;
	add.s64 	%rd6438, %rd6135, %rd6354;
	xor.b64  	%rd6439, %rd6402, %rd6378;
	and.b64  	%rd6440, %rd6426, %rd6439;
	xor.b64  	%rd6441, %rd6440, %rd6378;
	add.s64 	%rd6442, %rd6438, %rd6441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4430,%dummy}, %rd6426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4431}, %rd6426;
	}
	shf.r.wrap.b32 	%r4432, %r4431, %r4430, 14;
	shf.r.wrap.b32 	%r4433, %r4430, %r4431, 14;
	mov.b64 	%rd6443, {%r4433, %r4432};
	shf.r.wrap.b32 	%r4434, %r4431, %r4430, 18;
	shf.r.wrap.b32 	%r4435, %r4430, %r4431, 18;
	mov.b64 	%rd6444, {%r4435, %r4434};
	xor.b64  	%rd6445, %rd6443, %rd6444;
	shf.l.wrap.b32 	%r4436, %r4430, %r4431, 23;
	shf.l.wrap.b32 	%r4437, %r4431, %r4430, 23;
	mov.b64 	%rd6446, {%r4437, %r4436};
	xor.b64  	%rd6447, %rd6445, %rd6446;
	add.s64 	%rd6448, %rd6442, %rd6447;
	add.s64 	%rd6449, %rd6448, 8268148722764581231;
	add.s64 	%rd6450, %rd6449, %rd6365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4438,%dummy}, %rd6437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4439}, %rd6437;
	}
	shf.r.wrap.b32 	%r4440, %r4439, %r4438, 28;
	shf.r.wrap.b32 	%r4441, %r4438, %r4439, 28;
	mov.b64 	%rd6451, {%r4441, %r4440};
	shf.l.wrap.b32 	%r4442, %r4438, %r4439, 30;
	shf.l.wrap.b32 	%r4443, %r4439, %r4438, 30;
	mov.b64 	%rd6452, {%r4443, %r4442};
	xor.b64  	%rd6453, %rd6451, %rd6452;
	shf.l.wrap.b32 	%r4444, %r4438, %r4439, 25;
	shf.l.wrap.b32 	%r4445, %r4439, %r4438, 25;
	mov.b64 	%rd6454, {%r4445, %r4444};
	xor.b64  	%rd6455, %rd6453, %rd6454;
	and.b64  	%rd6456, %rd6437, %rd6413;
	or.b64  	%rd6457, %rd6437, %rd6413;
	and.b64  	%rd6458, %rd6457, %rd6389;
	or.b64  	%rd6459, %rd6458, %rd6456;
	add.s64 	%rd6460, %rd6459, %rd6455;
	add.s64 	%rd6461, %rd6460, %rd6449;
	add.s64 	%rd6462, %rd6137, %rd6378;
	xor.b64  	%rd6463, %rd6426, %rd6402;
	and.b64  	%rd6464, %rd6450, %rd6463;
	xor.b64  	%rd6465, %rd6464, %rd6402;
	add.s64 	%rd6466, %rd6462, %rd6465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4446,%dummy}, %rd6450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4447}, %rd6450;
	}
	shf.r.wrap.b32 	%r4448, %r4447, %r4446, 14;
	shf.r.wrap.b32 	%r4449, %r4446, %r4447, 14;
	mov.b64 	%rd6467, {%r4449, %r4448};
	shf.r.wrap.b32 	%r4450, %r4447, %r4446, 18;
	shf.r.wrap.b32 	%r4451, %r4446, %r4447, 18;
	mov.b64 	%rd6468, {%r4451, %r4450};
	xor.b64  	%rd6469, %rd6467, %rd6468;
	shf.l.wrap.b32 	%r4452, %r4446, %r4447, 23;
	shf.l.wrap.b32 	%r4453, %r4447, %r4446, 23;
	mov.b64 	%rd6470, {%r4453, %r4452};
	xor.b64  	%rd6471, %rd6469, %rd6470;
	add.s64 	%rd6472, %rd6466, %rd6471;
	add.s64 	%rd6473, %rd6472, -9160688886553864527;
	add.s64 	%rd6474, %rd6473, %rd6389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4454,%dummy}, %rd6461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4455}, %rd6461;
	}
	shf.r.wrap.b32 	%r4456, %r4455, %r4454, 28;
	shf.r.wrap.b32 	%r4457, %r4454, %r4455, 28;
	mov.b64 	%rd6475, {%r4457, %r4456};
	shf.l.wrap.b32 	%r4458, %r4454, %r4455, 30;
	shf.l.wrap.b32 	%r4459, %r4455, %r4454, 30;
	mov.b64 	%rd6476, {%r4459, %r4458};
	xor.b64  	%rd6477, %rd6475, %rd6476;
	shf.l.wrap.b32 	%r4460, %r4454, %r4455, 25;
	shf.l.wrap.b32 	%r4461, %r4455, %r4454, 25;
	mov.b64 	%rd6478, {%r4461, %r4460};
	xor.b64  	%rd6479, %rd6477, %rd6478;
	and.b64  	%rd6480, %rd6461, %rd6437;
	or.b64  	%rd6481, %rd6461, %rd6437;
	and.b64  	%rd6482, %rd6481, %rd6413;
	or.b64  	%rd6483, %rd6482, %rd6480;
	add.s64 	%rd6484, %rd6483, %rd6479;
	add.s64 	%rd6485, %rd6484, %rd6473;
	add.s64 	%rd6486, %rd6139, %rd6402;
	xor.b64  	%rd6487, %rd6450, %rd6426;
	and.b64  	%rd6488, %rd6474, %rd6487;
	xor.b64  	%rd6489, %rd6488, %rd6426;
	add.s64 	%rd6490, %rd6486, %rd6489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4462,%dummy}, %rd6474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4463}, %rd6474;
	}
	shf.r.wrap.b32 	%r4464, %r4463, %r4462, 14;
	shf.r.wrap.b32 	%r4465, %r4462, %r4463, 14;
	mov.b64 	%rd6491, {%r4465, %r4464};
	shf.r.wrap.b32 	%r4466, %r4463, %r4462, 18;
	shf.r.wrap.b32 	%r4467, %r4462, %r4463, 18;
	mov.b64 	%rd6492, {%r4467, %r4466};
	xor.b64  	%rd6493, %rd6491, %rd6492;
	shf.l.wrap.b32 	%r4468, %r4462, %r4463, 23;
	shf.l.wrap.b32 	%r4469, %r4463, %r4462, 23;
	mov.b64 	%rd6494, {%r4469, %r4468};
	xor.b64  	%rd6495, %rd6493, %rd6494;
	add.s64 	%rd6496, %rd6490, %rd6495;
	add.s64 	%rd6497, %rd6496, -7215885187991268811;
	add.s64 	%rd6498, %rd6497, %rd6413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4470,%dummy}, %rd6485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4471}, %rd6485;
	}
	shf.r.wrap.b32 	%r4472, %r4471, %r4470, 28;
	shf.r.wrap.b32 	%r4473, %r4470, %r4471, 28;
	mov.b64 	%rd6499, {%r4473, %r4472};
	shf.l.wrap.b32 	%r4474, %r4470, %r4471, 30;
	shf.l.wrap.b32 	%r4475, %r4471, %r4470, 30;
	mov.b64 	%rd6500, {%r4475, %r4474};
	xor.b64  	%rd6501, %rd6499, %rd6500;
	shf.l.wrap.b32 	%r4476, %r4470, %r4471, 25;
	shf.l.wrap.b32 	%r4477, %r4471, %r4470, 25;
	mov.b64 	%rd6502, {%r4477, %r4476};
	xor.b64  	%rd6503, %rd6501, %rd6502;
	and.b64  	%rd6504, %rd6485, %rd6461;
	or.b64  	%rd6505, %rd6485, %rd6461;
	and.b64  	%rd6506, %rd6505, %rd6437;
	or.b64  	%rd6507, %rd6506, %rd6504;
	add.s64 	%rd6508, %rd6507, %rd6503;
	add.s64 	%rd6509, %rd6508, %rd6497;
	add.s64 	%rd6510, %rd6141, %rd6426;
	xor.b64  	%rd6511, %rd6474, %rd6450;
	and.b64  	%rd6512, %rd6498, %rd6511;
	xor.b64  	%rd6513, %rd6512, %rd6450;
	add.s64 	%rd6514, %rd6510, %rd6513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4478,%dummy}, %rd6498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4479}, %rd6498;
	}
	shf.r.wrap.b32 	%r4480, %r4479, %r4478, 14;
	shf.r.wrap.b32 	%r4481, %r4478, %r4479, 14;
	mov.b64 	%rd6515, {%r4481, %r4480};
	shf.r.wrap.b32 	%r4482, %r4479, %r4478, 18;
	shf.r.wrap.b32 	%r4483, %r4478, %r4479, 18;
	mov.b64 	%rd6516, {%r4483, %r4482};
	xor.b64  	%rd6517, %rd6515, %rd6516;
	shf.l.wrap.b32 	%r4484, %r4478, %r4479, 23;
	shf.l.wrap.b32 	%r4485, %r4479, %r4478, 23;
	mov.b64 	%rd6518, {%r4485, %r4484};
	xor.b64  	%rd6519, %rd6517, %rd6518;
	add.s64 	%rd6520, %rd6514, %rd6519;
	add.s64 	%rd6521, %rd6520, -4495734319001033068;
	add.s64 	%rd6522, %rd6521, %rd6437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4486,%dummy}, %rd6509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4487}, %rd6509;
	}
	shf.r.wrap.b32 	%r4488, %r4487, %r4486, 28;
	shf.r.wrap.b32 	%r4489, %r4486, %r4487, 28;
	mov.b64 	%rd6523, {%r4489, %r4488};
	shf.l.wrap.b32 	%r4490, %r4486, %r4487, 30;
	shf.l.wrap.b32 	%r4491, %r4487, %r4486, 30;
	mov.b64 	%rd6524, {%r4491, %r4490};
	xor.b64  	%rd6525, %rd6523, %rd6524;
	shf.l.wrap.b32 	%r4492, %r4486, %r4487, 25;
	shf.l.wrap.b32 	%r4493, %r4487, %r4486, 25;
	mov.b64 	%rd6526, {%r4493, %r4492};
	xor.b64  	%rd6527, %rd6525, %rd6526;
	and.b64  	%rd6528, %rd6509, %rd6485;
	or.b64  	%rd6529, %rd6509, %rd6485;
	and.b64  	%rd6530, %rd6529, %rd6461;
	or.b64  	%rd6531, %rd6530, %rd6528;
	add.s64 	%rd6532, %rd6531, %rd6527;
	add.s64 	%rd6533, %rd6532, %rd6521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4494,%dummy}, %rd6139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4495}, %rd6139;
	}
	shf.r.wrap.b32 	%r4496, %r4495, %r4494, 19;
	shf.r.wrap.b32 	%r4497, %r4494, %r4495, 19;
	mov.b64 	%rd6534, {%r4497, %r4496};
	shf.l.wrap.b32 	%r4498, %r4494, %r4495, 3;
	shf.l.wrap.b32 	%r4499, %r4495, %r4494, 3;
	mov.b64 	%rd6535, {%r4499, %r4498};
	xor.b64  	%rd6536, %rd6534, %rd6535;
	shr.u64 	%rd6537, %rd6139, 6;
	xor.b64  	%rd6538, %rd6536, %rd6537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4500,%dummy}, %rd6113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4501}, %rd6113;
	}
	shf.r.wrap.b32 	%r4502, %r4501, %r4500, 1;
	shf.r.wrap.b32 	%r4503, %r4500, %r4501, 1;
	mov.b64 	%rd6539, {%r4503, %r4502};
	shf.r.wrap.b32 	%r4504, %r4501, %r4500, 8;
	shf.r.wrap.b32 	%r4505, %r4500, %r4501, 8;
	mov.b64 	%rd6540, {%r4505, %r4504};
	xor.b64  	%rd6541, %rd6539, %rd6540;
	shr.u64 	%rd6542, %rd6113, 7;
	xor.b64  	%rd6543, %rd6541, %rd6542;
	add.s64 	%rd6544, %rd6543, %rd6111;
	add.s64 	%rd6545, %rd6544, %rd6129;
	add.s64 	%rd6546, %rd6545, %rd6538;
	add.s64 	%rd6547, %rd6546, %rd6450;
	xor.b64  	%rd6548, %rd6498, %rd6474;
	and.b64  	%rd6549, %rd6522, %rd6548;
	xor.b64  	%rd6550, %rd6549, %rd6474;
	add.s64 	%rd6551, %rd6547, %rd6550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4506,%dummy}, %rd6522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4507}, %rd6522;
	}
	shf.r.wrap.b32 	%r4508, %r4507, %r4506, 14;
	shf.r.wrap.b32 	%r4509, %r4506, %r4507, 14;
	mov.b64 	%rd6552, {%r4509, %r4508};
	shf.r.wrap.b32 	%r4510, %r4507, %r4506, 18;
	shf.r.wrap.b32 	%r4511, %r4506, %r4507, 18;
	mov.b64 	%rd6553, {%r4511, %r4510};
	xor.b64  	%rd6554, %rd6552, %rd6553;
	shf.l.wrap.b32 	%r4512, %r4506, %r4507, 23;
	shf.l.wrap.b32 	%r4513, %r4507, %r4506, 23;
	mov.b64 	%rd6555, {%r4513, %r4512};
	xor.b64  	%rd6556, %rd6554, %rd6555;
	add.s64 	%rd6557, %rd6551, %rd6556;
	add.s64 	%rd6558, %rd6557, -1973867731355612462;
	add.s64 	%rd6559, %rd6558, %rd6461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4514,%dummy}, %rd6533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4515}, %rd6533;
	}
	shf.r.wrap.b32 	%r4516, %r4515, %r4514, 28;
	shf.r.wrap.b32 	%r4517, %r4514, %r4515, 28;
	mov.b64 	%rd6560, {%r4517, %r4516};
	shf.l.wrap.b32 	%r4518, %r4514, %r4515, 30;
	shf.l.wrap.b32 	%r4519, %r4515, %r4514, 30;
	mov.b64 	%rd6561, {%r4519, %r4518};
	xor.b64  	%rd6562, %rd6560, %rd6561;
	shf.l.wrap.b32 	%r4520, %r4514, %r4515, 25;
	shf.l.wrap.b32 	%r4521, %r4515, %r4514, 25;
	mov.b64 	%rd6563, {%r4521, %r4520};
	xor.b64  	%rd6564, %rd6562, %rd6563;
	and.b64  	%rd6565, %rd6533, %rd6509;
	or.b64  	%rd6566, %rd6533, %rd6509;
	and.b64  	%rd6567, %rd6566, %rd6485;
	or.b64  	%rd6568, %rd6567, %rd6565;
	add.s64 	%rd6569, %rd6568, %rd6564;
	add.s64 	%rd6570, %rd6569, %rd6558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4522,%dummy}, %rd6141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4523}, %rd6141;
	}
	shf.r.wrap.b32 	%r4524, %r4523, %r4522, 19;
	shf.r.wrap.b32 	%r4525, %r4522, %r4523, 19;
	mov.b64 	%rd6571, {%r4525, %r4524};
	shf.l.wrap.b32 	%r4526, %r4522, %r4523, 3;
	shf.l.wrap.b32 	%r4527, %r4523, %r4522, 3;
	mov.b64 	%rd6572, {%r4527, %r4526};
	xor.b64  	%rd6573, %rd6571, %rd6572;
	shr.u64 	%rd6574, %rd6141, 6;
	xor.b64  	%rd6575, %rd6573, %rd6574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4528,%dummy}, %rd6115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4529}, %rd6115;
	}
	shf.r.wrap.b32 	%r4530, %r4529, %r4528, 1;
	shf.r.wrap.b32 	%r4531, %r4528, %r4529, 1;
	mov.b64 	%rd6576, {%r4531, %r4530};
	shf.r.wrap.b32 	%r4532, %r4529, %r4528, 8;
	shf.r.wrap.b32 	%r4533, %r4528, %r4529, 8;
	mov.b64 	%rd6577, {%r4533, %r4532};
	xor.b64  	%rd6578, %rd6576, %rd6577;
	shr.u64 	%rd6579, %rd6115, 7;
	xor.b64  	%rd6580, %rd6578, %rd6579;
	add.s64 	%rd6581, %rd6580, %rd6113;
	add.s64 	%rd6582, %rd6581, %rd6131;
	add.s64 	%rd6583, %rd6582, %rd6575;
	add.s64 	%rd6584, %rd6583, %rd6474;
	xor.b64  	%rd6585, %rd6522, %rd6498;
	and.b64  	%rd6586, %rd6559, %rd6585;
	xor.b64  	%rd6587, %rd6586, %rd6498;
	add.s64 	%rd6588, %rd6584, %rd6587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4534,%dummy}, %rd6559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4535}, %rd6559;
	}
	shf.r.wrap.b32 	%r4536, %r4535, %r4534, 14;
	shf.r.wrap.b32 	%r4537, %r4534, %r4535, 14;
	mov.b64 	%rd6589, {%r4537, %r4536};
	shf.r.wrap.b32 	%r4538, %r4535, %r4534, 18;
	shf.r.wrap.b32 	%r4539, %r4534, %r4535, 18;
	mov.b64 	%rd6590, {%r4539, %r4538};
	xor.b64  	%rd6591, %rd6589, %rd6590;
	shf.l.wrap.b32 	%r4540, %r4534, %r4535, 23;
	shf.l.wrap.b32 	%r4541, %r4535, %r4534, 23;
	mov.b64 	%rd6592, {%r4541, %r4540};
	xor.b64  	%rd6593, %rd6591, %rd6592;
	add.s64 	%rd6594, %rd6588, %rd6593;
	add.s64 	%rd6595, %rd6594, -1171420211273849373;
	add.s64 	%rd6596, %rd6595, %rd6485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4542,%dummy}, %rd6570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4543}, %rd6570;
	}
	shf.r.wrap.b32 	%r4544, %r4543, %r4542, 28;
	shf.r.wrap.b32 	%r4545, %r4542, %r4543, 28;
	mov.b64 	%rd6597, {%r4545, %r4544};
	shf.l.wrap.b32 	%r4546, %r4542, %r4543, 30;
	shf.l.wrap.b32 	%r4547, %r4543, %r4542, 30;
	mov.b64 	%rd6598, {%r4547, %r4546};
	xor.b64  	%rd6599, %rd6597, %rd6598;
	shf.l.wrap.b32 	%r4548, %r4542, %r4543, 25;
	shf.l.wrap.b32 	%r4549, %r4543, %r4542, 25;
	mov.b64 	%rd6600, {%r4549, %r4548};
	xor.b64  	%rd6601, %rd6599, %rd6600;
	and.b64  	%rd6602, %rd6570, %rd6533;
	or.b64  	%rd6603, %rd6570, %rd6533;
	and.b64  	%rd6604, %rd6603, %rd6509;
	or.b64  	%rd6605, %rd6604, %rd6602;
	add.s64 	%rd6606, %rd6605, %rd6601;
	add.s64 	%rd6607, %rd6606, %rd6595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4550,%dummy}, %rd6546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4551}, %rd6546;
	}
	shf.r.wrap.b32 	%r4552, %r4551, %r4550, 19;
	shf.r.wrap.b32 	%r4553, %r4550, %r4551, 19;
	mov.b64 	%rd6608, {%r4553, %r4552};
	shf.l.wrap.b32 	%r4554, %r4550, %r4551, 3;
	shf.l.wrap.b32 	%r4555, %r4551, %r4550, 3;
	mov.b64 	%rd6609, {%r4555, %r4554};
	xor.b64  	%rd6610, %rd6608, %rd6609;
	shr.u64 	%rd6611, %rd6546, 6;
	xor.b64  	%rd6612, %rd6610, %rd6611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4556,%dummy}, %rd6117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4557}, %rd6117;
	}
	shf.r.wrap.b32 	%r4558, %r4557, %r4556, 1;
	shf.r.wrap.b32 	%r4559, %r4556, %r4557, 1;
	mov.b64 	%rd6613, {%r4559, %r4558};
	shf.r.wrap.b32 	%r4560, %r4557, %r4556, 8;
	shf.r.wrap.b32 	%r4561, %r4556, %r4557, 8;
	mov.b64 	%rd6614, {%r4561, %r4560};
	xor.b64  	%rd6615, %rd6613, %rd6614;
	shr.u64 	%rd6616, %rd6117, 7;
	xor.b64  	%rd6617, %rd6615, %rd6616;
	add.s64 	%rd6618, %rd6617, %rd6115;
	add.s64 	%rd6619, %rd6618, %rd6133;
	add.s64 	%rd6620, %rd6619, %rd6612;
	add.s64 	%rd6621, %rd6620, %rd6498;
	xor.b64  	%rd6622, %rd6559, %rd6522;
	and.b64  	%rd6623, %rd6596, %rd6622;
	xor.b64  	%rd6624, %rd6623, %rd6522;
	add.s64 	%rd6625, %rd6621, %rd6624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4562,%dummy}, %rd6596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4563}, %rd6596;
	}
	shf.r.wrap.b32 	%r4564, %r4563, %r4562, 14;
	shf.r.wrap.b32 	%r4565, %r4562, %r4563, 14;
	mov.b64 	%rd6626, {%r4565, %r4564};
	shf.r.wrap.b32 	%r4566, %r4563, %r4562, 18;
	shf.r.wrap.b32 	%r4567, %r4562, %r4563, 18;
	mov.b64 	%rd6627, {%r4567, %r4566};
	xor.b64  	%rd6628, %rd6626, %rd6627;
	shf.l.wrap.b32 	%r4568, %r4562, %r4563, 23;
	shf.l.wrap.b32 	%r4569, %r4563, %r4562, 23;
	mov.b64 	%rd6629, {%r4569, %r4568};
	xor.b64  	%rd6630, %rd6628, %rd6629;
	add.s64 	%rd6631, %rd6625, %rd6630;
	add.s64 	%rd6632, %rd6631, 1135362057144423861;
	add.s64 	%rd6633, %rd6632, %rd6509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4570,%dummy}, %rd6607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4571}, %rd6607;
	}
	shf.r.wrap.b32 	%r4572, %r4571, %r4570, 28;
	shf.r.wrap.b32 	%r4573, %r4570, %r4571, 28;
	mov.b64 	%rd6634, {%r4573, %r4572};
	shf.l.wrap.b32 	%r4574, %r4570, %r4571, 30;
	shf.l.wrap.b32 	%r4575, %r4571, %r4570, 30;
	mov.b64 	%rd6635, {%r4575, %r4574};
	xor.b64  	%rd6636, %rd6634, %rd6635;
	shf.l.wrap.b32 	%r4576, %r4570, %r4571, 25;
	shf.l.wrap.b32 	%r4577, %r4571, %r4570, 25;
	mov.b64 	%rd6637, {%r4577, %r4576};
	xor.b64  	%rd6638, %rd6636, %rd6637;
	and.b64  	%rd6639, %rd6607, %rd6570;
	or.b64  	%rd6640, %rd6607, %rd6570;
	and.b64  	%rd6641, %rd6640, %rd6533;
	or.b64  	%rd6642, %rd6641, %rd6639;
	add.s64 	%rd6643, %rd6642, %rd6638;
	add.s64 	%rd6644, %rd6643, %rd6632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4578,%dummy}, %rd6583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4579}, %rd6583;
	}
	shf.r.wrap.b32 	%r4580, %r4579, %r4578, 19;
	shf.r.wrap.b32 	%r4581, %r4578, %r4579, 19;
	mov.b64 	%rd6645, {%r4581, %r4580};
	shf.l.wrap.b32 	%r4582, %r4578, %r4579, 3;
	shf.l.wrap.b32 	%r4583, %r4579, %r4578, 3;
	mov.b64 	%rd6646, {%r4583, %r4582};
	xor.b64  	%rd6647, %rd6645, %rd6646;
	shr.u64 	%rd6648, %rd6583, 6;
	xor.b64  	%rd6649, %rd6647, %rd6648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4584,%dummy}, %rd6119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4585}, %rd6119;
	}
	shf.r.wrap.b32 	%r4586, %r4585, %r4584, 1;
	shf.r.wrap.b32 	%r4587, %r4584, %r4585, 1;
	mov.b64 	%rd6650, {%r4587, %r4586};
	shf.r.wrap.b32 	%r4588, %r4585, %r4584, 8;
	shf.r.wrap.b32 	%r4589, %r4584, %r4585, 8;
	mov.b64 	%rd6651, {%r4589, %r4588};
	xor.b64  	%rd6652, %rd6650, %rd6651;
	shr.u64 	%rd6653, %rd6119, 7;
	xor.b64  	%rd6654, %rd6652, %rd6653;
	add.s64 	%rd6655, %rd6654, %rd6117;
	add.s64 	%rd6656, %rd6655, %rd6135;
	add.s64 	%rd6657, %rd6656, %rd6649;
	add.s64 	%rd6658, %rd6657, %rd6522;
	xor.b64  	%rd6659, %rd6596, %rd6559;
	and.b64  	%rd6660, %rd6633, %rd6659;
	xor.b64  	%rd6661, %rd6660, %rd6559;
	add.s64 	%rd6662, %rd6658, %rd6661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4590,%dummy}, %rd6633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4591}, %rd6633;
	}
	shf.r.wrap.b32 	%r4592, %r4591, %r4590, 14;
	shf.r.wrap.b32 	%r4593, %r4590, %r4591, 14;
	mov.b64 	%rd6663, {%r4593, %r4592};
	shf.r.wrap.b32 	%r4594, %r4591, %r4590, 18;
	shf.r.wrap.b32 	%r4595, %r4590, %r4591, 18;
	mov.b64 	%rd6664, {%r4595, %r4594};
	xor.b64  	%rd6665, %rd6663, %rd6664;
	shf.l.wrap.b32 	%r4596, %r4590, %r4591, 23;
	shf.l.wrap.b32 	%r4597, %r4591, %r4590, 23;
	mov.b64 	%rd6666, {%r4597, %r4596};
	xor.b64  	%rd6667, %rd6665, %rd6666;
	add.s64 	%rd6668, %rd6662, %rd6667;
	add.s64 	%rd6669, %rd6668, 2597628984639134821;
	add.s64 	%rd6670, %rd6669, %rd6533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4598,%dummy}, %rd6644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4599}, %rd6644;
	}
	shf.r.wrap.b32 	%r4600, %r4599, %r4598, 28;
	shf.r.wrap.b32 	%r4601, %r4598, %r4599, 28;
	mov.b64 	%rd6671, {%r4601, %r4600};
	shf.l.wrap.b32 	%r4602, %r4598, %r4599, 30;
	shf.l.wrap.b32 	%r4603, %r4599, %r4598, 30;
	mov.b64 	%rd6672, {%r4603, %r4602};
	xor.b64  	%rd6673, %rd6671, %rd6672;
	shf.l.wrap.b32 	%r4604, %r4598, %r4599, 25;
	shf.l.wrap.b32 	%r4605, %r4599, %r4598, 25;
	mov.b64 	%rd6674, {%r4605, %r4604};
	xor.b64  	%rd6675, %rd6673, %rd6674;
	and.b64  	%rd6676, %rd6644, %rd6607;
	or.b64  	%rd6677, %rd6644, %rd6607;
	and.b64  	%rd6678, %rd6677, %rd6570;
	or.b64  	%rd6679, %rd6678, %rd6676;
	add.s64 	%rd6680, %rd6679, %rd6675;
	add.s64 	%rd6681, %rd6680, %rd6669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4606,%dummy}, %rd6620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4607}, %rd6620;
	}
	shf.r.wrap.b32 	%r4608, %r4607, %r4606, 19;
	shf.r.wrap.b32 	%r4609, %r4606, %r4607, 19;
	mov.b64 	%rd6682, {%r4609, %r4608};
	shf.l.wrap.b32 	%r4610, %r4606, %r4607, 3;
	shf.l.wrap.b32 	%r4611, %r4607, %r4606, 3;
	mov.b64 	%rd6683, {%r4611, %r4610};
	xor.b64  	%rd6684, %rd6682, %rd6683;
	shr.u64 	%rd6685, %rd6620, 6;
	xor.b64  	%rd6686, %rd6684, %rd6685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4612,%dummy}, %rd6121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4613}, %rd6121;
	}
	shf.r.wrap.b32 	%r4614, %r4613, %r4612, 1;
	shf.r.wrap.b32 	%r4615, %r4612, %r4613, 1;
	mov.b64 	%rd6687, {%r4615, %r4614};
	shf.r.wrap.b32 	%r4616, %r4613, %r4612, 8;
	shf.r.wrap.b32 	%r4617, %r4612, %r4613, 8;
	mov.b64 	%rd6688, {%r4617, %r4616};
	xor.b64  	%rd6689, %rd6687, %rd6688;
	shr.u64 	%rd6690, %rd6121, 7;
	xor.b64  	%rd6691, %rd6689, %rd6690;
	add.s64 	%rd6692, %rd6691, %rd6119;
	add.s64 	%rd6693, %rd6692, %rd6137;
	add.s64 	%rd6694, %rd6693, %rd6686;
	add.s64 	%rd6695, %rd6694, %rd6559;
	xor.b64  	%rd6696, %rd6633, %rd6596;
	and.b64  	%rd6697, %rd6670, %rd6696;
	xor.b64  	%rd6698, %rd6697, %rd6596;
	add.s64 	%rd6699, %rd6695, %rd6698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4618,%dummy}, %rd6670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4619}, %rd6670;
	}
	shf.r.wrap.b32 	%r4620, %r4619, %r4618, 14;
	shf.r.wrap.b32 	%r4621, %r4618, %r4619, 14;
	mov.b64 	%rd6700, {%r4621, %r4620};
	shf.r.wrap.b32 	%r4622, %r4619, %r4618, 18;
	shf.r.wrap.b32 	%r4623, %r4618, %r4619, 18;
	mov.b64 	%rd6701, {%r4623, %r4622};
	xor.b64  	%rd6702, %rd6700, %rd6701;
	shf.l.wrap.b32 	%r4624, %r4618, %r4619, 23;
	shf.l.wrap.b32 	%r4625, %r4619, %r4618, 23;
	mov.b64 	%rd6703, {%r4625, %r4624};
	xor.b64  	%rd6704, %rd6702, %rd6703;
	add.s64 	%rd6705, %rd6699, %rd6704;
	add.s64 	%rd6706, %rd6705, 3308224258029322869;
	add.s64 	%rd6707, %rd6706, %rd6570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4626,%dummy}, %rd6681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4627}, %rd6681;
	}
	shf.r.wrap.b32 	%r4628, %r4627, %r4626, 28;
	shf.r.wrap.b32 	%r4629, %r4626, %r4627, 28;
	mov.b64 	%rd6708, {%r4629, %r4628};
	shf.l.wrap.b32 	%r4630, %r4626, %r4627, 30;
	shf.l.wrap.b32 	%r4631, %r4627, %r4626, 30;
	mov.b64 	%rd6709, {%r4631, %r4630};
	xor.b64  	%rd6710, %rd6708, %rd6709;
	shf.l.wrap.b32 	%r4632, %r4626, %r4627, 25;
	shf.l.wrap.b32 	%r4633, %r4627, %r4626, 25;
	mov.b64 	%rd6711, {%r4633, %r4632};
	xor.b64  	%rd6712, %rd6710, %rd6711;
	and.b64  	%rd6713, %rd6681, %rd6644;
	or.b64  	%rd6714, %rd6681, %rd6644;
	and.b64  	%rd6715, %rd6714, %rd6607;
	or.b64  	%rd6716, %rd6715, %rd6713;
	add.s64 	%rd6717, %rd6716, %rd6712;
	add.s64 	%rd6718, %rd6717, %rd6706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4634,%dummy}, %rd6657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4635}, %rd6657;
	}
	shf.r.wrap.b32 	%r4636, %r4635, %r4634, 19;
	shf.r.wrap.b32 	%r4637, %r4634, %r4635, 19;
	mov.b64 	%rd6719, {%r4637, %r4636};
	shf.l.wrap.b32 	%r4638, %r4634, %r4635, 3;
	shf.l.wrap.b32 	%r4639, %r4635, %r4634, 3;
	mov.b64 	%rd6720, {%r4639, %r4638};
	xor.b64  	%rd6721, %rd6719, %rd6720;
	shr.u64 	%rd6722, %rd6657, 6;
	xor.b64  	%rd6723, %rd6721, %rd6722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4640,%dummy}, %rd6123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4641}, %rd6123;
	}
	shf.r.wrap.b32 	%r4642, %r4641, %r4640, 1;
	shf.r.wrap.b32 	%r4643, %r4640, %r4641, 1;
	mov.b64 	%rd6724, {%r4643, %r4642};
	shf.r.wrap.b32 	%r4644, %r4641, %r4640, 8;
	shf.r.wrap.b32 	%r4645, %r4640, %r4641, 8;
	mov.b64 	%rd6725, {%r4645, %r4644};
	xor.b64  	%rd6726, %rd6724, %rd6725;
	shr.u64 	%rd6727, %rd6123, 7;
	xor.b64  	%rd6728, %rd6726, %rd6727;
	add.s64 	%rd6729, %rd6728, %rd6121;
	add.s64 	%rd6730, %rd6729, %rd6139;
	add.s64 	%rd6731, %rd6730, %rd6723;
	add.s64 	%rd6732, %rd6731, %rd6596;
	xor.b64  	%rd6733, %rd6670, %rd6633;
	and.b64  	%rd6734, %rd6707, %rd6733;
	xor.b64  	%rd6735, %rd6734, %rd6633;
	add.s64 	%rd6736, %rd6732, %rd6735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4646,%dummy}, %rd6707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4647}, %rd6707;
	}
	shf.r.wrap.b32 	%r4648, %r4647, %r4646, 14;
	shf.r.wrap.b32 	%r4649, %r4646, %r4647, 14;
	mov.b64 	%rd6737, {%r4649, %r4648};
	shf.r.wrap.b32 	%r4650, %r4647, %r4646, 18;
	shf.r.wrap.b32 	%r4651, %r4646, %r4647, 18;
	mov.b64 	%rd6738, {%r4651, %r4650};
	xor.b64  	%rd6739, %rd6737, %rd6738;
	shf.l.wrap.b32 	%r4652, %r4646, %r4647, 23;
	shf.l.wrap.b32 	%r4653, %r4647, %r4646, 23;
	mov.b64 	%rd6740, {%r4653, %r4652};
	xor.b64  	%rd6741, %rd6739, %rd6740;
	add.s64 	%rd6742, %rd6736, %rd6741;
	add.s64 	%rd6743, %rd6742, 5365058923640841347;
	add.s64 	%rd6744, %rd6743, %rd6607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4654,%dummy}, %rd6718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4655}, %rd6718;
	}
	shf.r.wrap.b32 	%r4656, %r4655, %r4654, 28;
	shf.r.wrap.b32 	%r4657, %r4654, %r4655, 28;
	mov.b64 	%rd6745, {%r4657, %r4656};
	shf.l.wrap.b32 	%r4658, %r4654, %r4655, 30;
	shf.l.wrap.b32 	%r4659, %r4655, %r4654, 30;
	mov.b64 	%rd6746, {%r4659, %r4658};
	xor.b64  	%rd6747, %rd6745, %rd6746;
	shf.l.wrap.b32 	%r4660, %r4654, %r4655, 25;
	shf.l.wrap.b32 	%r4661, %r4655, %r4654, 25;
	mov.b64 	%rd6748, {%r4661, %r4660};
	xor.b64  	%rd6749, %rd6747, %rd6748;
	and.b64  	%rd6750, %rd6718, %rd6681;
	or.b64  	%rd6751, %rd6718, %rd6681;
	and.b64  	%rd6752, %rd6751, %rd6644;
	or.b64  	%rd6753, %rd6752, %rd6750;
	add.s64 	%rd6754, %rd6753, %rd6749;
	add.s64 	%rd6755, %rd6754, %rd6743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4662,%dummy}, %rd6694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4663}, %rd6694;
	}
	shf.r.wrap.b32 	%r4664, %r4663, %r4662, 19;
	shf.r.wrap.b32 	%r4665, %r4662, %r4663, 19;
	mov.b64 	%rd6756, {%r4665, %r4664};
	shf.l.wrap.b32 	%r4666, %r4662, %r4663, 3;
	shf.l.wrap.b32 	%r4667, %r4663, %r4662, 3;
	mov.b64 	%rd6757, {%r4667, %r4666};
	xor.b64  	%rd6758, %rd6756, %rd6757;
	shr.u64 	%rd6759, %rd6694, 6;
	xor.b64  	%rd6760, %rd6758, %rd6759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4668,%dummy}, %rd6125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4669}, %rd6125;
	}
	shf.r.wrap.b32 	%r4670, %r4669, %r4668, 1;
	shf.r.wrap.b32 	%r4671, %r4668, %r4669, 1;
	mov.b64 	%rd6761, {%r4671, %r4670};
	shf.r.wrap.b32 	%r4672, %r4669, %r4668, 8;
	shf.r.wrap.b32 	%r4673, %r4668, %r4669, 8;
	mov.b64 	%rd6762, {%r4673, %r4672};
	xor.b64  	%rd6763, %rd6761, %rd6762;
	shr.u64 	%rd6764, %rd6125, 7;
	xor.b64  	%rd6765, %rd6763, %rd6764;
	add.s64 	%rd6766, %rd6765, %rd6123;
	add.s64 	%rd6767, %rd6766, %rd6141;
	add.s64 	%rd6768, %rd6767, %rd6760;
	add.s64 	%rd6769, %rd6768, %rd6633;
	xor.b64  	%rd6770, %rd6707, %rd6670;
	and.b64  	%rd6771, %rd6744, %rd6770;
	xor.b64  	%rd6772, %rd6771, %rd6670;
	add.s64 	%rd6773, %rd6769, %rd6772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4674,%dummy}, %rd6744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4675}, %rd6744;
	}
	shf.r.wrap.b32 	%r4676, %r4675, %r4674, 14;
	shf.r.wrap.b32 	%r4677, %r4674, %r4675, 14;
	mov.b64 	%rd6774, {%r4677, %r4676};
	shf.r.wrap.b32 	%r4678, %r4675, %r4674, 18;
	shf.r.wrap.b32 	%r4679, %r4674, %r4675, 18;
	mov.b64 	%rd6775, {%r4679, %r4678};
	xor.b64  	%rd6776, %rd6774, %rd6775;
	shf.l.wrap.b32 	%r4680, %r4674, %r4675, 23;
	shf.l.wrap.b32 	%r4681, %r4675, %r4674, 23;
	mov.b64 	%rd6777, {%r4681, %r4680};
	xor.b64  	%rd6778, %rd6776, %rd6777;
	add.s64 	%rd6779, %rd6773, %rd6778;
	add.s64 	%rd6780, %rd6779, 6679025012923562964;
	add.s64 	%rd6781, %rd6780, %rd6644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4682,%dummy}, %rd6755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4683}, %rd6755;
	}
	shf.r.wrap.b32 	%r4684, %r4683, %r4682, 28;
	shf.r.wrap.b32 	%r4685, %r4682, %r4683, 28;
	mov.b64 	%rd6782, {%r4685, %r4684};
	shf.l.wrap.b32 	%r4686, %r4682, %r4683, 30;
	shf.l.wrap.b32 	%r4687, %r4683, %r4682, 30;
	mov.b64 	%rd6783, {%r4687, %r4686};
	xor.b64  	%rd6784, %rd6782, %rd6783;
	shf.l.wrap.b32 	%r4688, %r4682, %r4683, 25;
	shf.l.wrap.b32 	%r4689, %r4683, %r4682, 25;
	mov.b64 	%rd6785, {%r4689, %r4688};
	xor.b64  	%rd6786, %rd6784, %rd6785;
	and.b64  	%rd6787, %rd6755, %rd6718;
	or.b64  	%rd6788, %rd6755, %rd6718;
	and.b64  	%rd6789, %rd6788, %rd6681;
	or.b64  	%rd6790, %rd6789, %rd6787;
	add.s64 	%rd6791, %rd6790, %rd6786;
	add.s64 	%rd6792, %rd6791, %rd6780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4690,%dummy}, %rd6731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4691}, %rd6731;
	}
	shf.r.wrap.b32 	%r4692, %r4691, %r4690, 19;
	shf.r.wrap.b32 	%r4693, %r4690, %r4691, 19;
	mov.b64 	%rd6793, {%r4693, %r4692};
	shf.l.wrap.b32 	%r4694, %r4690, %r4691, 3;
	shf.l.wrap.b32 	%r4695, %r4691, %r4690, 3;
	mov.b64 	%rd6794, {%r4695, %r4694};
	xor.b64  	%rd6795, %rd6793, %rd6794;
	shr.u64 	%rd6796, %rd6731, 6;
	xor.b64  	%rd6797, %rd6795, %rd6796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4696,%dummy}, %rd6127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4697}, %rd6127;
	}
	shf.r.wrap.b32 	%r4698, %r4697, %r4696, 1;
	shf.r.wrap.b32 	%r4699, %r4696, %r4697, 1;
	mov.b64 	%rd6798, {%r4699, %r4698};
	shf.r.wrap.b32 	%r4700, %r4697, %r4696, 8;
	shf.r.wrap.b32 	%r4701, %r4696, %r4697, 8;
	mov.b64 	%rd6799, {%r4701, %r4700};
	xor.b64  	%rd6800, %rd6798, %rd6799;
	shr.u64 	%rd6801, %rd6127, 7;
	xor.b64  	%rd6802, %rd6800, %rd6801;
	add.s64 	%rd6803, %rd6802, %rd6125;
	add.s64 	%rd6804, %rd6803, %rd6546;
	add.s64 	%rd6805, %rd6804, %rd6797;
	add.s64 	%rd6806, %rd6805, %rd6670;
	xor.b64  	%rd6807, %rd6744, %rd6707;
	and.b64  	%rd6808, %rd6781, %rd6807;
	xor.b64  	%rd6809, %rd6808, %rd6707;
	add.s64 	%rd6810, %rd6806, %rd6809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4702,%dummy}, %rd6781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4703}, %rd6781;
	}
	shf.r.wrap.b32 	%r4704, %r4703, %r4702, 14;
	shf.r.wrap.b32 	%r4705, %r4702, %r4703, 14;
	mov.b64 	%rd6811, {%r4705, %r4704};
	shf.r.wrap.b32 	%r4706, %r4703, %r4702, 18;
	shf.r.wrap.b32 	%r4707, %r4702, %r4703, 18;
	mov.b64 	%rd6812, {%r4707, %r4706};
	xor.b64  	%rd6813, %rd6811, %rd6812;
	shf.l.wrap.b32 	%r4708, %r4702, %r4703, 23;
	shf.l.wrap.b32 	%r4709, %r4703, %r4702, 23;
	mov.b64 	%rd6814, {%r4709, %r4708};
	xor.b64  	%rd6815, %rd6813, %rd6814;
	add.s64 	%rd6816, %rd6810, %rd6815;
	add.s64 	%rd6817, %rd6816, 8573033837759648693;
	add.s64 	%rd6818, %rd6817, %rd6681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4710,%dummy}, %rd6792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4711}, %rd6792;
	}
	shf.r.wrap.b32 	%r4712, %r4711, %r4710, 28;
	shf.r.wrap.b32 	%r4713, %r4710, %r4711, 28;
	mov.b64 	%rd6819, {%r4713, %r4712};
	shf.l.wrap.b32 	%r4714, %r4710, %r4711, 30;
	shf.l.wrap.b32 	%r4715, %r4711, %r4710, 30;
	mov.b64 	%rd6820, {%r4715, %r4714};
	xor.b64  	%rd6821, %rd6819, %rd6820;
	shf.l.wrap.b32 	%r4716, %r4710, %r4711, 25;
	shf.l.wrap.b32 	%r4717, %r4711, %r4710, 25;
	mov.b64 	%rd6822, {%r4717, %r4716};
	xor.b64  	%rd6823, %rd6821, %rd6822;
	and.b64  	%rd6824, %rd6792, %rd6755;
	or.b64  	%rd6825, %rd6792, %rd6755;
	and.b64  	%rd6826, %rd6825, %rd6718;
	or.b64  	%rd6827, %rd6826, %rd6824;
	add.s64 	%rd6828, %rd6827, %rd6823;
	add.s64 	%rd6829, %rd6828, %rd6817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4718,%dummy}, %rd6768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4719}, %rd6768;
	}
	shf.r.wrap.b32 	%r4720, %r4719, %r4718, 19;
	shf.r.wrap.b32 	%r4721, %r4718, %r4719, 19;
	mov.b64 	%rd6830, {%r4721, %r4720};
	shf.l.wrap.b32 	%r4722, %r4718, %r4719, 3;
	shf.l.wrap.b32 	%r4723, %r4719, %r4718, 3;
	mov.b64 	%rd6831, {%r4723, %r4722};
	xor.b64  	%rd6832, %rd6830, %rd6831;
	shr.u64 	%rd6833, %rd6768, 6;
	xor.b64  	%rd6834, %rd6832, %rd6833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4724,%dummy}, %rd6129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4725}, %rd6129;
	}
	shf.r.wrap.b32 	%r4726, %r4725, %r4724, 1;
	shf.r.wrap.b32 	%r4727, %r4724, %r4725, 1;
	mov.b64 	%rd6835, {%r4727, %r4726};
	shf.r.wrap.b32 	%r4728, %r4725, %r4724, 8;
	shf.r.wrap.b32 	%r4729, %r4724, %r4725, 8;
	mov.b64 	%rd6836, {%r4729, %r4728};
	xor.b64  	%rd6837, %rd6835, %rd6836;
	shr.u64 	%rd6838, %rd6129, 7;
	xor.b64  	%rd6839, %rd6837, %rd6838;
	add.s64 	%rd6840, %rd6839, %rd6127;
	add.s64 	%rd6841, %rd6840, %rd6583;
	add.s64 	%rd6842, %rd6841, %rd6834;
	add.s64 	%rd6843, %rd6842, %rd6707;
	xor.b64  	%rd6844, %rd6781, %rd6744;
	and.b64  	%rd6845, %rd6818, %rd6844;
	xor.b64  	%rd6846, %rd6845, %rd6744;
	add.s64 	%rd6847, %rd6843, %rd6846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4730,%dummy}, %rd6818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4731}, %rd6818;
	}
	shf.r.wrap.b32 	%r4732, %r4731, %r4730, 14;
	shf.r.wrap.b32 	%r4733, %r4730, %r4731, 14;
	mov.b64 	%rd6848, {%r4733, %r4732};
	shf.r.wrap.b32 	%r4734, %r4731, %r4730, 18;
	shf.r.wrap.b32 	%r4735, %r4730, %r4731, 18;
	mov.b64 	%rd6849, {%r4735, %r4734};
	xor.b64  	%rd6850, %rd6848, %rd6849;
	shf.l.wrap.b32 	%r4736, %r4730, %r4731, 23;
	shf.l.wrap.b32 	%r4737, %r4731, %r4730, 23;
	mov.b64 	%rd6851, {%r4737, %r4736};
	xor.b64  	%rd6852, %rd6850, %rd6851;
	add.s64 	%rd6853, %rd6847, %rd6852;
	add.s64 	%rd6854, %rd6853, -7476448914759557205;
	add.s64 	%rd6855, %rd6854, %rd6718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4738,%dummy}, %rd6829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4739}, %rd6829;
	}
	shf.r.wrap.b32 	%r4740, %r4739, %r4738, 28;
	shf.r.wrap.b32 	%r4741, %r4738, %r4739, 28;
	mov.b64 	%rd6856, {%r4741, %r4740};
	shf.l.wrap.b32 	%r4742, %r4738, %r4739, 30;
	shf.l.wrap.b32 	%r4743, %r4739, %r4738, 30;
	mov.b64 	%rd6857, {%r4743, %r4742};
	xor.b64  	%rd6858, %rd6856, %rd6857;
	shf.l.wrap.b32 	%r4744, %r4738, %r4739, 25;
	shf.l.wrap.b32 	%r4745, %r4739, %r4738, 25;
	mov.b64 	%rd6859, {%r4745, %r4744};
	xor.b64  	%rd6860, %rd6858, %rd6859;
	and.b64  	%rd6861, %rd6829, %rd6792;
	or.b64  	%rd6862, %rd6829, %rd6792;
	and.b64  	%rd6863, %rd6862, %rd6755;
	or.b64  	%rd6864, %rd6863, %rd6861;
	add.s64 	%rd6865, %rd6864, %rd6860;
	add.s64 	%rd6866, %rd6865, %rd6854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4746,%dummy}, %rd6805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4747}, %rd6805;
	}
	shf.r.wrap.b32 	%r4748, %r4747, %r4746, 19;
	shf.r.wrap.b32 	%r4749, %r4746, %r4747, 19;
	mov.b64 	%rd6867, {%r4749, %r4748};
	shf.l.wrap.b32 	%r4750, %r4746, %r4747, 3;
	shf.l.wrap.b32 	%r4751, %r4747, %r4746, 3;
	mov.b64 	%rd6868, {%r4751, %r4750};
	xor.b64  	%rd6869, %rd6867, %rd6868;
	shr.u64 	%rd6870, %rd6805, 6;
	xor.b64  	%rd6871, %rd6869, %rd6870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4752,%dummy}, %rd6131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4753}, %rd6131;
	}
	shf.r.wrap.b32 	%r4754, %r4753, %r4752, 1;
	shf.r.wrap.b32 	%r4755, %r4752, %r4753, 1;
	mov.b64 	%rd6872, {%r4755, %r4754};
	shf.r.wrap.b32 	%r4756, %r4753, %r4752, 8;
	shf.r.wrap.b32 	%r4757, %r4752, %r4753, 8;
	mov.b64 	%rd6873, {%r4757, %r4756};
	xor.b64  	%rd6874, %rd6872, %rd6873;
	shr.u64 	%rd6875, %rd6131, 7;
	xor.b64  	%rd6876, %rd6874, %rd6875;
	add.s64 	%rd6877, %rd6876, %rd6129;
	add.s64 	%rd6878, %rd6877, %rd6620;
	add.s64 	%rd6879, %rd6878, %rd6871;
	add.s64 	%rd6880, %rd6879, %rd6744;
	xor.b64  	%rd6881, %rd6818, %rd6781;
	and.b64  	%rd6882, %rd6855, %rd6881;
	xor.b64  	%rd6883, %rd6882, %rd6781;
	add.s64 	%rd6884, %rd6880, %rd6883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4758,%dummy}, %rd6855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4759}, %rd6855;
	}
	shf.r.wrap.b32 	%r4760, %r4759, %r4758, 14;
	shf.r.wrap.b32 	%r4761, %r4758, %r4759, 14;
	mov.b64 	%rd6885, {%r4761, %r4760};
	shf.r.wrap.b32 	%r4762, %r4759, %r4758, 18;
	shf.r.wrap.b32 	%r4763, %r4758, %r4759, 18;
	mov.b64 	%rd6886, {%r4763, %r4762};
	xor.b64  	%rd6887, %rd6885, %rd6886;
	shf.l.wrap.b32 	%r4764, %r4758, %r4759, 23;
	shf.l.wrap.b32 	%r4765, %r4759, %r4758, 23;
	mov.b64 	%rd6888, {%r4765, %r4764};
	xor.b64  	%rd6889, %rd6887, %rd6888;
	add.s64 	%rd6890, %rd6884, %rd6889;
	add.s64 	%rd6891, %rd6890, -6327057829258317296;
	add.s64 	%rd6892, %rd6891, %rd6755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4766,%dummy}, %rd6866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4767}, %rd6866;
	}
	shf.r.wrap.b32 	%r4768, %r4767, %r4766, 28;
	shf.r.wrap.b32 	%r4769, %r4766, %r4767, 28;
	mov.b64 	%rd6893, {%r4769, %r4768};
	shf.l.wrap.b32 	%r4770, %r4766, %r4767, 30;
	shf.l.wrap.b32 	%r4771, %r4767, %r4766, 30;
	mov.b64 	%rd6894, {%r4771, %r4770};
	xor.b64  	%rd6895, %rd6893, %rd6894;
	shf.l.wrap.b32 	%r4772, %r4766, %r4767, 25;
	shf.l.wrap.b32 	%r4773, %r4767, %r4766, 25;
	mov.b64 	%rd6896, {%r4773, %r4772};
	xor.b64  	%rd6897, %rd6895, %rd6896;
	and.b64  	%rd6898, %rd6866, %rd6829;
	or.b64  	%rd6899, %rd6866, %rd6829;
	and.b64  	%rd6900, %rd6899, %rd6792;
	or.b64  	%rd6901, %rd6900, %rd6898;
	add.s64 	%rd6902, %rd6901, %rd6897;
	add.s64 	%rd6903, %rd6902, %rd6891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4774,%dummy}, %rd6842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4775}, %rd6842;
	}
	shf.r.wrap.b32 	%r4776, %r4775, %r4774, 19;
	shf.r.wrap.b32 	%r4777, %r4774, %r4775, 19;
	mov.b64 	%rd6904, {%r4777, %r4776};
	shf.l.wrap.b32 	%r4778, %r4774, %r4775, 3;
	shf.l.wrap.b32 	%r4779, %r4775, %r4774, 3;
	mov.b64 	%rd6905, {%r4779, %r4778};
	xor.b64  	%rd6906, %rd6904, %rd6905;
	shr.u64 	%rd6907, %rd6842, 6;
	xor.b64  	%rd6908, %rd6906, %rd6907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4780,%dummy}, %rd6133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4781}, %rd6133;
	}
	shf.r.wrap.b32 	%r4782, %r4781, %r4780, 1;
	shf.r.wrap.b32 	%r4783, %r4780, %r4781, 1;
	mov.b64 	%rd6909, {%r4783, %r4782};
	shf.r.wrap.b32 	%r4784, %r4781, %r4780, 8;
	shf.r.wrap.b32 	%r4785, %r4780, %r4781, 8;
	mov.b64 	%rd6910, {%r4785, %r4784};
	xor.b64  	%rd6911, %rd6909, %rd6910;
	shr.u64 	%rd6912, %rd6133, 7;
	xor.b64  	%rd6913, %rd6911, %rd6912;
	add.s64 	%rd6914, %rd6913, %rd6131;
	add.s64 	%rd6915, %rd6914, %rd6657;
	add.s64 	%rd6916, %rd6915, %rd6908;
	add.s64 	%rd6917, %rd6916, %rd6781;
	xor.b64  	%rd6918, %rd6855, %rd6818;
	and.b64  	%rd6919, %rd6892, %rd6918;
	xor.b64  	%rd6920, %rd6919, %rd6818;
	add.s64 	%rd6921, %rd6917, %rd6920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4786,%dummy}, %rd6892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4787}, %rd6892;
	}
	shf.r.wrap.b32 	%r4788, %r4787, %r4786, 14;
	shf.r.wrap.b32 	%r4789, %r4786, %r4787, 14;
	mov.b64 	%rd6922, {%r4789, %r4788};
	shf.r.wrap.b32 	%r4790, %r4787, %r4786, 18;
	shf.r.wrap.b32 	%r4791, %r4786, %r4787, 18;
	mov.b64 	%rd6923, {%r4791, %r4790};
	xor.b64  	%rd6924, %rd6922, %rd6923;
	shf.l.wrap.b32 	%r4792, %r4786, %r4787, 23;
	shf.l.wrap.b32 	%r4793, %r4787, %r4786, 23;
	mov.b64 	%rd6925, {%r4793, %r4792};
	xor.b64  	%rd6926, %rd6924, %rd6925;
	add.s64 	%rd6927, %rd6921, %rd6926;
	add.s64 	%rd6928, %rd6927, -5763719355590565569;
	add.s64 	%rd6929, %rd6928, %rd6792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4794,%dummy}, %rd6903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4795}, %rd6903;
	}
	shf.r.wrap.b32 	%r4796, %r4795, %r4794, 28;
	shf.r.wrap.b32 	%r4797, %r4794, %r4795, 28;
	mov.b64 	%rd6930, {%r4797, %r4796};
	shf.l.wrap.b32 	%r4798, %r4794, %r4795, 30;
	shf.l.wrap.b32 	%r4799, %r4795, %r4794, 30;
	mov.b64 	%rd6931, {%r4799, %r4798};
	xor.b64  	%rd6932, %rd6930, %rd6931;
	shf.l.wrap.b32 	%r4800, %r4794, %r4795, 25;
	shf.l.wrap.b32 	%r4801, %r4795, %r4794, 25;
	mov.b64 	%rd6933, {%r4801, %r4800};
	xor.b64  	%rd6934, %rd6932, %rd6933;
	and.b64  	%rd6935, %rd6903, %rd6866;
	or.b64  	%rd6936, %rd6903, %rd6866;
	and.b64  	%rd6937, %rd6936, %rd6829;
	or.b64  	%rd6938, %rd6937, %rd6935;
	add.s64 	%rd6939, %rd6938, %rd6934;
	add.s64 	%rd6940, %rd6939, %rd6928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4802,%dummy}, %rd6879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4803}, %rd6879;
	}
	shf.r.wrap.b32 	%r4804, %r4803, %r4802, 19;
	shf.r.wrap.b32 	%r4805, %r4802, %r4803, 19;
	mov.b64 	%rd6941, {%r4805, %r4804};
	shf.l.wrap.b32 	%r4806, %r4802, %r4803, 3;
	shf.l.wrap.b32 	%r4807, %r4803, %r4802, 3;
	mov.b64 	%rd6942, {%r4807, %r4806};
	xor.b64  	%rd6943, %rd6941, %rd6942;
	shr.u64 	%rd6944, %rd6879, 6;
	xor.b64  	%rd6945, %rd6943, %rd6944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4808,%dummy}, %rd6135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4809}, %rd6135;
	}
	shf.r.wrap.b32 	%r4810, %r4809, %r4808, 1;
	shf.r.wrap.b32 	%r4811, %r4808, %r4809, 1;
	mov.b64 	%rd6946, {%r4811, %r4810};
	shf.r.wrap.b32 	%r4812, %r4809, %r4808, 8;
	shf.r.wrap.b32 	%r4813, %r4808, %r4809, 8;
	mov.b64 	%rd6947, {%r4813, %r4812};
	xor.b64  	%rd6948, %rd6946, %rd6947;
	shr.u64 	%rd6949, %rd6135, 7;
	xor.b64  	%rd6950, %rd6948, %rd6949;
	add.s64 	%rd6951, %rd6950, %rd6133;
	add.s64 	%rd6952, %rd6951, %rd6694;
	add.s64 	%rd6953, %rd6952, %rd6945;
	add.s64 	%rd6954, %rd6953, %rd6818;
	xor.b64  	%rd6955, %rd6892, %rd6855;
	and.b64  	%rd6956, %rd6929, %rd6955;
	xor.b64  	%rd6957, %rd6956, %rd6855;
	add.s64 	%rd6958, %rd6954, %rd6957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4814,%dummy}, %rd6929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4815}, %rd6929;
	}
	shf.r.wrap.b32 	%r4816, %r4815, %r4814, 14;
	shf.r.wrap.b32 	%r4817, %r4814, %r4815, 14;
	mov.b64 	%rd6959, {%r4817, %r4816};
	shf.r.wrap.b32 	%r4818, %r4815, %r4814, 18;
	shf.r.wrap.b32 	%r4819, %r4814, %r4815, 18;
	mov.b64 	%rd6960, {%r4819, %r4818};
	xor.b64  	%rd6961, %rd6959, %rd6960;
	shf.l.wrap.b32 	%r4820, %r4814, %r4815, 23;
	shf.l.wrap.b32 	%r4821, %r4815, %r4814, 23;
	mov.b64 	%rd6962, {%r4821, %r4820};
	xor.b64  	%rd6963, %rd6961, %rd6962;
	add.s64 	%rd6964, %rd6958, %rd6963;
	add.s64 	%rd6965, %rd6964, -4658551843659510044;
	add.s64 	%rd6966, %rd6965, %rd6829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4822,%dummy}, %rd6940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4823}, %rd6940;
	}
	shf.r.wrap.b32 	%r4824, %r4823, %r4822, 28;
	shf.r.wrap.b32 	%r4825, %r4822, %r4823, 28;
	mov.b64 	%rd6967, {%r4825, %r4824};
	shf.l.wrap.b32 	%r4826, %r4822, %r4823, 30;
	shf.l.wrap.b32 	%r4827, %r4823, %r4822, 30;
	mov.b64 	%rd6968, {%r4827, %r4826};
	xor.b64  	%rd6969, %rd6967, %rd6968;
	shf.l.wrap.b32 	%r4828, %r4822, %r4823, 25;
	shf.l.wrap.b32 	%r4829, %r4823, %r4822, 25;
	mov.b64 	%rd6970, {%r4829, %r4828};
	xor.b64  	%rd6971, %rd6969, %rd6970;
	and.b64  	%rd6972, %rd6940, %rd6903;
	or.b64  	%rd6973, %rd6940, %rd6903;
	and.b64  	%rd6974, %rd6973, %rd6866;
	or.b64  	%rd6975, %rd6974, %rd6972;
	add.s64 	%rd6976, %rd6975, %rd6971;
	add.s64 	%rd6977, %rd6976, %rd6965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4830,%dummy}, %rd6916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4831}, %rd6916;
	}
	shf.r.wrap.b32 	%r4832, %r4831, %r4830, 19;
	shf.r.wrap.b32 	%r4833, %r4830, %r4831, 19;
	mov.b64 	%rd6978, {%r4833, %r4832};
	shf.l.wrap.b32 	%r4834, %r4830, %r4831, 3;
	shf.l.wrap.b32 	%r4835, %r4831, %r4830, 3;
	mov.b64 	%rd6979, {%r4835, %r4834};
	xor.b64  	%rd6980, %rd6978, %rd6979;
	shr.u64 	%rd6981, %rd6916, 6;
	xor.b64  	%rd6982, %rd6980, %rd6981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4836,%dummy}, %rd6137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4837}, %rd6137;
	}
	shf.r.wrap.b32 	%r4838, %r4837, %r4836, 1;
	shf.r.wrap.b32 	%r4839, %r4836, %r4837, 1;
	mov.b64 	%rd6983, {%r4839, %r4838};
	shf.r.wrap.b32 	%r4840, %r4837, %r4836, 8;
	shf.r.wrap.b32 	%r4841, %r4836, %r4837, 8;
	mov.b64 	%rd6984, {%r4841, %r4840};
	xor.b64  	%rd6985, %rd6983, %rd6984;
	shr.u64 	%rd6986, %rd6137, 7;
	xor.b64  	%rd6987, %rd6985, %rd6986;
	add.s64 	%rd6988, %rd6987, %rd6135;
	add.s64 	%rd6989, %rd6988, %rd6731;
	add.s64 	%rd6990, %rd6989, %rd6982;
	add.s64 	%rd6991, %rd6990, %rd6855;
	xor.b64  	%rd6992, %rd6929, %rd6892;
	and.b64  	%rd6993, %rd6966, %rd6992;
	xor.b64  	%rd6994, %rd6993, %rd6892;
	add.s64 	%rd6995, %rd6991, %rd6994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4842,%dummy}, %rd6966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4843}, %rd6966;
	}
	shf.r.wrap.b32 	%r4844, %r4843, %r4842, 14;
	shf.r.wrap.b32 	%r4845, %r4842, %r4843, 14;
	mov.b64 	%rd6996, {%r4845, %r4844};
	shf.r.wrap.b32 	%r4846, %r4843, %r4842, 18;
	shf.r.wrap.b32 	%r4847, %r4842, %r4843, 18;
	mov.b64 	%rd6997, {%r4847, %r4846};
	xor.b64  	%rd6998, %rd6996, %rd6997;
	shf.l.wrap.b32 	%r4848, %r4842, %r4843, 23;
	shf.l.wrap.b32 	%r4849, %r4843, %r4842, 23;
	mov.b64 	%rd6999, {%r4849, %r4848};
	xor.b64  	%rd7000, %rd6998, %rd6999;
	add.s64 	%rd7001, %rd6995, %rd7000;
	add.s64 	%rd7002, %rd7001, -4116276920077217854;
	add.s64 	%rd7003, %rd7002, %rd6866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4850,%dummy}, %rd6977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4851}, %rd6977;
	}
	shf.r.wrap.b32 	%r4852, %r4851, %r4850, 28;
	shf.r.wrap.b32 	%r4853, %r4850, %r4851, 28;
	mov.b64 	%rd7004, {%r4853, %r4852};
	shf.l.wrap.b32 	%r4854, %r4850, %r4851, 30;
	shf.l.wrap.b32 	%r4855, %r4851, %r4850, 30;
	mov.b64 	%rd7005, {%r4855, %r4854};
	xor.b64  	%rd7006, %rd7004, %rd7005;
	shf.l.wrap.b32 	%r4856, %r4850, %r4851, 25;
	shf.l.wrap.b32 	%r4857, %r4851, %r4850, 25;
	mov.b64 	%rd7007, {%r4857, %r4856};
	xor.b64  	%rd7008, %rd7006, %rd7007;
	and.b64  	%rd7009, %rd6977, %rd6940;
	or.b64  	%rd7010, %rd6977, %rd6940;
	and.b64  	%rd7011, %rd7010, %rd6903;
	or.b64  	%rd7012, %rd7011, %rd7009;
	add.s64 	%rd7013, %rd7012, %rd7008;
	add.s64 	%rd7014, %rd7013, %rd7002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4858,%dummy}, %rd6953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4859}, %rd6953;
	}
	shf.r.wrap.b32 	%r4860, %r4859, %r4858, 19;
	shf.r.wrap.b32 	%r4861, %r4858, %r4859, 19;
	mov.b64 	%rd7015, {%r4861, %r4860};
	shf.l.wrap.b32 	%r4862, %r4858, %r4859, 3;
	shf.l.wrap.b32 	%r4863, %r4859, %r4858, 3;
	mov.b64 	%rd7016, {%r4863, %r4862};
	xor.b64  	%rd7017, %rd7015, %rd7016;
	shr.u64 	%rd7018, %rd6953, 6;
	xor.b64  	%rd7019, %rd7017, %rd7018;
	shf.r.wrap.b32 	%r4864, %r4495, %r4494, 1;
	shf.r.wrap.b32 	%r4865, %r4494, %r4495, 1;
	mov.b64 	%rd7020, {%r4865, %r4864};
	shf.r.wrap.b32 	%r4866, %r4495, %r4494, 8;
	shf.r.wrap.b32 	%r4867, %r4494, %r4495, 8;
	mov.b64 	%rd7021, {%r4867, %r4866};
	xor.b64  	%rd7022, %rd7020, %rd7021;
	shr.u64 	%rd7023, %rd6139, 7;
	xor.b64  	%rd7024, %rd7022, %rd7023;
	add.s64 	%rd7025, %rd7024, %rd6137;
	add.s64 	%rd7026, %rd7025, %rd6768;
	add.s64 	%rd7027, %rd7026, %rd7019;
	add.s64 	%rd7028, %rd7027, %rd6892;
	xor.b64  	%rd7029, %rd6966, %rd6929;
	and.b64  	%rd7030, %rd7003, %rd7029;
	xor.b64  	%rd7031, %rd7030, %rd6929;
	add.s64 	%rd7032, %rd7028, %rd7031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4868,%dummy}, %rd7003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4869}, %rd7003;
	}
	shf.r.wrap.b32 	%r4870, %r4869, %r4868, 14;
	shf.r.wrap.b32 	%r4871, %r4868, %r4869, 14;
	mov.b64 	%rd7033, {%r4871, %r4870};
	shf.r.wrap.b32 	%r4872, %r4869, %r4868, 18;
	shf.r.wrap.b32 	%r4873, %r4868, %r4869, 18;
	mov.b64 	%rd7034, {%r4873, %r4872};
	xor.b64  	%rd7035, %rd7033, %rd7034;
	shf.l.wrap.b32 	%r4874, %r4868, %r4869, 23;
	shf.l.wrap.b32 	%r4875, %r4869, %r4868, 23;
	mov.b64 	%rd7036, {%r4875, %r4874};
	xor.b64  	%rd7037, %rd7035, %rd7036;
	add.s64 	%rd7038, %rd7032, %rd7037;
	add.s64 	%rd7039, %rd7038, -3051310485924567259;
	add.s64 	%rd7040, %rd7039, %rd6903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4876,%dummy}, %rd7014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4877}, %rd7014;
	}
	shf.r.wrap.b32 	%r4878, %r4877, %r4876, 28;
	shf.r.wrap.b32 	%r4879, %r4876, %r4877, 28;
	mov.b64 	%rd7041, {%r4879, %r4878};
	shf.l.wrap.b32 	%r4880, %r4876, %r4877, 30;
	shf.l.wrap.b32 	%r4881, %r4877, %r4876, 30;
	mov.b64 	%rd7042, {%r4881, %r4880};
	xor.b64  	%rd7043, %rd7041, %rd7042;
	shf.l.wrap.b32 	%r4882, %r4876, %r4877, 25;
	shf.l.wrap.b32 	%r4883, %r4877, %r4876, 25;
	mov.b64 	%rd7044, {%r4883, %r4882};
	xor.b64  	%rd7045, %rd7043, %rd7044;
	and.b64  	%rd7046, %rd7014, %rd6977;
	or.b64  	%rd7047, %rd7014, %rd6977;
	and.b64  	%rd7048, %rd7047, %rd6940;
	or.b64  	%rd7049, %rd7048, %rd7046;
	add.s64 	%rd7050, %rd7049, %rd7045;
	add.s64 	%rd7051, %rd7050, %rd7039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4884,%dummy}, %rd6990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4885}, %rd6990;
	}
	shf.r.wrap.b32 	%r4886, %r4885, %r4884, 19;
	shf.r.wrap.b32 	%r4887, %r4884, %r4885, 19;
	mov.b64 	%rd7052, {%r4887, %r4886};
	shf.l.wrap.b32 	%r4888, %r4884, %r4885, 3;
	shf.l.wrap.b32 	%r4889, %r4885, %r4884, 3;
	mov.b64 	%rd7053, {%r4889, %r4888};
	xor.b64  	%rd7054, %rd7052, %rd7053;
	shr.u64 	%rd7055, %rd6990, 6;
	xor.b64  	%rd7056, %rd7054, %rd7055;
	shf.r.wrap.b32 	%r4890, %r4523, %r4522, 1;
	shf.r.wrap.b32 	%r4891, %r4522, %r4523, 1;
	mov.b64 	%rd7057, {%r4891, %r4890};
	shf.r.wrap.b32 	%r4892, %r4523, %r4522, 8;
	shf.r.wrap.b32 	%r4893, %r4522, %r4523, 8;
	mov.b64 	%rd7058, {%r4893, %r4892};
	xor.b64  	%rd7059, %rd7057, %rd7058;
	shr.u64 	%rd7060, %rd6141, 7;
	xor.b64  	%rd7061, %rd7059, %rd7060;
	add.s64 	%rd7062, %rd7061, %rd6139;
	add.s64 	%rd7063, %rd7062, %rd6805;
	add.s64 	%rd7064, %rd7063, %rd7056;
	add.s64 	%rd7065, %rd7064, %rd6929;
	xor.b64  	%rd7066, %rd7003, %rd6966;
	and.b64  	%rd7067, %rd7040, %rd7066;
	xor.b64  	%rd7068, %rd7067, %rd6966;
	add.s64 	%rd7069, %rd7065, %rd7068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4894,%dummy}, %rd7040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4895}, %rd7040;
	}
	shf.r.wrap.b32 	%r4896, %r4895, %r4894, 14;
	shf.r.wrap.b32 	%r4897, %r4894, %r4895, 14;
	mov.b64 	%rd7070, {%r4897, %r4896};
	shf.r.wrap.b32 	%r4898, %r4895, %r4894, 18;
	shf.r.wrap.b32 	%r4899, %r4894, %r4895, 18;
	mov.b64 	%rd7071, {%r4899, %r4898};
	xor.b64  	%rd7072, %rd7070, %rd7071;
	shf.l.wrap.b32 	%r4900, %r4894, %r4895, 23;
	shf.l.wrap.b32 	%r4901, %r4895, %r4894, 23;
	mov.b64 	%rd7073, {%r4901, %r4900};
	xor.b64  	%rd7074, %rd7072, %rd7073;
	add.s64 	%rd7075, %rd7069, %rd7074;
	add.s64 	%rd7076, %rd7075, 489312712824947311;
	add.s64 	%rd7077, %rd7076, %rd6940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4902,%dummy}, %rd7051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4903}, %rd7051;
	}
	shf.r.wrap.b32 	%r4904, %r4903, %r4902, 28;
	shf.r.wrap.b32 	%r4905, %r4902, %r4903, 28;
	mov.b64 	%rd7078, {%r4905, %r4904};
	shf.l.wrap.b32 	%r4906, %r4902, %r4903, 30;
	shf.l.wrap.b32 	%r4907, %r4903, %r4902, 30;
	mov.b64 	%rd7079, {%r4907, %r4906};
	xor.b64  	%rd7080, %rd7078, %rd7079;
	shf.l.wrap.b32 	%r4908, %r4902, %r4903, 25;
	shf.l.wrap.b32 	%r4909, %r4903, %r4902, 25;
	mov.b64 	%rd7081, {%r4909, %r4908};
	xor.b64  	%rd7082, %rd7080, %rd7081;
	and.b64  	%rd7083, %rd7051, %rd7014;
	or.b64  	%rd7084, %rd7051, %rd7014;
	and.b64  	%rd7085, %rd7084, %rd6977;
	or.b64  	%rd7086, %rd7085, %rd7083;
	add.s64 	%rd7087, %rd7086, %rd7082;
	add.s64 	%rd7088, %rd7087, %rd7076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4910,%dummy}, %rd7027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4911}, %rd7027;
	}
	shf.r.wrap.b32 	%r4912, %r4911, %r4910, 19;
	shf.r.wrap.b32 	%r4913, %r4910, %r4911, 19;
	mov.b64 	%rd7089, {%r4913, %r4912};
	shf.l.wrap.b32 	%r4914, %r4910, %r4911, 3;
	shf.l.wrap.b32 	%r4915, %r4911, %r4910, 3;
	mov.b64 	%rd7090, {%r4915, %r4914};
	xor.b64  	%rd7091, %rd7089, %rd7090;
	shr.u64 	%rd7092, %rd7027, 6;
	xor.b64  	%rd7093, %rd7091, %rd7092;
	shf.r.wrap.b32 	%r4916, %r4551, %r4550, 1;
	shf.r.wrap.b32 	%r4917, %r4550, %r4551, 1;
	mov.b64 	%rd7094, {%r4917, %r4916};
	shf.r.wrap.b32 	%r4918, %r4551, %r4550, 8;
	shf.r.wrap.b32 	%r4919, %r4550, %r4551, 8;
	mov.b64 	%rd7095, {%r4919, %r4918};
	xor.b64  	%rd7096, %rd7094, %rd7095;
	shr.u64 	%rd7097, %rd6546, 7;
	xor.b64  	%rd7098, %rd7096, %rd7097;
	add.s64 	%rd7099, %rd7098, %rd6141;
	add.s64 	%rd7100, %rd7099, %rd6842;
	add.s64 	%rd7101, %rd7100, %rd7093;
	add.s64 	%rd7102, %rd7101, %rd6966;
	xor.b64  	%rd7103, %rd7040, %rd7003;
	and.b64  	%rd7104, %rd7077, %rd7103;
	xor.b64  	%rd7105, %rd7104, %rd7003;
	add.s64 	%rd7106, %rd7102, %rd7105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4920,%dummy}, %rd7077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4921}, %rd7077;
	}
	shf.r.wrap.b32 	%r4922, %r4921, %r4920, 14;
	shf.r.wrap.b32 	%r4923, %r4920, %r4921, 14;
	mov.b64 	%rd7107, {%r4923, %r4922};
	shf.r.wrap.b32 	%r4924, %r4921, %r4920, 18;
	shf.r.wrap.b32 	%r4925, %r4920, %r4921, 18;
	mov.b64 	%rd7108, {%r4925, %r4924};
	xor.b64  	%rd7109, %rd7107, %rd7108;
	shf.l.wrap.b32 	%r4926, %r4920, %r4921, 23;
	shf.l.wrap.b32 	%r4927, %r4921, %r4920, 23;
	mov.b64 	%rd7110, {%r4927, %r4926};
	xor.b64  	%rd7111, %rd7109, %rd7110;
	add.s64 	%rd7112, %rd7106, %rd7111;
	add.s64 	%rd7113, %rd7112, 1452737877330783856;
	add.s64 	%rd7114, %rd7113, %rd6977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4928,%dummy}, %rd7088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4929}, %rd7088;
	}
	shf.r.wrap.b32 	%r4930, %r4929, %r4928, 28;
	shf.r.wrap.b32 	%r4931, %r4928, %r4929, 28;
	mov.b64 	%rd7115, {%r4931, %r4930};
	shf.l.wrap.b32 	%r4932, %r4928, %r4929, 30;
	shf.l.wrap.b32 	%r4933, %r4929, %r4928, 30;
	mov.b64 	%rd7116, {%r4933, %r4932};
	xor.b64  	%rd7117, %rd7115, %rd7116;
	shf.l.wrap.b32 	%r4934, %r4928, %r4929, 25;
	shf.l.wrap.b32 	%r4935, %r4929, %r4928, 25;
	mov.b64 	%rd7118, {%r4935, %r4934};
	xor.b64  	%rd7119, %rd7117, %rd7118;
	and.b64  	%rd7120, %rd7088, %rd7051;
	or.b64  	%rd7121, %rd7088, %rd7051;
	and.b64  	%rd7122, %rd7121, %rd7014;
	or.b64  	%rd7123, %rd7122, %rd7120;
	add.s64 	%rd7124, %rd7123, %rd7119;
	add.s64 	%rd7125, %rd7124, %rd7113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4936,%dummy}, %rd7064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4937}, %rd7064;
	}
	shf.r.wrap.b32 	%r4938, %r4937, %r4936, 19;
	shf.r.wrap.b32 	%r4939, %r4936, %r4937, 19;
	mov.b64 	%rd7126, {%r4939, %r4938};
	shf.l.wrap.b32 	%r4940, %r4936, %r4937, 3;
	shf.l.wrap.b32 	%r4941, %r4937, %r4936, 3;
	mov.b64 	%rd7127, {%r4941, %r4940};
	xor.b64  	%rd7128, %rd7126, %rd7127;
	shr.u64 	%rd7129, %rd7064, 6;
	xor.b64  	%rd7130, %rd7128, %rd7129;
	shf.r.wrap.b32 	%r4942, %r4579, %r4578, 1;
	shf.r.wrap.b32 	%r4943, %r4578, %r4579, 1;
	mov.b64 	%rd7131, {%r4943, %r4942};
	shf.r.wrap.b32 	%r4944, %r4579, %r4578, 8;
	shf.r.wrap.b32 	%r4945, %r4578, %r4579, 8;
	mov.b64 	%rd7132, {%r4945, %r4944};
	xor.b64  	%rd7133, %rd7131, %rd7132;
	shr.u64 	%rd7134, %rd6583, 7;
	xor.b64  	%rd7135, %rd7133, %rd7134;
	add.s64 	%rd7136, %rd7135, %rd6546;
	add.s64 	%rd7137, %rd7136, %rd6879;
	add.s64 	%rd7138, %rd7137, %rd7130;
	add.s64 	%rd7139, %rd7138, %rd7003;
	xor.b64  	%rd7140, %rd7077, %rd7040;
	and.b64  	%rd7141, %rd7114, %rd7140;
	xor.b64  	%rd7142, %rd7141, %rd7040;
	add.s64 	%rd7143, %rd7139, %rd7142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4946,%dummy}, %rd7114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4947}, %rd7114;
	}
	shf.r.wrap.b32 	%r4948, %r4947, %r4946, 14;
	shf.r.wrap.b32 	%r4949, %r4946, %r4947, 14;
	mov.b64 	%rd7144, {%r4949, %r4948};
	shf.r.wrap.b32 	%r4950, %r4947, %r4946, 18;
	shf.r.wrap.b32 	%r4951, %r4946, %r4947, 18;
	mov.b64 	%rd7145, {%r4951, %r4950};
	xor.b64  	%rd7146, %rd7144, %rd7145;
	shf.l.wrap.b32 	%r4952, %r4946, %r4947, 23;
	shf.l.wrap.b32 	%r4953, %r4947, %r4946, 23;
	mov.b64 	%rd7147, {%r4953, %r4952};
	xor.b64  	%rd7148, %rd7146, %rd7147;
	add.s64 	%rd7149, %rd7143, %rd7148;
	add.s64 	%rd7150, %rd7149, 2861767655752347644;
	add.s64 	%rd7151, %rd7150, %rd7014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4954,%dummy}, %rd7125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4955}, %rd7125;
	}
	shf.r.wrap.b32 	%r4956, %r4955, %r4954, 28;
	shf.r.wrap.b32 	%r4957, %r4954, %r4955, 28;
	mov.b64 	%rd7152, {%r4957, %r4956};
	shf.l.wrap.b32 	%r4958, %r4954, %r4955, 30;
	shf.l.wrap.b32 	%r4959, %r4955, %r4954, 30;
	mov.b64 	%rd7153, {%r4959, %r4958};
	xor.b64  	%rd7154, %rd7152, %rd7153;
	shf.l.wrap.b32 	%r4960, %r4954, %r4955, 25;
	shf.l.wrap.b32 	%r4961, %r4955, %r4954, 25;
	mov.b64 	%rd7155, {%r4961, %r4960};
	xor.b64  	%rd7156, %rd7154, %rd7155;
	and.b64  	%rd7157, %rd7125, %rd7088;
	or.b64  	%rd7158, %rd7125, %rd7088;
	and.b64  	%rd7159, %rd7158, %rd7051;
	or.b64  	%rd7160, %rd7159, %rd7157;
	add.s64 	%rd7161, %rd7160, %rd7156;
	add.s64 	%rd7162, %rd7161, %rd7150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4962,%dummy}, %rd7101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4963}, %rd7101;
	}
	shf.r.wrap.b32 	%r4964, %r4963, %r4962, 19;
	shf.r.wrap.b32 	%r4965, %r4962, %r4963, 19;
	mov.b64 	%rd7163, {%r4965, %r4964};
	shf.l.wrap.b32 	%r4966, %r4962, %r4963, 3;
	shf.l.wrap.b32 	%r4967, %r4963, %r4962, 3;
	mov.b64 	%rd7164, {%r4967, %r4966};
	xor.b64  	%rd7165, %rd7163, %rd7164;
	shr.u64 	%rd7166, %rd7101, 6;
	xor.b64  	%rd7167, %rd7165, %rd7166;
	shf.r.wrap.b32 	%r4968, %r4607, %r4606, 1;
	shf.r.wrap.b32 	%r4969, %r4606, %r4607, 1;
	mov.b64 	%rd7168, {%r4969, %r4968};
	shf.r.wrap.b32 	%r4970, %r4607, %r4606, 8;
	shf.r.wrap.b32 	%r4971, %r4606, %r4607, 8;
	mov.b64 	%rd7169, {%r4971, %r4970};
	xor.b64  	%rd7170, %rd7168, %rd7169;
	shr.u64 	%rd7171, %rd6620, 7;
	xor.b64  	%rd7172, %rd7170, %rd7171;
	add.s64 	%rd7173, %rd7172, %rd6583;
	add.s64 	%rd7174, %rd7173, %rd6916;
	add.s64 	%rd7175, %rd7174, %rd7167;
	add.s64 	%rd7176, %rd7175, %rd7040;
	xor.b64  	%rd7177, %rd7114, %rd7077;
	and.b64  	%rd7178, %rd7151, %rd7177;
	xor.b64  	%rd7179, %rd7178, %rd7077;
	add.s64 	%rd7180, %rd7176, %rd7179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4972,%dummy}, %rd7151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4973}, %rd7151;
	}
	shf.r.wrap.b32 	%r4974, %r4973, %r4972, 14;
	shf.r.wrap.b32 	%r4975, %r4972, %r4973, 14;
	mov.b64 	%rd7181, {%r4975, %r4974};
	shf.r.wrap.b32 	%r4976, %r4973, %r4972, 18;
	shf.r.wrap.b32 	%r4977, %r4972, %r4973, 18;
	mov.b64 	%rd7182, {%r4977, %r4976};
	xor.b64  	%rd7183, %rd7181, %rd7182;
	shf.l.wrap.b32 	%r4978, %r4972, %r4973, 23;
	shf.l.wrap.b32 	%r4979, %r4973, %r4972, 23;
	mov.b64 	%rd7184, {%r4979, %r4978};
	xor.b64  	%rd7185, %rd7183, %rd7184;
	add.s64 	%rd7186, %rd7180, %rd7185;
	add.s64 	%rd7187, %rd7186, 3322285676063803686;
	add.s64 	%rd7188, %rd7187, %rd7051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4980,%dummy}, %rd7162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4981}, %rd7162;
	}
	shf.r.wrap.b32 	%r4982, %r4981, %r4980, 28;
	shf.r.wrap.b32 	%r4983, %r4980, %r4981, 28;
	mov.b64 	%rd7189, {%r4983, %r4982};
	shf.l.wrap.b32 	%r4984, %r4980, %r4981, 30;
	shf.l.wrap.b32 	%r4985, %r4981, %r4980, 30;
	mov.b64 	%rd7190, {%r4985, %r4984};
	xor.b64  	%rd7191, %rd7189, %rd7190;
	shf.l.wrap.b32 	%r4986, %r4980, %r4981, 25;
	shf.l.wrap.b32 	%r4987, %r4981, %r4980, 25;
	mov.b64 	%rd7192, {%r4987, %r4986};
	xor.b64  	%rd7193, %rd7191, %rd7192;
	and.b64  	%rd7194, %rd7162, %rd7125;
	or.b64  	%rd7195, %rd7162, %rd7125;
	and.b64  	%rd7196, %rd7195, %rd7088;
	or.b64  	%rd7197, %rd7196, %rd7194;
	add.s64 	%rd7198, %rd7197, %rd7193;
	add.s64 	%rd7199, %rd7198, %rd7187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4988,%dummy}, %rd7138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4989}, %rd7138;
	}
	shf.r.wrap.b32 	%r4990, %r4989, %r4988, 19;
	shf.r.wrap.b32 	%r4991, %r4988, %r4989, 19;
	mov.b64 	%rd7200, {%r4991, %r4990};
	shf.l.wrap.b32 	%r4992, %r4988, %r4989, 3;
	shf.l.wrap.b32 	%r4993, %r4989, %r4988, 3;
	mov.b64 	%rd7201, {%r4993, %r4992};
	xor.b64  	%rd7202, %rd7200, %rd7201;
	shr.u64 	%rd7203, %rd7138, 6;
	xor.b64  	%rd7204, %rd7202, %rd7203;
	shf.r.wrap.b32 	%r4994, %r4635, %r4634, 1;
	shf.r.wrap.b32 	%r4995, %r4634, %r4635, 1;
	mov.b64 	%rd7205, {%r4995, %r4994};
	shf.r.wrap.b32 	%r4996, %r4635, %r4634, 8;
	shf.r.wrap.b32 	%r4997, %r4634, %r4635, 8;
	mov.b64 	%rd7206, {%r4997, %r4996};
	xor.b64  	%rd7207, %rd7205, %rd7206;
	shr.u64 	%rd7208, %rd6657, 7;
	xor.b64  	%rd7209, %rd7207, %rd7208;
	add.s64 	%rd7210, %rd7209, %rd6620;
	add.s64 	%rd7211, %rd7210, %rd6953;
	add.s64 	%rd7212, %rd7211, %rd7204;
	add.s64 	%rd7213, %rd7212, %rd7077;
	xor.b64  	%rd7214, %rd7151, %rd7114;
	and.b64  	%rd7215, %rd7188, %rd7214;
	xor.b64  	%rd7216, %rd7215, %rd7114;
	add.s64 	%rd7217, %rd7213, %rd7216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4998,%dummy}, %rd7188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4999}, %rd7188;
	}
	shf.r.wrap.b32 	%r5000, %r4999, %r4998, 14;
	shf.r.wrap.b32 	%r5001, %r4998, %r4999, 14;
	mov.b64 	%rd7218, {%r5001, %r5000};
	shf.r.wrap.b32 	%r5002, %r4999, %r4998, 18;
	shf.r.wrap.b32 	%r5003, %r4998, %r4999, 18;
	mov.b64 	%rd7219, {%r5003, %r5002};
	xor.b64  	%rd7220, %rd7218, %rd7219;
	shf.l.wrap.b32 	%r5004, %r4998, %r4999, 23;
	shf.l.wrap.b32 	%r5005, %r4999, %r4998, 23;
	mov.b64 	%rd7221, {%r5005, %r5004};
	xor.b64  	%rd7222, %rd7220, %rd7221;
	add.s64 	%rd7223, %rd7217, %rd7222;
	add.s64 	%rd7224, %rd7223, 5560940570517711597;
	add.s64 	%rd7225, %rd7224, %rd7088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5006,%dummy}, %rd7199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5007}, %rd7199;
	}
	shf.r.wrap.b32 	%r5008, %r5007, %r5006, 28;
	shf.r.wrap.b32 	%r5009, %r5006, %r5007, 28;
	mov.b64 	%rd7226, {%r5009, %r5008};
	shf.l.wrap.b32 	%r5010, %r5006, %r5007, 30;
	shf.l.wrap.b32 	%r5011, %r5007, %r5006, 30;
	mov.b64 	%rd7227, {%r5011, %r5010};
	xor.b64  	%rd7228, %rd7226, %rd7227;
	shf.l.wrap.b32 	%r5012, %r5006, %r5007, 25;
	shf.l.wrap.b32 	%r5013, %r5007, %r5006, 25;
	mov.b64 	%rd7229, {%r5013, %r5012};
	xor.b64  	%rd7230, %rd7228, %rd7229;
	and.b64  	%rd7231, %rd7199, %rd7162;
	or.b64  	%rd7232, %rd7199, %rd7162;
	and.b64  	%rd7233, %rd7232, %rd7125;
	or.b64  	%rd7234, %rd7233, %rd7231;
	add.s64 	%rd7235, %rd7234, %rd7230;
	add.s64 	%rd7236, %rd7235, %rd7224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5014,%dummy}, %rd7175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5015}, %rd7175;
	}
	shf.r.wrap.b32 	%r5016, %r5015, %r5014, 19;
	shf.r.wrap.b32 	%r5017, %r5014, %r5015, 19;
	mov.b64 	%rd7237, {%r5017, %r5016};
	shf.l.wrap.b32 	%r5018, %r5014, %r5015, 3;
	shf.l.wrap.b32 	%r5019, %r5015, %r5014, 3;
	mov.b64 	%rd7238, {%r5019, %r5018};
	xor.b64  	%rd7239, %rd7237, %rd7238;
	shr.u64 	%rd7240, %rd7175, 6;
	xor.b64  	%rd7241, %rd7239, %rd7240;
	shf.r.wrap.b32 	%r5020, %r4663, %r4662, 1;
	shf.r.wrap.b32 	%r5021, %r4662, %r4663, 1;
	mov.b64 	%rd7242, {%r5021, %r5020};
	shf.r.wrap.b32 	%r5022, %r4663, %r4662, 8;
	shf.r.wrap.b32 	%r5023, %r4662, %r4663, 8;
	mov.b64 	%rd7243, {%r5023, %r5022};
	xor.b64  	%rd7244, %rd7242, %rd7243;
	shr.u64 	%rd7245, %rd6694, 7;
	xor.b64  	%rd7246, %rd7244, %rd7245;
	add.s64 	%rd7247, %rd7246, %rd6657;
	add.s64 	%rd7248, %rd7247, %rd6990;
	add.s64 	%rd7249, %rd7248, %rd7241;
	add.s64 	%rd7250, %rd7249, %rd7114;
	xor.b64  	%rd7251, %rd7188, %rd7151;
	and.b64  	%rd7252, %rd7225, %rd7251;
	xor.b64  	%rd7253, %rd7252, %rd7151;
	add.s64 	%rd7254, %rd7250, %rd7253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5024,%dummy}, %rd7225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5025}, %rd7225;
	}
	shf.r.wrap.b32 	%r5026, %r5025, %r5024, 14;
	shf.r.wrap.b32 	%r5027, %r5024, %r5025, 14;
	mov.b64 	%rd7255, {%r5027, %r5026};
	shf.r.wrap.b32 	%r5028, %r5025, %r5024, 18;
	shf.r.wrap.b32 	%r5029, %r5024, %r5025, 18;
	mov.b64 	%rd7256, {%r5029, %r5028};
	xor.b64  	%rd7257, %rd7255, %rd7256;
	shf.l.wrap.b32 	%r5030, %r5024, %r5025, 23;
	shf.l.wrap.b32 	%r5031, %r5025, %r5024, 23;
	mov.b64 	%rd7258, {%r5031, %r5030};
	xor.b64  	%rd7259, %rd7257, %rd7258;
	add.s64 	%rd7260, %rd7254, %rd7259;
	add.s64 	%rd7261, %rd7260, 5996557281743188959;
	add.s64 	%rd7262, %rd7261, %rd7125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5032,%dummy}, %rd7236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5033}, %rd7236;
	}
	shf.r.wrap.b32 	%r5034, %r5033, %r5032, 28;
	shf.r.wrap.b32 	%r5035, %r5032, %r5033, 28;
	mov.b64 	%rd7263, {%r5035, %r5034};
	shf.l.wrap.b32 	%r5036, %r5032, %r5033, 30;
	shf.l.wrap.b32 	%r5037, %r5033, %r5032, 30;
	mov.b64 	%rd7264, {%r5037, %r5036};
	xor.b64  	%rd7265, %rd7263, %rd7264;
	shf.l.wrap.b32 	%r5038, %r5032, %r5033, 25;
	shf.l.wrap.b32 	%r5039, %r5033, %r5032, 25;
	mov.b64 	%rd7266, {%r5039, %r5038};
	xor.b64  	%rd7267, %rd7265, %rd7266;
	and.b64  	%rd7268, %rd7236, %rd7199;
	or.b64  	%rd7269, %rd7236, %rd7199;
	and.b64  	%rd7270, %rd7269, %rd7162;
	or.b64  	%rd7271, %rd7270, %rd7268;
	add.s64 	%rd7272, %rd7271, %rd7267;
	add.s64 	%rd7273, %rd7272, %rd7261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5040,%dummy}, %rd7212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5041}, %rd7212;
	}
	shf.r.wrap.b32 	%r5042, %r5041, %r5040, 19;
	shf.r.wrap.b32 	%r5043, %r5040, %r5041, 19;
	mov.b64 	%rd7274, {%r5043, %r5042};
	shf.l.wrap.b32 	%r5044, %r5040, %r5041, 3;
	shf.l.wrap.b32 	%r5045, %r5041, %r5040, 3;
	mov.b64 	%rd7275, {%r5045, %r5044};
	xor.b64  	%rd7276, %rd7274, %rd7275;
	shr.u64 	%rd7277, %rd7212, 6;
	xor.b64  	%rd7278, %rd7276, %rd7277;
	shf.r.wrap.b32 	%r5046, %r4691, %r4690, 1;
	shf.r.wrap.b32 	%r5047, %r4690, %r4691, 1;
	mov.b64 	%rd7279, {%r5047, %r5046};
	shf.r.wrap.b32 	%r5048, %r4691, %r4690, 8;
	shf.r.wrap.b32 	%r5049, %r4690, %r4691, 8;
	mov.b64 	%rd7280, {%r5049, %r5048};
	xor.b64  	%rd7281, %rd7279, %rd7280;
	shr.u64 	%rd7282, %rd6731, 7;
	xor.b64  	%rd7283, %rd7281, %rd7282;
	add.s64 	%rd7284, %rd7283, %rd6694;
	add.s64 	%rd7285, %rd7284, %rd7027;
	add.s64 	%rd7286, %rd7285, %rd7278;
	add.s64 	%rd7287, %rd7286, %rd7151;
	xor.b64  	%rd7288, %rd7225, %rd7188;
	and.b64  	%rd7289, %rd7262, %rd7288;
	xor.b64  	%rd7290, %rd7289, %rd7188;
	add.s64 	%rd7291, %rd7287, %rd7290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5050,%dummy}, %rd7262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5051}, %rd7262;
	}
	shf.r.wrap.b32 	%r5052, %r5051, %r5050, 14;
	shf.r.wrap.b32 	%r5053, %r5050, %r5051, 14;
	mov.b64 	%rd7292, {%r5053, %r5052};
	shf.r.wrap.b32 	%r5054, %r5051, %r5050, 18;
	shf.r.wrap.b32 	%r5055, %r5050, %r5051, 18;
	mov.b64 	%rd7293, {%r5055, %r5054};
	xor.b64  	%rd7294, %rd7292, %rd7293;
	shf.l.wrap.b32 	%r5056, %r5050, %r5051, 23;
	shf.l.wrap.b32 	%r5057, %r5051, %r5050, 23;
	mov.b64 	%rd7295, {%r5057, %r5056};
	xor.b64  	%rd7296, %rd7294, %rd7295;
	add.s64 	%rd7297, %rd7291, %rd7296;
	add.s64 	%rd7298, %rd7297, 7280758554555802590;
	add.s64 	%rd7299, %rd7298, %rd7162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5058,%dummy}, %rd7273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5059}, %rd7273;
	}
	shf.r.wrap.b32 	%r5060, %r5059, %r5058, 28;
	shf.r.wrap.b32 	%r5061, %r5058, %r5059, 28;
	mov.b64 	%rd7300, {%r5061, %r5060};
	shf.l.wrap.b32 	%r5062, %r5058, %r5059, 30;
	shf.l.wrap.b32 	%r5063, %r5059, %r5058, 30;
	mov.b64 	%rd7301, {%r5063, %r5062};
	xor.b64  	%rd7302, %rd7300, %rd7301;
	shf.l.wrap.b32 	%r5064, %r5058, %r5059, 25;
	shf.l.wrap.b32 	%r5065, %r5059, %r5058, 25;
	mov.b64 	%rd7303, {%r5065, %r5064};
	xor.b64  	%rd7304, %rd7302, %rd7303;
	and.b64  	%rd7305, %rd7273, %rd7236;
	or.b64  	%rd7306, %rd7273, %rd7236;
	and.b64  	%rd7307, %rd7306, %rd7199;
	or.b64  	%rd7308, %rd7307, %rd7305;
	add.s64 	%rd7309, %rd7308, %rd7304;
	add.s64 	%rd7310, %rd7309, %rd7298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5066,%dummy}, %rd7249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5067}, %rd7249;
	}
	shf.r.wrap.b32 	%r5068, %r5067, %r5066, 19;
	shf.r.wrap.b32 	%r5069, %r5066, %r5067, 19;
	mov.b64 	%rd7311, {%r5069, %r5068};
	shf.l.wrap.b32 	%r5070, %r5066, %r5067, 3;
	shf.l.wrap.b32 	%r5071, %r5067, %r5066, 3;
	mov.b64 	%rd7312, {%r5071, %r5070};
	xor.b64  	%rd7313, %rd7311, %rd7312;
	shr.u64 	%rd7314, %rd7249, 6;
	xor.b64  	%rd7315, %rd7313, %rd7314;
	shf.r.wrap.b32 	%r5072, %r4719, %r4718, 1;
	shf.r.wrap.b32 	%r5073, %r4718, %r4719, 1;
	mov.b64 	%rd7316, {%r5073, %r5072};
	shf.r.wrap.b32 	%r5074, %r4719, %r4718, 8;
	shf.r.wrap.b32 	%r5075, %r4718, %r4719, 8;
	mov.b64 	%rd7317, {%r5075, %r5074};
	xor.b64  	%rd7318, %rd7316, %rd7317;
	shr.u64 	%rd7319, %rd6768, 7;
	xor.b64  	%rd7320, %rd7318, %rd7319;
	add.s64 	%rd7321, %rd7320, %rd6731;
	add.s64 	%rd7322, %rd7321, %rd7064;
	add.s64 	%rd7323, %rd7322, %rd7315;
	add.s64 	%rd7324, %rd7323, %rd7188;
	xor.b64  	%rd7325, %rd7262, %rd7225;
	and.b64  	%rd7326, %rd7299, %rd7325;
	xor.b64  	%rd7327, %rd7326, %rd7225;
	add.s64 	%rd7328, %rd7324, %rd7327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5076,%dummy}, %rd7299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5077}, %rd7299;
	}
	shf.r.wrap.b32 	%r5078, %r5077, %r5076, 14;
	shf.r.wrap.b32 	%r5079, %r5076, %r5077, 14;
	mov.b64 	%rd7329, {%r5079, %r5078};
	shf.r.wrap.b32 	%r5080, %r5077, %r5076, 18;
	shf.r.wrap.b32 	%r5081, %r5076, %r5077, 18;
	mov.b64 	%rd7330, {%r5081, %r5080};
	xor.b64  	%rd7331, %rd7329, %rd7330;
	shf.l.wrap.b32 	%r5082, %r5076, %r5077, 23;
	shf.l.wrap.b32 	%r5083, %r5077, %r5076, 23;
	mov.b64 	%rd7332, {%r5083, %r5082};
	xor.b64  	%rd7333, %rd7331, %rd7332;
	add.s64 	%rd7334, %rd7328, %rd7333;
	add.s64 	%rd7335, %rd7334, 8532644243296465576;
	add.s64 	%rd7336, %rd7335, %rd7199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5084,%dummy}, %rd7310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5085}, %rd7310;
	}
	shf.r.wrap.b32 	%r5086, %r5085, %r5084, 28;
	shf.r.wrap.b32 	%r5087, %r5084, %r5085, 28;
	mov.b64 	%rd7337, {%r5087, %r5086};
	shf.l.wrap.b32 	%r5088, %r5084, %r5085, 30;
	shf.l.wrap.b32 	%r5089, %r5085, %r5084, 30;
	mov.b64 	%rd7338, {%r5089, %r5088};
	xor.b64  	%rd7339, %rd7337, %rd7338;
	shf.l.wrap.b32 	%r5090, %r5084, %r5085, 25;
	shf.l.wrap.b32 	%r5091, %r5085, %r5084, 25;
	mov.b64 	%rd7340, {%r5091, %r5090};
	xor.b64  	%rd7341, %rd7339, %rd7340;
	and.b64  	%rd7342, %rd7310, %rd7273;
	or.b64  	%rd7343, %rd7310, %rd7273;
	and.b64  	%rd7344, %rd7343, %rd7236;
	or.b64  	%rd7345, %rd7344, %rd7342;
	add.s64 	%rd7346, %rd7345, %rd7341;
	add.s64 	%rd7347, %rd7346, %rd7335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5092,%dummy}, %rd7286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5093}, %rd7286;
	}
	shf.r.wrap.b32 	%r5094, %r5093, %r5092, 19;
	shf.r.wrap.b32 	%r5095, %r5092, %r5093, 19;
	mov.b64 	%rd7348, {%r5095, %r5094};
	shf.l.wrap.b32 	%r5096, %r5092, %r5093, 3;
	shf.l.wrap.b32 	%r5097, %r5093, %r5092, 3;
	mov.b64 	%rd7349, {%r5097, %r5096};
	xor.b64  	%rd7350, %rd7348, %rd7349;
	shr.u64 	%rd7351, %rd7286, 6;
	xor.b64  	%rd7352, %rd7350, %rd7351;
	shf.r.wrap.b32 	%r5098, %r4747, %r4746, 1;
	shf.r.wrap.b32 	%r5099, %r4746, %r4747, 1;
	mov.b64 	%rd7353, {%r5099, %r5098};
	shf.r.wrap.b32 	%r5100, %r4747, %r4746, 8;
	shf.r.wrap.b32 	%r5101, %r4746, %r4747, 8;
	mov.b64 	%rd7354, {%r5101, %r5100};
	xor.b64  	%rd7355, %rd7353, %rd7354;
	shr.u64 	%rd7356, %rd6805, 7;
	xor.b64  	%rd7357, %rd7355, %rd7356;
	add.s64 	%rd7358, %rd7357, %rd6768;
	add.s64 	%rd7359, %rd7358, %rd7101;
	add.s64 	%rd7360, %rd7359, %rd7352;
	add.s64 	%rd7361, %rd7360, %rd7225;
	xor.b64  	%rd7362, %rd7299, %rd7262;
	and.b64  	%rd7363, %rd7336, %rd7362;
	xor.b64  	%rd7364, %rd7363, %rd7262;
	add.s64 	%rd7365, %rd7361, %rd7364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5102,%dummy}, %rd7336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5103}, %rd7336;
	}
	shf.r.wrap.b32 	%r5104, %r5103, %r5102, 14;
	shf.r.wrap.b32 	%r5105, %r5102, %r5103, 14;
	mov.b64 	%rd7366, {%r5105, %r5104};
	shf.r.wrap.b32 	%r5106, %r5103, %r5102, 18;
	shf.r.wrap.b32 	%r5107, %r5102, %r5103, 18;
	mov.b64 	%rd7367, {%r5107, %r5106};
	xor.b64  	%rd7368, %rd7366, %rd7367;
	shf.l.wrap.b32 	%r5108, %r5102, %r5103, 23;
	shf.l.wrap.b32 	%r5109, %r5103, %r5102, 23;
	mov.b64 	%rd7369, {%r5109, %r5108};
	xor.b64  	%rd7370, %rd7368, %rd7369;
	add.s64 	%rd7371, %rd7365, %rd7370;
	add.s64 	%rd7372, %rd7371, -9096487096722542874;
	add.s64 	%rd7373, %rd7372, %rd7236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5110,%dummy}, %rd7347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5111}, %rd7347;
	}
	shf.r.wrap.b32 	%r5112, %r5111, %r5110, 28;
	shf.r.wrap.b32 	%r5113, %r5110, %r5111, 28;
	mov.b64 	%rd7374, {%r5113, %r5112};
	shf.l.wrap.b32 	%r5114, %r5110, %r5111, 30;
	shf.l.wrap.b32 	%r5115, %r5111, %r5110, 30;
	mov.b64 	%rd7375, {%r5115, %r5114};
	xor.b64  	%rd7376, %rd7374, %rd7375;
	shf.l.wrap.b32 	%r5116, %r5110, %r5111, 25;
	shf.l.wrap.b32 	%r5117, %r5111, %r5110, 25;
	mov.b64 	%rd7377, {%r5117, %r5116};
	xor.b64  	%rd7378, %rd7376, %rd7377;
	and.b64  	%rd7379, %rd7347, %rd7310;
	or.b64  	%rd7380, %rd7347, %rd7310;
	and.b64  	%rd7381, %rd7380, %rd7273;
	or.b64  	%rd7382, %rd7381, %rd7379;
	add.s64 	%rd7383, %rd7382, %rd7378;
	add.s64 	%rd7384, %rd7383, %rd7372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5118,%dummy}, %rd7323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5119}, %rd7323;
	}
	shf.r.wrap.b32 	%r5120, %r5119, %r5118, 19;
	shf.r.wrap.b32 	%r5121, %r5118, %r5119, 19;
	mov.b64 	%rd7385, {%r5121, %r5120};
	shf.l.wrap.b32 	%r5122, %r5118, %r5119, 3;
	shf.l.wrap.b32 	%r5123, %r5119, %r5118, 3;
	mov.b64 	%rd7386, {%r5123, %r5122};
	xor.b64  	%rd7387, %rd7385, %rd7386;
	shr.u64 	%rd7388, %rd7323, 6;
	xor.b64  	%rd7389, %rd7387, %rd7388;
	shf.r.wrap.b32 	%r5124, %r4775, %r4774, 1;
	shf.r.wrap.b32 	%r5125, %r4774, %r4775, 1;
	mov.b64 	%rd7390, {%r5125, %r5124};
	shf.r.wrap.b32 	%r5126, %r4775, %r4774, 8;
	shf.r.wrap.b32 	%r5127, %r4774, %r4775, 8;
	mov.b64 	%rd7391, {%r5127, %r5126};
	xor.b64  	%rd7392, %rd7390, %rd7391;
	shr.u64 	%rd7393, %rd6842, 7;
	xor.b64  	%rd7394, %rd7392, %rd7393;
	add.s64 	%rd7395, %rd7394, %rd6805;
	add.s64 	%rd7396, %rd7395, %rd7138;
	add.s64 	%rd7397, %rd7396, %rd7389;
	add.s64 	%rd7398, %rd7397, %rd7262;
	xor.b64  	%rd7399, %rd7336, %rd7299;
	and.b64  	%rd7400, %rd7373, %rd7399;
	xor.b64  	%rd7401, %rd7400, %rd7299;
	add.s64 	%rd7402, %rd7398, %rd7401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5128,%dummy}, %rd7373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5129}, %rd7373;
	}
	shf.r.wrap.b32 	%r5130, %r5129, %r5128, 14;
	shf.r.wrap.b32 	%r5131, %r5128, %r5129, 14;
	mov.b64 	%rd7403, {%r5131, %r5130};
	shf.r.wrap.b32 	%r5132, %r5129, %r5128, 18;
	shf.r.wrap.b32 	%r5133, %r5128, %r5129, 18;
	mov.b64 	%rd7404, {%r5133, %r5132};
	xor.b64  	%rd7405, %rd7403, %rd7404;
	shf.l.wrap.b32 	%r5134, %r5128, %r5129, 23;
	shf.l.wrap.b32 	%r5135, %r5129, %r5128, 23;
	mov.b64 	%rd7406, {%r5135, %r5134};
	xor.b64  	%rd7407, %rd7405, %rd7406;
	add.s64 	%rd7408, %rd7402, %rd7407;
	add.s64 	%rd7409, %rd7408, -7894198246740708037;
	add.s64 	%rd7410, %rd7409, %rd7273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5136,%dummy}, %rd7384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5137}, %rd7384;
	}
	shf.r.wrap.b32 	%r5138, %r5137, %r5136, 28;
	shf.r.wrap.b32 	%r5139, %r5136, %r5137, 28;
	mov.b64 	%rd7411, {%r5139, %r5138};
	shf.l.wrap.b32 	%r5140, %r5136, %r5137, 30;
	shf.l.wrap.b32 	%r5141, %r5137, %r5136, 30;
	mov.b64 	%rd7412, {%r5141, %r5140};
	xor.b64  	%rd7413, %rd7411, %rd7412;
	shf.l.wrap.b32 	%r5142, %r5136, %r5137, 25;
	shf.l.wrap.b32 	%r5143, %r5137, %r5136, 25;
	mov.b64 	%rd7414, {%r5143, %r5142};
	xor.b64  	%rd7415, %rd7413, %rd7414;
	and.b64  	%rd7416, %rd7384, %rd7347;
	or.b64  	%rd7417, %rd7384, %rd7347;
	and.b64  	%rd7418, %rd7417, %rd7310;
	or.b64  	%rd7419, %rd7418, %rd7416;
	add.s64 	%rd7420, %rd7419, %rd7415;
	add.s64 	%rd7421, %rd7420, %rd7409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5144,%dummy}, %rd7360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5145}, %rd7360;
	}
	shf.r.wrap.b32 	%r5146, %r5145, %r5144, 19;
	shf.r.wrap.b32 	%r5147, %r5144, %r5145, 19;
	mov.b64 	%rd7422, {%r5147, %r5146};
	shf.l.wrap.b32 	%r5148, %r5144, %r5145, 3;
	shf.l.wrap.b32 	%r5149, %r5145, %r5144, 3;
	mov.b64 	%rd7423, {%r5149, %r5148};
	xor.b64  	%rd7424, %rd7422, %rd7423;
	shr.u64 	%rd7425, %rd7360, 6;
	xor.b64  	%rd7426, %rd7424, %rd7425;
	shf.r.wrap.b32 	%r5150, %r4803, %r4802, 1;
	shf.r.wrap.b32 	%r5151, %r4802, %r4803, 1;
	mov.b64 	%rd7427, {%r5151, %r5150};
	shf.r.wrap.b32 	%r5152, %r4803, %r4802, 8;
	shf.r.wrap.b32 	%r5153, %r4802, %r4803, 8;
	mov.b64 	%rd7428, {%r5153, %r5152};
	xor.b64  	%rd7429, %rd7427, %rd7428;
	shr.u64 	%rd7430, %rd6879, 7;
	xor.b64  	%rd7431, %rd7429, %rd7430;
	add.s64 	%rd7432, %rd7431, %rd6842;
	add.s64 	%rd7433, %rd7432, %rd7175;
	add.s64 	%rd7434, %rd7433, %rd7426;
	add.s64 	%rd7435, %rd7434, %rd7299;
	xor.b64  	%rd7436, %rd7373, %rd7336;
	and.b64  	%rd7437, %rd7410, %rd7436;
	xor.b64  	%rd7438, %rd7437, %rd7336;
	add.s64 	%rd7439, %rd7435, %rd7438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5154,%dummy}, %rd7410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5155}, %rd7410;
	}
	shf.r.wrap.b32 	%r5156, %r5155, %r5154, 14;
	shf.r.wrap.b32 	%r5157, %r5154, %r5155, 14;
	mov.b64 	%rd7440, {%r5157, %r5156};
	shf.r.wrap.b32 	%r5158, %r5155, %r5154, 18;
	shf.r.wrap.b32 	%r5159, %r5154, %r5155, 18;
	mov.b64 	%rd7441, {%r5159, %r5158};
	xor.b64  	%rd7442, %rd7440, %rd7441;
	shf.l.wrap.b32 	%r5160, %r5154, %r5155, 23;
	shf.l.wrap.b32 	%r5161, %r5155, %r5154, 23;
	mov.b64 	%rd7443, {%r5161, %r5160};
	xor.b64  	%rd7444, %rd7442, %rd7443;
	add.s64 	%rd7445, %rd7439, %rd7444;
	add.s64 	%rd7446, %rd7445, -6719396339535248540;
	add.s64 	%rd7447, %rd7446, %rd7310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5162,%dummy}, %rd7421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5163}, %rd7421;
	}
	shf.r.wrap.b32 	%r5164, %r5163, %r5162, 28;
	shf.r.wrap.b32 	%r5165, %r5162, %r5163, 28;
	mov.b64 	%rd7448, {%r5165, %r5164};
	shf.l.wrap.b32 	%r5166, %r5162, %r5163, 30;
	shf.l.wrap.b32 	%r5167, %r5163, %r5162, 30;
	mov.b64 	%rd7449, {%r5167, %r5166};
	xor.b64  	%rd7450, %rd7448, %rd7449;
	shf.l.wrap.b32 	%r5168, %r5162, %r5163, 25;
	shf.l.wrap.b32 	%r5169, %r5163, %r5162, 25;
	mov.b64 	%rd7451, {%r5169, %r5168};
	xor.b64  	%rd7452, %rd7450, %rd7451;
	and.b64  	%rd7453, %rd7421, %rd7384;
	or.b64  	%rd7454, %rd7421, %rd7384;
	and.b64  	%rd7455, %rd7454, %rd7347;
	or.b64  	%rd7456, %rd7455, %rd7453;
	add.s64 	%rd7457, %rd7456, %rd7452;
	add.s64 	%rd7458, %rd7457, %rd7446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5170,%dummy}, %rd7397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5171}, %rd7397;
	}
	shf.r.wrap.b32 	%r5172, %r5171, %r5170, 19;
	shf.r.wrap.b32 	%r5173, %r5170, %r5171, 19;
	mov.b64 	%rd7459, {%r5173, %r5172};
	shf.l.wrap.b32 	%r5174, %r5170, %r5171, 3;
	shf.l.wrap.b32 	%r5175, %r5171, %r5170, 3;
	mov.b64 	%rd7460, {%r5175, %r5174};
	xor.b64  	%rd7461, %rd7459, %rd7460;
	shr.u64 	%rd7462, %rd7397, 6;
	xor.b64  	%rd7463, %rd7461, %rd7462;
	shf.r.wrap.b32 	%r5176, %r4831, %r4830, 1;
	shf.r.wrap.b32 	%r5177, %r4830, %r4831, 1;
	mov.b64 	%rd7464, {%r5177, %r5176};
	shf.r.wrap.b32 	%r5178, %r4831, %r4830, 8;
	shf.r.wrap.b32 	%r5179, %r4830, %r4831, 8;
	mov.b64 	%rd7465, {%r5179, %r5178};
	xor.b64  	%rd7466, %rd7464, %rd7465;
	shr.u64 	%rd7467, %rd6916, 7;
	xor.b64  	%rd7468, %rd7466, %rd7467;
	add.s64 	%rd7469, %rd7468, %rd6879;
	add.s64 	%rd7470, %rd7469, %rd7212;
	add.s64 	%rd7471, %rd7470, %rd7463;
	add.s64 	%rd7472, %rd7471, %rd7336;
	xor.b64  	%rd7473, %rd7410, %rd7373;
	and.b64  	%rd7474, %rd7447, %rd7473;
	xor.b64  	%rd7475, %rd7474, %rd7373;
	add.s64 	%rd7476, %rd7472, %rd7475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5180,%dummy}, %rd7447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5181}, %rd7447;
	}
	shf.r.wrap.b32 	%r5182, %r5181, %r5180, 14;
	shf.r.wrap.b32 	%r5183, %r5180, %r5181, 14;
	mov.b64 	%rd7477, {%r5183, %r5182};
	shf.r.wrap.b32 	%r5184, %r5181, %r5180, 18;
	shf.r.wrap.b32 	%r5185, %r5180, %r5181, 18;
	mov.b64 	%rd7478, {%r5185, %r5184};
	xor.b64  	%rd7479, %rd7477, %rd7478;
	shf.l.wrap.b32 	%r5186, %r5180, %r5181, 23;
	shf.l.wrap.b32 	%r5187, %r5181, %r5180, 23;
	mov.b64 	%rd7480, {%r5187, %r5186};
	xor.b64  	%rd7481, %rd7479, %rd7480;
	add.s64 	%rd7482, %rd7476, %rd7481;
	add.s64 	%rd7483, %rd7482, -6333637450476146687;
	add.s64 	%rd7484, %rd7483, %rd7347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5188,%dummy}, %rd7458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5189}, %rd7458;
	}
	shf.r.wrap.b32 	%r5190, %r5189, %r5188, 28;
	shf.r.wrap.b32 	%r5191, %r5188, %r5189, 28;
	mov.b64 	%rd7485, {%r5191, %r5190};
	shf.l.wrap.b32 	%r5192, %r5188, %r5189, 30;
	shf.l.wrap.b32 	%r5193, %r5189, %r5188, 30;
	mov.b64 	%rd7486, {%r5193, %r5192};
	xor.b64  	%rd7487, %rd7485, %rd7486;
	shf.l.wrap.b32 	%r5194, %r5188, %r5189, 25;
	shf.l.wrap.b32 	%r5195, %r5189, %r5188, 25;
	mov.b64 	%rd7488, {%r5195, %r5194};
	xor.b64  	%rd7489, %rd7487, %rd7488;
	and.b64  	%rd7490, %rd7458, %rd7421;
	or.b64  	%rd7491, %rd7458, %rd7421;
	and.b64  	%rd7492, %rd7491, %rd7384;
	or.b64  	%rd7493, %rd7492, %rd7490;
	add.s64 	%rd7494, %rd7493, %rd7489;
	add.s64 	%rd7495, %rd7494, %rd7483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5196,%dummy}, %rd7434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5197}, %rd7434;
	}
	shf.r.wrap.b32 	%r5198, %r5197, %r5196, 19;
	shf.r.wrap.b32 	%r5199, %r5196, %r5197, 19;
	mov.b64 	%rd7496, {%r5199, %r5198};
	shf.l.wrap.b32 	%r5200, %r5196, %r5197, 3;
	shf.l.wrap.b32 	%r5201, %r5197, %r5196, 3;
	mov.b64 	%rd7497, {%r5201, %r5200};
	xor.b64  	%rd7498, %rd7496, %rd7497;
	shr.u64 	%rd7499, %rd7434, 6;
	xor.b64  	%rd7500, %rd7498, %rd7499;
	shf.r.wrap.b32 	%r5202, %r4859, %r4858, 1;
	shf.r.wrap.b32 	%r5203, %r4858, %r4859, 1;
	mov.b64 	%rd7501, {%r5203, %r5202};
	shf.r.wrap.b32 	%r5204, %r4859, %r4858, 8;
	shf.r.wrap.b32 	%r5205, %r4858, %r4859, 8;
	mov.b64 	%rd7502, {%r5205, %r5204};
	xor.b64  	%rd7503, %rd7501, %rd7502;
	shr.u64 	%rd7504, %rd6953, 7;
	xor.b64  	%rd7505, %rd7503, %rd7504;
	add.s64 	%rd7506, %rd7505, %rd6916;
	add.s64 	%rd7507, %rd7506, %rd7249;
	add.s64 	%rd7508, %rd7507, %rd7500;
	add.s64 	%rd7509, %rd7508, %rd7373;
	xor.b64  	%rd7510, %rd7447, %rd7410;
	and.b64  	%rd7511, %rd7484, %rd7510;
	xor.b64  	%rd7512, %rd7511, %rd7410;
	add.s64 	%rd7513, %rd7509, %rd7512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5206,%dummy}, %rd7484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5207}, %rd7484;
	}
	shf.r.wrap.b32 	%r5208, %r5207, %r5206, 14;
	shf.r.wrap.b32 	%r5209, %r5206, %r5207, 14;
	mov.b64 	%rd7514, {%r5209, %r5208};
	shf.r.wrap.b32 	%r5210, %r5207, %r5206, 18;
	shf.r.wrap.b32 	%r5211, %r5206, %r5207, 18;
	mov.b64 	%rd7515, {%r5211, %r5210};
	xor.b64  	%rd7516, %rd7514, %rd7515;
	shf.l.wrap.b32 	%r5212, %r5206, %r5207, 23;
	shf.l.wrap.b32 	%r5213, %r5207, %r5206, 23;
	mov.b64 	%rd7517, {%r5213, %r5212};
	xor.b64  	%rd7518, %rd7516, %rd7517;
	add.s64 	%rd7519, %rd7513, %rd7518;
	add.s64 	%rd7520, %rd7519, -4446306890439682159;
	add.s64 	%rd7521, %rd7520, %rd7384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5214,%dummy}, %rd7495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5215}, %rd7495;
	}
	shf.r.wrap.b32 	%r5216, %r5215, %r5214, 28;
	shf.r.wrap.b32 	%r5217, %r5214, %r5215, 28;
	mov.b64 	%rd7522, {%r5217, %r5216};
	shf.l.wrap.b32 	%r5218, %r5214, %r5215, 30;
	shf.l.wrap.b32 	%r5219, %r5215, %r5214, 30;
	mov.b64 	%rd7523, {%r5219, %r5218};
	xor.b64  	%rd7524, %rd7522, %rd7523;
	shf.l.wrap.b32 	%r5220, %r5214, %r5215, 25;
	shf.l.wrap.b32 	%r5221, %r5215, %r5214, 25;
	mov.b64 	%rd7525, {%r5221, %r5220};
	xor.b64  	%rd7526, %rd7524, %rd7525;
	and.b64  	%rd7527, %rd7495, %rd7458;
	or.b64  	%rd7528, %rd7495, %rd7458;
	and.b64  	%rd7529, %rd7528, %rd7421;
	or.b64  	%rd7530, %rd7529, %rd7527;
	add.s64 	%rd7531, %rd7530, %rd7526;
	add.s64 	%rd7532, %rd7531, %rd7520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5222,%dummy}, %rd7471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5223}, %rd7471;
	}
	shf.r.wrap.b32 	%r5224, %r5223, %r5222, 19;
	shf.r.wrap.b32 	%r5225, %r5222, %r5223, 19;
	mov.b64 	%rd7533, {%r5225, %r5224};
	shf.l.wrap.b32 	%r5226, %r5222, %r5223, 3;
	shf.l.wrap.b32 	%r5227, %r5223, %r5222, 3;
	mov.b64 	%rd7534, {%r5227, %r5226};
	xor.b64  	%rd7535, %rd7533, %rd7534;
	shr.u64 	%rd7536, %rd7471, 6;
	xor.b64  	%rd7537, %rd7535, %rd7536;
	shf.r.wrap.b32 	%r5228, %r4885, %r4884, 1;
	shf.r.wrap.b32 	%r5229, %r4884, %r4885, 1;
	mov.b64 	%rd7538, {%r5229, %r5228};
	shf.r.wrap.b32 	%r5230, %r4885, %r4884, 8;
	shf.r.wrap.b32 	%r5231, %r4884, %r4885, 8;
	mov.b64 	%rd7539, {%r5231, %r5230};
	xor.b64  	%rd7540, %rd7538, %rd7539;
	shr.u64 	%rd7541, %rd6990, 7;
	xor.b64  	%rd7542, %rd7540, %rd7541;
	add.s64 	%rd7543, %rd7542, %rd6953;
	add.s64 	%rd7544, %rd7543, %rd7286;
	add.s64 	%rd7545, %rd7544, %rd7537;
	add.s64 	%rd7546, %rd7545, %rd7410;
	xor.b64  	%rd7547, %rd7484, %rd7447;
	and.b64  	%rd7548, %rd7521, %rd7547;
	xor.b64  	%rd7549, %rd7548, %rd7447;
	add.s64 	%rd7550, %rd7546, %rd7549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5232,%dummy}, %rd7521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5233}, %rd7521;
	}
	shf.r.wrap.b32 	%r5234, %r5233, %r5232, 14;
	shf.r.wrap.b32 	%r5235, %r5232, %r5233, 14;
	mov.b64 	%rd7551, {%r5235, %r5234};
	shf.r.wrap.b32 	%r5236, %r5233, %r5232, 18;
	shf.r.wrap.b32 	%r5237, %r5232, %r5233, 18;
	mov.b64 	%rd7552, {%r5237, %r5236};
	xor.b64  	%rd7553, %rd7551, %rd7552;
	shf.l.wrap.b32 	%r5238, %r5232, %r5233, 23;
	shf.l.wrap.b32 	%r5239, %r5233, %r5232, 23;
	mov.b64 	%rd7554, {%r5239, %r5238};
	xor.b64  	%rd7555, %rd7553, %rd7554;
	add.s64 	%rd7556, %rd7550, %rd7555;
	add.s64 	%rd7557, %rd7556, -4076793802049405392;
	add.s64 	%rd7558, %rd7557, %rd7421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5240,%dummy}, %rd7532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5241}, %rd7532;
	}
	shf.r.wrap.b32 	%r5242, %r5241, %r5240, 28;
	shf.r.wrap.b32 	%r5243, %r5240, %r5241, 28;
	mov.b64 	%rd7559, {%r5243, %r5242};
	shf.l.wrap.b32 	%r5244, %r5240, %r5241, 30;
	shf.l.wrap.b32 	%r5245, %r5241, %r5240, 30;
	mov.b64 	%rd7560, {%r5245, %r5244};
	xor.b64  	%rd7561, %rd7559, %rd7560;
	shf.l.wrap.b32 	%r5246, %r5240, %r5241, 25;
	shf.l.wrap.b32 	%r5247, %r5241, %r5240, 25;
	mov.b64 	%rd7562, {%r5247, %r5246};
	xor.b64  	%rd7563, %rd7561, %rd7562;
	and.b64  	%rd7564, %rd7532, %rd7495;
	or.b64  	%rd7565, %rd7532, %rd7495;
	and.b64  	%rd7566, %rd7565, %rd7458;
	or.b64  	%rd7567, %rd7566, %rd7564;
	add.s64 	%rd7568, %rd7567, %rd7563;
	add.s64 	%rd7569, %rd7568, %rd7557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5248,%dummy}, %rd7508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5249}, %rd7508;
	}
	shf.r.wrap.b32 	%r5250, %r5249, %r5248, 19;
	shf.r.wrap.b32 	%r5251, %r5248, %r5249, 19;
	mov.b64 	%rd7570, {%r5251, %r5250};
	shf.l.wrap.b32 	%r5252, %r5248, %r5249, 3;
	shf.l.wrap.b32 	%r5253, %r5249, %r5248, 3;
	mov.b64 	%rd7571, {%r5253, %r5252};
	xor.b64  	%rd7572, %rd7570, %rd7571;
	shr.u64 	%rd7573, %rd7508, 6;
	xor.b64  	%rd7574, %rd7572, %rd7573;
	shf.r.wrap.b32 	%r5254, %r4911, %r4910, 1;
	shf.r.wrap.b32 	%r5255, %r4910, %r4911, 1;
	mov.b64 	%rd7575, {%r5255, %r5254};
	shf.r.wrap.b32 	%r5256, %r4911, %r4910, 8;
	shf.r.wrap.b32 	%r5257, %r4910, %r4911, 8;
	mov.b64 	%rd7576, {%r5257, %r5256};
	xor.b64  	%rd7577, %rd7575, %rd7576;
	shr.u64 	%rd7578, %rd7027, 7;
	xor.b64  	%rd7579, %rd7577, %rd7578;
	add.s64 	%rd7580, %rd7579, %rd6990;
	add.s64 	%rd7581, %rd7580, %rd7323;
	add.s64 	%rd7582, %rd7581, %rd7574;
	add.s64 	%rd7583, %rd7582, %rd7447;
	xor.b64  	%rd7584, %rd7521, %rd7484;
	and.b64  	%rd7585, %rd7558, %rd7584;
	xor.b64  	%rd7586, %rd7585, %rd7484;
	add.s64 	%rd7587, %rd7583, %rd7586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5258,%dummy}, %rd7558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5259}, %rd7558;
	}
	shf.r.wrap.b32 	%r5260, %r5259, %r5258, 14;
	shf.r.wrap.b32 	%r5261, %r5258, %r5259, 14;
	mov.b64 	%rd7588, {%r5261, %r5260};
	shf.r.wrap.b32 	%r5262, %r5259, %r5258, 18;
	shf.r.wrap.b32 	%r5263, %r5258, %r5259, 18;
	mov.b64 	%rd7589, {%r5263, %r5262};
	xor.b64  	%rd7590, %rd7588, %rd7589;
	shf.l.wrap.b32 	%r5264, %r5258, %r5259, 23;
	shf.l.wrap.b32 	%r5265, %r5259, %r5258, 23;
	mov.b64 	%rd7591, {%r5265, %r5264};
	xor.b64  	%rd7592, %rd7590, %rd7591;
	add.s64 	%rd7593, %rd7587, %rd7592;
	add.s64 	%rd7594, %rd7593, -3345356375505022440;
	add.s64 	%rd7595, %rd7594, %rd7458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5266,%dummy}, %rd7569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5267}, %rd7569;
	}
	shf.r.wrap.b32 	%r5268, %r5267, %r5266, 28;
	shf.r.wrap.b32 	%r5269, %r5266, %r5267, 28;
	mov.b64 	%rd7596, {%r5269, %r5268};
	shf.l.wrap.b32 	%r5270, %r5266, %r5267, 30;
	shf.l.wrap.b32 	%r5271, %r5267, %r5266, 30;
	mov.b64 	%rd7597, {%r5271, %r5270};
	xor.b64  	%rd7598, %rd7596, %rd7597;
	shf.l.wrap.b32 	%r5272, %r5266, %r5267, 25;
	shf.l.wrap.b32 	%r5273, %r5267, %r5266, 25;
	mov.b64 	%rd7599, {%r5273, %r5272};
	xor.b64  	%rd7600, %rd7598, %rd7599;
	and.b64  	%rd7601, %rd7569, %rd7532;
	or.b64  	%rd7602, %rd7569, %rd7532;
	and.b64  	%rd7603, %rd7602, %rd7495;
	or.b64  	%rd7604, %rd7603, %rd7601;
	add.s64 	%rd7605, %rd7604, %rd7600;
	add.s64 	%rd7606, %rd7605, %rd7594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5274,%dummy}, %rd7545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5275}, %rd7545;
	}
	shf.r.wrap.b32 	%r5276, %r5275, %r5274, 19;
	shf.r.wrap.b32 	%r5277, %r5274, %r5275, 19;
	mov.b64 	%rd7607, {%r5277, %r5276};
	shf.l.wrap.b32 	%r5278, %r5274, %r5275, 3;
	shf.l.wrap.b32 	%r5279, %r5275, %r5274, 3;
	mov.b64 	%rd7608, {%r5279, %r5278};
	xor.b64  	%rd7609, %rd7607, %rd7608;
	shr.u64 	%rd7610, %rd7545, 6;
	xor.b64  	%rd7611, %rd7609, %rd7610;
	shf.r.wrap.b32 	%r5280, %r4937, %r4936, 1;
	shf.r.wrap.b32 	%r5281, %r4936, %r4937, 1;
	mov.b64 	%rd7612, {%r5281, %r5280};
	shf.r.wrap.b32 	%r5282, %r4937, %r4936, 8;
	shf.r.wrap.b32 	%r5283, %r4936, %r4937, 8;
	mov.b64 	%rd7613, {%r5283, %r5282};
	xor.b64  	%rd7614, %rd7612, %rd7613;
	shr.u64 	%rd7615, %rd7064, 7;
	xor.b64  	%rd7616, %rd7614, %rd7615;
	add.s64 	%rd7617, %rd7616, %rd7027;
	add.s64 	%rd7618, %rd7617, %rd7360;
	add.s64 	%rd7619, %rd7618, %rd7611;
	add.s64 	%rd7620, %rd7619, %rd7484;
	xor.b64  	%rd7621, %rd7558, %rd7521;
	and.b64  	%rd7622, %rd7595, %rd7621;
	xor.b64  	%rd7623, %rd7622, %rd7521;
	add.s64 	%rd7624, %rd7620, %rd7623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5284,%dummy}, %rd7595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5285}, %rd7595;
	}
	shf.r.wrap.b32 	%r5286, %r5285, %r5284, 14;
	shf.r.wrap.b32 	%r5287, %r5284, %r5285, 14;
	mov.b64 	%rd7625, {%r5287, %r5286};
	shf.r.wrap.b32 	%r5288, %r5285, %r5284, 18;
	shf.r.wrap.b32 	%r5289, %r5284, %r5285, 18;
	mov.b64 	%rd7626, {%r5289, %r5288};
	xor.b64  	%rd7627, %rd7625, %rd7626;
	shf.l.wrap.b32 	%r5290, %r5284, %r5285, 23;
	shf.l.wrap.b32 	%r5291, %r5285, %r5284, 23;
	mov.b64 	%rd7628, {%r5291, %r5290};
	xor.b64  	%rd7629, %rd7627, %rd7628;
	add.s64 	%rd7630, %rd7624, %rd7629;
	add.s64 	%rd7631, %rd7630, -2983346525034927856;
	add.s64 	%rd7632, %rd7631, %rd7495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5292,%dummy}, %rd7606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5293}, %rd7606;
	}
	shf.r.wrap.b32 	%r5294, %r5293, %r5292, 28;
	shf.r.wrap.b32 	%r5295, %r5292, %r5293, 28;
	mov.b64 	%rd7633, {%r5295, %r5294};
	shf.l.wrap.b32 	%r5296, %r5292, %r5293, 30;
	shf.l.wrap.b32 	%r5297, %r5293, %r5292, 30;
	mov.b64 	%rd7634, {%r5297, %r5296};
	xor.b64  	%rd7635, %rd7633, %rd7634;
	shf.l.wrap.b32 	%r5298, %r5292, %r5293, 25;
	shf.l.wrap.b32 	%r5299, %r5293, %r5292, 25;
	mov.b64 	%rd7636, {%r5299, %r5298};
	xor.b64  	%rd7637, %rd7635, %rd7636;
	and.b64  	%rd7638, %rd7606, %rd7569;
	or.b64  	%rd7639, %rd7606, %rd7569;
	and.b64  	%rd7640, %rd7639, %rd7532;
	or.b64  	%rd7641, %rd7640, %rd7638;
	add.s64 	%rd7642, %rd7641, %rd7637;
	add.s64 	%rd7643, %rd7642, %rd7631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5300,%dummy}, %rd7582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5301}, %rd7582;
	}
	shf.r.wrap.b32 	%r5302, %r5301, %r5300, 19;
	shf.r.wrap.b32 	%r5303, %r5300, %r5301, 19;
	mov.b64 	%rd7644, {%r5303, %r5302};
	shf.l.wrap.b32 	%r5304, %r5300, %r5301, 3;
	shf.l.wrap.b32 	%r5305, %r5301, %r5300, 3;
	mov.b64 	%rd7645, {%r5305, %r5304};
	xor.b64  	%rd7646, %rd7644, %rd7645;
	shr.u64 	%rd7647, %rd7582, 6;
	xor.b64  	%rd7648, %rd7646, %rd7647;
	shf.r.wrap.b32 	%r5306, %r4963, %r4962, 1;
	shf.r.wrap.b32 	%r5307, %r4962, %r4963, 1;
	mov.b64 	%rd7649, {%r5307, %r5306};
	shf.r.wrap.b32 	%r5308, %r4963, %r4962, 8;
	shf.r.wrap.b32 	%r5309, %r4962, %r4963, 8;
	mov.b64 	%rd7650, {%r5309, %r5308};
	xor.b64  	%rd7651, %rd7649, %rd7650;
	shr.u64 	%rd7652, %rd7101, 7;
	xor.b64  	%rd7653, %rd7651, %rd7652;
	add.s64 	%rd7654, %rd7653, %rd7064;
	add.s64 	%rd7655, %rd7654, %rd7397;
	add.s64 	%rd7656, %rd7655, %rd7648;
	add.s64 	%rd7657, %rd7656, %rd7521;
	xor.b64  	%rd7658, %rd7595, %rd7558;
	and.b64  	%rd7659, %rd7632, %rd7658;
	xor.b64  	%rd7660, %rd7659, %rd7558;
	add.s64 	%rd7661, %rd7657, %rd7660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5310,%dummy}, %rd7632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5311}, %rd7632;
	}
	shf.r.wrap.b32 	%r5312, %r5311, %r5310, 14;
	shf.r.wrap.b32 	%r5313, %r5310, %r5311, 14;
	mov.b64 	%rd7662, {%r5313, %r5312};
	shf.r.wrap.b32 	%r5314, %r5311, %r5310, 18;
	shf.r.wrap.b32 	%r5315, %r5310, %r5311, 18;
	mov.b64 	%rd7663, {%r5315, %r5314};
	xor.b64  	%rd7664, %rd7662, %rd7663;
	shf.l.wrap.b32 	%r5316, %r5310, %r5311, 23;
	shf.l.wrap.b32 	%r5317, %r5311, %r5310, 23;
	mov.b64 	%rd7665, {%r5317, %r5316};
	xor.b64  	%rd7666, %rd7664, %rd7665;
	add.s64 	%rd7667, %rd7661, %rd7666;
	add.s64 	%rd7668, %rd7667, -860691631967231958;
	add.s64 	%rd7669, %rd7668, %rd7532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5318,%dummy}, %rd7643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5319}, %rd7643;
	}
	shf.r.wrap.b32 	%r5320, %r5319, %r5318, 28;
	shf.r.wrap.b32 	%r5321, %r5318, %r5319, 28;
	mov.b64 	%rd7670, {%r5321, %r5320};
	shf.l.wrap.b32 	%r5322, %r5318, %r5319, 30;
	shf.l.wrap.b32 	%r5323, %r5319, %r5318, 30;
	mov.b64 	%rd7671, {%r5323, %r5322};
	xor.b64  	%rd7672, %rd7670, %rd7671;
	shf.l.wrap.b32 	%r5324, %r5318, %r5319, 25;
	shf.l.wrap.b32 	%r5325, %r5319, %r5318, 25;
	mov.b64 	%rd7673, {%r5325, %r5324};
	xor.b64  	%rd7674, %rd7672, %rd7673;
	and.b64  	%rd7675, %rd7643, %rd7606;
	or.b64  	%rd7676, %rd7643, %rd7606;
	and.b64  	%rd7677, %rd7676, %rd7569;
	or.b64  	%rd7678, %rd7677, %rd7675;
	add.s64 	%rd7679, %rd7678, %rd7674;
	add.s64 	%rd7680, %rd7679, %rd7668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5326,%dummy}, %rd7619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5327}, %rd7619;
	}
	shf.r.wrap.b32 	%r5328, %r5327, %r5326, 19;
	shf.r.wrap.b32 	%r5329, %r5326, %r5327, 19;
	mov.b64 	%rd7681, {%r5329, %r5328};
	shf.l.wrap.b32 	%r5330, %r5326, %r5327, 3;
	shf.l.wrap.b32 	%r5331, %r5327, %r5326, 3;
	mov.b64 	%rd7682, {%r5331, %r5330};
	xor.b64  	%rd7683, %rd7681, %rd7682;
	shr.u64 	%rd7684, %rd7619, 6;
	xor.b64  	%rd7685, %rd7683, %rd7684;
	shf.r.wrap.b32 	%r5332, %r4989, %r4988, 1;
	shf.r.wrap.b32 	%r5333, %r4988, %r4989, 1;
	mov.b64 	%rd7686, {%r5333, %r5332};
	shf.r.wrap.b32 	%r5334, %r4989, %r4988, 8;
	shf.r.wrap.b32 	%r5335, %r4988, %r4989, 8;
	mov.b64 	%rd7687, {%r5335, %r5334};
	xor.b64  	%rd7688, %rd7686, %rd7687;
	shr.u64 	%rd7689, %rd7138, 7;
	xor.b64  	%rd7690, %rd7688, %rd7689;
	add.s64 	%rd7691, %rd7690, %rd7101;
	add.s64 	%rd7692, %rd7691, %rd7434;
	add.s64 	%rd7693, %rd7692, %rd7685;
	add.s64 	%rd7694, %rd7693, %rd7558;
	xor.b64  	%rd7695, %rd7632, %rd7595;
	and.b64  	%rd7696, %rd7669, %rd7695;
	xor.b64  	%rd7697, %rd7696, %rd7595;
	add.s64 	%rd7698, %rd7694, %rd7697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5336,%dummy}, %rd7669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5337}, %rd7669;
	}
	shf.r.wrap.b32 	%r5338, %r5337, %r5336, 14;
	shf.r.wrap.b32 	%r5339, %r5336, %r5337, 14;
	mov.b64 	%rd7699, {%r5339, %r5338};
	shf.r.wrap.b32 	%r5340, %r5337, %r5336, 18;
	shf.r.wrap.b32 	%r5341, %r5336, %r5337, 18;
	mov.b64 	%rd7700, {%r5341, %r5340};
	xor.b64  	%rd7701, %rd7699, %rd7700;
	shf.l.wrap.b32 	%r5342, %r5336, %r5337, 23;
	shf.l.wrap.b32 	%r5343, %r5337, %r5336, 23;
	mov.b64 	%rd7702, {%r5343, %r5342};
	xor.b64  	%rd7703, %rd7701, %rd7702;
	add.s64 	%rd7704, %rd7698, %rd7703;
	add.s64 	%rd7705, %rd7704, 1182934255886127544;
	add.s64 	%rd7706, %rd7705, %rd7569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5344,%dummy}, %rd7680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5345}, %rd7680;
	}
	shf.r.wrap.b32 	%r5346, %r5345, %r5344, 28;
	shf.r.wrap.b32 	%r5347, %r5344, %r5345, 28;
	mov.b64 	%rd7707, {%r5347, %r5346};
	shf.l.wrap.b32 	%r5348, %r5344, %r5345, 30;
	shf.l.wrap.b32 	%r5349, %r5345, %r5344, 30;
	mov.b64 	%rd7708, {%r5349, %r5348};
	xor.b64  	%rd7709, %rd7707, %rd7708;
	shf.l.wrap.b32 	%r5350, %r5344, %r5345, 25;
	shf.l.wrap.b32 	%r5351, %r5345, %r5344, 25;
	mov.b64 	%rd7710, {%r5351, %r5350};
	xor.b64  	%rd7711, %rd7709, %rd7710;
	and.b64  	%rd7712, %rd7680, %rd7643;
	or.b64  	%rd7713, %rd7680, %rd7643;
	and.b64  	%rd7714, %rd7713, %rd7606;
	or.b64  	%rd7715, %rd7714, %rd7712;
	add.s64 	%rd7716, %rd7715, %rd7711;
	add.s64 	%rd7717, %rd7716, %rd7705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5352,%dummy}, %rd7656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5353}, %rd7656;
	}
	shf.r.wrap.b32 	%r5354, %r5353, %r5352, 19;
	shf.r.wrap.b32 	%r5355, %r5352, %r5353, 19;
	mov.b64 	%rd7718, {%r5355, %r5354};
	shf.l.wrap.b32 	%r5356, %r5352, %r5353, 3;
	shf.l.wrap.b32 	%r5357, %r5353, %r5352, 3;
	mov.b64 	%rd7719, {%r5357, %r5356};
	xor.b64  	%rd7720, %rd7718, %rd7719;
	shr.u64 	%rd7721, %rd7656, 6;
	xor.b64  	%rd7722, %rd7720, %rd7721;
	shf.r.wrap.b32 	%r5358, %r5015, %r5014, 1;
	shf.r.wrap.b32 	%r5359, %r5014, %r5015, 1;
	mov.b64 	%rd7723, {%r5359, %r5358};
	shf.r.wrap.b32 	%r5360, %r5015, %r5014, 8;
	shf.r.wrap.b32 	%r5361, %r5014, %r5015, 8;
	mov.b64 	%rd7724, {%r5361, %r5360};
	xor.b64  	%rd7725, %rd7723, %rd7724;
	shr.u64 	%rd7726, %rd7175, 7;
	xor.b64  	%rd7727, %rd7725, %rd7726;
	add.s64 	%rd7728, %rd7727, %rd7138;
	add.s64 	%rd7729, %rd7728, %rd7471;
	add.s64 	%rd7730, %rd7729, %rd7722;
	add.s64 	%rd7731, %rd7730, %rd7595;
	xor.b64  	%rd7732, %rd7669, %rd7632;
	and.b64  	%rd7733, %rd7706, %rd7732;
	xor.b64  	%rd7734, %rd7733, %rd7632;
	add.s64 	%rd7735, %rd7731, %rd7734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5362,%dummy}, %rd7706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5363}, %rd7706;
	}
	shf.r.wrap.b32 	%r5364, %r5363, %r5362, 14;
	shf.r.wrap.b32 	%r5365, %r5362, %r5363, 14;
	mov.b64 	%rd7736, {%r5365, %r5364};
	shf.r.wrap.b32 	%r5366, %r5363, %r5362, 18;
	shf.r.wrap.b32 	%r5367, %r5362, %r5363, 18;
	mov.b64 	%rd7737, {%r5367, %r5366};
	xor.b64  	%rd7738, %rd7736, %rd7737;
	shf.l.wrap.b32 	%r5368, %r5362, %r5363, 23;
	shf.l.wrap.b32 	%r5369, %r5363, %r5362, 23;
	mov.b64 	%rd7739, {%r5369, %r5368};
	xor.b64  	%rd7740, %rd7738, %rd7739;
	add.s64 	%rd7741, %rd7735, %rd7740;
	add.s64 	%rd7742, %rd7741, 1847814050463011016;
	add.s64 	%rd7743, %rd7742, %rd7606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5370,%dummy}, %rd7717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5371}, %rd7717;
	}
	shf.r.wrap.b32 	%r5372, %r5371, %r5370, 28;
	shf.r.wrap.b32 	%r5373, %r5370, %r5371, 28;
	mov.b64 	%rd7744, {%r5373, %r5372};
	shf.l.wrap.b32 	%r5374, %r5370, %r5371, 30;
	shf.l.wrap.b32 	%r5375, %r5371, %r5370, 30;
	mov.b64 	%rd7745, {%r5375, %r5374};
	xor.b64  	%rd7746, %rd7744, %rd7745;
	shf.l.wrap.b32 	%r5376, %r5370, %r5371, 25;
	shf.l.wrap.b32 	%r5377, %r5371, %r5370, 25;
	mov.b64 	%rd7747, {%r5377, %r5376};
	xor.b64  	%rd7748, %rd7746, %rd7747;
	and.b64  	%rd7749, %rd7717, %rd7680;
	or.b64  	%rd7750, %rd7717, %rd7680;
	and.b64  	%rd7751, %rd7750, %rd7643;
	or.b64  	%rd7752, %rd7751, %rd7749;
	add.s64 	%rd7753, %rd7752, %rd7748;
	add.s64 	%rd7754, %rd7753, %rd7742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5378,%dummy}, %rd7693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5379}, %rd7693;
	}
	shf.r.wrap.b32 	%r5380, %r5379, %r5378, 19;
	shf.r.wrap.b32 	%r5381, %r5378, %r5379, 19;
	mov.b64 	%rd7755, {%r5381, %r5380};
	shf.l.wrap.b32 	%r5382, %r5378, %r5379, 3;
	shf.l.wrap.b32 	%r5383, %r5379, %r5378, 3;
	mov.b64 	%rd7756, {%r5383, %r5382};
	xor.b64  	%rd7757, %rd7755, %rd7756;
	shr.u64 	%rd7758, %rd7693, 6;
	xor.b64  	%rd7759, %rd7757, %rd7758;
	shf.r.wrap.b32 	%r5384, %r5041, %r5040, 1;
	shf.r.wrap.b32 	%r5385, %r5040, %r5041, 1;
	mov.b64 	%rd7760, {%r5385, %r5384};
	shf.r.wrap.b32 	%r5386, %r5041, %r5040, 8;
	shf.r.wrap.b32 	%r5387, %r5040, %r5041, 8;
	mov.b64 	%rd7761, {%r5387, %r5386};
	xor.b64  	%rd7762, %rd7760, %rd7761;
	shr.u64 	%rd7763, %rd7212, 7;
	xor.b64  	%rd7764, %rd7762, %rd7763;
	add.s64 	%rd7765, %rd7764, %rd7175;
	add.s64 	%rd7766, %rd7765, %rd7508;
	add.s64 	%rd7767, %rd7766, %rd7759;
	add.s64 	%rd7768, %rd7767, %rd7632;
	xor.b64  	%rd7769, %rd7706, %rd7669;
	and.b64  	%rd7770, %rd7743, %rd7769;
	xor.b64  	%rd7771, %rd7770, %rd7669;
	add.s64 	%rd7772, %rd7768, %rd7771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5388,%dummy}, %rd7743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5389}, %rd7743;
	}
	shf.r.wrap.b32 	%r5390, %r5389, %r5388, 14;
	shf.r.wrap.b32 	%r5391, %r5388, %r5389, 14;
	mov.b64 	%rd7773, {%r5391, %r5390};
	shf.r.wrap.b32 	%r5392, %r5389, %r5388, 18;
	shf.r.wrap.b32 	%r5393, %r5388, %r5389, 18;
	mov.b64 	%rd7774, {%r5393, %r5392};
	xor.b64  	%rd7775, %rd7773, %rd7774;
	shf.l.wrap.b32 	%r5394, %r5388, %r5389, 23;
	shf.l.wrap.b32 	%r5395, %r5389, %r5388, 23;
	mov.b64 	%rd7776, {%r5395, %r5394};
	xor.b64  	%rd7777, %rd7775, %rd7776;
	add.s64 	%rd7778, %rd7772, %rd7777;
	add.s64 	%rd7779, %rd7778, 2177327727835720531;
	add.s64 	%rd7780, %rd7779, %rd7643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5396,%dummy}, %rd7754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5397}, %rd7754;
	}
	shf.r.wrap.b32 	%r5398, %r5397, %r5396, 28;
	shf.r.wrap.b32 	%r5399, %r5396, %r5397, 28;
	mov.b64 	%rd7781, {%r5399, %r5398};
	shf.l.wrap.b32 	%r5400, %r5396, %r5397, 30;
	shf.l.wrap.b32 	%r5401, %r5397, %r5396, 30;
	mov.b64 	%rd7782, {%r5401, %r5400};
	xor.b64  	%rd7783, %rd7781, %rd7782;
	shf.l.wrap.b32 	%r5402, %r5396, %r5397, 25;
	shf.l.wrap.b32 	%r5403, %r5397, %r5396, 25;
	mov.b64 	%rd7784, {%r5403, %r5402};
	xor.b64  	%rd7785, %rd7783, %rd7784;
	and.b64  	%rd7786, %rd7754, %rd7717;
	or.b64  	%rd7787, %rd7754, %rd7717;
	and.b64  	%rd7788, %rd7787, %rd7680;
	or.b64  	%rd7789, %rd7788, %rd7786;
	add.s64 	%rd7790, %rd7789, %rd7785;
	add.s64 	%rd7791, %rd7790, %rd7779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5404,%dummy}, %rd7730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5405}, %rd7730;
	}
	shf.r.wrap.b32 	%r5406, %r5405, %r5404, 19;
	shf.r.wrap.b32 	%r5407, %r5404, %r5405, 19;
	mov.b64 	%rd7792, {%r5407, %r5406};
	shf.l.wrap.b32 	%r5408, %r5404, %r5405, 3;
	shf.l.wrap.b32 	%r5409, %r5405, %r5404, 3;
	mov.b64 	%rd7793, {%r5409, %r5408};
	xor.b64  	%rd7794, %rd7792, %rd7793;
	shr.u64 	%rd7795, %rd7730, 6;
	xor.b64  	%rd7796, %rd7794, %rd7795;
	shf.r.wrap.b32 	%r5410, %r5067, %r5066, 1;
	shf.r.wrap.b32 	%r5411, %r5066, %r5067, 1;
	mov.b64 	%rd7797, {%r5411, %r5410};
	shf.r.wrap.b32 	%r5412, %r5067, %r5066, 8;
	shf.r.wrap.b32 	%r5413, %r5066, %r5067, 8;
	mov.b64 	%rd7798, {%r5413, %r5412};
	xor.b64  	%rd7799, %rd7797, %rd7798;
	shr.u64 	%rd7800, %rd7249, 7;
	xor.b64  	%rd7801, %rd7799, %rd7800;
	add.s64 	%rd7802, %rd7801, %rd7212;
	add.s64 	%rd7803, %rd7802, %rd7545;
	add.s64 	%rd7804, %rd7803, %rd7796;
	add.s64 	%rd7805, %rd7804, %rd7669;
	xor.b64  	%rd7806, %rd7743, %rd7706;
	and.b64  	%rd7807, %rd7780, %rd7806;
	xor.b64  	%rd7808, %rd7807, %rd7706;
	add.s64 	%rd7809, %rd7805, %rd7808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5414,%dummy}, %rd7780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5415}, %rd7780;
	}
	shf.r.wrap.b32 	%r5416, %r5415, %r5414, 14;
	shf.r.wrap.b32 	%r5417, %r5414, %r5415, 14;
	mov.b64 	%rd7810, {%r5417, %r5416};
	shf.r.wrap.b32 	%r5418, %r5415, %r5414, 18;
	shf.r.wrap.b32 	%r5419, %r5414, %r5415, 18;
	mov.b64 	%rd7811, {%r5419, %r5418};
	xor.b64  	%rd7812, %rd7810, %rd7811;
	shf.l.wrap.b32 	%r5420, %r5414, %r5415, 23;
	shf.l.wrap.b32 	%r5421, %r5415, %r5414, 23;
	mov.b64 	%rd7813, {%r5421, %r5420};
	xor.b64  	%rd7814, %rd7812, %rd7813;
	add.s64 	%rd7815, %rd7809, %rd7814;
	add.s64 	%rd7816, %rd7815, 2830643537854262169;
	add.s64 	%rd7817, %rd7816, %rd7680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5422,%dummy}, %rd7791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5423}, %rd7791;
	}
	shf.r.wrap.b32 	%r5424, %r5423, %r5422, 28;
	shf.r.wrap.b32 	%r5425, %r5422, %r5423, 28;
	mov.b64 	%rd7818, {%r5425, %r5424};
	shf.l.wrap.b32 	%r5426, %r5422, %r5423, 30;
	shf.l.wrap.b32 	%r5427, %r5423, %r5422, 30;
	mov.b64 	%rd7819, {%r5427, %r5426};
	xor.b64  	%rd7820, %rd7818, %rd7819;
	shf.l.wrap.b32 	%r5428, %r5422, %r5423, 25;
	shf.l.wrap.b32 	%r5429, %r5423, %r5422, 25;
	mov.b64 	%rd7821, {%r5429, %r5428};
	xor.b64  	%rd7822, %rd7820, %rd7821;
	and.b64  	%rd7823, %rd7791, %rd7754;
	or.b64  	%rd7824, %rd7791, %rd7754;
	and.b64  	%rd7825, %rd7824, %rd7717;
	or.b64  	%rd7826, %rd7825, %rd7823;
	add.s64 	%rd7827, %rd7826, %rd7822;
	add.s64 	%rd7828, %rd7827, %rd7816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5430,%dummy}, %rd7767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5431}, %rd7767;
	}
	shf.r.wrap.b32 	%r5432, %r5431, %r5430, 19;
	shf.r.wrap.b32 	%r5433, %r5430, %r5431, 19;
	mov.b64 	%rd7829, {%r5433, %r5432};
	shf.l.wrap.b32 	%r5434, %r5430, %r5431, 3;
	shf.l.wrap.b32 	%r5435, %r5431, %r5430, 3;
	mov.b64 	%rd7830, {%r5435, %r5434};
	xor.b64  	%rd7831, %rd7829, %rd7830;
	shr.u64 	%rd7832, %rd7767, 6;
	xor.b64  	%rd7833, %rd7831, %rd7832;
	shf.r.wrap.b32 	%r5436, %r5093, %r5092, 1;
	shf.r.wrap.b32 	%r5437, %r5092, %r5093, 1;
	mov.b64 	%rd7834, {%r5437, %r5436};
	shf.r.wrap.b32 	%r5438, %r5093, %r5092, 8;
	shf.r.wrap.b32 	%r5439, %r5092, %r5093, 8;
	mov.b64 	%rd7835, {%r5439, %r5438};
	xor.b64  	%rd7836, %rd7834, %rd7835;
	shr.u64 	%rd7837, %rd7286, 7;
	xor.b64  	%rd7838, %rd7836, %rd7837;
	add.s64 	%rd7839, %rd7838, %rd7249;
	add.s64 	%rd7840, %rd7839, %rd7582;
	add.s64 	%rd7841, %rd7840, %rd7833;
	add.s64 	%rd7842, %rd7841, %rd7706;
	xor.b64  	%rd7843, %rd7780, %rd7743;
	and.b64  	%rd7844, %rd7817, %rd7843;
	xor.b64  	%rd7845, %rd7844, %rd7743;
	add.s64 	%rd7846, %rd7842, %rd7845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5440,%dummy}, %rd7817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5441}, %rd7817;
	}
	shf.r.wrap.b32 	%r5442, %r5441, %r5440, 14;
	shf.r.wrap.b32 	%r5443, %r5440, %r5441, 14;
	mov.b64 	%rd7847, {%r5443, %r5442};
	shf.r.wrap.b32 	%r5444, %r5441, %r5440, 18;
	shf.r.wrap.b32 	%r5445, %r5440, %r5441, 18;
	mov.b64 	%rd7848, {%r5445, %r5444};
	xor.b64  	%rd7849, %rd7847, %rd7848;
	shf.l.wrap.b32 	%r5446, %r5440, %r5441, 23;
	shf.l.wrap.b32 	%r5447, %r5441, %r5440, 23;
	mov.b64 	%rd7850, {%r5447, %r5446};
	xor.b64  	%rd7851, %rd7849, %rd7850;
	add.s64 	%rd7852, %rd7846, %rd7851;
	add.s64 	%rd7853, %rd7852, 3796741975233480872;
	add.s64 	%rd7854, %rd7853, %rd7717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5448,%dummy}, %rd7828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5449}, %rd7828;
	}
	shf.r.wrap.b32 	%r5450, %r5449, %r5448, 28;
	shf.r.wrap.b32 	%r5451, %r5448, %r5449, 28;
	mov.b64 	%rd7855, {%r5451, %r5450};
	shf.l.wrap.b32 	%r5452, %r5448, %r5449, 30;
	shf.l.wrap.b32 	%r5453, %r5449, %r5448, 30;
	mov.b64 	%rd7856, {%r5453, %r5452};
	xor.b64  	%rd7857, %rd7855, %rd7856;
	shf.l.wrap.b32 	%r5454, %r5448, %r5449, 25;
	shf.l.wrap.b32 	%r5455, %r5449, %r5448, 25;
	mov.b64 	%rd7858, {%r5455, %r5454};
	xor.b64  	%rd7859, %rd7857, %rd7858;
	and.b64  	%rd7860, %rd7828, %rd7791;
	or.b64  	%rd7861, %rd7828, %rd7791;
	and.b64  	%rd7862, %rd7861, %rd7754;
	or.b64  	%rd7863, %rd7862, %rd7860;
	add.s64 	%rd7864, %rd7863, %rd7859;
	add.s64 	%rd7865, %rd7864, %rd7853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5456,%dummy}, %rd7804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5457}, %rd7804;
	}
	shf.r.wrap.b32 	%r5458, %r5457, %r5456, 19;
	shf.r.wrap.b32 	%r5459, %r5456, %r5457, 19;
	mov.b64 	%rd7866, {%r5459, %r5458};
	shf.l.wrap.b32 	%r5460, %r5456, %r5457, 3;
	shf.l.wrap.b32 	%r5461, %r5457, %r5456, 3;
	mov.b64 	%rd7867, {%r5461, %r5460};
	xor.b64  	%rd7868, %rd7866, %rd7867;
	shr.u64 	%rd7869, %rd7804, 6;
	xor.b64  	%rd7870, %rd7868, %rd7869;
	shf.r.wrap.b32 	%r5462, %r5119, %r5118, 1;
	shf.r.wrap.b32 	%r5463, %r5118, %r5119, 1;
	mov.b64 	%rd7871, {%r5463, %r5462};
	shf.r.wrap.b32 	%r5464, %r5119, %r5118, 8;
	shf.r.wrap.b32 	%r5465, %r5118, %r5119, 8;
	mov.b64 	%rd7872, {%r5465, %r5464};
	xor.b64  	%rd7873, %rd7871, %rd7872;
	shr.u64 	%rd7874, %rd7323, 7;
	xor.b64  	%rd7875, %rd7873, %rd7874;
	add.s64 	%rd7876, %rd7875, %rd7286;
	add.s64 	%rd7877, %rd7876, %rd7619;
	add.s64 	%rd7878, %rd7877, %rd7870;
	add.s64 	%rd7879, %rd7878, %rd7743;
	xor.b64  	%rd7880, %rd7817, %rd7780;
	and.b64  	%rd7881, %rd7854, %rd7880;
	xor.b64  	%rd7882, %rd7881, %rd7780;
	add.s64 	%rd7883, %rd7879, %rd7882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5466,%dummy}, %rd7854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5467}, %rd7854;
	}
	shf.r.wrap.b32 	%r5468, %r5467, %r5466, 14;
	shf.r.wrap.b32 	%r5469, %r5466, %r5467, 14;
	mov.b64 	%rd7884, {%r5469, %r5468};
	shf.r.wrap.b32 	%r5470, %r5467, %r5466, 18;
	shf.r.wrap.b32 	%r5471, %r5466, %r5467, 18;
	mov.b64 	%rd7885, {%r5471, %r5470};
	xor.b64  	%rd7886, %rd7884, %rd7885;
	shf.l.wrap.b32 	%r5472, %r5466, %r5467, 23;
	shf.l.wrap.b32 	%r5473, %r5467, %r5466, 23;
	mov.b64 	%rd7887, {%r5473, %r5472};
	xor.b64  	%rd7888, %rd7886, %rd7887;
	add.s64 	%rd7889, %rd7883, %rd7888;
	add.s64 	%rd7890, %rd7889, 4115178125766777443;
	add.s64 	%rd7891, %rd7890, %rd7754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5474,%dummy}, %rd7865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5475}, %rd7865;
	}
	shf.r.wrap.b32 	%r5476, %r5475, %r5474, 28;
	shf.r.wrap.b32 	%r5477, %r5474, %r5475, 28;
	mov.b64 	%rd7892, {%r5477, %r5476};
	shf.l.wrap.b32 	%r5478, %r5474, %r5475, 30;
	shf.l.wrap.b32 	%r5479, %r5475, %r5474, 30;
	mov.b64 	%rd7893, {%r5479, %r5478};
	xor.b64  	%rd7894, %rd7892, %rd7893;
	shf.l.wrap.b32 	%r5480, %r5474, %r5475, 25;
	shf.l.wrap.b32 	%r5481, %r5475, %r5474, 25;
	mov.b64 	%rd7895, {%r5481, %r5480};
	xor.b64  	%rd7896, %rd7894, %rd7895;
	and.b64  	%rd7897, %rd7865, %rd7828;
	or.b64  	%rd7898, %rd7865, %rd7828;
	and.b64  	%rd7899, %rd7898, %rd7791;
	or.b64  	%rd7900, %rd7899, %rd7897;
	add.s64 	%rd7901, %rd7900, %rd7896;
	add.s64 	%rd7902, %rd7901, %rd7890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5482,%dummy}, %rd7841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5483}, %rd7841;
	}
	shf.r.wrap.b32 	%r5484, %r5483, %r5482, 19;
	shf.r.wrap.b32 	%r5485, %r5482, %r5483, 19;
	mov.b64 	%rd7903, {%r5485, %r5484};
	shf.l.wrap.b32 	%r5486, %r5482, %r5483, 3;
	shf.l.wrap.b32 	%r5487, %r5483, %r5482, 3;
	mov.b64 	%rd7904, {%r5487, %r5486};
	xor.b64  	%rd7905, %rd7903, %rd7904;
	shr.u64 	%rd7906, %rd7841, 6;
	xor.b64  	%rd7907, %rd7905, %rd7906;
	shf.r.wrap.b32 	%r5488, %r5145, %r5144, 1;
	shf.r.wrap.b32 	%r5489, %r5144, %r5145, 1;
	mov.b64 	%rd7908, {%r5489, %r5488};
	shf.r.wrap.b32 	%r5490, %r5145, %r5144, 8;
	shf.r.wrap.b32 	%r5491, %r5144, %r5145, 8;
	mov.b64 	%rd7909, {%r5491, %r5490};
	xor.b64  	%rd7910, %rd7908, %rd7909;
	shr.u64 	%rd7911, %rd7360, 7;
	xor.b64  	%rd7912, %rd7910, %rd7911;
	add.s64 	%rd7913, %rd7912, %rd7323;
	add.s64 	%rd7914, %rd7913, %rd7656;
	add.s64 	%rd7915, %rd7914, %rd7907;
	add.s64 	%rd7916, %rd7915, %rd7780;
	xor.b64  	%rd7917, %rd7854, %rd7817;
	and.b64  	%rd7918, %rd7891, %rd7917;
	xor.b64  	%rd7919, %rd7918, %rd7817;
	add.s64 	%rd7920, %rd7916, %rd7919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5492,%dummy}, %rd7891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5493}, %rd7891;
	}
	shf.r.wrap.b32 	%r5494, %r5493, %r5492, 14;
	shf.r.wrap.b32 	%r5495, %r5492, %r5493, 14;
	mov.b64 	%rd7921, {%r5495, %r5494};
	shf.r.wrap.b32 	%r5496, %r5493, %r5492, 18;
	shf.r.wrap.b32 	%r5497, %r5492, %r5493, 18;
	mov.b64 	%rd7922, {%r5497, %r5496};
	xor.b64  	%rd7923, %rd7921, %rd7922;
	shf.l.wrap.b32 	%r5498, %r5492, %r5493, 23;
	shf.l.wrap.b32 	%r5499, %r5493, %r5492, 23;
	mov.b64 	%rd7924, {%r5499, %r5498};
	xor.b64  	%rd7925, %rd7923, %rd7924;
	add.s64 	%rd7926, %rd7920, %rd7925;
	add.s64 	%rd7927, %rd7926, 5681478168544905931;
	add.s64 	%rd7928, %rd7927, %rd7791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5500,%dummy}, %rd7902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5501}, %rd7902;
	}
	shf.r.wrap.b32 	%r5502, %r5501, %r5500, 28;
	shf.r.wrap.b32 	%r5503, %r5500, %r5501, 28;
	mov.b64 	%rd7929, {%r5503, %r5502};
	shf.l.wrap.b32 	%r5504, %r5500, %r5501, 30;
	shf.l.wrap.b32 	%r5505, %r5501, %r5500, 30;
	mov.b64 	%rd7930, {%r5505, %r5504};
	xor.b64  	%rd7931, %rd7929, %rd7930;
	shf.l.wrap.b32 	%r5506, %r5500, %r5501, 25;
	shf.l.wrap.b32 	%r5507, %r5501, %r5500, 25;
	mov.b64 	%rd7932, {%r5507, %r5506};
	xor.b64  	%rd7933, %rd7931, %rd7932;
	and.b64  	%rd7934, %rd7902, %rd7865;
	or.b64  	%rd7935, %rd7902, %rd7865;
	and.b64  	%rd7936, %rd7935, %rd7828;
	or.b64  	%rd7937, %rd7936, %rd7934;
	add.s64 	%rd7938, %rd7937, %rd7933;
	add.s64 	%rd7939, %rd7938, %rd7927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5508,%dummy}, %rd7878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5509}, %rd7878;
	}
	shf.r.wrap.b32 	%r5510, %r5509, %r5508, 19;
	shf.r.wrap.b32 	%r5511, %r5508, %r5509, 19;
	mov.b64 	%rd7940, {%r5511, %r5510};
	shf.l.wrap.b32 	%r5512, %r5508, %r5509, 3;
	shf.l.wrap.b32 	%r5513, %r5509, %r5508, 3;
	mov.b64 	%rd7941, {%r5513, %r5512};
	xor.b64  	%rd7942, %rd7940, %rd7941;
	shr.u64 	%rd7943, %rd7878, 6;
	xor.b64  	%rd7944, %rd7942, %rd7943;
	shf.r.wrap.b32 	%r5514, %r5171, %r5170, 1;
	shf.r.wrap.b32 	%r5515, %r5170, %r5171, 1;
	mov.b64 	%rd7945, {%r5515, %r5514};
	shf.r.wrap.b32 	%r5516, %r5171, %r5170, 8;
	shf.r.wrap.b32 	%r5517, %r5170, %r5171, 8;
	mov.b64 	%rd7946, {%r5517, %r5516};
	xor.b64  	%rd7947, %rd7945, %rd7946;
	shr.u64 	%rd7948, %rd7397, 7;
	xor.b64  	%rd7949, %rd7947, %rd7948;
	add.s64 	%rd7950, %rd7949, %rd7360;
	add.s64 	%rd7951, %rd7950, %rd7693;
	add.s64 	%rd7952, %rd7951, %rd7944;
	add.s64 	%rd7953, %rd7952, %rd7817;
	xor.b64  	%rd7954, %rd7891, %rd7854;
	and.b64  	%rd7955, %rd7928, %rd7954;
	xor.b64  	%rd7956, %rd7955, %rd7854;
	add.s64 	%rd7957, %rd7953, %rd7956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5518,%dummy}, %rd7928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5519}, %rd7928;
	}
	shf.r.wrap.b32 	%r5520, %r5519, %r5518, 14;
	shf.r.wrap.b32 	%r5521, %r5518, %r5519, 14;
	mov.b64 	%rd7958, {%r5521, %r5520};
	shf.r.wrap.b32 	%r5522, %r5519, %r5518, 18;
	shf.r.wrap.b32 	%r5523, %r5518, %r5519, 18;
	mov.b64 	%rd7959, {%r5523, %r5522};
	xor.b64  	%rd7960, %rd7958, %rd7959;
	shf.l.wrap.b32 	%r5524, %r5518, %r5519, 23;
	shf.l.wrap.b32 	%r5525, %r5519, %r5518, 23;
	mov.b64 	%rd7961, {%r5525, %r5524};
	xor.b64  	%rd7962, %rd7960, %rd7961;
	add.s64 	%rd7963, %rd7957, %rd7962;
	add.s64 	%rd7964, %rd7963, 6601373596472566643;
	add.s64 	%rd7965, %rd7964, %rd7828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5526,%dummy}, %rd7939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5527}, %rd7939;
	}
	shf.r.wrap.b32 	%r5528, %r5527, %r5526, 28;
	shf.r.wrap.b32 	%r5529, %r5526, %r5527, 28;
	mov.b64 	%rd7966, {%r5529, %r5528};
	shf.l.wrap.b32 	%r5530, %r5526, %r5527, 30;
	shf.l.wrap.b32 	%r5531, %r5527, %r5526, 30;
	mov.b64 	%rd7967, {%r5531, %r5530};
	xor.b64  	%rd7968, %rd7966, %rd7967;
	shf.l.wrap.b32 	%r5532, %r5526, %r5527, 25;
	shf.l.wrap.b32 	%r5533, %r5527, %r5526, 25;
	mov.b64 	%rd7969, {%r5533, %r5532};
	xor.b64  	%rd7970, %rd7968, %rd7969;
	and.b64  	%rd7971, %rd7939, %rd7902;
	or.b64  	%rd7972, %rd7939, %rd7902;
	and.b64  	%rd7973, %rd7972, %rd7865;
	or.b64  	%rd7974, %rd7973, %rd7971;
	add.s64 	%rd7975, %rd7974, %rd7970;
	add.s64 	%rd7976, %rd7975, %rd7964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5534,%dummy}, %rd7915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5535}, %rd7915;
	}
	shf.r.wrap.b32 	%r5536, %r5535, %r5534, 19;
	shf.r.wrap.b32 	%r5537, %r5534, %r5535, 19;
	mov.b64 	%rd7977, {%r5537, %r5536};
	shf.l.wrap.b32 	%r5538, %r5534, %r5535, 3;
	shf.l.wrap.b32 	%r5539, %r5535, %r5534, 3;
	mov.b64 	%rd7978, {%r5539, %r5538};
	xor.b64  	%rd7979, %rd7977, %rd7978;
	shr.u64 	%rd7980, %rd7915, 6;
	xor.b64  	%rd7981, %rd7979, %rd7980;
	shf.r.wrap.b32 	%r5540, %r5197, %r5196, 1;
	shf.r.wrap.b32 	%r5541, %r5196, %r5197, 1;
	mov.b64 	%rd7982, {%r5541, %r5540};
	shf.r.wrap.b32 	%r5542, %r5197, %r5196, 8;
	shf.r.wrap.b32 	%r5543, %r5196, %r5197, 8;
	mov.b64 	%rd7983, {%r5543, %r5542};
	xor.b64  	%rd7984, %rd7982, %rd7983;
	shr.u64 	%rd7985, %rd7434, 7;
	xor.b64  	%rd7986, %rd7984, %rd7985;
	add.s64 	%rd7987, %rd7986, %rd7397;
	add.s64 	%rd7988, %rd7987, %rd7730;
	add.s64 	%rd7989, %rd7988, %rd7981;
	add.s64 	%rd7990, %rd7989, %rd7854;
	xor.b64  	%rd7991, %rd7928, %rd7891;
	and.b64  	%rd7992, %rd7965, %rd7991;
	xor.b64  	%rd7993, %rd7992, %rd7891;
	add.s64 	%rd7994, %rd7990, %rd7993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5544,%dummy}, %rd7965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5545}, %rd7965;
	}
	shf.r.wrap.b32 	%r5546, %r5545, %r5544, 14;
	shf.r.wrap.b32 	%r5547, %r5544, %r5545, 14;
	mov.b64 	%rd7995, {%r5547, %r5546};
	shf.r.wrap.b32 	%r5548, %r5545, %r5544, 18;
	shf.r.wrap.b32 	%r5549, %r5544, %r5545, 18;
	mov.b64 	%rd7996, {%r5549, %r5548};
	xor.b64  	%rd7997, %rd7995, %rd7996;
	shf.l.wrap.b32 	%r5550, %r5544, %r5545, 23;
	shf.l.wrap.b32 	%r5551, %r5545, %r5544, 23;
	mov.b64 	%rd7998, {%r5551, %r5550};
	xor.b64  	%rd7999, %rd7997, %rd7998;
	add.s64 	%rd8000, %rd7994, %rd7999;
	add.s64 	%rd8001, %rd8000, 7507060721942968483;
	add.s64 	%rd8002, %rd8001, %rd7865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5552,%dummy}, %rd7976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5553}, %rd7976;
	}
	shf.r.wrap.b32 	%r5554, %r5553, %r5552, 28;
	shf.r.wrap.b32 	%r5555, %r5552, %r5553, 28;
	mov.b64 	%rd8003, {%r5555, %r5554};
	shf.l.wrap.b32 	%r5556, %r5552, %r5553, 30;
	shf.l.wrap.b32 	%r5557, %r5553, %r5552, 30;
	mov.b64 	%rd8004, {%r5557, %r5556};
	xor.b64  	%rd8005, %rd8003, %rd8004;
	shf.l.wrap.b32 	%r5558, %r5552, %r5553, 25;
	shf.l.wrap.b32 	%r5559, %r5553, %r5552, 25;
	mov.b64 	%rd8006, {%r5559, %r5558};
	xor.b64  	%rd8007, %rd8005, %rd8006;
	and.b64  	%rd8008, %rd7976, %rd7939;
	or.b64  	%rd8009, %rd7976, %rd7939;
	and.b64  	%rd8010, %rd8009, %rd7902;
	or.b64  	%rd8011, %rd8010, %rd8008;
	add.s64 	%rd8012, %rd8011, %rd8007;
	add.s64 	%rd8013, %rd8012, %rd8001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5560,%dummy}, %rd7952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5561}, %rd7952;
	}
	shf.r.wrap.b32 	%r5562, %r5561, %r5560, 19;
	shf.r.wrap.b32 	%r5563, %r5560, %r5561, 19;
	mov.b64 	%rd8014, {%r5563, %r5562};
	shf.l.wrap.b32 	%r5564, %r5560, %r5561, 3;
	shf.l.wrap.b32 	%r5565, %r5561, %r5560, 3;
	mov.b64 	%rd8015, {%r5565, %r5564};
	xor.b64  	%rd8016, %rd8014, %rd8015;
	shr.u64 	%rd8017, %rd7952, 6;
	xor.b64  	%rd8018, %rd8016, %rd8017;
	shf.r.wrap.b32 	%r5566, %r5223, %r5222, 1;
	shf.r.wrap.b32 	%r5567, %r5222, %r5223, 1;
	mov.b64 	%rd8019, {%r5567, %r5566};
	shf.r.wrap.b32 	%r5568, %r5223, %r5222, 8;
	shf.r.wrap.b32 	%r5569, %r5222, %r5223, 8;
	mov.b64 	%rd8020, {%r5569, %r5568};
	xor.b64  	%rd8021, %rd8019, %rd8020;
	shr.u64 	%rd8022, %rd7471, 7;
	xor.b64  	%rd8023, %rd8021, %rd8022;
	add.s64 	%rd8024, %rd8023, %rd7434;
	add.s64 	%rd8025, %rd8024, %rd7767;
	add.s64 	%rd8026, %rd8025, %rd8018;
	add.s64 	%rd8027, %rd8026, %rd7891;
	xor.b64  	%rd8028, %rd7965, %rd7928;
	and.b64  	%rd8029, %rd8002, %rd8028;
	xor.b64  	%rd8030, %rd8029, %rd7928;
	add.s64 	%rd8031, %rd8027, %rd8030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5570,%dummy}, %rd8002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5571}, %rd8002;
	}
	shf.r.wrap.b32 	%r5572, %r5571, %r5570, 14;
	shf.r.wrap.b32 	%r5573, %r5570, %r5571, 14;
	mov.b64 	%rd8032, {%r5573, %r5572};
	shf.r.wrap.b32 	%r5574, %r5571, %r5570, 18;
	shf.r.wrap.b32 	%r5575, %r5570, %r5571, 18;
	mov.b64 	%rd8033, {%r5575, %r5574};
	xor.b64  	%rd8034, %rd8032, %rd8033;
	shf.l.wrap.b32 	%r5576, %r5570, %r5571, 23;
	shf.l.wrap.b32 	%r5577, %r5571, %r5570, 23;
	mov.b64 	%rd8035, {%r5577, %r5576};
	xor.b64  	%rd8036, %rd8034, %rd8035;
	add.s64 	%rd8037, %rd8031, %rd8036;
	add.s64 	%rd8038, %rd8037, 8399075790359081724;
	add.s64 	%rd8039, %rd8038, %rd7902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5578,%dummy}, %rd8013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5579}, %rd8013;
	}
	shf.r.wrap.b32 	%r5580, %r5579, %r5578, 28;
	shf.r.wrap.b32 	%r5581, %r5578, %r5579, 28;
	mov.b64 	%rd8040, {%r5581, %r5580};
	shf.l.wrap.b32 	%r5582, %r5578, %r5579, 30;
	shf.l.wrap.b32 	%r5583, %r5579, %r5578, 30;
	mov.b64 	%rd8041, {%r5583, %r5582};
	xor.b64  	%rd8042, %rd8040, %rd8041;
	shf.l.wrap.b32 	%r5584, %r5578, %r5579, 25;
	shf.l.wrap.b32 	%r5585, %r5579, %r5578, 25;
	mov.b64 	%rd8043, {%r5585, %r5584};
	xor.b64  	%rd8044, %rd8042, %rd8043;
	and.b64  	%rd8045, %rd8013, %rd7976;
	or.b64  	%rd8046, %rd8013, %rd7976;
	and.b64  	%rd8047, %rd8046, %rd7939;
	or.b64  	%rd8048, %rd8047, %rd8045;
	add.s64 	%rd8049, %rd8048, %rd8044;
	add.s64 	%rd8050, %rd8049, %rd8038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5586,%dummy}, %rd7989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5587}, %rd7989;
	}
	shf.r.wrap.b32 	%r5588, %r5587, %r5586, 19;
	shf.r.wrap.b32 	%r5589, %r5586, %r5587, 19;
	mov.b64 	%rd8051, {%r5589, %r5588};
	shf.l.wrap.b32 	%r5590, %r5586, %r5587, 3;
	shf.l.wrap.b32 	%r5591, %r5587, %r5586, 3;
	mov.b64 	%rd8052, {%r5591, %r5590};
	xor.b64  	%rd8053, %rd8051, %rd8052;
	shr.u64 	%rd8054, %rd7989, 6;
	xor.b64  	%rd8055, %rd8053, %rd8054;
	shf.r.wrap.b32 	%r5592, %r5249, %r5248, 1;
	shf.r.wrap.b32 	%r5593, %r5248, %r5249, 1;
	mov.b64 	%rd8056, {%r5593, %r5592};
	shf.r.wrap.b32 	%r5594, %r5249, %r5248, 8;
	shf.r.wrap.b32 	%r5595, %r5248, %r5249, 8;
	mov.b64 	%rd8057, {%r5595, %r5594};
	xor.b64  	%rd8058, %rd8056, %rd8057;
	shr.u64 	%rd8059, %rd7508, 7;
	xor.b64  	%rd8060, %rd8058, %rd8059;
	add.s64 	%rd8061, %rd8060, %rd7471;
	add.s64 	%rd8062, %rd8061, %rd7804;
	add.s64 	%rd8063, %rd8062, %rd8055;
	add.s64 	%rd8064, %rd8063, %rd7928;
	xor.b64  	%rd8065, %rd8002, %rd7965;
	and.b64  	%rd8066, %rd8039, %rd8065;
	xor.b64  	%rd8067, %rd8066, %rd7965;
	add.s64 	%rd8068, %rd8064, %rd8067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5596,%dummy}, %rd8039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5597}, %rd8039;
	}
	shf.r.wrap.b32 	%r5598, %r5597, %r5596, 14;
	shf.r.wrap.b32 	%r5599, %r5596, %r5597, 14;
	mov.b64 	%rd8069, {%r5599, %r5598};
	shf.r.wrap.b32 	%r5600, %r5597, %r5596, 18;
	shf.r.wrap.b32 	%r5601, %r5596, %r5597, 18;
	mov.b64 	%rd8070, {%r5601, %r5600};
	xor.b64  	%rd8071, %rd8069, %rd8070;
	shf.l.wrap.b32 	%r5602, %r5596, %r5597, 23;
	shf.l.wrap.b32 	%r5603, %r5597, %r5596, 23;
	mov.b64 	%rd8072, {%r5603, %r5602};
	xor.b64  	%rd8073, %rd8071, %rd8072;
	add.s64 	%rd8074, %rd8068, %rd8073;
	add.s64 	%rd8075, %rd8074, 8693463985226723168;
	add.s64 	%rd8076, %rd8075, %rd7939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5604,%dummy}, %rd8050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5605}, %rd8050;
	}
	shf.r.wrap.b32 	%r5606, %r5605, %r5604, 28;
	shf.r.wrap.b32 	%r5607, %r5604, %r5605, 28;
	mov.b64 	%rd8077, {%r5607, %r5606};
	shf.l.wrap.b32 	%r5608, %r5604, %r5605, 30;
	shf.l.wrap.b32 	%r5609, %r5605, %r5604, 30;
	mov.b64 	%rd8078, {%r5609, %r5608};
	xor.b64  	%rd8079, %rd8077, %rd8078;
	shf.l.wrap.b32 	%r5610, %r5604, %r5605, 25;
	shf.l.wrap.b32 	%r5611, %r5605, %r5604, 25;
	mov.b64 	%rd8080, {%r5611, %r5610};
	xor.b64  	%rd8081, %rd8079, %rd8080;
	and.b64  	%rd8082, %rd8050, %rd8013;
	or.b64  	%rd8083, %rd8050, %rd8013;
	and.b64  	%rd8084, %rd8083, %rd7976;
	or.b64  	%rd8085, %rd8084, %rd8082;
	add.s64 	%rd8086, %rd8085, %rd8081;
	add.s64 	%rd8087, %rd8086, %rd8075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5612,%dummy}, %rd8026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5613}, %rd8026;
	}
	shf.r.wrap.b32 	%r5614, %r5613, %r5612, 19;
	shf.r.wrap.b32 	%r5615, %r5612, %r5613, 19;
	mov.b64 	%rd8088, {%r5615, %r5614};
	shf.l.wrap.b32 	%r5616, %r5612, %r5613, 3;
	shf.l.wrap.b32 	%r5617, %r5613, %r5612, 3;
	mov.b64 	%rd8089, {%r5617, %r5616};
	xor.b64  	%rd8090, %rd8088, %rd8089;
	shr.u64 	%rd8091, %rd8026, 6;
	xor.b64  	%rd8092, %rd8090, %rd8091;
	shf.r.wrap.b32 	%r5618, %r5275, %r5274, 1;
	shf.r.wrap.b32 	%r5619, %r5274, %r5275, 1;
	mov.b64 	%rd8093, {%r5619, %r5618};
	shf.r.wrap.b32 	%r5620, %r5275, %r5274, 8;
	shf.r.wrap.b32 	%r5621, %r5274, %r5275, 8;
	mov.b64 	%rd8094, {%r5621, %r5620};
	xor.b64  	%rd8095, %rd8093, %rd8094;
	shr.u64 	%rd8096, %rd7545, 7;
	xor.b64  	%rd8097, %rd8095, %rd8096;
	add.s64 	%rd8098, %rd8097, %rd7508;
	add.s64 	%rd8099, %rd8098, %rd7841;
	add.s64 	%rd8100, %rd8099, %rd8092;
	add.s64 	%rd8101, %rd8100, %rd7965;
	xor.b64  	%rd8102, %rd8039, %rd8002;
	and.b64  	%rd8103, %rd8076, %rd8102;
	xor.b64  	%rd8104, %rd8103, %rd8002;
	add.s64 	%rd8105, %rd8101, %rd8104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5622,%dummy}, %rd8076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5623}, %rd8076;
	}
	shf.r.wrap.b32 	%r5624, %r5623, %r5622, 14;
	shf.r.wrap.b32 	%r5625, %r5622, %r5623, 14;
	mov.b64 	%rd8106, {%r5625, %r5624};
	shf.r.wrap.b32 	%r5626, %r5623, %r5622, 18;
	shf.r.wrap.b32 	%r5627, %r5622, %r5623, 18;
	mov.b64 	%rd8107, {%r5627, %r5626};
	xor.b64  	%rd8108, %rd8106, %rd8107;
	shf.l.wrap.b32 	%r5628, %r5622, %r5623, 23;
	shf.l.wrap.b32 	%r5629, %r5623, %r5622, 23;
	mov.b64 	%rd8109, {%r5629, %r5628};
	xor.b64  	%rd8110, %rd8108, %rd8109;
	add.s64 	%rd8111, %rd8105, %rd8110;
	add.s64 	%rd8112, %rd8111, -8878714635349349518;
	add.s64 	%rd8113, %rd8112, %rd7976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5630,%dummy}, %rd8087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5631}, %rd8087;
	}
	shf.r.wrap.b32 	%r5632, %r5631, %r5630, 28;
	shf.r.wrap.b32 	%r5633, %r5630, %r5631, 28;
	mov.b64 	%rd8114, {%r5633, %r5632};
	shf.l.wrap.b32 	%r5634, %r5630, %r5631, 30;
	shf.l.wrap.b32 	%r5635, %r5631, %r5630, 30;
	mov.b64 	%rd8115, {%r5635, %r5634};
	xor.b64  	%rd8116, %rd8114, %rd8115;
	shf.l.wrap.b32 	%r5636, %r5630, %r5631, 25;
	shf.l.wrap.b32 	%r5637, %r5631, %r5630, 25;
	mov.b64 	%rd8117, {%r5637, %r5636};
	xor.b64  	%rd8118, %rd8116, %rd8117;
	and.b64  	%rd8119, %rd8087, %rd8050;
	or.b64  	%rd8120, %rd8087, %rd8050;
	and.b64  	%rd8121, %rd8120, %rd8013;
	or.b64  	%rd8122, %rd8121, %rd8119;
	add.s64 	%rd8123, %rd8122, %rd8118;
	add.s64 	%rd8124, %rd8123, %rd8112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5638,%dummy}, %rd8063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5639}, %rd8063;
	}
	shf.r.wrap.b32 	%r5640, %r5639, %r5638, 19;
	shf.r.wrap.b32 	%r5641, %r5638, %r5639, 19;
	mov.b64 	%rd8125, {%r5641, %r5640};
	shf.l.wrap.b32 	%r5642, %r5638, %r5639, 3;
	shf.l.wrap.b32 	%r5643, %r5639, %r5638, 3;
	mov.b64 	%rd8126, {%r5643, %r5642};
	xor.b64  	%rd8127, %rd8125, %rd8126;
	shr.u64 	%rd8128, %rd8063, 6;
	xor.b64  	%rd8129, %rd8127, %rd8128;
	shf.r.wrap.b32 	%r5644, %r5301, %r5300, 1;
	shf.r.wrap.b32 	%r5645, %r5300, %r5301, 1;
	mov.b64 	%rd8130, {%r5645, %r5644};
	shf.r.wrap.b32 	%r5646, %r5301, %r5300, 8;
	shf.r.wrap.b32 	%r5647, %r5300, %r5301, 8;
	mov.b64 	%rd8131, {%r5647, %r5646};
	xor.b64  	%rd8132, %rd8130, %rd8131;
	shr.u64 	%rd8133, %rd7582, 7;
	xor.b64  	%rd8134, %rd8132, %rd8133;
	add.s64 	%rd8135, %rd8134, %rd7545;
	add.s64 	%rd8136, %rd8135, %rd7878;
	add.s64 	%rd8137, %rd8136, %rd8129;
	add.s64 	%rd8138, %rd8137, %rd8002;
	xor.b64  	%rd8139, %rd8076, %rd8039;
	and.b64  	%rd8140, %rd8113, %rd8139;
	xor.b64  	%rd8141, %rd8140, %rd8039;
	add.s64 	%rd8142, %rd8138, %rd8141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5648,%dummy}, %rd8113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5649}, %rd8113;
	}
	shf.r.wrap.b32 	%r5650, %r5649, %r5648, 14;
	shf.r.wrap.b32 	%r5651, %r5648, %r5649, 14;
	mov.b64 	%rd8143, {%r5651, %r5650};
	shf.r.wrap.b32 	%r5652, %r5649, %r5648, 18;
	shf.r.wrap.b32 	%r5653, %r5648, %r5649, 18;
	mov.b64 	%rd8144, {%r5653, %r5652};
	xor.b64  	%rd8145, %rd8143, %rd8144;
	shf.l.wrap.b32 	%r5654, %r5648, %r5649, 23;
	shf.l.wrap.b32 	%r5655, %r5649, %r5648, 23;
	mov.b64 	%rd8146, {%r5655, %r5654};
	xor.b64  	%rd8147, %rd8145, %rd8146;
	add.s64 	%rd8148, %rd8142, %rd8147;
	add.s64 	%rd8149, %rd8148, -8302665154208450068;
	add.s64 	%rd8150, %rd8149, %rd8013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5656,%dummy}, %rd8124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd8124;
	}
	shf.r.wrap.b32 	%r5658, %r5657, %r5656, 28;
	shf.r.wrap.b32 	%r5659, %r5656, %r5657, 28;
	mov.b64 	%rd8151, {%r5659, %r5658};
	shf.l.wrap.b32 	%r5660, %r5656, %r5657, 30;
	shf.l.wrap.b32 	%r5661, %r5657, %r5656, 30;
	mov.b64 	%rd8152, {%r5661, %r5660};
	xor.b64  	%rd8153, %rd8151, %rd8152;
	shf.l.wrap.b32 	%r5662, %r5656, %r5657, 25;
	shf.l.wrap.b32 	%r5663, %r5657, %r5656, 25;
	mov.b64 	%rd8154, {%r5663, %r5662};
	xor.b64  	%rd8155, %rd8153, %rd8154;
	and.b64  	%rd8156, %rd8124, %rd8087;
	or.b64  	%rd8157, %rd8124, %rd8087;
	and.b64  	%rd8158, %rd8157, %rd8050;
	or.b64  	%rd8159, %rd8158, %rd8156;
	add.s64 	%rd8160, %rd8159, %rd8155;
	add.s64 	%rd8161, %rd8160, %rd8149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5664,%dummy}, %rd8100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5665}, %rd8100;
	}
	shf.r.wrap.b32 	%r5666, %r5665, %r5664, 19;
	shf.r.wrap.b32 	%r5667, %r5664, %r5665, 19;
	mov.b64 	%rd8162, {%r5667, %r5666};
	shf.l.wrap.b32 	%r5668, %r5664, %r5665, 3;
	shf.l.wrap.b32 	%r5669, %r5665, %r5664, 3;
	mov.b64 	%rd8163, {%r5669, %r5668};
	xor.b64  	%rd8164, %rd8162, %rd8163;
	shr.u64 	%rd8165, %rd8100, 6;
	xor.b64  	%rd8166, %rd8164, %rd8165;
	shf.r.wrap.b32 	%r5670, %r5327, %r5326, 1;
	shf.r.wrap.b32 	%r5671, %r5326, %r5327, 1;
	mov.b64 	%rd8167, {%r5671, %r5670};
	shf.r.wrap.b32 	%r5672, %r5327, %r5326, 8;
	shf.r.wrap.b32 	%r5673, %r5326, %r5327, 8;
	mov.b64 	%rd8168, {%r5673, %r5672};
	xor.b64  	%rd8169, %rd8167, %rd8168;
	shr.u64 	%rd8170, %rd7619, 7;
	xor.b64  	%rd8171, %rd8169, %rd8170;
	add.s64 	%rd8172, %rd8171, %rd7582;
	add.s64 	%rd8173, %rd8172, %rd7915;
	add.s64 	%rd8174, %rd8173, %rd8166;
	add.s64 	%rd8175, %rd8174, %rd8039;
	xor.b64  	%rd8176, %rd8113, %rd8076;
	and.b64  	%rd8177, %rd8150, %rd8176;
	xor.b64  	%rd8178, %rd8177, %rd8076;
	add.s64 	%rd8179, %rd8175, %rd8178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5674,%dummy}, %rd8150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5675}, %rd8150;
	}
	shf.r.wrap.b32 	%r5676, %r5675, %r5674, 14;
	shf.r.wrap.b32 	%r5677, %r5674, %r5675, 14;
	mov.b64 	%rd8180, {%r5677, %r5676};
	shf.r.wrap.b32 	%r5678, %r5675, %r5674, 18;
	shf.r.wrap.b32 	%r5679, %r5674, %r5675, 18;
	mov.b64 	%rd8181, {%r5679, %r5678};
	xor.b64  	%rd8182, %rd8180, %rd8181;
	shf.l.wrap.b32 	%r5680, %r5674, %r5675, 23;
	shf.l.wrap.b32 	%r5681, %r5675, %r5674, 23;
	mov.b64 	%rd8183, {%r5681, %r5680};
	xor.b64  	%rd8184, %rd8182, %rd8183;
	add.s64 	%rd8185, %rd8179, %rd8184;
	add.s64 	%rd8186, %rd8185, -8016688836872298968;
	add.s64 	%rd8187, %rd8186, %rd8050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5682,%dummy}, %rd8161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5683}, %rd8161;
	}
	shf.r.wrap.b32 	%r5684, %r5683, %r5682, 28;
	shf.r.wrap.b32 	%r5685, %r5682, %r5683, 28;
	mov.b64 	%rd8188, {%r5685, %r5684};
	shf.l.wrap.b32 	%r5686, %r5682, %r5683, 30;
	shf.l.wrap.b32 	%r5687, %r5683, %r5682, 30;
	mov.b64 	%rd8189, {%r5687, %r5686};
	xor.b64  	%rd8190, %rd8188, %rd8189;
	shf.l.wrap.b32 	%r5688, %r5682, %r5683, 25;
	shf.l.wrap.b32 	%r5689, %r5683, %r5682, 25;
	mov.b64 	%rd8191, {%r5689, %r5688};
	xor.b64  	%rd8192, %rd8190, %rd8191;
	and.b64  	%rd8193, %rd8161, %rd8124;
	or.b64  	%rd8194, %rd8161, %rd8124;
	and.b64  	%rd8195, %rd8194, %rd8087;
	or.b64  	%rd8196, %rd8195, %rd8193;
	add.s64 	%rd8197, %rd8196, %rd8192;
	add.s64 	%rd8198, %rd8197, %rd8186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5690,%dummy}, %rd8137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5691}, %rd8137;
	}
	shf.r.wrap.b32 	%r5692, %r5691, %r5690, 19;
	shf.r.wrap.b32 	%r5693, %r5690, %r5691, 19;
	mov.b64 	%rd8199, {%r5693, %r5692};
	shf.l.wrap.b32 	%r5694, %r5690, %r5691, 3;
	shf.l.wrap.b32 	%r5695, %r5691, %r5690, 3;
	mov.b64 	%rd8200, {%r5695, %r5694};
	xor.b64  	%rd8201, %rd8199, %rd8200;
	shr.u64 	%rd8202, %rd8137, 6;
	xor.b64  	%rd8203, %rd8201, %rd8202;
	shf.r.wrap.b32 	%r5696, %r5353, %r5352, 1;
	shf.r.wrap.b32 	%r5697, %r5352, %r5353, 1;
	mov.b64 	%rd8204, {%r5697, %r5696};
	shf.r.wrap.b32 	%r5698, %r5353, %r5352, 8;
	shf.r.wrap.b32 	%r5699, %r5352, %r5353, 8;
	mov.b64 	%rd8205, {%r5699, %r5698};
	xor.b64  	%rd8206, %rd8204, %rd8205;
	shr.u64 	%rd8207, %rd7656, 7;
	xor.b64  	%rd8208, %rd8206, %rd8207;
	add.s64 	%rd8209, %rd8208, %rd7619;
	add.s64 	%rd8210, %rd8209, %rd7952;
	add.s64 	%rd8211, %rd8210, %rd8203;
	add.s64 	%rd8212, %rd8211, %rd8076;
	xor.b64  	%rd8213, %rd8150, %rd8113;
	and.b64  	%rd8214, %rd8187, %rd8213;
	xor.b64  	%rd8215, %rd8214, %rd8113;
	add.s64 	%rd8216, %rd8212, %rd8215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5700,%dummy}, %rd8187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5701}, %rd8187;
	}
	shf.r.wrap.b32 	%r5702, %r5701, %r5700, 14;
	shf.r.wrap.b32 	%r5703, %r5700, %r5701, 14;
	mov.b64 	%rd8217, {%r5703, %r5702};
	shf.r.wrap.b32 	%r5704, %r5701, %r5700, 18;
	shf.r.wrap.b32 	%r5705, %r5700, %r5701, 18;
	mov.b64 	%rd8218, {%r5705, %r5704};
	xor.b64  	%rd8219, %rd8217, %rd8218;
	shf.l.wrap.b32 	%r5706, %r5700, %r5701, 23;
	shf.l.wrap.b32 	%r5707, %r5701, %r5700, 23;
	mov.b64 	%rd8220, {%r5707, %r5706};
	xor.b64  	%rd8221, %rd8219, %rd8220;
	add.s64 	%rd8222, %rd8216, %rd8221;
	add.s64 	%rd8223, %rd8222, -6606660893046293015;
	add.s64 	%rd8224, %rd8223, %rd8087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5708,%dummy}, %rd8198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5709}, %rd8198;
	}
	shf.r.wrap.b32 	%r5710, %r5709, %r5708, 28;
	shf.r.wrap.b32 	%r5711, %r5708, %r5709, 28;
	mov.b64 	%rd8225, {%r5711, %r5710};
	shf.l.wrap.b32 	%r5712, %r5708, %r5709, 30;
	shf.l.wrap.b32 	%r5713, %r5709, %r5708, 30;
	mov.b64 	%rd8226, {%r5713, %r5712};
	xor.b64  	%rd8227, %rd8225, %rd8226;
	shf.l.wrap.b32 	%r5714, %r5708, %r5709, 25;
	shf.l.wrap.b32 	%r5715, %r5709, %r5708, 25;
	mov.b64 	%rd8228, {%r5715, %r5714};
	xor.b64  	%rd8229, %rd8227, %rd8228;
	and.b64  	%rd8230, %rd8198, %rd8161;
	or.b64  	%rd8231, %rd8198, %rd8161;
	and.b64  	%rd8232, %rd8231, %rd8124;
	or.b64  	%rd8233, %rd8232, %rd8230;
	add.s64 	%rd8234, %rd8233, %rd8229;
	add.s64 	%rd8235, %rd8234, %rd8223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5716,%dummy}, %rd8174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5717}, %rd8174;
	}
	shf.r.wrap.b32 	%r5718, %r5717, %r5716, 19;
	shf.r.wrap.b32 	%r5719, %r5716, %r5717, 19;
	mov.b64 	%rd8236, {%r5719, %r5718};
	shf.l.wrap.b32 	%r5720, %r5716, %r5717, 3;
	shf.l.wrap.b32 	%r5721, %r5717, %r5716, 3;
	mov.b64 	%rd8237, {%r5721, %r5720};
	xor.b64  	%rd8238, %rd8236, %rd8237;
	shr.u64 	%rd8239, %rd8174, 6;
	xor.b64  	%rd8240, %rd8238, %rd8239;
	shf.r.wrap.b32 	%r5722, %r5379, %r5378, 1;
	shf.r.wrap.b32 	%r5723, %r5378, %r5379, 1;
	mov.b64 	%rd8241, {%r5723, %r5722};
	shf.r.wrap.b32 	%r5724, %r5379, %r5378, 8;
	shf.r.wrap.b32 	%r5725, %r5378, %r5379, 8;
	mov.b64 	%rd8242, {%r5725, %r5724};
	xor.b64  	%rd8243, %rd8241, %rd8242;
	shr.u64 	%rd8244, %rd7693, 7;
	xor.b64  	%rd8245, %rd8243, %rd8244;
	add.s64 	%rd8246, %rd8245, %rd7656;
	add.s64 	%rd8247, %rd8246, %rd7989;
	add.s64 	%rd8248, %rd8247, %rd8240;
	add.s64 	%rd8249, %rd8248, %rd8113;
	xor.b64  	%rd8250, %rd8187, %rd8150;
	and.b64  	%rd8251, %rd8224, %rd8250;
	xor.b64  	%rd8252, %rd8251, %rd8150;
	add.s64 	%rd8253, %rd8249, %rd8252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5726,%dummy}, %rd8224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5727}, %rd8224;
	}
	shf.r.wrap.b32 	%r5728, %r5727, %r5726, 14;
	shf.r.wrap.b32 	%r5729, %r5726, %r5727, 14;
	mov.b64 	%rd8254, {%r5729, %r5728};
	shf.r.wrap.b32 	%r5730, %r5727, %r5726, 18;
	shf.r.wrap.b32 	%r5731, %r5726, %r5727, 18;
	mov.b64 	%rd8255, {%r5731, %r5730};
	xor.b64  	%rd8256, %rd8254, %rd8255;
	shf.l.wrap.b32 	%r5732, %r5726, %r5727, 23;
	shf.l.wrap.b32 	%r5733, %r5727, %r5726, 23;
	mov.b64 	%rd8257, {%r5733, %r5732};
	xor.b64  	%rd8258, %rd8256, %rd8257;
	add.s64 	%rd8259, %rd8253, %rd8258;
	add.s64 	%rd8260, %rd8259, -4685533653050689259;
	add.s64 	%rd8261, %rd8260, %rd8124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5734,%dummy}, %rd8235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5735}, %rd8235;
	}
	shf.r.wrap.b32 	%r5736, %r5735, %r5734, 28;
	shf.r.wrap.b32 	%r5737, %r5734, %r5735, 28;
	mov.b64 	%rd8262, {%r5737, %r5736};
	shf.l.wrap.b32 	%r5738, %r5734, %r5735, 30;
	shf.l.wrap.b32 	%r5739, %r5735, %r5734, 30;
	mov.b64 	%rd8263, {%r5739, %r5738};
	xor.b64  	%rd8264, %rd8262, %rd8263;
	shf.l.wrap.b32 	%r5740, %r5734, %r5735, 25;
	shf.l.wrap.b32 	%r5741, %r5735, %r5734, 25;
	mov.b64 	%rd8265, {%r5741, %r5740};
	xor.b64  	%rd8266, %rd8264, %rd8265;
	and.b64  	%rd8267, %rd8235, %rd8198;
	or.b64  	%rd8268, %rd8235, %rd8198;
	and.b64  	%rd8269, %rd8268, %rd8161;
	or.b64  	%rd8270, %rd8269, %rd8267;
	add.s64 	%rd8271, %rd8270, %rd8266;
	add.s64 	%rd8272, %rd8271, %rd8260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5742,%dummy}, %rd8211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5743}, %rd8211;
	}
	shf.r.wrap.b32 	%r5744, %r5743, %r5742, 19;
	shf.r.wrap.b32 	%r5745, %r5742, %r5743, 19;
	mov.b64 	%rd8273, {%r5745, %r5744};
	shf.l.wrap.b32 	%r5746, %r5742, %r5743, 3;
	shf.l.wrap.b32 	%r5747, %r5743, %r5742, 3;
	mov.b64 	%rd8274, {%r5747, %r5746};
	xor.b64  	%rd8275, %rd8273, %rd8274;
	shr.u64 	%rd8276, %rd8211, 6;
	xor.b64  	%rd8277, %rd8275, %rd8276;
	shf.r.wrap.b32 	%r5748, %r5405, %r5404, 1;
	shf.r.wrap.b32 	%r5749, %r5404, %r5405, 1;
	mov.b64 	%rd8278, {%r5749, %r5748};
	shf.r.wrap.b32 	%r5750, %r5405, %r5404, 8;
	shf.r.wrap.b32 	%r5751, %r5404, %r5405, 8;
	mov.b64 	%rd8279, {%r5751, %r5750};
	xor.b64  	%rd8280, %rd8278, %rd8279;
	shr.u64 	%rd8281, %rd7730, 7;
	xor.b64  	%rd8282, %rd8280, %rd8281;
	add.s64 	%rd8283, %rd8282, %rd7693;
	add.s64 	%rd8284, %rd8283, %rd8026;
	add.s64 	%rd8285, %rd8284, %rd8277;
	add.s64 	%rd8286, %rd8285, %rd8150;
	xor.b64  	%rd8287, %rd8224, %rd8187;
	and.b64  	%rd8288, %rd8261, %rd8287;
	xor.b64  	%rd8289, %rd8288, %rd8187;
	add.s64 	%rd8290, %rd8286, %rd8289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5752,%dummy}, %rd8261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5753}, %rd8261;
	}
	shf.r.wrap.b32 	%r5754, %r5753, %r5752, 14;
	shf.r.wrap.b32 	%r5755, %r5752, %r5753, 14;
	mov.b64 	%rd8291, {%r5755, %r5754};
	shf.r.wrap.b32 	%r5756, %r5753, %r5752, 18;
	shf.r.wrap.b32 	%r5757, %r5752, %r5753, 18;
	mov.b64 	%rd8292, {%r5757, %r5756};
	xor.b64  	%rd8293, %rd8291, %rd8292;
	shf.l.wrap.b32 	%r5758, %r5752, %r5753, 23;
	shf.l.wrap.b32 	%r5759, %r5753, %r5752, 23;
	mov.b64 	%rd8294, {%r5759, %r5758};
	xor.b64  	%rd8295, %rd8293, %rd8294;
	add.s64 	%rd8296, %rd8290, %rd8295;
	add.s64 	%rd8297, %rd8296, -4147400797238176981;
	add.s64 	%rd8298, %rd8297, %rd8161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5760,%dummy}, %rd8272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5761}, %rd8272;
	}
	shf.r.wrap.b32 	%r5762, %r5761, %r5760, 28;
	shf.r.wrap.b32 	%r5763, %r5760, %r5761, 28;
	mov.b64 	%rd8299, {%r5763, %r5762};
	shf.l.wrap.b32 	%r5764, %r5760, %r5761, 30;
	shf.l.wrap.b32 	%r5765, %r5761, %r5760, 30;
	mov.b64 	%rd8300, {%r5765, %r5764};
	xor.b64  	%rd8301, %rd8299, %rd8300;
	shf.l.wrap.b32 	%r5766, %r5760, %r5761, 25;
	shf.l.wrap.b32 	%r5767, %r5761, %r5760, 25;
	mov.b64 	%rd8302, {%r5767, %r5766};
	xor.b64  	%rd8303, %rd8301, %rd8302;
	and.b64  	%rd8304, %rd8272, %rd8235;
	or.b64  	%rd8305, %rd8272, %rd8235;
	and.b64  	%rd8306, %rd8305, %rd8198;
	or.b64  	%rd8307, %rd8306, %rd8304;
	add.s64 	%rd8308, %rd8307, %rd8303;
	add.s64 	%rd8309, %rd8308, %rd8297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd8248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd8248;
	}
	shf.r.wrap.b32 	%r5770, %r5769, %r5768, 19;
	shf.r.wrap.b32 	%r5771, %r5768, %r5769, 19;
	mov.b64 	%rd8310, {%r5771, %r5770};
	shf.l.wrap.b32 	%r5772, %r5768, %r5769, 3;
	shf.l.wrap.b32 	%r5773, %r5769, %r5768, 3;
	mov.b64 	%rd8311, {%r5773, %r5772};
	xor.b64  	%rd8312, %rd8310, %rd8311;
	shr.u64 	%rd8313, %rd8248, 6;
	xor.b64  	%rd8314, %rd8312, %rd8313;
	shf.r.wrap.b32 	%r5774, %r5431, %r5430, 1;
	shf.r.wrap.b32 	%r5775, %r5430, %r5431, 1;
	mov.b64 	%rd8315, {%r5775, %r5774};
	shf.r.wrap.b32 	%r5776, %r5431, %r5430, 8;
	shf.r.wrap.b32 	%r5777, %r5430, %r5431, 8;
	mov.b64 	%rd8316, {%r5777, %r5776};
	xor.b64  	%rd8317, %rd8315, %rd8316;
	shr.u64 	%rd8318, %rd7767, 7;
	xor.b64  	%rd8319, %rd8317, %rd8318;
	add.s64 	%rd8320, %rd8319, %rd7730;
	add.s64 	%rd8321, %rd8320, %rd8063;
	add.s64 	%rd8322, %rd8321, %rd8314;
	add.s64 	%rd8323, %rd8322, %rd8187;
	xor.b64  	%rd8324, %rd8261, %rd8224;
	and.b64  	%rd8325, %rd8298, %rd8324;
	xor.b64  	%rd8326, %rd8325, %rd8224;
	add.s64 	%rd8327, %rd8323, %rd8326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5778,%dummy}, %rd8298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5779}, %rd8298;
	}
	shf.r.wrap.b32 	%r5780, %r5779, %r5778, 14;
	shf.r.wrap.b32 	%r5781, %r5778, %r5779, 14;
	mov.b64 	%rd8328, {%r5781, %r5780};
	shf.r.wrap.b32 	%r5782, %r5779, %r5778, 18;
	shf.r.wrap.b32 	%r5783, %r5778, %r5779, 18;
	mov.b64 	%rd8329, {%r5783, %r5782};
	xor.b64  	%rd8330, %rd8328, %rd8329;
	shf.l.wrap.b32 	%r5784, %r5778, %r5779, 23;
	shf.l.wrap.b32 	%r5785, %r5779, %r5778, 23;
	mov.b64 	%rd8331, {%r5785, %r5784};
	xor.b64  	%rd8332, %rd8330, %rd8331;
	add.s64 	%rd8333, %rd8327, %rd8332;
	add.s64 	%rd8334, %rd8333, -3880063495543823972;
	add.s64 	%rd8335, %rd8334, %rd8198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5786,%dummy}, %rd8309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5787}, %rd8309;
	}
	shf.r.wrap.b32 	%r5788, %r5787, %r5786, 28;
	shf.r.wrap.b32 	%r5789, %r5786, %r5787, 28;
	mov.b64 	%rd8336, {%r5789, %r5788};
	shf.l.wrap.b32 	%r5790, %r5786, %r5787, 30;
	shf.l.wrap.b32 	%r5791, %r5787, %r5786, 30;
	mov.b64 	%rd8337, {%r5791, %r5790};
	xor.b64  	%rd8338, %rd8336, %rd8337;
	shf.l.wrap.b32 	%r5792, %r5786, %r5787, 25;
	shf.l.wrap.b32 	%r5793, %r5787, %r5786, 25;
	mov.b64 	%rd8339, {%r5793, %r5792};
	xor.b64  	%rd8340, %rd8338, %rd8339;
	and.b64  	%rd8341, %rd8309, %rd8272;
	or.b64  	%rd8342, %rd8309, %rd8272;
	and.b64  	%rd8343, %rd8342, %rd8235;
	or.b64  	%rd8344, %rd8343, %rd8341;
	add.s64 	%rd8345, %rd8344, %rd8340;
	add.s64 	%rd8346, %rd8345, %rd8334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5794,%dummy}, %rd8285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5795}, %rd8285;
	}
	shf.r.wrap.b32 	%r5796, %r5795, %r5794, 19;
	shf.r.wrap.b32 	%r5797, %r5794, %r5795, 19;
	mov.b64 	%rd8347, {%r5797, %r5796};
	shf.l.wrap.b32 	%r5798, %r5794, %r5795, 3;
	shf.l.wrap.b32 	%r5799, %r5795, %r5794, 3;
	mov.b64 	%rd8348, {%r5799, %r5798};
	xor.b64  	%rd8349, %rd8347, %rd8348;
	shr.u64 	%rd8350, %rd8285, 6;
	xor.b64  	%rd8351, %rd8349, %rd8350;
	shf.r.wrap.b32 	%r5800, %r5457, %r5456, 1;
	shf.r.wrap.b32 	%r5801, %r5456, %r5457, 1;
	mov.b64 	%rd8352, {%r5801, %r5800};
	shf.r.wrap.b32 	%r5802, %r5457, %r5456, 8;
	shf.r.wrap.b32 	%r5803, %r5456, %r5457, 8;
	mov.b64 	%rd8353, {%r5803, %r5802};
	xor.b64  	%rd8354, %rd8352, %rd8353;
	shr.u64 	%rd8355, %rd7804, 7;
	xor.b64  	%rd8356, %rd8354, %rd8355;
	add.s64 	%rd8357, %rd8356, %rd7767;
	add.s64 	%rd8358, %rd8357, %rd8100;
	add.s64 	%rd8359, %rd8358, %rd8351;
	add.s64 	%rd8360, %rd8359, %rd8224;
	xor.b64  	%rd8361, %rd8298, %rd8261;
	and.b64  	%rd8362, %rd8335, %rd8361;
	xor.b64  	%rd8363, %rd8362, %rd8261;
	add.s64 	%rd8364, %rd8360, %rd8363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5804,%dummy}, %rd8335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5805}, %rd8335;
	}
	shf.r.wrap.b32 	%r5806, %r5805, %r5804, 14;
	shf.r.wrap.b32 	%r5807, %r5804, %r5805, 14;
	mov.b64 	%rd8365, {%r5807, %r5806};
	shf.r.wrap.b32 	%r5808, %r5805, %r5804, 18;
	shf.r.wrap.b32 	%r5809, %r5804, %r5805, 18;
	mov.b64 	%rd8366, {%r5809, %r5808};
	xor.b64  	%rd8367, %rd8365, %rd8366;
	shf.l.wrap.b32 	%r5810, %r5804, %r5805, 23;
	shf.l.wrap.b32 	%r5811, %r5805, %r5804, 23;
	mov.b64 	%rd8368, {%r5811, %r5810};
	xor.b64  	%rd8369, %rd8367, %rd8368;
	add.s64 	%rd8370, %rd8364, %rd8369;
	add.s64 	%rd8371, %rd8370, -3348786107499101689;
	add.s64 	%rd8372, %rd8371, %rd8235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5812,%dummy}, %rd8346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5813}, %rd8346;
	}
	shf.r.wrap.b32 	%r5814, %r5813, %r5812, 28;
	shf.r.wrap.b32 	%r5815, %r5812, %r5813, 28;
	mov.b64 	%rd8373, {%r5815, %r5814};
	shf.l.wrap.b32 	%r5816, %r5812, %r5813, 30;
	shf.l.wrap.b32 	%r5817, %r5813, %r5812, 30;
	mov.b64 	%rd8374, {%r5817, %r5816};
	xor.b64  	%rd8375, %rd8373, %rd8374;
	shf.l.wrap.b32 	%r5818, %r5812, %r5813, 25;
	shf.l.wrap.b32 	%r5819, %r5813, %r5812, 25;
	mov.b64 	%rd8376, {%r5819, %r5818};
	xor.b64  	%rd8377, %rd8375, %rd8376;
	and.b64  	%rd8378, %rd8346, %rd8309;
	or.b64  	%rd8379, %rd8346, %rd8309;
	and.b64  	%rd8380, %rd8379, %rd8272;
	or.b64  	%rd8381, %rd8380, %rd8378;
	add.s64 	%rd8382, %rd8381, %rd8377;
	add.s64 	%rd8383, %rd8382, %rd8371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5820,%dummy}, %rd8322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5821}, %rd8322;
	}
	shf.r.wrap.b32 	%r5822, %r5821, %r5820, 19;
	shf.r.wrap.b32 	%r5823, %r5820, %r5821, 19;
	mov.b64 	%rd8384, {%r5823, %r5822};
	shf.l.wrap.b32 	%r5824, %r5820, %r5821, 3;
	shf.l.wrap.b32 	%r5825, %r5821, %r5820, 3;
	mov.b64 	%rd8385, {%r5825, %r5824};
	xor.b64  	%rd8386, %rd8384, %rd8385;
	shr.u64 	%rd8387, %rd8322, 6;
	xor.b64  	%rd8388, %rd8386, %rd8387;
	shf.r.wrap.b32 	%r5826, %r5483, %r5482, 1;
	shf.r.wrap.b32 	%r5827, %r5482, %r5483, 1;
	mov.b64 	%rd8389, {%r5827, %r5826};
	shf.r.wrap.b32 	%r5828, %r5483, %r5482, 8;
	shf.r.wrap.b32 	%r5829, %r5482, %r5483, 8;
	mov.b64 	%rd8390, {%r5829, %r5828};
	xor.b64  	%rd8391, %rd8389, %rd8390;
	shr.u64 	%rd8392, %rd7841, 7;
	xor.b64  	%rd8393, %rd8391, %rd8392;
	add.s64 	%rd8394, %rd8393, %rd7804;
	add.s64 	%rd8395, %rd8394, %rd8137;
	add.s64 	%rd8396, %rd8395, %rd8388;
	add.s64 	%rd8397, %rd8396, %rd8261;
	xor.b64  	%rd8398, %rd8335, %rd8298;
	and.b64  	%rd8399, %rd8372, %rd8398;
	xor.b64  	%rd8400, %rd8399, %rd8298;
	add.s64 	%rd8401, %rd8397, %rd8400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5830,%dummy}, %rd8372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5831}, %rd8372;
	}
	shf.r.wrap.b32 	%r5832, %r5831, %r5830, 14;
	shf.r.wrap.b32 	%r5833, %r5830, %r5831, 14;
	mov.b64 	%rd8402, {%r5833, %r5832};
	shf.r.wrap.b32 	%r5834, %r5831, %r5830, 18;
	shf.r.wrap.b32 	%r5835, %r5830, %r5831, 18;
	mov.b64 	%rd8403, {%r5835, %r5834};
	xor.b64  	%rd8404, %rd8402, %rd8403;
	shf.l.wrap.b32 	%r5836, %r5830, %r5831, 23;
	shf.l.wrap.b32 	%r5837, %r5831, %r5830, 23;
	mov.b64 	%rd8405, {%r5837, %r5836};
	xor.b64  	%rd8406, %rd8404, %rd8405;
	add.s64 	%rd8407, %rd8401, %rd8406;
	add.s64 	%rd8408, %rd8407, -1523767162380948706;
	add.s64 	%rd8409, %rd8408, %rd8272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5838,%dummy}, %rd8383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5839}, %rd8383;
	}
	shf.r.wrap.b32 	%r5840, %r5839, %r5838, 28;
	shf.r.wrap.b32 	%r5841, %r5838, %r5839, 28;
	mov.b64 	%rd8410, {%r5841, %r5840};
	shf.l.wrap.b32 	%r5842, %r5838, %r5839, 30;
	shf.l.wrap.b32 	%r5843, %r5839, %r5838, 30;
	mov.b64 	%rd8411, {%r5843, %r5842};
	xor.b64  	%rd8412, %rd8410, %rd8411;
	shf.l.wrap.b32 	%r5844, %r5838, %r5839, 25;
	shf.l.wrap.b32 	%r5845, %r5839, %r5838, 25;
	mov.b64 	%rd8413, {%r5845, %r5844};
	xor.b64  	%rd8414, %rd8412, %rd8413;
	and.b64  	%rd8415, %rd8383, %rd8346;
	or.b64  	%rd8416, %rd8383, %rd8346;
	and.b64  	%rd8417, %rd8416, %rd8309;
	or.b64  	%rd8418, %rd8417, %rd8415;
	add.s64 	%rd8419, %rd8418, %rd8414;
	add.s64 	%rd8420, %rd8419, %rd8408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5846,%dummy}, %rd8359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5847}, %rd8359;
	}
	shf.r.wrap.b32 	%r5848, %r5847, %r5846, 19;
	shf.r.wrap.b32 	%r5849, %r5846, %r5847, 19;
	mov.b64 	%rd8421, {%r5849, %r5848};
	shf.l.wrap.b32 	%r5850, %r5846, %r5847, 3;
	shf.l.wrap.b32 	%r5851, %r5847, %r5846, 3;
	mov.b64 	%rd8422, {%r5851, %r5850};
	xor.b64  	%rd8423, %rd8421, %rd8422;
	shr.u64 	%rd8424, %rd8359, 6;
	xor.b64  	%rd8425, %rd8423, %rd8424;
	shf.r.wrap.b32 	%r5852, %r5509, %r5508, 1;
	shf.r.wrap.b32 	%r5853, %r5508, %r5509, 1;
	mov.b64 	%rd8426, {%r5853, %r5852};
	shf.r.wrap.b32 	%r5854, %r5509, %r5508, 8;
	shf.r.wrap.b32 	%r5855, %r5508, %r5509, 8;
	mov.b64 	%rd8427, {%r5855, %r5854};
	xor.b64  	%rd8428, %rd8426, %rd8427;
	shr.u64 	%rd8429, %rd7878, 7;
	xor.b64  	%rd8430, %rd8428, %rd8429;
	add.s64 	%rd8431, %rd8430, %rd7841;
	add.s64 	%rd8432, %rd8431, %rd8174;
	add.s64 	%rd8433, %rd8432, %rd8425;
	add.s64 	%rd8434, %rd8433, %rd8298;
	xor.b64  	%rd8435, %rd8372, %rd8335;
	and.b64  	%rd8436, %rd8409, %rd8435;
	xor.b64  	%rd8437, %rd8436, %rd8335;
	add.s64 	%rd8438, %rd8434, %rd8437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5856,%dummy}, %rd8409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5857}, %rd8409;
	}
	shf.r.wrap.b32 	%r5858, %r5857, %r5856, 14;
	shf.r.wrap.b32 	%r5859, %r5856, %r5857, 14;
	mov.b64 	%rd8439, {%r5859, %r5858};
	shf.r.wrap.b32 	%r5860, %r5857, %r5856, 18;
	shf.r.wrap.b32 	%r5861, %r5856, %r5857, 18;
	mov.b64 	%rd8440, {%r5861, %r5860};
	xor.b64  	%rd8441, %rd8439, %rd8440;
	shf.l.wrap.b32 	%r5862, %r5856, %r5857, 23;
	shf.l.wrap.b32 	%r5863, %r5857, %r5856, 23;
	mov.b64 	%rd8442, {%r5863, %r5862};
	xor.b64  	%rd8443, %rd8441, %rd8442;
	add.s64 	%rd8444, %rd8438, %rd8443;
	add.s64 	%rd8445, %rd8444, -757361751448694408;
	add.s64 	%rd8446, %rd8445, %rd8309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5864,%dummy}, %rd8420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5865}, %rd8420;
	}
	shf.r.wrap.b32 	%r5866, %r5865, %r5864, 28;
	shf.r.wrap.b32 	%r5867, %r5864, %r5865, 28;
	mov.b64 	%rd8447, {%r5867, %r5866};
	shf.l.wrap.b32 	%r5868, %r5864, %r5865, 30;
	shf.l.wrap.b32 	%r5869, %r5865, %r5864, 30;
	mov.b64 	%rd8448, {%r5869, %r5868};
	xor.b64  	%rd8449, %rd8447, %rd8448;
	shf.l.wrap.b32 	%r5870, %r5864, %r5865, 25;
	shf.l.wrap.b32 	%r5871, %r5865, %r5864, 25;
	mov.b64 	%rd8450, {%r5871, %r5870};
	xor.b64  	%rd8451, %rd8449, %rd8450;
	and.b64  	%rd8452, %rd8420, %rd8383;
	or.b64  	%rd8453, %rd8420, %rd8383;
	and.b64  	%rd8454, %rd8453, %rd8346;
	or.b64  	%rd8455, %rd8454, %rd8452;
	add.s64 	%rd8456, %rd8455, %rd8451;
	add.s64 	%rd8457, %rd8456, %rd8445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5872,%dummy}, %rd8396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5873}, %rd8396;
	}
	shf.r.wrap.b32 	%r5874, %r5873, %r5872, 19;
	shf.r.wrap.b32 	%r5875, %r5872, %r5873, 19;
	mov.b64 	%rd8458, {%r5875, %r5874};
	shf.l.wrap.b32 	%r5876, %r5872, %r5873, 3;
	shf.l.wrap.b32 	%r5877, %r5873, %r5872, 3;
	mov.b64 	%rd8459, {%r5877, %r5876};
	xor.b64  	%rd8460, %rd8458, %rd8459;
	shr.u64 	%rd8461, %rd8396, 6;
	xor.b64  	%rd8462, %rd8460, %rd8461;
	shf.r.wrap.b32 	%r5878, %r5535, %r5534, 1;
	shf.r.wrap.b32 	%r5879, %r5534, %r5535, 1;
	mov.b64 	%rd8463, {%r5879, %r5878};
	shf.r.wrap.b32 	%r5880, %r5535, %r5534, 8;
	shf.r.wrap.b32 	%r5881, %r5534, %r5535, 8;
	mov.b64 	%rd8464, {%r5881, %r5880};
	xor.b64  	%rd8465, %rd8463, %rd8464;
	shr.u64 	%rd8466, %rd7915, 7;
	xor.b64  	%rd8467, %rd8465, %rd8466;
	add.s64 	%rd8468, %rd8467, %rd7878;
	add.s64 	%rd8469, %rd8468, %rd8211;
	add.s64 	%rd8470, %rd8469, %rd8462;
	add.s64 	%rd8471, %rd8470, %rd8335;
	xor.b64  	%rd8472, %rd8409, %rd8372;
	and.b64  	%rd8473, %rd8446, %rd8472;
	xor.b64  	%rd8474, %rd8473, %rd8372;
	add.s64 	%rd8475, %rd8471, %rd8474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5882,%dummy}, %rd8446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5883}, %rd8446;
	}
	shf.r.wrap.b32 	%r5884, %r5883, %r5882, 14;
	shf.r.wrap.b32 	%r5885, %r5882, %r5883, 14;
	mov.b64 	%rd8476, {%r5885, %r5884};
	shf.r.wrap.b32 	%r5886, %r5883, %r5882, 18;
	shf.r.wrap.b32 	%r5887, %r5882, %r5883, 18;
	mov.b64 	%rd8477, {%r5887, %r5886};
	xor.b64  	%rd8478, %rd8476, %rd8477;
	shf.l.wrap.b32 	%r5888, %r5882, %r5883, 23;
	shf.l.wrap.b32 	%r5889, %r5883, %r5882, 23;
	mov.b64 	%rd8479, {%r5889, %r5888};
	xor.b64  	%rd8480, %rd8478, %rd8479;
	add.s64 	%rd8481, %rd8475, %rd8480;
	add.s64 	%rd8482, %rd8481, 500013540394364858;
	add.s64 	%rd8483, %rd8482, %rd8346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5890,%dummy}, %rd8457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5891}, %rd8457;
	}
	shf.r.wrap.b32 	%r5892, %r5891, %r5890, 28;
	shf.r.wrap.b32 	%r5893, %r5890, %r5891, 28;
	mov.b64 	%rd8484, {%r5893, %r5892};
	shf.l.wrap.b32 	%r5894, %r5890, %r5891, 30;
	shf.l.wrap.b32 	%r5895, %r5891, %r5890, 30;
	mov.b64 	%rd8485, {%r5895, %r5894};
	xor.b64  	%rd8486, %rd8484, %rd8485;
	shf.l.wrap.b32 	%r5896, %r5890, %r5891, 25;
	shf.l.wrap.b32 	%r5897, %r5891, %r5890, 25;
	mov.b64 	%rd8487, {%r5897, %r5896};
	xor.b64  	%rd8488, %rd8486, %rd8487;
	and.b64  	%rd8489, %rd8457, %rd8420;
	or.b64  	%rd8490, %rd8457, %rd8420;
	and.b64  	%rd8491, %rd8490, %rd8383;
	or.b64  	%rd8492, %rd8491, %rd8489;
	add.s64 	%rd8493, %rd8492, %rd8488;
	add.s64 	%rd8494, %rd8493, %rd8482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5898,%dummy}, %rd8433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5899}, %rd8433;
	}
	shf.r.wrap.b32 	%r5900, %r5899, %r5898, 19;
	shf.r.wrap.b32 	%r5901, %r5898, %r5899, 19;
	mov.b64 	%rd8495, {%r5901, %r5900};
	shf.l.wrap.b32 	%r5902, %r5898, %r5899, 3;
	shf.l.wrap.b32 	%r5903, %r5899, %r5898, 3;
	mov.b64 	%rd8496, {%r5903, %r5902};
	xor.b64  	%rd8497, %rd8495, %rd8496;
	shr.u64 	%rd8498, %rd8433, 6;
	xor.b64  	%rd8499, %rd8497, %rd8498;
	shf.r.wrap.b32 	%r5904, %r5561, %r5560, 1;
	shf.r.wrap.b32 	%r5905, %r5560, %r5561, 1;
	mov.b64 	%rd8500, {%r5905, %r5904};
	shf.r.wrap.b32 	%r5906, %r5561, %r5560, 8;
	shf.r.wrap.b32 	%r5907, %r5560, %r5561, 8;
	mov.b64 	%rd8501, {%r5907, %r5906};
	xor.b64  	%rd8502, %rd8500, %rd8501;
	shr.u64 	%rd8503, %rd7952, 7;
	xor.b64  	%rd8504, %rd8502, %rd8503;
	add.s64 	%rd8505, %rd8504, %rd7915;
	add.s64 	%rd8506, %rd8505, %rd8248;
	add.s64 	%rd8507, %rd8506, %rd8499;
	add.s64 	%rd8508, %rd8507, %rd8372;
	xor.b64  	%rd8509, %rd8446, %rd8409;
	and.b64  	%rd8510, %rd8483, %rd8509;
	xor.b64  	%rd8511, %rd8510, %rd8409;
	add.s64 	%rd8512, %rd8508, %rd8511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5908,%dummy}, %rd8483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5909}, %rd8483;
	}
	shf.r.wrap.b32 	%r5910, %r5909, %r5908, 14;
	shf.r.wrap.b32 	%r5911, %r5908, %r5909, 14;
	mov.b64 	%rd8513, {%r5911, %r5910};
	shf.r.wrap.b32 	%r5912, %r5909, %r5908, 18;
	shf.r.wrap.b32 	%r5913, %r5908, %r5909, 18;
	mov.b64 	%rd8514, {%r5913, %r5912};
	xor.b64  	%rd8515, %rd8513, %rd8514;
	shf.l.wrap.b32 	%r5914, %r5908, %r5909, 23;
	shf.l.wrap.b32 	%r5915, %r5909, %r5908, 23;
	mov.b64 	%rd8516, {%r5915, %r5914};
	xor.b64  	%rd8517, %rd8515, %rd8516;
	add.s64 	%rd8518, %rd8512, %rd8517;
	add.s64 	%rd8519, %rd8518, 748580250866718886;
	add.s64 	%rd8520, %rd8519, %rd8383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5916,%dummy}, %rd8494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5917}, %rd8494;
	}
	shf.r.wrap.b32 	%r5918, %r5917, %r5916, 28;
	shf.r.wrap.b32 	%r5919, %r5916, %r5917, 28;
	mov.b64 	%rd8521, {%r5919, %r5918};
	shf.l.wrap.b32 	%r5920, %r5916, %r5917, 30;
	shf.l.wrap.b32 	%r5921, %r5917, %r5916, 30;
	mov.b64 	%rd8522, {%r5921, %r5920};
	xor.b64  	%rd8523, %rd8521, %rd8522;
	shf.l.wrap.b32 	%r5922, %r5916, %r5917, 25;
	shf.l.wrap.b32 	%r5923, %r5917, %r5916, 25;
	mov.b64 	%rd8524, {%r5923, %r5922};
	xor.b64  	%rd8525, %rd8523, %rd8524;
	and.b64  	%rd8526, %rd8494, %rd8457;
	or.b64  	%rd8527, %rd8494, %rd8457;
	and.b64  	%rd8528, %rd8527, %rd8420;
	or.b64  	%rd8529, %rd8528, %rd8526;
	add.s64 	%rd8530, %rd8529, %rd8525;
	add.s64 	%rd8531, %rd8530, %rd8519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5924,%dummy}, %rd8470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5925}, %rd8470;
	}
	shf.r.wrap.b32 	%r5926, %r5925, %r5924, 19;
	shf.r.wrap.b32 	%r5927, %r5924, %r5925, 19;
	mov.b64 	%rd8532, {%r5927, %r5926};
	shf.l.wrap.b32 	%r5928, %r5924, %r5925, 3;
	shf.l.wrap.b32 	%r5929, %r5925, %r5924, 3;
	mov.b64 	%rd8533, {%r5929, %r5928};
	xor.b64  	%rd8534, %rd8532, %rd8533;
	shr.u64 	%rd8535, %rd8470, 6;
	xor.b64  	%rd8536, %rd8534, %rd8535;
	shf.r.wrap.b32 	%r5930, %r5587, %r5586, 1;
	shf.r.wrap.b32 	%r5931, %r5586, %r5587, 1;
	mov.b64 	%rd8537, {%r5931, %r5930};
	shf.r.wrap.b32 	%r5932, %r5587, %r5586, 8;
	shf.r.wrap.b32 	%r5933, %r5586, %r5587, 8;
	mov.b64 	%rd8538, {%r5933, %r5932};
	xor.b64  	%rd8539, %rd8537, %rd8538;
	shr.u64 	%rd8540, %rd7989, 7;
	xor.b64  	%rd8541, %rd8539, %rd8540;
	add.s64 	%rd8542, %rd8541, %rd7952;
	add.s64 	%rd8543, %rd8542, %rd8285;
	add.s64 	%rd8544, %rd8543, %rd8536;
	add.s64 	%rd8545, %rd8544, %rd8409;
	xor.b64  	%rd8546, %rd8483, %rd8446;
	and.b64  	%rd8547, %rd8520, %rd8546;
	xor.b64  	%rd8548, %rd8547, %rd8446;
	add.s64 	%rd8549, %rd8545, %rd8548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5934,%dummy}, %rd8520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5935}, %rd8520;
	}
	shf.r.wrap.b32 	%r5936, %r5935, %r5934, 14;
	shf.r.wrap.b32 	%r5937, %r5934, %r5935, 14;
	mov.b64 	%rd8550, {%r5937, %r5936};
	shf.r.wrap.b32 	%r5938, %r5935, %r5934, 18;
	shf.r.wrap.b32 	%r5939, %r5934, %r5935, 18;
	mov.b64 	%rd8551, {%r5939, %r5938};
	xor.b64  	%rd8552, %rd8550, %rd8551;
	shf.l.wrap.b32 	%r5940, %r5934, %r5935, 23;
	shf.l.wrap.b32 	%r5941, %r5935, %r5934, 23;
	mov.b64 	%rd8553, {%r5941, %r5940};
	xor.b64  	%rd8554, %rd8552, %rd8553;
	add.s64 	%rd8555, %rd8549, %rd8554;
	add.s64 	%rd8556, %rd8555, 1242879168328830382;
	add.s64 	%rd8557, %rd8556, %rd8420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5942,%dummy}, %rd8531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5943}, %rd8531;
	}
	shf.r.wrap.b32 	%r5944, %r5943, %r5942, 28;
	shf.r.wrap.b32 	%r5945, %r5942, %r5943, 28;
	mov.b64 	%rd8558, {%r5945, %r5944};
	shf.l.wrap.b32 	%r5946, %r5942, %r5943, 30;
	shf.l.wrap.b32 	%r5947, %r5943, %r5942, 30;
	mov.b64 	%rd8559, {%r5947, %r5946};
	xor.b64  	%rd8560, %rd8558, %rd8559;
	shf.l.wrap.b32 	%r5948, %r5942, %r5943, 25;
	shf.l.wrap.b32 	%r5949, %r5943, %r5942, 25;
	mov.b64 	%rd8561, {%r5949, %r5948};
	xor.b64  	%rd8562, %rd8560, %rd8561;
	and.b64  	%rd8563, %rd8531, %rd8494;
	or.b64  	%rd8564, %rd8531, %rd8494;
	and.b64  	%rd8565, %rd8564, %rd8457;
	or.b64  	%rd8566, %rd8565, %rd8563;
	add.s64 	%rd8567, %rd8566, %rd8562;
	add.s64 	%rd8568, %rd8567, %rd8556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5950,%dummy}, %rd8507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5951}, %rd8507;
	}
	shf.r.wrap.b32 	%r5952, %r5951, %r5950, 19;
	shf.r.wrap.b32 	%r5953, %r5950, %r5951, 19;
	mov.b64 	%rd8569, {%r5953, %r5952};
	shf.l.wrap.b32 	%r5954, %r5950, %r5951, 3;
	shf.l.wrap.b32 	%r5955, %r5951, %r5950, 3;
	mov.b64 	%rd8570, {%r5955, %r5954};
	xor.b64  	%rd8571, %rd8569, %rd8570;
	shr.u64 	%rd8572, %rd8507, 6;
	xor.b64  	%rd8573, %rd8571, %rd8572;
	shf.r.wrap.b32 	%r5956, %r5613, %r5612, 1;
	shf.r.wrap.b32 	%r5957, %r5612, %r5613, 1;
	mov.b64 	%rd8574, {%r5957, %r5956};
	shf.r.wrap.b32 	%r5958, %r5613, %r5612, 8;
	shf.r.wrap.b32 	%r5959, %r5612, %r5613, 8;
	mov.b64 	%rd8575, {%r5959, %r5958};
	xor.b64  	%rd8576, %rd8574, %rd8575;
	shr.u64 	%rd8577, %rd8026, 7;
	xor.b64  	%rd8578, %rd8576, %rd8577;
	add.s64 	%rd8579, %rd8578, %rd7989;
	add.s64 	%rd8580, %rd8579, %rd8322;
	add.s64 	%rd8581, %rd8580, %rd8573;
	add.s64 	%rd8582, %rd8581, %rd8446;
	xor.b64  	%rd8583, %rd8520, %rd8483;
	and.b64  	%rd8584, %rd8557, %rd8583;
	xor.b64  	%rd8585, %rd8584, %rd8483;
	add.s64 	%rd8586, %rd8582, %rd8585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5960,%dummy}, %rd8557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5961}, %rd8557;
	}
	shf.r.wrap.b32 	%r5962, %r5961, %r5960, 14;
	shf.r.wrap.b32 	%r5963, %r5960, %r5961, 14;
	mov.b64 	%rd8587, {%r5963, %r5962};
	shf.r.wrap.b32 	%r5964, %r5961, %r5960, 18;
	shf.r.wrap.b32 	%r5965, %r5960, %r5961, 18;
	mov.b64 	%rd8588, {%r5965, %r5964};
	xor.b64  	%rd8589, %rd8587, %rd8588;
	shf.l.wrap.b32 	%r5966, %r5960, %r5961, 23;
	shf.l.wrap.b32 	%r5967, %r5961, %r5960, 23;
	mov.b64 	%rd8590, {%r5967, %r5966};
	xor.b64  	%rd8591, %rd8589, %rd8590;
	add.s64 	%rd8592, %rd8586, %rd8591;
	add.s64 	%rd8593, %rd8592, 1977374033974150939;
	add.s64 	%rd8594, %rd8593, %rd8457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5968,%dummy}, %rd8568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5969}, %rd8568;
	}
	shf.r.wrap.b32 	%r5970, %r5969, %r5968, 28;
	shf.r.wrap.b32 	%r5971, %r5968, %r5969, 28;
	mov.b64 	%rd8595, {%r5971, %r5970};
	shf.l.wrap.b32 	%r5972, %r5968, %r5969, 30;
	shf.l.wrap.b32 	%r5973, %r5969, %r5968, 30;
	mov.b64 	%rd8596, {%r5973, %r5972};
	xor.b64  	%rd8597, %rd8595, %rd8596;
	shf.l.wrap.b32 	%r5974, %r5968, %r5969, 25;
	shf.l.wrap.b32 	%r5975, %r5969, %r5968, 25;
	mov.b64 	%rd8598, {%r5975, %r5974};
	xor.b64  	%rd8599, %rd8597, %rd8598;
	and.b64  	%rd8600, %rd8568, %rd8531;
	or.b64  	%rd8601, %rd8568, %rd8531;
	and.b64  	%rd8602, %rd8601, %rd8494;
	or.b64  	%rd8603, %rd8602, %rd8600;
	add.s64 	%rd8604, %rd8603, %rd8599;
	add.s64 	%rd8605, %rd8604, %rd8593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5976,%dummy}, %rd8544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5977}, %rd8544;
	}
	shf.r.wrap.b32 	%r5978, %r5977, %r5976, 19;
	shf.r.wrap.b32 	%r5979, %r5976, %r5977, 19;
	mov.b64 	%rd8606, {%r5979, %r5978};
	shf.l.wrap.b32 	%r5980, %r5976, %r5977, 3;
	shf.l.wrap.b32 	%r5981, %r5977, %r5976, 3;
	mov.b64 	%rd8607, {%r5981, %r5980};
	xor.b64  	%rd8608, %rd8606, %rd8607;
	shr.u64 	%rd8609, %rd8544, 6;
	xor.b64  	%rd8610, %rd8608, %rd8609;
	shf.r.wrap.b32 	%r5982, %r5639, %r5638, 1;
	shf.r.wrap.b32 	%r5983, %r5638, %r5639, 1;
	mov.b64 	%rd8611, {%r5983, %r5982};
	shf.r.wrap.b32 	%r5984, %r5639, %r5638, 8;
	shf.r.wrap.b32 	%r5985, %r5638, %r5639, 8;
	mov.b64 	%rd8612, {%r5985, %r5984};
	xor.b64  	%rd8613, %rd8611, %rd8612;
	shr.u64 	%rd8614, %rd8063, 7;
	xor.b64  	%rd8615, %rd8613, %rd8614;
	add.s64 	%rd8616, %rd8615, %rd8026;
	add.s64 	%rd8617, %rd8616, %rd8359;
	add.s64 	%rd8618, %rd8617, %rd8610;
	add.s64 	%rd8619, %rd8618, %rd8483;
	xor.b64  	%rd8620, %rd8557, %rd8520;
	and.b64  	%rd8621, %rd8594, %rd8620;
	xor.b64  	%rd8622, %rd8621, %rd8520;
	add.s64 	%rd8623, %rd8619, %rd8622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5986,%dummy}, %rd8594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5987}, %rd8594;
	}
	shf.r.wrap.b32 	%r5988, %r5987, %r5986, 14;
	shf.r.wrap.b32 	%r5989, %r5986, %r5987, 14;
	mov.b64 	%rd8624, {%r5989, %r5988};
	shf.r.wrap.b32 	%r5990, %r5987, %r5986, 18;
	shf.r.wrap.b32 	%r5991, %r5986, %r5987, 18;
	mov.b64 	%rd8625, {%r5991, %r5990};
	xor.b64  	%rd8626, %rd8624, %rd8625;
	shf.l.wrap.b32 	%r5992, %r5986, %r5987, 23;
	shf.l.wrap.b32 	%r5993, %r5987, %r5986, 23;
	mov.b64 	%rd8627, {%r5993, %r5992};
	xor.b64  	%rd8628, %rd8626, %rd8627;
	add.s64 	%rd8629, %rd8623, %rd8628;
	add.s64 	%rd8630, %rd8629, 2944078676154940804;
	add.s64 	%rd8631, %rd8630, %rd8494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5994,%dummy}, %rd8605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5995}, %rd8605;
	}
	shf.r.wrap.b32 	%r5996, %r5995, %r5994, 28;
	shf.r.wrap.b32 	%r5997, %r5994, %r5995, 28;
	mov.b64 	%rd8632, {%r5997, %r5996};
	shf.l.wrap.b32 	%r5998, %r5994, %r5995, 30;
	shf.l.wrap.b32 	%r5999, %r5995, %r5994, 30;
	mov.b64 	%rd8633, {%r5999, %r5998};
	xor.b64  	%rd8634, %rd8632, %rd8633;
	shf.l.wrap.b32 	%r6000, %r5994, %r5995, 25;
	shf.l.wrap.b32 	%r6001, %r5995, %r5994, 25;
	mov.b64 	%rd8635, {%r6001, %r6000};
	xor.b64  	%rd8636, %rd8634, %rd8635;
	and.b64  	%rd8637, %rd8605, %rd8568;
	or.b64  	%rd8638, %rd8605, %rd8568;
	and.b64  	%rd8639, %rd8638, %rd8531;
	or.b64  	%rd8640, %rd8639, %rd8637;
	add.s64 	%rd8641, %rd8640, %rd8636;
	add.s64 	%rd8642, %rd8641, %rd8630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6002,%dummy}, %rd8581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6003}, %rd8581;
	}
	shf.r.wrap.b32 	%r6004, %r6003, %r6002, 19;
	shf.r.wrap.b32 	%r6005, %r6002, %r6003, 19;
	mov.b64 	%rd8643, {%r6005, %r6004};
	shf.l.wrap.b32 	%r6006, %r6002, %r6003, 3;
	shf.l.wrap.b32 	%r6007, %r6003, %r6002, 3;
	mov.b64 	%rd8644, {%r6007, %r6006};
	xor.b64  	%rd8645, %rd8643, %rd8644;
	shr.u64 	%rd8646, %rd8581, 6;
	xor.b64  	%rd8647, %rd8645, %rd8646;
	shf.r.wrap.b32 	%r6008, %r5665, %r5664, 1;
	shf.r.wrap.b32 	%r6009, %r5664, %r5665, 1;
	mov.b64 	%rd8648, {%r6009, %r6008};
	shf.r.wrap.b32 	%r6010, %r5665, %r5664, 8;
	shf.r.wrap.b32 	%r6011, %r5664, %r5665, 8;
	mov.b64 	%rd8649, {%r6011, %r6010};
	xor.b64  	%rd8650, %rd8648, %rd8649;
	shr.u64 	%rd8651, %rd8100, 7;
	xor.b64  	%rd8652, %rd8650, %rd8651;
	add.s64 	%rd8653, %rd8652, %rd8063;
	add.s64 	%rd8654, %rd8653, %rd8396;
	add.s64 	%rd8655, %rd8654, %rd8647;
	add.s64 	%rd8656, %rd8655, %rd8520;
	xor.b64  	%rd8657, %rd8594, %rd8557;
	and.b64  	%rd8658, %rd8631, %rd8657;
	xor.b64  	%rd8659, %rd8658, %rd8557;
	add.s64 	%rd8660, %rd8656, %rd8659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6012,%dummy}, %rd8631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6013}, %rd8631;
	}
	shf.r.wrap.b32 	%r6014, %r6013, %r6012, 14;
	shf.r.wrap.b32 	%r6015, %r6012, %r6013, 14;
	mov.b64 	%rd8661, {%r6015, %r6014};
	shf.r.wrap.b32 	%r6016, %r6013, %r6012, 18;
	shf.r.wrap.b32 	%r6017, %r6012, %r6013, 18;
	mov.b64 	%rd8662, {%r6017, %r6016};
	xor.b64  	%rd8663, %rd8661, %rd8662;
	shf.l.wrap.b32 	%r6018, %r6012, %r6013, 23;
	shf.l.wrap.b32 	%r6019, %r6013, %r6012, 23;
	mov.b64 	%rd8664, {%r6019, %r6018};
	xor.b64  	%rd8665, %rd8663, %rd8664;
	add.s64 	%rd8666, %rd8660, %rd8665;
	add.s64 	%rd8667, %rd8666, 3659926193048069267;
	add.s64 	%rd8668, %rd8667, %rd8531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6020,%dummy}, %rd8642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6021}, %rd8642;
	}
	shf.r.wrap.b32 	%r6022, %r6021, %r6020, 28;
	shf.r.wrap.b32 	%r6023, %r6020, %r6021, 28;
	mov.b64 	%rd8669, {%r6023, %r6022};
	shf.l.wrap.b32 	%r6024, %r6020, %r6021, 30;
	shf.l.wrap.b32 	%r6025, %r6021, %r6020, 30;
	mov.b64 	%rd8670, {%r6025, %r6024};
	xor.b64  	%rd8671, %rd8669, %rd8670;
	shf.l.wrap.b32 	%r6026, %r6020, %r6021, 25;
	shf.l.wrap.b32 	%r6027, %r6021, %r6020, 25;
	mov.b64 	%rd8672, {%r6027, %r6026};
	xor.b64  	%rd8673, %rd8671, %rd8672;
	and.b64  	%rd8674, %rd8642, %rd8605;
	or.b64  	%rd8675, %rd8642, %rd8605;
	and.b64  	%rd8676, %rd8675, %rd8568;
	or.b64  	%rd8677, %rd8676, %rd8674;
	add.s64 	%rd8678, %rd8677, %rd8673;
	add.s64 	%rd8679, %rd8678, %rd8667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6028,%dummy}, %rd8618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6029}, %rd8618;
	}
	shf.r.wrap.b32 	%r6030, %r6029, %r6028, 19;
	shf.r.wrap.b32 	%r6031, %r6028, %r6029, 19;
	mov.b64 	%rd8680, {%r6031, %r6030};
	shf.l.wrap.b32 	%r6032, %r6028, %r6029, 3;
	shf.l.wrap.b32 	%r6033, %r6029, %r6028, 3;
	mov.b64 	%rd8681, {%r6033, %r6032};
	xor.b64  	%rd8682, %rd8680, %rd8681;
	shr.u64 	%rd8683, %rd8618, 6;
	xor.b64  	%rd8684, %rd8682, %rd8683;
	shf.r.wrap.b32 	%r6034, %r5691, %r5690, 1;
	shf.r.wrap.b32 	%r6035, %r5690, %r5691, 1;
	mov.b64 	%rd8685, {%r6035, %r6034};
	shf.r.wrap.b32 	%r6036, %r5691, %r5690, 8;
	shf.r.wrap.b32 	%r6037, %r5690, %r5691, 8;
	mov.b64 	%rd8686, {%r6037, %r6036};
	xor.b64  	%rd8687, %rd8685, %rd8686;
	shr.u64 	%rd8688, %rd8137, 7;
	xor.b64  	%rd8689, %rd8687, %rd8688;
	add.s64 	%rd8690, %rd8689, %rd8100;
	add.s64 	%rd8691, %rd8690, %rd8433;
	add.s64 	%rd8692, %rd8691, %rd8684;
	add.s64 	%rd8693, %rd8692, %rd8557;
	xor.b64  	%rd8694, %rd8631, %rd8594;
	and.b64  	%rd8695, %rd8668, %rd8694;
	xor.b64  	%rd8696, %rd8695, %rd8594;
	add.s64 	%rd8697, %rd8693, %rd8696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6038,%dummy}, %rd8668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6039}, %rd8668;
	}
	shf.r.wrap.b32 	%r6040, %r6039, %r6038, 14;
	shf.r.wrap.b32 	%r6041, %r6038, %r6039, 14;
	mov.b64 	%rd8698, {%r6041, %r6040};
	shf.r.wrap.b32 	%r6042, %r6039, %r6038, 18;
	shf.r.wrap.b32 	%r6043, %r6038, %r6039, 18;
	mov.b64 	%rd8699, {%r6043, %r6042};
	xor.b64  	%rd8700, %rd8698, %rd8699;
	shf.l.wrap.b32 	%r6044, %r6038, %r6039, 23;
	shf.l.wrap.b32 	%r6045, %r6039, %r6038, 23;
	mov.b64 	%rd8701, {%r6045, %r6044};
	xor.b64  	%rd8702, %rd8700, %rd8701;
	add.s64 	%rd8703, %rd8697, %rd8702;
	add.s64 	%rd8704, %rd8703, 4368137639120453308;
	add.s64 	%rd8705, %rd8704, %rd8568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6046,%dummy}, %rd8679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6047}, %rd8679;
	}
	shf.r.wrap.b32 	%r6048, %r6047, %r6046, 28;
	shf.r.wrap.b32 	%r6049, %r6046, %r6047, 28;
	mov.b64 	%rd8706, {%r6049, %r6048};
	shf.l.wrap.b32 	%r6050, %r6046, %r6047, 30;
	shf.l.wrap.b32 	%r6051, %r6047, %r6046, 30;
	mov.b64 	%rd8707, {%r6051, %r6050};
	xor.b64  	%rd8708, %rd8706, %rd8707;
	shf.l.wrap.b32 	%r6052, %r6046, %r6047, 25;
	shf.l.wrap.b32 	%r6053, %r6047, %r6046, 25;
	mov.b64 	%rd8709, {%r6053, %r6052};
	xor.b64  	%rd8710, %rd8708, %rd8709;
	and.b64  	%rd8711, %rd8679, %rd8642;
	or.b64  	%rd8712, %rd8679, %rd8642;
	and.b64  	%rd8713, %rd8712, %rd8605;
	or.b64  	%rd8714, %rd8713, %rd8711;
	add.s64 	%rd8715, %rd8714, %rd8710;
	add.s64 	%rd8716, %rd8715, %rd8704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6054,%dummy}, %rd8655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6055}, %rd8655;
	}
	shf.r.wrap.b32 	%r6056, %r6055, %r6054, 19;
	shf.r.wrap.b32 	%r6057, %r6054, %r6055, 19;
	mov.b64 	%rd8717, {%r6057, %r6056};
	shf.l.wrap.b32 	%r6058, %r6054, %r6055, 3;
	shf.l.wrap.b32 	%r6059, %r6055, %r6054, 3;
	mov.b64 	%rd8718, {%r6059, %r6058};
	xor.b64  	%rd8719, %rd8717, %rd8718;
	shr.u64 	%rd8720, %rd8655, 6;
	xor.b64  	%rd8721, %rd8719, %rd8720;
	shf.r.wrap.b32 	%r6060, %r5717, %r5716, 1;
	shf.r.wrap.b32 	%r6061, %r5716, %r5717, 1;
	mov.b64 	%rd8722, {%r6061, %r6060};
	shf.r.wrap.b32 	%r6062, %r5717, %r5716, 8;
	shf.r.wrap.b32 	%r6063, %r5716, %r5717, 8;
	mov.b64 	%rd8723, {%r6063, %r6062};
	xor.b64  	%rd8724, %rd8722, %rd8723;
	shr.u64 	%rd8725, %rd8174, 7;
	xor.b64  	%rd8726, %rd8724, %rd8725;
	add.s64 	%rd8727, %rd8726, %rd8137;
	add.s64 	%rd8728, %rd8727, %rd8470;
	add.s64 	%rd8729, %rd8728, %rd8721;
	add.s64 	%rd8730, %rd8729, %rd8594;
	xor.b64  	%rd8731, %rd8668, %rd8631;
	and.b64  	%rd8732, %rd8705, %rd8731;
	xor.b64  	%rd8733, %rd8732, %rd8631;
	add.s64 	%rd8734, %rd8730, %rd8733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6064,%dummy}, %rd8705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6065}, %rd8705;
	}
	shf.r.wrap.b32 	%r6066, %r6065, %r6064, 14;
	shf.r.wrap.b32 	%r6067, %r6064, %r6065, 14;
	mov.b64 	%rd8735, {%r6067, %r6066};
	shf.r.wrap.b32 	%r6068, %r6065, %r6064, 18;
	shf.r.wrap.b32 	%r6069, %r6064, %r6065, 18;
	mov.b64 	%rd8736, {%r6069, %r6068};
	xor.b64  	%rd8737, %rd8735, %rd8736;
	shf.l.wrap.b32 	%r6070, %r6064, %r6065, 23;
	shf.l.wrap.b32 	%r6071, %r6065, %r6064, 23;
	mov.b64 	%rd8738, {%r6071, %r6070};
	xor.b64  	%rd8739, %rd8737, %rd8738;
	add.s64 	%rd8740, %rd8734, %rd8739;
	add.s64 	%rd8741, %rd8740, 4836135668995329356;
	add.s64 	%rd8742, %rd8741, %rd8605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6072,%dummy}, %rd8716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6073}, %rd8716;
	}
	shf.r.wrap.b32 	%r6074, %r6073, %r6072, 28;
	shf.r.wrap.b32 	%r6075, %r6072, %r6073, 28;
	mov.b64 	%rd8743, {%r6075, %r6074};
	shf.l.wrap.b32 	%r6076, %r6072, %r6073, 30;
	shf.l.wrap.b32 	%r6077, %r6073, %r6072, 30;
	mov.b64 	%rd8744, {%r6077, %r6076};
	xor.b64  	%rd8745, %rd8743, %rd8744;
	shf.l.wrap.b32 	%r6078, %r6072, %r6073, 25;
	shf.l.wrap.b32 	%r6079, %r6073, %r6072, 25;
	mov.b64 	%rd8746, {%r6079, %r6078};
	xor.b64  	%rd8747, %rd8745, %rd8746;
	and.b64  	%rd8748, %rd8716, %rd8679;
	or.b64  	%rd8749, %rd8716, %rd8679;
	and.b64  	%rd8750, %rd8749, %rd8642;
	or.b64  	%rd8751, %rd8750, %rd8748;
	add.s64 	%rd8752, %rd8751, %rd8747;
	add.s64 	%rd8753, %rd8752, %rd8741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6080,%dummy}, %rd8692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6081}, %rd8692;
	}
	shf.r.wrap.b32 	%r6082, %r6081, %r6080, 19;
	shf.r.wrap.b32 	%r6083, %r6080, %r6081, 19;
	mov.b64 	%rd8754, {%r6083, %r6082};
	shf.l.wrap.b32 	%r6084, %r6080, %r6081, 3;
	shf.l.wrap.b32 	%r6085, %r6081, %r6080, 3;
	mov.b64 	%rd8755, {%r6085, %r6084};
	xor.b64  	%rd8756, %rd8754, %rd8755;
	shr.u64 	%rd8757, %rd8692, 6;
	xor.b64  	%rd8758, %rd8756, %rd8757;
	shf.r.wrap.b32 	%r6086, %r5743, %r5742, 1;
	shf.r.wrap.b32 	%r6087, %r5742, %r5743, 1;
	mov.b64 	%rd8759, {%r6087, %r6086};
	shf.r.wrap.b32 	%r6088, %r5743, %r5742, 8;
	shf.r.wrap.b32 	%r6089, %r5742, %r5743, 8;
	mov.b64 	%rd8760, {%r6089, %r6088};
	xor.b64  	%rd8761, %rd8759, %rd8760;
	shr.u64 	%rd8762, %rd8211, 7;
	xor.b64  	%rd8763, %rd8761, %rd8762;
	add.s64 	%rd8764, %rd8763, %rd8174;
	add.s64 	%rd8765, %rd8764, %rd8507;
	add.s64 	%rd8766, %rd8765, %rd8758;
	add.s64 	%rd8767, %rd8766, %rd8631;
	xor.b64  	%rd8768, %rd8705, %rd8668;
	and.b64  	%rd8769, %rd8742, %rd8768;
	xor.b64  	%rd8770, %rd8769, %rd8668;
	add.s64 	%rd8771, %rd8767, %rd8770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6090,%dummy}, %rd8742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6091}, %rd8742;
	}
	shf.r.wrap.b32 	%r6092, %r6091, %r6090, 14;
	shf.r.wrap.b32 	%r6093, %r6090, %r6091, 14;
	mov.b64 	%rd8772, {%r6093, %r6092};
	shf.r.wrap.b32 	%r6094, %r6091, %r6090, 18;
	shf.r.wrap.b32 	%r6095, %r6090, %r6091, 18;
	mov.b64 	%rd8773, {%r6095, %r6094};
	xor.b64  	%rd8774, %rd8772, %rd8773;
	shf.l.wrap.b32 	%r6096, %r6090, %r6091, 23;
	shf.l.wrap.b32 	%r6097, %r6091, %r6090, 23;
	mov.b64 	%rd8775, {%r6097, %r6096};
	xor.b64  	%rd8776, %rd8774, %rd8775;
	add.s64 	%rd8777, %rd8771, %rd8776;
	add.s64 	%rd8778, %rd8777, 5532061633213252278;
	add.s64 	%rd8779, %rd8778, %rd8642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6098,%dummy}, %rd8753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6099}, %rd8753;
	}
	shf.r.wrap.b32 	%r6100, %r6099, %r6098, 28;
	shf.r.wrap.b32 	%r6101, %r6098, %r6099, 28;
	mov.b64 	%rd8780, {%r6101, %r6100};
	shf.l.wrap.b32 	%r6102, %r6098, %r6099, 30;
	shf.l.wrap.b32 	%r6103, %r6099, %r6098, 30;
	mov.b64 	%rd8781, {%r6103, %r6102};
	xor.b64  	%rd8782, %rd8780, %rd8781;
	shf.l.wrap.b32 	%r6104, %r6098, %r6099, 25;
	shf.l.wrap.b32 	%r6105, %r6099, %r6098, 25;
	mov.b64 	%rd8783, {%r6105, %r6104};
	xor.b64  	%rd8784, %rd8782, %rd8783;
	and.b64  	%rd8785, %rd8753, %rd8716;
	or.b64  	%rd8786, %rd8753, %rd8716;
	and.b64  	%rd8787, %rd8786, %rd8679;
	or.b64  	%rd8788, %rd8787, %rd8785;
	add.s64 	%rd8789, %rd8788, %rd8784;
	add.s64 	%rd8790, %rd8789, %rd8778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6106,%dummy}, %rd8729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6107}, %rd8729;
	}
	shf.r.wrap.b32 	%r6108, %r6107, %r6106, 19;
	shf.r.wrap.b32 	%r6109, %r6106, %r6107, 19;
	mov.b64 	%rd8791, {%r6109, %r6108};
	shf.l.wrap.b32 	%r6110, %r6106, %r6107, 3;
	shf.l.wrap.b32 	%r6111, %r6107, %r6106, 3;
	mov.b64 	%rd8792, {%r6111, %r6110};
	xor.b64  	%rd8793, %rd8791, %rd8792;
	shr.u64 	%rd8794, %rd8729, 6;
	xor.b64  	%rd8795, %rd8793, %rd8794;
	shf.r.wrap.b32 	%r6112, %r5769, %r5768, 1;
	shf.r.wrap.b32 	%r6113, %r5768, %r5769, 1;
	mov.b64 	%rd8796, {%r6113, %r6112};
	shf.r.wrap.b32 	%r6114, %r5769, %r5768, 8;
	shf.r.wrap.b32 	%r6115, %r5768, %r5769, 8;
	mov.b64 	%rd8797, {%r6115, %r6114};
	xor.b64  	%rd8798, %rd8796, %rd8797;
	shr.u64 	%rd8799, %rd8248, 7;
	xor.b64  	%rd8800, %rd8798, %rd8799;
	add.s64 	%rd8801, %rd8800, %rd8211;
	add.s64 	%rd8802, %rd8801, %rd8544;
	add.s64 	%rd8803, %rd8802, %rd8795;
	add.s64 	%rd8804, %rd8803, %rd8668;
	xor.b64  	%rd8805, %rd8742, %rd8705;
	and.b64  	%rd8806, %rd8779, %rd8805;
	xor.b64  	%rd8807, %rd8806, %rd8705;
	add.s64 	%rd8808, %rd8804, %rd8807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6116,%dummy}, %rd8779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6117}, %rd8779;
	}
	shf.r.wrap.b32 	%r6118, %r6117, %r6116, 14;
	shf.r.wrap.b32 	%r6119, %r6116, %r6117, 14;
	mov.b64 	%rd8809, {%r6119, %r6118};
	shf.r.wrap.b32 	%r6120, %r6117, %r6116, 18;
	shf.r.wrap.b32 	%r6121, %r6116, %r6117, 18;
	mov.b64 	%rd8810, {%r6121, %r6120};
	xor.b64  	%rd8811, %rd8809, %rd8810;
	shf.l.wrap.b32 	%r6122, %r6116, %r6117, 23;
	shf.l.wrap.b32 	%r6123, %r6117, %r6116, 23;
	mov.b64 	%rd8812, {%r6123, %r6122};
	xor.b64  	%rd8813, %rd8811, %rd8812;
	add.s64 	%rd8814, %rd8808, %rd8813;
	add.s64 	%rd8815, %rd8814, 6448918945643986474;
	add.s64 	%rd8816, %rd8815, %rd8679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6124,%dummy}, %rd8790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6125}, %rd8790;
	}
	shf.r.wrap.b32 	%r6126, %r6125, %r6124, 28;
	shf.r.wrap.b32 	%r6127, %r6124, %r6125, 28;
	mov.b64 	%rd8817, {%r6127, %r6126};
	shf.l.wrap.b32 	%r6128, %r6124, %r6125, 30;
	shf.l.wrap.b32 	%r6129, %r6125, %r6124, 30;
	mov.b64 	%rd8818, {%r6129, %r6128};
	xor.b64  	%rd8819, %rd8817, %rd8818;
	shf.l.wrap.b32 	%r6130, %r6124, %r6125, 25;
	shf.l.wrap.b32 	%r6131, %r6125, %r6124, 25;
	mov.b64 	%rd8820, {%r6131, %r6130};
	xor.b64  	%rd8821, %rd8819, %rd8820;
	and.b64  	%rd8822, %rd8790, %rd8753;
	or.b64  	%rd8823, %rd8790, %rd8753;
	and.b64  	%rd8824, %rd8823, %rd8716;
	or.b64  	%rd8825, %rd8824, %rd8822;
	add.s64 	%rd8826, %rd8825, %rd8821;
	add.s64 	%rd8827, %rd8826, %rd8815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6132,%dummy}, %rd8766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6133}, %rd8766;
	}
	shf.r.wrap.b32 	%r6134, %r6133, %r6132, 19;
	shf.r.wrap.b32 	%r6135, %r6132, %r6133, 19;
	mov.b64 	%rd8828, {%r6135, %r6134};
	shf.l.wrap.b32 	%r6136, %r6132, %r6133, 3;
	shf.l.wrap.b32 	%r6137, %r6133, %r6132, 3;
	mov.b64 	%rd8829, {%r6137, %r6136};
	xor.b64  	%rd8830, %rd8828, %rd8829;
	shr.u64 	%rd8831, %rd8766, 6;
	xor.b64  	%rd8832, %rd8830, %rd8831;
	shf.r.wrap.b32 	%r6138, %r5795, %r5794, 1;
	shf.r.wrap.b32 	%r6139, %r5794, %r5795, 1;
	mov.b64 	%rd8833, {%r6139, %r6138};
	shf.r.wrap.b32 	%r6140, %r5795, %r5794, 8;
	shf.r.wrap.b32 	%r6141, %r5794, %r5795, 8;
	mov.b64 	%rd8834, {%r6141, %r6140};
	xor.b64  	%rd8835, %rd8833, %rd8834;
	shr.u64 	%rd8836, %rd8285, 7;
	xor.b64  	%rd8837, %rd8835, %rd8836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6142,%dummy}, %rd8816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6143}, %rd8816;
	}
	shf.r.wrap.b32 	%r6144, %r6143, %r6142, 14;
	shf.r.wrap.b32 	%r6145, %r6142, %r6143, 14;
	mov.b64 	%rd8838, {%r6145, %r6144};
	shf.r.wrap.b32 	%r6146, %r6143, %r6142, 18;
	shf.r.wrap.b32 	%r6147, %r6142, %r6143, 18;
	mov.b64 	%rd8839, {%r6147, %r6146};
	xor.b64  	%rd8840, %rd8838, %rd8839;
	shf.l.wrap.b32 	%r6148, %r6142, %r6143, 23;
	shf.l.wrap.b32 	%r6149, %r6143, %r6142, 23;
	mov.b64 	%rd8841, {%r6149, %r6148};
	xor.b64  	%rd8842, %rd8840, %rd8841;
	xor.b64  	%rd8843, %rd8779, %rd8742;
	and.b64  	%rd8844, %rd8816, %rd8843;
	xor.b64  	%rd8845, %rd8844, %rd8742;
	add.s64 	%rd8846, %rd8248, %rd8837;
	add.s64 	%rd8847, %rd8846, %rd8581;
	add.s64 	%rd8848, %rd8847, %rd8832;
	add.s64 	%rd8849, %rd8848, %rd8705;
	add.s64 	%rd8850, %rd8849, %rd8845;
	add.s64 	%rd8851, %rd8850, %rd8842;
	add.s64 	%rd8852, %rd8851, 6902733635092675308;
	add.s64 	%rd8853, %rd8852, %rd8716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6150,%dummy}, %rd8827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6151}, %rd8827;
	}
	shf.r.wrap.b32 	%r6152, %r6151, %r6150, 28;
	shf.r.wrap.b32 	%r6153, %r6150, %r6151, 28;
	mov.b64 	%rd8854, {%r6153, %r6152};
	shf.l.wrap.b32 	%r6154, %r6150, %r6151, 30;
	shf.l.wrap.b32 	%r6155, %r6151, %r6150, 30;
	mov.b64 	%rd8855, {%r6155, %r6154};
	xor.b64  	%rd8856, %rd8854, %rd8855;
	shf.l.wrap.b32 	%r6156, %r6150, %r6151, 25;
	shf.l.wrap.b32 	%r6157, %r6151, %r6150, 25;
	mov.b64 	%rd8857, {%r6157, %r6156};
	xor.b64  	%rd8858, %rd8856, %rd8857;
	and.b64  	%rd8859, %rd8827, %rd8790;
	or.b64  	%rd8860, %rd8827, %rd8790;
	and.b64  	%rd8861, %rd8860, %rd8753;
	or.b64  	%rd8862, %rd8861, %rd8859;
	add.s64 	%rd8863, %rd8862, %rd8858;
	add.s64 	%rd8864, %rd8863, %rd8852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6158,%dummy}, %rd8803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6159}, %rd8803;
	}
	shf.r.wrap.b32 	%r6160, %r6159, %r6158, 19;
	shf.r.wrap.b32 	%r6161, %r6158, %r6159, 19;
	mov.b64 	%rd8865, {%r6161, %r6160};
	shf.l.wrap.b32 	%r6162, %r6158, %r6159, 3;
	shf.l.wrap.b32 	%r6163, %r6159, %r6158, 3;
	mov.b64 	%rd8866, {%r6163, %r6162};
	xor.b64  	%rd8867, %rd8865, %rd8866;
	shr.u64 	%rd8868, %rd8803, 6;
	xor.b64  	%rd8869, %rd8867, %rd8868;
	shf.r.wrap.b32 	%r6164, %r5821, %r5820, 1;
	shf.r.wrap.b32 	%r6165, %r5820, %r5821, 1;
	mov.b64 	%rd8870, {%r6165, %r6164};
	shf.r.wrap.b32 	%r6166, %r5821, %r5820, 8;
	shf.r.wrap.b32 	%r6167, %r5820, %r5821, 8;
	mov.b64 	%rd8871, {%r6167, %r6166};
	xor.b64  	%rd8872, %rd8870, %rd8871;
	shr.u64 	%rd8873, %rd8322, 7;
	xor.b64  	%rd8874, %rd8872, %rd8873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6168,%dummy}, %rd8853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6169}, %rd8853;
	}
	shf.r.wrap.b32 	%r6170, %r6169, %r6168, 14;
	shf.r.wrap.b32 	%r6171, %r6168, %r6169, 14;
	mov.b64 	%rd8875, {%r6171, %r6170};
	shf.r.wrap.b32 	%r6172, %r6169, %r6168, 18;
	shf.r.wrap.b32 	%r6173, %r6168, %r6169, 18;
	mov.b64 	%rd8876, {%r6173, %r6172};
	xor.b64  	%rd8877, %rd8875, %rd8876;
	shf.l.wrap.b32 	%r6174, %r6168, %r6169, 23;
	shf.l.wrap.b32 	%r6175, %r6169, %r6168, 23;
	mov.b64 	%rd8878, {%r6175, %r6174};
	xor.b64  	%rd8879, %rd8877, %rd8878;
	xor.b64  	%rd8880, %rd8816, %rd8779;
	and.b64  	%rd8881, %rd8853, %rd8880;
	xor.b64  	%rd8882, %rd8881, %rd8779;
	add.s64 	%rd8883, %rd8285, %rd8874;
	add.s64 	%rd8884, %rd8883, %rd8618;
	add.s64 	%rd8885, %rd8884, %rd8869;
	add.s64 	%rd8886, %rd8885, %rd8742;
	add.s64 	%rd8887, %rd8886, %rd8882;
	add.s64 	%rd8888, %rd8887, %rd8879;
	add.s64 	%rd8889, %rd8888, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6176,%dummy}, %rd8864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6177}, %rd8864;
	}
	shf.r.wrap.b32 	%r6178, %r6177, %r6176, 28;
	shf.r.wrap.b32 	%r6179, %r6176, %r6177, 28;
	mov.b64 	%rd8890, {%r6179, %r6178};
	shf.l.wrap.b32 	%r6180, %r6176, %r6177, 30;
	shf.l.wrap.b32 	%r6181, %r6177, %r6176, 30;
	mov.b64 	%rd8891, {%r6181, %r6180};
	xor.b64  	%rd8892, %rd8890, %rd8891;
	shf.l.wrap.b32 	%r6182, %r6176, %r6177, 25;
	shf.l.wrap.b32 	%r6183, %r6177, %r6176, 25;
	mov.b64 	%rd8893, {%r6183, %r6182};
	xor.b64  	%rd8894, %rd8892, %rd8893;
	and.b64  	%rd8895, %rd8864, %rd8827;
	or.b64  	%rd8896, %rd8864, %rd8827;
	and.b64  	%rd8897, %rd8896, %rd8790;
	or.b64  	%rd8898, %rd8897, %rd8895;
	add.s64 	%rd8899, %rd8894, %rd6160;
	add.s64 	%rd8900, %rd8899, %rd8898;
	add.s64 	%rd8901, %rd8900, %rd8889;
	st.local.u64 	[%rd4+8], %rd8901;
	add.s64 	%rd8902, %rd8864, %rd6166;
	st.local.u64 	[%rd4+16], %rd8902;
	add.s64 	%rd8903, %rd8827, %rd6169;
	st.local.u64 	[%rd4+24], %rd8903;
	add.s64 	%rd8904, %rd8790, %rd6158;
	st.local.u64 	[%rd4+32], %rd8904;
	add.s64 	%rd8905, %rd8753, %rd6144;
	add.s64 	%rd8906, %rd8905, %rd8889;
	st.local.u64 	[%rd4+40], %rd8906;
	add.s64 	%rd8907, %rd8853, %rd6152;
	st.local.u64 	[%rd4+48], %rd8907;
	add.s64 	%rd8908, %rd8816, %rd6151;
	st.local.u64 	[%rd4+56], %rd8908;
	add.s64 	%rd8909, %rd8779, %rd6142;
	st.local.u64 	[%rd4+64], %rd8909;
	cvt.u64.u32 	%rd8910, %r48;
	add.s64 	%rd12081, %rd12007, %rd8910;
	add.u64 	%rd8911, %SP, 0;
	add.s64 	%rd12063, %rd8911, %rd8910;
	mov.u32 	%r6184, 16;
	sub.s32 	%r8282, %r6184, %r48;

$L__BB8_42:
	setp.lt.u32 	%p38, %r8282, 128;
	@%p38 bra 	$L__BB8_47;

$L__BB8_43:
	and.b64  	%rd8912, %rd12063, 7;
	setp.eq.s64 	%p39, %rd8912, 0;
	@%p39 bra 	$L__BB8_45;

	ld.local.u8 	%rd8913, [%rd12081];
	shl.b64 	%rd8914, %rd8913, 56;
	ld.local.u8 	%rd8915, [%rd12081+1];
	shl.b64 	%rd8916, %rd8915, 48;
	or.b64  	%rd8917, %rd8916, %rd8914;
	ld.local.u8 	%rd8918, [%rd12081+2];
	shl.b64 	%rd8919, %rd8918, 40;
	or.b64  	%rd8920, %rd8917, %rd8919;
	ld.local.u8 	%rd8921, [%rd12081+3];
	shl.b64 	%rd8922, %rd8921, 32;
	or.b64  	%rd8923, %rd8920, %rd8922;
	ld.local.u8 	%r6185, [%rd12081+4];
	mul.wide.u32 	%rd8924, %r6185, 16777216;
	or.b64  	%rd8925, %rd8923, %rd8924;
	ld.local.u8 	%r6186, [%rd12081+5];
	mul.wide.u32 	%rd8926, %r6186, 65536;
	or.b64  	%rd8927, %rd8925, %rd8926;
	ld.local.u8 	%r6187, [%rd12081+6];
	mul.wide.u32 	%rd8928, %r6187, 256;
	or.b64  	%rd8929, %rd8927, %rd8928;
	ld.local.u8 	%rd8930, [%rd12081+7];
	or.b64  	%rd12080, %rd8929, %rd8930;
	ld.local.u8 	%rd8931, [%rd12081+8];
	shl.b64 	%rd8932, %rd8931, 56;
	ld.local.u8 	%rd8933, [%rd12081+9];
	shl.b64 	%rd8934, %rd8933, 48;
	or.b64  	%rd8935, %rd8934, %rd8932;
	ld.local.u8 	%rd8936, [%rd12081+10];
	shl.b64 	%rd8937, %rd8936, 40;
	or.b64  	%rd8938, %rd8935, %rd8937;
	ld.local.u8 	%rd8939, [%rd12081+11];
	shl.b64 	%rd8940, %rd8939, 32;
	or.b64  	%rd8941, %rd8938, %rd8940;
	ld.local.u8 	%r6188, [%rd12081+12];
	mul.wide.u32 	%rd8942, %r6188, 16777216;
	or.b64  	%rd8943, %rd8941, %rd8942;
	ld.local.u8 	%r6189, [%rd12081+13];
	mul.wide.u32 	%rd8944, %r6189, 65536;
	or.b64  	%rd8945, %rd8943, %rd8944;
	ld.local.u8 	%r6190, [%rd12081+14];
	mul.wide.u32 	%rd8946, %r6190, 256;
	or.b64  	%rd8947, %rd8945, %rd8946;
	ld.local.u8 	%rd8948, [%rd12081+15];
	or.b64  	%rd12079, %rd8947, %rd8948;
	ld.local.u8 	%rd8949, [%rd12081+16];
	shl.b64 	%rd8950, %rd8949, 56;
	ld.local.u8 	%rd8951, [%rd12081+17];
	shl.b64 	%rd8952, %rd8951, 48;
	or.b64  	%rd8953, %rd8952, %rd8950;
	ld.local.u8 	%rd8954, [%rd12081+18];
	shl.b64 	%rd8955, %rd8954, 40;
	or.b64  	%rd8956, %rd8953, %rd8955;
	ld.local.u8 	%rd8957, [%rd12081+19];
	shl.b64 	%rd8958, %rd8957, 32;
	or.b64  	%rd8959, %rd8956, %rd8958;
	ld.local.u8 	%r6191, [%rd12081+20];
	mul.wide.u32 	%rd8960, %r6191, 16777216;
	or.b64  	%rd8961, %rd8959, %rd8960;
	ld.local.u8 	%r6192, [%rd12081+21];
	mul.wide.u32 	%rd8962, %r6192, 65536;
	or.b64  	%rd8963, %rd8961, %rd8962;
	ld.local.u8 	%r6193, [%rd12081+22];
	mul.wide.u32 	%rd8964, %r6193, 256;
	or.b64  	%rd8965, %rd8963, %rd8964;
	ld.local.u8 	%rd8966, [%rd12081+23];
	or.b64  	%rd12078, %rd8965, %rd8966;
	ld.local.u8 	%rd8967, [%rd12081+24];
	shl.b64 	%rd8968, %rd8967, 56;
	ld.local.u8 	%rd8969, [%rd12081+25];
	shl.b64 	%rd8970, %rd8969, 48;
	or.b64  	%rd8971, %rd8970, %rd8968;
	ld.local.u8 	%rd8972, [%rd12081+26];
	shl.b64 	%rd8973, %rd8972, 40;
	or.b64  	%rd8974, %rd8971, %rd8973;
	ld.local.u8 	%rd8975, [%rd12081+27];
	shl.b64 	%rd8976, %rd8975, 32;
	or.b64  	%rd8977, %rd8974, %rd8976;
	ld.local.u8 	%r6194, [%rd12081+28];
	mul.wide.u32 	%rd8978, %r6194, 16777216;
	or.b64  	%rd8979, %rd8977, %rd8978;
	ld.local.u8 	%r6195, [%rd12081+29];
	mul.wide.u32 	%rd8980, %r6195, 65536;
	or.b64  	%rd8981, %rd8979, %rd8980;
	ld.local.u8 	%r6196, [%rd12081+30];
	mul.wide.u32 	%rd8982, %r6196, 256;
	or.b64  	%rd8983, %rd8981, %rd8982;
	ld.local.u8 	%rd8984, [%rd12081+31];
	or.b64  	%rd12077, %rd8983, %rd8984;
	ld.local.u8 	%rd8985, [%rd12081+32];
	shl.b64 	%rd8986, %rd8985, 56;
	ld.local.u8 	%rd8987, [%rd12081+33];
	shl.b64 	%rd8988, %rd8987, 48;
	or.b64  	%rd8989, %rd8988, %rd8986;
	ld.local.u8 	%rd8990, [%rd12081+34];
	shl.b64 	%rd8991, %rd8990, 40;
	or.b64  	%rd8992, %rd8989, %rd8991;
	ld.local.u8 	%rd8993, [%rd12081+35];
	shl.b64 	%rd8994, %rd8993, 32;
	or.b64  	%rd8995, %rd8992, %rd8994;
	ld.local.u8 	%r6197, [%rd12081+36];
	mul.wide.u32 	%rd8996, %r6197, 16777216;
	or.b64  	%rd8997, %rd8995, %rd8996;
	ld.local.u8 	%r6198, [%rd12081+37];
	mul.wide.u32 	%rd8998, %r6198, 65536;
	or.b64  	%rd8999, %rd8997, %rd8998;
	ld.local.u8 	%r6199, [%rd12081+38];
	mul.wide.u32 	%rd9000, %r6199, 256;
	or.b64  	%rd9001, %rd8999, %rd9000;
	ld.local.u8 	%rd9002, [%rd12081+39];
	or.b64  	%rd12076, %rd9001, %rd9002;
	ld.local.u8 	%rd9003, [%rd12081+40];
	shl.b64 	%rd9004, %rd9003, 56;
	ld.local.u8 	%rd9005, [%rd12081+41];
	shl.b64 	%rd9006, %rd9005, 48;
	or.b64  	%rd9007, %rd9006, %rd9004;
	ld.local.u8 	%rd9008, [%rd12081+42];
	shl.b64 	%rd9009, %rd9008, 40;
	or.b64  	%rd9010, %rd9007, %rd9009;
	ld.local.u8 	%rd9011, [%rd12081+43];
	shl.b64 	%rd9012, %rd9011, 32;
	or.b64  	%rd9013, %rd9010, %rd9012;
	ld.local.u8 	%r6200, [%rd12081+44];
	mul.wide.u32 	%rd9014, %r6200, 16777216;
	or.b64  	%rd9015, %rd9013, %rd9014;
	ld.local.u8 	%r6201, [%rd12081+45];
	mul.wide.u32 	%rd9016, %r6201, 65536;
	or.b64  	%rd9017, %rd9015, %rd9016;
	ld.local.u8 	%r6202, [%rd12081+46];
	mul.wide.u32 	%rd9018, %r6202, 256;
	or.b64  	%rd9019, %rd9017, %rd9018;
	ld.local.u8 	%rd9020, [%rd12081+47];
	or.b64  	%rd12075, %rd9019, %rd9020;
	ld.local.u8 	%rd9021, [%rd12081+48];
	shl.b64 	%rd9022, %rd9021, 56;
	ld.local.u8 	%rd9023, [%rd12081+49];
	shl.b64 	%rd9024, %rd9023, 48;
	or.b64  	%rd9025, %rd9024, %rd9022;
	ld.local.u8 	%rd9026, [%rd12081+50];
	shl.b64 	%rd9027, %rd9026, 40;
	or.b64  	%rd9028, %rd9025, %rd9027;
	ld.local.u8 	%rd9029, [%rd12081+51];
	shl.b64 	%rd9030, %rd9029, 32;
	or.b64  	%rd9031, %rd9028, %rd9030;
	ld.local.u8 	%r6203, [%rd12081+52];
	mul.wide.u32 	%rd9032, %r6203, 16777216;
	or.b64  	%rd9033, %rd9031, %rd9032;
	ld.local.u8 	%r6204, [%rd12081+53];
	mul.wide.u32 	%rd9034, %r6204, 65536;
	or.b64  	%rd9035, %rd9033, %rd9034;
	ld.local.u8 	%r6205, [%rd12081+54];
	mul.wide.u32 	%rd9036, %r6205, 256;
	or.b64  	%rd9037, %rd9035, %rd9036;
	ld.local.u8 	%rd9038, [%rd12081+55];
	or.b64  	%rd12074, %rd9037, %rd9038;
	ld.local.u8 	%rd9039, [%rd12081+56];
	shl.b64 	%rd9040, %rd9039, 56;
	ld.local.u8 	%rd9041, [%rd12081+57];
	shl.b64 	%rd9042, %rd9041, 48;
	or.b64  	%rd9043, %rd9042, %rd9040;
	ld.local.u8 	%rd9044, [%rd12081+58];
	shl.b64 	%rd9045, %rd9044, 40;
	or.b64  	%rd9046, %rd9043, %rd9045;
	ld.local.u8 	%rd9047, [%rd12081+59];
	shl.b64 	%rd9048, %rd9047, 32;
	or.b64  	%rd9049, %rd9046, %rd9048;
	ld.local.u8 	%r6206, [%rd12081+60];
	mul.wide.u32 	%rd9050, %r6206, 16777216;
	or.b64  	%rd9051, %rd9049, %rd9050;
	ld.local.u8 	%r6207, [%rd12081+61];
	mul.wide.u32 	%rd9052, %r6207, 65536;
	or.b64  	%rd9053, %rd9051, %rd9052;
	ld.local.u8 	%r6208, [%rd12081+62];
	mul.wide.u32 	%rd9054, %r6208, 256;
	or.b64  	%rd9055, %rd9053, %rd9054;
	ld.local.u8 	%rd9056, [%rd12081+63];
	or.b64  	%rd12073, %rd9055, %rd9056;
	ld.local.u8 	%rd9057, [%rd12081+64];
	shl.b64 	%rd9058, %rd9057, 56;
	ld.local.u8 	%rd9059, [%rd12081+65];
	shl.b64 	%rd9060, %rd9059, 48;
	or.b64  	%rd9061, %rd9060, %rd9058;
	ld.local.u8 	%rd9062, [%rd12081+66];
	shl.b64 	%rd9063, %rd9062, 40;
	or.b64  	%rd9064, %rd9061, %rd9063;
	ld.local.u8 	%rd9065, [%rd12081+67];
	shl.b64 	%rd9066, %rd9065, 32;
	or.b64  	%rd9067, %rd9064, %rd9066;
	ld.local.u8 	%r6209, [%rd12081+68];
	mul.wide.u32 	%rd9068, %r6209, 16777216;
	or.b64  	%rd9069, %rd9067, %rd9068;
	ld.local.u8 	%r6210, [%rd12081+69];
	mul.wide.u32 	%rd9070, %r6210, 65536;
	or.b64  	%rd9071, %rd9069, %rd9070;
	ld.local.u8 	%r6211, [%rd12081+70];
	mul.wide.u32 	%rd9072, %r6211, 256;
	or.b64  	%rd9073, %rd9071, %rd9072;
	ld.local.u8 	%rd9074, [%rd12081+71];
	or.b64  	%rd12072, %rd9073, %rd9074;
	ld.local.u8 	%rd9075, [%rd12081+72];
	shl.b64 	%rd9076, %rd9075, 56;
	ld.local.u8 	%rd9077, [%rd12081+73];
	shl.b64 	%rd9078, %rd9077, 48;
	or.b64  	%rd9079, %rd9078, %rd9076;
	ld.local.u8 	%rd9080, [%rd12081+74];
	shl.b64 	%rd9081, %rd9080, 40;
	or.b64  	%rd9082, %rd9079, %rd9081;
	ld.local.u8 	%rd9083, [%rd12081+75];
	shl.b64 	%rd9084, %rd9083, 32;
	or.b64  	%rd9085, %rd9082, %rd9084;
	ld.local.u8 	%r6212, [%rd12081+76];
	mul.wide.u32 	%rd9086, %r6212, 16777216;
	or.b64  	%rd9087, %rd9085, %rd9086;
	ld.local.u8 	%r6213, [%rd12081+77];
	mul.wide.u32 	%rd9088, %r6213, 65536;
	or.b64  	%rd9089, %rd9087, %rd9088;
	ld.local.u8 	%r6214, [%rd12081+78];
	mul.wide.u32 	%rd9090, %r6214, 256;
	or.b64  	%rd9091, %rd9089, %rd9090;
	ld.local.u8 	%rd9092, [%rd12081+79];
	or.b64  	%rd12071, %rd9091, %rd9092;
	ld.local.u8 	%rd9093, [%rd12081+80];
	shl.b64 	%rd9094, %rd9093, 56;
	ld.local.u8 	%rd9095, [%rd12081+81];
	shl.b64 	%rd9096, %rd9095, 48;
	or.b64  	%rd9097, %rd9096, %rd9094;
	ld.local.u8 	%rd9098, [%rd12081+82];
	shl.b64 	%rd9099, %rd9098, 40;
	or.b64  	%rd9100, %rd9097, %rd9099;
	ld.local.u8 	%rd9101, [%rd12081+83];
	shl.b64 	%rd9102, %rd9101, 32;
	or.b64  	%rd9103, %rd9100, %rd9102;
	ld.local.u8 	%r6215, [%rd12081+84];
	mul.wide.u32 	%rd9104, %r6215, 16777216;
	or.b64  	%rd9105, %rd9103, %rd9104;
	ld.local.u8 	%r6216, [%rd12081+85];
	mul.wide.u32 	%rd9106, %r6216, 65536;
	or.b64  	%rd9107, %rd9105, %rd9106;
	ld.local.u8 	%r6217, [%rd12081+86];
	mul.wide.u32 	%rd9108, %r6217, 256;
	or.b64  	%rd9109, %rd9107, %rd9108;
	ld.local.u8 	%rd9110, [%rd12081+87];
	or.b64  	%rd12070, %rd9109, %rd9110;
	ld.local.u8 	%rd9111, [%rd12081+88];
	shl.b64 	%rd9112, %rd9111, 56;
	ld.local.u8 	%rd9113, [%rd12081+89];
	shl.b64 	%rd9114, %rd9113, 48;
	or.b64  	%rd9115, %rd9114, %rd9112;
	ld.local.u8 	%rd9116, [%rd12081+90];
	shl.b64 	%rd9117, %rd9116, 40;
	or.b64  	%rd9118, %rd9115, %rd9117;
	ld.local.u8 	%rd9119, [%rd12081+91];
	shl.b64 	%rd9120, %rd9119, 32;
	or.b64  	%rd9121, %rd9118, %rd9120;
	ld.local.u8 	%r6218, [%rd12081+92];
	mul.wide.u32 	%rd9122, %r6218, 16777216;
	or.b64  	%rd9123, %rd9121, %rd9122;
	ld.local.u8 	%r6219, [%rd12081+93];
	mul.wide.u32 	%rd9124, %r6219, 65536;
	or.b64  	%rd9125, %rd9123, %rd9124;
	ld.local.u8 	%r6220, [%rd12081+94];
	mul.wide.u32 	%rd9126, %r6220, 256;
	or.b64  	%rd9127, %rd9125, %rd9126;
	ld.local.u8 	%rd9128, [%rd12081+95];
	or.b64  	%rd12069, %rd9127, %rd9128;
	ld.local.u8 	%rd9129, [%rd12081+96];
	shl.b64 	%rd9130, %rd9129, 56;
	ld.local.u8 	%rd9131, [%rd12081+97];
	shl.b64 	%rd9132, %rd9131, 48;
	or.b64  	%rd9133, %rd9132, %rd9130;
	ld.local.u8 	%rd9134, [%rd12081+98];
	shl.b64 	%rd9135, %rd9134, 40;
	or.b64  	%rd9136, %rd9133, %rd9135;
	ld.local.u8 	%rd9137, [%rd12081+99];
	shl.b64 	%rd9138, %rd9137, 32;
	or.b64  	%rd9139, %rd9136, %rd9138;
	ld.local.u8 	%r6221, [%rd12081+100];
	mul.wide.u32 	%rd9140, %r6221, 16777216;
	or.b64  	%rd9141, %rd9139, %rd9140;
	ld.local.u8 	%r6222, [%rd12081+101];
	mul.wide.u32 	%rd9142, %r6222, 65536;
	or.b64  	%rd9143, %rd9141, %rd9142;
	ld.local.u8 	%r6223, [%rd12081+102];
	mul.wide.u32 	%rd9144, %r6223, 256;
	or.b64  	%rd9145, %rd9143, %rd9144;
	ld.local.u8 	%rd9146, [%rd12081+103];
	or.b64  	%rd12068, %rd9145, %rd9146;
	ld.local.u8 	%rd9147, [%rd12081+104];
	shl.b64 	%rd9148, %rd9147, 56;
	ld.local.u8 	%rd9149, [%rd12081+105];
	shl.b64 	%rd9150, %rd9149, 48;
	or.b64  	%rd9151, %rd9150, %rd9148;
	ld.local.u8 	%rd9152, [%rd12081+106];
	shl.b64 	%rd9153, %rd9152, 40;
	or.b64  	%rd9154, %rd9151, %rd9153;
	ld.local.u8 	%rd9155, [%rd12081+107];
	shl.b64 	%rd9156, %rd9155, 32;
	or.b64  	%rd9157, %rd9154, %rd9156;
	ld.local.u8 	%r6224, [%rd12081+108];
	mul.wide.u32 	%rd9158, %r6224, 16777216;
	or.b64  	%rd9159, %rd9157, %rd9158;
	ld.local.u8 	%r6225, [%rd12081+109];
	mul.wide.u32 	%rd9160, %r6225, 65536;
	or.b64  	%rd9161, %rd9159, %rd9160;
	ld.local.u8 	%r6226, [%rd12081+110];
	mul.wide.u32 	%rd9162, %r6226, 256;
	or.b64  	%rd9163, %rd9161, %rd9162;
	ld.local.u8 	%rd9164, [%rd12081+111];
	or.b64  	%rd12067, %rd9163, %rd9164;
	ld.local.u8 	%rd9165, [%rd12081+112];
	shl.b64 	%rd9166, %rd9165, 56;
	ld.local.u8 	%rd9167, [%rd12081+113];
	shl.b64 	%rd9168, %rd9167, 48;
	or.b64  	%rd9169, %rd9168, %rd9166;
	ld.local.u8 	%rd9170, [%rd12081+114];
	shl.b64 	%rd9171, %rd9170, 40;
	or.b64  	%rd9172, %rd9169, %rd9171;
	ld.local.u8 	%rd9173, [%rd12081+115];
	shl.b64 	%rd9174, %rd9173, 32;
	or.b64  	%rd9175, %rd9172, %rd9174;
	ld.local.u8 	%r6227, [%rd12081+116];
	mul.wide.u32 	%rd9176, %r6227, 16777216;
	or.b64  	%rd9177, %rd9175, %rd9176;
	ld.local.u8 	%r6228, [%rd12081+117];
	mul.wide.u32 	%rd9178, %r6228, 65536;
	or.b64  	%rd9179, %rd9177, %rd9178;
	ld.local.u8 	%r6229, [%rd12081+118];
	mul.wide.u32 	%rd9180, %r6229, 256;
	or.b64  	%rd9181, %rd9179, %rd9180;
	ld.local.u8 	%rd9182, [%rd12081+119];
	or.b64  	%rd12066, %rd9181, %rd9182;
	ld.local.u8 	%rd9183, [%rd12081+120];
	ld.local.u8 	%rd9184, [%rd12081+121];
	ld.local.u8 	%rd9185, [%rd12081+122];
	ld.local.u8 	%rd9186, [%rd12081+123];
	ld.local.u8 	%r6230, [%rd12081+124];
	mul.wide.u32 	%rd9187, %r6230, 16777216;
	ld.local.u8 	%r6231, [%rd12081+125];
	mul.wide.u32 	%rd9188, %r6231, 65536;
	ld.local.u8 	%r6232, [%rd12081+126];
	mul.wide.u32 	%rd9189, %r6232, 256;
	ld.local.u8 	%rd9190, [%rd12081+127];
	shl.b64 	%rd9191, %rd9184, 48;
	shl.b64 	%rd9192, %rd9183, 56;
	shl.b64 	%rd9193, %rd9185, 40;
	or.b64  	%rd9194, %rd9191, %rd9192;
	shl.b64 	%rd9195, %rd9186, 32;
	or.b64  	%rd9196, %rd9194, %rd9193;
	or.b64  	%rd9197, %rd9196, %rd9195;
	or.b64  	%rd9198, %rd9197, %rd9187;
	or.b64  	%rd9199, %rd9198, %rd9188;
	or.b64  	%rd9200, %rd9199, %rd9189;
	or.b64  	%rd12065, %rd9200, %rd9190;
	bra.uni 	$L__BB8_46;

$L__BB8_45:
	ld.local.u64 	%rd9201, [%rd12081];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6233, %temp}, %rd9201;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6234}, %rd9201;
	}
	mov.u32 	%r6235, 291;
	mov.u32 	%r6236, 0;
	prmt.b32 	%r6237, %r6233, %r6236, %r6235;
	prmt.b32 	%r6238, %r6234, %r6236, %r6235;
	mov.b64 	%rd12080, {%r6238, %r6237};
	ld.local.u64 	%rd9202, [%rd12081+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6239, %temp}, %rd9202;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6240}, %rd9202;
	}
	prmt.b32 	%r6241, %r6239, %r6236, %r6235;
	prmt.b32 	%r6242, %r6240, %r6236, %r6235;
	mov.b64 	%rd12079, {%r6242, %r6241};
	ld.local.u64 	%rd9203, [%rd12081+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6243, %temp}, %rd9203;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6244}, %rd9203;
	}
	prmt.b32 	%r6245, %r6243, %r6236, %r6235;
	prmt.b32 	%r6246, %r6244, %r6236, %r6235;
	mov.b64 	%rd12078, {%r6246, %r6245};
	ld.local.u64 	%rd9204, [%rd12081+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6247, %temp}, %rd9204;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6248}, %rd9204;
	}
	prmt.b32 	%r6249, %r6247, %r6236, %r6235;
	prmt.b32 	%r6250, %r6248, %r6236, %r6235;
	mov.b64 	%rd12077, {%r6250, %r6249};
	ld.local.u64 	%rd9205, [%rd12081+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6251, %temp}, %rd9205;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6252}, %rd9205;
	}
	prmt.b32 	%r6253, %r6251, %r6236, %r6235;
	prmt.b32 	%r6254, %r6252, %r6236, %r6235;
	mov.b64 	%rd12076, {%r6254, %r6253};
	ld.local.u64 	%rd9206, [%rd12081+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6255, %temp}, %rd9206;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6256}, %rd9206;
	}
	prmt.b32 	%r6257, %r6255, %r6236, %r6235;
	prmt.b32 	%r6258, %r6256, %r6236, %r6235;
	mov.b64 	%rd12075, {%r6258, %r6257};
	ld.local.u64 	%rd9207, [%rd12081+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6259, %temp}, %rd9207;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6260}, %rd9207;
	}
	prmt.b32 	%r6261, %r6259, %r6236, %r6235;
	prmt.b32 	%r6262, %r6260, %r6236, %r6235;
	mov.b64 	%rd12074, {%r6262, %r6261};
	ld.local.u64 	%rd9208, [%rd12081+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6263, %temp}, %rd9208;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6264}, %rd9208;
	}
	prmt.b32 	%r6265, %r6263, %r6236, %r6235;
	prmt.b32 	%r6266, %r6264, %r6236, %r6235;
	mov.b64 	%rd12073, {%r6266, %r6265};
	ld.local.u64 	%rd9209, [%rd12081+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6267, %temp}, %rd9209;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6268}, %rd9209;
	}
	prmt.b32 	%r6269, %r6267, %r6236, %r6235;
	prmt.b32 	%r6270, %r6268, %r6236, %r6235;
	mov.b64 	%rd12072, {%r6270, %r6269};
	ld.local.u64 	%rd9210, [%rd12081+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6271, %temp}, %rd9210;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6272}, %rd9210;
	}
	prmt.b32 	%r6273, %r6271, %r6236, %r6235;
	prmt.b32 	%r6274, %r6272, %r6236, %r6235;
	mov.b64 	%rd12071, {%r6274, %r6273};
	ld.local.u64 	%rd9211, [%rd12081+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6275, %temp}, %rd9211;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6276}, %rd9211;
	}
	prmt.b32 	%r6277, %r6275, %r6236, %r6235;
	prmt.b32 	%r6278, %r6276, %r6236, %r6235;
	mov.b64 	%rd12070, {%r6278, %r6277};
	ld.local.u64 	%rd9212, [%rd12081+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6279, %temp}, %rd9212;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6280}, %rd9212;
	}
	prmt.b32 	%r6281, %r6279, %r6236, %r6235;
	prmt.b32 	%r6282, %r6280, %r6236, %r6235;
	mov.b64 	%rd12069, {%r6282, %r6281};
	ld.local.u64 	%rd9213, [%rd12081+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6283, %temp}, %rd9213;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6284}, %rd9213;
	}
	prmt.b32 	%r6285, %r6283, %r6236, %r6235;
	prmt.b32 	%r6286, %r6284, %r6236, %r6235;
	mov.b64 	%rd12068, {%r6286, %r6285};
	ld.local.u64 	%rd9214, [%rd12081+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6287, %temp}, %rd9214;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6288}, %rd9214;
	}
	prmt.b32 	%r6289, %r6287, %r6236, %r6235;
	prmt.b32 	%r6290, %r6288, %r6236, %r6235;
	mov.b64 	%rd12067, {%r6290, %r6289};
	ld.local.u64 	%rd9215, [%rd12081+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6291, %temp}, %rd9215;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6292}, %rd9215;
	}
	prmt.b32 	%r6293, %r6291, %r6236, %r6235;
	prmt.b32 	%r6294, %r6292, %r6236, %r6235;
	mov.b64 	%rd12066, {%r6294, %r6293};
	ld.local.u64 	%rd9216, [%rd12081+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6295, %temp}, %rd9216;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6296}, %rd9216;
	}
	prmt.b32 	%r6297, %r6295, %r6236, %r6235;
	prmt.b32 	%r6298, %r6296, %r6236, %r6235;
	mov.b64 	%rd12065, {%r6298, %r6297};

$L__BB8_46:
	ld.local.u64 	%rd9217, [%rd4+64];
	add.s64 	%rd9218, %rd12080, %rd9217;
	ld.local.u64 	%rd9219, [%rd4+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6299,%dummy}, %rd9219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6300}, %rd9219;
	}
	shf.r.wrap.b32 	%r6301, %r6300, %r6299, 14;
	shf.r.wrap.b32 	%r6302, %r6299, %r6300, 14;
	mov.b64 	%rd9220, {%r6302, %r6301};
	shf.r.wrap.b32 	%r6303, %r6300, %r6299, 18;
	shf.r.wrap.b32 	%r6304, %r6299, %r6300, 18;
	mov.b64 	%rd9221, {%r6304, %r6303};
	xor.b64  	%rd9222, %rd9220, %rd9221;
	shf.l.wrap.b32 	%r6305, %r6299, %r6300, 23;
	shf.l.wrap.b32 	%r6306, %r6300, %r6299, 23;
	mov.b64 	%rd9223, {%r6306, %r6305};
	xor.b64  	%rd9224, %rd9222, %rd9223;
	add.s64 	%rd9225, %rd9218, %rd9224;
	ld.local.u64 	%rd9226, [%rd4+56];
	ld.local.u64 	%rd9227, [%rd4+48];
	xor.b64  	%rd9228, %rd9226, %rd9227;
	and.b64  	%rd9229, %rd9228, %rd9219;
	xor.b64  	%rd9230, %rd9229, %rd9226;
	add.s64 	%rd9231, %rd9225, %rd9230;
	add.s64 	%rd9232, %rd9231, 4794697086780616226;
	ld.local.u64 	%rd9233, [%rd4+32];
	add.s64 	%rd9234, %rd9232, %rd9233;
	ld.local.u64 	%rd9235, [%rd4+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6307,%dummy}, %rd9235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6308}, %rd9235;
	}
	shf.r.wrap.b32 	%r6309, %r6308, %r6307, 28;
	shf.r.wrap.b32 	%r6310, %r6307, %r6308, 28;
	mov.b64 	%rd9236, {%r6310, %r6309};
	shf.l.wrap.b32 	%r6311, %r6307, %r6308, 30;
	shf.l.wrap.b32 	%r6312, %r6308, %r6307, 30;
	mov.b64 	%rd9237, {%r6312, %r6311};
	xor.b64  	%rd9238, %rd9236, %rd9237;
	shf.l.wrap.b32 	%r6313, %r6307, %r6308, 25;
	shf.l.wrap.b32 	%r6314, %r6308, %r6307, 25;
	mov.b64 	%rd9239, {%r6314, %r6313};
	xor.b64  	%rd9240, %rd9238, %rd9239;
	ld.local.u64 	%rd9241, [%rd4+16];
	and.b64  	%rd9242, %rd9241, %rd9235;
	or.b64  	%rd9243, %rd9241, %rd9235;
	ld.local.u64 	%rd9244, [%rd4+24];
	and.b64  	%rd9245, %rd9244, %rd9243;
	or.b64  	%rd9246, %rd9245, %rd9242;
	add.s64 	%rd9247, %rd9246, %rd9240;
	add.s64 	%rd9248, %rd9247, %rd9232;
	add.s64 	%rd9249, %rd12079, %rd9226;
	xor.b64  	%rd9250, %rd9227, %rd9219;
	and.b64  	%rd9251, %rd9234, %rd9250;
	xor.b64  	%rd9252, %rd9251, %rd9227;
	add.s64 	%rd9253, %rd9249, %rd9252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6315,%dummy}, %rd9234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6316}, %rd9234;
	}
	shf.r.wrap.b32 	%r6317, %r6316, %r6315, 14;
	shf.r.wrap.b32 	%r6318, %r6315, %r6316, 14;
	mov.b64 	%rd9254, {%r6318, %r6317};
	shf.r.wrap.b32 	%r6319, %r6316, %r6315, 18;
	shf.r.wrap.b32 	%r6320, %r6315, %r6316, 18;
	mov.b64 	%rd9255, {%r6320, %r6319};
	xor.b64  	%rd9256, %rd9254, %rd9255;
	shf.l.wrap.b32 	%r6321, %r6315, %r6316, 23;
	shf.l.wrap.b32 	%r6322, %r6316, %r6315, 23;
	mov.b64 	%rd9257, {%r6322, %r6321};
	xor.b64  	%rd9258, %rd9256, %rd9257;
	add.s64 	%rd9259, %rd9253, %rd9258;
	add.s64 	%rd9260, %rd9259, 8158064640168781261;
	add.s64 	%rd9261, %rd9260, %rd9244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6323,%dummy}, %rd9248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6324}, %rd9248;
	}
	shf.r.wrap.b32 	%r6325, %r6324, %r6323, 28;
	shf.r.wrap.b32 	%r6326, %r6323, %r6324, 28;
	mov.b64 	%rd9262, {%r6326, %r6325};
	shf.l.wrap.b32 	%r6327, %r6323, %r6324, 30;
	shf.l.wrap.b32 	%r6328, %r6324, %r6323, 30;
	mov.b64 	%rd9263, {%r6328, %r6327};
	xor.b64  	%rd9264, %rd9262, %rd9263;
	shf.l.wrap.b32 	%r6329, %r6323, %r6324, 25;
	shf.l.wrap.b32 	%r6330, %r6324, %r6323, 25;
	mov.b64 	%rd9265, {%r6330, %r6329};
	xor.b64  	%rd9266, %rd9264, %rd9265;
	and.b64  	%rd9267, %rd9248, %rd9235;
	or.b64  	%rd9268, %rd9248, %rd9235;
	and.b64  	%rd9269, %rd9268, %rd9241;
	or.b64  	%rd9270, %rd9269, %rd9267;
	add.s64 	%rd9271, %rd9270, %rd9266;
	add.s64 	%rd9272, %rd9271, %rd9260;
	add.s64 	%rd9273, %rd12078, %rd9227;
	xor.b64  	%rd9274, %rd9234, %rd9219;
	and.b64  	%rd9275, %rd9261, %rd9274;
	xor.b64  	%rd9276, %rd9275, %rd9219;
	add.s64 	%rd9277, %rd9273, %rd9276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6331,%dummy}, %rd9261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6332}, %rd9261;
	}
	shf.r.wrap.b32 	%r6333, %r6332, %r6331, 14;
	shf.r.wrap.b32 	%r6334, %r6331, %r6332, 14;
	mov.b64 	%rd9278, {%r6334, %r6333};
	shf.r.wrap.b32 	%r6335, %r6332, %r6331, 18;
	shf.r.wrap.b32 	%r6336, %r6331, %r6332, 18;
	mov.b64 	%rd9279, {%r6336, %r6335};
	xor.b64  	%rd9280, %rd9278, %rd9279;
	shf.l.wrap.b32 	%r6337, %r6331, %r6332, 23;
	shf.l.wrap.b32 	%r6338, %r6332, %r6331, 23;
	mov.b64 	%rd9281, {%r6338, %r6337};
	xor.b64  	%rd9282, %rd9280, %rd9281;
	add.s64 	%rd9283, %rd9277, %rd9282;
	add.s64 	%rd9284, %rd9283, -5349999486874862801;
	add.s64 	%rd9285, %rd9284, %rd9241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6339,%dummy}, %rd9272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6340}, %rd9272;
	}
	shf.r.wrap.b32 	%r6341, %r6340, %r6339, 28;
	shf.r.wrap.b32 	%r6342, %r6339, %r6340, 28;
	mov.b64 	%rd9286, {%r6342, %r6341};
	shf.l.wrap.b32 	%r6343, %r6339, %r6340, 30;
	shf.l.wrap.b32 	%r6344, %r6340, %r6339, 30;
	mov.b64 	%rd9287, {%r6344, %r6343};
	xor.b64  	%rd9288, %rd9286, %rd9287;
	shf.l.wrap.b32 	%r6345, %r6339, %r6340, 25;
	shf.l.wrap.b32 	%r6346, %r6340, %r6339, 25;
	mov.b64 	%rd9289, {%r6346, %r6345};
	xor.b64  	%rd9290, %rd9288, %rd9289;
	and.b64  	%rd9291, %rd9272, %rd9248;
	or.b64  	%rd9292, %rd9272, %rd9248;
	and.b64  	%rd9293, %rd9292, %rd9235;
	or.b64  	%rd9294, %rd9293, %rd9291;
	add.s64 	%rd9295, %rd9294, %rd9290;
	add.s64 	%rd9296, %rd9295, %rd9284;
	add.s64 	%rd9297, %rd12077, %rd9219;
	xor.b64  	%rd9298, %rd9261, %rd9234;
	and.b64  	%rd9299, %rd9285, %rd9298;
	xor.b64  	%rd9300, %rd9299, %rd9234;
	add.s64 	%rd9301, %rd9297, %rd9300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6347,%dummy}, %rd9285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6348}, %rd9285;
	}
	shf.r.wrap.b32 	%r6349, %r6348, %r6347, 14;
	shf.r.wrap.b32 	%r6350, %r6347, %r6348, 14;
	mov.b64 	%rd9302, {%r6350, %r6349};
	shf.r.wrap.b32 	%r6351, %r6348, %r6347, 18;
	shf.r.wrap.b32 	%r6352, %r6347, %r6348, 18;
	mov.b64 	%rd9303, {%r6352, %r6351};
	xor.b64  	%rd9304, %rd9302, %rd9303;
	shf.l.wrap.b32 	%r6353, %r6347, %r6348, 23;
	shf.l.wrap.b32 	%r6354, %r6348, %r6347, 23;
	mov.b64 	%rd9305, {%r6354, %r6353};
	xor.b64  	%rd9306, %rd9304, %rd9305;
	add.s64 	%rd9307, %rd9301, %rd9306;
	add.s64 	%rd9308, %rd9307, -1606136188198331460;
	add.s64 	%rd9309, %rd9308, %rd9235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6355,%dummy}, %rd9296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6356}, %rd9296;
	}
	shf.r.wrap.b32 	%r6357, %r6356, %r6355, 28;
	shf.r.wrap.b32 	%r6358, %r6355, %r6356, 28;
	mov.b64 	%rd9310, {%r6358, %r6357};
	shf.l.wrap.b32 	%r6359, %r6355, %r6356, 30;
	shf.l.wrap.b32 	%r6360, %r6356, %r6355, 30;
	mov.b64 	%rd9311, {%r6360, %r6359};
	xor.b64  	%rd9312, %rd9310, %rd9311;
	shf.l.wrap.b32 	%r6361, %r6355, %r6356, 25;
	shf.l.wrap.b32 	%r6362, %r6356, %r6355, 25;
	mov.b64 	%rd9313, {%r6362, %r6361};
	xor.b64  	%rd9314, %rd9312, %rd9313;
	and.b64  	%rd9315, %rd9296, %rd9272;
	or.b64  	%rd9316, %rd9296, %rd9272;
	and.b64  	%rd9317, %rd9316, %rd9248;
	or.b64  	%rd9318, %rd9317, %rd9315;
	add.s64 	%rd9319, %rd9318, %rd9314;
	add.s64 	%rd9320, %rd9319, %rd9308;
	add.s64 	%rd9321, %rd12076, %rd9234;
	xor.b64  	%rd9322, %rd9285, %rd9261;
	and.b64  	%rd9323, %rd9309, %rd9322;
	xor.b64  	%rd9324, %rd9323, %rd9261;
	add.s64 	%rd9325, %rd9321, %rd9324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6363,%dummy}, %rd9309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6364}, %rd9309;
	}
	shf.r.wrap.b32 	%r6365, %r6364, %r6363, 14;
	shf.r.wrap.b32 	%r6366, %r6363, %r6364, 14;
	mov.b64 	%rd9326, {%r6366, %r6365};
	shf.r.wrap.b32 	%r6367, %r6364, %r6363, 18;
	shf.r.wrap.b32 	%r6368, %r6363, %r6364, 18;
	mov.b64 	%rd9327, {%r6368, %r6367};
	xor.b64  	%rd9328, %rd9326, %rd9327;
	shf.l.wrap.b32 	%r6369, %r6363, %r6364, 23;
	shf.l.wrap.b32 	%r6370, %r6364, %r6363, 23;
	mov.b64 	%rd9329, {%r6370, %r6369};
	xor.b64  	%rd9330, %rd9328, %rd9329;
	add.s64 	%rd9331, %rd9325, %rd9330;
	add.s64 	%rd9332, %rd9331, 4131703408338449720;
	add.s64 	%rd9333, %rd9332, %rd9248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6371,%dummy}, %rd9320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6372}, %rd9320;
	}
	shf.r.wrap.b32 	%r6373, %r6372, %r6371, 28;
	shf.r.wrap.b32 	%r6374, %r6371, %r6372, 28;
	mov.b64 	%rd9334, {%r6374, %r6373};
	shf.l.wrap.b32 	%r6375, %r6371, %r6372, 30;
	shf.l.wrap.b32 	%r6376, %r6372, %r6371, 30;
	mov.b64 	%rd9335, {%r6376, %r6375};
	xor.b64  	%rd9336, %rd9334, %rd9335;
	shf.l.wrap.b32 	%r6377, %r6371, %r6372, 25;
	shf.l.wrap.b32 	%r6378, %r6372, %r6371, 25;
	mov.b64 	%rd9337, {%r6378, %r6377};
	xor.b64  	%rd9338, %rd9336, %rd9337;
	and.b64  	%rd9339, %rd9320, %rd9296;
	or.b64  	%rd9340, %rd9320, %rd9296;
	and.b64  	%rd9341, %rd9340, %rd9272;
	or.b64  	%rd9342, %rd9341, %rd9339;
	add.s64 	%rd9343, %rd9342, %rd9338;
	add.s64 	%rd9344, %rd9343, %rd9332;
	add.s64 	%rd9345, %rd12075, %rd9261;
	xor.b64  	%rd9346, %rd9309, %rd9285;
	and.b64  	%rd9347, %rd9333, %rd9346;
	xor.b64  	%rd9348, %rd9347, %rd9285;
	add.s64 	%rd9349, %rd9345, %rd9348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6379,%dummy}, %rd9333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6380}, %rd9333;
	}
	shf.r.wrap.b32 	%r6381, %r6380, %r6379, 14;
	shf.r.wrap.b32 	%r6382, %r6379, %r6380, 14;
	mov.b64 	%rd9350, {%r6382, %r6381};
	shf.r.wrap.b32 	%r6383, %r6380, %r6379, 18;
	shf.r.wrap.b32 	%r6384, %r6379, %r6380, 18;
	mov.b64 	%rd9351, {%r6384, %r6383};
	xor.b64  	%rd9352, %rd9350, %rd9351;
	shf.l.wrap.b32 	%r6385, %r6379, %r6380, 23;
	shf.l.wrap.b32 	%r6386, %r6380, %r6379, 23;
	mov.b64 	%rd9353, {%r6386, %r6385};
	xor.b64  	%rd9354, %rd9352, %rd9353;
	add.s64 	%rd9355, %rd9349, %rd9354;
	add.s64 	%rd9356, %rd9355, 6480981068601479193;
	add.s64 	%rd9357, %rd9356, %rd9272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6387,%dummy}, %rd9344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6388}, %rd9344;
	}
	shf.r.wrap.b32 	%r6389, %r6388, %r6387, 28;
	shf.r.wrap.b32 	%r6390, %r6387, %r6388, 28;
	mov.b64 	%rd9358, {%r6390, %r6389};
	shf.l.wrap.b32 	%r6391, %r6387, %r6388, 30;
	shf.l.wrap.b32 	%r6392, %r6388, %r6387, 30;
	mov.b64 	%rd9359, {%r6392, %r6391};
	xor.b64  	%rd9360, %rd9358, %rd9359;
	shf.l.wrap.b32 	%r6393, %r6387, %r6388, 25;
	shf.l.wrap.b32 	%r6394, %r6388, %r6387, 25;
	mov.b64 	%rd9361, {%r6394, %r6393};
	xor.b64  	%rd9362, %rd9360, %rd9361;
	and.b64  	%rd9363, %rd9344, %rd9320;
	or.b64  	%rd9364, %rd9344, %rd9320;
	and.b64  	%rd9365, %rd9364, %rd9296;
	or.b64  	%rd9366, %rd9365, %rd9363;
	add.s64 	%rd9367, %rd9366, %rd9362;
	add.s64 	%rd9368, %rd9367, %rd9356;
	add.s64 	%rd9369, %rd12074, %rd9285;
	xor.b64  	%rd9370, %rd9333, %rd9309;
	and.b64  	%rd9371, %rd9357, %rd9370;
	xor.b64  	%rd9372, %rd9371, %rd9309;
	add.s64 	%rd9373, %rd9369, %rd9372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6395,%dummy}, %rd9357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6396}, %rd9357;
	}
	shf.r.wrap.b32 	%r6397, %r6396, %r6395, 14;
	shf.r.wrap.b32 	%r6398, %r6395, %r6396, 14;
	mov.b64 	%rd9374, {%r6398, %r6397};
	shf.r.wrap.b32 	%r6399, %r6396, %r6395, 18;
	shf.r.wrap.b32 	%r6400, %r6395, %r6396, 18;
	mov.b64 	%rd9375, {%r6400, %r6399};
	xor.b64  	%rd9376, %rd9374, %rd9375;
	shf.l.wrap.b32 	%r6401, %r6395, %r6396, 23;
	shf.l.wrap.b32 	%r6402, %r6396, %r6395, 23;
	mov.b64 	%rd9377, {%r6402, %r6401};
	xor.b64  	%rd9378, %rd9376, %rd9377;
	add.s64 	%rd9379, %rd9373, %rd9378;
	add.s64 	%rd9380, %rd9379, -7908458776815382629;
	add.s64 	%rd9381, %rd9380, %rd9296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6403,%dummy}, %rd9368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6404}, %rd9368;
	}
	shf.r.wrap.b32 	%r6405, %r6404, %r6403, 28;
	shf.r.wrap.b32 	%r6406, %r6403, %r6404, 28;
	mov.b64 	%rd9382, {%r6406, %r6405};
	shf.l.wrap.b32 	%r6407, %r6403, %r6404, 30;
	shf.l.wrap.b32 	%r6408, %r6404, %r6403, 30;
	mov.b64 	%rd9383, {%r6408, %r6407};
	xor.b64  	%rd9384, %rd9382, %rd9383;
	shf.l.wrap.b32 	%r6409, %r6403, %r6404, 25;
	shf.l.wrap.b32 	%r6410, %r6404, %r6403, 25;
	mov.b64 	%rd9385, {%r6410, %r6409};
	xor.b64  	%rd9386, %rd9384, %rd9385;
	and.b64  	%rd9387, %rd9368, %rd9344;
	or.b64  	%rd9388, %rd9368, %rd9344;
	and.b64  	%rd9389, %rd9388, %rd9320;
	or.b64  	%rd9390, %rd9389, %rd9387;
	add.s64 	%rd9391, %rd9390, %rd9386;
	add.s64 	%rd9392, %rd9391, %rd9380;
	add.s64 	%rd9393, %rd12073, %rd9309;
	xor.b64  	%rd9394, %rd9357, %rd9333;
	and.b64  	%rd9395, %rd9381, %rd9394;
	xor.b64  	%rd9396, %rd9395, %rd9333;
	add.s64 	%rd9397, %rd9393, %rd9396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6411,%dummy}, %rd9381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6412}, %rd9381;
	}
	shf.r.wrap.b32 	%r6413, %r6412, %r6411, 14;
	shf.r.wrap.b32 	%r6414, %r6411, %r6412, 14;
	mov.b64 	%rd9398, {%r6414, %r6413};
	shf.r.wrap.b32 	%r6415, %r6412, %r6411, 18;
	shf.r.wrap.b32 	%r6416, %r6411, %r6412, 18;
	mov.b64 	%rd9399, {%r6416, %r6415};
	xor.b64  	%rd9400, %rd9398, %rd9399;
	shf.l.wrap.b32 	%r6417, %r6411, %r6412, 23;
	shf.l.wrap.b32 	%r6418, %r6412, %r6411, 23;
	mov.b64 	%rd9401, {%r6418, %r6417};
	xor.b64  	%rd9402, %rd9400, %rd9401;
	add.s64 	%rd9403, %rd9397, %rd9402;
	add.s64 	%rd9404, %rd9403, -6116909921290321640;
	add.s64 	%rd9405, %rd9404, %rd9320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6419,%dummy}, %rd9392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6420}, %rd9392;
	}
	shf.r.wrap.b32 	%r6421, %r6420, %r6419, 28;
	shf.r.wrap.b32 	%r6422, %r6419, %r6420, 28;
	mov.b64 	%rd9406, {%r6422, %r6421};
	shf.l.wrap.b32 	%r6423, %r6419, %r6420, 30;
	shf.l.wrap.b32 	%r6424, %r6420, %r6419, 30;
	mov.b64 	%rd9407, {%r6424, %r6423};
	xor.b64  	%rd9408, %rd9406, %rd9407;
	shf.l.wrap.b32 	%r6425, %r6419, %r6420, 25;
	shf.l.wrap.b32 	%r6426, %r6420, %r6419, 25;
	mov.b64 	%rd9409, {%r6426, %r6425};
	xor.b64  	%rd9410, %rd9408, %rd9409;
	and.b64  	%rd9411, %rd9392, %rd9368;
	or.b64  	%rd9412, %rd9392, %rd9368;
	and.b64  	%rd9413, %rd9412, %rd9344;
	or.b64  	%rd9414, %rd9413, %rd9411;
	add.s64 	%rd9415, %rd9414, %rd9410;
	add.s64 	%rd9416, %rd9415, %rd9404;
	add.s64 	%rd9417, %rd12072, %rd9333;
	xor.b64  	%rd9418, %rd9381, %rd9357;
	and.b64  	%rd9419, %rd9405, %rd9418;
	xor.b64  	%rd9420, %rd9419, %rd9357;
	add.s64 	%rd9421, %rd9417, %rd9420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6427,%dummy}, %rd9405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6428}, %rd9405;
	}
	shf.r.wrap.b32 	%r6429, %r6428, %r6427, 14;
	shf.r.wrap.b32 	%r6430, %r6427, %r6428, 14;
	mov.b64 	%rd9422, {%r6430, %r6429};
	shf.r.wrap.b32 	%r6431, %r6428, %r6427, 18;
	shf.r.wrap.b32 	%r6432, %r6427, %r6428, 18;
	mov.b64 	%rd9423, {%r6432, %r6431};
	xor.b64  	%rd9424, %rd9422, %rd9423;
	shf.l.wrap.b32 	%r6433, %r6427, %r6428, 23;
	shf.l.wrap.b32 	%r6434, %r6428, %r6427, 23;
	mov.b64 	%rd9425, {%r6434, %r6433};
	xor.b64  	%rd9426, %rd9424, %rd9425;
	add.s64 	%rd9427, %rd9421, %rd9426;
	add.s64 	%rd9428, %rd9427, -2880145864133508542;
	add.s64 	%rd9429, %rd9428, %rd9344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6435,%dummy}, %rd9416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6436}, %rd9416;
	}
	shf.r.wrap.b32 	%r6437, %r6436, %r6435, 28;
	shf.r.wrap.b32 	%r6438, %r6435, %r6436, 28;
	mov.b64 	%rd9430, {%r6438, %r6437};
	shf.l.wrap.b32 	%r6439, %r6435, %r6436, 30;
	shf.l.wrap.b32 	%r6440, %r6436, %r6435, 30;
	mov.b64 	%rd9431, {%r6440, %r6439};
	xor.b64  	%rd9432, %rd9430, %rd9431;
	shf.l.wrap.b32 	%r6441, %r6435, %r6436, 25;
	shf.l.wrap.b32 	%r6442, %r6436, %r6435, 25;
	mov.b64 	%rd9433, {%r6442, %r6441};
	xor.b64  	%rd9434, %rd9432, %rd9433;
	and.b64  	%rd9435, %rd9416, %rd9392;
	or.b64  	%rd9436, %rd9416, %rd9392;
	and.b64  	%rd9437, %rd9436, %rd9368;
	or.b64  	%rd9438, %rd9437, %rd9435;
	add.s64 	%rd9439, %rd9438, %rd9434;
	add.s64 	%rd9440, %rd9439, %rd9428;
	add.s64 	%rd9441, %rd12071, %rd9357;
	xor.b64  	%rd9442, %rd9405, %rd9381;
	and.b64  	%rd9443, %rd9429, %rd9442;
	xor.b64  	%rd9444, %rd9443, %rd9381;
	add.s64 	%rd9445, %rd9441, %rd9444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6443,%dummy}, %rd9429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6444}, %rd9429;
	}
	shf.r.wrap.b32 	%r6445, %r6444, %r6443, 14;
	shf.r.wrap.b32 	%r6446, %r6443, %r6444, 14;
	mov.b64 	%rd9446, {%r6446, %r6445};
	shf.r.wrap.b32 	%r6447, %r6444, %r6443, 18;
	shf.r.wrap.b32 	%r6448, %r6443, %r6444, 18;
	mov.b64 	%rd9447, {%r6448, %r6447};
	xor.b64  	%rd9448, %rd9446, %rd9447;
	shf.l.wrap.b32 	%r6449, %r6443, %r6444, 23;
	shf.l.wrap.b32 	%r6450, %r6444, %r6443, 23;
	mov.b64 	%rd9449, {%r6450, %r6449};
	xor.b64  	%rd9450, %rd9448, %rd9449;
	add.s64 	%rd9451, %rd9445, %rd9450;
	add.s64 	%rd9452, %rd9451, 1334009975649890238;
	add.s64 	%rd9453, %rd9452, %rd9368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6451,%dummy}, %rd9440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6452}, %rd9440;
	}
	shf.r.wrap.b32 	%r6453, %r6452, %r6451, 28;
	shf.r.wrap.b32 	%r6454, %r6451, %r6452, 28;
	mov.b64 	%rd9454, {%r6454, %r6453};
	shf.l.wrap.b32 	%r6455, %r6451, %r6452, 30;
	shf.l.wrap.b32 	%r6456, %r6452, %r6451, 30;
	mov.b64 	%rd9455, {%r6456, %r6455};
	xor.b64  	%rd9456, %rd9454, %rd9455;
	shf.l.wrap.b32 	%r6457, %r6451, %r6452, 25;
	shf.l.wrap.b32 	%r6458, %r6452, %r6451, 25;
	mov.b64 	%rd9457, {%r6458, %r6457};
	xor.b64  	%rd9458, %rd9456, %rd9457;
	and.b64  	%rd9459, %rd9440, %rd9416;
	or.b64  	%rd9460, %rd9440, %rd9416;
	and.b64  	%rd9461, %rd9460, %rd9392;
	or.b64  	%rd9462, %rd9461, %rd9459;
	add.s64 	%rd9463, %rd9462, %rd9458;
	add.s64 	%rd9464, %rd9463, %rd9452;
	add.s64 	%rd9465, %rd12070, %rd9381;
	xor.b64  	%rd9466, %rd9429, %rd9405;
	and.b64  	%rd9467, %rd9453, %rd9466;
	xor.b64  	%rd9468, %rd9467, %rd9405;
	add.s64 	%rd9469, %rd9465, %rd9468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6459,%dummy}, %rd9453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6460}, %rd9453;
	}
	shf.r.wrap.b32 	%r6461, %r6460, %r6459, 14;
	shf.r.wrap.b32 	%r6462, %r6459, %r6460, 14;
	mov.b64 	%rd9470, {%r6462, %r6461};
	shf.r.wrap.b32 	%r6463, %r6460, %r6459, 18;
	shf.r.wrap.b32 	%r6464, %r6459, %r6460, 18;
	mov.b64 	%rd9471, {%r6464, %r6463};
	xor.b64  	%rd9472, %rd9470, %rd9471;
	shf.l.wrap.b32 	%r6465, %r6459, %r6460, 23;
	shf.l.wrap.b32 	%r6466, %r6460, %r6459, 23;
	mov.b64 	%rd9473, {%r6466, %r6465};
	xor.b64  	%rd9474, %rd9472, %rd9473;
	add.s64 	%rd9475, %rd9469, %rd9474;
	add.s64 	%rd9476, %rd9475, 2608012711638119052;
	add.s64 	%rd9477, %rd9476, %rd9392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6467,%dummy}, %rd9464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6468}, %rd9464;
	}
	shf.r.wrap.b32 	%r6469, %r6468, %r6467, 28;
	shf.r.wrap.b32 	%r6470, %r6467, %r6468, 28;
	mov.b64 	%rd9478, {%r6470, %r6469};
	shf.l.wrap.b32 	%r6471, %r6467, %r6468, 30;
	shf.l.wrap.b32 	%r6472, %r6468, %r6467, 30;
	mov.b64 	%rd9479, {%r6472, %r6471};
	xor.b64  	%rd9480, %rd9478, %rd9479;
	shf.l.wrap.b32 	%r6473, %r6467, %r6468, 25;
	shf.l.wrap.b32 	%r6474, %r6468, %r6467, 25;
	mov.b64 	%rd9481, {%r6474, %r6473};
	xor.b64  	%rd9482, %rd9480, %rd9481;
	and.b64  	%rd9483, %rd9464, %rd9440;
	or.b64  	%rd9484, %rd9464, %rd9440;
	and.b64  	%rd9485, %rd9484, %rd9416;
	or.b64  	%rd9486, %rd9485, %rd9483;
	add.s64 	%rd9487, %rd9486, %rd9482;
	add.s64 	%rd9488, %rd9487, %rd9476;
	add.s64 	%rd9489, %rd12069, %rd9405;
	xor.b64  	%rd9490, %rd9453, %rd9429;
	and.b64  	%rd9491, %rd9477, %rd9490;
	xor.b64  	%rd9492, %rd9491, %rd9429;
	add.s64 	%rd9493, %rd9489, %rd9492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6475,%dummy}, %rd9477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6476}, %rd9477;
	}
	shf.r.wrap.b32 	%r6477, %r6476, %r6475, 14;
	shf.r.wrap.b32 	%r6478, %r6475, %r6476, 14;
	mov.b64 	%rd9494, {%r6478, %r6477};
	shf.r.wrap.b32 	%r6479, %r6476, %r6475, 18;
	shf.r.wrap.b32 	%r6480, %r6475, %r6476, 18;
	mov.b64 	%rd9495, {%r6480, %r6479};
	xor.b64  	%rd9496, %rd9494, %rd9495;
	shf.l.wrap.b32 	%r6481, %r6475, %r6476, 23;
	shf.l.wrap.b32 	%r6482, %r6476, %r6475, 23;
	mov.b64 	%rd9497, {%r6482, %r6481};
	xor.b64  	%rd9498, %rd9496, %rd9497;
	add.s64 	%rd9499, %rd9493, %rd9498;
	add.s64 	%rd9500, %rd9499, 6128411473006802146;
	add.s64 	%rd9501, %rd9500, %rd9416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6483,%dummy}, %rd9488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6484}, %rd9488;
	}
	shf.r.wrap.b32 	%r6485, %r6484, %r6483, 28;
	shf.r.wrap.b32 	%r6486, %r6483, %r6484, 28;
	mov.b64 	%rd9502, {%r6486, %r6485};
	shf.l.wrap.b32 	%r6487, %r6483, %r6484, 30;
	shf.l.wrap.b32 	%r6488, %r6484, %r6483, 30;
	mov.b64 	%rd9503, {%r6488, %r6487};
	xor.b64  	%rd9504, %rd9502, %rd9503;
	shf.l.wrap.b32 	%r6489, %r6483, %r6484, 25;
	shf.l.wrap.b32 	%r6490, %r6484, %r6483, 25;
	mov.b64 	%rd9505, {%r6490, %r6489};
	xor.b64  	%rd9506, %rd9504, %rd9505;
	and.b64  	%rd9507, %rd9488, %rd9464;
	or.b64  	%rd9508, %rd9488, %rd9464;
	and.b64  	%rd9509, %rd9508, %rd9440;
	or.b64  	%rd9510, %rd9509, %rd9507;
	add.s64 	%rd9511, %rd9510, %rd9506;
	add.s64 	%rd9512, %rd9511, %rd9500;
	add.s64 	%rd9513, %rd12068, %rd9429;
	xor.b64  	%rd9514, %rd9477, %rd9453;
	and.b64  	%rd9515, %rd9501, %rd9514;
	xor.b64  	%rd9516, %rd9515, %rd9453;
	add.s64 	%rd9517, %rd9513, %rd9516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6491,%dummy}, %rd9501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6492}, %rd9501;
	}
	shf.r.wrap.b32 	%r6493, %r6492, %r6491, 14;
	shf.r.wrap.b32 	%r6494, %r6491, %r6492, 14;
	mov.b64 	%rd9518, {%r6494, %r6493};
	shf.r.wrap.b32 	%r6495, %r6492, %r6491, 18;
	shf.r.wrap.b32 	%r6496, %r6491, %r6492, 18;
	mov.b64 	%rd9519, {%r6496, %r6495};
	xor.b64  	%rd9520, %rd9518, %rd9519;
	shf.l.wrap.b32 	%r6497, %r6491, %r6492, 23;
	shf.l.wrap.b32 	%r6498, %r6492, %r6491, 23;
	mov.b64 	%rd9521, {%r6498, %r6497};
	xor.b64  	%rd9522, %rd9520, %rd9521;
	add.s64 	%rd9523, %rd9517, %rd9522;
	add.s64 	%rd9524, %rd9523, 8268148722764581231;
	add.s64 	%rd9525, %rd9524, %rd9440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6499,%dummy}, %rd9512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6500}, %rd9512;
	}
	shf.r.wrap.b32 	%r6501, %r6500, %r6499, 28;
	shf.r.wrap.b32 	%r6502, %r6499, %r6500, 28;
	mov.b64 	%rd9526, {%r6502, %r6501};
	shf.l.wrap.b32 	%r6503, %r6499, %r6500, 30;
	shf.l.wrap.b32 	%r6504, %r6500, %r6499, 30;
	mov.b64 	%rd9527, {%r6504, %r6503};
	xor.b64  	%rd9528, %rd9526, %rd9527;
	shf.l.wrap.b32 	%r6505, %r6499, %r6500, 25;
	shf.l.wrap.b32 	%r6506, %r6500, %r6499, 25;
	mov.b64 	%rd9529, {%r6506, %r6505};
	xor.b64  	%rd9530, %rd9528, %rd9529;
	and.b64  	%rd9531, %rd9512, %rd9488;
	or.b64  	%rd9532, %rd9512, %rd9488;
	and.b64  	%rd9533, %rd9532, %rd9464;
	or.b64  	%rd9534, %rd9533, %rd9531;
	add.s64 	%rd9535, %rd9534, %rd9530;
	add.s64 	%rd9536, %rd9535, %rd9524;
	add.s64 	%rd9537, %rd12067, %rd9453;
	xor.b64  	%rd9538, %rd9501, %rd9477;
	and.b64  	%rd9539, %rd9525, %rd9538;
	xor.b64  	%rd9540, %rd9539, %rd9477;
	add.s64 	%rd9541, %rd9537, %rd9540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6507,%dummy}, %rd9525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6508}, %rd9525;
	}
	shf.r.wrap.b32 	%r6509, %r6508, %r6507, 14;
	shf.r.wrap.b32 	%r6510, %r6507, %r6508, 14;
	mov.b64 	%rd9542, {%r6510, %r6509};
	shf.r.wrap.b32 	%r6511, %r6508, %r6507, 18;
	shf.r.wrap.b32 	%r6512, %r6507, %r6508, 18;
	mov.b64 	%rd9543, {%r6512, %r6511};
	xor.b64  	%rd9544, %rd9542, %rd9543;
	shf.l.wrap.b32 	%r6513, %r6507, %r6508, 23;
	shf.l.wrap.b32 	%r6514, %r6508, %r6507, 23;
	mov.b64 	%rd9545, {%r6514, %r6513};
	xor.b64  	%rd9546, %rd9544, %rd9545;
	add.s64 	%rd9547, %rd9541, %rd9546;
	add.s64 	%rd9548, %rd9547, -9160688886553864527;
	add.s64 	%rd9549, %rd9548, %rd9464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6515,%dummy}, %rd9536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6516}, %rd9536;
	}
	shf.r.wrap.b32 	%r6517, %r6516, %r6515, 28;
	shf.r.wrap.b32 	%r6518, %r6515, %r6516, 28;
	mov.b64 	%rd9550, {%r6518, %r6517};
	shf.l.wrap.b32 	%r6519, %r6515, %r6516, 30;
	shf.l.wrap.b32 	%r6520, %r6516, %r6515, 30;
	mov.b64 	%rd9551, {%r6520, %r6519};
	xor.b64  	%rd9552, %rd9550, %rd9551;
	shf.l.wrap.b32 	%r6521, %r6515, %r6516, 25;
	shf.l.wrap.b32 	%r6522, %r6516, %r6515, 25;
	mov.b64 	%rd9553, {%r6522, %r6521};
	xor.b64  	%rd9554, %rd9552, %rd9553;
	and.b64  	%rd9555, %rd9536, %rd9512;
	or.b64  	%rd9556, %rd9536, %rd9512;
	and.b64  	%rd9557, %rd9556, %rd9488;
	or.b64  	%rd9558, %rd9557, %rd9555;
	add.s64 	%rd9559, %rd9558, %rd9554;
	add.s64 	%rd9560, %rd9559, %rd9548;
	add.s64 	%rd9561, %rd12066, %rd9477;
	xor.b64  	%rd9562, %rd9525, %rd9501;
	and.b64  	%rd9563, %rd9549, %rd9562;
	xor.b64  	%rd9564, %rd9563, %rd9501;
	add.s64 	%rd9565, %rd9561, %rd9564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6523,%dummy}, %rd9549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6524}, %rd9549;
	}
	shf.r.wrap.b32 	%r6525, %r6524, %r6523, 14;
	shf.r.wrap.b32 	%r6526, %r6523, %r6524, 14;
	mov.b64 	%rd9566, {%r6526, %r6525};
	shf.r.wrap.b32 	%r6527, %r6524, %r6523, 18;
	shf.r.wrap.b32 	%r6528, %r6523, %r6524, 18;
	mov.b64 	%rd9567, {%r6528, %r6527};
	xor.b64  	%rd9568, %rd9566, %rd9567;
	shf.l.wrap.b32 	%r6529, %r6523, %r6524, 23;
	shf.l.wrap.b32 	%r6530, %r6524, %r6523, 23;
	mov.b64 	%rd9569, {%r6530, %r6529};
	xor.b64  	%rd9570, %rd9568, %rd9569;
	add.s64 	%rd9571, %rd9565, %rd9570;
	add.s64 	%rd9572, %rd9571, -7215885187991268811;
	add.s64 	%rd9573, %rd9572, %rd9488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6531,%dummy}, %rd9560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6532}, %rd9560;
	}
	shf.r.wrap.b32 	%r6533, %r6532, %r6531, 28;
	shf.r.wrap.b32 	%r6534, %r6531, %r6532, 28;
	mov.b64 	%rd9574, {%r6534, %r6533};
	shf.l.wrap.b32 	%r6535, %r6531, %r6532, 30;
	shf.l.wrap.b32 	%r6536, %r6532, %r6531, 30;
	mov.b64 	%rd9575, {%r6536, %r6535};
	xor.b64  	%rd9576, %rd9574, %rd9575;
	shf.l.wrap.b32 	%r6537, %r6531, %r6532, 25;
	shf.l.wrap.b32 	%r6538, %r6532, %r6531, 25;
	mov.b64 	%rd9577, {%r6538, %r6537};
	xor.b64  	%rd9578, %rd9576, %rd9577;
	and.b64  	%rd9579, %rd9560, %rd9536;
	or.b64  	%rd9580, %rd9560, %rd9536;
	and.b64  	%rd9581, %rd9580, %rd9512;
	or.b64  	%rd9582, %rd9581, %rd9579;
	add.s64 	%rd9583, %rd9582, %rd9578;
	add.s64 	%rd9584, %rd9583, %rd9572;
	add.s64 	%rd9585, %rd12065, %rd9501;
	xor.b64  	%rd9586, %rd9549, %rd9525;
	and.b64  	%rd9587, %rd9573, %rd9586;
	xor.b64  	%rd9588, %rd9587, %rd9525;
	add.s64 	%rd9589, %rd9585, %rd9588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6539,%dummy}, %rd9573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6540}, %rd9573;
	}
	shf.r.wrap.b32 	%r6541, %r6540, %r6539, 14;
	shf.r.wrap.b32 	%r6542, %r6539, %r6540, 14;
	mov.b64 	%rd9590, {%r6542, %r6541};
	shf.r.wrap.b32 	%r6543, %r6540, %r6539, 18;
	shf.r.wrap.b32 	%r6544, %r6539, %r6540, 18;
	mov.b64 	%rd9591, {%r6544, %r6543};
	xor.b64  	%rd9592, %rd9590, %rd9591;
	shf.l.wrap.b32 	%r6545, %r6539, %r6540, 23;
	shf.l.wrap.b32 	%r6546, %r6540, %r6539, 23;
	mov.b64 	%rd9593, {%r6546, %r6545};
	xor.b64  	%rd9594, %rd9592, %rd9593;
	add.s64 	%rd9595, %rd9589, %rd9594;
	add.s64 	%rd9596, %rd9595, -4495734319001033068;
	add.s64 	%rd9597, %rd9596, %rd9512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6547,%dummy}, %rd9584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6548}, %rd9584;
	}
	shf.r.wrap.b32 	%r6549, %r6548, %r6547, 28;
	shf.r.wrap.b32 	%r6550, %r6547, %r6548, 28;
	mov.b64 	%rd9598, {%r6550, %r6549};
	shf.l.wrap.b32 	%r6551, %r6547, %r6548, 30;
	shf.l.wrap.b32 	%r6552, %r6548, %r6547, 30;
	mov.b64 	%rd9599, {%r6552, %r6551};
	xor.b64  	%rd9600, %rd9598, %rd9599;
	shf.l.wrap.b32 	%r6553, %r6547, %r6548, 25;
	shf.l.wrap.b32 	%r6554, %r6548, %r6547, 25;
	mov.b64 	%rd9601, {%r6554, %r6553};
	xor.b64  	%rd9602, %rd9600, %rd9601;
	and.b64  	%rd9603, %rd9584, %rd9560;
	or.b64  	%rd9604, %rd9584, %rd9560;
	and.b64  	%rd9605, %rd9604, %rd9536;
	or.b64  	%rd9606, %rd9605, %rd9603;
	add.s64 	%rd9607, %rd9606, %rd9602;
	add.s64 	%rd9608, %rd9607, %rd9596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6555}, %rd12066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6556,%dummy}, %rd12066;
	}
	shf.l.wrap.b32 	%r6557, %r6556, %r6555, 3;
	shf.l.wrap.b32 	%r6558, %r6555, %r6556, 3;
	mov.b64 	%rd9609, {%r6558, %r6557};
	shf.r.wrap.b32 	%r6559, %r6555, %r6556, 19;
	shf.r.wrap.b32 	%r6560, %r6556, %r6555, 19;
	mov.b64 	%rd9610, {%r6560, %r6559};
	xor.b64  	%rd9611, %rd9610, %rd9609;
	shr.u64 	%rd9612, %rd12066, 6;
	xor.b64  	%rd9613, %rd9611, %rd9612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6561,%dummy}, %rd12079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6562}, %rd12079;
	}
	shf.r.wrap.b32 	%r6563, %r6562, %r6561, 8;
	shf.r.wrap.b32 	%r6564, %r6561, %r6562, 8;
	mov.b64 	%rd9614, {%r6564, %r6563};
	shf.r.wrap.b32 	%r6565, %r6562, %r6561, 1;
	shf.r.wrap.b32 	%r6566, %r6561, %r6562, 1;
	mov.b64 	%rd9615, {%r6566, %r6565};
	xor.b64  	%rd9616, %rd9615, %rd9614;
	shr.u64 	%rd9617, %rd12079, 7;
	xor.b64  	%rd9618, %rd9616, %rd9617;
	add.s64 	%rd9619, %rd12071, %rd9613;
	add.s64 	%rd9620, %rd9619, %rd12080;
	add.s64 	%rd9621, %rd9620, %rd9618;
	add.s64 	%rd9622, %rd9621, %rd9525;
	xor.b64  	%rd9623, %rd9573, %rd9549;
	and.b64  	%rd9624, %rd9597, %rd9623;
	xor.b64  	%rd9625, %rd9624, %rd9549;
	add.s64 	%rd9626, %rd9622, %rd9625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6567,%dummy}, %rd9597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6568}, %rd9597;
	}
	shf.r.wrap.b32 	%r6569, %r6568, %r6567, 14;
	shf.r.wrap.b32 	%r6570, %r6567, %r6568, 14;
	mov.b64 	%rd9627, {%r6570, %r6569};
	shf.r.wrap.b32 	%r6571, %r6568, %r6567, 18;
	shf.r.wrap.b32 	%r6572, %r6567, %r6568, 18;
	mov.b64 	%rd9628, {%r6572, %r6571};
	xor.b64  	%rd9629, %rd9627, %rd9628;
	shf.l.wrap.b32 	%r6573, %r6567, %r6568, 23;
	shf.l.wrap.b32 	%r6574, %r6568, %r6567, 23;
	mov.b64 	%rd9630, {%r6574, %r6573};
	xor.b64  	%rd9631, %rd9629, %rd9630;
	add.s64 	%rd9632, %rd9626, %rd9631;
	add.s64 	%rd9633, %rd9632, -1973867731355612462;
	add.s64 	%rd9634, %rd9633, %rd9536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6575,%dummy}, %rd9608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6576}, %rd9608;
	}
	shf.r.wrap.b32 	%r6577, %r6576, %r6575, 28;
	shf.r.wrap.b32 	%r6578, %r6575, %r6576, 28;
	mov.b64 	%rd9635, {%r6578, %r6577};
	shf.l.wrap.b32 	%r6579, %r6575, %r6576, 30;
	shf.l.wrap.b32 	%r6580, %r6576, %r6575, 30;
	mov.b64 	%rd9636, {%r6580, %r6579};
	xor.b64  	%rd9637, %rd9635, %rd9636;
	shf.l.wrap.b32 	%r6581, %r6575, %r6576, 25;
	shf.l.wrap.b32 	%r6582, %r6576, %r6575, 25;
	mov.b64 	%rd9638, {%r6582, %r6581};
	xor.b64  	%rd9639, %rd9637, %rd9638;
	and.b64  	%rd9640, %rd9608, %rd9584;
	or.b64  	%rd9641, %rd9608, %rd9584;
	and.b64  	%rd9642, %rd9641, %rd9560;
	or.b64  	%rd9643, %rd9642, %rd9640;
	add.s64 	%rd9644, %rd9643, %rd9639;
	add.s64 	%rd9645, %rd9644, %rd9633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6583}, %rd12065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6584,%dummy}, %rd12065;
	}
	shf.l.wrap.b32 	%r6585, %r6584, %r6583, 3;
	shf.l.wrap.b32 	%r6586, %r6583, %r6584, 3;
	mov.b64 	%rd9646, {%r6586, %r6585};
	shf.r.wrap.b32 	%r6587, %r6583, %r6584, 19;
	shf.r.wrap.b32 	%r6588, %r6584, %r6583, 19;
	mov.b64 	%rd9647, {%r6588, %r6587};
	xor.b64  	%rd9648, %rd9647, %rd9646;
	shr.u64 	%rd9649, %rd12065, 6;
	xor.b64  	%rd9650, %rd9648, %rd9649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6589,%dummy}, %rd12078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6590}, %rd12078;
	}
	shf.r.wrap.b32 	%r6591, %r6590, %r6589, 8;
	shf.r.wrap.b32 	%r6592, %r6589, %r6590, 8;
	mov.b64 	%rd9651, {%r6592, %r6591};
	shf.r.wrap.b32 	%r6593, %r6590, %r6589, 1;
	shf.r.wrap.b32 	%r6594, %r6589, %r6590, 1;
	mov.b64 	%rd9652, {%r6594, %r6593};
	xor.b64  	%rd9653, %rd9652, %rd9651;
	shr.u64 	%rd9654, %rd12078, 7;
	xor.b64  	%rd9655, %rd9653, %rd9654;
	add.s64 	%rd9656, %rd12070, %rd9650;
	add.s64 	%rd9657, %rd9656, %rd12079;
	add.s64 	%rd9658, %rd9657, %rd9655;
	add.s64 	%rd9659, %rd9658, %rd9549;
	xor.b64  	%rd9660, %rd9597, %rd9573;
	and.b64  	%rd9661, %rd9634, %rd9660;
	xor.b64  	%rd9662, %rd9661, %rd9573;
	add.s64 	%rd9663, %rd9659, %rd9662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6595,%dummy}, %rd9634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6596}, %rd9634;
	}
	shf.r.wrap.b32 	%r6597, %r6596, %r6595, 14;
	shf.r.wrap.b32 	%r6598, %r6595, %r6596, 14;
	mov.b64 	%rd9664, {%r6598, %r6597};
	shf.r.wrap.b32 	%r6599, %r6596, %r6595, 18;
	shf.r.wrap.b32 	%r6600, %r6595, %r6596, 18;
	mov.b64 	%rd9665, {%r6600, %r6599};
	xor.b64  	%rd9666, %rd9664, %rd9665;
	shf.l.wrap.b32 	%r6601, %r6595, %r6596, 23;
	shf.l.wrap.b32 	%r6602, %r6596, %r6595, 23;
	mov.b64 	%rd9667, {%r6602, %r6601};
	xor.b64  	%rd9668, %rd9666, %rd9667;
	add.s64 	%rd9669, %rd9663, %rd9668;
	add.s64 	%rd9670, %rd9669, -1171420211273849373;
	add.s64 	%rd9671, %rd9670, %rd9560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6603,%dummy}, %rd9645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6604}, %rd9645;
	}
	shf.r.wrap.b32 	%r6605, %r6604, %r6603, 28;
	shf.r.wrap.b32 	%r6606, %r6603, %r6604, 28;
	mov.b64 	%rd9672, {%r6606, %r6605};
	shf.l.wrap.b32 	%r6607, %r6603, %r6604, 30;
	shf.l.wrap.b32 	%r6608, %r6604, %r6603, 30;
	mov.b64 	%rd9673, {%r6608, %r6607};
	xor.b64  	%rd9674, %rd9672, %rd9673;
	shf.l.wrap.b32 	%r6609, %r6603, %r6604, 25;
	shf.l.wrap.b32 	%r6610, %r6604, %r6603, 25;
	mov.b64 	%rd9675, {%r6610, %r6609};
	xor.b64  	%rd9676, %rd9674, %rd9675;
	and.b64  	%rd9677, %rd9645, %rd9608;
	or.b64  	%rd9678, %rd9645, %rd9608;
	and.b64  	%rd9679, %rd9678, %rd9584;
	or.b64  	%rd9680, %rd9679, %rd9677;
	add.s64 	%rd9681, %rd9680, %rd9676;
	add.s64 	%rd9682, %rd9681, %rd9670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6611,%dummy}, %rd9621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6612}, %rd9621;
	}
	shf.r.wrap.b32 	%r6613, %r6612, %r6611, 19;
	shf.r.wrap.b32 	%r6614, %r6611, %r6612, 19;
	mov.b64 	%rd9683, {%r6614, %r6613};
	shf.l.wrap.b32 	%r6615, %r6611, %r6612, 3;
	shf.l.wrap.b32 	%r6616, %r6612, %r6611, 3;
	mov.b64 	%rd9684, {%r6616, %r6615};
	xor.b64  	%rd9685, %rd9683, %rd9684;
	shr.u64 	%rd9686, %rd9621, 6;
	xor.b64  	%rd9687, %rd9685, %rd9686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6617,%dummy}, %rd12077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6618}, %rd12077;
	}
	shf.r.wrap.b32 	%r6619, %r6618, %r6617, 8;
	shf.r.wrap.b32 	%r6620, %r6617, %r6618, 8;
	mov.b64 	%rd9688, {%r6620, %r6619};
	shf.r.wrap.b32 	%r6621, %r6618, %r6617, 1;
	shf.r.wrap.b32 	%r6622, %r6617, %r6618, 1;
	mov.b64 	%rd9689, {%r6622, %r6621};
	xor.b64  	%rd9690, %rd9689, %rd9688;
	shr.u64 	%rd9691, %rd12077, 7;
	xor.b64  	%rd9692, %rd9690, %rd9691;
	add.s64 	%rd9693, %rd12078, %rd12069;
	add.s64 	%rd9694, %rd9693, %rd9692;
	add.s64 	%rd9695, %rd9694, %rd9687;
	add.s64 	%rd9696, %rd9695, %rd9573;
	xor.b64  	%rd9697, %rd9634, %rd9597;
	and.b64  	%rd9698, %rd9671, %rd9697;
	xor.b64  	%rd9699, %rd9698, %rd9597;
	add.s64 	%rd9700, %rd9696, %rd9699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6623,%dummy}, %rd9671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6624}, %rd9671;
	}
	shf.r.wrap.b32 	%r6625, %r6624, %r6623, 14;
	shf.r.wrap.b32 	%r6626, %r6623, %r6624, 14;
	mov.b64 	%rd9701, {%r6626, %r6625};
	shf.r.wrap.b32 	%r6627, %r6624, %r6623, 18;
	shf.r.wrap.b32 	%r6628, %r6623, %r6624, 18;
	mov.b64 	%rd9702, {%r6628, %r6627};
	xor.b64  	%rd9703, %rd9701, %rd9702;
	shf.l.wrap.b32 	%r6629, %r6623, %r6624, 23;
	shf.l.wrap.b32 	%r6630, %r6624, %r6623, 23;
	mov.b64 	%rd9704, {%r6630, %r6629};
	xor.b64  	%rd9705, %rd9703, %rd9704;
	add.s64 	%rd9706, %rd9700, %rd9705;
	add.s64 	%rd9707, %rd9706, 1135362057144423861;
	add.s64 	%rd9708, %rd9707, %rd9584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6631,%dummy}, %rd9682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6632}, %rd9682;
	}
	shf.r.wrap.b32 	%r6633, %r6632, %r6631, 28;
	shf.r.wrap.b32 	%r6634, %r6631, %r6632, 28;
	mov.b64 	%rd9709, {%r6634, %r6633};
	shf.l.wrap.b32 	%r6635, %r6631, %r6632, 30;
	shf.l.wrap.b32 	%r6636, %r6632, %r6631, 30;
	mov.b64 	%rd9710, {%r6636, %r6635};
	xor.b64  	%rd9711, %rd9709, %rd9710;
	shf.l.wrap.b32 	%r6637, %r6631, %r6632, 25;
	shf.l.wrap.b32 	%r6638, %r6632, %r6631, 25;
	mov.b64 	%rd9712, {%r6638, %r6637};
	xor.b64  	%rd9713, %rd9711, %rd9712;
	and.b64  	%rd9714, %rd9682, %rd9645;
	or.b64  	%rd9715, %rd9682, %rd9645;
	and.b64  	%rd9716, %rd9715, %rd9608;
	or.b64  	%rd9717, %rd9716, %rd9714;
	add.s64 	%rd9718, %rd9717, %rd9713;
	add.s64 	%rd9719, %rd9718, %rd9707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6639,%dummy}, %rd9658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6640}, %rd9658;
	}
	shf.r.wrap.b32 	%r6641, %r6640, %r6639, 19;
	shf.r.wrap.b32 	%r6642, %r6639, %r6640, 19;
	mov.b64 	%rd9720, {%r6642, %r6641};
	shf.l.wrap.b32 	%r6643, %r6639, %r6640, 3;
	shf.l.wrap.b32 	%r6644, %r6640, %r6639, 3;
	mov.b64 	%rd9721, {%r6644, %r6643};
	xor.b64  	%rd9722, %rd9720, %rd9721;
	shr.u64 	%rd9723, %rd9658, 6;
	xor.b64  	%rd9724, %rd9722, %rd9723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6645,%dummy}, %rd12076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6646}, %rd12076;
	}
	shf.r.wrap.b32 	%r6647, %r6646, %r6645, 8;
	shf.r.wrap.b32 	%r6648, %r6645, %r6646, 8;
	mov.b64 	%rd9725, {%r6648, %r6647};
	shf.r.wrap.b32 	%r6649, %r6646, %r6645, 1;
	shf.r.wrap.b32 	%r6650, %r6645, %r6646, 1;
	mov.b64 	%rd9726, {%r6650, %r6649};
	xor.b64  	%rd9727, %rd9726, %rd9725;
	shr.u64 	%rd9728, %rd12076, 7;
	xor.b64  	%rd9729, %rd9727, %rd9728;
	add.s64 	%rd9730, %rd12077, %rd12068;
	add.s64 	%rd9731, %rd9730, %rd9729;
	add.s64 	%rd9732, %rd9731, %rd9724;
	add.s64 	%rd9733, %rd9732, %rd9597;
	xor.b64  	%rd9734, %rd9671, %rd9634;
	and.b64  	%rd9735, %rd9708, %rd9734;
	xor.b64  	%rd9736, %rd9735, %rd9634;
	add.s64 	%rd9737, %rd9733, %rd9736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6651,%dummy}, %rd9708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6652}, %rd9708;
	}
	shf.r.wrap.b32 	%r6653, %r6652, %r6651, 14;
	shf.r.wrap.b32 	%r6654, %r6651, %r6652, 14;
	mov.b64 	%rd9738, {%r6654, %r6653};
	shf.r.wrap.b32 	%r6655, %r6652, %r6651, 18;
	shf.r.wrap.b32 	%r6656, %r6651, %r6652, 18;
	mov.b64 	%rd9739, {%r6656, %r6655};
	xor.b64  	%rd9740, %rd9738, %rd9739;
	shf.l.wrap.b32 	%r6657, %r6651, %r6652, 23;
	shf.l.wrap.b32 	%r6658, %r6652, %r6651, 23;
	mov.b64 	%rd9741, {%r6658, %r6657};
	xor.b64  	%rd9742, %rd9740, %rd9741;
	add.s64 	%rd9743, %rd9737, %rd9742;
	add.s64 	%rd9744, %rd9743, 2597628984639134821;
	add.s64 	%rd9745, %rd9744, %rd9608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6659,%dummy}, %rd9719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6660}, %rd9719;
	}
	shf.r.wrap.b32 	%r6661, %r6660, %r6659, 28;
	shf.r.wrap.b32 	%r6662, %r6659, %r6660, 28;
	mov.b64 	%rd9746, {%r6662, %r6661};
	shf.l.wrap.b32 	%r6663, %r6659, %r6660, 30;
	shf.l.wrap.b32 	%r6664, %r6660, %r6659, 30;
	mov.b64 	%rd9747, {%r6664, %r6663};
	xor.b64  	%rd9748, %rd9746, %rd9747;
	shf.l.wrap.b32 	%r6665, %r6659, %r6660, 25;
	shf.l.wrap.b32 	%r6666, %r6660, %r6659, 25;
	mov.b64 	%rd9749, {%r6666, %r6665};
	xor.b64  	%rd9750, %rd9748, %rd9749;
	and.b64  	%rd9751, %rd9719, %rd9682;
	or.b64  	%rd9752, %rd9719, %rd9682;
	and.b64  	%rd9753, %rd9752, %rd9645;
	or.b64  	%rd9754, %rd9753, %rd9751;
	add.s64 	%rd9755, %rd9754, %rd9750;
	add.s64 	%rd9756, %rd9755, %rd9744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6667,%dummy}, %rd9695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6668}, %rd9695;
	}
	shf.r.wrap.b32 	%r6669, %r6668, %r6667, 19;
	shf.r.wrap.b32 	%r6670, %r6667, %r6668, 19;
	mov.b64 	%rd9757, {%r6670, %r6669};
	shf.l.wrap.b32 	%r6671, %r6667, %r6668, 3;
	shf.l.wrap.b32 	%r6672, %r6668, %r6667, 3;
	mov.b64 	%rd9758, {%r6672, %r6671};
	xor.b64  	%rd9759, %rd9757, %rd9758;
	shr.u64 	%rd9760, %rd9695, 6;
	xor.b64  	%rd9761, %rd9759, %rd9760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6673,%dummy}, %rd12075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6674}, %rd12075;
	}
	shf.r.wrap.b32 	%r6675, %r6674, %r6673, 8;
	shf.r.wrap.b32 	%r6676, %r6673, %r6674, 8;
	mov.b64 	%rd9762, {%r6676, %r6675};
	shf.r.wrap.b32 	%r6677, %r6674, %r6673, 1;
	shf.r.wrap.b32 	%r6678, %r6673, %r6674, 1;
	mov.b64 	%rd9763, {%r6678, %r6677};
	xor.b64  	%rd9764, %rd9763, %rd9762;
	shr.u64 	%rd9765, %rd12075, 7;
	xor.b64  	%rd9766, %rd9764, %rd9765;
	add.s64 	%rd9767, %rd12076, %rd12067;
	add.s64 	%rd9768, %rd9767, %rd9766;
	add.s64 	%rd9769, %rd9768, %rd9761;
	add.s64 	%rd9770, %rd9769, %rd9634;
	xor.b64  	%rd9771, %rd9708, %rd9671;
	and.b64  	%rd9772, %rd9745, %rd9771;
	xor.b64  	%rd9773, %rd9772, %rd9671;
	add.s64 	%rd9774, %rd9770, %rd9773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6679,%dummy}, %rd9745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6680}, %rd9745;
	}
	shf.r.wrap.b32 	%r6681, %r6680, %r6679, 14;
	shf.r.wrap.b32 	%r6682, %r6679, %r6680, 14;
	mov.b64 	%rd9775, {%r6682, %r6681};
	shf.r.wrap.b32 	%r6683, %r6680, %r6679, 18;
	shf.r.wrap.b32 	%r6684, %r6679, %r6680, 18;
	mov.b64 	%rd9776, {%r6684, %r6683};
	xor.b64  	%rd9777, %rd9775, %rd9776;
	shf.l.wrap.b32 	%r6685, %r6679, %r6680, 23;
	shf.l.wrap.b32 	%r6686, %r6680, %r6679, 23;
	mov.b64 	%rd9778, {%r6686, %r6685};
	xor.b64  	%rd9779, %rd9777, %rd9778;
	add.s64 	%rd9780, %rd9774, %rd9779;
	add.s64 	%rd9781, %rd9780, 3308224258029322869;
	add.s64 	%rd9782, %rd9781, %rd9645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6687,%dummy}, %rd9756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6688}, %rd9756;
	}
	shf.r.wrap.b32 	%r6689, %r6688, %r6687, 28;
	shf.r.wrap.b32 	%r6690, %r6687, %r6688, 28;
	mov.b64 	%rd9783, {%r6690, %r6689};
	shf.l.wrap.b32 	%r6691, %r6687, %r6688, 30;
	shf.l.wrap.b32 	%r6692, %r6688, %r6687, 30;
	mov.b64 	%rd9784, {%r6692, %r6691};
	xor.b64  	%rd9785, %rd9783, %rd9784;
	shf.l.wrap.b32 	%r6693, %r6687, %r6688, 25;
	shf.l.wrap.b32 	%r6694, %r6688, %r6687, 25;
	mov.b64 	%rd9786, {%r6694, %r6693};
	xor.b64  	%rd9787, %rd9785, %rd9786;
	and.b64  	%rd9788, %rd9756, %rd9719;
	or.b64  	%rd9789, %rd9756, %rd9719;
	and.b64  	%rd9790, %rd9789, %rd9682;
	or.b64  	%rd9791, %rd9790, %rd9788;
	add.s64 	%rd9792, %rd9791, %rd9787;
	add.s64 	%rd9793, %rd9792, %rd9781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6695,%dummy}, %rd9732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6696}, %rd9732;
	}
	shf.r.wrap.b32 	%r6697, %r6696, %r6695, 19;
	shf.r.wrap.b32 	%r6698, %r6695, %r6696, 19;
	mov.b64 	%rd9794, {%r6698, %r6697};
	shf.l.wrap.b32 	%r6699, %r6695, %r6696, 3;
	shf.l.wrap.b32 	%r6700, %r6696, %r6695, 3;
	mov.b64 	%rd9795, {%r6700, %r6699};
	xor.b64  	%rd9796, %rd9794, %rd9795;
	shr.u64 	%rd9797, %rd9732, 6;
	xor.b64  	%rd9798, %rd9796, %rd9797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6701,%dummy}, %rd12074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6702}, %rd12074;
	}
	shf.r.wrap.b32 	%r6703, %r6702, %r6701, 8;
	shf.r.wrap.b32 	%r6704, %r6701, %r6702, 8;
	mov.b64 	%rd9799, {%r6704, %r6703};
	shf.r.wrap.b32 	%r6705, %r6702, %r6701, 1;
	shf.r.wrap.b32 	%r6706, %r6701, %r6702, 1;
	mov.b64 	%rd9800, {%r6706, %r6705};
	xor.b64  	%rd9801, %rd9800, %rd9799;
	shr.u64 	%rd9802, %rd12074, 7;
	xor.b64  	%rd9803, %rd9801, %rd9802;
	add.s64 	%rd9804, %rd12075, %rd12066;
	add.s64 	%rd9805, %rd9804, %rd9803;
	add.s64 	%rd9806, %rd9805, %rd9798;
	add.s64 	%rd9807, %rd9806, %rd9671;
	xor.b64  	%rd9808, %rd9745, %rd9708;
	and.b64  	%rd9809, %rd9782, %rd9808;
	xor.b64  	%rd9810, %rd9809, %rd9708;
	add.s64 	%rd9811, %rd9807, %rd9810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6707,%dummy}, %rd9782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6708}, %rd9782;
	}
	shf.r.wrap.b32 	%r6709, %r6708, %r6707, 14;
	shf.r.wrap.b32 	%r6710, %r6707, %r6708, 14;
	mov.b64 	%rd9812, {%r6710, %r6709};
	shf.r.wrap.b32 	%r6711, %r6708, %r6707, 18;
	shf.r.wrap.b32 	%r6712, %r6707, %r6708, 18;
	mov.b64 	%rd9813, {%r6712, %r6711};
	xor.b64  	%rd9814, %rd9812, %rd9813;
	shf.l.wrap.b32 	%r6713, %r6707, %r6708, 23;
	shf.l.wrap.b32 	%r6714, %r6708, %r6707, 23;
	mov.b64 	%rd9815, {%r6714, %r6713};
	xor.b64  	%rd9816, %rd9814, %rd9815;
	add.s64 	%rd9817, %rd9811, %rd9816;
	add.s64 	%rd9818, %rd9817, 5365058923640841347;
	add.s64 	%rd9819, %rd9818, %rd9682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6715,%dummy}, %rd9793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6716}, %rd9793;
	}
	shf.r.wrap.b32 	%r6717, %r6716, %r6715, 28;
	shf.r.wrap.b32 	%r6718, %r6715, %r6716, 28;
	mov.b64 	%rd9820, {%r6718, %r6717};
	shf.l.wrap.b32 	%r6719, %r6715, %r6716, 30;
	shf.l.wrap.b32 	%r6720, %r6716, %r6715, 30;
	mov.b64 	%rd9821, {%r6720, %r6719};
	xor.b64  	%rd9822, %rd9820, %rd9821;
	shf.l.wrap.b32 	%r6721, %r6715, %r6716, 25;
	shf.l.wrap.b32 	%r6722, %r6716, %r6715, 25;
	mov.b64 	%rd9823, {%r6722, %r6721};
	xor.b64  	%rd9824, %rd9822, %rd9823;
	and.b64  	%rd9825, %rd9793, %rd9756;
	or.b64  	%rd9826, %rd9793, %rd9756;
	and.b64  	%rd9827, %rd9826, %rd9719;
	or.b64  	%rd9828, %rd9827, %rd9825;
	add.s64 	%rd9829, %rd9828, %rd9824;
	add.s64 	%rd9830, %rd9829, %rd9818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6723,%dummy}, %rd9769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6724}, %rd9769;
	}
	shf.r.wrap.b32 	%r6725, %r6724, %r6723, 19;
	shf.r.wrap.b32 	%r6726, %r6723, %r6724, 19;
	mov.b64 	%rd9831, {%r6726, %r6725};
	shf.l.wrap.b32 	%r6727, %r6723, %r6724, 3;
	shf.l.wrap.b32 	%r6728, %r6724, %r6723, 3;
	mov.b64 	%rd9832, {%r6728, %r6727};
	xor.b64  	%rd9833, %rd9831, %rd9832;
	shr.u64 	%rd9834, %rd9769, 6;
	xor.b64  	%rd9835, %rd9833, %rd9834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6729,%dummy}, %rd12073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6730}, %rd12073;
	}
	shf.r.wrap.b32 	%r6731, %r6730, %r6729, 8;
	shf.r.wrap.b32 	%r6732, %r6729, %r6730, 8;
	mov.b64 	%rd9836, {%r6732, %r6731};
	shf.r.wrap.b32 	%r6733, %r6730, %r6729, 1;
	shf.r.wrap.b32 	%r6734, %r6729, %r6730, 1;
	mov.b64 	%rd9837, {%r6734, %r6733};
	xor.b64  	%rd9838, %rd9837, %rd9836;
	shr.u64 	%rd9839, %rd12073, 7;
	xor.b64  	%rd9840, %rd9838, %rd9839;
	add.s64 	%rd9841, %rd12074, %rd12065;
	add.s64 	%rd9842, %rd9841, %rd9840;
	add.s64 	%rd9843, %rd9842, %rd9835;
	add.s64 	%rd9844, %rd9843, %rd9708;
	xor.b64  	%rd9845, %rd9782, %rd9745;
	and.b64  	%rd9846, %rd9819, %rd9845;
	xor.b64  	%rd9847, %rd9846, %rd9745;
	add.s64 	%rd9848, %rd9844, %rd9847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6735,%dummy}, %rd9819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6736}, %rd9819;
	}
	shf.r.wrap.b32 	%r6737, %r6736, %r6735, 14;
	shf.r.wrap.b32 	%r6738, %r6735, %r6736, 14;
	mov.b64 	%rd9849, {%r6738, %r6737};
	shf.r.wrap.b32 	%r6739, %r6736, %r6735, 18;
	shf.r.wrap.b32 	%r6740, %r6735, %r6736, 18;
	mov.b64 	%rd9850, {%r6740, %r6739};
	xor.b64  	%rd9851, %rd9849, %rd9850;
	shf.l.wrap.b32 	%r6741, %r6735, %r6736, 23;
	shf.l.wrap.b32 	%r6742, %r6736, %r6735, 23;
	mov.b64 	%rd9852, {%r6742, %r6741};
	xor.b64  	%rd9853, %rd9851, %rd9852;
	add.s64 	%rd9854, %rd9848, %rd9853;
	add.s64 	%rd9855, %rd9854, 6679025012923562964;
	add.s64 	%rd9856, %rd9855, %rd9719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6743,%dummy}, %rd9830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6744}, %rd9830;
	}
	shf.r.wrap.b32 	%r6745, %r6744, %r6743, 28;
	shf.r.wrap.b32 	%r6746, %r6743, %r6744, 28;
	mov.b64 	%rd9857, {%r6746, %r6745};
	shf.l.wrap.b32 	%r6747, %r6743, %r6744, 30;
	shf.l.wrap.b32 	%r6748, %r6744, %r6743, 30;
	mov.b64 	%rd9858, {%r6748, %r6747};
	xor.b64  	%rd9859, %rd9857, %rd9858;
	shf.l.wrap.b32 	%r6749, %r6743, %r6744, 25;
	shf.l.wrap.b32 	%r6750, %r6744, %r6743, 25;
	mov.b64 	%rd9860, {%r6750, %r6749};
	xor.b64  	%rd9861, %rd9859, %rd9860;
	and.b64  	%rd9862, %rd9830, %rd9793;
	or.b64  	%rd9863, %rd9830, %rd9793;
	and.b64  	%rd9864, %rd9863, %rd9756;
	or.b64  	%rd9865, %rd9864, %rd9862;
	add.s64 	%rd9866, %rd9865, %rd9861;
	add.s64 	%rd9867, %rd9866, %rd9855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6751,%dummy}, %rd9806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6752}, %rd9806;
	}
	shf.r.wrap.b32 	%r6753, %r6752, %r6751, 19;
	shf.r.wrap.b32 	%r6754, %r6751, %r6752, 19;
	mov.b64 	%rd9868, {%r6754, %r6753};
	shf.l.wrap.b32 	%r6755, %r6751, %r6752, 3;
	shf.l.wrap.b32 	%r6756, %r6752, %r6751, 3;
	mov.b64 	%rd9869, {%r6756, %r6755};
	xor.b64  	%rd9870, %rd9868, %rd9869;
	shr.u64 	%rd9871, %rd9806, 6;
	xor.b64  	%rd9872, %rd9870, %rd9871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6757,%dummy}, %rd12072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6758}, %rd12072;
	}
	shf.r.wrap.b32 	%r6759, %r6758, %r6757, 8;
	shf.r.wrap.b32 	%r6760, %r6757, %r6758, 8;
	mov.b64 	%rd9873, {%r6760, %r6759};
	shf.r.wrap.b32 	%r6761, %r6758, %r6757, 1;
	shf.r.wrap.b32 	%r6762, %r6757, %r6758, 1;
	mov.b64 	%rd9874, {%r6762, %r6761};
	xor.b64  	%rd9875, %rd9874, %rd9873;
	shr.u64 	%rd9876, %rd12072, 7;
	xor.b64  	%rd9877, %rd9875, %rd9876;
	add.s64 	%rd9878, %rd9877, %rd12073;
	add.s64 	%rd9879, %rd9878, %rd9621;
	add.s64 	%rd9880, %rd9879, %rd9872;
	add.s64 	%rd9881, %rd9880, %rd9745;
	xor.b64  	%rd9882, %rd9819, %rd9782;
	and.b64  	%rd9883, %rd9856, %rd9882;
	xor.b64  	%rd9884, %rd9883, %rd9782;
	add.s64 	%rd9885, %rd9881, %rd9884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6763,%dummy}, %rd9856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6764}, %rd9856;
	}
	shf.r.wrap.b32 	%r6765, %r6764, %r6763, 14;
	shf.r.wrap.b32 	%r6766, %r6763, %r6764, 14;
	mov.b64 	%rd9886, {%r6766, %r6765};
	shf.r.wrap.b32 	%r6767, %r6764, %r6763, 18;
	shf.r.wrap.b32 	%r6768, %r6763, %r6764, 18;
	mov.b64 	%rd9887, {%r6768, %r6767};
	xor.b64  	%rd9888, %rd9886, %rd9887;
	shf.l.wrap.b32 	%r6769, %r6763, %r6764, 23;
	shf.l.wrap.b32 	%r6770, %r6764, %r6763, 23;
	mov.b64 	%rd9889, {%r6770, %r6769};
	xor.b64  	%rd9890, %rd9888, %rd9889;
	add.s64 	%rd9891, %rd9885, %rd9890;
	add.s64 	%rd9892, %rd9891, 8573033837759648693;
	add.s64 	%rd9893, %rd9892, %rd9756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6771,%dummy}, %rd9867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6772}, %rd9867;
	}
	shf.r.wrap.b32 	%r6773, %r6772, %r6771, 28;
	shf.r.wrap.b32 	%r6774, %r6771, %r6772, 28;
	mov.b64 	%rd9894, {%r6774, %r6773};
	shf.l.wrap.b32 	%r6775, %r6771, %r6772, 30;
	shf.l.wrap.b32 	%r6776, %r6772, %r6771, 30;
	mov.b64 	%rd9895, {%r6776, %r6775};
	xor.b64  	%rd9896, %rd9894, %rd9895;
	shf.l.wrap.b32 	%r6777, %r6771, %r6772, 25;
	shf.l.wrap.b32 	%r6778, %r6772, %r6771, 25;
	mov.b64 	%rd9897, {%r6778, %r6777};
	xor.b64  	%rd9898, %rd9896, %rd9897;
	and.b64  	%rd9899, %rd9867, %rd9830;
	or.b64  	%rd9900, %rd9867, %rd9830;
	and.b64  	%rd9901, %rd9900, %rd9793;
	or.b64  	%rd9902, %rd9901, %rd9899;
	add.s64 	%rd9903, %rd9902, %rd9898;
	add.s64 	%rd9904, %rd9903, %rd9892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6779,%dummy}, %rd9843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6780}, %rd9843;
	}
	shf.r.wrap.b32 	%r6781, %r6780, %r6779, 19;
	shf.r.wrap.b32 	%r6782, %r6779, %r6780, 19;
	mov.b64 	%rd9905, {%r6782, %r6781};
	shf.l.wrap.b32 	%r6783, %r6779, %r6780, 3;
	shf.l.wrap.b32 	%r6784, %r6780, %r6779, 3;
	mov.b64 	%rd9906, {%r6784, %r6783};
	xor.b64  	%rd9907, %rd9905, %rd9906;
	shr.u64 	%rd9908, %rd9843, 6;
	xor.b64  	%rd9909, %rd9907, %rd9908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6785,%dummy}, %rd12071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6786}, %rd12071;
	}
	shf.r.wrap.b32 	%r6787, %r6786, %r6785, 8;
	shf.r.wrap.b32 	%r6788, %r6785, %r6786, 8;
	mov.b64 	%rd9910, {%r6788, %r6787};
	shf.r.wrap.b32 	%r6789, %r6786, %r6785, 1;
	shf.r.wrap.b32 	%r6790, %r6785, %r6786, 1;
	mov.b64 	%rd9911, {%r6790, %r6789};
	xor.b64  	%rd9912, %rd9911, %rd9910;
	shr.u64 	%rd9913, %rd12071, 7;
	xor.b64  	%rd9914, %rd9912, %rd9913;
	add.s64 	%rd9915, %rd9914, %rd12072;
	add.s64 	%rd9916, %rd9915, %rd9658;
	add.s64 	%rd9917, %rd9916, %rd9909;
	add.s64 	%rd9918, %rd9917, %rd9782;
	xor.b64  	%rd9919, %rd9856, %rd9819;
	and.b64  	%rd9920, %rd9893, %rd9919;
	xor.b64  	%rd9921, %rd9920, %rd9819;
	add.s64 	%rd9922, %rd9918, %rd9921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6791,%dummy}, %rd9893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6792}, %rd9893;
	}
	shf.r.wrap.b32 	%r6793, %r6792, %r6791, 14;
	shf.r.wrap.b32 	%r6794, %r6791, %r6792, 14;
	mov.b64 	%rd9923, {%r6794, %r6793};
	shf.r.wrap.b32 	%r6795, %r6792, %r6791, 18;
	shf.r.wrap.b32 	%r6796, %r6791, %r6792, 18;
	mov.b64 	%rd9924, {%r6796, %r6795};
	xor.b64  	%rd9925, %rd9923, %rd9924;
	shf.l.wrap.b32 	%r6797, %r6791, %r6792, 23;
	shf.l.wrap.b32 	%r6798, %r6792, %r6791, 23;
	mov.b64 	%rd9926, {%r6798, %r6797};
	xor.b64  	%rd9927, %rd9925, %rd9926;
	add.s64 	%rd9928, %rd9922, %rd9927;
	add.s64 	%rd9929, %rd9928, -7476448914759557205;
	add.s64 	%rd9930, %rd9929, %rd9793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6799,%dummy}, %rd9904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6800}, %rd9904;
	}
	shf.r.wrap.b32 	%r6801, %r6800, %r6799, 28;
	shf.r.wrap.b32 	%r6802, %r6799, %r6800, 28;
	mov.b64 	%rd9931, {%r6802, %r6801};
	shf.l.wrap.b32 	%r6803, %r6799, %r6800, 30;
	shf.l.wrap.b32 	%r6804, %r6800, %r6799, 30;
	mov.b64 	%rd9932, {%r6804, %r6803};
	xor.b64  	%rd9933, %rd9931, %rd9932;
	shf.l.wrap.b32 	%r6805, %r6799, %r6800, 25;
	shf.l.wrap.b32 	%r6806, %r6800, %r6799, 25;
	mov.b64 	%rd9934, {%r6806, %r6805};
	xor.b64  	%rd9935, %rd9933, %rd9934;
	and.b64  	%rd9936, %rd9904, %rd9867;
	or.b64  	%rd9937, %rd9904, %rd9867;
	and.b64  	%rd9938, %rd9937, %rd9830;
	or.b64  	%rd9939, %rd9938, %rd9936;
	add.s64 	%rd9940, %rd9939, %rd9935;
	add.s64 	%rd9941, %rd9940, %rd9929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6807,%dummy}, %rd9880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6808}, %rd9880;
	}
	shf.r.wrap.b32 	%r6809, %r6808, %r6807, 19;
	shf.r.wrap.b32 	%r6810, %r6807, %r6808, 19;
	mov.b64 	%rd9942, {%r6810, %r6809};
	shf.l.wrap.b32 	%r6811, %r6807, %r6808, 3;
	shf.l.wrap.b32 	%r6812, %r6808, %r6807, 3;
	mov.b64 	%rd9943, {%r6812, %r6811};
	xor.b64  	%rd9944, %rd9942, %rd9943;
	shr.u64 	%rd9945, %rd9880, 6;
	xor.b64  	%rd9946, %rd9944, %rd9945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6813,%dummy}, %rd12070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6814}, %rd12070;
	}
	shf.r.wrap.b32 	%r6815, %r6814, %r6813, 8;
	shf.r.wrap.b32 	%r6816, %r6813, %r6814, 8;
	mov.b64 	%rd9947, {%r6816, %r6815};
	shf.r.wrap.b32 	%r6817, %r6814, %r6813, 1;
	shf.r.wrap.b32 	%r6818, %r6813, %r6814, 1;
	mov.b64 	%rd9948, {%r6818, %r6817};
	xor.b64  	%rd9949, %rd9948, %rd9947;
	shr.u64 	%rd9950, %rd12070, 7;
	xor.b64  	%rd9951, %rd9949, %rd9950;
	add.s64 	%rd9952, %rd9951, %rd12071;
	add.s64 	%rd9953, %rd9952, %rd9695;
	add.s64 	%rd9954, %rd9953, %rd9946;
	add.s64 	%rd9955, %rd9954, %rd9819;
	xor.b64  	%rd9956, %rd9893, %rd9856;
	and.b64  	%rd9957, %rd9930, %rd9956;
	xor.b64  	%rd9958, %rd9957, %rd9856;
	add.s64 	%rd9959, %rd9955, %rd9958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6819,%dummy}, %rd9930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6820}, %rd9930;
	}
	shf.r.wrap.b32 	%r6821, %r6820, %r6819, 14;
	shf.r.wrap.b32 	%r6822, %r6819, %r6820, 14;
	mov.b64 	%rd9960, {%r6822, %r6821};
	shf.r.wrap.b32 	%r6823, %r6820, %r6819, 18;
	shf.r.wrap.b32 	%r6824, %r6819, %r6820, 18;
	mov.b64 	%rd9961, {%r6824, %r6823};
	xor.b64  	%rd9962, %rd9960, %rd9961;
	shf.l.wrap.b32 	%r6825, %r6819, %r6820, 23;
	shf.l.wrap.b32 	%r6826, %r6820, %r6819, 23;
	mov.b64 	%rd9963, {%r6826, %r6825};
	xor.b64  	%rd9964, %rd9962, %rd9963;
	add.s64 	%rd9965, %rd9959, %rd9964;
	add.s64 	%rd9966, %rd9965, -6327057829258317296;
	add.s64 	%rd9967, %rd9966, %rd9830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6827,%dummy}, %rd9941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6828}, %rd9941;
	}
	shf.r.wrap.b32 	%r6829, %r6828, %r6827, 28;
	shf.r.wrap.b32 	%r6830, %r6827, %r6828, 28;
	mov.b64 	%rd9968, {%r6830, %r6829};
	shf.l.wrap.b32 	%r6831, %r6827, %r6828, 30;
	shf.l.wrap.b32 	%r6832, %r6828, %r6827, 30;
	mov.b64 	%rd9969, {%r6832, %r6831};
	xor.b64  	%rd9970, %rd9968, %rd9969;
	shf.l.wrap.b32 	%r6833, %r6827, %r6828, 25;
	shf.l.wrap.b32 	%r6834, %r6828, %r6827, 25;
	mov.b64 	%rd9971, {%r6834, %r6833};
	xor.b64  	%rd9972, %rd9970, %rd9971;
	and.b64  	%rd9973, %rd9941, %rd9904;
	or.b64  	%rd9974, %rd9941, %rd9904;
	and.b64  	%rd9975, %rd9974, %rd9867;
	or.b64  	%rd9976, %rd9975, %rd9973;
	add.s64 	%rd9977, %rd9976, %rd9972;
	add.s64 	%rd9978, %rd9977, %rd9966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6835,%dummy}, %rd9917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6836}, %rd9917;
	}
	shf.r.wrap.b32 	%r6837, %r6836, %r6835, 19;
	shf.r.wrap.b32 	%r6838, %r6835, %r6836, 19;
	mov.b64 	%rd9979, {%r6838, %r6837};
	shf.l.wrap.b32 	%r6839, %r6835, %r6836, 3;
	shf.l.wrap.b32 	%r6840, %r6836, %r6835, 3;
	mov.b64 	%rd9980, {%r6840, %r6839};
	xor.b64  	%rd9981, %rd9979, %rd9980;
	shr.u64 	%rd9982, %rd9917, 6;
	xor.b64  	%rd9983, %rd9981, %rd9982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6841,%dummy}, %rd12069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6842}, %rd12069;
	}
	shf.r.wrap.b32 	%r6843, %r6842, %r6841, 8;
	shf.r.wrap.b32 	%r6844, %r6841, %r6842, 8;
	mov.b64 	%rd9984, {%r6844, %r6843};
	shf.r.wrap.b32 	%r6845, %r6842, %r6841, 1;
	shf.r.wrap.b32 	%r6846, %r6841, %r6842, 1;
	mov.b64 	%rd9985, {%r6846, %r6845};
	xor.b64  	%rd9986, %rd9985, %rd9984;
	shr.u64 	%rd9987, %rd12069, 7;
	xor.b64  	%rd9988, %rd9986, %rd9987;
	add.s64 	%rd9989, %rd9988, %rd12070;
	add.s64 	%rd9990, %rd9989, %rd9732;
	add.s64 	%rd9991, %rd9990, %rd9983;
	add.s64 	%rd9992, %rd9991, %rd9856;
	xor.b64  	%rd9993, %rd9930, %rd9893;
	and.b64  	%rd9994, %rd9967, %rd9993;
	xor.b64  	%rd9995, %rd9994, %rd9893;
	add.s64 	%rd9996, %rd9992, %rd9995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6847,%dummy}, %rd9967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6848}, %rd9967;
	}
	shf.r.wrap.b32 	%r6849, %r6848, %r6847, 14;
	shf.r.wrap.b32 	%r6850, %r6847, %r6848, 14;
	mov.b64 	%rd9997, {%r6850, %r6849};
	shf.r.wrap.b32 	%r6851, %r6848, %r6847, 18;
	shf.r.wrap.b32 	%r6852, %r6847, %r6848, 18;
	mov.b64 	%rd9998, {%r6852, %r6851};
	xor.b64  	%rd9999, %rd9997, %rd9998;
	shf.l.wrap.b32 	%r6853, %r6847, %r6848, 23;
	shf.l.wrap.b32 	%r6854, %r6848, %r6847, 23;
	mov.b64 	%rd10000, {%r6854, %r6853};
	xor.b64  	%rd10001, %rd9999, %rd10000;
	add.s64 	%rd10002, %rd9996, %rd10001;
	add.s64 	%rd10003, %rd10002, -5763719355590565569;
	add.s64 	%rd10004, %rd10003, %rd9867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6855,%dummy}, %rd9978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6856}, %rd9978;
	}
	shf.r.wrap.b32 	%r6857, %r6856, %r6855, 28;
	shf.r.wrap.b32 	%r6858, %r6855, %r6856, 28;
	mov.b64 	%rd10005, {%r6858, %r6857};
	shf.l.wrap.b32 	%r6859, %r6855, %r6856, 30;
	shf.l.wrap.b32 	%r6860, %r6856, %r6855, 30;
	mov.b64 	%rd10006, {%r6860, %r6859};
	xor.b64  	%rd10007, %rd10005, %rd10006;
	shf.l.wrap.b32 	%r6861, %r6855, %r6856, 25;
	shf.l.wrap.b32 	%r6862, %r6856, %r6855, 25;
	mov.b64 	%rd10008, {%r6862, %r6861};
	xor.b64  	%rd10009, %rd10007, %rd10008;
	and.b64  	%rd10010, %rd9978, %rd9941;
	or.b64  	%rd10011, %rd9978, %rd9941;
	and.b64  	%rd10012, %rd10011, %rd9904;
	or.b64  	%rd10013, %rd10012, %rd10010;
	add.s64 	%rd10014, %rd10013, %rd10009;
	add.s64 	%rd10015, %rd10014, %rd10003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6863,%dummy}, %rd9954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6864}, %rd9954;
	}
	shf.r.wrap.b32 	%r6865, %r6864, %r6863, 19;
	shf.r.wrap.b32 	%r6866, %r6863, %r6864, 19;
	mov.b64 	%rd10016, {%r6866, %r6865};
	shf.l.wrap.b32 	%r6867, %r6863, %r6864, 3;
	shf.l.wrap.b32 	%r6868, %r6864, %r6863, 3;
	mov.b64 	%rd10017, {%r6868, %r6867};
	xor.b64  	%rd10018, %rd10016, %rd10017;
	shr.u64 	%rd10019, %rd9954, 6;
	xor.b64  	%rd10020, %rd10018, %rd10019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6869,%dummy}, %rd12068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6870}, %rd12068;
	}
	shf.r.wrap.b32 	%r6871, %r6870, %r6869, 8;
	shf.r.wrap.b32 	%r6872, %r6869, %r6870, 8;
	mov.b64 	%rd10021, {%r6872, %r6871};
	shf.r.wrap.b32 	%r6873, %r6870, %r6869, 1;
	shf.r.wrap.b32 	%r6874, %r6869, %r6870, 1;
	mov.b64 	%rd10022, {%r6874, %r6873};
	xor.b64  	%rd10023, %rd10022, %rd10021;
	shr.u64 	%rd10024, %rd12068, 7;
	xor.b64  	%rd10025, %rd10023, %rd10024;
	add.s64 	%rd10026, %rd10025, %rd12069;
	add.s64 	%rd10027, %rd10026, %rd9769;
	add.s64 	%rd10028, %rd10027, %rd10020;
	add.s64 	%rd10029, %rd10028, %rd9893;
	xor.b64  	%rd10030, %rd9967, %rd9930;
	and.b64  	%rd10031, %rd10004, %rd10030;
	xor.b64  	%rd10032, %rd10031, %rd9930;
	add.s64 	%rd10033, %rd10029, %rd10032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6875,%dummy}, %rd10004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6876}, %rd10004;
	}
	shf.r.wrap.b32 	%r6877, %r6876, %r6875, 14;
	shf.r.wrap.b32 	%r6878, %r6875, %r6876, 14;
	mov.b64 	%rd10034, {%r6878, %r6877};
	shf.r.wrap.b32 	%r6879, %r6876, %r6875, 18;
	shf.r.wrap.b32 	%r6880, %r6875, %r6876, 18;
	mov.b64 	%rd10035, {%r6880, %r6879};
	xor.b64  	%rd10036, %rd10034, %rd10035;
	shf.l.wrap.b32 	%r6881, %r6875, %r6876, 23;
	shf.l.wrap.b32 	%r6882, %r6876, %r6875, 23;
	mov.b64 	%rd10037, {%r6882, %r6881};
	xor.b64  	%rd10038, %rd10036, %rd10037;
	add.s64 	%rd10039, %rd10033, %rd10038;
	add.s64 	%rd10040, %rd10039, -4658551843659510044;
	add.s64 	%rd10041, %rd10040, %rd9904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6883,%dummy}, %rd10015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6884}, %rd10015;
	}
	shf.r.wrap.b32 	%r6885, %r6884, %r6883, 28;
	shf.r.wrap.b32 	%r6886, %r6883, %r6884, 28;
	mov.b64 	%rd10042, {%r6886, %r6885};
	shf.l.wrap.b32 	%r6887, %r6883, %r6884, 30;
	shf.l.wrap.b32 	%r6888, %r6884, %r6883, 30;
	mov.b64 	%rd10043, {%r6888, %r6887};
	xor.b64  	%rd10044, %rd10042, %rd10043;
	shf.l.wrap.b32 	%r6889, %r6883, %r6884, 25;
	shf.l.wrap.b32 	%r6890, %r6884, %r6883, 25;
	mov.b64 	%rd10045, {%r6890, %r6889};
	xor.b64  	%rd10046, %rd10044, %rd10045;
	and.b64  	%rd10047, %rd10015, %rd9978;
	or.b64  	%rd10048, %rd10015, %rd9978;
	and.b64  	%rd10049, %rd10048, %rd9941;
	or.b64  	%rd10050, %rd10049, %rd10047;
	add.s64 	%rd10051, %rd10050, %rd10046;
	add.s64 	%rd10052, %rd10051, %rd10040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6891,%dummy}, %rd9991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6892}, %rd9991;
	}
	shf.r.wrap.b32 	%r6893, %r6892, %r6891, 19;
	shf.r.wrap.b32 	%r6894, %r6891, %r6892, 19;
	mov.b64 	%rd10053, {%r6894, %r6893};
	shf.l.wrap.b32 	%r6895, %r6891, %r6892, 3;
	shf.l.wrap.b32 	%r6896, %r6892, %r6891, 3;
	mov.b64 	%rd10054, {%r6896, %r6895};
	xor.b64  	%rd10055, %rd10053, %rd10054;
	shr.u64 	%rd10056, %rd9991, 6;
	xor.b64  	%rd10057, %rd10055, %rd10056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6897,%dummy}, %rd12067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6898}, %rd12067;
	}
	shf.r.wrap.b32 	%r6899, %r6898, %r6897, 8;
	shf.r.wrap.b32 	%r6900, %r6897, %r6898, 8;
	mov.b64 	%rd10058, {%r6900, %r6899};
	shf.r.wrap.b32 	%r6901, %r6898, %r6897, 1;
	shf.r.wrap.b32 	%r6902, %r6897, %r6898, 1;
	mov.b64 	%rd10059, {%r6902, %r6901};
	xor.b64  	%rd10060, %rd10059, %rd10058;
	shr.u64 	%rd10061, %rd12067, 7;
	xor.b64  	%rd10062, %rd10060, %rd10061;
	add.s64 	%rd10063, %rd10062, %rd12068;
	add.s64 	%rd10064, %rd10063, %rd9806;
	add.s64 	%rd10065, %rd10064, %rd10057;
	add.s64 	%rd10066, %rd10065, %rd9930;
	xor.b64  	%rd10067, %rd10004, %rd9967;
	and.b64  	%rd10068, %rd10041, %rd10067;
	xor.b64  	%rd10069, %rd10068, %rd9967;
	add.s64 	%rd10070, %rd10066, %rd10069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6903,%dummy}, %rd10041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6904}, %rd10041;
	}
	shf.r.wrap.b32 	%r6905, %r6904, %r6903, 14;
	shf.r.wrap.b32 	%r6906, %r6903, %r6904, 14;
	mov.b64 	%rd10071, {%r6906, %r6905};
	shf.r.wrap.b32 	%r6907, %r6904, %r6903, 18;
	shf.r.wrap.b32 	%r6908, %r6903, %r6904, 18;
	mov.b64 	%rd10072, {%r6908, %r6907};
	xor.b64  	%rd10073, %rd10071, %rd10072;
	shf.l.wrap.b32 	%r6909, %r6903, %r6904, 23;
	shf.l.wrap.b32 	%r6910, %r6904, %r6903, 23;
	mov.b64 	%rd10074, {%r6910, %r6909};
	xor.b64  	%rd10075, %rd10073, %rd10074;
	add.s64 	%rd10076, %rd10070, %rd10075;
	add.s64 	%rd10077, %rd10076, -4116276920077217854;
	add.s64 	%rd10078, %rd10077, %rd9941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6911,%dummy}, %rd10052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6912}, %rd10052;
	}
	shf.r.wrap.b32 	%r6913, %r6912, %r6911, 28;
	shf.r.wrap.b32 	%r6914, %r6911, %r6912, 28;
	mov.b64 	%rd10079, {%r6914, %r6913};
	shf.l.wrap.b32 	%r6915, %r6911, %r6912, 30;
	shf.l.wrap.b32 	%r6916, %r6912, %r6911, 30;
	mov.b64 	%rd10080, {%r6916, %r6915};
	xor.b64  	%rd10081, %rd10079, %rd10080;
	shf.l.wrap.b32 	%r6917, %r6911, %r6912, 25;
	shf.l.wrap.b32 	%r6918, %r6912, %r6911, 25;
	mov.b64 	%rd10082, {%r6918, %r6917};
	xor.b64  	%rd10083, %rd10081, %rd10082;
	and.b64  	%rd10084, %rd10052, %rd10015;
	or.b64  	%rd10085, %rd10052, %rd10015;
	and.b64  	%rd10086, %rd10085, %rd9978;
	or.b64  	%rd10087, %rd10086, %rd10084;
	add.s64 	%rd10088, %rd10087, %rd10083;
	add.s64 	%rd10089, %rd10088, %rd10077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6919,%dummy}, %rd10028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6920}, %rd10028;
	}
	shf.r.wrap.b32 	%r6921, %r6920, %r6919, 19;
	shf.r.wrap.b32 	%r6922, %r6919, %r6920, 19;
	mov.b64 	%rd10090, {%r6922, %r6921};
	shf.l.wrap.b32 	%r6923, %r6919, %r6920, 3;
	shf.l.wrap.b32 	%r6924, %r6920, %r6919, 3;
	mov.b64 	%rd10091, {%r6924, %r6923};
	xor.b64  	%rd10092, %rd10090, %rd10091;
	shr.u64 	%rd10093, %rd10028, 6;
	xor.b64  	%rd10094, %rd10092, %rd10093;
	shf.r.wrap.b32 	%r6925, %r6555, %r6556, 8;
	shf.r.wrap.b32 	%r6926, %r6556, %r6555, 8;
	mov.b64 	%rd10095, {%r6926, %r6925};
	shf.r.wrap.b32 	%r6927, %r6555, %r6556, 1;
	shf.r.wrap.b32 	%r6928, %r6556, %r6555, 1;
	mov.b64 	%rd10096, {%r6928, %r6927};
	xor.b64  	%rd10097, %rd10096, %rd10095;
	shr.u64 	%rd10098, %rd12066, 7;
	xor.b64  	%rd10099, %rd10097, %rd10098;
	add.s64 	%rd10100, %rd10099, %rd12067;
	add.s64 	%rd10101, %rd10100, %rd9843;
	add.s64 	%rd10102, %rd10101, %rd10094;
	add.s64 	%rd10103, %rd10102, %rd9967;
	xor.b64  	%rd10104, %rd10041, %rd10004;
	and.b64  	%rd10105, %rd10078, %rd10104;
	xor.b64  	%rd10106, %rd10105, %rd10004;
	add.s64 	%rd10107, %rd10103, %rd10106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6929,%dummy}, %rd10078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6930}, %rd10078;
	}
	shf.r.wrap.b32 	%r6931, %r6930, %r6929, 14;
	shf.r.wrap.b32 	%r6932, %r6929, %r6930, 14;
	mov.b64 	%rd10108, {%r6932, %r6931};
	shf.r.wrap.b32 	%r6933, %r6930, %r6929, 18;
	shf.r.wrap.b32 	%r6934, %r6929, %r6930, 18;
	mov.b64 	%rd10109, {%r6934, %r6933};
	xor.b64  	%rd10110, %rd10108, %rd10109;
	shf.l.wrap.b32 	%r6935, %r6929, %r6930, 23;
	shf.l.wrap.b32 	%r6936, %r6930, %r6929, 23;
	mov.b64 	%rd10111, {%r6936, %r6935};
	xor.b64  	%rd10112, %rd10110, %rd10111;
	add.s64 	%rd10113, %rd10107, %rd10112;
	add.s64 	%rd10114, %rd10113, -3051310485924567259;
	add.s64 	%rd10115, %rd10114, %rd9978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6937,%dummy}, %rd10089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6938}, %rd10089;
	}
	shf.r.wrap.b32 	%r6939, %r6938, %r6937, 28;
	shf.r.wrap.b32 	%r6940, %r6937, %r6938, 28;
	mov.b64 	%rd10116, {%r6940, %r6939};
	shf.l.wrap.b32 	%r6941, %r6937, %r6938, 30;
	shf.l.wrap.b32 	%r6942, %r6938, %r6937, 30;
	mov.b64 	%rd10117, {%r6942, %r6941};
	xor.b64  	%rd10118, %rd10116, %rd10117;
	shf.l.wrap.b32 	%r6943, %r6937, %r6938, 25;
	shf.l.wrap.b32 	%r6944, %r6938, %r6937, 25;
	mov.b64 	%rd10119, {%r6944, %r6943};
	xor.b64  	%rd10120, %rd10118, %rd10119;
	and.b64  	%rd10121, %rd10089, %rd10052;
	or.b64  	%rd10122, %rd10089, %rd10052;
	and.b64  	%rd10123, %rd10122, %rd10015;
	or.b64  	%rd10124, %rd10123, %rd10121;
	add.s64 	%rd10125, %rd10124, %rd10120;
	add.s64 	%rd10126, %rd10125, %rd10114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6945,%dummy}, %rd10065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6946}, %rd10065;
	}
	shf.r.wrap.b32 	%r6947, %r6946, %r6945, 19;
	shf.r.wrap.b32 	%r6948, %r6945, %r6946, 19;
	mov.b64 	%rd10127, {%r6948, %r6947};
	shf.l.wrap.b32 	%r6949, %r6945, %r6946, 3;
	shf.l.wrap.b32 	%r6950, %r6946, %r6945, 3;
	mov.b64 	%rd10128, {%r6950, %r6949};
	xor.b64  	%rd10129, %rd10127, %rd10128;
	shr.u64 	%rd10130, %rd10065, 6;
	xor.b64  	%rd10131, %rd10129, %rd10130;
	shf.r.wrap.b32 	%r6951, %r6583, %r6584, 8;
	shf.r.wrap.b32 	%r6952, %r6584, %r6583, 8;
	mov.b64 	%rd10132, {%r6952, %r6951};
	shf.r.wrap.b32 	%r6953, %r6583, %r6584, 1;
	shf.r.wrap.b32 	%r6954, %r6584, %r6583, 1;
	mov.b64 	%rd10133, {%r6954, %r6953};
	xor.b64  	%rd10134, %rd10133, %rd10132;
	shr.u64 	%rd10135, %rd12065, 7;
	xor.b64  	%rd10136, %rd10134, %rd10135;
	add.s64 	%rd10137, %rd10136, %rd12066;
	add.s64 	%rd10138, %rd10137, %rd9880;
	add.s64 	%rd10139, %rd10138, %rd10131;
	add.s64 	%rd10140, %rd10139, %rd10004;
	xor.b64  	%rd10141, %rd10078, %rd10041;
	and.b64  	%rd10142, %rd10115, %rd10141;
	xor.b64  	%rd10143, %rd10142, %rd10041;
	add.s64 	%rd10144, %rd10140, %rd10143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6955,%dummy}, %rd10115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6956}, %rd10115;
	}
	shf.r.wrap.b32 	%r6957, %r6956, %r6955, 14;
	shf.r.wrap.b32 	%r6958, %r6955, %r6956, 14;
	mov.b64 	%rd10145, {%r6958, %r6957};
	shf.r.wrap.b32 	%r6959, %r6956, %r6955, 18;
	shf.r.wrap.b32 	%r6960, %r6955, %r6956, 18;
	mov.b64 	%rd10146, {%r6960, %r6959};
	xor.b64  	%rd10147, %rd10145, %rd10146;
	shf.l.wrap.b32 	%r6961, %r6955, %r6956, 23;
	shf.l.wrap.b32 	%r6962, %r6956, %r6955, 23;
	mov.b64 	%rd10148, {%r6962, %r6961};
	xor.b64  	%rd10149, %rd10147, %rd10148;
	add.s64 	%rd10150, %rd10144, %rd10149;
	add.s64 	%rd10151, %rd10150, 489312712824947311;
	add.s64 	%rd10152, %rd10151, %rd10015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6963,%dummy}, %rd10126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6964}, %rd10126;
	}
	shf.r.wrap.b32 	%r6965, %r6964, %r6963, 28;
	shf.r.wrap.b32 	%r6966, %r6963, %r6964, 28;
	mov.b64 	%rd10153, {%r6966, %r6965};
	shf.l.wrap.b32 	%r6967, %r6963, %r6964, 30;
	shf.l.wrap.b32 	%r6968, %r6964, %r6963, 30;
	mov.b64 	%rd10154, {%r6968, %r6967};
	xor.b64  	%rd10155, %rd10153, %rd10154;
	shf.l.wrap.b32 	%r6969, %r6963, %r6964, 25;
	shf.l.wrap.b32 	%r6970, %r6964, %r6963, 25;
	mov.b64 	%rd10156, {%r6970, %r6969};
	xor.b64  	%rd10157, %rd10155, %rd10156;
	and.b64  	%rd10158, %rd10126, %rd10089;
	or.b64  	%rd10159, %rd10126, %rd10089;
	and.b64  	%rd10160, %rd10159, %rd10052;
	or.b64  	%rd10161, %rd10160, %rd10158;
	add.s64 	%rd10162, %rd10161, %rd10157;
	add.s64 	%rd10163, %rd10162, %rd10151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6971,%dummy}, %rd10102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6972}, %rd10102;
	}
	shf.r.wrap.b32 	%r6973, %r6972, %r6971, 19;
	shf.r.wrap.b32 	%r6974, %r6971, %r6972, 19;
	mov.b64 	%rd10164, {%r6974, %r6973};
	shf.l.wrap.b32 	%r6975, %r6971, %r6972, 3;
	shf.l.wrap.b32 	%r6976, %r6972, %r6971, 3;
	mov.b64 	%rd10165, {%r6976, %r6975};
	xor.b64  	%rd10166, %rd10164, %rd10165;
	shr.u64 	%rd10167, %rd10102, 6;
	xor.b64  	%rd10168, %rd10166, %rd10167;
	shf.r.wrap.b32 	%r6977, %r6612, %r6611, 1;
	shf.r.wrap.b32 	%r6978, %r6611, %r6612, 1;
	mov.b64 	%rd10169, {%r6978, %r6977};
	shf.r.wrap.b32 	%r6979, %r6612, %r6611, 8;
	shf.r.wrap.b32 	%r6980, %r6611, %r6612, 8;
	mov.b64 	%rd10170, {%r6980, %r6979};
	xor.b64  	%rd10171, %rd10169, %rd10170;
	shr.u64 	%rd10172, %rd9621, 7;
	xor.b64  	%rd10173, %rd10171, %rd10172;
	add.s64 	%rd10174, %rd10173, %rd12065;
	add.s64 	%rd10175, %rd10174, %rd9917;
	add.s64 	%rd10176, %rd10175, %rd10168;
	add.s64 	%rd10177, %rd10176, %rd10041;
	xor.b64  	%rd10178, %rd10115, %rd10078;
	and.b64  	%rd10179, %rd10152, %rd10178;
	xor.b64  	%rd10180, %rd10179, %rd10078;
	add.s64 	%rd10181, %rd10177, %rd10180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6981,%dummy}, %rd10152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6982}, %rd10152;
	}
	shf.r.wrap.b32 	%r6983, %r6982, %r6981, 14;
	shf.r.wrap.b32 	%r6984, %r6981, %r6982, 14;
	mov.b64 	%rd10182, {%r6984, %r6983};
	shf.r.wrap.b32 	%r6985, %r6982, %r6981, 18;
	shf.r.wrap.b32 	%r6986, %r6981, %r6982, 18;
	mov.b64 	%rd10183, {%r6986, %r6985};
	xor.b64  	%rd10184, %rd10182, %rd10183;
	shf.l.wrap.b32 	%r6987, %r6981, %r6982, 23;
	shf.l.wrap.b32 	%r6988, %r6982, %r6981, 23;
	mov.b64 	%rd10185, {%r6988, %r6987};
	xor.b64  	%rd10186, %rd10184, %rd10185;
	add.s64 	%rd10187, %rd10181, %rd10186;
	add.s64 	%rd10188, %rd10187, 1452737877330783856;
	add.s64 	%rd10189, %rd10188, %rd10052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6989,%dummy}, %rd10163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6990}, %rd10163;
	}
	shf.r.wrap.b32 	%r6991, %r6990, %r6989, 28;
	shf.r.wrap.b32 	%r6992, %r6989, %r6990, 28;
	mov.b64 	%rd10190, {%r6992, %r6991};
	shf.l.wrap.b32 	%r6993, %r6989, %r6990, 30;
	shf.l.wrap.b32 	%r6994, %r6990, %r6989, 30;
	mov.b64 	%rd10191, {%r6994, %r6993};
	xor.b64  	%rd10192, %rd10190, %rd10191;
	shf.l.wrap.b32 	%r6995, %r6989, %r6990, 25;
	shf.l.wrap.b32 	%r6996, %r6990, %r6989, 25;
	mov.b64 	%rd10193, {%r6996, %r6995};
	xor.b64  	%rd10194, %rd10192, %rd10193;
	and.b64  	%rd10195, %rd10163, %rd10126;
	or.b64  	%rd10196, %rd10163, %rd10126;
	and.b64  	%rd10197, %rd10196, %rd10089;
	or.b64  	%rd10198, %rd10197, %rd10195;
	add.s64 	%rd10199, %rd10198, %rd10194;
	add.s64 	%rd10200, %rd10199, %rd10188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6997,%dummy}, %rd10139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6998}, %rd10139;
	}
	shf.r.wrap.b32 	%r6999, %r6998, %r6997, 19;
	shf.r.wrap.b32 	%r7000, %r6997, %r6998, 19;
	mov.b64 	%rd10201, {%r7000, %r6999};
	shf.l.wrap.b32 	%r7001, %r6997, %r6998, 3;
	shf.l.wrap.b32 	%r7002, %r6998, %r6997, 3;
	mov.b64 	%rd10202, {%r7002, %r7001};
	xor.b64  	%rd10203, %rd10201, %rd10202;
	shr.u64 	%rd10204, %rd10139, 6;
	xor.b64  	%rd10205, %rd10203, %rd10204;
	shf.r.wrap.b32 	%r7003, %r6640, %r6639, 1;
	shf.r.wrap.b32 	%r7004, %r6639, %r6640, 1;
	mov.b64 	%rd10206, {%r7004, %r7003};
	shf.r.wrap.b32 	%r7005, %r6640, %r6639, 8;
	shf.r.wrap.b32 	%r7006, %r6639, %r6640, 8;
	mov.b64 	%rd10207, {%r7006, %r7005};
	xor.b64  	%rd10208, %rd10206, %rd10207;
	shr.u64 	%rd10209, %rd9658, 7;
	xor.b64  	%rd10210, %rd10208, %rd10209;
	add.s64 	%rd10211, %rd10210, %rd9621;
	add.s64 	%rd10212, %rd10211, %rd9954;
	add.s64 	%rd10213, %rd10212, %rd10205;
	add.s64 	%rd10214, %rd10213, %rd10078;
	xor.b64  	%rd10215, %rd10152, %rd10115;
	and.b64  	%rd10216, %rd10189, %rd10215;
	xor.b64  	%rd10217, %rd10216, %rd10115;
	add.s64 	%rd10218, %rd10214, %rd10217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7007,%dummy}, %rd10189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7008}, %rd10189;
	}
	shf.r.wrap.b32 	%r7009, %r7008, %r7007, 14;
	shf.r.wrap.b32 	%r7010, %r7007, %r7008, 14;
	mov.b64 	%rd10219, {%r7010, %r7009};
	shf.r.wrap.b32 	%r7011, %r7008, %r7007, 18;
	shf.r.wrap.b32 	%r7012, %r7007, %r7008, 18;
	mov.b64 	%rd10220, {%r7012, %r7011};
	xor.b64  	%rd10221, %rd10219, %rd10220;
	shf.l.wrap.b32 	%r7013, %r7007, %r7008, 23;
	shf.l.wrap.b32 	%r7014, %r7008, %r7007, 23;
	mov.b64 	%rd10222, {%r7014, %r7013};
	xor.b64  	%rd10223, %rd10221, %rd10222;
	add.s64 	%rd10224, %rd10218, %rd10223;
	add.s64 	%rd10225, %rd10224, 2861767655752347644;
	add.s64 	%rd10226, %rd10225, %rd10089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7015,%dummy}, %rd10200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7016}, %rd10200;
	}
	shf.r.wrap.b32 	%r7017, %r7016, %r7015, 28;
	shf.r.wrap.b32 	%r7018, %r7015, %r7016, 28;
	mov.b64 	%rd10227, {%r7018, %r7017};
	shf.l.wrap.b32 	%r7019, %r7015, %r7016, 30;
	shf.l.wrap.b32 	%r7020, %r7016, %r7015, 30;
	mov.b64 	%rd10228, {%r7020, %r7019};
	xor.b64  	%rd10229, %rd10227, %rd10228;
	shf.l.wrap.b32 	%r7021, %r7015, %r7016, 25;
	shf.l.wrap.b32 	%r7022, %r7016, %r7015, 25;
	mov.b64 	%rd10230, {%r7022, %r7021};
	xor.b64  	%rd10231, %rd10229, %rd10230;
	and.b64  	%rd10232, %rd10200, %rd10163;
	or.b64  	%rd10233, %rd10200, %rd10163;
	and.b64  	%rd10234, %rd10233, %rd10126;
	or.b64  	%rd10235, %rd10234, %rd10232;
	add.s64 	%rd10236, %rd10235, %rd10231;
	add.s64 	%rd10237, %rd10236, %rd10225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7023,%dummy}, %rd10176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7024}, %rd10176;
	}
	shf.r.wrap.b32 	%r7025, %r7024, %r7023, 19;
	shf.r.wrap.b32 	%r7026, %r7023, %r7024, 19;
	mov.b64 	%rd10238, {%r7026, %r7025};
	shf.l.wrap.b32 	%r7027, %r7023, %r7024, 3;
	shf.l.wrap.b32 	%r7028, %r7024, %r7023, 3;
	mov.b64 	%rd10239, {%r7028, %r7027};
	xor.b64  	%rd10240, %rd10238, %rd10239;
	shr.u64 	%rd10241, %rd10176, 6;
	xor.b64  	%rd10242, %rd10240, %rd10241;
	shf.r.wrap.b32 	%r7029, %r6668, %r6667, 1;
	shf.r.wrap.b32 	%r7030, %r6667, %r6668, 1;
	mov.b64 	%rd10243, {%r7030, %r7029};
	shf.r.wrap.b32 	%r7031, %r6668, %r6667, 8;
	shf.r.wrap.b32 	%r7032, %r6667, %r6668, 8;
	mov.b64 	%rd10244, {%r7032, %r7031};
	xor.b64  	%rd10245, %rd10243, %rd10244;
	shr.u64 	%rd10246, %rd9695, 7;
	xor.b64  	%rd10247, %rd10245, %rd10246;
	add.s64 	%rd10248, %rd10247, %rd9658;
	add.s64 	%rd10249, %rd10248, %rd9991;
	add.s64 	%rd10250, %rd10249, %rd10242;
	add.s64 	%rd10251, %rd10250, %rd10115;
	xor.b64  	%rd10252, %rd10189, %rd10152;
	and.b64  	%rd10253, %rd10226, %rd10252;
	xor.b64  	%rd10254, %rd10253, %rd10152;
	add.s64 	%rd10255, %rd10251, %rd10254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7033,%dummy}, %rd10226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7034}, %rd10226;
	}
	shf.r.wrap.b32 	%r7035, %r7034, %r7033, 14;
	shf.r.wrap.b32 	%r7036, %r7033, %r7034, 14;
	mov.b64 	%rd10256, {%r7036, %r7035};
	shf.r.wrap.b32 	%r7037, %r7034, %r7033, 18;
	shf.r.wrap.b32 	%r7038, %r7033, %r7034, 18;
	mov.b64 	%rd10257, {%r7038, %r7037};
	xor.b64  	%rd10258, %rd10256, %rd10257;
	shf.l.wrap.b32 	%r7039, %r7033, %r7034, 23;
	shf.l.wrap.b32 	%r7040, %r7034, %r7033, 23;
	mov.b64 	%rd10259, {%r7040, %r7039};
	xor.b64  	%rd10260, %rd10258, %rd10259;
	add.s64 	%rd10261, %rd10255, %rd10260;
	add.s64 	%rd10262, %rd10261, 3322285676063803686;
	add.s64 	%rd10263, %rd10262, %rd10126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7041,%dummy}, %rd10237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7042}, %rd10237;
	}
	shf.r.wrap.b32 	%r7043, %r7042, %r7041, 28;
	shf.r.wrap.b32 	%r7044, %r7041, %r7042, 28;
	mov.b64 	%rd10264, {%r7044, %r7043};
	shf.l.wrap.b32 	%r7045, %r7041, %r7042, 30;
	shf.l.wrap.b32 	%r7046, %r7042, %r7041, 30;
	mov.b64 	%rd10265, {%r7046, %r7045};
	xor.b64  	%rd10266, %rd10264, %rd10265;
	shf.l.wrap.b32 	%r7047, %r7041, %r7042, 25;
	shf.l.wrap.b32 	%r7048, %r7042, %r7041, 25;
	mov.b64 	%rd10267, {%r7048, %r7047};
	xor.b64  	%rd10268, %rd10266, %rd10267;
	and.b64  	%rd10269, %rd10237, %rd10200;
	or.b64  	%rd10270, %rd10237, %rd10200;
	and.b64  	%rd10271, %rd10270, %rd10163;
	or.b64  	%rd10272, %rd10271, %rd10269;
	add.s64 	%rd10273, %rd10272, %rd10268;
	add.s64 	%rd10274, %rd10273, %rd10262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7049,%dummy}, %rd10213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7050}, %rd10213;
	}
	shf.r.wrap.b32 	%r7051, %r7050, %r7049, 19;
	shf.r.wrap.b32 	%r7052, %r7049, %r7050, 19;
	mov.b64 	%rd10275, {%r7052, %r7051};
	shf.l.wrap.b32 	%r7053, %r7049, %r7050, 3;
	shf.l.wrap.b32 	%r7054, %r7050, %r7049, 3;
	mov.b64 	%rd10276, {%r7054, %r7053};
	xor.b64  	%rd10277, %rd10275, %rd10276;
	shr.u64 	%rd10278, %rd10213, 6;
	xor.b64  	%rd10279, %rd10277, %rd10278;
	shf.r.wrap.b32 	%r7055, %r6696, %r6695, 1;
	shf.r.wrap.b32 	%r7056, %r6695, %r6696, 1;
	mov.b64 	%rd10280, {%r7056, %r7055};
	shf.r.wrap.b32 	%r7057, %r6696, %r6695, 8;
	shf.r.wrap.b32 	%r7058, %r6695, %r6696, 8;
	mov.b64 	%rd10281, {%r7058, %r7057};
	xor.b64  	%rd10282, %rd10280, %rd10281;
	shr.u64 	%rd10283, %rd9732, 7;
	xor.b64  	%rd10284, %rd10282, %rd10283;
	add.s64 	%rd10285, %rd10284, %rd9695;
	add.s64 	%rd10286, %rd10285, %rd10028;
	add.s64 	%rd10287, %rd10286, %rd10279;
	add.s64 	%rd10288, %rd10287, %rd10152;
	xor.b64  	%rd10289, %rd10226, %rd10189;
	and.b64  	%rd10290, %rd10263, %rd10289;
	xor.b64  	%rd10291, %rd10290, %rd10189;
	add.s64 	%rd10292, %rd10288, %rd10291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7059,%dummy}, %rd10263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7060}, %rd10263;
	}
	shf.r.wrap.b32 	%r7061, %r7060, %r7059, 14;
	shf.r.wrap.b32 	%r7062, %r7059, %r7060, 14;
	mov.b64 	%rd10293, {%r7062, %r7061};
	shf.r.wrap.b32 	%r7063, %r7060, %r7059, 18;
	shf.r.wrap.b32 	%r7064, %r7059, %r7060, 18;
	mov.b64 	%rd10294, {%r7064, %r7063};
	xor.b64  	%rd10295, %rd10293, %rd10294;
	shf.l.wrap.b32 	%r7065, %r7059, %r7060, 23;
	shf.l.wrap.b32 	%r7066, %r7060, %r7059, 23;
	mov.b64 	%rd10296, {%r7066, %r7065};
	xor.b64  	%rd10297, %rd10295, %rd10296;
	add.s64 	%rd10298, %rd10292, %rd10297;
	add.s64 	%rd10299, %rd10298, 5560940570517711597;
	add.s64 	%rd10300, %rd10299, %rd10163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7067,%dummy}, %rd10274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7068}, %rd10274;
	}
	shf.r.wrap.b32 	%r7069, %r7068, %r7067, 28;
	shf.r.wrap.b32 	%r7070, %r7067, %r7068, 28;
	mov.b64 	%rd10301, {%r7070, %r7069};
	shf.l.wrap.b32 	%r7071, %r7067, %r7068, 30;
	shf.l.wrap.b32 	%r7072, %r7068, %r7067, 30;
	mov.b64 	%rd10302, {%r7072, %r7071};
	xor.b64  	%rd10303, %rd10301, %rd10302;
	shf.l.wrap.b32 	%r7073, %r7067, %r7068, 25;
	shf.l.wrap.b32 	%r7074, %r7068, %r7067, 25;
	mov.b64 	%rd10304, {%r7074, %r7073};
	xor.b64  	%rd10305, %rd10303, %rd10304;
	and.b64  	%rd10306, %rd10274, %rd10237;
	or.b64  	%rd10307, %rd10274, %rd10237;
	and.b64  	%rd10308, %rd10307, %rd10200;
	or.b64  	%rd10309, %rd10308, %rd10306;
	add.s64 	%rd10310, %rd10309, %rd10305;
	add.s64 	%rd10311, %rd10310, %rd10299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7075,%dummy}, %rd10250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7076}, %rd10250;
	}
	shf.r.wrap.b32 	%r7077, %r7076, %r7075, 19;
	shf.r.wrap.b32 	%r7078, %r7075, %r7076, 19;
	mov.b64 	%rd10312, {%r7078, %r7077};
	shf.l.wrap.b32 	%r7079, %r7075, %r7076, 3;
	shf.l.wrap.b32 	%r7080, %r7076, %r7075, 3;
	mov.b64 	%rd10313, {%r7080, %r7079};
	xor.b64  	%rd10314, %rd10312, %rd10313;
	shr.u64 	%rd10315, %rd10250, 6;
	xor.b64  	%rd10316, %rd10314, %rd10315;
	shf.r.wrap.b32 	%r7081, %r6724, %r6723, 1;
	shf.r.wrap.b32 	%r7082, %r6723, %r6724, 1;
	mov.b64 	%rd10317, {%r7082, %r7081};
	shf.r.wrap.b32 	%r7083, %r6724, %r6723, 8;
	shf.r.wrap.b32 	%r7084, %r6723, %r6724, 8;
	mov.b64 	%rd10318, {%r7084, %r7083};
	xor.b64  	%rd10319, %rd10317, %rd10318;
	shr.u64 	%rd10320, %rd9769, 7;
	xor.b64  	%rd10321, %rd10319, %rd10320;
	add.s64 	%rd10322, %rd10321, %rd9732;
	add.s64 	%rd10323, %rd10322, %rd10065;
	add.s64 	%rd10324, %rd10323, %rd10316;
	add.s64 	%rd10325, %rd10324, %rd10189;
	xor.b64  	%rd10326, %rd10263, %rd10226;
	and.b64  	%rd10327, %rd10300, %rd10326;
	xor.b64  	%rd10328, %rd10327, %rd10226;
	add.s64 	%rd10329, %rd10325, %rd10328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7085,%dummy}, %rd10300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7086}, %rd10300;
	}
	shf.r.wrap.b32 	%r7087, %r7086, %r7085, 14;
	shf.r.wrap.b32 	%r7088, %r7085, %r7086, 14;
	mov.b64 	%rd10330, {%r7088, %r7087};
	shf.r.wrap.b32 	%r7089, %r7086, %r7085, 18;
	shf.r.wrap.b32 	%r7090, %r7085, %r7086, 18;
	mov.b64 	%rd10331, {%r7090, %r7089};
	xor.b64  	%rd10332, %rd10330, %rd10331;
	shf.l.wrap.b32 	%r7091, %r7085, %r7086, 23;
	shf.l.wrap.b32 	%r7092, %r7086, %r7085, 23;
	mov.b64 	%rd10333, {%r7092, %r7091};
	xor.b64  	%rd10334, %rd10332, %rd10333;
	add.s64 	%rd10335, %rd10329, %rd10334;
	add.s64 	%rd10336, %rd10335, 5996557281743188959;
	add.s64 	%rd10337, %rd10336, %rd10200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7093,%dummy}, %rd10311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7094}, %rd10311;
	}
	shf.r.wrap.b32 	%r7095, %r7094, %r7093, 28;
	shf.r.wrap.b32 	%r7096, %r7093, %r7094, 28;
	mov.b64 	%rd10338, {%r7096, %r7095};
	shf.l.wrap.b32 	%r7097, %r7093, %r7094, 30;
	shf.l.wrap.b32 	%r7098, %r7094, %r7093, 30;
	mov.b64 	%rd10339, {%r7098, %r7097};
	xor.b64  	%rd10340, %rd10338, %rd10339;
	shf.l.wrap.b32 	%r7099, %r7093, %r7094, 25;
	shf.l.wrap.b32 	%r7100, %r7094, %r7093, 25;
	mov.b64 	%rd10341, {%r7100, %r7099};
	xor.b64  	%rd10342, %rd10340, %rd10341;
	and.b64  	%rd10343, %rd10311, %rd10274;
	or.b64  	%rd10344, %rd10311, %rd10274;
	and.b64  	%rd10345, %rd10344, %rd10237;
	or.b64  	%rd10346, %rd10345, %rd10343;
	add.s64 	%rd10347, %rd10346, %rd10342;
	add.s64 	%rd10348, %rd10347, %rd10336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7101,%dummy}, %rd10287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7102}, %rd10287;
	}
	shf.r.wrap.b32 	%r7103, %r7102, %r7101, 19;
	shf.r.wrap.b32 	%r7104, %r7101, %r7102, 19;
	mov.b64 	%rd10349, {%r7104, %r7103};
	shf.l.wrap.b32 	%r7105, %r7101, %r7102, 3;
	shf.l.wrap.b32 	%r7106, %r7102, %r7101, 3;
	mov.b64 	%rd10350, {%r7106, %r7105};
	xor.b64  	%rd10351, %rd10349, %rd10350;
	shr.u64 	%rd10352, %rd10287, 6;
	xor.b64  	%rd10353, %rd10351, %rd10352;
	shf.r.wrap.b32 	%r7107, %r6752, %r6751, 1;
	shf.r.wrap.b32 	%r7108, %r6751, %r6752, 1;
	mov.b64 	%rd10354, {%r7108, %r7107};
	shf.r.wrap.b32 	%r7109, %r6752, %r6751, 8;
	shf.r.wrap.b32 	%r7110, %r6751, %r6752, 8;
	mov.b64 	%rd10355, {%r7110, %r7109};
	xor.b64  	%rd10356, %rd10354, %rd10355;
	shr.u64 	%rd10357, %rd9806, 7;
	xor.b64  	%rd10358, %rd10356, %rd10357;
	add.s64 	%rd10359, %rd10358, %rd9769;
	add.s64 	%rd10360, %rd10359, %rd10102;
	add.s64 	%rd10361, %rd10360, %rd10353;
	add.s64 	%rd10362, %rd10361, %rd10226;
	xor.b64  	%rd10363, %rd10300, %rd10263;
	and.b64  	%rd10364, %rd10337, %rd10363;
	xor.b64  	%rd10365, %rd10364, %rd10263;
	add.s64 	%rd10366, %rd10362, %rd10365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7111,%dummy}, %rd10337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7112}, %rd10337;
	}
	shf.r.wrap.b32 	%r7113, %r7112, %r7111, 14;
	shf.r.wrap.b32 	%r7114, %r7111, %r7112, 14;
	mov.b64 	%rd10367, {%r7114, %r7113};
	shf.r.wrap.b32 	%r7115, %r7112, %r7111, 18;
	shf.r.wrap.b32 	%r7116, %r7111, %r7112, 18;
	mov.b64 	%rd10368, {%r7116, %r7115};
	xor.b64  	%rd10369, %rd10367, %rd10368;
	shf.l.wrap.b32 	%r7117, %r7111, %r7112, 23;
	shf.l.wrap.b32 	%r7118, %r7112, %r7111, 23;
	mov.b64 	%rd10370, {%r7118, %r7117};
	xor.b64  	%rd10371, %rd10369, %rd10370;
	add.s64 	%rd10372, %rd10366, %rd10371;
	add.s64 	%rd10373, %rd10372, 7280758554555802590;
	add.s64 	%rd10374, %rd10373, %rd10237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7119,%dummy}, %rd10348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7120}, %rd10348;
	}
	shf.r.wrap.b32 	%r7121, %r7120, %r7119, 28;
	shf.r.wrap.b32 	%r7122, %r7119, %r7120, 28;
	mov.b64 	%rd10375, {%r7122, %r7121};
	shf.l.wrap.b32 	%r7123, %r7119, %r7120, 30;
	shf.l.wrap.b32 	%r7124, %r7120, %r7119, 30;
	mov.b64 	%rd10376, {%r7124, %r7123};
	xor.b64  	%rd10377, %rd10375, %rd10376;
	shf.l.wrap.b32 	%r7125, %r7119, %r7120, 25;
	shf.l.wrap.b32 	%r7126, %r7120, %r7119, 25;
	mov.b64 	%rd10378, {%r7126, %r7125};
	xor.b64  	%rd10379, %rd10377, %rd10378;
	and.b64  	%rd10380, %rd10348, %rd10311;
	or.b64  	%rd10381, %rd10348, %rd10311;
	and.b64  	%rd10382, %rd10381, %rd10274;
	or.b64  	%rd10383, %rd10382, %rd10380;
	add.s64 	%rd10384, %rd10383, %rd10379;
	add.s64 	%rd10385, %rd10384, %rd10373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7127,%dummy}, %rd10324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7128}, %rd10324;
	}
	shf.r.wrap.b32 	%r7129, %r7128, %r7127, 19;
	shf.r.wrap.b32 	%r7130, %r7127, %r7128, 19;
	mov.b64 	%rd10386, {%r7130, %r7129};
	shf.l.wrap.b32 	%r7131, %r7127, %r7128, 3;
	shf.l.wrap.b32 	%r7132, %r7128, %r7127, 3;
	mov.b64 	%rd10387, {%r7132, %r7131};
	xor.b64  	%rd10388, %rd10386, %rd10387;
	shr.u64 	%rd10389, %rd10324, 6;
	xor.b64  	%rd10390, %rd10388, %rd10389;
	shf.r.wrap.b32 	%r7133, %r6780, %r6779, 1;
	shf.r.wrap.b32 	%r7134, %r6779, %r6780, 1;
	mov.b64 	%rd10391, {%r7134, %r7133};
	shf.r.wrap.b32 	%r7135, %r6780, %r6779, 8;
	shf.r.wrap.b32 	%r7136, %r6779, %r6780, 8;
	mov.b64 	%rd10392, {%r7136, %r7135};
	xor.b64  	%rd10393, %rd10391, %rd10392;
	shr.u64 	%rd10394, %rd9843, 7;
	xor.b64  	%rd10395, %rd10393, %rd10394;
	add.s64 	%rd10396, %rd10395, %rd9806;
	add.s64 	%rd10397, %rd10396, %rd10139;
	add.s64 	%rd10398, %rd10397, %rd10390;
	add.s64 	%rd10399, %rd10398, %rd10263;
	xor.b64  	%rd10400, %rd10337, %rd10300;
	and.b64  	%rd10401, %rd10374, %rd10400;
	xor.b64  	%rd10402, %rd10401, %rd10300;
	add.s64 	%rd10403, %rd10399, %rd10402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7137,%dummy}, %rd10374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7138}, %rd10374;
	}
	shf.r.wrap.b32 	%r7139, %r7138, %r7137, 14;
	shf.r.wrap.b32 	%r7140, %r7137, %r7138, 14;
	mov.b64 	%rd10404, {%r7140, %r7139};
	shf.r.wrap.b32 	%r7141, %r7138, %r7137, 18;
	shf.r.wrap.b32 	%r7142, %r7137, %r7138, 18;
	mov.b64 	%rd10405, {%r7142, %r7141};
	xor.b64  	%rd10406, %rd10404, %rd10405;
	shf.l.wrap.b32 	%r7143, %r7137, %r7138, 23;
	shf.l.wrap.b32 	%r7144, %r7138, %r7137, 23;
	mov.b64 	%rd10407, {%r7144, %r7143};
	xor.b64  	%rd10408, %rd10406, %rd10407;
	add.s64 	%rd10409, %rd10403, %rd10408;
	add.s64 	%rd10410, %rd10409, 8532644243296465576;
	add.s64 	%rd10411, %rd10410, %rd10274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7145,%dummy}, %rd10385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7146}, %rd10385;
	}
	shf.r.wrap.b32 	%r7147, %r7146, %r7145, 28;
	shf.r.wrap.b32 	%r7148, %r7145, %r7146, 28;
	mov.b64 	%rd10412, {%r7148, %r7147};
	shf.l.wrap.b32 	%r7149, %r7145, %r7146, 30;
	shf.l.wrap.b32 	%r7150, %r7146, %r7145, 30;
	mov.b64 	%rd10413, {%r7150, %r7149};
	xor.b64  	%rd10414, %rd10412, %rd10413;
	shf.l.wrap.b32 	%r7151, %r7145, %r7146, 25;
	shf.l.wrap.b32 	%r7152, %r7146, %r7145, 25;
	mov.b64 	%rd10415, {%r7152, %r7151};
	xor.b64  	%rd10416, %rd10414, %rd10415;
	and.b64  	%rd10417, %rd10385, %rd10348;
	or.b64  	%rd10418, %rd10385, %rd10348;
	and.b64  	%rd10419, %rd10418, %rd10311;
	or.b64  	%rd10420, %rd10419, %rd10417;
	add.s64 	%rd10421, %rd10420, %rd10416;
	add.s64 	%rd10422, %rd10421, %rd10410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7153,%dummy}, %rd10361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7154}, %rd10361;
	}
	shf.r.wrap.b32 	%r7155, %r7154, %r7153, 19;
	shf.r.wrap.b32 	%r7156, %r7153, %r7154, 19;
	mov.b64 	%rd10423, {%r7156, %r7155};
	shf.l.wrap.b32 	%r7157, %r7153, %r7154, 3;
	shf.l.wrap.b32 	%r7158, %r7154, %r7153, 3;
	mov.b64 	%rd10424, {%r7158, %r7157};
	xor.b64  	%rd10425, %rd10423, %rd10424;
	shr.u64 	%rd10426, %rd10361, 6;
	xor.b64  	%rd10427, %rd10425, %rd10426;
	shf.r.wrap.b32 	%r7159, %r6808, %r6807, 1;
	shf.r.wrap.b32 	%r7160, %r6807, %r6808, 1;
	mov.b64 	%rd10428, {%r7160, %r7159};
	shf.r.wrap.b32 	%r7161, %r6808, %r6807, 8;
	shf.r.wrap.b32 	%r7162, %r6807, %r6808, 8;
	mov.b64 	%rd10429, {%r7162, %r7161};
	xor.b64  	%rd10430, %rd10428, %rd10429;
	shr.u64 	%rd10431, %rd9880, 7;
	xor.b64  	%rd10432, %rd10430, %rd10431;
	add.s64 	%rd10433, %rd10432, %rd9843;
	add.s64 	%rd10434, %rd10433, %rd10176;
	add.s64 	%rd10435, %rd10434, %rd10427;
	add.s64 	%rd10436, %rd10435, %rd10300;
	xor.b64  	%rd10437, %rd10374, %rd10337;
	and.b64  	%rd10438, %rd10411, %rd10437;
	xor.b64  	%rd10439, %rd10438, %rd10337;
	add.s64 	%rd10440, %rd10436, %rd10439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7163,%dummy}, %rd10411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7164}, %rd10411;
	}
	shf.r.wrap.b32 	%r7165, %r7164, %r7163, 14;
	shf.r.wrap.b32 	%r7166, %r7163, %r7164, 14;
	mov.b64 	%rd10441, {%r7166, %r7165};
	shf.r.wrap.b32 	%r7167, %r7164, %r7163, 18;
	shf.r.wrap.b32 	%r7168, %r7163, %r7164, 18;
	mov.b64 	%rd10442, {%r7168, %r7167};
	xor.b64  	%rd10443, %rd10441, %rd10442;
	shf.l.wrap.b32 	%r7169, %r7163, %r7164, 23;
	shf.l.wrap.b32 	%r7170, %r7164, %r7163, 23;
	mov.b64 	%rd10444, {%r7170, %r7169};
	xor.b64  	%rd10445, %rd10443, %rd10444;
	add.s64 	%rd10446, %rd10440, %rd10445;
	add.s64 	%rd10447, %rd10446, -9096487096722542874;
	add.s64 	%rd10448, %rd10447, %rd10311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7171,%dummy}, %rd10422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7172}, %rd10422;
	}
	shf.r.wrap.b32 	%r7173, %r7172, %r7171, 28;
	shf.r.wrap.b32 	%r7174, %r7171, %r7172, 28;
	mov.b64 	%rd10449, {%r7174, %r7173};
	shf.l.wrap.b32 	%r7175, %r7171, %r7172, 30;
	shf.l.wrap.b32 	%r7176, %r7172, %r7171, 30;
	mov.b64 	%rd10450, {%r7176, %r7175};
	xor.b64  	%rd10451, %rd10449, %rd10450;
	shf.l.wrap.b32 	%r7177, %r7171, %r7172, 25;
	shf.l.wrap.b32 	%r7178, %r7172, %r7171, 25;
	mov.b64 	%rd10452, {%r7178, %r7177};
	xor.b64  	%rd10453, %rd10451, %rd10452;
	and.b64  	%rd10454, %rd10422, %rd10385;
	or.b64  	%rd10455, %rd10422, %rd10385;
	and.b64  	%rd10456, %rd10455, %rd10348;
	or.b64  	%rd10457, %rd10456, %rd10454;
	add.s64 	%rd10458, %rd10457, %rd10453;
	add.s64 	%rd10459, %rd10458, %rd10447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7179,%dummy}, %rd10398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7180}, %rd10398;
	}
	shf.r.wrap.b32 	%r7181, %r7180, %r7179, 19;
	shf.r.wrap.b32 	%r7182, %r7179, %r7180, 19;
	mov.b64 	%rd10460, {%r7182, %r7181};
	shf.l.wrap.b32 	%r7183, %r7179, %r7180, 3;
	shf.l.wrap.b32 	%r7184, %r7180, %r7179, 3;
	mov.b64 	%rd10461, {%r7184, %r7183};
	xor.b64  	%rd10462, %rd10460, %rd10461;
	shr.u64 	%rd10463, %rd10398, 6;
	xor.b64  	%rd10464, %rd10462, %rd10463;
	shf.r.wrap.b32 	%r7185, %r6836, %r6835, 1;
	shf.r.wrap.b32 	%r7186, %r6835, %r6836, 1;
	mov.b64 	%rd10465, {%r7186, %r7185};
	shf.r.wrap.b32 	%r7187, %r6836, %r6835, 8;
	shf.r.wrap.b32 	%r7188, %r6835, %r6836, 8;
	mov.b64 	%rd10466, {%r7188, %r7187};
	xor.b64  	%rd10467, %rd10465, %rd10466;
	shr.u64 	%rd10468, %rd9917, 7;
	xor.b64  	%rd10469, %rd10467, %rd10468;
	add.s64 	%rd10470, %rd10469, %rd9880;
	add.s64 	%rd10471, %rd10470, %rd10213;
	add.s64 	%rd10472, %rd10471, %rd10464;
	add.s64 	%rd10473, %rd10472, %rd10337;
	xor.b64  	%rd10474, %rd10411, %rd10374;
	and.b64  	%rd10475, %rd10448, %rd10474;
	xor.b64  	%rd10476, %rd10475, %rd10374;
	add.s64 	%rd10477, %rd10473, %rd10476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7189,%dummy}, %rd10448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7190}, %rd10448;
	}
	shf.r.wrap.b32 	%r7191, %r7190, %r7189, 14;
	shf.r.wrap.b32 	%r7192, %r7189, %r7190, 14;
	mov.b64 	%rd10478, {%r7192, %r7191};
	shf.r.wrap.b32 	%r7193, %r7190, %r7189, 18;
	shf.r.wrap.b32 	%r7194, %r7189, %r7190, 18;
	mov.b64 	%rd10479, {%r7194, %r7193};
	xor.b64  	%rd10480, %rd10478, %rd10479;
	shf.l.wrap.b32 	%r7195, %r7189, %r7190, 23;
	shf.l.wrap.b32 	%r7196, %r7190, %r7189, 23;
	mov.b64 	%rd10481, {%r7196, %r7195};
	xor.b64  	%rd10482, %rd10480, %rd10481;
	add.s64 	%rd10483, %rd10477, %rd10482;
	add.s64 	%rd10484, %rd10483, -7894198246740708037;
	add.s64 	%rd10485, %rd10484, %rd10348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7197,%dummy}, %rd10459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7198}, %rd10459;
	}
	shf.r.wrap.b32 	%r7199, %r7198, %r7197, 28;
	shf.r.wrap.b32 	%r7200, %r7197, %r7198, 28;
	mov.b64 	%rd10486, {%r7200, %r7199};
	shf.l.wrap.b32 	%r7201, %r7197, %r7198, 30;
	shf.l.wrap.b32 	%r7202, %r7198, %r7197, 30;
	mov.b64 	%rd10487, {%r7202, %r7201};
	xor.b64  	%rd10488, %rd10486, %rd10487;
	shf.l.wrap.b32 	%r7203, %r7197, %r7198, 25;
	shf.l.wrap.b32 	%r7204, %r7198, %r7197, 25;
	mov.b64 	%rd10489, {%r7204, %r7203};
	xor.b64  	%rd10490, %rd10488, %rd10489;
	and.b64  	%rd10491, %rd10459, %rd10422;
	or.b64  	%rd10492, %rd10459, %rd10422;
	and.b64  	%rd10493, %rd10492, %rd10385;
	or.b64  	%rd10494, %rd10493, %rd10491;
	add.s64 	%rd10495, %rd10494, %rd10490;
	add.s64 	%rd10496, %rd10495, %rd10484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7205,%dummy}, %rd10435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7206}, %rd10435;
	}
	shf.r.wrap.b32 	%r7207, %r7206, %r7205, 19;
	shf.r.wrap.b32 	%r7208, %r7205, %r7206, 19;
	mov.b64 	%rd10497, {%r7208, %r7207};
	shf.l.wrap.b32 	%r7209, %r7205, %r7206, 3;
	shf.l.wrap.b32 	%r7210, %r7206, %r7205, 3;
	mov.b64 	%rd10498, {%r7210, %r7209};
	xor.b64  	%rd10499, %rd10497, %rd10498;
	shr.u64 	%rd10500, %rd10435, 6;
	xor.b64  	%rd10501, %rd10499, %rd10500;
	shf.r.wrap.b32 	%r7211, %r6864, %r6863, 1;
	shf.r.wrap.b32 	%r7212, %r6863, %r6864, 1;
	mov.b64 	%rd10502, {%r7212, %r7211};
	shf.r.wrap.b32 	%r7213, %r6864, %r6863, 8;
	shf.r.wrap.b32 	%r7214, %r6863, %r6864, 8;
	mov.b64 	%rd10503, {%r7214, %r7213};
	xor.b64  	%rd10504, %rd10502, %rd10503;
	shr.u64 	%rd10505, %rd9954, 7;
	xor.b64  	%rd10506, %rd10504, %rd10505;
	add.s64 	%rd10507, %rd10506, %rd9917;
	add.s64 	%rd10508, %rd10507, %rd10250;
	add.s64 	%rd10509, %rd10508, %rd10501;
	add.s64 	%rd10510, %rd10509, %rd10374;
	xor.b64  	%rd10511, %rd10448, %rd10411;
	and.b64  	%rd10512, %rd10485, %rd10511;
	xor.b64  	%rd10513, %rd10512, %rd10411;
	add.s64 	%rd10514, %rd10510, %rd10513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7215,%dummy}, %rd10485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7216}, %rd10485;
	}
	shf.r.wrap.b32 	%r7217, %r7216, %r7215, 14;
	shf.r.wrap.b32 	%r7218, %r7215, %r7216, 14;
	mov.b64 	%rd10515, {%r7218, %r7217};
	shf.r.wrap.b32 	%r7219, %r7216, %r7215, 18;
	shf.r.wrap.b32 	%r7220, %r7215, %r7216, 18;
	mov.b64 	%rd10516, {%r7220, %r7219};
	xor.b64  	%rd10517, %rd10515, %rd10516;
	shf.l.wrap.b32 	%r7221, %r7215, %r7216, 23;
	shf.l.wrap.b32 	%r7222, %r7216, %r7215, 23;
	mov.b64 	%rd10518, {%r7222, %r7221};
	xor.b64  	%rd10519, %rd10517, %rd10518;
	add.s64 	%rd10520, %rd10514, %rd10519;
	add.s64 	%rd10521, %rd10520, -6719396339535248540;
	add.s64 	%rd10522, %rd10521, %rd10385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7223,%dummy}, %rd10496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7224}, %rd10496;
	}
	shf.r.wrap.b32 	%r7225, %r7224, %r7223, 28;
	shf.r.wrap.b32 	%r7226, %r7223, %r7224, 28;
	mov.b64 	%rd10523, {%r7226, %r7225};
	shf.l.wrap.b32 	%r7227, %r7223, %r7224, 30;
	shf.l.wrap.b32 	%r7228, %r7224, %r7223, 30;
	mov.b64 	%rd10524, {%r7228, %r7227};
	xor.b64  	%rd10525, %rd10523, %rd10524;
	shf.l.wrap.b32 	%r7229, %r7223, %r7224, 25;
	shf.l.wrap.b32 	%r7230, %r7224, %r7223, 25;
	mov.b64 	%rd10526, {%r7230, %r7229};
	xor.b64  	%rd10527, %rd10525, %rd10526;
	and.b64  	%rd10528, %rd10496, %rd10459;
	or.b64  	%rd10529, %rd10496, %rd10459;
	and.b64  	%rd10530, %rd10529, %rd10422;
	or.b64  	%rd10531, %rd10530, %rd10528;
	add.s64 	%rd10532, %rd10531, %rd10527;
	add.s64 	%rd10533, %rd10532, %rd10521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7231,%dummy}, %rd10472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7232}, %rd10472;
	}
	shf.r.wrap.b32 	%r7233, %r7232, %r7231, 19;
	shf.r.wrap.b32 	%r7234, %r7231, %r7232, 19;
	mov.b64 	%rd10534, {%r7234, %r7233};
	shf.l.wrap.b32 	%r7235, %r7231, %r7232, 3;
	shf.l.wrap.b32 	%r7236, %r7232, %r7231, 3;
	mov.b64 	%rd10535, {%r7236, %r7235};
	xor.b64  	%rd10536, %rd10534, %rd10535;
	shr.u64 	%rd10537, %rd10472, 6;
	xor.b64  	%rd10538, %rd10536, %rd10537;
	shf.r.wrap.b32 	%r7237, %r6892, %r6891, 1;
	shf.r.wrap.b32 	%r7238, %r6891, %r6892, 1;
	mov.b64 	%rd10539, {%r7238, %r7237};
	shf.r.wrap.b32 	%r7239, %r6892, %r6891, 8;
	shf.r.wrap.b32 	%r7240, %r6891, %r6892, 8;
	mov.b64 	%rd10540, {%r7240, %r7239};
	xor.b64  	%rd10541, %rd10539, %rd10540;
	shr.u64 	%rd10542, %rd9991, 7;
	xor.b64  	%rd10543, %rd10541, %rd10542;
	add.s64 	%rd10544, %rd10543, %rd9954;
	add.s64 	%rd10545, %rd10544, %rd10287;
	add.s64 	%rd10546, %rd10545, %rd10538;
	add.s64 	%rd10547, %rd10546, %rd10411;
	xor.b64  	%rd10548, %rd10485, %rd10448;
	and.b64  	%rd10549, %rd10522, %rd10548;
	xor.b64  	%rd10550, %rd10549, %rd10448;
	add.s64 	%rd10551, %rd10547, %rd10550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7241,%dummy}, %rd10522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7242}, %rd10522;
	}
	shf.r.wrap.b32 	%r7243, %r7242, %r7241, 14;
	shf.r.wrap.b32 	%r7244, %r7241, %r7242, 14;
	mov.b64 	%rd10552, {%r7244, %r7243};
	shf.r.wrap.b32 	%r7245, %r7242, %r7241, 18;
	shf.r.wrap.b32 	%r7246, %r7241, %r7242, 18;
	mov.b64 	%rd10553, {%r7246, %r7245};
	xor.b64  	%rd10554, %rd10552, %rd10553;
	shf.l.wrap.b32 	%r7247, %r7241, %r7242, 23;
	shf.l.wrap.b32 	%r7248, %r7242, %r7241, 23;
	mov.b64 	%rd10555, {%r7248, %r7247};
	xor.b64  	%rd10556, %rd10554, %rd10555;
	add.s64 	%rd10557, %rd10551, %rd10556;
	add.s64 	%rd10558, %rd10557, -6333637450476146687;
	add.s64 	%rd10559, %rd10558, %rd10422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7249,%dummy}, %rd10533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7250}, %rd10533;
	}
	shf.r.wrap.b32 	%r7251, %r7250, %r7249, 28;
	shf.r.wrap.b32 	%r7252, %r7249, %r7250, 28;
	mov.b64 	%rd10560, {%r7252, %r7251};
	shf.l.wrap.b32 	%r7253, %r7249, %r7250, 30;
	shf.l.wrap.b32 	%r7254, %r7250, %r7249, 30;
	mov.b64 	%rd10561, {%r7254, %r7253};
	xor.b64  	%rd10562, %rd10560, %rd10561;
	shf.l.wrap.b32 	%r7255, %r7249, %r7250, 25;
	shf.l.wrap.b32 	%r7256, %r7250, %r7249, 25;
	mov.b64 	%rd10563, {%r7256, %r7255};
	xor.b64  	%rd10564, %rd10562, %rd10563;
	and.b64  	%rd10565, %rd10533, %rd10496;
	or.b64  	%rd10566, %rd10533, %rd10496;
	and.b64  	%rd10567, %rd10566, %rd10459;
	or.b64  	%rd10568, %rd10567, %rd10565;
	add.s64 	%rd10569, %rd10568, %rd10564;
	add.s64 	%rd10570, %rd10569, %rd10558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7257,%dummy}, %rd10509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7258}, %rd10509;
	}
	shf.r.wrap.b32 	%r7259, %r7258, %r7257, 19;
	shf.r.wrap.b32 	%r7260, %r7257, %r7258, 19;
	mov.b64 	%rd10571, {%r7260, %r7259};
	shf.l.wrap.b32 	%r7261, %r7257, %r7258, 3;
	shf.l.wrap.b32 	%r7262, %r7258, %r7257, 3;
	mov.b64 	%rd10572, {%r7262, %r7261};
	xor.b64  	%rd10573, %rd10571, %rd10572;
	shr.u64 	%rd10574, %rd10509, 6;
	xor.b64  	%rd10575, %rd10573, %rd10574;
	shf.r.wrap.b32 	%r7263, %r6920, %r6919, 1;
	shf.r.wrap.b32 	%r7264, %r6919, %r6920, 1;
	mov.b64 	%rd10576, {%r7264, %r7263};
	shf.r.wrap.b32 	%r7265, %r6920, %r6919, 8;
	shf.r.wrap.b32 	%r7266, %r6919, %r6920, 8;
	mov.b64 	%rd10577, {%r7266, %r7265};
	xor.b64  	%rd10578, %rd10576, %rd10577;
	shr.u64 	%rd10579, %rd10028, 7;
	xor.b64  	%rd10580, %rd10578, %rd10579;
	add.s64 	%rd10581, %rd10580, %rd9991;
	add.s64 	%rd10582, %rd10581, %rd10324;
	add.s64 	%rd10583, %rd10582, %rd10575;
	add.s64 	%rd10584, %rd10583, %rd10448;
	xor.b64  	%rd10585, %rd10522, %rd10485;
	and.b64  	%rd10586, %rd10559, %rd10585;
	xor.b64  	%rd10587, %rd10586, %rd10485;
	add.s64 	%rd10588, %rd10584, %rd10587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7267,%dummy}, %rd10559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7268}, %rd10559;
	}
	shf.r.wrap.b32 	%r7269, %r7268, %r7267, 14;
	shf.r.wrap.b32 	%r7270, %r7267, %r7268, 14;
	mov.b64 	%rd10589, {%r7270, %r7269};
	shf.r.wrap.b32 	%r7271, %r7268, %r7267, 18;
	shf.r.wrap.b32 	%r7272, %r7267, %r7268, 18;
	mov.b64 	%rd10590, {%r7272, %r7271};
	xor.b64  	%rd10591, %rd10589, %rd10590;
	shf.l.wrap.b32 	%r7273, %r7267, %r7268, 23;
	shf.l.wrap.b32 	%r7274, %r7268, %r7267, 23;
	mov.b64 	%rd10592, {%r7274, %r7273};
	xor.b64  	%rd10593, %rd10591, %rd10592;
	add.s64 	%rd10594, %rd10588, %rd10593;
	add.s64 	%rd10595, %rd10594, -4446306890439682159;
	add.s64 	%rd10596, %rd10595, %rd10459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7275,%dummy}, %rd10570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7276}, %rd10570;
	}
	shf.r.wrap.b32 	%r7277, %r7276, %r7275, 28;
	shf.r.wrap.b32 	%r7278, %r7275, %r7276, 28;
	mov.b64 	%rd10597, {%r7278, %r7277};
	shf.l.wrap.b32 	%r7279, %r7275, %r7276, 30;
	shf.l.wrap.b32 	%r7280, %r7276, %r7275, 30;
	mov.b64 	%rd10598, {%r7280, %r7279};
	xor.b64  	%rd10599, %rd10597, %rd10598;
	shf.l.wrap.b32 	%r7281, %r7275, %r7276, 25;
	shf.l.wrap.b32 	%r7282, %r7276, %r7275, 25;
	mov.b64 	%rd10600, {%r7282, %r7281};
	xor.b64  	%rd10601, %rd10599, %rd10600;
	and.b64  	%rd10602, %rd10570, %rd10533;
	or.b64  	%rd10603, %rd10570, %rd10533;
	and.b64  	%rd10604, %rd10603, %rd10496;
	or.b64  	%rd10605, %rd10604, %rd10602;
	add.s64 	%rd10606, %rd10605, %rd10601;
	add.s64 	%rd10607, %rd10606, %rd10595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7283,%dummy}, %rd10546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7284}, %rd10546;
	}
	shf.r.wrap.b32 	%r7285, %r7284, %r7283, 19;
	shf.r.wrap.b32 	%r7286, %r7283, %r7284, 19;
	mov.b64 	%rd10608, {%r7286, %r7285};
	shf.l.wrap.b32 	%r7287, %r7283, %r7284, 3;
	shf.l.wrap.b32 	%r7288, %r7284, %r7283, 3;
	mov.b64 	%rd10609, {%r7288, %r7287};
	xor.b64  	%rd10610, %rd10608, %rd10609;
	shr.u64 	%rd10611, %rd10546, 6;
	xor.b64  	%rd10612, %rd10610, %rd10611;
	shf.r.wrap.b32 	%r7289, %r6946, %r6945, 1;
	shf.r.wrap.b32 	%r7290, %r6945, %r6946, 1;
	mov.b64 	%rd10613, {%r7290, %r7289};
	shf.r.wrap.b32 	%r7291, %r6946, %r6945, 8;
	shf.r.wrap.b32 	%r7292, %r6945, %r6946, 8;
	mov.b64 	%rd10614, {%r7292, %r7291};
	xor.b64  	%rd10615, %rd10613, %rd10614;
	shr.u64 	%rd10616, %rd10065, 7;
	xor.b64  	%rd10617, %rd10615, %rd10616;
	add.s64 	%rd10618, %rd10617, %rd10028;
	add.s64 	%rd10619, %rd10618, %rd10361;
	add.s64 	%rd10620, %rd10619, %rd10612;
	add.s64 	%rd10621, %rd10620, %rd10485;
	xor.b64  	%rd10622, %rd10559, %rd10522;
	and.b64  	%rd10623, %rd10596, %rd10622;
	xor.b64  	%rd10624, %rd10623, %rd10522;
	add.s64 	%rd10625, %rd10621, %rd10624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7293,%dummy}, %rd10596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7294}, %rd10596;
	}
	shf.r.wrap.b32 	%r7295, %r7294, %r7293, 14;
	shf.r.wrap.b32 	%r7296, %r7293, %r7294, 14;
	mov.b64 	%rd10626, {%r7296, %r7295};
	shf.r.wrap.b32 	%r7297, %r7294, %r7293, 18;
	shf.r.wrap.b32 	%r7298, %r7293, %r7294, 18;
	mov.b64 	%rd10627, {%r7298, %r7297};
	xor.b64  	%rd10628, %rd10626, %rd10627;
	shf.l.wrap.b32 	%r7299, %r7293, %r7294, 23;
	shf.l.wrap.b32 	%r7300, %r7294, %r7293, 23;
	mov.b64 	%rd10629, {%r7300, %r7299};
	xor.b64  	%rd10630, %rd10628, %rd10629;
	add.s64 	%rd10631, %rd10625, %rd10630;
	add.s64 	%rd10632, %rd10631, -4076793802049405392;
	add.s64 	%rd10633, %rd10632, %rd10496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7301,%dummy}, %rd10607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7302}, %rd10607;
	}
	shf.r.wrap.b32 	%r7303, %r7302, %r7301, 28;
	shf.r.wrap.b32 	%r7304, %r7301, %r7302, 28;
	mov.b64 	%rd10634, {%r7304, %r7303};
	shf.l.wrap.b32 	%r7305, %r7301, %r7302, 30;
	shf.l.wrap.b32 	%r7306, %r7302, %r7301, 30;
	mov.b64 	%rd10635, {%r7306, %r7305};
	xor.b64  	%rd10636, %rd10634, %rd10635;
	shf.l.wrap.b32 	%r7307, %r7301, %r7302, 25;
	shf.l.wrap.b32 	%r7308, %r7302, %r7301, 25;
	mov.b64 	%rd10637, {%r7308, %r7307};
	xor.b64  	%rd10638, %rd10636, %rd10637;
	and.b64  	%rd10639, %rd10607, %rd10570;
	or.b64  	%rd10640, %rd10607, %rd10570;
	and.b64  	%rd10641, %rd10640, %rd10533;
	or.b64  	%rd10642, %rd10641, %rd10639;
	add.s64 	%rd10643, %rd10642, %rd10638;
	add.s64 	%rd10644, %rd10643, %rd10632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7309,%dummy}, %rd10583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7310}, %rd10583;
	}
	shf.r.wrap.b32 	%r7311, %r7310, %r7309, 19;
	shf.r.wrap.b32 	%r7312, %r7309, %r7310, 19;
	mov.b64 	%rd10645, {%r7312, %r7311};
	shf.l.wrap.b32 	%r7313, %r7309, %r7310, 3;
	shf.l.wrap.b32 	%r7314, %r7310, %r7309, 3;
	mov.b64 	%rd10646, {%r7314, %r7313};
	xor.b64  	%rd10647, %rd10645, %rd10646;
	shr.u64 	%rd10648, %rd10583, 6;
	xor.b64  	%rd10649, %rd10647, %rd10648;
	shf.r.wrap.b32 	%r7315, %r6972, %r6971, 1;
	shf.r.wrap.b32 	%r7316, %r6971, %r6972, 1;
	mov.b64 	%rd10650, {%r7316, %r7315};
	shf.r.wrap.b32 	%r7317, %r6972, %r6971, 8;
	shf.r.wrap.b32 	%r7318, %r6971, %r6972, 8;
	mov.b64 	%rd10651, {%r7318, %r7317};
	xor.b64  	%rd10652, %rd10650, %rd10651;
	shr.u64 	%rd10653, %rd10102, 7;
	xor.b64  	%rd10654, %rd10652, %rd10653;
	add.s64 	%rd10655, %rd10654, %rd10065;
	add.s64 	%rd10656, %rd10655, %rd10398;
	add.s64 	%rd10657, %rd10656, %rd10649;
	add.s64 	%rd10658, %rd10657, %rd10522;
	xor.b64  	%rd10659, %rd10596, %rd10559;
	and.b64  	%rd10660, %rd10633, %rd10659;
	xor.b64  	%rd10661, %rd10660, %rd10559;
	add.s64 	%rd10662, %rd10658, %rd10661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7319,%dummy}, %rd10633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7320}, %rd10633;
	}
	shf.r.wrap.b32 	%r7321, %r7320, %r7319, 14;
	shf.r.wrap.b32 	%r7322, %r7319, %r7320, 14;
	mov.b64 	%rd10663, {%r7322, %r7321};
	shf.r.wrap.b32 	%r7323, %r7320, %r7319, 18;
	shf.r.wrap.b32 	%r7324, %r7319, %r7320, 18;
	mov.b64 	%rd10664, {%r7324, %r7323};
	xor.b64  	%rd10665, %rd10663, %rd10664;
	shf.l.wrap.b32 	%r7325, %r7319, %r7320, 23;
	shf.l.wrap.b32 	%r7326, %r7320, %r7319, 23;
	mov.b64 	%rd10666, {%r7326, %r7325};
	xor.b64  	%rd10667, %rd10665, %rd10666;
	add.s64 	%rd10668, %rd10662, %rd10667;
	add.s64 	%rd10669, %rd10668, -3345356375505022440;
	add.s64 	%rd10670, %rd10669, %rd10533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7327,%dummy}, %rd10644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7328}, %rd10644;
	}
	shf.r.wrap.b32 	%r7329, %r7328, %r7327, 28;
	shf.r.wrap.b32 	%r7330, %r7327, %r7328, 28;
	mov.b64 	%rd10671, {%r7330, %r7329};
	shf.l.wrap.b32 	%r7331, %r7327, %r7328, 30;
	shf.l.wrap.b32 	%r7332, %r7328, %r7327, 30;
	mov.b64 	%rd10672, {%r7332, %r7331};
	xor.b64  	%rd10673, %rd10671, %rd10672;
	shf.l.wrap.b32 	%r7333, %r7327, %r7328, 25;
	shf.l.wrap.b32 	%r7334, %r7328, %r7327, 25;
	mov.b64 	%rd10674, {%r7334, %r7333};
	xor.b64  	%rd10675, %rd10673, %rd10674;
	and.b64  	%rd10676, %rd10644, %rd10607;
	or.b64  	%rd10677, %rd10644, %rd10607;
	and.b64  	%rd10678, %rd10677, %rd10570;
	or.b64  	%rd10679, %rd10678, %rd10676;
	add.s64 	%rd10680, %rd10679, %rd10675;
	add.s64 	%rd10681, %rd10680, %rd10669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7335,%dummy}, %rd10620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7336}, %rd10620;
	}
	shf.r.wrap.b32 	%r7337, %r7336, %r7335, 19;
	shf.r.wrap.b32 	%r7338, %r7335, %r7336, 19;
	mov.b64 	%rd10682, {%r7338, %r7337};
	shf.l.wrap.b32 	%r7339, %r7335, %r7336, 3;
	shf.l.wrap.b32 	%r7340, %r7336, %r7335, 3;
	mov.b64 	%rd10683, {%r7340, %r7339};
	xor.b64  	%rd10684, %rd10682, %rd10683;
	shr.u64 	%rd10685, %rd10620, 6;
	xor.b64  	%rd10686, %rd10684, %rd10685;
	shf.r.wrap.b32 	%r7341, %r6998, %r6997, 1;
	shf.r.wrap.b32 	%r7342, %r6997, %r6998, 1;
	mov.b64 	%rd10687, {%r7342, %r7341};
	shf.r.wrap.b32 	%r7343, %r6998, %r6997, 8;
	shf.r.wrap.b32 	%r7344, %r6997, %r6998, 8;
	mov.b64 	%rd10688, {%r7344, %r7343};
	xor.b64  	%rd10689, %rd10687, %rd10688;
	shr.u64 	%rd10690, %rd10139, 7;
	xor.b64  	%rd10691, %rd10689, %rd10690;
	add.s64 	%rd10692, %rd10691, %rd10102;
	add.s64 	%rd10693, %rd10692, %rd10435;
	add.s64 	%rd10694, %rd10693, %rd10686;
	add.s64 	%rd10695, %rd10694, %rd10559;
	xor.b64  	%rd10696, %rd10633, %rd10596;
	and.b64  	%rd10697, %rd10670, %rd10696;
	xor.b64  	%rd10698, %rd10697, %rd10596;
	add.s64 	%rd10699, %rd10695, %rd10698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7345,%dummy}, %rd10670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7346}, %rd10670;
	}
	shf.r.wrap.b32 	%r7347, %r7346, %r7345, 14;
	shf.r.wrap.b32 	%r7348, %r7345, %r7346, 14;
	mov.b64 	%rd10700, {%r7348, %r7347};
	shf.r.wrap.b32 	%r7349, %r7346, %r7345, 18;
	shf.r.wrap.b32 	%r7350, %r7345, %r7346, 18;
	mov.b64 	%rd10701, {%r7350, %r7349};
	xor.b64  	%rd10702, %rd10700, %rd10701;
	shf.l.wrap.b32 	%r7351, %r7345, %r7346, 23;
	shf.l.wrap.b32 	%r7352, %r7346, %r7345, 23;
	mov.b64 	%rd10703, {%r7352, %r7351};
	xor.b64  	%rd10704, %rd10702, %rd10703;
	add.s64 	%rd10705, %rd10699, %rd10704;
	add.s64 	%rd10706, %rd10705, -2983346525034927856;
	add.s64 	%rd10707, %rd10706, %rd10570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7353,%dummy}, %rd10681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7354}, %rd10681;
	}
	shf.r.wrap.b32 	%r7355, %r7354, %r7353, 28;
	shf.r.wrap.b32 	%r7356, %r7353, %r7354, 28;
	mov.b64 	%rd10708, {%r7356, %r7355};
	shf.l.wrap.b32 	%r7357, %r7353, %r7354, 30;
	shf.l.wrap.b32 	%r7358, %r7354, %r7353, 30;
	mov.b64 	%rd10709, {%r7358, %r7357};
	xor.b64  	%rd10710, %rd10708, %rd10709;
	shf.l.wrap.b32 	%r7359, %r7353, %r7354, 25;
	shf.l.wrap.b32 	%r7360, %r7354, %r7353, 25;
	mov.b64 	%rd10711, {%r7360, %r7359};
	xor.b64  	%rd10712, %rd10710, %rd10711;
	and.b64  	%rd10713, %rd10681, %rd10644;
	or.b64  	%rd10714, %rd10681, %rd10644;
	and.b64  	%rd10715, %rd10714, %rd10607;
	or.b64  	%rd10716, %rd10715, %rd10713;
	add.s64 	%rd10717, %rd10716, %rd10712;
	add.s64 	%rd10718, %rd10717, %rd10706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7361,%dummy}, %rd10657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7362}, %rd10657;
	}
	shf.r.wrap.b32 	%r7363, %r7362, %r7361, 19;
	shf.r.wrap.b32 	%r7364, %r7361, %r7362, 19;
	mov.b64 	%rd10719, {%r7364, %r7363};
	shf.l.wrap.b32 	%r7365, %r7361, %r7362, 3;
	shf.l.wrap.b32 	%r7366, %r7362, %r7361, 3;
	mov.b64 	%rd10720, {%r7366, %r7365};
	xor.b64  	%rd10721, %rd10719, %rd10720;
	shr.u64 	%rd10722, %rd10657, 6;
	xor.b64  	%rd10723, %rd10721, %rd10722;
	shf.r.wrap.b32 	%r7367, %r7024, %r7023, 1;
	shf.r.wrap.b32 	%r7368, %r7023, %r7024, 1;
	mov.b64 	%rd10724, {%r7368, %r7367};
	shf.r.wrap.b32 	%r7369, %r7024, %r7023, 8;
	shf.r.wrap.b32 	%r7370, %r7023, %r7024, 8;
	mov.b64 	%rd10725, {%r7370, %r7369};
	xor.b64  	%rd10726, %rd10724, %rd10725;
	shr.u64 	%rd10727, %rd10176, 7;
	xor.b64  	%rd10728, %rd10726, %rd10727;
	add.s64 	%rd10729, %rd10728, %rd10139;
	add.s64 	%rd10730, %rd10729, %rd10472;
	add.s64 	%rd10731, %rd10730, %rd10723;
	add.s64 	%rd10732, %rd10731, %rd10596;
	xor.b64  	%rd10733, %rd10670, %rd10633;
	and.b64  	%rd10734, %rd10707, %rd10733;
	xor.b64  	%rd10735, %rd10734, %rd10633;
	add.s64 	%rd10736, %rd10732, %rd10735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7371,%dummy}, %rd10707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7372}, %rd10707;
	}
	shf.r.wrap.b32 	%r7373, %r7372, %r7371, 14;
	shf.r.wrap.b32 	%r7374, %r7371, %r7372, 14;
	mov.b64 	%rd10737, {%r7374, %r7373};
	shf.r.wrap.b32 	%r7375, %r7372, %r7371, 18;
	shf.r.wrap.b32 	%r7376, %r7371, %r7372, 18;
	mov.b64 	%rd10738, {%r7376, %r7375};
	xor.b64  	%rd10739, %rd10737, %rd10738;
	shf.l.wrap.b32 	%r7377, %r7371, %r7372, 23;
	shf.l.wrap.b32 	%r7378, %r7372, %r7371, 23;
	mov.b64 	%rd10740, {%r7378, %r7377};
	xor.b64  	%rd10741, %rd10739, %rd10740;
	add.s64 	%rd10742, %rd10736, %rd10741;
	add.s64 	%rd10743, %rd10742, -860691631967231958;
	add.s64 	%rd10744, %rd10743, %rd10607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7379,%dummy}, %rd10718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7380}, %rd10718;
	}
	shf.r.wrap.b32 	%r7381, %r7380, %r7379, 28;
	shf.r.wrap.b32 	%r7382, %r7379, %r7380, 28;
	mov.b64 	%rd10745, {%r7382, %r7381};
	shf.l.wrap.b32 	%r7383, %r7379, %r7380, 30;
	shf.l.wrap.b32 	%r7384, %r7380, %r7379, 30;
	mov.b64 	%rd10746, {%r7384, %r7383};
	xor.b64  	%rd10747, %rd10745, %rd10746;
	shf.l.wrap.b32 	%r7385, %r7379, %r7380, 25;
	shf.l.wrap.b32 	%r7386, %r7380, %r7379, 25;
	mov.b64 	%rd10748, {%r7386, %r7385};
	xor.b64  	%rd10749, %rd10747, %rd10748;
	and.b64  	%rd10750, %rd10718, %rd10681;
	or.b64  	%rd10751, %rd10718, %rd10681;
	and.b64  	%rd10752, %rd10751, %rd10644;
	or.b64  	%rd10753, %rd10752, %rd10750;
	add.s64 	%rd10754, %rd10753, %rd10749;
	add.s64 	%rd10755, %rd10754, %rd10743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7387,%dummy}, %rd10694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7388}, %rd10694;
	}
	shf.r.wrap.b32 	%r7389, %r7388, %r7387, 19;
	shf.r.wrap.b32 	%r7390, %r7387, %r7388, 19;
	mov.b64 	%rd10756, {%r7390, %r7389};
	shf.l.wrap.b32 	%r7391, %r7387, %r7388, 3;
	shf.l.wrap.b32 	%r7392, %r7388, %r7387, 3;
	mov.b64 	%rd10757, {%r7392, %r7391};
	xor.b64  	%rd10758, %rd10756, %rd10757;
	shr.u64 	%rd10759, %rd10694, 6;
	xor.b64  	%rd10760, %rd10758, %rd10759;
	shf.r.wrap.b32 	%r7393, %r7050, %r7049, 1;
	shf.r.wrap.b32 	%r7394, %r7049, %r7050, 1;
	mov.b64 	%rd10761, {%r7394, %r7393};
	shf.r.wrap.b32 	%r7395, %r7050, %r7049, 8;
	shf.r.wrap.b32 	%r7396, %r7049, %r7050, 8;
	mov.b64 	%rd10762, {%r7396, %r7395};
	xor.b64  	%rd10763, %rd10761, %rd10762;
	shr.u64 	%rd10764, %rd10213, 7;
	xor.b64  	%rd10765, %rd10763, %rd10764;
	add.s64 	%rd10766, %rd10765, %rd10176;
	add.s64 	%rd10767, %rd10766, %rd10509;
	add.s64 	%rd10768, %rd10767, %rd10760;
	add.s64 	%rd10769, %rd10768, %rd10633;
	xor.b64  	%rd10770, %rd10707, %rd10670;
	and.b64  	%rd10771, %rd10744, %rd10770;
	xor.b64  	%rd10772, %rd10771, %rd10670;
	add.s64 	%rd10773, %rd10769, %rd10772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7397,%dummy}, %rd10744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7398}, %rd10744;
	}
	shf.r.wrap.b32 	%r7399, %r7398, %r7397, 14;
	shf.r.wrap.b32 	%r7400, %r7397, %r7398, 14;
	mov.b64 	%rd10774, {%r7400, %r7399};
	shf.r.wrap.b32 	%r7401, %r7398, %r7397, 18;
	shf.r.wrap.b32 	%r7402, %r7397, %r7398, 18;
	mov.b64 	%rd10775, {%r7402, %r7401};
	xor.b64  	%rd10776, %rd10774, %rd10775;
	shf.l.wrap.b32 	%r7403, %r7397, %r7398, 23;
	shf.l.wrap.b32 	%r7404, %r7398, %r7397, 23;
	mov.b64 	%rd10777, {%r7404, %r7403};
	xor.b64  	%rd10778, %rd10776, %rd10777;
	add.s64 	%rd10779, %rd10773, %rd10778;
	add.s64 	%rd10780, %rd10779, 1182934255886127544;
	add.s64 	%rd10781, %rd10780, %rd10644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7405,%dummy}, %rd10755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7406}, %rd10755;
	}
	shf.r.wrap.b32 	%r7407, %r7406, %r7405, 28;
	shf.r.wrap.b32 	%r7408, %r7405, %r7406, 28;
	mov.b64 	%rd10782, {%r7408, %r7407};
	shf.l.wrap.b32 	%r7409, %r7405, %r7406, 30;
	shf.l.wrap.b32 	%r7410, %r7406, %r7405, 30;
	mov.b64 	%rd10783, {%r7410, %r7409};
	xor.b64  	%rd10784, %rd10782, %rd10783;
	shf.l.wrap.b32 	%r7411, %r7405, %r7406, 25;
	shf.l.wrap.b32 	%r7412, %r7406, %r7405, 25;
	mov.b64 	%rd10785, {%r7412, %r7411};
	xor.b64  	%rd10786, %rd10784, %rd10785;
	and.b64  	%rd10787, %rd10755, %rd10718;
	or.b64  	%rd10788, %rd10755, %rd10718;
	and.b64  	%rd10789, %rd10788, %rd10681;
	or.b64  	%rd10790, %rd10789, %rd10787;
	add.s64 	%rd10791, %rd10790, %rd10786;
	add.s64 	%rd10792, %rd10791, %rd10780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7413,%dummy}, %rd10731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7414}, %rd10731;
	}
	shf.r.wrap.b32 	%r7415, %r7414, %r7413, 19;
	shf.r.wrap.b32 	%r7416, %r7413, %r7414, 19;
	mov.b64 	%rd10793, {%r7416, %r7415};
	shf.l.wrap.b32 	%r7417, %r7413, %r7414, 3;
	shf.l.wrap.b32 	%r7418, %r7414, %r7413, 3;
	mov.b64 	%rd10794, {%r7418, %r7417};
	xor.b64  	%rd10795, %rd10793, %rd10794;
	shr.u64 	%rd10796, %rd10731, 6;
	xor.b64  	%rd10797, %rd10795, %rd10796;
	shf.r.wrap.b32 	%r7419, %r7076, %r7075, 1;
	shf.r.wrap.b32 	%r7420, %r7075, %r7076, 1;
	mov.b64 	%rd10798, {%r7420, %r7419};
	shf.r.wrap.b32 	%r7421, %r7076, %r7075, 8;
	shf.r.wrap.b32 	%r7422, %r7075, %r7076, 8;
	mov.b64 	%rd10799, {%r7422, %r7421};
	xor.b64  	%rd10800, %rd10798, %rd10799;
	shr.u64 	%rd10801, %rd10250, 7;
	xor.b64  	%rd10802, %rd10800, %rd10801;
	add.s64 	%rd10803, %rd10802, %rd10213;
	add.s64 	%rd10804, %rd10803, %rd10546;
	add.s64 	%rd10805, %rd10804, %rd10797;
	add.s64 	%rd10806, %rd10805, %rd10670;
	xor.b64  	%rd10807, %rd10744, %rd10707;
	and.b64  	%rd10808, %rd10781, %rd10807;
	xor.b64  	%rd10809, %rd10808, %rd10707;
	add.s64 	%rd10810, %rd10806, %rd10809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7423,%dummy}, %rd10781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7424}, %rd10781;
	}
	shf.r.wrap.b32 	%r7425, %r7424, %r7423, 14;
	shf.r.wrap.b32 	%r7426, %r7423, %r7424, 14;
	mov.b64 	%rd10811, {%r7426, %r7425};
	shf.r.wrap.b32 	%r7427, %r7424, %r7423, 18;
	shf.r.wrap.b32 	%r7428, %r7423, %r7424, 18;
	mov.b64 	%rd10812, {%r7428, %r7427};
	xor.b64  	%rd10813, %rd10811, %rd10812;
	shf.l.wrap.b32 	%r7429, %r7423, %r7424, 23;
	shf.l.wrap.b32 	%r7430, %r7424, %r7423, 23;
	mov.b64 	%rd10814, {%r7430, %r7429};
	xor.b64  	%rd10815, %rd10813, %rd10814;
	add.s64 	%rd10816, %rd10810, %rd10815;
	add.s64 	%rd10817, %rd10816, 1847814050463011016;
	add.s64 	%rd10818, %rd10817, %rd10681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7431,%dummy}, %rd10792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7432}, %rd10792;
	}
	shf.r.wrap.b32 	%r7433, %r7432, %r7431, 28;
	shf.r.wrap.b32 	%r7434, %r7431, %r7432, 28;
	mov.b64 	%rd10819, {%r7434, %r7433};
	shf.l.wrap.b32 	%r7435, %r7431, %r7432, 30;
	shf.l.wrap.b32 	%r7436, %r7432, %r7431, 30;
	mov.b64 	%rd10820, {%r7436, %r7435};
	xor.b64  	%rd10821, %rd10819, %rd10820;
	shf.l.wrap.b32 	%r7437, %r7431, %r7432, 25;
	shf.l.wrap.b32 	%r7438, %r7432, %r7431, 25;
	mov.b64 	%rd10822, {%r7438, %r7437};
	xor.b64  	%rd10823, %rd10821, %rd10822;
	and.b64  	%rd10824, %rd10792, %rd10755;
	or.b64  	%rd10825, %rd10792, %rd10755;
	and.b64  	%rd10826, %rd10825, %rd10718;
	or.b64  	%rd10827, %rd10826, %rd10824;
	add.s64 	%rd10828, %rd10827, %rd10823;
	add.s64 	%rd10829, %rd10828, %rd10817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7439,%dummy}, %rd10768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7440}, %rd10768;
	}
	shf.r.wrap.b32 	%r7441, %r7440, %r7439, 19;
	shf.r.wrap.b32 	%r7442, %r7439, %r7440, 19;
	mov.b64 	%rd10830, {%r7442, %r7441};
	shf.l.wrap.b32 	%r7443, %r7439, %r7440, 3;
	shf.l.wrap.b32 	%r7444, %r7440, %r7439, 3;
	mov.b64 	%rd10831, {%r7444, %r7443};
	xor.b64  	%rd10832, %rd10830, %rd10831;
	shr.u64 	%rd10833, %rd10768, 6;
	xor.b64  	%rd10834, %rd10832, %rd10833;
	shf.r.wrap.b32 	%r7445, %r7102, %r7101, 1;
	shf.r.wrap.b32 	%r7446, %r7101, %r7102, 1;
	mov.b64 	%rd10835, {%r7446, %r7445};
	shf.r.wrap.b32 	%r7447, %r7102, %r7101, 8;
	shf.r.wrap.b32 	%r7448, %r7101, %r7102, 8;
	mov.b64 	%rd10836, {%r7448, %r7447};
	xor.b64  	%rd10837, %rd10835, %rd10836;
	shr.u64 	%rd10838, %rd10287, 7;
	xor.b64  	%rd10839, %rd10837, %rd10838;
	add.s64 	%rd10840, %rd10839, %rd10250;
	add.s64 	%rd10841, %rd10840, %rd10583;
	add.s64 	%rd10842, %rd10841, %rd10834;
	add.s64 	%rd10843, %rd10842, %rd10707;
	xor.b64  	%rd10844, %rd10781, %rd10744;
	and.b64  	%rd10845, %rd10818, %rd10844;
	xor.b64  	%rd10846, %rd10845, %rd10744;
	add.s64 	%rd10847, %rd10843, %rd10846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7449,%dummy}, %rd10818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7450}, %rd10818;
	}
	shf.r.wrap.b32 	%r7451, %r7450, %r7449, 14;
	shf.r.wrap.b32 	%r7452, %r7449, %r7450, 14;
	mov.b64 	%rd10848, {%r7452, %r7451};
	shf.r.wrap.b32 	%r7453, %r7450, %r7449, 18;
	shf.r.wrap.b32 	%r7454, %r7449, %r7450, 18;
	mov.b64 	%rd10849, {%r7454, %r7453};
	xor.b64  	%rd10850, %rd10848, %rd10849;
	shf.l.wrap.b32 	%r7455, %r7449, %r7450, 23;
	shf.l.wrap.b32 	%r7456, %r7450, %r7449, 23;
	mov.b64 	%rd10851, {%r7456, %r7455};
	xor.b64  	%rd10852, %rd10850, %rd10851;
	add.s64 	%rd10853, %rd10847, %rd10852;
	add.s64 	%rd10854, %rd10853, 2177327727835720531;
	add.s64 	%rd10855, %rd10854, %rd10718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7457,%dummy}, %rd10829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7458}, %rd10829;
	}
	shf.r.wrap.b32 	%r7459, %r7458, %r7457, 28;
	shf.r.wrap.b32 	%r7460, %r7457, %r7458, 28;
	mov.b64 	%rd10856, {%r7460, %r7459};
	shf.l.wrap.b32 	%r7461, %r7457, %r7458, 30;
	shf.l.wrap.b32 	%r7462, %r7458, %r7457, 30;
	mov.b64 	%rd10857, {%r7462, %r7461};
	xor.b64  	%rd10858, %rd10856, %rd10857;
	shf.l.wrap.b32 	%r7463, %r7457, %r7458, 25;
	shf.l.wrap.b32 	%r7464, %r7458, %r7457, 25;
	mov.b64 	%rd10859, {%r7464, %r7463};
	xor.b64  	%rd10860, %rd10858, %rd10859;
	and.b64  	%rd10861, %rd10829, %rd10792;
	or.b64  	%rd10862, %rd10829, %rd10792;
	and.b64  	%rd10863, %rd10862, %rd10755;
	or.b64  	%rd10864, %rd10863, %rd10861;
	add.s64 	%rd10865, %rd10864, %rd10860;
	add.s64 	%rd10866, %rd10865, %rd10854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7465,%dummy}, %rd10805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7466}, %rd10805;
	}
	shf.r.wrap.b32 	%r7467, %r7466, %r7465, 19;
	shf.r.wrap.b32 	%r7468, %r7465, %r7466, 19;
	mov.b64 	%rd10867, {%r7468, %r7467};
	shf.l.wrap.b32 	%r7469, %r7465, %r7466, 3;
	shf.l.wrap.b32 	%r7470, %r7466, %r7465, 3;
	mov.b64 	%rd10868, {%r7470, %r7469};
	xor.b64  	%rd10869, %rd10867, %rd10868;
	shr.u64 	%rd10870, %rd10805, 6;
	xor.b64  	%rd10871, %rd10869, %rd10870;
	shf.r.wrap.b32 	%r7471, %r7128, %r7127, 1;
	shf.r.wrap.b32 	%r7472, %r7127, %r7128, 1;
	mov.b64 	%rd10872, {%r7472, %r7471};
	shf.r.wrap.b32 	%r7473, %r7128, %r7127, 8;
	shf.r.wrap.b32 	%r7474, %r7127, %r7128, 8;
	mov.b64 	%rd10873, {%r7474, %r7473};
	xor.b64  	%rd10874, %rd10872, %rd10873;
	shr.u64 	%rd10875, %rd10324, 7;
	xor.b64  	%rd10876, %rd10874, %rd10875;
	add.s64 	%rd10877, %rd10876, %rd10287;
	add.s64 	%rd10878, %rd10877, %rd10620;
	add.s64 	%rd10879, %rd10878, %rd10871;
	add.s64 	%rd10880, %rd10879, %rd10744;
	xor.b64  	%rd10881, %rd10818, %rd10781;
	and.b64  	%rd10882, %rd10855, %rd10881;
	xor.b64  	%rd10883, %rd10882, %rd10781;
	add.s64 	%rd10884, %rd10880, %rd10883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7475,%dummy}, %rd10855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7476}, %rd10855;
	}
	shf.r.wrap.b32 	%r7477, %r7476, %r7475, 14;
	shf.r.wrap.b32 	%r7478, %r7475, %r7476, 14;
	mov.b64 	%rd10885, {%r7478, %r7477};
	shf.r.wrap.b32 	%r7479, %r7476, %r7475, 18;
	shf.r.wrap.b32 	%r7480, %r7475, %r7476, 18;
	mov.b64 	%rd10886, {%r7480, %r7479};
	xor.b64  	%rd10887, %rd10885, %rd10886;
	shf.l.wrap.b32 	%r7481, %r7475, %r7476, 23;
	shf.l.wrap.b32 	%r7482, %r7476, %r7475, 23;
	mov.b64 	%rd10888, {%r7482, %r7481};
	xor.b64  	%rd10889, %rd10887, %rd10888;
	add.s64 	%rd10890, %rd10884, %rd10889;
	add.s64 	%rd10891, %rd10890, 2830643537854262169;
	add.s64 	%rd10892, %rd10891, %rd10755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7483,%dummy}, %rd10866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7484}, %rd10866;
	}
	shf.r.wrap.b32 	%r7485, %r7484, %r7483, 28;
	shf.r.wrap.b32 	%r7486, %r7483, %r7484, 28;
	mov.b64 	%rd10893, {%r7486, %r7485};
	shf.l.wrap.b32 	%r7487, %r7483, %r7484, 30;
	shf.l.wrap.b32 	%r7488, %r7484, %r7483, 30;
	mov.b64 	%rd10894, {%r7488, %r7487};
	xor.b64  	%rd10895, %rd10893, %rd10894;
	shf.l.wrap.b32 	%r7489, %r7483, %r7484, 25;
	shf.l.wrap.b32 	%r7490, %r7484, %r7483, 25;
	mov.b64 	%rd10896, {%r7490, %r7489};
	xor.b64  	%rd10897, %rd10895, %rd10896;
	and.b64  	%rd10898, %rd10866, %rd10829;
	or.b64  	%rd10899, %rd10866, %rd10829;
	and.b64  	%rd10900, %rd10899, %rd10792;
	or.b64  	%rd10901, %rd10900, %rd10898;
	add.s64 	%rd10902, %rd10901, %rd10897;
	add.s64 	%rd10903, %rd10902, %rd10891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7491,%dummy}, %rd10842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7492}, %rd10842;
	}
	shf.r.wrap.b32 	%r7493, %r7492, %r7491, 19;
	shf.r.wrap.b32 	%r7494, %r7491, %r7492, 19;
	mov.b64 	%rd10904, {%r7494, %r7493};
	shf.l.wrap.b32 	%r7495, %r7491, %r7492, 3;
	shf.l.wrap.b32 	%r7496, %r7492, %r7491, 3;
	mov.b64 	%rd10905, {%r7496, %r7495};
	xor.b64  	%rd10906, %rd10904, %rd10905;
	shr.u64 	%rd10907, %rd10842, 6;
	xor.b64  	%rd10908, %rd10906, %rd10907;
	shf.r.wrap.b32 	%r7497, %r7154, %r7153, 1;
	shf.r.wrap.b32 	%r7498, %r7153, %r7154, 1;
	mov.b64 	%rd10909, {%r7498, %r7497};
	shf.r.wrap.b32 	%r7499, %r7154, %r7153, 8;
	shf.r.wrap.b32 	%r7500, %r7153, %r7154, 8;
	mov.b64 	%rd10910, {%r7500, %r7499};
	xor.b64  	%rd10911, %rd10909, %rd10910;
	shr.u64 	%rd10912, %rd10361, 7;
	xor.b64  	%rd10913, %rd10911, %rd10912;
	add.s64 	%rd10914, %rd10913, %rd10324;
	add.s64 	%rd10915, %rd10914, %rd10657;
	add.s64 	%rd10916, %rd10915, %rd10908;
	add.s64 	%rd10917, %rd10916, %rd10781;
	xor.b64  	%rd10918, %rd10855, %rd10818;
	and.b64  	%rd10919, %rd10892, %rd10918;
	xor.b64  	%rd10920, %rd10919, %rd10818;
	add.s64 	%rd10921, %rd10917, %rd10920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7501,%dummy}, %rd10892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7502}, %rd10892;
	}
	shf.r.wrap.b32 	%r7503, %r7502, %r7501, 14;
	shf.r.wrap.b32 	%r7504, %r7501, %r7502, 14;
	mov.b64 	%rd10922, {%r7504, %r7503};
	shf.r.wrap.b32 	%r7505, %r7502, %r7501, 18;
	shf.r.wrap.b32 	%r7506, %r7501, %r7502, 18;
	mov.b64 	%rd10923, {%r7506, %r7505};
	xor.b64  	%rd10924, %rd10922, %rd10923;
	shf.l.wrap.b32 	%r7507, %r7501, %r7502, 23;
	shf.l.wrap.b32 	%r7508, %r7502, %r7501, 23;
	mov.b64 	%rd10925, {%r7508, %r7507};
	xor.b64  	%rd10926, %rd10924, %rd10925;
	add.s64 	%rd10927, %rd10921, %rd10926;
	add.s64 	%rd10928, %rd10927, 3796741975233480872;
	add.s64 	%rd10929, %rd10928, %rd10792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7509,%dummy}, %rd10903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7510}, %rd10903;
	}
	shf.r.wrap.b32 	%r7511, %r7510, %r7509, 28;
	shf.r.wrap.b32 	%r7512, %r7509, %r7510, 28;
	mov.b64 	%rd10930, {%r7512, %r7511};
	shf.l.wrap.b32 	%r7513, %r7509, %r7510, 30;
	shf.l.wrap.b32 	%r7514, %r7510, %r7509, 30;
	mov.b64 	%rd10931, {%r7514, %r7513};
	xor.b64  	%rd10932, %rd10930, %rd10931;
	shf.l.wrap.b32 	%r7515, %r7509, %r7510, 25;
	shf.l.wrap.b32 	%r7516, %r7510, %r7509, 25;
	mov.b64 	%rd10933, {%r7516, %r7515};
	xor.b64  	%rd10934, %rd10932, %rd10933;
	and.b64  	%rd10935, %rd10903, %rd10866;
	or.b64  	%rd10936, %rd10903, %rd10866;
	and.b64  	%rd10937, %rd10936, %rd10829;
	or.b64  	%rd10938, %rd10937, %rd10935;
	add.s64 	%rd10939, %rd10938, %rd10934;
	add.s64 	%rd10940, %rd10939, %rd10928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7517,%dummy}, %rd10879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7518}, %rd10879;
	}
	shf.r.wrap.b32 	%r7519, %r7518, %r7517, 19;
	shf.r.wrap.b32 	%r7520, %r7517, %r7518, 19;
	mov.b64 	%rd10941, {%r7520, %r7519};
	shf.l.wrap.b32 	%r7521, %r7517, %r7518, 3;
	shf.l.wrap.b32 	%r7522, %r7518, %r7517, 3;
	mov.b64 	%rd10942, {%r7522, %r7521};
	xor.b64  	%rd10943, %rd10941, %rd10942;
	shr.u64 	%rd10944, %rd10879, 6;
	xor.b64  	%rd10945, %rd10943, %rd10944;
	shf.r.wrap.b32 	%r7523, %r7180, %r7179, 1;
	shf.r.wrap.b32 	%r7524, %r7179, %r7180, 1;
	mov.b64 	%rd10946, {%r7524, %r7523};
	shf.r.wrap.b32 	%r7525, %r7180, %r7179, 8;
	shf.r.wrap.b32 	%r7526, %r7179, %r7180, 8;
	mov.b64 	%rd10947, {%r7526, %r7525};
	xor.b64  	%rd10948, %rd10946, %rd10947;
	shr.u64 	%rd10949, %rd10398, 7;
	xor.b64  	%rd10950, %rd10948, %rd10949;
	add.s64 	%rd10951, %rd10950, %rd10361;
	add.s64 	%rd10952, %rd10951, %rd10694;
	add.s64 	%rd10953, %rd10952, %rd10945;
	add.s64 	%rd10954, %rd10953, %rd10818;
	xor.b64  	%rd10955, %rd10892, %rd10855;
	and.b64  	%rd10956, %rd10929, %rd10955;
	xor.b64  	%rd10957, %rd10956, %rd10855;
	add.s64 	%rd10958, %rd10954, %rd10957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7527,%dummy}, %rd10929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7528}, %rd10929;
	}
	shf.r.wrap.b32 	%r7529, %r7528, %r7527, 14;
	shf.r.wrap.b32 	%r7530, %r7527, %r7528, 14;
	mov.b64 	%rd10959, {%r7530, %r7529};
	shf.r.wrap.b32 	%r7531, %r7528, %r7527, 18;
	shf.r.wrap.b32 	%r7532, %r7527, %r7528, 18;
	mov.b64 	%rd10960, {%r7532, %r7531};
	xor.b64  	%rd10961, %rd10959, %rd10960;
	shf.l.wrap.b32 	%r7533, %r7527, %r7528, 23;
	shf.l.wrap.b32 	%r7534, %r7528, %r7527, 23;
	mov.b64 	%rd10962, {%r7534, %r7533};
	xor.b64  	%rd10963, %rd10961, %rd10962;
	add.s64 	%rd10964, %rd10958, %rd10963;
	add.s64 	%rd10965, %rd10964, 4115178125766777443;
	add.s64 	%rd10966, %rd10965, %rd10829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7535,%dummy}, %rd10940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7536}, %rd10940;
	}
	shf.r.wrap.b32 	%r7537, %r7536, %r7535, 28;
	shf.r.wrap.b32 	%r7538, %r7535, %r7536, 28;
	mov.b64 	%rd10967, {%r7538, %r7537};
	shf.l.wrap.b32 	%r7539, %r7535, %r7536, 30;
	shf.l.wrap.b32 	%r7540, %r7536, %r7535, 30;
	mov.b64 	%rd10968, {%r7540, %r7539};
	xor.b64  	%rd10969, %rd10967, %rd10968;
	shf.l.wrap.b32 	%r7541, %r7535, %r7536, 25;
	shf.l.wrap.b32 	%r7542, %r7536, %r7535, 25;
	mov.b64 	%rd10970, {%r7542, %r7541};
	xor.b64  	%rd10971, %rd10969, %rd10970;
	and.b64  	%rd10972, %rd10940, %rd10903;
	or.b64  	%rd10973, %rd10940, %rd10903;
	and.b64  	%rd10974, %rd10973, %rd10866;
	or.b64  	%rd10975, %rd10974, %rd10972;
	add.s64 	%rd10976, %rd10975, %rd10971;
	add.s64 	%rd10977, %rd10976, %rd10965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7543,%dummy}, %rd10916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7544}, %rd10916;
	}
	shf.r.wrap.b32 	%r7545, %r7544, %r7543, 19;
	shf.r.wrap.b32 	%r7546, %r7543, %r7544, 19;
	mov.b64 	%rd10978, {%r7546, %r7545};
	shf.l.wrap.b32 	%r7547, %r7543, %r7544, 3;
	shf.l.wrap.b32 	%r7548, %r7544, %r7543, 3;
	mov.b64 	%rd10979, {%r7548, %r7547};
	xor.b64  	%rd10980, %rd10978, %rd10979;
	shr.u64 	%rd10981, %rd10916, 6;
	xor.b64  	%rd10982, %rd10980, %rd10981;
	shf.r.wrap.b32 	%r7549, %r7206, %r7205, 1;
	shf.r.wrap.b32 	%r7550, %r7205, %r7206, 1;
	mov.b64 	%rd10983, {%r7550, %r7549};
	shf.r.wrap.b32 	%r7551, %r7206, %r7205, 8;
	shf.r.wrap.b32 	%r7552, %r7205, %r7206, 8;
	mov.b64 	%rd10984, {%r7552, %r7551};
	xor.b64  	%rd10985, %rd10983, %rd10984;
	shr.u64 	%rd10986, %rd10435, 7;
	xor.b64  	%rd10987, %rd10985, %rd10986;
	add.s64 	%rd10988, %rd10987, %rd10398;
	add.s64 	%rd10989, %rd10988, %rd10731;
	add.s64 	%rd10990, %rd10989, %rd10982;
	add.s64 	%rd10991, %rd10990, %rd10855;
	xor.b64  	%rd10992, %rd10929, %rd10892;
	and.b64  	%rd10993, %rd10966, %rd10992;
	xor.b64  	%rd10994, %rd10993, %rd10892;
	add.s64 	%rd10995, %rd10991, %rd10994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7553,%dummy}, %rd10966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7554}, %rd10966;
	}
	shf.r.wrap.b32 	%r7555, %r7554, %r7553, 14;
	shf.r.wrap.b32 	%r7556, %r7553, %r7554, 14;
	mov.b64 	%rd10996, {%r7556, %r7555};
	shf.r.wrap.b32 	%r7557, %r7554, %r7553, 18;
	shf.r.wrap.b32 	%r7558, %r7553, %r7554, 18;
	mov.b64 	%rd10997, {%r7558, %r7557};
	xor.b64  	%rd10998, %rd10996, %rd10997;
	shf.l.wrap.b32 	%r7559, %r7553, %r7554, 23;
	shf.l.wrap.b32 	%r7560, %r7554, %r7553, 23;
	mov.b64 	%rd10999, {%r7560, %r7559};
	xor.b64  	%rd11000, %rd10998, %rd10999;
	add.s64 	%rd11001, %rd10995, %rd11000;
	add.s64 	%rd11002, %rd11001, 5681478168544905931;
	add.s64 	%rd11003, %rd11002, %rd10866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7561,%dummy}, %rd10977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7562}, %rd10977;
	}
	shf.r.wrap.b32 	%r7563, %r7562, %r7561, 28;
	shf.r.wrap.b32 	%r7564, %r7561, %r7562, 28;
	mov.b64 	%rd11004, {%r7564, %r7563};
	shf.l.wrap.b32 	%r7565, %r7561, %r7562, 30;
	shf.l.wrap.b32 	%r7566, %r7562, %r7561, 30;
	mov.b64 	%rd11005, {%r7566, %r7565};
	xor.b64  	%rd11006, %rd11004, %rd11005;
	shf.l.wrap.b32 	%r7567, %r7561, %r7562, 25;
	shf.l.wrap.b32 	%r7568, %r7562, %r7561, 25;
	mov.b64 	%rd11007, {%r7568, %r7567};
	xor.b64  	%rd11008, %rd11006, %rd11007;
	and.b64  	%rd11009, %rd10977, %rd10940;
	or.b64  	%rd11010, %rd10977, %rd10940;
	and.b64  	%rd11011, %rd11010, %rd10903;
	or.b64  	%rd11012, %rd11011, %rd11009;
	add.s64 	%rd11013, %rd11012, %rd11008;
	add.s64 	%rd11014, %rd11013, %rd11002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7569,%dummy}, %rd10953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7570}, %rd10953;
	}
	shf.r.wrap.b32 	%r7571, %r7570, %r7569, 19;
	shf.r.wrap.b32 	%r7572, %r7569, %r7570, 19;
	mov.b64 	%rd11015, {%r7572, %r7571};
	shf.l.wrap.b32 	%r7573, %r7569, %r7570, 3;
	shf.l.wrap.b32 	%r7574, %r7570, %r7569, 3;
	mov.b64 	%rd11016, {%r7574, %r7573};
	xor.b64  	%rd11017, %rd11015, %rd11016;
	shr.u64 	%rd11018, %rd10953, 6;
	xor.b64  	%rd11019, %rd11017, %rd11018;
	shf.r.wrap.b32 	%r7575, %r7232, %r7231, 1;
	shf.r.wrap.b32 	%r7576, %r7231, %r7232, 1;
	mov.b64 	%rd11020, {%r7576, %r7575};
	shf.r.wrap.b32 	%r7577, %r7232, %r7231, 8;
	shf.r.wrap.b32 	%r7578, %r7231, %r7232, 8;
	mov.b64 	%rd11021, {%r7578, %r7577};
	xor.b64  	%rd11022, %rd11020, %rd11021;
	shr.u64 	%rd11023, %rd10472, 7;
	xor.b64  	%rd11024, %rd11022, %rd11023;
	add.s64 	%rd11025, %rd11024, %rd10435;
	add.s64 	%rd11026, %rd11025, %rd10768;
	add.s64 	%rd11027, %rd11026, %rd11019;
	add.s64 	%rd11028, %rd11027, %rd10892;
	xor.b64  	%rd11029, %rd10966, %rd10929;
	and.b64  	%rd11030, %rd11003, %rd11029;
	xor.b64  	%rd11031, %rd11030, %rd10929;
	add.s64 	%rd11032, %rd11028, %rd11031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7579,%dummy}, %rd11003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7580}, %rd11003;
	}
	shf.r.wrap.b32 	%r7581, %r7580, %r7579, 14;
	shf.r.wrap.b32 	%r7582, %r7579, %r7580, 14;
	mov.b64 	%rd11033, {%r7582, %r7581};
	shf.r.wrap.b32 	%r7583, %r7580, %r7579, 18;
	shf.r.wrap.b32 	%r7584, %r7579, %r7580, 18;
	mov.b64 	%rd11034, {%r7584, %r7583};
	xor.b64  	%rd11035, %rd11033, %rd11034;
	shf.l.wrap.b32 	%r7585, %r7579, %r7580, 23;
	shf.l.wrap.b32 	%r7586, %r7580, %r7579, 23;
	mov.b64 	%rd11036, {%r7586, %r7585};
	xor.b64  	%rd11037, %rd11035, %rd11036;
	add.s64 	%rd11038, %rd11032, %rd11037;
	add.s64 	%rd11039, %rd11038, 6601373596472566643;
	add.s64 	%rd11040, %rd11039, %rd10903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7587,%dummy}, %rd11014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7588}, %rd11014;
	}
	shf.r.wrap.b32 	%r7589, %r7588, %r7587, 28;
	shf.r.wrap.b32 	%r7590, %r7587, %r7588, 28;
	mov.b64 	%rd11041, {%r7590, %r7589};
	shf.l.wrap.b32 	%r7591, %r7587, %r7588, 30;
	shf.l.wrap.b32 	%r7592, %r7588, %r7587, 30;
	mov.b64 	%rd11042, {%r7592, %r7591};
	xor.b64  	%rd11043, %rd11041, %rd11042;
	shf.l.wrap.b32 	%r7593, %r7587, %r7588, 25;
	shf.l.wrap.b32 	%r7594, %r7588, %r7587, 25;
	mov.b64 	%rd11044, {%r7594, %r7593};
	xor.b64  	%rd11045, %rd11043, %rd11044;
	and.b64  	%rd11046, %rd11014, %rd10977;
	or.b64  	%rd11047, %rd11014, %rd10977;
	and.b64  	%rd11048, %rd11047, %rd10940;
	or.b64  	%rd11049, %rd11048, %rd11046;
	add.s64 	%rd11050, %rd11049, %rd11045;
	add.s64 	%rd11051, %rd11050, %rd11039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7595,%dummy}, %rd10990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7596}, %rd10990;
	}
	shf.r.wrap.b32 	%r7597, %r7596, %r7595, 19;
	shf.r.wrap.b32 	%r7598, %r7595, %r7596, 19;
	mov.b64 	%rd11052, {%r7598, %r7597};
	shf.l.wrap.b32 	%r7599, %r7595, %r7596, 3;
	shf.l.wrap.b32 	%r7600, %r7596, %r7595, 3;
	mov.b64 	%rd11053, {%r7600, %r7599};
	xor.b64  	%rd11054, %rd11052, %rd11053;
	shr.u64 	%rd11055, %rd10990, 6;
	xor.b64  	%rd11056, %rd11054, %rd11055;
	shf.r.wrap.b32 	%r7601, %r7258, %r7257, 1;
	shf.r.wrap.b32 	%r7602, %r7257, %r7258, 1;
	mov.b64 	%rd11057, {%r7602, %r7601};
	shf.r.wrap.b32 	%r7603, %r7258, %r7257, 8;
	shf.r.wrap.b32 	%r7604, %r7257, %r7258, 8;
	mov.b64 	%rd11058, {%r7604, %r7603};
	xor.b64  	%rd11059, %rd11057, %rd11058;
	shr.u64 	%rd11060, %rd10509, 7;
	xor.b64  	%rd11061, %rd11059, %rd11060;
	add.s64 	%rd11062, %rd11061, %rd10472;
	add.s64 	%rd11063, %rd11062, %rd10805;
	add.s64 	%rd11064, %rd11063, %rd11056;
	add.s64 	%rd11065, %rd11064, %rd10929;
	xor.b64  	%rd11066, %rd11003, %rd10966;
	and.b64  	%rd11067, %rd11040, %rd11066;
	xor.b64  	%rd11068, %rd11067, %rd10966;
	add.s64 	%rd11069, %rd11065, %rd11068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7605,%dummy}, %rd11040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7606}, %rd11040;
	}
	shf.r.wrap.b32 	%r7607, %r7606, %r7605, 14;
	shf.r.wrap.b32 	%r7608, %r7605, %r7606, 14;
	mov.b64 	%rd11070, {%r7608, %r7607};
	shf.r.wrap.b32 	%r7609, %r7606, %r7605, 18;
	shf.r.wrap.b32 	%r7610, %r7605, %r7606, 18;
	mov.b64 	%rd11071, {%r7610, %r7609};
	xor.b64  	%rd11072, %rd11070, %rd11071;
	shf.l.wrap.b32 	%r7611, %r7605, %r7606, 23;
	shf.l.wrap.b32 	%r7612, %r7606, %r7605, 23;
	mov.b64 	%rd11073, {%r7612, %r7611};
	xor.b64  	%rd11074, %rd11072, %rd11073;
	add.s64 	%rd11075, %rd11069, %rd11074;
	add.s64 	%rd11076, %rd11075, 7507060721942968483;
	add.s64 	%rd11077, %rd11076, %rd10940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7613,%dummy}, %rd11051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7614}, %rd11051;
	}
	shf.r.wrap.b32 	%r7615, %r7614, %r7613, 28;
	shf.r.wrap.b32 	%r7616, %r7613, %r7614, 28;
	mov.b64 	%rd11078, {%r7616, %r7615};
	shf.l.wrap.b32 	%r7617, %r7613, %r7614, 30;
	shf.l.wrap.b32 	%r7618, %r7614, %r7613, 30;
	mov.b64 	%rd11079, {%r7618, %r7617};
	xor.b64  	%rd11080, %rd11078, %rd11079;
	shf.l.wrap.b32 	%r7619, %r7613, %r7614, 25;
	shf.l.wrap.b32 	%r7620, %r7614, %r7613, 25;
	mov.b64 	%rd11081, {%r7620, %r7619};
	xor.b64  	%rd11082, %rd11080, %rd11081;
	and.b64  	%rd11083, %rd11051, %rd11014;
	or.b64  	%rd11084, %rd11051, %rd11014;
	and.b64  	%rd11085, %rd11084, %rd10977;
	or.b64  	%rd11086, %rd11085, %rd11083;
	add.s64 	%rd11087, %rd11086, %rd11082;
	add.s64 	%rd11088, %rd11087, %rd11076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7621,%dummy}, %rd11027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7622}, %rd11027;
	}
	shf.r.wrap.b32 	%r7623, %r7622, %r7621, 19;
	shf.r.wrap.b32 	%r7624, %r7621, %r7622, 19;
	mov.b64 	%rd11089, {%r7624, %r7623};
	shf.l.wrap.b32 	%r7625, %r7621, %r7622, 3;
	shf.l.wrap.b32 	%r7626, %r7622, %r7621, 3;
	mov.b64 	%rd11090, {%r7626, %r7625};
	xor.b64  	%rd11091, %rd11089, %rd11090;
	shr.u64 	%rd11092, %rd11027, 6;
	xor.b64  	%rd11093, %rd11091, %rd11092;
	shf.r.wrap.b32 	%r7627, %r7284, %r7283, 1;
	shf.r.wrap.b32 	%r7628, %r7283, %r7284, 1;
	mov.b64 	%rd11094, {%r7628, %r7627};
	shf.r.wrap.b32 	%r7629, %r7284, %r7283, 8;
	shf.r.wrap.b32 	%r7630, %r7283, %r7284, 8;
	mov.b64 	%rd11095, {%r7630, %r7629};
	xor.b64  	%rd11096, %rd11094, %rd11095;
	shr.u64 	%rd11097, %rd10546, 7;
	xor.b64  	%rd11098, %rd11096, %rd11097;
	add.s64 	%rd11099, %rd11098, %rd10509;
	add.s64 	%rd11100, %rd11099, %rd10842;
	add.s64 	%rd11101, %rd11100, %rd11093;
	add.s64 	%rd11102, %rd11101, %rd10966;
	xor.b64  	%rd11103, %rd11040, %rd11003;
	and.b64  	%rd11104, %rd11077, %rd11103;
	xor.b64  	%rd11105, %rd11104, %rd11003;
	add.s64 	%rd11106, %rd11102, %rd11105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7631,%dummy}, %rd11077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7632}, %rd11077;
	}
	shf.r.wrap.b32 	%r7633, %r7632, %r7631, 14;
	shf.r.wrap.b32 	%r7634, %r7631, %r7632, 14;
	mov.b64 	%rd11107, {%r7634, %r7633};
	shf.r.wrap.b32 	%r7635, %r7632, %r7631, 18;
	shf.r.wrap.b32 	%r7636, %r7631, %r7632, 18;
	mov.b64 	%rd11108, {%r7636, %r7635};
	xor.b64  	%rd11109, %rd11107, %rd11108;
	shf.l.wrap.b32 	%r7637, %r7631, %r7632, 23;
	shf.l.wrap.b32 	%r7638, %r7632, %r7631, 23;
	mov.b64 	%rd11110, {%r7638, %r7637};
	xor.b64  	%rd11111, %rd11109, %rd11110;
	add.s64 	%rd11112, %rd11106, %rd11111;
	add.s64 	%rd11113, %rd11112, 8399075790359081724;
	add.s64 	%rd11114, %rd11113, %rd10977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7639,%dummy}, %rd11088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7640}, %rd11088;
	}
	shf.r.wrap.b32 	%r7641, %r7640, %r7639, 28;
	shf.r.wrap.b32 	%r7642, %r7639, %r7640, 28;
	mov.b64 	%rd11115, {%r7642, %r7641};
	shf.l.wrap.b32 	%r7643, %r7639, %r7640, 30;
	shf.l.wrap.b32 	%r7644, %r7640, %r7639, 30;
	mov.b64 	%rd11116, {%r7644, %r7643};
	xor.b64  	%rd11117, %rd11115, %rd11116;
	shf.l.wrap.b32 	%r7645, %r7639, %r7640, 25;
	shf.l.wrap.b32 	%r7646, %r7640, %r7639, 25;
	mov.b64 	%rd11118, {%r7646, %r7645};
	xor.b64  	%rd11119, %rd11117, %rd11118;
	and.b64  	%rd11120, %rd11088, %rd11051;
	or.b64  	%rd11121, %rd11088, %rd11051;
	and.b64  	%rd11122, %rd11121, %rd11014;
	or.b64  	%rd11123, %rd11122, %rd11120;
	add.s64 	%rd11124, %rd11123, %rd11119;
	add.s64 	%rd11125, %rd11124, %rd11113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7647,%dummy}, %rd11064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7648}, %rd11064;
	}
	shf.r.wrap.b32 	%r7649, %r7648, %r7647, 19;
	shf.r.wrap.b32 	%r7650, %r7647, %r7648, 19;
	mov.b64 	%rd11126, {%r7650, %r7649};
	shf.l.wrap.b32 	%r7651, %r7647, %r7648, 3;
	shf.l.wrap.b32 	%r7652, %r7648, %r7647, 3;
	mov.b64 	%rd11127, {%r7652, %r7651};
	xor.b64  	%rd11128, %rd11126, %rd11127;
	shr.u64 	%rd11129, %rd11064, 6;
	xor.b64  	%rd11130, %rd11128, %rd11129;
	shf.r.wrap.b32 	%r7653, %r7310, %r7309, 1;
	shf.r.wrap.b32 	%r7654, %r7309, %r7310, 1;
	mov.b64 	%rd11131, {%r7654, %r7653};
	shf.r.wrap.b32 	%r7655, %r7310, %r7309, 8;
	shf.r.wrap.b32 	%r7656, %r7309, %r7310, 8;
	mov.b64 	%rd11132, {%r7656, %r7655};
	xor.b64  	%rd11133, %rd11131, %rd11132;
	shr.u64 	%rd11134, %rd10583, 7;
	xor.b64  	%rd11135, %rd11133, %rd11134;
	add.s64 	%rd11136, %rd11135, %rd10546;
	add.s64 	%rd11137, %rd11136, %rd10879;
	add.s64 	%rd11138, %rd11137, %rd11130;
	add.s64 	%rd11139, %rd11138, %rd11003;
	xor.b64  	%rd11140, %rd11077, %rd11040;
	and.b64  	%rd11141, %rd11114, %rd11140;
	xor.b64  	%rd11142, %rd11141, %rd11040;
	add.s64 	%rd11143, %rd11139, %rd11142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7657,%dummy}, %rd11114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7658}, %rd11114;
	}
	shf.r.wrap.b32 	%r7659, %r7658, %r7657, 14;
	shf.r.wrap.b32 	%r7660, %r7657, %r7658, 14;
	mov.b64 	%rd11144, {%r7660, %r7659};
	shf.r.wrap.b32 	%r7661, %r7658, %r7657, 18;
	shf.r.wrap.b32 	%r7662, %r7657, %r7658, 18;
	mov.b64 	%rd11145, {%r7662, %r7661};
	xor.b64  	%rd11146, %rd11144, %rd11145;
	shf.l.wrap.b32 	%r7663, %r7657, %r7658, 23;
	shf.l.wrap.b32 	%r7664, %r7658, %r7657, 23;
	mov.b64 	%rd11147, {%r7664, %r7663};
	xor.b64  	%rd11148, %rd11146, %rd11147;
	add.s64 	%rd11149, %rd11143, %rd11148;
	add.s64 	%rd11150, %rd11149, 8693463985226723168;
	add.s64 	%rd11151, %rd11150, %rd11014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7665,%dummy}, %rd11125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7666}, %rd11125;
	}
	shf.r.wrap.b32 	%r7667, %r7666, %r7665, 28;
	shf.r.wrap.b32 	%r7668, %r7665, %r7666, 28;
	mov.b64 	%rd11152, {%r7668, %r7667};
	shf.l.wrap.b32 	%r7669, %r7665, %r7666, 30;
	shf.l.wrap.b32 	%r7670, %r7666, %r7665, 30;
	mov.b64 	%rd11153, {%r7670, %r7669};
	xor.b64  	%rd11154, %rd11152, %rd11153;
	shf.l.wrap.b32 	%r7671, %r7665, %r7666, 25;
	shf.l.wrap.b32 	%r7672, %r7666, %r7665, 25;
	mov.b64 	%rd11155, {%r7672, %r7671};
	xor.b64  	%rd11156, %rd11154, %rd11155;
	and.b64  	%rd11157, %rd11125, %rd11088;
	or.b64  	%rd11158, %rd11125, %rd11088;
	and.b64  	%rd11159, %rd11158, %rd11051;
	or.b64  	%rd11160, %rd11159, %rd11157;
	add.s64 	%rd11161, %rd11160, %rd11156;
	add.s64 	%rd11162, %rd11161, %rd11150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7673,%dummy}, %rd11101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7674}, %rd11101;
	}
	shf.r.wrap.b32 	%r7675, %r7674, %r7673, 19;
	shf.r.wrap.b32 	%r7676, %r7673, %r7674, 19;
	mov.b64 	%rd11163, {%r7676, %r7675};
	shf.l.wrap.b32 	%r7677, %r7673, %r7674, 3;
	shf.l.wrap.b32 	%r7678, %r7674, %r7673, 3;
	mov.b64 	%rd11164, {%r7678, %r7677};
	xor.b64  	%rd11165, %rd11163, %rd11164;
	shr.u64 	%rd11166, %rd11101, 6;
	xor.b64  	%rd11167, %rd11165, %rd11166;
	shf.r.wrap.b32 	%r7679, %r7336, %r7335, 1;
	shf.r.wrap.b32 	%r7680, %r7335, %r7336, 1;
	mov.b64 	%rd11168, {%r7680, %r7679};
	shf.r.wrap.b32 	%r7681, %r7336, %r7335, 8;
	shf.r.wrap.b32 	%r7682, %r7335, %r7336, 8;
	mov.b64 	%rd11169, {%r7682, %r7681};
	xor.b64  	%rd11170, %rd11168, %rd11169;
	shr.u64 	%rd11171, %rd10620, 7;
	xor.b64  	%rd11172, %rd11170, %rd11171;
	add.s64 	%rd11173, %rd11172, %rd10583;
	add.s64 	%rd11174, %rd11173, %rd10916;
	add.s64 	%rd11175, %rd11174, %rd11167;
	add.s64 	%rd11176, %rd11175, %rd11040;
	xor.b64  	%rd11177, %rd11114, %rd11077;
	and.b64  	%rd11178, %rd11151, %rd11177;
	xor.b64  	%rd11179, %rd11178, %rd11077;
	add.s64 	%rd11180, %rd11176, %rd11179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7683,%dummy}, %rd11151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7684}, %rd11151;
	}
	shf.r.wrap.b32 	%r7685, %r7684, %r7683, 14;
	shf.r.wrap.b32 	%r7686, %r7683, %r7684, 14;
	mov.b64 	%rd11181, {%r7686, %r7685};
	shf.r.wrap.b32 	%r7687, %r7684, %r7683, 18;
	shf.r.wrap.b32 	%r7688, %r7683, %r7684, 18;
	mov.b64 	%rd11182, {%r7688, %r7687};
	xor.b64  	%rd11183, %rd11181, %rd11182;
	shf.l.wrap.b32 	%r7689, %r7683, %r7684, 23;
	shf.l.wrap.b32 	%r7690, %r7684, %r7683, 23;
	mov.b64 	%rd11184, {%r7690, %r7689};
	xor.b64  	%rd11185, %rd11183, %rd11184;
	add.s64 	%rd11186, %rd11180, %rd11185;
	add.s64 	%rd11187, %rd11186, -8878714635349349518;
	add.s64 	%rd11188, %rd11187, %rd11051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7691,%dummy}, %rd11162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7692}, %rd11162;
	}
	shf.r.wrap.b32 	%r7693, %r7692, %r7691, 28;
	shf.r.wrap.b32 	%r7694, %r7691, %r7692, 28;
	mov.b64 	%rd11189, {%r7694, %r7693};
	shf.l.wrap.b32 	%r7695, %r7691, %r7692, 30;
	shf.l.wrap.b32 	%r7696, %r7692, %r7691, 30;
	mov.b64 	%rd11190, {%r7696, %r7695};
	xor.b64  	%rd11191, %rd11189, %rd11190;
	shf.l.wrap.b32 	%r7697, %r7691, %r7692, 25;
	shf.l.wrap.b32 	%r7698, %r7692, %r7691, 25;
	mov.b64 	%rd11192, {%r7698, %r7697};
	xor.b64  	%rd11193, %rd11191, %rd11192;
	and.b64  	%rd11194, %rd11162, %rd11125;
	or.b64  	%rd11195, %rd11162, %rd11125;
	and.b64  	%rd11196, %rd11195, %rd11088;
	or.b64  	%rd11197, %rd11196, %rd11194;
	add.s64 	%rd11198, %rd11197, %rd11193;
	add.s64 	%rd11199, %rd11198, %rd11187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7699,%dummy}, %rd11138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7700}, %rd11138;
	}
	shf.r.wrap.b32 	%r7701, %r7700, %r7699, 19;
	shf.r.wrap.b32 	%r7702, %r7699, %r7700, 19;
	mov.b64 	%rd11200, {%r7702, %r7701};
	shf.l.wrap.b32 	%r7703, %r7699, %r7700, 3;
	shf.l.wrap.b32 	%r7704, %r7700, %r7699, 3;
	mov.b64 	%rd11201, {%r7704, %r7703};
	xor.b64  	%rd11202, %rd11200, %rd11201;
	shr.u64 	%rd11203, %rd11138, 6;
	xor.b64  	%rd11204, %rd11202, %rd11203;
	shf.r.wrap.b32 	%r7705, %r7362, %r7361, 1;
	shf.r.wrap.b32 	%r7706, %r7361, %r7362, 1;
	mov.b64 	%rd11205, {%r7706, %r7705};
	shf.r.wrap.b32 	%r7707, %r7362, %r7361, 8;
	shf.r.wrap.b32 	%r7708, %r7361, %r7362, 8;
	mov.b64 	%rd11206, {%r7708, %r7707};
	xor.b64  	%rd11207, %rd11205, %rd11206;
	shr.u64 	%rd11208, %rd10657, 7;
	xor.b64  	%rd11209, %rd11207, %rd11208;
	add.s64 	%rd11210, %rd11209, %rd10620;
	add.s64 	%rd11211, %rd11210, %rd10953;
	add.s64 	%rd11212, %rd11211, %rd11204;
	add.s64 	%rd11213, %rd11212, %rd11077;
	xor.b64  	%rd11214, %rd11151, %rd11114;
	and.b64  	%rd11215, %rd11188, %rd11214;
	xor.b64  	%rd11216, %rd11215, %rd11114;
	add.s64 	%rd11217, %rd11213, %rd11216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7709,%dummy}, %rd11188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7710}, %rd11188;
	}
	shf.r.wrap.b32 	%r7711, %r7710, %r7709, 14;
	shf.r.wrap.b32 	%r7712, %r7709, %r7710, 14;
	mov.b64 	%rd11218, {%r7712, %r7711};
	shf.r.wrap.b32 	%r7713, %r7710, %r7709, 18;
	shf.r.wrap.b32 	%r7714, %r7709, %r7710, 18;
	mov.b64 	%rd11219, {%r7714, %r7713};
	xor.b64  	%rd11220, %rd11218, %rd11219;
	shf.l.wrap.b32 	%r7715, %r7709, %r7710, 23;
	shf.l.wrap.b32 	%r7716, %r7710, %r7709, 23;
	mov.b64 	%rd11221, {%r7716, %r7715};
	xor.b64  	%rd11222, %rd11220, %rd11221;
	add.s64 	%rd11223, %rd11217, %rd11222;
	add.s64 	%rd11224, %rd11223, -8302665154208450068;
	add.s64 	%rd11225, %rd11224, %rd11088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7717,%dummy}, %rd11199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7718}, %rd11199;
	}
	shf.r.wrap.b32 	%r7719, %r7718, %r7717, 28;
	shf.r.wrap.b32 	%r7720, %r7717, %r7718, 28;
	mov.b64 	%rd11226, {%r7720, %r7719};
	shf.l.wrap.b32 	%r7721, %r7717, %r7718, 30;
	shf.l.wrap.b32 	%r7722, %r7718, %r7717, 30;
	mov.b64 	%rd11227, {%r7722, %r7721};
	xor.b64  	%rd11228, %rd11226, %rd11227;
	shf.l.wrap.b32 	%r7723, %r7717, %r7718, 25;
	shf.l.wrap.b32 	%r7724, %r7718, %r7717, 25;
	mov.b64 	%rd11229, {%r7724, %r7723};
	xor.b64  	%rd11230, %rd11228, %rd11229;
	and.b64  	%rd11231, %rd11199, %rd11162;
	or.b64  	%rd11232, %rd11199, %rd11162;
	and.b64  	%rd11233, %rd11232, %rd11125;
	or.b64  	%rd11234, %rd11233, %rd11231;
	add.s64 	%rd11235, %rd11234, %rd11230;
	add.s64 	%rd11236, %rd11235, %rd11224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7725,%dummy}, %rd11175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7726}, %rd11175;
	}
	shf.r.wrap.b32 	%r7727, %r7726, %r7725, 19;
	shf.r.wrap.b32 	%r7728, %r7725, %r7726, 19;
	mov.b64 	%rd11237, {%r7728, %r7727};
	shf.l.wrap.b32 	%r7729, %r7725, %r7726, 3;
	shf.l.wrap.b32 	%r7730, %r7726, %r7725, 3;
	mov.b64 	%rd11238, {%r7730, %r7729};
	xor.b64  	%rd11239, %rd11237, %rd11238;
	shr.u64 	%rd11240, %rd11175, 6;
	xor.b64  	%rd11241, %rd11239, %rd11240;
	shf.r.wrap.b32 	%r7731, %r7388, %r7387, 1;
	shf.r.wrap.b32 	%r7732, %r7387, %r7388, 1;
	mov.b64 	%rd11242, {%r7732, %r7731};
	shf.r.wrap.b32 	%r7733, %r7388, %r7387, 8;
	shf.r.wrap.b32 	%r7734, %r7387, %r7388, 8;
	mov.b64 	%rd11243, {%r7734, %r7733};
	xor.b64  	%rd11244, %rd11242, %rd11243;
	shr.u64 	%rd11245, %rd10694, 7;
	xor.b64  	%rd11246, %rd11244, %rd11245;
	add.s64 	%rd11247, %rd11246, %rd10657;
	add.s64 	%rd11248, %rd11247, %rd10990;
	add.s64 	%rd11249, %rd11248, %rd11241;
	add.s64 	%rd11250, %rd11249, %rd11114;
	xor.b64  	%rd11251, %rd11188, %rd11151;
	and.b64  	%rd11252, %rd11225, %rd11251;
	xor.b64  	%rd11253, %rd11252, %rd11151;
	add.s64 	%rd11254, %rd11250, %rd11253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7735,%dummy}, %rd11225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7736}, %rd11225;
	}
	shf.r.wrap.b32 	%r7737, %r7736, %r7735, 14;
	shf.r.wrap.b32 	%r7738, %r7735, %r7736, 14;
	mov.b64 	%rd11255, {%r7738, %r7737};
	shf.r.wrap.b32 	%r7739, %r7736, %r7735, 18;
	shf.r.wrap.b32 	%r7740, %r7735, %r7736, 18;
	mov.b64 	%rd11256, {%r7740, %r7739};
	xor.b64  	%rd11257, %rd11255, %rd11256;
	shf.l.wrap.b32 	%r7741, %r7735, %r7736, 23;
	shf.l.wrap.b32 	%r7742, %r7736, %r7735, 23;
	mov.b64 	%rd11258, {%r7742, %r7741};
	xor.b64  	%rd11259, %rd11257, %rd11258;
	add.s64 	%rd11260, %rd11254, %rd11259;
	add.s64 	%rd11261, %rd11260, -8016688836872298968;
	add.s64 	%rd11262, %rd11261, %rd11125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7743,%dummy}, %rd11236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7744}, %rd11236;
	}
	shf.r.wrap.b32 	%r7745, %r7744, %r7743, 28;
	shf.r.wrap.b32 	%r7746, %r7743, %r7744, 28;
	mov.b64 	%rd11263, {%r7746, %r7745};
	shf.l.wrap.b32 	%r7747, %r7743, %r7744, 30;
	shf.l.wrap.b32 	%r7748, %r7744, %r7743, 30;
	mov.b64 	%rd11264, {%r7748, %r7747};
	xor.b64  	%rd11265, %rd11263, %rd11264;
	shf.l.wrap.b32 	%r7749, %r7743, %r7744, 25;
	shf.l.wrap.b32 	%r7750, %r7744, %r7743, 25;
	mov.b64 	%rd11266, {%r7750, %r7749};
	xor.b64  	%rd11267, %rd11265, %rd11266;
	and.b64  	%rd11268, %rd11236, %rd11199;
	or.b64  	%rd11269, %rd11236, %rd11199;
	and.b64  	%rd11270, %rd11269, %rd11162;
	or.b64  	%rd11271, %rd11270, %rd11268;
	add.s64 	%rd11272, %rd11271, %rd11267;
	add.s64 	%rd11273, %rd11272, %rd11261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7751,%dummy}, %rd11212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7752}, %rd11212;
	}
	shf.r.wrap.b32 	%r7753, %r7752, %r7751, 19;
	shf.r.wrap.b32 	%r7754, %r7751, %r7752, 19;
	mov.b64 	%rd11274, {%r7754, %r7753};
	shf.l.wrap.b32 	%r7755, %r7751, %r7752, 3;
	shf.l.wrap.b32 	%r7756, %r7752, %r7751, 3;
	mov.b64 	%rd11275, {%r7756, %r7755};
	xor.b64  	%rd11276, %rd11274, %rd11275;
	shr.u64 	%rd11277, %rd11212, 6;
	xor.b64  	%rd11278, %rd11276, %rd11277;
	shf.r.wrap.b32 	%r7757, %r7414, %r7413, 1;
	shf.r.wrap.b32 	%r7758, %r7413, %r7414, 1;
	mov.b64 	%rd11279, {%r7758, %r7757};
	shf.r.wrap.b32 	%r7759, %r7414, %r7413, 8;
	shf.r.wrap.b32 	%r7760, %r7413, %r7414, 8;
	mov.b64 	%rd11280, {%r7760, %r7759};
	xor.b64  	%rd11281, %rd11279, %rd11280;
	shr.u64 	%rd11282, %rd10731, 7;
	xor.b64  	%rd11283, %rd11281, %rd11282;
	add.s64 	%rd11284, %rd11283, %rd10694;
	add.s64 	%rd11285, %rd11284, %rd11027;
	add.s64 	%rd11286, %rd11285, %rd11278;
	add.s64 	%rd11287, %rd11286, %rd11151;
	xor.b64  	%rd11288, %rd11225, %rd11188;
	and.b64  	%rd11289, %rd11262, %rd11288;
	xor.b64  	%rd11290, %rd11289, %rd11188;
	add.s64 	%rd11291, %rd11287, %rd11290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7761,%dummy}, %rd11262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7762}, %rd11262;
	}
	shf.r.wrap.b32 	%r7763, %r7762, %r7761, 14;
	shf.r.wrap.b32 	%r7764, %r7761, %r7762, 14;
	mov.b64 	%rd11292, {%r7764, %r7763};
	shf.r.wrap.b32 	%r7765, %r7762, %r7761, 18;
	shf.r.wrap.b32 	%r7766, %r7761, %r7762, 18;
	mov.b64 	%rd11293, {%r7766, %r7765};
	xor.b64  	%rd11294, %rd11292, %rd11293;
	shf.l.wrap.b32 	%r7767, %r7761, %r7762, 23;
	shf.l.wrap.b32 	%r7768, %r7762, %r7761, 23;
	mov.b64 	%rd11295, {%r7768, %r7767};
	xor.b64  	%rd11296, %rd11294, %rd11295;
	add.s64 	%rd11297, %rd11291, %rd11296;
	add.s64 	%rd11298, %rd11297, -6606660893046293015;
	add.s64 	%rd11299, %rd11298, %rd11162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7769,%dummy}, %rd11273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7770}, %rd11273;
	}
	shf.r.wrap.b32 	%r7771, %r7770, %r7769, 28;
	shf.r.wrap.b32 	%r7772, %r7769, %r7770, 28;
	mov.b64 	%rd11300, {%r7772, %r7771};
	shf.l.wrap.b32 	%r7773, %r7769, %r7770, 30;
	shf.l.wrap.b32 	%r7774, %r7770, %r7769, 30;
	mov.b64 	%rd11301, {%r7774, %r7773};
	xor.b64  	%rd11302, %rd11300, %rd11301;
	shf.l.wrap.b32 	%r7775, %r7769, %r7770, 25;
	shf.l.wrap.b32 	%r7776, %r7770, %r7769, 25;
	mov.b64 	%rd11303, {%r7776, %r7775};
	xor.b64  	%rd11304, %rd11302, %rd11303;
	and.b64  	%rd11305, %rd11273, %rd11236;
	or.b64  	%rd11306, %rd11273, %rd11236;
	and.b64  	%rd11307, %rd11306, %rd11199;
	or.b64  	%rd11308, %rd11307, %rd11305;
	add.s64 	%rd11309, %rd11308, %rd11304;
	add.s64 	%rd11310, %rd11309, %rd11298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7777,%dummy}, %rd11249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7778}, %rd11249;
	}
	shf.r.wrap.b32 	%r7779, %r7778, %r7777, 19;
	shf.r.wrap.b32 	%r7780, %r7777, %r7778, 19;
	mov.b64 	%rd11311, {%r7780, %r7779};
	shf.l.wrap.b32 	%r7781, %r7777, %r7778, 3;
	shf.l.wrap.b32 	%r7782, %r7778, %r7777, 3;
	mov.b64 	%rd11312, {%r7782, %r7781};
	xor.b64  	%rd11313, %rd11311, %rd11312;
	shr.u64 	%rd11314, %rd11249, 6;
	xor.b64  	%rd11315, %rd11313, %rd11314;
	shf.r.wrap.b32 	%r7783, %r7440, %r7439, 1;
	shf.r.wrap.b32 	%r7784, %r7439, %r7440, 1;
	mov.b64 	%rd11316, {%r7784, %r7783};
	shf.r.wrap.b32 	%r7785, %r7440, %r7439, 8;
	shf.r.wrap.b32 	%r7786, %r7439, %r7440, 8;
	mov.b64 	%rd11317, {%r7786, %r7785};
	xor.b64  	%rd11318, %rd11316, %rd11317;
	shr.u64 	%rd11319, %rd10768, 7;
	xor.b64  	%rd11320, %rd11318, %rd11319;
	add.s64 	%rd11321, %rd11320, %rd10731;
	add.s64 	%rd11322, %rd11321, %rd11064;
	add.s64 	%rd11323, %rd11322, %rd11315;
	add.s64 	%rd11324, %rd11323, %rd11188;
	xor.b64  	%rd11325, %rd11262, %rd11225;
	and.b64  	%rd11326, %rd11299, %rd11325;
	xor.b64  	%rd11327, %rd11326, %rd11225;
	add.s64 	%rd11328, %rd11324, %rd11327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7787,%dummy}, %rd11299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7788}, %rd11299;
	}
	shf.r.wrap.b32 	%r7789, %r7788, %r7787, 14;
	shf.r.wrap.b32 	%r7790, %r7787, %r7788, 14;
	mov.b64 	%rd11329, {%r7790, %r7789};
	shf.r.wrap.b32 	%r7791, %r7788, %r7787, 18;
	shf.r.wrap.b32 	%r7792, %r7787, %r7788, 18;
	mov.b64 	%rd11330, {%r7792, %r7791};
	xor.b64  	%rd11331, %rd11329, %rd11330;
	shf.l.wrap.b32 	%r7793, %r7787, %r7788, 23;
	shf.l.wrap.b32 	%r7794, %r7788, %r7787, 23;
	mov.b64 	%rd11332, {%r7794, %r7793};
	xor.b64  	%rd11333, %rd11331, %rd11332;
	add.s64 	%rd11334, %rd11328, %rd11333;
	add.s64 	%rd11335, %rd11334, -4685533653050689259;
	add.s64 	%rd11336, %rd11335, %rd11199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7795,%dummy}, %rd11310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7796}, %rd11310;
	}
	shf.r.wrap.b32 	%r7797, %r7796, %r7795, 28;
	shf.r.wrap.b32 	%r7798, %r7795, %r7796, 28;
	mov.b64 	%rd11337, {%r7798, %r7797};
	shf.l.wrap.b32 	%r7799, %r7795, %r7796, 30;
	shf.l.wrap.b32 	%r7800, %r7796, %r7795, 30;
	mov.b64 	%rd11338, {%r7800, %r7799};
	xor.b64  	%rd11339, %rd11337, %rd11338;
	shf.l.wrap.b32 	%r7801, %r7795, %r7796, 25;
	shf.l.wrap.b32 	%r7802, %r7796, %r7795, 25;
	mov.b64 	%rd11340, {%r7802, %r7801};
	xor.b64  	%rd11341, %rd11339, %rd11340;
	and.b64  	%rd11342, %rd11310, %rd11273;
	or.b64  	%rd11343, %rd11310, %rd11273;
	and.b64  	%rd11344, %rd11343, %rd11236;
	or.b64  	%rd11345, %rd11344, %rd11342;
	add.s64 	%rd11346, %rd11345, %rd11341;
	add.s64 	%rd11347, %rd11346, %rd11335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7803,%dummy}, %rd11286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7804}, %rd11286;
	}
	shf.r.wrap.b32 	%r7805, %r7804, %r7803, 19;
	shf.r.wrap.b32 	%r7806, %r7803, %r7804, 19;
	mov.b64 	%rd11348, {%r7806, %r7805};
	shf.l.wrap.b32 	%r7807, %r7803, %r7804, 3;
	shf.l.wrap.b32 	%r7808, %r7804, %r7803, 3;
	mov.b64 	%rd11349, {%r7808, %r7807};
	xor.b64  	%rd11350, %rd11348, %rd11349;
	shr.u64 	%rd11351, %rd11286, 6;
	xor.b64  	%rd11352, %rd11350, %rd11351;
	shf.r.wrap.b32 	%r7809, %r7466, %r7465, 1;
	shf.r.wrap.b32 	%r7810, %r7465, %r7466, 1;
	mov.b64 	%rd11353, {%r7810, %r7809};
	shf.r.wrap.b32 	%r7811, %r7466, %r7465, 8;
	shf.r.wrap.b32 	%r7812, %r7465, %r7466, 8;
	mov.b64 	%rd11354, {%r7812, %r7811};
	xor.b64  	%rd11355, %rd11353, %rd11354;
	shr.u64 	%rd11356, %rd10805, 7;
	xor.b64  	%rd11357, %rd11355, %rd11356;
	add.s64 	%rd11358, %rd11357, %rd10768;
	add.s64 	%rd11359, %rd11358, %rd11101;
	add.s64 	%rd11360, %rd11359, %rd11352;
	add.s64 	%rd11361, %rd11360, %rd11225;
	xor.b64  	%rd11362, %rd11299, %rd11262;
	and.b64  	%rd11363, %rd11336, %rd11362;
	xor.b64  	%rd11364, %rd11363, %rd11262;
	add.s64 	%rd11365, %rd11361, %rd11364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7813,%dummy}, %rd11336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7814}, %rd11336;
	}
	shf.r.wrap.b32 	%r7815, %r7814, %r7813, 14;
	shf.r.wrap.b32 	%r7816, %r7813, %r7814, 14;
	mov.b64 	%rd11366, {%r7816, %r7815};
	shf.r.wrap.b32 	%r7817, %r7814, %r7813, 18;
	shf.r.wrap.b32 	%r7818, %r7813, %r7814, 18;
	mov.b64 	%rd11367, {%r7818, %r7817};
	xor.b64  	%rd11368, %rd11366, %rd11367;
	shf.l.wrap.b32 	%r7819, %r7813, %r7814, 23;
	shf.l.wrap.b32 	%r7820, %r7814, %r7813, 23;
	mov.b64 	%rd11369, {%r7820, %r7819};
	xor.b64  	%rd11370, %rd11368, %rd11369;
	add.s64 	%rd11371, %rd11365, %rd11370;
	add.s64 	%rd11372, %rd11371, -4147400797238176981;
	add.s64 	%rd11373, %rd11372, %rd11236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7821,%dummy}, %rd11347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7822}, %rd11347;
	}
	shf.r.wrap.b32 	%r7823, %r7822, %r7821, 28;
	shf.r.wrap.b32 	%r7824, %r7821, %r7822, 28;
	mov.b64 	%rd11374, {%r7824, %r7823};
	shf.l.wrap.b32 	%r7825, %r7821, %r7822, 30;
	shf.l.wrap.b32 	%r7826, %r7822, %r7821, 30;
	mov.b64 	%rd11375, {%r7826, %r7825};
	xor.b64  	%rd11376, %rd11374, %rd11375;
	shf.l.wrap.b32 	%r7827, %r7821, %r7822, 25;
	shf.l.wrap.b32 	%r7828, %r7822, %r7821, 25;
	mov.b64 	%rd11377, {%r7828, %r7827};
	xor.b64  	%rd11378, %rd11376, %rd11377;
	and.b64  	%rd11379, %rd11347, %rd11310;
	or.b64  	%rd11380, %rd11347, %rd11310;
	and.b64  	%rd11381, %rd11380, %rd11273;
	or.b64  	%rd11382, %rd11381, %rd11379;
	add.s64 	%rd11383, %rd11382, %rd11378;
	add.s64 	%rd11384, %rd11383, %rd11372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7829,%dummy}, %rd11323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7830}, %rd11323;
	}
	shf.r.wrap.b32 	%r7831, %r7830, %r7829, 19;
	shf.r.wrap.b32 	%r7832, %r7829, %r7830, 19;
	mov.b64 	%rd11385, {%r7832, %r7831};
	shf.l.wrap.b32 	%r7833, %r7829, %r7830, 3;
	shf.l.wrap.b32 	%r7834, %r7830, %r7829, 3;
	mov.b64 	%rd11386, {%r7834, %r7833};
	xor.b64  	%rd11387, %rd11385, %rd11386;
	shr.u64 	%rd11388, %rd11323, 6;
	xor.b64  	%rd11389, %rd11387, %rd11388;
	shf.r.wrap.b32 	%r7835, %r7492, %r7491, 1;
	shf.r.wrap.b32 	%r7836, %r7491, %r7492, 1;
	mov.b64 	%rd11390, {%r7836, %r7835};
	shf.r.wrap.b32 	%r7837, %r7492, %r7491, 8;
	shf.r.wrap.b32 	%r7838, %r7491, %r7492, 8;
	mov.b64 	%rd11391, {%r7838, %r7837};
	xor.b64  	%rd11392, %rd11390, %rd11391;
	shr.u64 	%rd11393, %rd10842, 7;
	xor.b64  	%rd11394, %rd11392, %rd11393;
	add.s64 	%rd11395, %rd11394, %rd10805;
	add.s64 	%rd11396, %rd11395, %rd11138;
	add.s64 	%rd11397, %rd11396, %rd11389;
	add.s64 	%rd11398, %rd11397, %rd11262;
	xor.b64  	%rd11399, %rd11336, %rd11299;
	and.b64  	%rd11400, %rd11373, %rd11399;
	xor.b64  	%rd11401, %rd11400, %rd11299;
	add.s64 	%rd11402, %rd11398, %rd11401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7839,%dummy}, %rd11373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7840}, %rd11373;
	}
	shf.r.wrap.b32 	%r7841, %r7840, %r7839, 14;
	shf.r.wrap.b32 	%r7842, %r7839, %r7840, 14;
	mov.b64 	%rd11403, {%r7842, %r7841};
	shf.r.wrap.b32 	%r7843, %r7840, %r7839, 18;
	shf.r.wrap.b32 	%r7844, %r7839, %r7840, 18;
	mov.b64 	%rd11404, {%r7844, %r7843};
	xor.b64  	%rd11405, %rd11403, %rd11404;
	shf.l.wrap.b32 	%r7845, %r7839, %r7840, 23;
	shf.l.wrap.b32 	%r7846, %r7840, %r7839, 23;
	mov.b64 	%rd11406, {%r7846, %r7845};
	xor.b64  	%rd11407, %rd11405, %rd11406;
	add.s64 	%rd11408, %rd11402, %rd11407;
	add.s64 	%rd11409, %rd11408, -3880063495543823972;
	add.s64 	%rd11410, %rd11409, %rd11273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7847,%dummy}, %rd11384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7848}, %rd11384;
	}
	shf.r.wrap.b32 	%r7849, %r7848, %r7847, 28;
	shf.r.wrap.b32 	%r7850, %r7847, %r7848, 28;
	mov.b64 	%rd11411, {%r7850, %r7849};
	shf.l.wrap.b32 	%r7851, %r7847, %r7848, 30;
	shf.l.wrap.b32 	%r7852, %r7848, %r7847, 30;
	mov.b64 	%rd11412, {%r7852, %r7851};
	xor.b64  	%rd11413, %rd11411, %rd11412;
	shf.l.wrap.b32 	%r7853, %r7847, %r7848, 25;
	shf.l.wrap.b32 	%r7854, %r7848, %r7847, 25;
	mov.b64 	%rd11414, {%r7854, %r7853};
	xor.b64  	%rd11415, %rd11413, %rd11414;
	and.b64  	%rd11416, %rd11384, %rd11347;
	or.b64  	%rd11417, %rd11384, %rd11347;
	and.b64  	%rd11418, %rd11417, %rd11310;
	or.b64  	%rd11419, %rd11418, %rd11416;
	add.s64 	%rd11420, %rd11419, %rd11415;
	add.s64 	%rd11421, %rd11420, %rd11409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7855,%dummy}, %rd11360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7856}, %rd11360;
	}
	shf.r.wrap.b32 	%r7857, %r7856, %r7855, 19;
	shf.r.wrap.b32 	%r7858, %r7855, %r7856, 19;
	mov.b64 	%rd11422, {%r7858, %r7857};
	shf.l.wrap.b32 	%r7859, %r7855, %r7856, 3;
	shf.l.wrap.b32 	%r7860, %r7856, %r7855, 3;
	mov.b64 	%rd11423, {%r7860, %r7859};
	xor.b64  	%rd11424, %rd11422, %rd11423;
	shr.u64 	%rd11425, %rd11360, 6;
	xor.b64  	%rd11426, %rd11424, %rd11425;
	shf.r.wrap.b32 	%r7861, %r7518, %r7517, 1;
	shf.r.wrap.b32 	%r7862, %r7517, %r7518, 1;
	mov.b64 	%rd11427, {%r7862, %r7861};
	shf.r.wrap.b32 	%r7863, %r7518, %r7517, 8;
	shf.r.wrap.b32 	%r7864, %r7517, %r7518, 8;
	mov.b64 	%rd11428, {%r7864, %r7863};
	xor.b64  	%rd11429, %rd11427, %rd11428;
	shr.u64 	%rd11430, %rd10879, 7;
	xor.b64  	%rd11431, %rd11429, %rd11430;
	add.s64 	%rd11432, %rd11431, %rd10842;
	add.s64 	%rd11433, %rd11432, %rd11175;
	add.s64 	%rd11434, %rd11433, %rd11426;
	add.s64 	%rd11435, %rd11434, %rd11299;
	xor.b64  	%rd11436, %rd11373, %rd11336;
	and.b64  	%rd11437, %rd11410, %rd11436;
	xor.b64  	%rd11438, %rd11437, %rd11336;
	add.s64 	%rd11439, %rd11435, %rd11438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7865,%dummy}, %rd11410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7866}, %rd11410;
	}
	shf.r.wrap.b32 	%r7867, %r7866, %r7865, 14;
	shf.r.wrap.b32 	%r7868, %r7865, %r7866, 14;
	mov.b64 	%rd11440, {%r7868, %r7867};
	shf.r.wrap.b32 	%r7869, %r7866, %r7865, 18;
	shf.r.wrap.b32 	%r7870, %r7865, %r7866, 18;
	mov.b64 	%rd11441, {%r7870, %r7869};
	xor.b64  	%rd11442, %rd11440, %rd11441;
	shf.l.wrap.b32 	%r7871, %r7865, %r7866, 23;
	shf.l.wrap.b32 	%r7872, %r7866, %r7865, 23;
	mov.b64 	%rd11443, {%r7872, %r7871};
	xor.b64  	%rd11444, %rd11442, %rd11443;
	add.s64 	%rd11445, %rd11439, %rd11444;
	add.s64 	%rd11446, %rd11445, -3348786107499101689;
	add.s64 	%rd11447, %rd11446, %rd11310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7873,%dummy}, %rd11421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7874}, %rd11421;
	}
	shf.r.wrap.b32 	%r7875, %r7874, %r7873, 28;
	shf.r.wrap.b32 	%r7876, %r7873, %r7874, 28;
	mov.b64 	%rd11448, {%r7876, %r7875};
	shf.l.wrap.b32 	%r7877, %r7873, %r7874, 30;
	shf.l.wrap.b32 	%r7878, %r7874, %r7873, 30;
	mov.b64 	%rd11449, {%r7878, %r7877};
	xor.b64  	%rd11450, %rd11448, %rd11449;
	shf.l.wrap.b32 	%r7879, %r7873, %r7874, 25;
	shf.l.wrap.b32 	%r7880, %r7874, %r7873, 25;
	mov.b64 	%rd11451, {%r7880, %r7879};
	xor.b64  	%rd11452, %rd11450, %rd11451;
	and.b64  	%rd11453, %rd11421, %rd11384;
	or.b64  	%rd11454, %rd11421, %rd11384;
	and.b64  	%rd11455, %rd11454, %rd11347;
	or.b64  	%rd11456, %rd11455, %rd11453;
	add.s64 	%rd11457, %rd11456, %rd11452;
	add.s64 	%rd11458, %rd11457, %rd11446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7881,%dummy}, %rd11397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7882}, %rd11397;
	}
	shf.r.wrap.b32 	%r7883, %r7882, %r7881, 19;
	shf.r.wrap.b32 	%r7884, %r7881, %r7882, 19;
	mov.b64 	%rd11459, {%r7884, %r7883};
	shf.l.wrap.b32 	%r7885, %r7881, %r7882, 3;
	shf.l.wrap.b32 	%r7886, %r7882, %r7881, 3;
	mov.b64 	%rd11460, {%r7886, %r7885};
	xor.b64  	%rd11461, %rd11459, %rd11460;
	shr.u64 	%rd11462, %rd11397, 6;
	xor.b64  	%rd11463, %rd11461, %rd11462;
	shf.r.wrap.b32 	%r7887, %r7544, %r7543, 1;
	shf.r.wrap.b32 	%r7888, %r7543, %r7544, 1;
	mov.b64 	%rd11464, {%r7888, %r7887};
	shf.r.wrap.b32 	%r7889, %r7544, %r7543, 8;
	shf.r.wrap.b32 	%r7890, %r7543, %r7544, 8;
	mov.b64 	%rd11465, {%r7890, %r7889};
	xor.b64  	%rd11466, %rd11464, %rd11465;
	shr.u64 	%rd11467, %rd10916, 7;
	xor.b64  	%rd11468, %rd11466, %rd11467;
	add.s64 	%rd11469, %rd11468, %rd10879;
	add.s64 	%rd11470, %rd11469, %rd11212;
	add.s64 	%rd11471, %rd11470, %rd11463;
	add.s64 	%rd11472, %rd11471, %rd11336;
	xor.b64  	%rd11473, %rd11410, %rd11373;
	and.b64  	%rd11474, %rd11447, %rd11473;
	xor.b64  	%rd11475, %rd11474, %rd11373;
	add.s64 	%rd11476, %rd11472, %rd11475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7891,%dummy}, %rd11447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7892}, %rd11447;
	}
	shf.r.wrap.b32 	%r7893, %r7892, %r7891, 14;
	shf.r.wrap.b32 	%r7894, %r7891, %r7892, 14;
	mov.b64 	%rd11477, {%r7894, %r7893};
	shf.r.wrap.b32 	%r7895, %r7892, %r7891, 18;
	shf.r.wrap.b32 	%r7896, %r7891, %r7892, 18;
	mov.b64 	%rd11478, {%r7896, %r7895};
	xor.b64  	%rd11479, %rd11477, %rd11478;
	shf.l.wrap.b32 	%r7897, %r7891, %r7892, 23;
	shf.l.wrap.b32 	%r7898, %r7892, %r7891, 23;
	mov.b64 	%rd11480, {%r7898, %r7897};
	xor.b64  	%rd11481, %rd11479, %rd11480;
	add.s64 	%rd11482, %rd11476, %rd11481;
	add.s64 	%rd11483, %rd11482, -1523767162380948706;
	add.s64 	%rd11484, %rd11483, %rd11347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7899,%dummy}, %rd11458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7900}, %rd11458;
	}
	shf.r.wrap.b32 	%r7901, %r7900, %r7899, 28;
	shf.r.wrap.b32 	%r7902, %r7899, %r7900, 28;
	mov.b64 	%rd11485, {%r7902, %r7901};
	shf.l.wrap.b32 	%r7903, %r7899, %r7900, 30;
	shf.l.wrap.b32 	%r7904, %r7900, %r7899, 30;
	mov.b64 	%rd11486, {%r7904, %r7903};
	xor.b64  	%rd11487, %rd11485, %rd11486;
	shf.l.wrap.b32 	%r7905, %r7899, %r7900, 25;
	shf.l.wrap.b32 	%r7906, %r7900, %r7899, 25;
	mov.b64 	%rd11488, {%r7906, %r7905};
	xor.b64  	%rd11489, %rd11487, %rd11488;
	and.b64  	%rd11490, %rd11458, %rd11421;
	or.b64  	%rd11491, %rd11458, %rd11421;
	and.b64  	%rd11492, %rd11491, %rd11384;
	or.b64  	%rd11493, %rd11492, %rd11490;
	add.s64 	%rd11494, %rd11493, %rd11489;
	add.s64 	%rd11495, %rd11494, %rd11483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7907,%dummy}, %rd11434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7908}, %rd11434;
	}
	shf.r.wrap.b32 	%r7909, %r7908, %r7907, 19;
	shf.r.wrap.b32 	%r7910, %r7907, %r7908, 19;
	mov.b64 	%rd11496, {%r7910, %r7909};
	shf.l.wrap.b32 	%r7911, %r7907, %r7908, 3;
	shf.l.wrap.b32 	%r7912, %r7908, %r7907, 3;
	mov.b64 	%rd11497, {%r7912, %r7911};
	xor.b64  	%rd11498, %rd11496, %rd11497;
	shr.u64 	%rd11499, %rd11434, 6;
	xor.b64  	%rd11500, %rd11498, %rd11499;
	shf.r.wrap.b32 	%r7913, %r7570, %r7569, 1;
	shf.r.wrap.b32 	%r7914, %r7569, %r7570, 1;
	mov.b64 	%rd11501, {%r7914, %r7913};
	shf.r.wrap.b32 	%r7915, %r7570, %r7569, 8;
	shf.r.wrap.b32 	%r7916, %r7569, %r7570, 8;
	mov.b64 	%rd11502, {%r7916, %r7915};
	xor.b64  	%rd11503, %rd11501, %rd11502;
	shr.u64 	%rd11504, %rd10953, 7;
	xor.b64  	%rd11505, %rd11503, %rd11504;
	add.s64 	%rd11506, %rd11505, %rd10916;
	add.s64 	%rd11507, %rd11506, %rd11249;
	add.s64 	%rd11508, %rd11507, %rd11500;
	add.s64 	%rd11509, %rd11508, %rd11373;
	xor.b64  	%rd11510, %rd11447, %rd11410;
	and.b64  	%rd11511, %rd11484, %rd11510;
	xor.b64  	%rd11512, %rd11511, %rd11410;
	add.s64 	%rd11513, %rd11509, %rd11512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7917,%dummy}, %rd11484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7918}, %rd11484;
	}
	shf.r.wrap.b32 	%r7919, %r7918, %r7917, 14;
	shf.r.wrap.b32 	%r7920, %r7917, %r7918, 14;
	mov.b64 	%rd11514, {%r7920, %r7919};
	shf.r.wrap.b32 	%r7921, %r7918, %r7917, 18;
	shf.r.wrap.b32 	%r7922, %r7917, %r7918, 18;
	mov.b64 	%rd11515, {%r7922, %r7921};
	xor.b64  	%rd11516, %rd11514, %rd11515;
	shf.l.wrap.b32 	%r7923, %r7917, %r7918, 23;
	shf.l.wrap.b32 	%r7924, %r7918, %r7917, 23;
	mov.b64 	%rd11517, {%r7924, %r7923};
	xor.b64  	%rd11518, %rd11516, %rd11517;
	add.s64 	%rd11519, %rd11513, %rd11518;
	add.s64 	%rd11520, %rd11519, -757361751448694408;
	add.s64 	%rd11521, %rd11520, %rd11384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7925,%dummy}, %rd11495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7926}, %rd11495;
	}
	shf.r.wrap.b32 	%r7927, %r7926, %r7925, 28;
	shf.r.wrap.b32 	%r7928, %r7925, %r7926, 28;
	mov.b64 	%rd11522, {%r7928, %r7927};
	shf.l.wrap.b32 	%r7929, %r7925, %r7926, 30;
	shf.l.wrap.b32 	%r7930, %r7926, %r7925, 30;
	mov.b64 	%rd11523, {%r7930, %r7929};
	xor.b64  	%rd11524, %rd11522, %rd11523;
	shf.l.wrap.b32 	%r7931, %r7925, %r7926, 25;
	shf.l.wrap.b32 	%r7932, %r7926, %r7925, 25;
	mov.b64 	%rd11525, {%r7932, %r7931};
	xor.b64  	%rd11526, %rd11524, %rd11525;
	and.b64  	%rd11527, %rd11495, %rd11458;
	or.b64  	%rd11528, %rd11495, %rd11458;
	and.b64  	%rd11529, %rd11528, %rd11421;
	or.b64  	%rd11530, %rd11529, %rd11527;
	add.s64 	%rd11531, %rd11530, %rd11526;
	add.s64 	%rd11532, %rd11531, %rd11520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7933,%dummy}, %rd11471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7934}, %rd11471;
	}
	shf.r.wrap.b32 	%r7935, %r7934, %r7933, 19;
	shf.r.wrap.b32 	%r7936, %r7933, %r7934, 19;
	mov.b64 	%rd11533, {%r7936, %r7935};
	shf.l.wrap.b32 	%r7937, %r7933, %r7934, 3;
	shf.l.wrap.b32 	%r7938, %r7934, %r7933, 3;
	mov.b64 	%rd11534, {%r7938, %r7937};
	xor.b64  	%rd11535, %rd11533, %rd11534;
	shr.u64 	%rd11536, %rd11471, 6;
	xor.b64  	%rd11537, %rd11535, %rd11536;
	shf.r.wrap.b32 	%r7939, %r7596, %r7595, 1;
	shf.r.wrap.b32 	%r7940, %r7595, %r7596, 1;
	mov.b64 	%rd11538, {%r7940, %r7939};
	shf.r.wrap.b32 	%r7941, %r7596, %r7595, 8;
	shf.r.wrap.b32 	%r7942, %r7595, %r7596, 8;
	mov.b64 	%rd11539, {%r7942, %r7941};
	xor.b64  	%rd11540, %rd11538, %rd11539;
	shr.u64 	%rd11541, %rd10990, 7;
	xor.b64  	%rd11542, %rd11540, %rd11541;
	add.s64 	%rd11543, %rd11542, %rd10953;
	add.s64 	%rd11544, %rd11543, %rd11286;
	add.s64 	%rd11545, %rd11544, %rd11537;
	add.s64 	%rd11546, %rd11545, %rd11410;
	xor.b64  	%rd11547, %rd11484, %rd11447;
	and.b64  	%rd11548, %rd11521, %rd11547;
	xor.b64  	%rd11549, %rd11548, %rd11447;
	add.s64 	%rd11550, %rd11546, %rd11549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7943,%dummy}, %rd11521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7944}, %rd11521;
	}
	shf.r.wrap.b32 	%r7945, %r7944, %r7943, 14;
	shf.r.wrap.b32 	%r7946, %r7943, %r7944, 14;
	mov.b64 	%rd11551, {%r7946, %r7945};
	shf.r.wrap.b32 	%r7947, %r7944, %r7943, 18;
	shf.r.wrap.b32 	%r7948, %r7943, %r7944, 18;
	mov.b64 	%rd11552, {%r7948, %r7947};
	xor.b64  	%rd11553, %rd11551, %rd11552;
	shf.l.wrap.b32 	%r7949, %r7943, %r7944, 23;
	shf.l.wrap.b32 	%r7950, %r7944, %r7943, 23;
	mov.b64 	%rd11554, {%r7950, %r7949};
	xor.b64  	%rd11555, %rd11553, %rd11554;
	add.s64 	%rd11556, %rd11550, %rd11555;
	add.s64 	%rd11557, %rd11556, 500013540394364858;
	add.s64 	%rd11558, %rd11557, %rd11421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7951,%dummy}, %rd11532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7952}, %rd11532;
	}
	shf.r.wrap.b32 	%r7953, %r7952, %r7951, 28;
	shf.r.wrap.b32 	%r7954, %r7951, %r7952, 28;
	mov.b64 	%rd11559, {%r7954, %r7953};
	shf.l.wrap.b32 	%r7955, %r7951, %r7952, 30;
	shf.l.wrap.b32 	%r7956, %r7952, %r7951, 30;
	mov.b64 	%rd11560, {%r7956, %r7955};
	xor.b64  	%rd11561, %rd11559, %rd11560;
	shf.l.wrap.b32 	%r7957, %r7951, %r7952, 25;
	shf.l.wrap.b32 	%r7958, %r7952, %r7951, 25;
	mov.b64 	%rd11562, {%r7958, %r7957};
	xor.b64  	%rd11563, %rd11561, %rd11562;
	and.b64  	%rd11564, %rd11532, %rd11495;
	or.b64  	%rd11565, %rd11532, %rd11495;
	and.b64  	%rd11566, %rd11565, %rd11458;
	or.b64  	%rd11567, %rd11566, %rd11564;
	add.s64 	%rd11568, %rd11567, %rd11563;
	add.s64 	%rd11569, %rd11568, %rd11557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7959,%dummy}, %rd11508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7960}, %rd11508;
	}
	shf.r.wrap.b32 	%r7961, %r7960, %r7959, 19;
	shf.r.wrap.b32 	%r7962, %r7959, %r7960, 19;
	mov.b64 	%rd11570, {%r7962, %r7961};
	shf.l.wrap.b32 	%r7963, %r7959, %r7960, 3;
	shf.l.wrap.b32 	%r7964, %r7960, %r7959, 3;
	mov.b64 	%rd11571, {%r7964, %r7963};
	xor.b64  	%rd11572, %rd11570, %rd11571;
	shr.u64 	%rd11573, %rd11508, 6;
	xor.b64  	%rd11574, %rd11572, %rd11573;
	shf.r.wrap.b32 	%r7965, %r7622, %r7621, 1;
	shf.r.wrap.b32 	%r7966, %r7621, %r7622, 1;
	mov.b64 	%rd11575, {%r7966, %r7965};
	shf.r.wrap.b32 	%r7967, %r7622, %r7621, 8;
	shf.r.wrap.b32 	%r7968, %r7621, %r7622, 8;
	mov.b64 	%rd11576, {%r7968, %r7967};
	xor.b64  	%rd11577, %rd11575, %rd11576;
	shr.u64 	%rd11578, %rd11027, 7;
	xor.b64  	%rd11579, %rd11577, %rd11578;
	add.s64 	%rd11580, %rd11579, %rd10990;
	add.s64 	%rd11581, %rd11580, %rd11323;
	add.s64 	%rd11582, %rd11581, %rd11574;
	add.s64 	%rd11583, %rd11582, %rd11447;
	xor.b64  	%rd11584, %rd11521, %rd11484;
	and.b64  	%rd11585, %rd11558, %rd11584;
	xor.b64  	%rd11586, %rd11585, %rd11484;
	add.s64 	%rd11587, %rd11583, %rd11586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7969,%dummy}, %rd11558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7970}, %rd11558;
	}
	shf.r.wrap.b32 	%r7971, %r7970, %r7969, 14;
	shf.r.wrap.b32 	%r7972, %r7969, %r7970, 14;
	mov.b64 	%rd11588, {%r7972, %r7971};
	shf.r.wrap.b32 	%r7973, %r7970, %r7969, 18;
	shf.r.wrap.b32 	%r7974, %r7969, %r7970, 18;
	mov.b64 	%rd11589, {%r7974, %r7973};
	xor.b64  	%rd11590, %rd11588, %rd11589;
	shf.l.wrap.b32 	%r7975, %r7969, %r7970, 23;
	shf.l.wrap.b32 	%r7976, %r7970, %r7969, 23;
	mov.b64 	%rd11591, {%r7976, %r7975};
	xor.b64  	%rd11592, %rd11590, %rd11591;
	add.s64 	%rd11593, %rd11587, %rd11592;
	add.s64 	%rd11594, %rd11593, 748580250866718886;
	add.s64 	%rd11595, %rd11594, %rd11458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7977,%dummy}, %rd11569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7978}, %rd11569;
	}
	shf.r.wrap.b32 	%r7979, %r7978, %r7977, 28;
	shf.r.wrap.b32 	%r7980, %r7977, %r7978, 28;
	mov.b64 	%rd11596, {%r7980, %r7979};
	shf.l.wrap.b32 	%r7981, %r7977, %r7978, 30;
	shf.l.wrap.b32 	%r7982, %r7978, %r7977, 30;
	mov.b64 	%rd11597, {%r7982, %r7981};
	xor.b64  	%rd11598, %rd11596, %rd11597;
	shf.l.wrap.b32 	%r7983, %r7977, %r7978, 25;
	shf.l.wrap.b32 	%r7984, %r7978, %r7977, 25;
	mov.b64 	%rd11599, {%r7984, %r7983};
	xor.b64  	%rd11600, %rd11598, %rd11599;
	and.b64  	%rd11601, %rd11569, %rd11532;
	or.b64  	%rd11602, %rd11569, %rd11532;
	and.b64  	%rd11603, %rd11602, %rd11495;
	or.b64  	%rd11604, %rd11603, %rd11601;
	add.s64 	%rd11605, %rd11604, %rd11600;
	add.s64 	%rd11606, %rd11605, %rd11594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7985,%dummy}, %rd11545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7986}, %rd11545;
	}
	shf.r.wrap.b32 	%r7987, %r7986, %r7985, 19;
	shf.r.wrap.b32 	%r7988, %r7985, %r7986, 19;
	mov.b64 	%rd11607, {%r7988, %r7987};
	shf.l.wrap.b32 	%r7989, %r7985, %r7986, 3;
	shf.l.wrap.b32 	%r7990, %r7986, %r7985, 3;
	mov.b64 	%rd11608, {%r7990, %r7989};
	xor.b64  	%rd11609, %rd11607, %rd11608;
	shr.u64 	%rd11610, %rd11545, 6;
	xor.b64  	%rd11611, %rd11609, %rd11610;
	shf.r.wrap.b32 	%r7991, %r7648, %r7647, 1;
	shf.r.wrap.b32 	%r7992, %r7647, %r7648, 1;
	mov.b64 	%rd11612, {%r7992, %r7991};
	shf.r.wrap.b32 	%r7993, %r7648, %r7647, 8;
	shf.r.wrap.b32 	%r7994, %r7647, %r7648, 8;
	mov.b64 	%rd11613, {%r7994, %r7993};
	xor.b64  	%rd11614, %rd11612, %rd11613;
	shr.u64 	%rd11615, %rd11064, 7;
	xor.b64  	%rd11616, %rd11614, %rd11615;
	add.s64 	%rd11617, %rd11616, %rd11027;
	add.s64 	%rd11618, %rd11617, %rd11360;
	add.s64 	%rd11619, %rd11618, %rd11611;
	add.s64 	%rd11620, %rd11619, %rd11484;
	xor.b64  	%rd11621, %rd11558, %rd11521;
	and.b64  	%rd11622, %rd11595, %rd11621;
	xor.b64  	%rd11623, %rd11622, %rd11521;
	add.s64 	%rd11624, %rd11620, %rd11623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7995,%dummy}, %rd11595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7996}, %rd11595;
	}
	shf.r.wrap.b32 	%r7997, %r7996, %r7995, 14;
	shf.r.wrap.b32 	%r7998, %r7995, %r7996, 14;
	mov.b64 	%rd11625, {%r7998, %r7997};
	shf.r.wrap.b32 	%r7999, %r7996, %r7995, 18;
	shf.r.wrap.b32 	%r8000, %r7995, %r7996, 18;
	mov.b64 	%rd11626, {%r8000, %r7999};
	xor.b64  	%rd11627, %rd11625, %rd11626;
	shf.l.wrap.b32 	%r8001, %r7995, %r7996, 23;
	shf.l.wrap.b32 	%r8002, %r7996, %r7995, 23;
	mov.b64 	%rd11628, {%r8002, %r8001};
	xor.b64  	%rd11629, %rd11627, %rd11628;
	add.s64 	%rd11630, %rd11624, %rd11629;
	add.s64 	%rd11631, %rd11630, 1242879168328830382;
	add.s64 	%rd11632, %rd11631, %rd11495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8003,%dummy}, %rd11606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8004}, %rd11606;
	}
	shf.r.wrap.b32 	%r8005, %r8004, %r8003, 28;
	shf.r.wrap.b32 	%r8006, %r8003, %r8004, 28;
	mov.b64 	%rd11633, {%r8006, %r8005};
	shf.l.wrap.b32 	%r8007, %r8003, %r8004, 30;
	shf.l.wrap.b32 	%r8008, %r8004, %r8003, 30;
	mov.b64 	%rd11634, {%r8008, %r8007};
	xor.b64  	%rd11635, %rd11633, %rd11634;
	shf.l.wrap.b32 	%r8009, %r8003, %r8004, 25;
	shf.l.wrap.b32 	%r8010, %r8004, %r8003, 25;
	mov.b64 	%rd11636, {%r8010, %r8009};
	xor.b64  	%rd11637, %rd11635, %rd11636;
	and.b64  	%rd11638, %rd11606, %rd11569;
	or.b64  	%rd11639, %rd11606, %rd11569;
	and.b64  	%rd11640, %rd11639, %rd11532;
	or.b64  	%rd11641, %rd11640, %rd11638;
	add.s64 	%rd11642, %rd11641, %rd11637;
	add.s64 	%rd11643, %rd11642, %rd11631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8011,%dummy}, %rd11582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8012}, %rd11582;
	}
	shf.r.wrap.b32 	%r8013, %r8012, %r8011, 19;
	shf.r.wrap.b32 	%r8014, %r8011, %r8012, 19;
	mov.b64 	%rd11644, {%r8014, %r8013};
	shf.l.wrap.b32 	%r8015, %r8011, %r8012, 3;
	shf.l.wrap.b32 	%r8016, %r8012, %r8011, 3;
	mov.b64 	%rd11645, {%r8016, %r8015};
	xor.b64  	%rd11646, %rd11644, %rd11645;
	shr.u64 	%rd11647, %rd11582, 6;
	xor.b64  	%rd11648, %rd11646, %rd11647;
	shf.r.wrap.b32 	%r8017, %r7674, %r7673, 1;
	shf.r.wrap.b32 	%r8018, %r7673, %r7674, 1;
	mov.b64 	%rd11649, {%r8018, %r8017};
	shf.r.wrap.b32 	%r8019, %r7674, %r7673, 8;
	shf.r.wrap.b32 	%r8020, %r7673, %r7674, 8;
	mov.b64 	%rd11650, {%r8020, %r8019};
	xor.b64  	%rd11651, %rd11649, %rd11650;
	shr.u64 	%rd11652, %rd11101, 7;
	xor.b64  	%rd11653, %rd11651, %rd11652;
	add.s64 	%rd11654, %rd11653, %rd11064;
	add.s64 	%rd11655, %rd11654, %rd11397;
	add.s64 	%rd11656, %rd11655, %rd11648;
	add.s64 	%rd11657, %rd11656, %rd11521;
	xor.b64  	%rd11658, %rd11595, %rd11558;
	and.b64  	%rd11659, %rd11632, %rd11658;
	xor.b64  	%rd11660, %rd11659, %rd11558;
	add.s64 	%rd11661, %rd11657, %rd11660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8021,%dummy}, %rd11632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8022}, %rd11632;
	}
	shf.r.wrap.b32 	%r8023, %r8022, %r8021, 14;
	shf.r.wrap.b32 	%r8024, %r8021, %r8022, 14;
	mov.b64 	%rd11662, {%r8024, %r8023};
	shf.r.wrap.b32 	%r8025, %r8022, %r8021, 18;
	shf.r.wrap.b32 	%r8026, %r8021, %r8022, 18;
	mov.b64 	%rd11663, {%r8026, %r8025};
	xor.b64  	%rd11664, %rd11662, %rd11663;
	shf.l.wrap.b32 	%r8027, %r8021, %r8022, 23;
	shf.l.wrap.b32 	%r8028, %r8022, %r8021, 23;
	mov.b64 	%rd11665, {%r8028, %r8027};
	xor.b64  	%rd11666, %rd11664, %rd11665;
	add.s64 	%rd11667, %rd11661, %rd11666;
	add.s64 	%rd11668, %rd11667, 1977374033974150939;
	add.s64 	%rd11669, %rd11668, %rd11532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8029,%dummy}, %rd11643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8030}, %rd11643;
	}
	shf.r.wrap.b32 	%r8031, %r8030, %r8029, 28;
	shf.r.wrap.b32 	%r8032, %r8029, %r8030, 28;
	mov.b64 	%rd11670, {%r8032, %r8031};
	shf.l.wrap.b32 	%r8033, %r8029, %r8030, 30;
	shf.l.wrap.b32 	%r8034, %r8030, %r8029, 30;
	mov.b64 	%rd11671, {%r8034, %r8033};
	xor.b64  	%rd11672, %rd11670, %rd11671;
	shf.l.wrap.b32 	%r8035, %r8029, %r8030, 25;
	shf.l.wrap.b32 	%r8036, %r8030, %r8029, 25;
	mov.b64 	%rd11673, {%r8036, %r8035};
	xor.b64  	%rd11674, %rd11672, %rd11673;
	and.b64  	%rd11675, %rd11643, %rd11606;
	or.b64  	%rd11676, %rd11643, %rd11606;
	and.b64  	%rd11677, %rd11676, %rd11569;
	or.b64  	%rd11678, %rd11677, %rd11675;
	add.s64 	%rd11679, %rd11678, %rd11674;
	add.s64 	%rd11680, %rd11679, %rd11668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8037,%dummy}, %rd11619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8038}, %rd11619;
	}
	shf.r.wrap.b32 	%r8039, %r8038, %r8037, 19;
	shf.r.wrap.b32 	%r8040, %r8037, %r8038, 19;
	mov.b64 	%rd11681, {%r8040, %r8039};
	shf.l.wrap.b32 	%r8041, %r8037, %r8038, 3;
	shf.l.wrap.b32 	%r8042, %r8038, %r8037, 3;
	mov.b64 	%rd11682, {%r8042, %r8041};
	xor.b64  	%rd11683, %rd11681, %rd11682;
	shr.u64 	%rd11684, %rd11619, 6;
	xor.b64  	%rd11685, %rd11683, %rd11684;
	shf.r.wrap.b32 	%r8043, %r7700, %r7699, 1;
	shf.r.wrap.b32 	%r8044, %r7699, %r7700, 1;
	mov.b64 	%rd11686, {%r8044, %r8043};
	shf.r.wrap.b32 	%r8045, %r7700, %r7699, 8;
	shf.r.wrap.b32 	%r8046, %r7699, %r7700, 8;
	mov.b64 	%rd11687, {%r8046, %r8045};
	xor.b64  	%rd11688, %rd11686, %rd11687;
	shr.u64 	%rd11689, %rd11138, 7;
	xor.b64  	%rd11690, %rd11688, %rd11689;
	add.s64 	%rd11691, %rd11690, %rd11101;
	add.s64 	%rd11692, %rd11691, %rd11434;
	add.s64 	%rd11693, %rd11692, %rd11685;
	add.s64 	%rd11694, %rd11693, %rd11558;
	xor.b64  	%rd11695, %rd11632, %rd11595;
	and.b64  	%rd11696, %rd11669, %rd11695;
	xor.b64  	%rd11697, %rd11696, %rd11595;
	add.s64 	%rd11698, %rd11694, %rd11697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8047,%dummy}, %rd11669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8048}, %rd11669;
	}
	shf.r.wrap.b32 	%r8049, %r8048, %r8047, 14;
	shf.r.wrap.b32 	%r8050, %r8047, %r8048, 14;
	mov.b64 	%rd11699, {%r8050, %r8049};
	shf.r.wrap.b32 	%r8051, %r8048, %r8047, 18;
	shf.r.wrap.b32 	%r8052, %r8047, %r8048, 18;
	mov.b64 	%rd11700, {%r8052, %r8051};
	xor.b64  	%rd11701, %rd11699, %rd11700;
	shf.l.wrap.b32 	%r8053, %r8047, %r8048, 23;
	shf.l.wrap.b32 	%r8054, %r8048, %r8047, 23;
	mov.b64 	%rd11702, {%r8054, %r8053};
	xor.b64  	%rd11703, %rd11701, %rd11702;
	add.s64 	%rd11704, %rd11698, %rd11703;
	add.s64 	%rd11705, %rd11704, 2944078676154940804;
	add.s64 	%rd11706, %rd11705, %rd11569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8055,%dummy}, %rd11680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8056}, %rd11680;
	}
	shf.r.wrap.b32 	%r8057, %r8056, %r8055, 28;
	shf.r.wrap.b32 	%r8058, %r8055, %r8056, 28;
	mov.b64 	%rd11707, {%r8058, %r8057};
	shf.l.wrap.b32 	%r8059, %r8055, %r8056, 30;
	shf.l.wrap.b32 	%r8060, %r8056, %r8055, 30;
	mov.b64 	%rd11708, {%r8060, %r8059};
	xor.b64  	%rd11709, %rd11707, %rd11708;
	shf.l.wrap.b32 	%r8061, %r8055, %r8056, 25;
	shf.l.wrap.b32 	%r8062, %r8056, %r8055, 25;
	mov.b64 	%rd11710, {%r8062, %r8061};
	xor.b64  	%rd11711, %rd11709, %rd11710;
	and.b64  	%rd11712, %rd11680, %rd11643;
	or.b64  	%rd11713, %rd11680, %rd11643;
	and.b64  	%rd11714, %rd11713, %rd11606;
	or.b64  	%rd11715, %rd11714, %rd11712;
	add.s64 	%rd11716, %rd11715, %rd11711;
	add.s64 	%rd11717, %rd11716, %rd11705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8063,%dummy}, %rd11656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8064}, %rd11656;
	}
	shf.r.wrap.b32 	%r8065, %r8064, %r8063, 19;
	shf.r.wrap.b32 	%r8066, %r8063, %r8064, 19;
	mov.b64 	%rd11718, {%r8066, %r8065};
	shf.l.wrap.b32 	%r8067, %r8063, %r8064, 3;
	shf.l.wrap.b32 	%r8068, %r8064, %r8063, 3;
	mov.b64 	%rd11719, {%r8068, %r8067};
	xor.b64  	%rd11720, %rd11718, %rd11719;
	shr.u64 	%rd11721, %rd11656, 6;
	xor.b64  	%rd11722, %rd11720, %rd11721;
	shf.r.wrap.b32 	%r8069, %r7726, %r7725, 1;
	shf.r.wrap.b32 	%r8070, %r7725, %r7726, 1;
	mov.b64 	%rd11723, {%r8070, %r8069};
	shf.r.wrap.b32 	%r8071, %r7726, %r7725, 8;
	shf.r.wrap.b32 	%r8072, %r7725, %r7726, 8;
	mov.b64 	%rd11724, {%r8072, %r8071};
	xor.b64  	%rd11725, %rd11723, %rd11724;
	shr.u64 	%rd11726, %rd11175, 7;
	xor.b64  	%rd11727, %rd11725, %rd11726;
	add.s64 	%rd11728, %rd11727, %rd11138;
	add.s64 	%rd11729, %rd11728, %rd11471;
	add.s64 	%rd11730, %rd11729, %rd11722;
	add.s64 	%rd11731, %rd11730, %rd11595;
	xor.b64  	%rd11732, %rd11669, %rd11632;
	and.b64  	%rd11733, %rd11706, %rd11732;
	xor.b64  	%rd11734, %rd11733, %rd11632;
	add.s64 	%rd11735, %rd11731, %rd11734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8073,%dummy}, %rd11706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8074}, %rd11706;
	}
	shf.r.wrap.b32 	%r8075, %r8074, %r8073, 14;
	shf.r.wrap.b32 	%r8076, %r8073, %r8074, 14;
	mov.b64 	%rd11736, {%r8076, %r8075};
	shf.r.wrap.b32 	%r8077, %r8074, %r8073, 18;
	shf.r.wrap.b32 	%r8078, %r8073, %r8074, 18;
	mov.b64 	%rd11737, {%r8078, %r8077};
	xor.b64  	%rd11738, %rd11736, %rd11737;
	shf.l.wrap.b32 	%r8079, %r8073, %r8074, 23;
	shf.l.wrap.b32 	%r8080, %r8074, %r8073, 23;
	mov.b64 	%rd11739, {%r8080, %r8079};
	xor.b64  	%rd11740, %rd11738, %rd11739;
	add.s64 	%rd11741, %rd11735, %rd11740;
	add.s64 	%rd11742, %rd11741, 3659926193048069267;
	add.s64 	%rd11743, %rd11742, %rd11606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8081,%dummy}, %rd11717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8082}, %rd11717;
	}
	shf.r.wrap.b32 	%r8083, %r8082, %r8081, 28;
	shf.r.wrap.b32 	%r8084, %r8081, %r8082, 28;
	mov.b64 	%rd11744, {%r8084, %r8083};
	shf.l.wrap.b32 	%r8085, %r8081, %r8082, 30;
	shf.l.wrap.b32 	%r8086, %r8082, %r8081, 30;
	mov.b64 	%rd11745, {%r8086, %r8085};
	xor.b64  	%rd11746, %rd11744, %rd11745;
	shf.l.wrap.b32 	%r8087, %r8081, %r8082, 25;
	shf.l.wrap.b32 	%r8088, %r8082, %r8081, 25;
	mov.b64 	%rd11747, {%r8088, %r8087};
	xor.b64  	%rd11748, %rd11746, %rd11747;
	and.b64  	%rd11749, %rd11717, %rd11680;
	or.b64  	%rd11750, %rd11717, %rd11680;
	and.b64  	%rd11751, %rd11750, %rd11643;
	or.b64  	%rd11752, %rd11751, %rd11749;
	add.s64 	%rd11753, %rd11752, %rd11748;
	add.s64 	%rd11754, %rd11753, %rd11742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8089,%dummy}, %rd11693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8090}, %rd11693;
	}
	shf.r.wrap.b32 	%r8091, %r8090, %r8089, 19;
	shf.r.wrap.b32 	%r8092, %r8089, %r8090, 19;
	mov.b64 	%rd11755, {%r8092, %r8091};
	shf.l.wrap.b32 	%r8093, %r8089, %r8090, 3;
	shf.l.wrap.b32 	%r8094, %r8090, %r8089, 3;
	mov.b64 	%rd11756, {%r8094, %r8093};
	xor.b64  	%rd11757, %rd11755, %rd11756;
	shr.u64 	%rd11758, %rd11693, 6;
	xor.b64  	%rd11759, %rd11757, %rd11758;
	shf.r.wrap.b32 	%r8095, %r7752, %r7751, 1;
	shf.r.wrap.b32 	%r8096, %r7751, %r7752, 1;
	mov.b64 	%rd11760, {%r8096, %r8095};
	shf.r.wrap.b32 	%r8097, %r7752, %r7751, 8;
	shf.r.wrap.b32 	%r8098, %r7751, %r7752, 8;
	mov.b64 	%rd11761, {%r8098, %r8097};
	xor.b64  	%rd11762, %rd11760, %rd11761;
	shr.u64 	%rd11763, %rd11212, 7;
	xor.b64  	%rd11764, %rd11762, %rd11763;
	add.s64 	%rd11765, %rd11764, %rd11175;
	add.s64 	%rd11766, %rd11765, %rd11508;
	add.s64 	%rd11767, %rd11766, %rd11759;
	add.s64 	%rd11768, %rd11767, %rd11632;
	xor.b64  	%rd11769, %rd11706, %rd11669;
	and.b64  	%rd11770, %rd11743, %rd11769;
	xor.b64  	%rd11771, %rd11770, %rd11669;
	add.s64 	%rd11772, %rd11768, %rd11771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8099,%dummy}, %rd11743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8100}, %rd11743;
	}
	shf.r.wrap.b32 	%r8101, %r8100, %r8099, 14;
	shf.r.wrap.b32 	%r8102, %r8099, %r8100, 14;
	mov.b64 	%rd11773, {%r8102, %r8101};
	shf.r.wrap.b32 	%r8103, %r8100, %r8099, 18;
	shf.r.wrap.b32 	%r8104, %r8099, %r8100, 18;
	mov.b64 	%rd11774, {%r8104, %r8103};
	xor.b64  	%rd11775, %rd11773, %rd11774;
	shf.l.wrap.b32 	%r8105, %r8099, %r8100, 23;
	shf.l.wrap.b32 	%r8106, %r8100, %r8099, 23;
	mov.b64 	%rd11776, {%r8106, %r8105};
	xor.b64  	%rd11777, %rd11775, %rd11776;
	add.s64 	%rd11778, %rd11772, %rd11777;
	add.s64 	%rd11779, %rd11778, 4368137639120453308;
	add.s64 	%rd11780, %rd11779, %rd11643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8107,%dummy}, %rd11754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8108}, %rd11754;
	}
	shf.r.wrap.b32 	%r8109, %r8108, %r8107, 28;
	shf.r.wrap.b32 	%r8110, %r8107, %r8108, 28;
	mov.b64 	%rd11781, {%r8110, %r8109};
	shf.l.wrap.b32 	%r8111, %r8107, %r8108, 30;
	shf.l.wrap.b32 	%r8112, %r8108, %r8107, 30;
	mov.b64 	%rd11782, {%r8112, %r8111};
	xor.b64  	%rd11783, %rd11781, %rd11782;
	shf.l.wrap.b32 	%r8113, %r8107, %r8108, 25;
	shf.l.wrap.b32 	%r8114, %r8108, %r8107, 25;
	mov.b64 	%rd11784, {%r8114, %r8113};
	xor.b64  	%rd11785, %rd11783, %rd11784;
	and.b64  	%rd11786, %rd11754, %rd11717;
	or.b64  	%rd11787, %rd11754, %rd11717;
	and.b64  	%rd11788, %rd11787, %rd11680;
	or.b64  	%rd11789, %rd11788, %rd11786;
	add.s64 	%rd11790, %rd11789, %rd11785;
	add.s64 	%rd11791, %rd11790, %rd11779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8115,%dummy}, %rd11730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8116}, %rd11730;
	}
	shf.r.wrap.b32 	%r8117, %r8116, %r8115, 19;
	shf.r.wrap.b32 	%r8118, %r8115, %r8116, 19;
	mov.b64 	%rd11792, {%r8118, %r8117};
	shf.l.wrap.b32 	%r8119, %r8115, %r8116, 3;
	shf.l.wrap.b32 	%r8120, %r8116, %r8115, 3;
	mov.b64 	%rd11793, {%r8120, %r8119};
	xor.b64  	%rd11794, %rd11792, %rd11793;
	shr.u64 	%rd11795, %rd11730, 6;
	xor.b64  	%rd11796, %rd11794, %rd11795;
	shf.r.wrap.b32 	%r8121, %r7778, %r7777, 1;
	shf.r.wrap.b32 	%r8122, %r7777, %r7778, 1;
	mov.b64 	%rd11797, {%r8122, %r8121};
	shf.r.wrap.b32 	%r8123, %r7778, %r7777, 8;
	shf.r.wrap.b32 	%r8124, %r7777, %r7778, 8;
	mov.b64 	%rd11798, {%r8124, %r8123};
	xor.b64  	%rd11799, %rd11797, %rd11798;
	shr.u64 	%rd11800, %rd11249, 7;
	xor.b64  	%rd11801, %rd11799, %rd11800;
	add.s64 	%rd11802, %rd11801, %rd11212;
	add.s64 	%rd11803, %rd11802, %rd11545;
	add.s64 	%rd11804, %rd11803, %rd11796;
	add.s64 	%rd11805, %rd11804, %rd11669;
	xor.b64  	%rd11806, %rd11743, %rd11706;
	and.b64  	%rd11807, %rd11780, %rd11806;
	xor.b64  	%rd11808, %rd11807, %rd11706;
	add.s64 	%rd11809, %rd11805, %rd11808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8125,%dummy}, %rd11780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8126}, %rd11780;
	}
	shf.r.wrap.b32 	%r8127, %r8126, %r8125, 14;
	shf.r.wrap.b32 	%r8128, %r8125, %r8126, 14;
	mov.b64 	%rd11810, {%r8128, %r8127};
	shf.r.wrap.b32 	%r8129, %r8126, %r8125, 18;
	shf.r.wrap.b32 	%r8130, %r8125, %r8126, 18;
	mov.b64 	%rd11811, {%r8130, %r8129};
	xor.b64  	%rd11812, %rd11810, %rd11811;
	shf.l.wrap.b32 	%r8131, %r8125, %r8126, 23;
	shf.l.wrap.b32 	%r8132, %r8126, %r8125, 23;
	mov.b64 	%rd11813, {%r8132, %r8131};
	xor.b64  	%rd11814, %rd11812, %rd11813;
	add.s64 	%rd11815, %rd11809, %rd11814;
	add.s64 	%rd11816, %rd11815, 4836135668995329356;
	add.s64 	%rd11817, %rd11816, %rd11680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8133,%dummy}, %rd11791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8134}, %rd11791;
	}
	shf.r.wrap.b32 	%r8135, %r8134, %r8133, 28;
	shf.r.wrap.b32 	%r8136, %r8133, %r8134, 28;
	mov.b64 	%rd11818, {%r8136, %r8135};
	shf.l.wrap.b32 	%r8137, %r8133, %r8134, 30;
	shf.l.wrap.b32 	%r8138, %r8134, %r8133, 30;
	mov.b64 	%rd11819, {%r8138, %r8137};
	xor.b64  	%rd11820, %rd11818, %rd11819;
	shf.l.wrap.b32 	%r8139, %r8133, %r8134, 25;
	shf.l.wrap.b32 	%r8140, %r8134, %r8133, 25;
	mov.b64 	%rd11821, {%r8140, %r8139};
	xor.b64  	%rd11822, %rd11820, %rd11821;
	and.b64  	%rd11823, %rd11791, %rd11754;
	or.b64  	%rd11824, %rd11791, %rd11754;
	and.b64  	%rd11825, %rd11824, %rd11717;
	or.b64  	%rd11826, %rd11825, %rd11823;
	add.s64 	%rd11827, %rd11826, %rd11822;
	add.s64 	%rd11828, %rd11827, %rd11816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8141,%dummy}, %rd11767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8142}, %rd11767;
	}
	shf.r.wrap.b32 	%r8143, %r8142, %r8141, 19;
	shf.r.wrap.b32 	%r8144, %r8141, %r8142, 19;
	mov.b64 	%rd11829, {%r8144, %r8143};
	shf.l.wrap.b32 	%r8145, %r8141, %r8142, 3;
	shf.l.wrap.b32 	%r8146, %r8142, %r8141, 3;
	mov.b64 	%rd11830, {%r8146, %r8145};
	xor.b64  	%rd11831, %rd11829, %rd11830;
	shr.u64 	%rd11832, %rd11767, 6;
	xor.b64  	%rd11833, %rd11831, %rd11832;
	shf.r.wrap.b32 	%r8147, %r7804, %r7803, 1;
	shf.r.wrap.b32 	%r8148, %r7803, %r7804, 1;
	mov.b64 	%rd11834, {%r8148, %r8147};
	shf.r.wrap.b32 	%r8149, %r7804, %r7803, 8;
	shf.r.wrap.b32 	%r8150, %r7803, %r7804, 8;
	mov.b64 	%rd11835, {%r8150, %r8149};
	xor.b64  	%rd11836, %rd11834, %rd11835;
	shr.u64 	%rd11837, %rd11286, 7;
	xor.b64  	%rd11838, %rd11836, %rd11837;
	add.s64 	%rd11839, %rd11838, %rd11249;
	add.s64 	%rd11840, %rd11839, %rd11582;
	add.s64 	%rd11841, %rd11840, %rd11833;
	add.s64 	%rd11842, %rd11841, %rd11706;
	xor.b64  	%rd11843, %rd11780, %rd11743;
	and.b64  	%rd11844, %rd11817, %rd11843;
	xor.b64  	%rd11845, %rd11844, %rd11743;
	add.s64 	%rd11846, %rd11842, %rd11845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8151,%dummy}, %rd11817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8152}, %rd11817;
	}
	shf.r.wrap.b32 	%r8153, %r8152, %r8151, 14;
	shf.r.wrap.b32 	%r8154, %r8151, %r8152, 14;
	mov.b64 	%rd11847, {%r8154, %r8153};
	shf.r.wrap.b32 	%r8155, %r8152, %r8151, 18;
	shf.r.wrap.b32 	%r8156, %r8151, %r8152, 18;
	mov.b64 	%rd11848, {%r8156, %r8155};
	xor.b64  	%rd11849, %rd11847, %rd11848;
	shf.l.wrap.b32 	%r8157, %r8151, %r8152, 23;
	shf.l.wrap.b32 	%r8158, %r8152, %r8151, 23;
	mov.b64 	%rd11850, {%r8158, %r8157};
	xor.b64  	%rd11851, %rd11849, %rd11850;
	add.s64 	%rd11852, %rd11846, %rd11851;
	add.s64 	%rd11853, %rd11852, 5532061633213252278;
	add.s64 	%rd11854, %rd11853, %rd11717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8159,%dummy}, %rd11828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8160}, %rd11828;
	}
	shf.r.wrap.b32 	%r8161, %r8160, %r8159, 28;
	shf.r.wrap.b32 	%r8162, %r8159, %r8160, 28;
	mov.b64 	%rd11855, {%r8162, %r8161};
	shf.l.wrap.b32 	%r8163, %r8159, %r8160, 30;
	shf.l.wrap.b32 	%r8164, %r8160, %r8159, 30;
	mov.b64 	%rd11856, {%r8164, %r8163};
	xor.b64  	%rd11857, %rd11855, %rd11856;
	shf.l.wrap.b32 	%r8165, %r8159, %r8160, 25;
	shf.l.wrap.b32 	%r8166, %r8160, %r8159, 25;
	mov.b64 	%rd11858, {%r8166, %r8165};
	xor.b64  	%rd11859, %rd11857, %rd11858;
	and.b64  	%rd11860, %rd11828, %rd11791;
	or.b64  	%rd11861, %rd11828, %rd11791;
	and.b64  	%rd11862, %rd11861, %rd11754;
	or.b64  	%rd11863, %rd11862, %rd11860;
	add.s64 	%rd11864, %rd11863, %rd11859;
	add.s64 	%rd11865, %rd11864, %rd11853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8167,%dummy}, %rd11804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8168}, %rd11804;
	}
	shf.r.wrap.b32 	%r8169, %r8168, %r8167, 19;
	shf.r.wrap.b32 	%r8170, %r8167, %r8168, 19;
	mov.b64 	%rd11866, {%r8170, %r8169};
	shf.l.wrap.b32 	%r8171, %r8167, %r8168, 3;
	shf.l.wrap.b32 	%r8172, %r8168, %r8167, 3;
	mov.b64 	%rd11867, {%r8172, %r8171};
	xor.b64  	%rd11868, %rd11866, %rd11867;
	shr.u64 	%rd11869, %rd11804, 6;
	xor.b64  	%rd11870, %rd11868, %rd11869;
	shf.r.wrap.b32 	%r8173, %r7830, %r7829, 1;
	shf.r.wrap.b32 	%r8174, %r7829, %r7830, 1;
	mov.b64 	%rd11871, {%r8174, %r8173};
	shf.r.wrap.b32 	%r8175, %r7830, %r7829, 8;
	shf.r.wrap.b32 	%r8176, %r7829, %r7830, 8;
	mov.b64 	%rd11872, {%r8176, %r8175};
	xor.b64  	%rd11873, %rd11871, %rd11872;
	shr.u64 	%rd11874, %rd11323, 7;
	xor.b64  	%rd11875, %rd11873, %rd11874;
	add.s64 	%rd11876, %rd11875, %rd11286;
	add.s64 	%rd11877, %rd11876, %rd11619;
	add.s64 	%rd11878, %rd11877, %rd11870;
	add.s64 	%rd11879, %rd11878, %rd11743;
	xor.b64  	%rd11880, %rd11817, %rd11780;
	and.b64  	%rd11881, %rd11854, %rd11880;
	xor.b64  	%rd11882, %rd11881, %rd11780;
	add.s64 	%rd11883, %rd11879, %rd11882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8177,%dummy}, %rd11854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8178}, %rd11854;
	}
	shf.r.wrap.b32 	%r8179, %r8178, %r8177, 14;
	shf.r.wrap.b32 	%r8180, %r8177, %r8178, 14;
	mov.b64 	%rd11884, {%r8180, %r8179};
	shf.r.wrap.b32 	%r8181, %r8178, %r8177, 18;
	shf.r.wrap.b32 	%r8182, %r8177, %r8178, 18;
	mov.b64 	%rd11885, {%r8182, %r8181};
	xor.b64  	%rd11886, %rd11884, %rd11885;
	shf.l.wrap.b32 	%r8183, %r8177, %r8178, 23;
	shf.l.wrap.b32 	%r8184, %r8178, %r8177, 23;
	mov.b64 	%rd11887, {%r8184, %r8183};
	xor.b64  	%rd11888, %rd11886, %rd11887;
	add.s64 	%rd11889, %rd11883, %rd11888;
	add.s64 	%rd11890, %rd11889, 6448918945643986474;
	add.s64 	%rd11891, %rd11890, %rd11754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8185,%dummy}, %rd11865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8186}, %rd11865;
	}
	shf.r.wrap.b32 	%r8187, %r8186, %r8185, 28;
	shf.r.wrap.b32 	%r8188, %r8185, %r8186, 28;
	mov.b64 	%rd11892, {%r8188, %r8187};
	shf.l.wrap.b32 	%r8189, %r8185, %r8186, 30;
	shf.l.wrap.b32 	%r8190, %r8186, %r8185, 30;
	mov.b64 	%rd11893, {%r8190, %r8189};
	xor.b64  	%rd11894, %rd11892, %rd11893;
	shf.l.wrap.b32 	%r8191, %r8185, %r8186, 25;
	shf.l.wrap.b32 	%r8192, %r8186, %r8185, 25;
	mov.b64 	%rd11895, {%r8192, %r8191};
	xor.b64  	%rd11896, %rd11894, %rd11895;
	and.b64  	%rd11897, %rd11865, %rd11828;
	or.b64  	%rd11898, %rd11865, %rd11828;
	and.b64  	%rd11899, %rd11898, %rd11791;
	or.b64  	%rd11900, %rd11899, %rd11897;
	add.s64 	%rd11901, %rd11900, %rd11896;
	add.s64 	%rd11902, %rd11901, %rd11890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8193,%dummy}, %rd11841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8194}, %rd11841;
	}
	shf.r.wrap.b32 	%r8195, %r8194, %r8193, 19;
	shf.r.wrap.b32 	%r8196, %r8193, %r8194, 19;
	mov.b64 	%rd11903, {%r8196, %r8195};
	shf.l.wrap.b32 	%r8197, %r8193, %r8194, 3;
	shf.l.wrap.b32 	%r8198, %r8194, %r8193, 3;
	mov.b64 	%rd11904, {%r8198, %r8197};
	xor.b64  	%rd11905, %rd11903, %rd11904;
	shr.u64 	%rd11906, %rd11841, 6;
	xor.b64  	%rd11907, %rd11905, %rd11906;
	shf.r.wrap.b32 	%r8199, %r7856, %r7855, 1;
	shf.r.wrap.b32 	%r8200, %r7855, %r7856, 1;
	mov.b64 	%rd11908, {%r8200, %r8199};
	shf.r.wrap.b32 	%r8201, %r7856, %r7855, 8;
	shf.r.wrap.b32 	%r8202, %r7855, %r7856, 8;
	mov.b64 	%rd11909, {%r8202, %r8201};
	xor.b64  	%rd11910, %rd11908, %rd11909;
	shr.u64 	%rd11911, %rd11360, 7;
	xor.b64  	%rd11912, %rd11910, %rd11911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8203,%dummy}, %rd11891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8204}, %rd11891;
	}
	shf.r.wrap.b32 	%r8205, %r8204, %r8203, 14;
	shf.r.wrap.b32 	%r8206, %r8203, %r8204, 14;
	mov.b64 	%rd11913, {%r8206, %r8205};
	shf.r.wrap.b32 	%r8207, %r8204, %r8203, 18;
	shf.r.wrap.b32 	%r8208, %r8203, %r8204, 18;
	mov.b64 	%rd11914, {%r8208, %r8207};
	xor.b64  	%rd11915, %rd11913, %rd11914;
	shf.l.wrap.b32 	%r8209, %r8203, %r8204, 23;
	shf.l.wrap.b32 	%r8210, %r8204, %r8203, 23;
	mov.b64 	%rd11916, {%r8210, %r8209};
	xor.b64  	%rd11917, %rd11915, %rd11916;
	xor.b64  	%rd11918, %rd11854, %rd11817;
	and.b64  	%rd11919, %rd11891, %rd11918;
	xor.b64  	%rd11920, %rd11919, %rd11817;
	add.s64 	%rd11921, %rd11323, %rd11912;
	add.s64 	%rd11922, %rd11921, %rd11656;
	add.s64 	%rd11923, %rd11922, %rd11907;
	add.s64 	%rd11924, %rd11923, %rd11780;
	add.s64 	%rd11925, %rd11924, %rd11920;
	add.s64 	%rd11926, %rd11925, %rd11917;
	add.s64 	%rd11927, %rd11926, 6902733635092675308;
	add.s64 	%rd11928, %rd11927, %rd11791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8211,%dummy}, %rd11902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8212}, %rd11902;
	}
	shf.r.wrap.b32 	%r8213, %r8212, %r8211, 28;
	shf.r.wrap.b32 	%r8214, %r8211, %r8212, 28;
	mov.b64 	%rd11929, {%r8214, %r8213};
	shf.l.wrap.b32 	%r8215, %r8211, %r8212, 30;
	shf.l.wrap.b32 	%r8216, %r8212, %r8211, 30;
	mov.b64 	%rd11930, {%r8216, %r8215};
	xor.b64  	%rd11931, %rd11929, %rd11930;
	shf.l.wrap.b32 	%r8217, %r8211, %r8212, 25;
	shf.l.wrap.b32 	%r8218, %r8212, %r8211, 25;
	mov.b64 	%rd11932, {%r8218, %r8217};
	xor.b64  	%rd11933, %rd11931, %rd11932;
	and.b64  	%rd11934, %rd11902, %rd11865;
	or.b64  	%rd11935, %rd11902, %rd11865;
	and.b64  	%rd11936, %rd11935, %rd11828;
	or.b64  	%rd11937, %rd11936, %rd11934;
	add.s64 	%rd11938, %rd11937, %rd11933;
	add.s64 	%rd11939, %rd11938, %rd11927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8219,%dummy}, %rd11878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8220}, %rd11878;
	}
	shf.r.wrap.b32 	%r8221, %r8220, %r8219, 19;
	shf.r.wrap.b32 	%r8222, %r8219, %r8220, 19;
	mov.b64 	%rd11940, {%r8222, %r8221};
	shf.l.wrap.b32 	%r8223, %r8219, %r8220, 3;
	shf.l.wrap.b32 	%r8224, %r8220, %r8219, 3;
	mov.b64 	%rd11941, {%r8224, %r8223};
	xor.b64  	%rd11942, %rd11940, %rd11941;
	shr.u64 	%rd11943, %rd11878, 6;
	xor.b64  	%rd11944, %rd11942, %rd11943;
	shf.r.wrap.b32 	%r8225, %r7882, %r7881, 1;
	shf.r.wrap.b32 	%r8226, %r7881, %r7882, 1;
	mov.b64 	%rd11945, {%r8226, %r8225};
	shf.r.wrap.b32 	%r8227, %r7882, %r7881, 8;
	shf.r.wrap.b32 	%r8228, %r7881, %r7882, 8;
	mov.b64 	%rd11946, {%r8228, %r8227};
	xor.b64  	%rd11947, %rd11945, %rd11946;
	shr.u64 	%rd11948, %rd11397, 7;
	xor.b64  	%rd11949, %rd11947, %rd11948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8229,%dummy}, %rd11928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8230}, %rd11928;
	}
	shf.r.wrap.b32 	%r8231, %r8230, %r8229, 14;
	shf.r.wrap.b32 	%r8232, %r8229, %r8230, 14;
	mov.b64 	%rd11950, {%r8232, %r8231};
	shf.r.wrap.b32 	%r8233, %r8230, %r8229, 18;
	shf.r.wrap.b32 	%r8234, %r8229, %r8230, 18;
	mov.b64 	%rd11951, {%r8234, %r8233};
	xor.b64  	%rd11952, %rd11950, %rd11951;
	shf.l.wrap.b32 	%r8235, %r8229, %r8230, 23;
	shf.l.wrap.b32 	%r8236, %r8230, %r8229, 23;
	mov.b64 	%rd11953, {%r8236, %r8235};
	xor.b64  	%rd11954, %rd11952, %rd11953;
	xor.b64  	%rd11955, %rd11891, %rd11854;
	and.b64  	%rd11956, %rd11928, %rd11955;
	xor.b64  	%rd11957, %rd11956, %rd11854;
	add.s64 	%rd11958, %rd11360, %rd11949;
	add.s64 	%rd11959, %rd11958, %rd11693;
	add.s64 	%rd11960, %rd11959, %rd11944;
	add.s64 	%rd11961, %rd11960, %rd11817;
	add.s64 	%rd11962, %rd11961, %rd11957;
	add.s64 	%rd11963, %rd11962, %rd11954;
	add.s64 	%rd11964, %rd11963, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8237,%dummy}, %rd11939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8238}, %rd11939;
	}
	shf.r.wrap.b32 	%r8239, %r8238, %r8237, 28;
	shf.r.wrap.b32 	%r8240, %r8237, %r8238, 28;
	mov.b64 	%rd11965, {%r8240, %r8239};
	shf.l.wrap.b32 	%r8241, %r8237, %r8238, 30;
	shf.l.wrap.b32 	%r8242, %r8238, %r8237, 30;
	mov.b64 	%rd11966, {%r8242, %r8241};
	xor.b64  	%rd11967, %rd11965, %rd11966;
	shf.l.wrap.b32 	%r8243, %r8237, %r8238, 25;
	shf.l.wrap.b32 	%r8244, %r8238, %r8237, 25;
	mov.b64 	%rd11968, {%r8244, %r8243};
	xor.b64  	%rd11969, %rd11967, %rd11968;
	and.b64  	%rd11970, %rd11939, %rd11902;
	or.b64  	%rd11971, %rd11939, %rd11902;
	and.b64  	%rd11972, %rd11971, %rd11865;
	or.b64  	%rd11973, %rd11972, %rd11970;
	add.s64 	%rd11974, %rd11969, %rd9235;
	add.s64 	%rd11975, %rd11974, %rd11973;
	add.s64 	%rd11976, %rd11975, %rd11964;
	st.local.u64 	[%rd4+8], %rd11976;
	add.s64 	%rd11977, %rd11939, %rd9241;
	st.local.u64 	[%rd4+16], %rd11977;
	add.s64 	%rd11978, %rd11902, %rd9244;
	st.local.u64 	[%rd4+24], %rd11978;
	add.s64 	%rd11979, %rd11865, %rd9233;
	st.local.u64 	[%rd4+32], %rd11979;
	add.s64 	%rd11980, %rd11828, %rd9219;
	add.s64 	%rd11981, %rd11980, %rd11964;
	st.local.u64 	[%rd4+40], %rd11981;
	add.s64 	%rd11982, %rd11928, %rd9227;
	st.local.u64 	[%rd4+48], %rd11982;
	add.s64 	%rd11983, %rd11891, %rd9226;
	st.local.u64 	[%rd4+56], %rd11983;
	add.s64 	%rd11984, %rd11854, %rd9217;
	st.local.u64 	[%rd4+64], %rd11984;
	add.s64 	%rd12081, %rd12081, 128;
	add.s64 	%rd12063, %rd12063, 128;
	add.s32 	%r8282, %r8282, -128;
	setp.gt.u32 	%p40, %r8282, 127;
	@%p40 bra 	$L__BB8_43;

$L__BB8_47:
	setp.eq.s32 	%p41, %r8282, 0;
	@%p41 bra 	$L__BB8_53;

	cvt.u64.u32 	%rd11985, %r8279;
	add.s64 	%rd11986, %rd4, %rd11985;
	add.s64 	%rd12086, %rd11986, 72;
	and.b32  	%r8284, %r8282, 3;
	setp.eq.s32 	%p42, %r8284, 0;
	mov.u32 	%r8285, %r8282;
	@%p42 bra 	$L__BB8_51;

	mov.u64 	%rd12082, %rd12086;
	mov.u64 	%rd12083, %rd12081;
	mov.u32 	%r8285, %r8282;

$L__BB8_50:
	.pragma "nounroll";
	add.s32 	%r8285, %r8285, -1;
	add.s64 	%rd12081, %rd12083, 1;
	ld.local.u8 	%rs33, [%rd12083];
	add.s64 	%rd12086, %rd12082, 1;
	st.local.u8 	[%rd12082], %rs33;
	add.s32 	%r8284, %r8284, -1;
	setp.ne.s32 	%p43, %r8284, 0;
	mov.u64 	%rd12082, %rd12086;
	mov.u64 	%rd12083, %rd12081;
	@%p43 bra 	$L__BB8_50;

$L__BB8_51:
	add.s32 	%r8245, %r8282, -1;
	setp.lt.u32 	%p44, %r8245, 3;
	@%p44 bra 	$L__BB8_53;

$L__BB8_52:
	ld.local.u8 	%rs34, [%rd12081];
	st.local.u8 	[%rd12086], %rs34;
	ld.local.u8 	%rs35, [%rd12081+1];
	st.local.u8 	[%rd12086+1], %rs35;
	ld.local.u8 	%rs36, [%rd12081+2];
	st.local.u8 	[%rd12086+2], %rs36;
	add.s64 	%rd203, %rd12081, 4;
	ld.local.u8 	%rs37, [%rd12081+3];
	add.s64 	%rd204, %rd12086, 4;
	st.local.u8 	[%rd12086+3], %rs37;
	add.s32 	%r8285, %r8285, -4;
	setp.ne.s32 	%p45, %r8285, 0;
	mov.u64 	%rd12086, %rd204;
	mov.u64 	%rd12081, %rd203;
	@%p45 bra 	$L__BB8_52;

$L__BB8_53:
	mov.b32 	%r8253, %envreg3;
	mov.u32 	%r8252, %tid.x;
	add.s32 	%r8251, %r8252, %r8253;
	mov.u32 	%r8250, %ctaid.x;
	mov.u32 	%r8249, %ntid.x;
	mad.lo.s32 	%r8248, %r8249, %r8250, %r8251;
	cvt.u64.u32 	%rd12000, %r8248;
	ld.param.u64 	%rd11999, [sspr_salted_sha512_param_3];
	ld.param.u64 	%rd11998, [sspr_salted_sha512_param_2];
	ld.local.u64 	%rd11987, [%rd4+8];
	ld.local.u64 	%rd11988, [%rd4+16];
	ld.local.u64 	%rd11989, [%rd4+24];
	ld.local.u64 	%rd11990, [%rd4+32];
	ld.local.u64 	%rd11991, [%rd4+40];
	ld.local.u64 	%rd11992, [%rd4+48];
	ld.local.u64 	%rd11993, [%rd4+56];
	ld.local.u64 	%rd11994, [%rd4+64];
	mul.lo.s64 	%rd11995, %rd12000, 72;
	add.s64 	%rd11996, %rd11999, %rd11995;
	st.global.u64 	[%rd11996], %rd11987;
	st.global.u64 	[%rd11996+8], %rd11988;
	st.global.u64 	[%rd11996+16], %rd11989;
	st.global.u64 	[%rd11996+24], %rd11990;
	st.global.u64 	[%rd11996+32], %rd11991;
	st.global.u64 	[%rd11996+40], %rd11992;
	st.global.u64 	[%rd11996+48], %rd11993;
	st.global.u64 	[%rd11996+56], %rd11994;
	ld.const.u32 	%r8246, [%rd11998+4];
	add.s32 	%r8247, %r8246, -1;
	st.global.u32 	[%rd11996+64], %r8247;
	ret;

}
.func SHA512_Update(
	.param .b64 SHA512_Update_param_0,
	.param .b64 SHA512_Update_param_1,
	.param .b32 SHA512_Update_param_2
)
{
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<11>;
	.reg .b32 	%r<4164>;
	.reg .b64 	%rd<6335>;


	ld.param.u64 	%rd132, [SHA512_Update_param_0];
	ld.param.u64 	%rd6311, [SHA512_Update_param_1];
	ld.param.u32 	%r4159, [SHA512_Update_param_2];
	cvta.to.local.u64 	%rd6328, %rd6311;
	cvta.to.local.u64 	%rd2, %rd132;
	setp.eq.s32 	%p1, %r4159, 0;
	@%p1 bra 	$L__BB9_23;

	ld.local.u32 	%r26, [%rd2];
	and.b32  	%r4156, %r26, 127;
	mov.u32 	%r27, 128;
	sub.s32 	%r2, %r27, %r4156;
	add.s32 	%r28, %r26, %r4159;
	st.local.u32 	[%rd2], %r28;
	setp.eq.s32 	%p2, %r4156, 0;
	setp.gt.u32 	%p3, %r2, %r4159;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	$L__BB9_12;

	setp.eq.s32 	%p5, %r2, 0;
	@%p5 bra 	$L__BB9_8;

	cvt.u64.u32 	%rd134, %r4156;
	add.s64 	%rd135, %rd2, %rd134;
	add.s64 	%rd6290, %rd135, 72;
	and.b32  	%r4153, %r2, 3;
	setp.eq.s32 	%p6, %r4153, 0;
	mov.u64 	%rd6291, %rd6328;
	mov.u32 	%r4154, %r2;
	@%p6 bra 	$L__BB9_6;

	mov.u64 	%rd6286, %rd6290;
	mov.u64 	%rd6287, %rd6328;
	mov.u32 	%r4154, %r2;

$L__BB9_5:
	.pragma "nounroll";
	add.s32 	%r4154, %r4154, -1;
	add.s64 	%rd6291, %rd6287, 1;
	ld.local.u8 	%rs1, [%rd6287];
	add.s64 	%rd6290, %rd6286, 1;
	st.local.u8 	[%rd6286], %rs1;
	add.s32 	%r4153, %r4153, -1;
	setp.ne.s32 	%p7, %r4153, 0;
	mov.u64 	%rd6286, %rd6290;
	mov.u64 	%rd6287, %rd6291;
	@%p7 bra 	$L__BB9_5;

$L__BB9_6:
	xor.b32  	%r29, %r4156, 127;
	setp.lt.u32 	%p8, %r29, 3;
	@%p8 bra 	$L__BB9_8;

$L__BB9_7:
	ld.local.u8 	%rs2, [%rd6291];
	st.local.u8 	[%rd6290], %rs2;
	ld.local.u8 	%rs3, [%rd6291+1];
	st.local.u8 	[%rd6290+1], %rs3;
	ld.local.u8 	%rs4, [%rd6291+2];
	st.local.u8 	[%rd6290+2], %rs4;
	add.s64 	%rd13, %rd6291, 4;
	ld.local.u8 	%rs5, [%rd6291+3];
	add.s64 	%rd14, %rd6290, 4;
	st.local.u8 	[%rd6290+3], %rs5;
	add.s32 	%r4154, %r4154, -4;
	setp.ne.s32 	%p9, %r4154, 0;
	mov.u64 	%rd6290, %rd14;
	mov.u64 	%rd6291, %rd13;
	@%p9 bra 	$L__BB9_7;

$L__BB9_8:
	add.s64 	%rd136, %rd132, 72;
	and.b64  	%rd137, %rd136, 7;
	setp.eq.s64 	%p10, %rd137, 0;
	@%p10 bra 	$L__BB9_10;

	ld.local.u8 	%rd138, [%rd2+72];
	shl.b64 	%rd139, %rd138, 56;
	ld.local.u8 	%rd140, [%rd2+73];
	shl.b64 	%rd141, %rd140, 48;
	or.b64  	%rd142, %rd141, %rd139;
	ld.local.u8 	%rd143, [%rd2+74];
	shl.b64 	%rd144, %rd143, 40;
	or.b64  	%rd145, %rd142, %rd144;
	ld.local.u8 	%rd146, [%rd2+75];
	shl.b64 	%rd147, %rd146, 32;
	or.b64  	%rd148, %rd145, %rd147;
	ld.local.u8 	%r30, [%rd2+76];
	mul.wide.u32 	%rd149, %r30, 16777216;
	or.b64  	%rd150, %rd148, %rd149;
	ld.local.u8 	%r31, [%rd2+77];
	mul.wide.u32 	%rd151, %r31, 65536;
	or.b64  	%rd152, %rd150, %rd151;
	ld.local.u8 	%r32, [%rd2+78];
	mul.wide.u32 	%rd153, %r32, 256;
	or.b64  	%rd154, %rd152, %rd153;
	ld.local.u8 	%rd155, [%rd2+79];
	or.b64  	%rd6307, %rd154, %rd155;
	ld.local.u8 	%rd156, [%rd2+80];
	shl.b64 	%rd157, %rd156, 56;
	ld.local.u8 	%rd158, [%rd2+81];
	shl.b64 	%rd159, %rd158, 48;
	or.b64  	%rd160, %rd159, %rd157;
	ld.local.u8 	%rd161, [%rd2+82];
	shl.b64 	%rd162, %rd161, 40;
	or.b64  	%rd163, %rd160, %rd162;
	ld.local.u8 	%rd164, [%rd2+83];
	shl.b64 	%rd165, %rd164, 32;
	or.b64  	%rd166, %rd163, %rd165;
	ld.local.u8 	%r33, [%rd2+84];
	mul.wide.u32 	%rd167, %r33, 16777216;
	or.b64  	%rd168, %rd166, %rd167;
	ld.local.u8 	%r34, [%rd2+85];
	mul.wide.u32 	%rd169, %r34, 65536;
	or.b64  	%rd170, %rd168, %rd169;
	ld.local.u8 	%r35, [%rd2+86];
	mul.wide.u32 	%rd171, %r35, 256;
	or.b64  	%rd172, %rd170, %rd171;
	ld.local.u8 	%rd173, [%rd2+87];
	or.b64  	%rd6306, %rd172, %rd173;
	ld.local.u8 	%rd174, [%rd2+88];
	shl.b64 	%rd175, %rd174, 56;
	ld.local.u8 	%rd176, [%rd2+89];
	shl.b64 	%rd177, %rd176, 48;
	or.b64  	%rd178, %rd177, %rd175;
	ld.local.u8 	%rd179, [%rd2+90];
	shl.b64 	%rd180, %rd179, 40;
	or.b64  	%rd181, %rd178, %rd180;
	ld.local.u8 	%rd182, [%rd2+91];
	shl.b64 	%rd183, %rd182, 32;
	or.b64  	%rd184, %rd181, %rd183;
	ld.local.u8 	%r36, [%rd2+92];
	mul.wide.u32 	%rd185, %r36, 16777216;
	or.b64  	%rd186, %rd184, %rd185;
	ld.local.u8 	%r37, [%rd2+93];
	mul.wide.u32 	%rd187, %r37, 65536;
	or.b64  	%rd188, %rd186, %rd187;
	ld.local.u8 	%r38, [%rd2+94];
	mul.wide.u32 	%rd189, %r38, 256;
	or.b64  	%rd190, %rd188, %rd189;
	ld.local.u8 	%rd191, [%rd2+95];
	or.b64  	%rd6305, %rd190, %rd191;
	ld.local.u8 	%rd192, [%rd2+96];
	shl.b64 	%rd193, %rd192, 56;
	ld.local.u8 	%rd194, [%rd2+97];
	shl.b64 	%rd195, %rd194, 48;
	or.b64  	%rd196, %rd195, %rd193;
	ld.local.u8 	%rd197, [%rd2+98];
	shl.b64 	%rd198, %rd197, 40;
	or.b64  	%rd199, %rd196, %rd198;
	ld.local.u8 	%rd200, [%rd2+99];
	shl.b64 	%rd201, %rd200, 32;
	or.b64  	%rd202, %rd199, %rd201;
	ld.local.u8 	%r39, [%rd2+100];
	mul.wide.u32 	%rd203, %r39, 16777216;
	or.b64  	%rd204, %rd202, %rd203;
	ld.local.u8 	%r40, [%rd2+101];
	mul.wide.u32 	%rd205, %r40, 65536;
	or.b64  	%rd206, %rd204, %rd205;
	ld.local.u8 	%r41, [%rd2+102];
	mul.wide.u32 	%rd207, %r41, 256;
	or.b64  	%rd208, %rd206, %rd207;
	ld.local.u8 	%rd209, [%rd2+103];
	or.b64  	%rd6304, %rd208, %rd209;
	ld.local.u8 	%rd210, [%rd2+104];
	shl.b64 	%rd211, %rd210, 56;
	ld.local.u8 	%rd212, [%rd2+105];
	shl.b64 	%rd213, %rd212, 48;
	or.b64  	%rd214, %rd213, %rd211;
	ld.local.u8 	%rd215, [%rd2+106];
	shl.b64 	%rd216, %rd215, 40;
	or.b64  	%rd217, %rd214, %rd216;
	ld.local.u8 	%rd218, [%rd2+107];
	shl.b64 	%rd219, %rd218, 32;
	or.b64  	%rd220, %rd217, %rd219;
	ld.local.u8 	%r42, [%rd2+108];
	mul.wide.u32 	%rd221, %r42, 16777216;
	or.b64  	%rd222, %rd220, %rd221;
	ld.local.u8 	%r43, [%rd2+109];
	mul.wide.u32 	%rd223, %r43, 65536;
	or.b64  	%rd224, %rd222, %rd223;
	ld.local.u8 	%r44, [%rd2+110];
	mul.wide.u32 	%rd225, %r44, 256;
	or.b64  	%rd226, %rd224, %rd225;
	ld.local.u8 	%rd227, [%rd2+111];
	or.b64  	%rd6303, %rd226, %rd227;
	ld.local.u8 	%rd228, [%rd2+112];
	shl.b64 	%rd229, %rd228, 56;
	ld.local.u8 	%rd230, [%rd2+113];
	shl.b64 	%rd231, %rd230, 48;
	or.b64  	%rd232, %rd231, %rd229;
	ld.local.u8 	%rd233, [%rd2+114];
	shl.b64 	%rd234, %rd233, 40;
	or.b64  	%rd235, %rd232, %rd234;
	ld.local.u8 	%rd236, [%rd2+115];
	shl.b64 	%rd237, %rd236, 32;
	or.b64  	%rd238, %rd235, %rd237;
	ld.local.u8 	%r45, [%rd2+116];
	mul.wide.u32 	%rd239, %r45, 16777216;
	or.b64  	%rd240, %rd238, %rd239;
	ld.local.u8 	%r46, [%rd2+117];
	mul.wide.u32 	%rd241, %r46, 65536;
	or.b64  	%rd242, %rd240, %rd241;
	ld.local.u8 	%r47, [%rd2+118];
	mul.wide.u32 	%rd243, %r47, 256;
	or.b64  	%rd244, %rd242, %rd243;
	ld.local.u8 	%rd245, [%rd2+119];
	or.b64  	%rd6302, %rd244, %rd245;
	ld.local.u8 	%rd246, [%rd2+120];
	shl.b64 	%rd247, %rd246, 56;
	ld.local.u8 	%rd248, [%rd2+121];
	shl.b64 	%rd249, %rd248, 48;
	or.b64  	%rd250, %rd249, %rd247;
	ld.local.u8 	%rd251, [%rd2+122];
	shl.b64 	%rd252, %rd251, 40;
	or.b64  	%rd253, %rd250, %rd252;
	ld.local.u8 	%rd254, [%rd2+123];
	shl.b64 	%rd255, %rd254, 32;
	or.b64  	%rd256, %rd253, %rd255;
	ld.local.u8 	%r48, [%rd2+124];
	mul.wide.u32 	%rd257, %r48, 16777216;
	or.b64  	%rd258, %rd256, %rd257;
	ld.local.u8 	%r49, [%rd2+125];
	mul.wide.u32 	%rd259, %r49, 65536;
	or.b64  	%rd260, %rd258, %rd259;
	ld.local.u8 	%r50, [%rd2+126];
	mul.wide.u32 	%rd261, %r50, 256;
	or.b64  	%rd262, %rd260, %rd261;
	ld.local.u8 	%rd263, [%rd2+127];
	or.b64  	%rd6301, %rd262, %rd263;
	ld.local.u8 	%rd264, [%rd2+128];
	shl.b64 	%rd265, %rd264, 56;
	ld.local.u8 	%rd266, [%rd2+129];
	shl.b64 	%rd267, %rd266, 48;
	or.b64  	%rd268, %rd267, %rd265;
	ld.local.u8 	%rd269, [%rd2+130];
	shl.b64 	%rd270, %rd269, 40;
	or.b64  	%rd271, %rd268, %rd270;
	ld.local.u8 	%rd272, [%rd2+131];
	shl.b64 	%rd273, %rd272, 32;
	or.b64  	%rd274, %rd271, %rd273;
	ld.local.u8 	%r51, [%rd2+132];
	mul.wide.u32 	%rd275, %r51, 16777216;
	or.b64  	%rd276, %rd274, %rd275;
	ld.local.u8 	%r52, [%rd2+133];
	mul.wide.u32 	%rd277, %r52, 65536;
	or.b64  	%rd278, %rd276, %rd277;
	ld.local.u8 	%r53, [%rd2+134];
	mul.wide.u32 	%rd279, %r53, 256;
	or.b64  	%rd280, %rd278, %rd279;
	ld.local.u8 	%rd281, [%rd2+135];
	or.b64  	%rd6300, %rd280, %rd281;
	ld.local.u8 	%rd282, [%rd2+136];
	shl.b64 	%rd283, %rd282, 56;
	ld.local.u8 	%rd284, [%rd2+137];
	shl.b64 	%rd285, %rd284, 48;
	or.b64  	%rd286, %rd285, %rd283;
	ld.local.u8 	%rd287, [%rd2+138];
	shl.b64 	%rd288, %rd287, 40;
	or.b64  	%rd289, %rd286, %rd288;
	ld.local.u8 	%rd290, [%rd2+139];
	shl.b64 	%rd291, %rd290, 32;
	or.b64  	%rd292, %rd289, %rd291;
	ld.local.u8 	%r54, [%rd2+140];
	mul.wide.u32 	%rd293, %r54, 16777216;
	or.b64  	%rd294, %rd292, %rd293;
	ld.local.u8 	%r55, [%rd2+141];
	mul.wide.u32 	%rd295, %r55, 65536;
	or.b64  	%rd296, %rd294, %rd295;
	ld.local.u8 	%r56, [%rd2+142];
	mul.wide.u32 	%rd297, %r56, 256;
	or.b64  	%rd298, %rd296, %rd297;
	ld.local.u8 	%rd299, [%rd2+143];
	or.b64  	%rd6299, %rd298, %rd299;
	ld.local.u8 	%rd300, [%rd2+144];
	shl.b64 	%rd301, %rd300, 56;
	ld.local.u8 	%rd302, [%rd2+145];
	shl.b64 	%rd303, %rd302, 48;
	or.b64  	%rd304, %rd303, %rd301;
	ld.local.u8 	%rd305, [%rd2+146];
	shl.b64 	%rd306, %rd305, 40;
	or.b64  	%rd307, %rd304, %rd306;
	ld.local.u8 	%rd308, [%rd2+147];
	shl.b64 	%rd309, %rd308, 32;
	or.b64  	%rd310, %rd307, %rd309;
	ld.local.u8 	%r57, [%rd2+148];
	mul.wide.u32 	%rd311, %r57, 16777216;
	or.b64  	%rd312, %rd310, %rd311;
	ld.local.u8 	%r58, [%rd2+149];
	mul.wide.u32 	%rd313, %r58, 65536;
	or.b64  	%rd314, %rd312, %rd313;
	ld.local.u8 	%r59, [%rd2+150];
	mul.wide.u32 	%rd315, %r59, 256;
	or.b64  	%rd316, %rd314, %rd315;
	ld.local.u8 	%rd317, [%rd2+151];
	or.b64  	%rd6298, %rd316, %rd317;
	ld.local.u8 	%rd318, [%rd2+152];
	shl.b64 	%rd319, %rd318, 56;
	ld.local.u8 	%rd320, [%rd2+153];
	shl.b64 	%rd321, %rd320, 48;
	or.b64  	%rd322, %rd321, %rd319;
	ld.local.u8 	%rd323, [%rd2+154];
	shl.b64 	%rd324, %rd323, 40;
	or.b64  	%rd325, %rd322, %rd324;
	ld.local.u8 	%rd326, [%rd2+155];
	shl.b64 	%rd327, %rd326, 32;
	or.b64  	%rd328, %rd325, %rd327;
	ld.local.u8 	%r60, [%rd2+156];
	mul.wide.u32 	%rd329, %r60, 16777216;
	or.b64  	%rd330, %rd328, %rd329;
	ld.local.u8 	%r61, [%rd2+157];
	mul.wide.u32 	%rd331, %r61, 65536;
	or.b64  	%rd332, %rd330, %rd331;
	ld.local.u8 	%r62, [%rd2+158];
	mul.wide.u32 	%rd333, %r62, 256;
	or.b64  	%rd334, %rd332, %rd333;
	ld.local.u8 	%rd335, [%rd2+159];
	or.b64  	%rd6297, %rd334, %rd335;
	ld.local.u8 	%rd336, [%rd2+160];
	shl.b64 	%rd337, %rd336, 56;
	ld.local.u8 	%rd338, [%rd2+161];
	shl.b64 	%rd339, %rd338, 48;
	or.b64  	%rd340, %rd339, %rd337;
	ld.local.u8 	%rd341, [%rd2+162];
	shl.b64 	%rd342, %rd341, 40;
	or.b64  	%rd343, %rd340, %rd342;
	ld.local.u8 	%rd344, [%rd2+163];
	shl.b64 	%rd345, %rd344, 32;
	or.b64  	%rd346, %rd343, %rd345;
	ld.local.u8 	%r63, [%rd2+164];
	mul.wide.u32 	%rd347, %r63, 16777216;
	or.b64  	%rd348, %rd346, %rd347;
	ld.local.u8 	%r64, [%rd2+165];
	mul.wide.u32 	%rd349, %r64, 65536;
	or.b64  	%rd350, %rd348, %rd349;
	ld.local.u8 	%r65, [%rd2+166];
	mul.wide.u32 	%rd351, %r65, 256;
	or.b64  	%rd352, %rd350, %rd351;
	ld.local.u8 	%rd353, [%rd2+167];
	or.b64  	%rd6296, %rd352, %rd353;
	ld.local.u8 	%rd354, [%rd2+168];
	shl.b64 	%rd355, %rd354, 56;
	ld.local.u8 	%rd356, [%rd2+169];
	shl.b64 	%rd357, %rd356, 48;
	or.b64  	%rd358, %rd357, %rd355;
	ld.local.u8 	%rd359, [%rd2+170];
	shl.b64 	%rd360, %rd359, 40;
	or.b64  	%rd361, %rd358, %rd360;
	ld.local.u8 	%rd362, [%rd2+171];
	shl.b64 	%rd363, %rd362, 32;
	or.b64  	%rd364, %rd361, %rd363;
	ld.local.u8 	%r66, [%rd2+172];
	mul.wide.u32 	%rd365, %r66, 16777216;
	or.b64  	%rd366, %rd364, %rd365;
	ld.local.u8 	%r67, [%rd2+173];
	mul.wide.u32 	%rd367, %r67, 65536;
	or.b64  	%rd368, %rd366, %rd367;
	ld.local.u8 	%r68, [%rd2+174];
	mul.wide.u32 	%rd369, %r68, 256;
	or.b64  	%rd370, %rd368, %rd369;
	ld.local.u8 	%rd371, [%rd2+175];
	or.b64  	%rd6295, %rd370, %rd371;
	ld.local.u8 	%rd372, [%rd2+176];
	shl.b64 	%rd373, %rd372, 56;
	ld.local.u8 	%rd374, [%rd2+177];
	shl.b64 	%rd375, %rd374, 48;
	or.b64  	%rd376, %rd375, %rd373;
	ld.local.u8 	%rd377, [%rd2+178];
	shl.b64 	%rd378, %rd377, 40;
	or.b64  	%rd379, %rd376, %rd378;
	ld.local.u8 	%rd380, [%rd2+179];
	shl.b64 	%rd381, %rd380, 32;
	or.b64  	%rd382, %rd379, %rd381;
	ld.local.u8 	%r69, [%rd2+180];
	mul.wide.u32 	%rd383, %r69, 16777216;
	or.b64  	%rd384, %rd382, %rd383;
	ld.local.u8 	%r70, [%rd2+181];
	mul.wide.u32 	%rd385, %r70, 65536;
	or.b64  	%rd386, %rd384, %rd385;
	ld.local.u8 	%r71, [%rd2+182];
	mul.wide.u32 	%rd387, %r71, 256;
	or.b64  	%rd388, %rd386, %rd387;
	ld.local.u8 	%rd389, [%rd2+183];
	or.b64  	%rd6294, %rd388, %rd389;
	ld.local.u8 	%rd390, [%rd2+184];
	shl.b64 	%rd391, %rd390, 56;
	ld.local.u8 	%rd392, [%rd2+185];
	shl.b64 	%rd393, %rd392, 48;
	or.b64  	%rd394, %rd393, %rd391;
	ld.local.u8 	%rd395, [%rd2+186];
	shl.b64 	%rd396, %rd395, 40;
	or.b64  	%rd397, %rd394, %rd396;
	ld.local.u8 	%rd398, [%rd2+187];
	shl.b64 	%rd399, %rd398, 32;
	or.b64  	%rd400, %rd397, %rd399;
	ld.local.u8 	%r72, [%rd2+188];
	mul.wide.u32 	%rd401, %r72, 16777216;
	or.b64  	%rd402, %rd400, %rd401;
	ld.local.u8 	%r73, [%rd2+189];
	mul.wide.u32 	%rd403, %r73, 65536;
	or.b64  	%rd404, %rd402, %rd403;
	ld.local.u8 	%r74, [%rd2+190];
	mul.wide.u32 	%rd405, %r74, 256;
	or.b64  	%rd406, %rd404, %rd405;
	ld.local.u8 	%rd407, [%rd2+191];
	or.b64  	%rd6293, %rd406, %rd407;
	ld.local.u8 	%rd408, [%rd2+192];
	ld.local.u8 	%rd409, [%rd2+193];
	ld.local.u8 	%rd410, [%rd2+194];
	ld.local.u8 	%rd411, [%rd2+195];
	ld.local.u8 	%r75, [%rd2+196];
	mul.wide.u32 	%rd412, %r75, 16777216;
	ld.local.u8 	%r76, [%rd2+197];
	mul.wide.u32 	%rd413, %r76, 65536;
	ld.local.u8 	%r77, [%rd2+198];
	mul.wide.u32 	%rd414, %r77, 256;
	ld.local.u8 	%rd415, [%rd2+199];
	shl.b64 	%rd416, %rd409, 48;
	shl.b64 	%rd417, %rd408, 56;
	shl.b64 	%rd418, %rd410, 40;
	or.b64  	%rd419, %rd416, %rd417;
	shl.b64 	%rd420, %rd411, 32;
	or.b64  	%rd421, %rd419, %rd418;
	or.b64  	%rd422, %rd421, %rd420;
	or.b64  	%rd423, %rd422, %rd412;
	or.b64  	%rd424, %rd423, %rd413;
	or.b64  	%rd425, %rd424, %rd414;
	or.b64  	%rd6292, %rd425, %rd415;
	bra.uni 	$L__BB9_11;

$L__BB9_10:
	ld.local.u64 	%rd426, [%rd2+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r78, %temp}, %rd426;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r79}, %rd426;
	}
	mov.u32 	%r80, 291;
	mov.u32 	%r81, 0;
	prmt.b32 	%r82, %r78, %r81, %r80;
	prmt.b32 	%r83, %r79, %r81, %r80;
	mov.b64 	%rd6307, {%r83, %r82};
	ld.local.u64 	%rd427, [%rd2+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r84, %temp}, %rd427;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r85}, %rd427;
	}
	prmt.b32 	%r86, %r84, %r81, %r80;
	prmt.b32 	%r87, %r85, %r81, %r80;
	mov.b64 	%rd6306, {%r87, %r86};
	ld.local.u64 	%rd428, [%rd2+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r88, %temp}, %rd428;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r89}, %rd428;
	}
	prmt.b32 	%r90, %r88, %r81, %r80;
	prmt.b32 	%r91, %r89, %r81, %r80;
	mov.b64 	%rd6305, {%r91, %r90};
	ld.local.u64 	%rd429, [%rd2+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r92, %temp}, %rd429;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r93}, %rd429;
	}
	prmt.b32 	%r94, %r92, %r81, %r80;
	prmt.b32 	%r95, %r93, %r81, %r80;
	mov.b64 	%rd6304, {%r95, %r94};
	ld.local.u64 	%rd430, [%rd2+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r96, %temp}, %rd430;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r97}, %rd430;
	}
	prmt.b32 	%r98, %r96, %r81, %r80;
	prmt.b32 	%r99, %r97, %r81, %r80;
	mov.b64 	%rd6303, {%r99, %r98};
	ld.local.u64 	%rd431, [%rd2+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r100, %temp}, %rd431;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r101}, %rd431;
	}
	prmt.b32 	%r102, %r100, %r81, %r80;
	prmt.b32 	%r103, %r101, %r81, %r80;
	mov.b64 	%rd6302, {%r103, %r102};
	ld.local.u64 	%rd432, [%rd2+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r104, %temp}, %rd432;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r105}, %rd432;
	}
	prmt.b32 	%r106, %r104, %r81, %r80;
	prmt.b32 	%r107, %r105, %r81, %r80;
	mov.b64 	%rd6301, {%r107, %r106};
	ld.local.u64 	%rd433, [%rd2+128];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r108, %temp}, %rd433;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r109}, %rd433;
	}
	prmt.b32 	%r110, %r108, %r81, %r80;
	prmt.b32 	%r111, %r109, %r81, %r80;
	mov.b64 	%rd6300, {%r111, %r110};
	ld.local.u64 	%rd434, [%rd2+136];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r112, %temp}, %rd434;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r113}, %rd434;
	}
	prmt.b32 	%r114, %r112, %r81, %r80;
	prmt.b32 	%r115, %r113, %r81, %r80;
	mov.b64 	%rd6299, {%r115, %r114};
	ld.local.u64 	%rd435, [%rd2+144];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r116, %temp}, %rd435;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r117}, %rd435;
	}
	prmt.b32 	%r118, %r116, %r81, %r80;
	prmt.b32 	%r119, %r117, %r81, %r80;
	mov.b64 	%rd6298, {%r119, %r118};
	ld.local.u64 	%rd436, [%rd2+152];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r120, %temp}, %rd436;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r121}, %rd436;
	}
	prmt.b32 	%r122, %r120, %r81, %r80;
	prmt.b32 	%r123, %r121, %r81, %r80;
	mov.b64 	%rd6297, {%r123, %r122};
	ld.local.u64 	%rd437, [%rd2+160];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r124, %temp}, %rd437;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r125}, %rd437;
	}
	prmt.b32 	%r126, %r124, %r81, %r80;
	prmt.b32 	%r127, %r125, %r81, %r80;
	mov.b64 	%rd6296, {%r127, %r126};
	ld.local.u64 	%rd438, [%rd2+168];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r128, %temp}, %rd438;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r129}, %rd438;
	}
	prmt.b32 	%r130, %r128, %r81, %r80;
	prmt.b32 	%r131, %r129, %r81, %r80;
	mov.b64 	%rd6295, {%r131, %r130};
	ld.local.u64 	%rd439, [%rd2+176];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r132, %temp}, %rd439;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r133}, %rd439;
	}
	prmt.b32 	%r134, %r132, %r81, %r80;
	prmt.b32 	%r135, %r133, %r81, %r80;
	mov.b64 	%rd6294, {%r135, %r134};
	ld.local.u64 	%rd440, [%rd2+184];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r136, %temp}, %rd440;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r137}, %rd440;
	}
	prmt.b32 	%r138, %r136, %r81, %r80;
	prmt.b32 	%r139, %r137, %r81, %r80;
	mov.b64 	%rd6293, {%r139, %r138};
	ld.local.u64 	%rd441, [%rd2+192];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r140, %temp}, %rd441;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r141}, %rd441;
	}
	prmt.b32 	%r142, %r140, %r81, %r80;
	prmt.b32 	%r143, %r141, %r81, %r80;
	mov.b64 	%rd6292, {%r143, %r142};

$L__BB9_11:
	ld.local.u64 	%rd442, [%rd2+64];
	add.s64 	%rd443, %rd6307, %rd442;
	ld.local.u64 	%rd444, [%rd2+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r145,%dummy}, %rd444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd444;
	}
	shf.r.wrap.b32 	%r147, %r146, %r145, 14;
	shf.r.wrap.b32 	%r148, %r145, %r146, 14;
	mov.b64 	%rd445, {%r148, %r147};
	shf.r.wrap.b32 	%r149, %r146, %r145, 18;
	shf.r.wrap.b32 	%r150, %r145, %r146, 18;
	mov.b64 	%rd446, {%r150, %r149};
	xor.b64  	%rd447, %rd445, %rd446;
	shf.l.wrap.b32 	%r151, %r145, %r146, 23;
	shf.l.wrap.b32 	%r152, %r146, %r145, 23;
	mov.b64 	%rd448, {%r152, %r151};
	xor.b64  	%rd449, %rd447, %rd448;
	add.s64 	%rd450, %rd443, %rd449;
	ld.local.u64 	%rd451, [%rd2+56];
	ld.local.u64 	%rd452, [%rd2+48];
	xor.b64  	%rd453, %rd451, %rd452;
	and.b64  	%rd454, %rd453, %rd444;
	xor.b64  	%rd455, %rd454, %rd451;
	add.s64 	%rd456, %rd450, %rd455;
	add.s64 	%rd457, %rd456, 4794697086780616226;
	ld.local.u64 	%rd458, [%rd2+32];
	add.s64 	%rd459, %rd457, %rd458;
	ld.local.u64 	%rd460, [%rd2+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r154}, %rd460;
	}
	shf.r.wrap.b32 	%r155, %r154, %r153, 28;
	shf.r.wrap.b32 	%r156, %r153, %r154, 28;
	mov.b64 	%rd461, {%r156, %r155};
	shf.l.wrap.b32 	%r157, %r153, %r154, 30;
	shf.l.wrap.b32 	%r158, %r154, %r153, 30;
	mov.b64 	%rd462, {%r158, %r157};
	xor.b64  	%rd463, %rd461, %rd462;
	shf.l.wrap.b32 	%r159, %r153, %r154, 25;
	shf.l.wrap.b32 	%r160, %r154, %r153, 25;
	mov.b64 	%rd464, {%r160, %r159};
	xor.b64  	%rd465, %rd463, %rd464;
	ld.local.u64 	%rd466, [%rd2+16];
	and.b64  	%rd467, %rd466, %rd460;
	or.b64  	%rd468, %rd466, %rd460;
	ld.local.u64 	%rd469, [%rd2+24];
	and.b64  	%rd470, %rd469, %rd468;
	or.b64  	%rd471, %rd470, %rd467;
	add.s64 	%rd472, %rd471, %rd465;
	add.s64 	%rd473, %rd472, %rd457;
	add.s64 	%rd474, %rd6306, %rd451;
	xor.b64  	%rd475, %rd452, %rd444;
	and.b64  	%rd476, %rd459, %rd475;
	xor.b64  	%rd477, %rd476, %rd452;
	add.s64 	%rd478, %rd474, %rd477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r161,%dummy}, %rd459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r162}, %rd459;
	}
	shf.r.wrap.b32 	%r163, %r162, %r161, 14;
	shf.r.wrap.b32 	%r164, %r161, %r162, 14;
	mov.b64 	%rd479, {%r164, %r163};
	shf.r.wrap.b32 	%r165, %r162, %r161, 18;
	shf.r.wrap.b32 	%r166, %r161, %r162, 18;
	mov.b64 	%rd480, {%r166, %r165};
	xor.b64  	%rd481, %rd479, %rd480;
	shf.l.wrap.b32 	%r167, %r161, %r162, 23;
	shf.l.wrap.b32 	%r168, %r162, %r161, 23;
	mov.b64 	%rd482, {%r168, %r167};
	xor.b64  	%rd483, %rd481, %rd482;
	add.s64 	%rd484, %rd478, %rd483;
	add.s64 	%rd485, %rd484, 8158064640168781261;
	add.s64 	%rd486, %rd485, %rd469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r169,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r170}, %rd473;
	}
	shf.r.wrap.b32 	%r171, %r170, %r169, 28;
	shf.r.wrap.b32 	%r172, %r169, %r170, 28;
	mov.b64 	%rd487, {%r172, %r171};
	shf.l.wrap.b32 	%r173, %r169, %r170, 30;
	shf.l.wrap.b32 	%r174, %r170, %r169, 30;
	mov.b64 	%rd488, {%r174, %r173};
	xor.b64  	%rd489, %rd487, %rd488;
	shf.l.wrap.b32 	%r175, %r169, %r170, 25;
	shf.l.wrap.b32 	%r176, %r170, %r169, 25;
	mov.b64 	%rd490, {%r176, %r175};
	xor.b64  	%rd491, %rd489, %rd490;
	and.b64  	%rd492, %rd473, %rd460;
	or.b64  	%rd493, %rd473, %rd460;
	and.b64  	%rd494, %rd493, %rd466;
	or.b64  	%rd495, %rd494, %rd492;
	add.s64 	%rd496, %rd495, %rd491;
	add.s64 	%rd497, %rd496, %rd485;
	add.s64 	%rd498, %rd6305, %rd452;
	xor.b64  	%rd499, %rd459, %rd444;
	and.b64  	%rd500, %rd486, %rd499;
	xor.b64  	%rd501, %rd500, %rd444;
	add.s64 	%rd502, %rd498, %rd501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd486;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 14;
	shf.r.wrap.b32 	%r180, %r177, %r178, 14;
	mov.b64 	%rd503, {%r180, %r179};
	shf.r.wrap.b32 	%r181, %r178, %r177, 18;
	shf.r.wrap.b32 	%r182, %r177, %r178, 18;
	mov.b64 	%rd504, {%r182, %r181};
	xor.b64  	%rd505, %rd503, %rd504;
	shf.l.wrap.b32 	%r183, %r177, %r178, 23;
	shf.l.wrap.b32 	%r184, %r178, %r177, 23;
	mov.b64 	%rd506, {%r184, %r183};
	xor.b64  	%rd507, %rd505, %rd506;
	add.s64 	%rd508, %rd502, %rd507;
	add.s64 	%rd509, %rd508, -5349999486874862801;
	add.s64 	%rd510, %rd509, %rd466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r185,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r186}, %rd497;
	}
	shf.r.wrap.b32 	%r187, %r186, %r185, 28;
	shf.r.wrap.b32 	%r188, %r185, %r186, 28;
	mov.b64 	%rd511, {%r188, %r187};
	shf.l.wrap.b32 	%r189, %r185, %r186, 30;
	shf.l.wrap.b32 	%r190, %r186, %r185, 30;
	mov.b64 	%rd512, {%r190, %r189};
	xor.b64  	%rd513, %rd511, %rd512;
	shf.l.wrap.b32 	%r191, %r185, %r186, 25;
	shf.l.wrap.b32 	%r192, %r186, %r185, 25;
	mov.b64 	%rd514, {%r192, %r191};
	xor.b64  	%rd515, %rd513, %rd514;
	and.b64  	%rd516, %rd497, %rd473;
	or.b64  	%rd517, %rd497, %rd473;
	and.b64  	%rd518, %rd517, %rd460;
	or.b64  	%rd519, %rd518, %rd516;
	add.s64 	%rd520, %rd519, %rd515;
	add.s64 	%rd521, %rd520, %rd509;
	add.s64 	%rd522, %rd6304, %rd444;
	xor.b64  	%rd523, %rd486, %rd459;
	and.b64  	%rd524, %rd510, %rd523;
	xor.b64  	%rd525, %rd524, %rd459;
	add.s64 	%rd526, %rd522, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r193,%dummy}, %rd510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r194}, %rd510;
	}
	shf.r.wrap.b32 	%r195, %r194, %r193, 14;
	shf.r.wrap.b32 	%r196, %r193, %r194, 14;
	mov.b64 	%rd527, {%r196, %r195};
	shf.r.wrap.b32 	%r197, %r194, %r193, 18;
	shf.r.wrap.b32 	%r198, %r193, %r194, 18;
	mov.b64 	%rd528, {%r198, %r197};
	xor.b64  	%rd529, %rd527, %rd528;
	shf.l.wrap.b32 	%r199, %r193, %r194, 23;
	shf.l.wrap.b32 	%r200, %r194, %r193, 23;
	mov.b64 	%rd530, {%r200, %r199};
	xor.b64  	%rd531, %rd529, %rd530;
	add.s64 	%rd532, %rd526, %rd531;
	add.s64 	%rd533, %rd532, -1606136188198331460;
	add.s64 	%rd534, %rd533, %rd460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r201,%dummy}, %rd521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r202}, %rd521;
	}
	shf.r.wrap.b32 	%r203, %r202, %r201, 28;
	shf.r.wrap.b32 	%r204, %r201, %r202, 28;
	mov.b64 	%rd535, {%r204, %r203};
	shf.l.wrap.b32 	%r205, %r201, %r202, 30;
	shf.l.wrap.b32 	%r206, %r202, %r201, 30;
	mov.b64 	%rd536, {%r206, %r205};
	xor.b64  	%rd537, %rd535, %rd536;
	shf.l.wrap.b32 	%r207, %r201, %r202, 25;
	shf.l.wrap.b32 	%r208, %r202, %r201, 25;
	mov.b64 	%rd538, {%r208, %r207};
	xor.b64  	%rd539, %rd537, %rd538;
	and.b64  	%rd540, %rd521, %rd497;
	or.b64  	%rd541, %rd521, %rd497;
	and.b64  	%rd542, %rd541, %rd473;
	or.b64  	%rd543, %rd542, %rd540;
	add.s64 	%rd544, %rd543, %rd539;
	add.s64 	%rd545, %rd544, %rd533;
	add.s64 	%rd546, %rd6303, %rd459;
	xor.b64  	%rd547, %rd510, %rd486;
	and.b64  	%rd548, %rd534, %rd547;
	xor.b64  	%rd549, %rd548, %rd486;
	add.s64 	%rd550, %rd546, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r209,%dummy}, %rd534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd534;
	}
	shf.r.wrap.b32 	%r211, %r210, %r209, 14;
	shf.r.wrap.b32 	%r212, %r209, %r210, 14;
	mov.b64 	%rd551, {%r212, %r211};
	shf.r.wrap.b32 	%r213, %r210, %r209, 18;
	shf.r.wrap.b32 	%r214, %r209, %r210, 18;
	mov.b64 	%rd552, {%r214, %r213};
	xor.b64  	%rd553, %rd551, %rd552;
	shf.l.wrap.b32 	%r215, %r209, %r210, 23;
	shf.l.wrap.b32 	%r216, %r210, %r209, 23;
	mov.b64 	%rd554, {%r216, %r215};
	xor.b64  	%rd555, %rd553, %rd554;
	add.s64 	%rd556, %rd550, %rd555;
	add.s64 	%rd557, %rd556, 4131703408338449720;
	add.s64 	%rd558, %rd557, %rd473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r217,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd545;
	}
	shf.r.wrap.b32 	%r219, %r218, %r217, 28;
	shf.r.wrap.b32 	%r220, %r217, %r218, 28;
	mov.b64 	%rd559, {%r220, %r219};
	shf.l.wrap.b32 	%r221, %r217, %r218, 30;
	shf.l.wrap.b32 	%r222, %r218, %r217, 30;
	mov.b64 	%rd560, {%r222, %r221};
	xor.b64  	%rd561, %rd559, %rd560;
	shf.l.wrap.b32 	%r223, %r217, %r218, 25;
	shf.l.wrap.b32 	%r224, %r218, %r217, 25;
	mov.b64 	%rd562, {%r224, %r223};
	xor.b64  	%rd563, %rd561, %rd562;
	and.b64  	%rd564, %rd545, %rd521;
	or.b64  	%rd565, %rd545, %rd521;
	and.b64  	%rd566, %rd565, %rd497;
	or.b64  	%rd567, %rd566, %rd564;
	add.s64 	%rd568, %rd567, %rd563;
	add.s64 	%rd569, %rd568, %rd557;
	add.s64 	%rd570, %rd6302, %rd486;
	xor.b64  	%rd571, %rd534, %rd510;
	and.b64  	%rd572, %rd558, %rd571;
	xor.b64  	%rd573, %rd572, %rd510;
	add.s64 	%rd574, %rd570, %rd573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r225,%dummy}, %rd558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r226}, %rd558;
	}
	shf.r.wrap.b32 	%r227, %r226, %r225, 14;
	shf.r.wrap.b32 	%r228, %r225, %r226, 14;
	mov.b64 	%rd575, {%r228, %r227};
	shf.r.wrap.b32 	%r229, %r226, %r225, 18;
	shf.r.wrap.b32 	%r230, %r225, %r226, 18;
	mov.b64 	%rd576, {%r230, %r229};
	xor.b64  	%rd577, %rd575, %rd576;
	shf.l.wrap.b32 	%r231, %r225, %r226, 23;
	shf.l.wrap.b32 	%r232, %r226, %r225, 23;
	mov.b64 	%rd578, {%r232, %r231};
	xor.b64  	%rd579, %rd577, %rd578;
	add.s64 	%rd580, %rd574, %rd579;
	add.s64 	%rd581, %rd580, 6480981068601479193;
	add.s64 	%rd582, %rd581, %rd497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r233,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r234}, %rd569;
	}
	shf.r.wrap.b32 	%r235, %r234, %r233, 28;
	shf.r.wrap.b32 	%r236, %r233, %r234, 28;
	mov.b64 	%rd583, {%r236, %r235};
	shf.l.wrap.b32 	%r237, %r233, %r234, 30;
	shf.l.wrap.b32 	%r238, %r234, %r233, 30;
	mov.b64 	%rd584, {%r238, %r237};
	xor.b64  	%rd585, %rd583, %rd584;
	shf.l.wrap.b32 	%r239, %r233, %r234, 25;
	shf.l.wrap.b32 	%r240, %r234, %r233, 25;
	mov.b64 	%rd586, {%r240, %r239};
	xor.b64  	%rd587, %rd585, %rd586;
	and.b64  	%rd588, %rd569, %rd545;
	or.b64  	%rd589, %rd569, %rd545;
	and.b64  	%rd590, %rd589, %rd521;
	or.b64  	%rd591, %rd590, %rd588;
	add.s64 	%rd592, %rd591, %rd587;
	add.s64 	%rd593, %rd592, %rd581;
	add.s64 	%rd594, %rd6301, %rd510;
	xor.b64  	%rd595, %rd558, %rd534;
	and.b64  	%rd596, %rd582, %rd595;
	xor.b64  	%rd597, %rd596, %rd534;
	add.s64 	%rd598, %rd594, %rd597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd582;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 14;
	shf.r.wrap.b32 	%r244, %r241, %r242, 14;
	mov.b64 	%rd599, {%r244, %r243};
	shf.r.wrap.b32 	%r245, %r242, %r241, 18;
	shf.r.wrap.b32 	%r246, %r241, %r242, 18;
	mov.b64 	%rd600, {%r246, %r245};
	xor.b64  	%rd601, %rd599, %rd600;
	shf.l.wrap.b32 	%r247, %r241, %r242, 23;
	shf.l.wrap.b32 	%r248, %r242, %r241, 23;
	mov.b64 	%rd602, {%r248, %r247};
	xor.b64  	%rd603, %rd601, %rd602;
	add.s64 	%rd604, %rd598, %rd603;
	add.s64 	%rd605, %rd604, -7908458776815382629;
	add.s64 	%rd606, %rd605, %rd521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r249,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r250}, %rd593;
	}
	shf.r.wrap.b32 	%r251, %r250, %r249, 28;
	shf.r.wrap.b32 	%r252, %r249, %r250, 28;
	mov.b64 	%rd607, {%r252, %r251};
	shf.l.wrap.b32 	%r253, %r249, %r250, 30;
	shf.l.wrap.b32 	%r254, %r250, %r249, 30;
	mov.b64 	%rd608, {%r254, %r253};
	xor.b64  	%rd609, %rd607, %rd608;
	shf.l.wrap.b32 	%r255, %r249, %r250, 25;
	shf.l.wrap.b32 	%r256, %r250, %r249, 25;
	mov.b64 	%rd610, {%r256, %r255};
	xor.b64  	%rd611, %rd609, %rd610;
	and.b64  	%rd612, %rd593, %rd569;
	or.b64  	%rd613, %rd593, %rd569;
	and.b64  	%rd614, %rd613, %rd545;
	or.b64  	%rd615, %rd614, %rd612;
	add.s64 	%rd616, %rd615, %rd611;
	add.s64 	%rd617, %rd616, %rd605;
	add.s64 	%rd618, %rd6300, %rd534;
	xor.b64  	%rd619, %rd582, %rd558;
	and.b64  	%rd620, %rd606, %rd619;
	xor.b64  	%rd621, %rd620, %rd558;
	add.s64 	%rd622, %rd618, %rd621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r257,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r258}, %rd606;
	}
	shf.r.wrap.b32 	%r259, %r258, %r257, 14;
	shf.r.wrap.b32 	%r260, %r257, %r258, 14;
	mov.b64 	%rd623, {%r260, %r259};
	shf.r.wrap.b32 	%r261, %r258, %r257, 18;
	shf.r.wrap.b32 	%r262, %r257, %r258, 18;
	mov.b64 	%rd624, {%r262, %r261};
	xor.b64  	%rd625, %rd623, %rd624;
	shf.l.wrap.b32 	%r263, %r257, %r258, 23;
	shf.l.wrap.b32 	%r264, %r258, %r257, 23;
	mov.b64 	%rd626, {%r264, %r263};
	xor.b64  	%rd627, %rd625, %rd626;
	add.s64 	%rd628, %rd622, %rd627;
	add.s64 	%rd629, %rd628, -6116909921290321640;
	add.s64 	%rd630, %rd629, %rd545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r265,%dummy}, %rd617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r266}, %rd617;
	}
	shf.r.wrap.b32 	%r267, %r266, %r265, 28;
	shf.r.wrap.b32 	%r268, %r265, %r266, 28;
	mov.b64 	%rd631, {%r268, %r267};
	shf.l.wrap.b32 	%r269, %r265, %r266, 30;
	shf.l.wrap.b32 	%r270, %r266, %r265, 30;
	mov.b64 	%rd632, {%r270, %r269};
	xor.b64  	%rd633, %rd631, %rd632;
	shf.l.wrap.b32 	%r271, %r265, %r266, 25;
	shf.l.wrap.b32 	%r272, %r266, %r265, 25;
	mov.b64 	%rd634, {%r272, %r271};
	xor.b64  	%rd635, %rd633, %rd634;
	and.b64  	%rd636, %rd617, %rd593;
	or.b64  	%rd637, %rd617, %rd593;
	and.b64  	%rd638, %rd637, %rd569;
	or.b64  	%rd639, %rd638, %rd636;
	add.s64 	%rd640, %rd639, %rd635;
	add.s64 	%rd641, %rd640, %rd629;
	add.s64 	%rd642, %rd6299, %rd558;
	xor.b64  	%rd643, %rd606, %rd582;
	and.b64  	%rd644, %rd630, %rd643;
	xor.b64  	%rd645, %rd644, %rd582;
	add.s64 	%rd646, %rd642, %rd645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r273,%dummy}, %rd630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r274}, %rd630;
	}
	shf.r.wrap.b32 	%r275, %r274, %r273, 14;
	shf.r.wrap.b32 	%r276, %r273, %r274, 14;
	mov.b64 	%rd647, {%r276, %r275};
	shf.r.wrap.b32 	%r277, %r274, %r273, 18;
	shf.r.wrap.b32 	%r278, %r273, %r274, 18;
	mov.b64 	%rd648, {%r278, %r277};
	xor.b64  	%rd649, %rd647, %rd648;
	shf.l.wrap.b32 	%r279, %r273, %r274, 23;
	shf.l.wrap.b32 	%r280, %r274, %r273, 23;
	mov.b64 	%rd650, {%r280, %r279};
	xor.b64  	%rd651, %rd649, %rd650;
	add.s64 	%rd652, %rd646, %rd651;
	add.s64 	%rd653, %rd652, -2880145864133508542;
	add.s64 	%rd654, %rd653, %rd569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd641;
	}
	shf.r.wrap.b32 	%r283, %r282, %r281, 28;
	shf.r.wrap.b32 	%r284, %r281, %r282, 28;
	mov.b64 	%rd655, {%r284, %r283};
	shf.l.wrap.b32 	%r285, %r281, %r282, 30;
	shf.l.wrap.b32 	%r286, %r282, %r281, 30;
	mov.b64 	%rd656, {%r286, %r285};
	xor.b64  	%rd657, %rd655, %rd656;
	shf.l.wrap.b32 	%r287, %r281, %r282, 25;
	shf.l.wrap.b32 	%r288, %r282, %r281, 25;
	mov.b64 	%rd658, {%r288, %r287};
	xor.b64  	%rd659, %rd657, %rd658;
	and.b64  	%rd660, %rd641, %rd617;
	or.b64  	%rd661, %rd641, %rd617;
	and.b64  	%rd662, %rd661, %rd593;
	or.b64  	%rd663, %rd662, %rd660;
	add.s64 	%rd664, %rd663, %rd659;
	add.s64 	%rd665, %rd664, %rd653;
	add.s64 	%rd666, %rd6298, %rd582;
	xor.b64  	%rd667, %rd630, %rd606;
	and.b64  	%rd668, %rd654, %rd667;
	xor.b64  	%rd669, %rd668, %rd606;
	add.s64 	%rd670, %rd666, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd654;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 14;
	shf.r.wrap.b32 	%r292, %r289, %r290, 14;
	mov.b64 	%rd671, {%r292, %r291};
	shf.r.wrap.b32 	%r293, %r290, %r289, 18;
	shf.r.wrap.b32 	%r294, %r289, %r290, 18;
	mov.b64 	%rd672, {%r294, %r293};
	xor.b64  	%rd673, %rd671, %rd672;
	shf.l.wrap.b32 	%r295, %r289, %r290, 23;
	shf.l.wrap.b32 	%r296, %r290, %r289, 23;
	mov.b64 	%rd674, {%r296, %r295};
	xor.b64  	%rd675, %rd673, %rd674;
	add.s64 	%rd676, %rd670, %rd675;
	add.s64 	%rd677, %rd676, 1334009975649890238;
	add.s64 	%rd678, %rd677, %rd593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r297,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r298}, %rd665;
	}
	shf.r.wrap.b32 	%r299, %r298, %r297, 28;
	shf.r.wrap.b32 	%r300, %r297, %r298, 28;
	mov.b64 	%rd679, {%r300, %r299};
	shf.l.wrap.b32 	%r301, %r297, %r298, 30;
	shf.l.wrap.b32 	%r302, %r298, %r297, 30;
	mov.b64 	%rd680, {%r302, %r301};
	xor.b64  	%rd681, %rd679, %rd680;
	shf.l.wrap.b32 	%r303, %r297, %r298, 25;
	shf.l.wrap.b32 	%r304, %r298, %r297, 25;
	mov.b64 	%rd682, {%r304, %r303};
	xor.b64  	%rd683, %rd681, %rd682;
	and.b64  	%rd684, %rd665, %rd641;
	or.b64  	%rd685, %rd665, %rd641;
	and.b64  	%rd686, %rd685, %rd617;
	or.b64  	%rd687, %rd686, %rd684;
	add.s64 	%rd688, %rd687, %rd683;
	add.s64 	%rd689, %rd688, %rd677;
	add.s64 	%rd690, %rd6297, %rd606;
	xor.b64  	%rd691, %rd654, %rd630;
	and.b64  	%rd692, %rd678, %rd691;
	xor.b64  	%rd693, %rd692, %rd630;
	add.s64 	%rd694, %rd690, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r306}, %rd678;
	}
	shf.r.wrap.b32 	%r307, %r306, %r305, 14;
	shf.r.wrap.b32 	%r308, %r305, %r306, 14;
	mov.b64 	%rd695, {%r308, %r307};
	shf.r.wrap.b32 	%r309, %r306, %r305, 18;
	shf.r.wrap.b32 	%r310, %r305, %r306, 18;
	mov.b64 	%rd696, {%r310, %r309};
	xor.b64  	%rd697, %rd695, %rd696;
	shf.l.wrap.b32 	%r311, %r305, %r306, 23;
	shf.l.wrap.b32 	%r312, %r306, %r305, 23;
	mov.b64 	%rd698, {%r312, %r311};
	xor.b64  	%rd699, %rd697, %rd698;
	add.s64 	%rd700, %rd694, %rd699;
	add.s64 	%rd701, %rd700, 2608012711638119052;
	add.s64 	%rd702, %rd701, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r313,%dummy}, %rd689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r314}, %rd689;
	}
	shf.r.wrap.b32 	%r315, %r314, %r313, 28;
	shf.r.wrap.b32 	%r316, %r313, %r314, 28;
	mov.b64 	%rd703, {%r316, %r315};
	shf.l.wrap.b32 	%r317, %r313, %r314, 30;
	shf.l.wrap.b32 	%r318, %r314, %r313, 30;
	mov.b64 	%rd704, {%r318, %r317};
	xor.b64  	%rd705, %rd703, %rd704;
	shf.l.wrap.b32 	%r319, %r313, %r314, 25;
	shf.l.wrap.b32 	%r320, %r314, %r313, 25;
	mov.b64 	%rd706, {%r320, %r319};
	xor.b64  	%rd707, %rd705, %rd706;
	and.b64  	%rd708, %rd689, %rd665;
	or.b64  	%rd709, %rd689, %rd665;
	and.b64  	%rd710, %rd709, %rd641;
	or.b64  	%rd711, %rd710, %rd708;
	add.s64 	%rd712, %rd711, %rd707;
	add.s64 	%rd713, %rd712, %rd701;
	add.s64 	%rd714, %rd6296, %rd630;
	xor.b64  	%rd715, %rd678, %rd654;
	and.b64  	%rd716, %rd702, %rd715;
	xor.b64  	%rd717, %rd716, %rd654;
	add.s64 	%rd718, %rd714, %rd717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r321,%dummy}, %rd702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r322}, %rd702;
	}
	shf.r.wrap.b32 	%r323, %r322, %r321, 14;
	shf.r.wrap.b32 	%r324, %r321, %r322, 14;
	mov.b64 	%rd719, {%r324, %r323};
	shf.r.wrap.b32 	%r325, %r322, %r321, 18;
	shf.r.wrap.b32 	%r326, %r321, %r322, 18;
	mov.b64 	%rd720, {%r326, %r325};
	xor.b64  	%rd721, %rd719, %rd720;
	shf.l.wrap.b32 	%r327, %r321, %r322, 23;
	shf.l.wrap.b32 	%r328, %r322, %r321, 23;
	mov.b64 	%rd722, {%r328, %r327};
	xor.b64  	%rd723, %rd721, %rd722;
	add.s64 	%rd724, %rd718, %rd723;
	add.s64 	%rd725, %rd724, 6128411473006802146;
	add.s64 	%rd726, %rd725, %rd641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd713;
	}
	shf.r.wrap.b32 	%r331, %r330, %r329, 28;
	shf.r.wrap.b32 	%r332, %r329, %r330, 28;
	mov.b64 	%rd727, {%r332, %r331};
	shf.l.wrap.b32 	%r333, %r329, %r330, 30;
	shf.l.wrap.b32 	%r334, %r330, %r329, 30;
	mov.b64 	%rd728, {%r334, %r333};
	xor.b64  	%rd729, %rd727, %rd728;
	shf.l.wrap.b32 	%r335, %r329, %r330, 25;
	shf.l.wrap.b32 	%r336, %r330, %r329, 25;
	mov.b64 	%rd730, {%r336, %r335};
	xor.b64  	%rd731, %rd729, %rd730;
	and.b64  	%rd732, %rd713, %rd689;
	or.b64  	%rd733, %rd713, %rd689;
	and.b64  	%rd734, %rd733, %rd665;
	or.b64  	%rd735, %rd734, %rd732;
	add.s64 	%rd736, %rd735, %rd731;
	add.s64 	%rd737, %rd736, %rd725;
	add.s64 	%rd738, %rd6295, %rd654;
	xor.b64  	%rd739, %rd702, %rd678;
	and.b64  	%rd740, %rd726, %rd739;
	xor.b64  	%rd741, %rd740, %rd678;
	add.s64 	%rd742, %rd738, %rd741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd726;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 14;
	shf.r.wrap.b32 	%r340, %r337, %r338, 14;
	mov.b64 	%rd743, {%r340, %r339};
	shf.r.wrap.b32 	%r341, %r338, %r337, 18;
	shf.r.wrap.b32 	%r342, %r337, %r338, 18;
	mov.b64 	%rd744, {%r342, %r341};
	xor.b64  	%rd745, %rd743, %rd744;
	shf.l.wrap.b32 	%r343, %r337, %r338, 23;
	shf.l.wrap.b32 	%r344, %r338, %r337, 23;
	mov.b64 	%rd746, {%r344, %r343};
	xor.b64  	%rd747, %rd745, %rd746;
	add.s64 	%rd748, %rd742, %rd747;
	add.s64 	%rd749, %rd748, 8268148722764581231;
	add.s64 	%rd750, %rd749, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r345,%dummy}, %rd737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r346}, %rd737;
	}
	shf.r.wrap.b32 	%r347, %r346, %r345, 28;
	shf.r.wrap.b32 	%r348, %r345, %r346, 28;
	mov.b64 	%rd751, {%r348, %r347};
	shf.l.wrap.b32 	%r349, %r345, %r346, 30;
	shf.l.wrap.b32 	%r350, %r346, %r345, 30;
	mov.b64 	%rd752, {%r350, %r349};
	xor.b64  	%rd753, %rd751, %rd752;
	shf.l.wrap.b32 	%r351, %r345, %r346, 25;
	shf.l.wrap.b32 	%r352, %r346, %r345, 25;
	mov.b64 	%rd754, {%r352, %r351};
	xor.b64  	%rd755, %rd753, %rd754;
	and.b64  	%rd756, %rd737, %rd713;
	or.b64  	%rd757, %rd737, %rd713;
	and.b64  	%rd758, %rd757, %rd689;
	or.b64  	%rd759, %rd758, %rd756;
	add.s64 	%rd760, %rd759, %rd755;
	add.s64 	%rd761, %rd760, %rd749;
	add.s64 	%rd762, %rd6294, %rd678;
	xor.b64  	%rd763, %rd726, %rd702;
	and.b64  	%rd764, %rd750, %rd763;
	xor.b64  	%rd765, %rd764, %rd702;
	add.s64 	%rd766, %rd762, %rd765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r354}, %rd750;
	}
	shf.r.wrap.b32 	%r355, %r354, %r353, 14;
	shf.r.wrap.b32 	%r356, %r353, %r354, 14;
	mov.b64 	%rd767, {%r356, %r355};
	shf.r.wrap.b32 	%r357, %r354, %r353, 18;
	shf.r.wrap.b32 	%r358, %r353, %r354, 18;
	mov.b64 	%rd768, {%r358, %r357};
	xor.b64  	%rd769, %rd767, %rd768;
	shf.l.wrap.b32 	%r359, %r353, %r354, 23;
	shf.l.wrap.b32 	%r360, %r354, %r353, 23;
	mov.b64 	%rd770, {%r360, %r359};
	xor.b64  	%rd771, %rd769, %rd770;
	add.s64 	%rd772, %rd766, %rd771;
	add.s64 	%rd773, %rd772, -9160688886553864527;
	add.s64 	%rd774, %rd773, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd761;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 28;
	shf.r.wrap.b32 	%r364, %r361, %r362, 28;
	mov.b64 	%rd775, {%r364, %r363};
	shf.l.wrap.b32 	%r365, %r361, %r362, 30;
	shf.l.wrap.b32 	%r366, %r362, %r361, 30;
	mov.b64 	%rd776, {%r366, %r365};
	xor.b64  	%rd777, %rd775, %rd776;
	shf.l.wrap.b32 	%r367, %r361, %r362, 25;
	shf.l.wrap.b32 	%r368, %r362, %r361, 25;
	mov.b64 	%rd778, {%r368, %r367};
	xor.b64  	%rd779, %rd777, %rd778;
	and.b64  	%rd780, %rd761, %rd737;
	or.b64  	%rd781, %rd761, %rd737;
	and.b64  	%rd782, %rd781, %rd713;
	or.b64  	%rd783, %rd782, %rd780;
	add.s64 	%rd784, %rd783, %rd779;
	add.s64 	%rd785, %rd784, %rd773;
	add.s64 	%rd786, %rd6293, %rd702;
	xor.b64  	%rd787, %rd750, %rd726;
	and.b64  	%rd788, %rd774, %rd787;
	xor.b64  	%rd789, %rd788, %rd726;
	add.s64 	%rd790, %rd786, %rd789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r369,%dummy}, %rd774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r370}, %rd774;
	}
	shf.r.wrap.b32 	%r371, %r370, %r369, 14;
	shf.r.wrap.b32 	%r372, %r369, %r370, 14;
	mov.b64 	%rd791, {%r372, %r371};
	shf.r.wrap.b32 	%r373, %r370, %r369, 18;
	shf.r.wrap.b32 	%r374, %r369, %r370, 18;
	mov.b64 	%rd792, {%r374, %r373};
	xor.b64  	%rd793, %rd791, %rd792;
	shf.l.wrap.b32 	%r375, %r369, %r370, 23;
	shf.l.wrap.b32 	%r376, %r370, %r369, 23;
	mov.b64 	%rd794, {%r376, %r375};
	xor.b64  	%rd795, %rd793, %rd794;
	add.s64 	%rd796, %rd790, %rd795;
	add.s64 	%rd797, %rd796, -7215885187991268811;
	add.s64 	%rd798, %rd797, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r377,%dummy}, %rd785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r378}, %rd785;
	}
	shf.r.wrap.b32 	%r379, %r378, %r377, 28;
	shf.r.wrap.b32 	%r380, %r377, %r378, 28;
	mov.b64 	%rd799, {%r380, %r379};
	shf.l.wrap.b32 	%r381, %r377, %r378, 30;
	shf.l.wrap.b32 	%r382, %r378, %r377, 30;
	mov.b64 	%rd800, {%r382, %r381};
	xor.b64  	%rd801, %rd799, %rd800;
	shf.l.wrap.b32 	%r383, %r377, %r378, 25;
	shf.l.wrap.b32 	%r384, %r378, %r377, 25;
	mov.b64 	%rd802, {%r384, %r383};
	xor.b64  	%rd803, %rd801, %rd802;
	and.b64  	%rd804, %rd785, %rd761;
	or.b64  	%rd805, %rd785, %rd761;
	and.b64  	%rd806, %rd805, %rd737;
	or.b64  	%rd807, %rd806, %rd804;
	add.s64 	%rd808, %rd807, %rd803;
	add.s64 	%rd809, %rd808, %rd797;
	add.s64 	%rd810, %rd6292, %rd726;
	xor.b64  	%rd811, %rd774, %rd750;
	and.b64  	%rd812, %rd798, %rd811;
	xor.b64  	%rd813, %rd812, %rd750;
	add.s64 	%rd814, %rd810, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd798;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 14;
	shf.r.wrap.b32 	%r388, %r385, %r386, 14;
	mov.b64 	%rd815, {%r388, %r387};
	shf.r.wrap.b32 	%r389, %r386, %r385, 18;
	shf.r.wrap.b32 	%r390, %r385, %r386, 18;
	mov.b64 	%rd816, {%r390, %r389};
	xor.b64  	%rd817, %rd815, %rd816;
	shf.l.wrap.b32 	%r391, %r385, %r386, 23;
	shf.l.wrap.b32 	%r392, %r386, %r385, 23;
	mov.b64 	%rd818, {%r392, %r391};
	xor.b64  	%rd819, %rd817, %rd818;
	add.s64 	%rd820, %rd814, %rd819;
	add.s64 	%rd821, %rd820, -4495734319001033068;
	add.s64 	%rd822, %rd821, %rd737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r393,%dummy}, %rd809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r394}, %rd809;
	}
	shf.r.wrap.b32 	%r395, %r394, %r393, 28;
	shf.r.wrap.b32 	%r396, %r393, %r394, 28;
	mov.b64 	%rd823, {%r396, %r395};
	shf.l.wrap.b32 	%r397, %r393, %r394, 30;
	shf.l.wrap.b32 	%r398, %r394, %r393, 30;
	mov.b64 	%rd824, {%r398, %r397};
	xor.b64  	%rd825, %rd823, %rd824;
	shf.l.wrap.b32 	%r399, %r393, %r394, 25;
	shf.l.wrap.b32 	%r400, %r394, %r393, 25;
	mov.b64 	%rd826, {%r400, %r399};
	xor.b64  	%rd827, %rd825, %rd826;
	and.b64  	%rd828, %rd809, %rd785;
	or.b64  	%rd829, %rd809, %rd785;
	and.b64  	%rd830, %rd829, %rd761;
	or.b64  	%rd831, %rd830, %rd828;
	add.s64 	%rd832, %rd831, %rd827;
	add.s64 	%rd833, %rd832, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r401}, %rd6293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r402,%dummy}, %rd6293;
	}
	shf.l.wrap.b32 	%r403, %r402, %r401, 3;
	shf.l.wrap.b32 	%r404, %r401, %r402, 3;
	mov.b64 	%rd834, {%r404, %r403};
	shf.r.wrap.b32 	%r405, %r401, %r402, 19;
	shf.r.wrap.b32 	%r406, %r402, %r401, 19;
	mov.b64 	%rd835, {%r406, %r405};
	xor.b64  	%rd836, %rd835, %rd834;
	shr.u64 	%rd837, %rd6293, 6;
	xor.b64  	%rd838, %rd836, %rd837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd6306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd6306;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 8;
	shf.r.wrap.b32 	%r410, %r407, %r408, 8;
	mov.b64 	%rd839, {%r410, %r409};
	shf.r.wrap.b32 	%r411, %r408, %r407, 1;
	shf.r.wrap.b32 	%r412, %r407, %r408, 1;
	mov.b64 	%rd840, {%r412, %r411};
	xor.b64  	%rd841, %rd840, %rd839;
	shr.u64 	%rd842, %rd6306, 7;
	xor.b64  	%rd843, %rd841, %rd842;
	add.s64 	%rd844, %rd6298, %rd838;
	add.s64 	%rd845, %rd844, %rd6307;
	add.s64 	%rd846, %rd845, %rd843;
	add.s64 	%rd847, %rd846, %rd750;
	xor.b64  	%rd848, %rd798, %rd774;
	and.b64  	%rd849, %rd822, %rd848;
	xor.b64  	%rd850, %rd849, %rd774;
	add.s64 	%rd851, %rd847, %rd850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r414}, %rd822;
	}
	shf.r.wrap.b32 	%r415, %r414, %r413, 14;
	shf.r.wrap.b32 	%r416, %r413, %r414, 14;
	mov.b64 	%rd852, {%r416, %r415};
	shf.r.wrap.b32 	%r417, %r414, %r413, 18;
	shf.r.wrap.b32 	%r418, %r413, %r414, 18;
	mov.b64 	%rd853, {%r418, %r417};
	xor.b64  	%rd854, %rd852, %rd853;
	shf.l.wrap.b32 	%r419, %r413, %r414, 23;
	shf.l.wrap.b32 	%r420, %r414, %r413, 23;
	mov.b64 	%rd855, {%r420, %r419};
	xor.b64  	%rd856, %rd854, %rd855;
	add.s64 	%rd857, %rd851, %rd856;
	add.s64 	%rd858, %rd857, -1973867731355612462;
	add.s64 	%rd859, %rd858, %rd761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd833;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 28;
	shf.r.wrap.b32 	%r424, %r421, %r422, 28;
	mov.b64 	%rd860, {%r424, %r423};
	shf.l.wrap.b32 	%r425, %r421, %r422, 30;
	shf.l.wrap.b32 	%r426, %r422, %r421, 30;
	mov.b64 	%rd861, {%r426, %r425};
	xor.b64  	%rd862, %rd860, %rd861;
	shf.l.wrap.b32 	%r427, %r421, %r422, 25;
	shf.l.wrap.b32 	%r428, %r422, %r421, 25;
	mov.b64 	%rd863, {%r428, %r427};
	xor.b64  	%rd864, %rd862, %rd863;
	and.b64  	%rd865, %rd833, %rd809;
	or.b64  	%rd866, %rd833, %rd809;
	and.b64  	%rd867, %rd866, %rd785;
	or.b64  	%rd868, %rd867, %rd865;
	add.s64 	%rd869, %rd868, %rd864;
	add.s64 	%rd870, %rd869, %rd858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd6292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r430,%dummy}, %rd6292;
	}
	shf.l.wrap.b32 	%r431, %r430, %r429, 3;
	shf.l.wrap.b32 	%r432, %r429, %r430, 3;
	mov.b64 	%rd871, {%r432, %r431};
	shf.r.wrap.b32 	%r433, %r429, %r430, 19;
	shf.r.wrap.b32 	%r434, %r430, %r429, 19;
	mov.b64 	%rd872, {%r434, %r433};
	xor.b64  	%rd873, %rd872, %rd871;
	shr.u64 	%rd874, %rd6292, 6;
	xor.b64  	%rd875, %rd873, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd6305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd6305;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 8;
	shf.r.wrap.b32 	%r438, %r435, %r436, 8;
	mov.b64 	%rd876, {%r438, %r437};
	shf.r.wrap.b32 	%r439, %r436, %r435, 1;
	shf.r.wrap.b32 	%r440, %r435, %r436, 1;
	mov.b64 	%rd877, {%r440, %r439};
	xor.b64  	%rd878, %rd877, %rd876;
	shr.u64 	%rd879, %rd6305, 7;
	xor.b64  	%rd880, %rd878, %rd879;
	add.s64 	%rd881, %rd6297, %rd875;
	add.s64 	%rd882, %rd881, %rd6306;
	add.s64 	%rd883, %rd882, %rd880;
	add.s64 	%rd884, %rd883, %rd774;
	xor.b64  	%rd885, %rd822, %rd798;
	and.b64  	%rd886, %rd859, %rd885;
	xor.b64  	%rd887, %rd886, %rd798;
	add.s64 	%rd888, %rd884, %rd887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r442}, %rd859;
	}
	shf.r.wrap.b32 	%r443, %r442, %r441, 14;
	shf.r.wrap.b32 	%r444, %r441, %r442, 14;
	mov.b64 	%rd889, {%r444, %r443};
	shf.r.wrap.b32 	%r445, %r442, %r441, 18;
	shf.r.wrap.b32 	%r446, %r441, %r442, 18;
	mov.b64 	%rd890, {%r446, %r445};
	xor.b64  	%rd891, %rd889, %rd890;
	shf.l.wrap.b32 	%r447, %r441, %r442, 23;
	shf.l.wrap.b32 	%r448, %r442, %r441, 23;
	mov.b64 	%rd892, {%r448, %r447};
	xor.b64  	%rd893, %rd891, %rd892;
	add.s64 	%rd894, %rd888, %rd893;
	add.s64 	%rd895, %rd894, -1171420211273849373;
	add.s64 	%rd896, %rd895, %rd785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r450}, %rd870;
	}
	shf.r.wrap.b32 	%r451, %r450, %r449, 28;
	shf.r.wrap.b32 	%r452, %r449, %r450, 28;
	mov.b64 	%rd897, {%r452, %r451};
	shf.l.wrap.b32 	%r453, %r449, %r450, 30;
	shf.l.wrap.b32 	%r454, %r450, %r449, 30;
	mov.b64 	%rd898, {%r454, %r453};
	xor.b64  	%rd899, %rd897, %rd898;
	shf.l.wrap.b32 	%r455, %r449, %r450, 25;
	shf.l.wrap.b32 	%r456, %r450, %r449, 25;
	mov.b64 	%rd900, {%r456, %r455};
	xor.b64  	%rd901, %rd899, %rd900;
	and.b64  	%rd902, %rd870, %rd833;
	or.b64  	%rd903, %rd870, %rd833;
	and.b64  	%rd904, %rd903, %rd809;
	or.b64  	%rd905, %rd904, %rd902;
	add.s64 	%rd906, %rd905, %rd901;
	add.s64 	%rd907, %rd906, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd846;
	}
	shf.r.wrap.b32 	%r459, %r458, %r457, 19;
	shf.r.wrap.b32 	%r460, %r457, %r458, 19;
	mov.b64 	%rd908, {%r460, %r459};
	shf.l.wrap.b32 	%r461, %r457, %r458, 3;
	shf.l.wrap.b32 	%r462, %r458, %r457, 3;
	mov.b64 	%rd909, {%r462, %r461};
	xor.b64  	%rd910, %rd908, %rd909;
	shr.u64 	%rd911, %rd846, 6;
	xor.b64  	%rd912, %rd910, %rd911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd6304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd6304;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 8;
	shf.r.wrap.b32 	%r466, %r463, %r464, 8;
	mov.b64 	%rd913, {%r466, %r465};
	shf.r.wrap.b32 	%r467, %r464, %r463, 1;
	shf.r.wrap.b32 	%r468, %r463, %r464, 1;
	mov.b64 	%rd914, {%r468, %r467};
	xor.b64  	%rd915, %rd914, %rd913;
	shr.u64 	%rd916, %rd6304, 7;
	xor.b64  	%rd917, %rd915, %rd916;
	add.s64 	%rd918, %rd6305, %rd6296;
	add.s64 	%rd919, %rd918, %rd917;
	add.s64 	%rd920, %rd919, %rd912;
	add.s64 	%rd921, %rd920, %rd798;
	xor.b64  	%rd922, %rd859, %rd822;
	and.b64  	%rd923, %rd896, %rd922;
	xor.b64  	%rd924, %rd923, %rd822;
	add.s64 	%rd925, %rd921, %rd924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r469,%dummy}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r470}, %rd896;
	}
	shf.r.wrap.b32 	%r471, %r470, %r469, 14;
	shf.r.wrap.b32 	%r472, %r469, %r470, 14;
	mov.b64 	%rd926, {%r472, %r471};
	shf.r.wrap.b32 	%r473, %r470, %r469, 18;
	shf.r.wrap.b32 	%r474, %r469, %r470, 18;
	mov.b64 	%rd927, {%r474, %r473};
	xor.b64  	%rd928, %rd926, %rd927;
	shf.l.wrap.b32 	%r475, %r469, %r470, 23;
	shf.l.wrap.b32 	%r476, %r470, %r469, 23;
	mov.b64 	%rd929, {%r476, %r475};
	xor.b64  	%rd930, %rd928, %rd929;
	add.s64 	%rd931, %rd925, %rd930;
	add.s64 	%rd932, %rd931, 1135362057144423861;
	add.s64 	%rd933, %rd932, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd907;
	}
	shf.r.wrap.b32 	%r479, %r478, %r477, 28;
	shf.r.wrap.b32 	%r480, %r477, %r478, 28;
	mov.b64 	%rd934, {%r480, %r479};
	shf.l.wrap.b32 	%r481, %r477, %r478, 30;
	shf.l.wrap.b32 	%r482, %r478, %r477, 30;
	mov.b64 	%rd935, {%r482, %r481};
	xor.b64  	%rd936, %rd934, %rd935;
	shf.l.wrap.b32 	%r483, %r477, %r478, 25;
	shf.l.wrap.b32 	%r484, %r478, %r477, 25;
	mov.b64 	%rd937, {%r484, %r483};
	xor.b64  	%rd938, %rd936, %rd937;
	and.b64  	%rd939, %rd907, %rd870;
	or.b64  	%rd940, %rd907, %rd870;
	and.b64  	%rd941, %rd940, %rd833;
	or.b64  	%rd942, %rd941, %rd939;
	add.s64 	%rd943, %rd942, %rd938;
	add.s64 	%rd944, %rd943, %rd932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r485,%dummy}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r486}, %rd883;
	}
	shf.r.wrap.b32 	%r487, %r486, %r485, 19;
	shf.r.wrap.b32 	%r488, %r485, %r486, 19;
	mov.b64 	%rd945, {%r488, %r487};
	shf.l.wrap.b32 	%r489, %r485, %r486, 3;
	shf.l.wrap.b32 	%r490, %r486, %r485, 3;
	mov.b64 	%rd946, {%r490, %r489};
	xor.b64  	%rd947, %rd945, %rd946;
	shr.u64 	%rd948, %rd883, 6;
	xor.b64  	%rd949, %rd947, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd6303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd6303;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 8;
	shf.r.wrap.b32 	%r494, %r491, %r492, 8;
	mov.b64 	%rd950, {%r494, %r493};
	shf.r.wrap.b32 	%r495, %r492, %r491, 1;
	shf.r.wrap.b32 	%r496, %r491, %r492, 1;
	mov.b64 	%rd951, {%r496, %r495};
	xor.b64  	%rd952, %rd951, %rd950;
	shr.u64 	%rd953, %rd6303, 7;
	xor.b64  	%rd954, %rd952, %rd953;
	add.s64 	%rd955, %rd6304, %rd6295;
	add.s64 	%rd956, %rd955, %rd954;
	add.s64 	%rd957, %rd956, %rd949;
	add.s64 	%rd958, %rd957, %rd822;
	xor.b64  	%rd959, %rd896, %rd859;
	and.b64  	%rd960, %rd933, %rd959;
	xor.b64  	%rd961, %rd960, %rd859;
	add.s64 	%rd962, %rd958, %rd961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r498}, %rd933;
	}
	shf.r.wrap.b32 	%r499, %r498, %r497, 14;
	shf.r.wrap.b32 	%r500, %r497, %r498, 14;
	mov.b64 	%rd963, {%r500, %r499};
	shf.r.wrap.b32 	%r501, %r498, %r497, 18;
	shf.r.wrap.b32 	%r502, %r497, %r498, 18;
	mov.b64 	%rd964, {%r502, %r501};
	xor.b64  	%rd965, %rd963, %rd964;
	shf.l.wrap.b32 	%r503, %r497, %r498, 23;
	shf.l.wrap.b32 	%r504, %r498, %r497, 23;
	mov.b64 	%rd966, {%r504, %r503};
	xor.b64  	%rd967, %rd965, %rd966;
	add.s64 	%rd968, %rd962, %rd967;
	add.s64 	%rd969, %rd968, 2597628984639134821;
	add.s64 	%rd970, %rd969, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd944;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 28;
	shf.r.wrap.b32 	%r508, %r505, %r506, 28;
	mov.b64 	%rd971, {%r508, %r507};
	shf.l.wrap.b32 	%r509, %r505, %r506, 30;
	shf.l.wrap.b32 	%r510, %r506, %r505, 30;
	mov.b64 	%rd972, {%r510, %r509};
	xor.b64  	%rd973, %rd971, %rd972;
	shf.l.wrap.b32 	%r511, %r505, %r506, 25;
	shf.l.wrap.b32 	%r512, %r506, %r505, 25;
	mov.b64 	%rd974, {%r512, %r511};
	xor.b64  	%rd975, %rd973, %rd974;
	and.b64  	%rd976, %rd944, %rd907;
	or.b64  	%rd977, %rd944, %rd907;
	and.b64  	%rd978, %rd977, %rd870;
	or.b64  	%rd979, %rd978, %rd976;
	add.s64 	%rd980, %rd979, %rd975;
	add.s64 	%rd981, %rd980, %rd969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd920;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 19;
	shf.r.wrap.b32 	%r516, %r513, %r514, 19;
	mov.b64 	%rd982, {%r516, %r515};
	shf.l.wrap.b32 	%r517, %r513, %r514, 3;
	shf.l.wrap.b32 	%r518, %r514, %r513, 3;
	mov.b64 	%rd983, {%r518, %r517};
	xor.b64  	%rd984, %rd982, %rd983;
	shr.u64 	%rd985, %rd920, 6;
	xor.b64  	%rd986, %rd984, %rd985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd6302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd6302;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 8;
	shf.r.wrap.b32 	%r522, %r519, %r520, 8;
	mov.b64 	%rd987, {%r522, %r521};
	shf.r.wrap.b32 	%r523, %r520, %r519, 1;
	shf.r.wrap.b32 	%r524, %r519, %r520, 1;
	mov.b64 	%rd988, {%r524, %r523};
	xor.b64  	%rd989, %rd988, %rd987;
	shr.u64 	%rd990, %rd6302, 7;
	xor.b64  	%rd991, %rd989, %rd990;
	add.s64 	%rd992, %rd6303, %rd6294;
	add.s64 	%rd993, %rd992, %rd991;
	add.s64 	%rd994, %rd993, %rd986;
	add.s64 	%rd995, %rd994, %rd859;
	xor.b64  	%rd996, %rd933, %rd896;
	and.b64  	%rd997, %rd970, %rd996;
	xor.b64  	%rd998, %rd997, %rd896;
	add.s64 	%rd999, %rd995, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd970;
	}
	shf.r.wrap.b32 	%r527, %r526, %r525, 14;
	shf.r.wrap.b32 	%r528, %r525, %r526, 14;
	mov.b64 	%rd1000, {%r528, %r527};
	shf.r.wrap.b32 	%r529, %r526, %r525, 18;
	shf.r.wrap.b32 	%r530, %r525, %r526, 18;
	mov.b64 	%rd1001, {%r530, %r529};
	xor.b64  	%rd1002, %rd1000, %rd1001;
	shf.l.wrap.b32 	%r531, %r525, %r526, 23;
	shf.l.wrap.b32 	%r532, %r526, %r525, 23;
	mov.b64 	%rd1003, {%r532, %r531};
	xor.b64  	%rd1004, %rd1002, %rd1003;
	add.s64 	%rd1005, %rd999, %rd1004;
	add.s64 	%rd1006, %rd1005, 3308224258029322869;
	add.s64 	%rd1007, %rd1006, %rd870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd981;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 28;
	shf.r.wrap.b32 	%r536, %r533, %r534, 28;
	mov.b64 	%rd1008, {%r536, %r535};
	shf.l.wrap.b32 	%r537, %r533, %r534, 30;
	shf.l.wrap.b32 	%r538, %r534, %r533, 30;
	mov.b64 	%rd1009, {%r538, %r537};
	xor.b64  	%rd1010, %rd1008, %rd1009;
	shf.l.wrap.b32 	%r539, %r533, %r534, 25;
	shf.l.wrap.b32 	%r540, %r534, %r533, 25;
	mov.b64 	%rd1011, {%r540, %r539};
	xor.b64  	%rd1012, %rd1010, %rd1011;
	and.b64  	%rd1013, %rd981, %rd944;
	or.b64  	%rd1014, %rd981, %rd944;
	and.b64  	%rd1015, %rd1014, %rd907;
	or.b64  	%rd1016, %rd1015, %rd1013;
	add.s64 	%rd1017, %rd1016, %rd1012;
	add.s64 	%rd1018, %rd1017, %rd1006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r541,%dummy}, %rd957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r542}, %rd957;
	}
	shf.r.wrap.b32 	%r543, %r542, %r541, 19;
	shf.r.wrap.b32 	%r544, %r541, %r542, 19;
	mov.b64 	%rd1019, {%r544, %r543};
	shf.l.wrap.b32 	%r545, %r541, %r542, 3;
	shf.l.wrap.b32 	%r546, %r542, %r541, 3;
	mov.b64 	%rd1020, {%r546, %r545};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	shr.u64 	%rd1022, %rd957, 6;
	xor.b64  	%rd1023, %rd1021, %rd1022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd6301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd6301;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 8;
	shf.r.wrap.b32 	%r550, %r547, %r548, 8;
	mov.b64 	%rd1024, {%r550, %r549};
	shf.r.wrap.b32 	%r551, %r548, %r547, 1;
	shf.r.wrap.b32 	%r552, %r547, %r548, 1;
	mov.b64 	%rd1025, {%r552, %r551};
	xor.b64  	%rd1026, %rd1025, %rd1024;
	shr.u64 	%rd1027, %rd6301, 7;
	xor.b64  	%rd1028, %rd1026, %rd1027;
	add.s64 	%rd1029, %rd6302, %rd6293;
	add.s64 	%rd1030, %rd1029, %rd1028;
	add.s64 	%rd1031, %rd1030, %rd1023;
	add.s64 	%rd1032, %rd1031, %rd896;
	xor.b64  	%rd1033, %rd970, %rd933;
	and.b64  	%rd1034, %rd1007, %rd1033;
	xor.b64  	%rd1035, %rd1034, %rd933;
	add.s64 	%rd1036, %rd1032, %rd1035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd1007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r554}, %rd1007;
	}
	shf.r.wrap.b32 	%r555, %r554, %r553, 14;
	shf.r.wrap.b32 	%r556, %r553, %r554, 14;
	mov.b64 	%rd1037, {%r556, %r555};
	shf.r.wrap.b32 	%r557, %r554, %r553, 18;
	shf.r.wrap.b32 	%r558, %r553, %r554, 18;
	mov.b64 	%rd1038, {%r558, %r557};
	xor.b64  	%rd1039, %rd1037, %rd1038;
	shf.l.wrap.b32 	%r559, %r553, %r554, 23;
	shf.l.wrap.b32 	%r560, %r554, %r553, 23;
	mov.b64 	%rd1040, {%r560, %r559};
	xor.b64  	%rd1041, %rd1039, %rd1040;
	add.s64 	%rd1042, %rd1036, %rd1041;
	add.s64 	%rd1043, %rd1042, 5365058923640841347;
	add.s64 	%rd1044, %rd1043, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd1018;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 28;
	shf.r.wrap.b32 	%r564, %r561, %r562, 28;
	mov.b64 	%rd1045, {%r564, %r563};
	shf.l.wrap.b32 	%r565, %r561, %r562, 30;
	shf.l.wrap.b32 	%r566, %r562, %r561, 30;
	mov.b64 	%rd1046, {%r566, %r565};
	xor.b64  	%rd1047, %rd1045, %rd1046;
	shf.l.wrap.b32 	%r567, %r561, %r562, 25;
	shf.l.wrap.b32 	%r568, %r562, %r561, 25;
	mov.b64 	%rd1048, {%r568, %r567};
	xor.b64  	%rd1049, %rd1047, %rd1048;
	and.b64  	%rd1050, %rd1018, %rd981;
	or.b64  	%rd1051, %rd1018, %rd981;
	and.b64  	%rd1052, %rd1051, %rd944;
	or.b64  	%rd1053, %rd1052, %rd1050;
	add.s64 	%rd1054, %rd1053, %rd1049;
	add.s64 	%rd1055, %rd1054, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd994;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 19;
	shf.r.wrap.b32 	%r572, %r569, %r570, 19;
	mov.b64 	%rd1056, {%r572, %r571};
	shf.l.wrap.b32 	%r573, %r569, %r570, 3;
	shf.l.wrap.b32 	%r574, %r570, %r569, 3;
	mov.b64 	%rd1057, {%r574, %r573};
	xor.b64  	%rd1058, %rd1056, %rd1057;
	shr.u64 	%rd1059, %rd994, 6;
	xor.b64  	%rd1060, %rd1058, %rd1059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd6300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd6300;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 8;
	shf.r.wrap.b32 	%r578, %r575, %r576, 8;
	mov.b64 	%rd1061, {%r578, %r577};
	shf.r.wrap.b32 	%r579, %r576, %r575, 1;
	shf.r.wrap.b32 	%r580, %r575, %r576, 1;
	mov.b64 	%rd1062, {%r580, %r579};
	xor.b64  	%rd1063, %rd1062, %rd1061;
	shr.u64 	%rd1064, %rd6300, 7;
	xor.b64  	%rd1065, %rd1063, %rd1064;
	add.s64 	%rd1066, %rd6301, %rd6292;
	add.s64 	%rd1067, %rd1066, %rd1065;
	add.s64 	%rd1068, %rd1067, %rd1060;
	add.s64 	%rd1069, %rd1068, %rd933;
	xor.b64  	%rd1070, %rd1007, %rd970;
	and.b64  	%rd1071, %rd1044, %rd1070;
	xor.b64  	%rd1072, %rd1071, %rd970;
	add.s64 	%rd1073, %rd1069, %rd1072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r581,%dummy}, %rd1044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r582}, %rd1044;
	}
	shf.r.wrap.b32 	%r583, %r582, %r581, 14;
	shf.r.wrap.b32 	%r584, %r581, %r582, 14;
	mov.b64 	%rd1074, {%r584, %r583};
	shf.r.wrap.b32 	%r585, %r582, %r581, 18;
	shf.r.wrap.b32 	%r586, %r581, %r582, 18;
	mov.b64 	%rd1075, {%r586, %r585};
	xor.b64  	%rd1076, %rd1074, %rd1075;
	shf.l.wrap.b32 	%r587, %r581, %r582, 23;
	shf.l.wrap.b32 	%r588, %r582, %r581, 23;
	mov.b64 	%rd1077, {%r588, %r587};
	xor.b64  	%rd1078, %rd1076, %rd1077;
	add.s64 	%rd1079, %rd1073, %rd1078;
	add.s64 	%rd1080, %rd1079, 6679025012923562964;
	add.s64 	%rd1081, %rd1080, %rd944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r590}, %rd1055;
	}
	shf.r.wrap.b32 	%r591, %r590, %r589, 28;
	shf.r.wrap.b32 	%r592, %r589, %r590, 28;
	mov.b64 	%rd1082, {%r592, %r591};
	shf.l.wrap.b32 	%r593, %r589, %r590, 30;
	shf.l.wrap.b32 	%r594, %r590, %r589, 30;
	mov.b64 	%rd1083, {%r594, %r593};
	xor.b64  	%rd1084, %rd1082, %rd1083;
	shf.l.wrap.b32 	%r595, %r589, %r590, 25;
	shf.l.wrap.b32 	%r596, %r590, %r589, 25;
	mov.b64 	%rd1085, {%r596, %r595};
	xor.b64  	%rd1086, %rd1084, %rd1085;
	and.b64  	%rd1087, %rd1055, %rd1018;
	or.b64  	%rd1088, %rd1055, %rd1018;
	and.b64  	%rd1089, %rd1088, %rd981;
	or.b64  	%rd1090, %rd1089, %rd1087;
	add.s64 	%rd1091, %rd1090, %rd1086;
	add.s64 	%rd1092, %rd1091, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd1031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd1031;
	}
	shf.r.wrap.b32 	%r599, %r598, %r597, 19;
	shf.r.wrap.b32 	%r600, %r597, %r598, 19;
	mov.b64 	%rd1093, {%r600, %r599};
	shf.l.wrap.b32 	%r601, %r597, %r598, 3;
	shf.l.wrap.b32 	%r602, %r598, %r597, 3;
	mov.b64 	%rd1094, {%r602, %r601};
	xor.b64  	%rd1095, %rd1093, %rd1094;
	shr.u64 	%rd1096, %rd1031, 6;
	xor.b64  	%rd1097, %rd1095, %rd1096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd6299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd6299;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 8;
	shf.r.wrap.b32 	%r606, %r603, %r604, 8;
	mov.b64 	%rd1098, {%r606, %r605};
	shf.r.wrap.b32 	%r607, %r604, %r603, 1;
	shf.r.wrap.b32 	%r608, %r603, %r604, 1;
	mov.b64 	%rd1099, {%r608, %r607};
	xor.b64  	%rd1100, %rd1099, %rd1098;
	shr.u64 	%rd1101, %rd6299, 7;
	xor.b64  	%rd1102, %rd1100, %rd1101;
	add.s64 	%rd1103, %rd1102, %rd6300;
	add.s64 	%rd1104, %rd1103, %rd846;
	add.s64 	%rd1105, %rd1104, %rd1097;
	add.s64 	%rd1106, %rd1105, %rd970;
	xor.b64  	%rd1107, %rd1044, %rd1007;
	and.b64  	%rd1108, %rd1081, %rd1107;
	xor.b64  	%rd1109, %rd1108, %rd1007;
	add.s64 	%rd1110, %rd1106, %rd1109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd1081;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 14;
	shf.r.wrap.b32 	%r612, %r609, %r610, 14;
	mov.b64 	%rd1111, {%r612, %r611};
	shf.r.wrap.b32 	%r613, %r610, %r609, 18;
	shf.r.wrap.b32 	%r614, %r609, %r610, 18;
	mov.b64 	%rd1112, {%r614, %r613};
	xor.b64  	%rd1113, %rd1111, %rd1112;
	shf.l.wrap.b32 	%r615, %r609, %r610, 23;
	shf.l.wrap.b32 	%r616, %r610, %r609, 23;
	mov.b64 	%rd1114, {%r616, %r615};
	xor.b64  	%rd1115, %rd1113, %rd1114;
	add.s64 	%rd1116, %rd1110, %rd1115;
	add.s64 	%rd1117, %rd1116, 8573033837759648693;
	add.s64 	%rd1118, %rd1117, %rd981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd1092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd1092;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 28;
	shf.r.wrap.b32 	%r620, %r617, %r618, 28;
	mov.b64 	%rd1119, {%r620, %r619};
	shf.l.wrap.b32 	%r621, %r617, %r618, 30;
	shf.l.wrap.b32 	%r622, %r618, %r617, 30;
	mov.b64 	%rd1120, {%r622, %r621};
	xor.b64  	%rd1121, %rd1119, %rd1120;
	shf.l.wrap.b32 	%r623, %r617, %r618, 25;
	shf.l.wrap.b32 	%r624, %r618, %r617, 25;
	mov.b64 	%rd1122, {%r624, %r623};
	xor.b64  	%rd1123, %rd1121, %rd1122;
	and.b64  	%rd1124, %rd1092, %rd1055;
	or.b64  	%rd1125, %rd1092, %rd1055;
	and.b64  	%rd1126, %rd1125, %rd1018;
	or.b64  	%rd1127, %rd1126, %rd1124;
	add.s64 	%rd1128, %rd1127, %rd1123;
	add.s64 	%rd1129, %rd1128, %rd1117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd1068;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 19;
	shf.r.wrap.b32 	%r628, %r625, %r626, 19;
	mov.b64 	%rd1130, {%r628, %r627};
	shf.l.wrap.b32 	%r629, %r625, %r626, 3;
	shf.l.wrap.b32 	%r630, %r626, %r625, 3;
	mov.b64 	%rd1131, {%r630, %r629};
	xor.b64  	%rd1132, %rd1130, %rd1131;
	shr.u64 	%rd1133, %rd1068, 6;
	xor.b64  	%rd1134, %rd1132, %rd1133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd6298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd6298;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 8;
	shf.r.wrap.b32 	%r634, %r631, %r632, 8;
	mov.b64 	%rd1135, {%r634, %r633};
	shf.r.wrap.b32 	%r635, %r632, %r631, 1;
	shf.r.wrap.b32 	%r636, %r631, %r632, 1;
	mov.b64 	%rd1136, {%r636, %r635};
	xor.b64  	%rd1137, %rd1136, %rd1135;
	shr.u64 	%rd1138, %rd6298, 7;
	xor.b64  	%rd1139, %rd1137, %rd1138;
	add.s64 	%rd1140, %rd1139, %rd6299;
	add.s64 	%rd1141, %rd1140, %rd883;
	add.s64 	%rd1142, %rd1141, %rd1134;
	add.s64 	%rd1143, %rd1142, %rd1007;
	xor.b64  	%rd1144, %rd1081, %rd1044;
	and.b64  	%rd1145, %rd1118, %rd1144;
	xor.b64  	%rd1146, %rd1145, %rd1044;
	add.s64 	%rd1147, %rd1143, %rd1146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r637,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r638}, %rd1118;
	}
	shf.r.wrap.b32 	%r639, %r638, %r637, 14;
	shf.r.wrap.b32 	%r640, %r637, %r638, 14;
	mov.b64 	%rd1148, {%r640, %r639};
	shf.r.wrap.b32 	%r641, %r638, %r637, 18;
	shf.r.wrap.b32 	%r642, %r637, %r638, 18;
	mov.b64 	%rd1149, {%r642, %r641};
	xor.b64  	%rd1150, %rd1148, %rd1149;
	shf.l.wrap.b32 	%r643, %r637, %r638, 23;
	shf.l.wrap.b32 	%r644, %r638, %r637, 23;
	mov.b64 	%rd1151, {%r644, %r643};
	xor.b64  	%rd1152, %rd1150, %rd1151;
	add.s64 	%rd1153, %rd1147, %rd1152;
	add.s64 	%rd1154, %rd1153, -7476448914759557205;
	add.s64 	%rd1155, %rd1154, %rd1018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd1129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd1129;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 28;
	shf.r.wrap.b32 	%r648, %r645, %r646, 28;
	mov.b64 	%rd1156, {%r648, %r647};
	shf.l.wrap.b32 	%r649, %r645, %r646, 30;
	shf.l.wrap.b32 	%r650, %r646, %r645, 30;
	mov.b64 	%rd1157, {%r650, %r649};
	xor.b64  	%rd1158, %rd1156, %rd1157;
	shf.l.wrap.b32 	%r651, %r645, %r646, 25;
	shf.l.wrap.b32 	%r652, %r646, %r645, 25;
	mov.b64 	%rd1159, {%r652, %r651};
	xor.b64  	%rd1160, %rd1158, %rd1159;
	and.b64  	%rd1161, %rd1129, %rd1092;
	or.b64  	%rd1162, %rd1129, %rd1092;
	and.b64  	%rd1163, %rd1162, %rd1055;
	or.b64  	%rd1164, %rd1163, %rd1161;
	add.s64 	%rd1165, %rd1164, %rd1160;
	add.s64 	%rd1166, %rd1165, %rd1154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd1105;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 19;
	shf.r.wrap.b32 	%r656, %r653, %r654, 19;
	mov.b64 	%rd1167, {%r656, %r655};
	shf.l.wrap.b32 	%r657, %r653, %r654, 3;
	shf.l.wrap.b32 	%r658, %r654, %r653, 3;
	mov.b64 	%rd1168, {%r658, %r657};
	xor.b64  	%rd1169, %rd1167, %rd1168;
	shr.u64 	%rd1170, %rd1105, 6;
	xor.b64  	%rd1171, %rd1169, %rd1170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd6297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd6297;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 8;
	shf.r.wrap.b32 	%r662, %r659, %r660, 8;
	mov.b64 	%rd1172, {%r662, %r661};
	shf.r.wrap.b32 	%r663, %r660, %r659, 1;
	shf.r.wrap.b32 	%r664, %r659, %r660, 1;
	mov.b64 	%rd1173, {%r664, %r663};
	xor.b64  	%rd1174, %rd1173, %rd1172;
	shr.u64 	%rd1175, %rd6297, 7;
	xor.b64  	%rd1176, %rd1174, %rd1175;
	add.s64 	%rd1177, %rd1176, %rd6298;
	add.s64 	%rd1178, %rd1177, %rd920;
	add.s64 	%rd1179, %rd1178, %rd1171;
	add.s64 	%rd1180, %rd1179, %rd1044;
	xor.b64  	%rd1181, %rd1118, %rd1081;
	and.b64  	%rd1182, %rd1155, %rd1181;
	xor.b64  	%rd1183, %rd1182, %rd1081;
	add.s64 	%rd1184, %rd1180, %rd1183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd1155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r666}, %rd1155;
	}
	shf.r.wrap.b32 	%r667, %r666, %r665, 14;
	shf.r.wrap.b32 	%r668, %r665, %r666, 14;
	mov.b64 	%rd1185, {%r668, %r667};
	shf.r.wrap.b32 	%r669, %r666, %r665, 18;
	shf.r.wrap.b32 	%r670, %r665, %r666, 18;
	mov.b64 	%rd1186, {%r670, %r669};
	xor.b64  	%rd1187, %rd1185, %rd1186;
	shf.l.wrap.b32 	%r671, %r665, %r666, 23;
	shf.l.wrap.b32 	%r672, %r666, %r665, 23;
	mov.b64 	%rd1188, {%r672, %r671};
	xor.b64  	%rd1189, %rd1187, %rd1188;
	add.s64 	%rd1190, %rd1184, %rd1189;
	add.s64 	%rd1191, %rd1190, -6327057829258317296;
	add.s64 	%rd1192, %rd1191, %rd1055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd1166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd1166;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 28;
	shf.r.wrap.b32 	%r676, %r673, %r674, 28;
	mov.b64 	%rd1193, {%r676, %r675};
	shf.l.wrap.b32 	%r677, %r673, %r674, 30;
	shf.l.wrap.b32 	%r678, %r674, %r673, 30;
	mov.b64 	%rd1194, {%r678, %r677};
	xor.b64  	%rd1195, %rd1193, %rd1194;
	shf.l.wrap.b32 	%r679, %r673, %r674, 25;
	shf.l.wrap.b32 	%r680, %r674, %r673, 25;
	mov.b64 	%rd1196, {%r680, %r679};
	xor.b64  	%rd1197, %rd1195, %rd1196;
	and.b64  	%rd1198, %rd1166, %rd1129;
	or.b64  	%rd1199, %rd1166, %rd1129;
	and.b64  	%rd1200, %rd1199, %rd1092;
	or.b64  	%rd1201, %rd1200, %rd1198;
	add.s64 	%rd1202, %rd1201, %rd1197;
	add.s64 	%rd1203, %rd1202, %rd1191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd1142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd1142;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 19;
	shf.r.wrap.b32 	%r684, %r681, %r682, 19;
	mov.b64 	%rd1204, {%r684, %r683};
	shf.l.wrap.b32 	%r685, %r681, %r682, 3;
	shf.l.wrap.b32 	%r686, %r682, %r681, 3;
	mov.b64 	%rd1205, {%r686, %r685};
	xor.b64  	%rd1206, %rd1204, %rd1205;
	shr.u64 	%rd1207, %rd1142, 6;
	xor.b64  	%rd1208, %rd1206, %rd1207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd6296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd6296;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 8;
	shf.r.wrap.b32 	%r690, %r687, %r688, 8;
	mov.b64 	%rd1209, {%r690, %r689};
	shf.r.wrap.b32 	%r691, %r688, %r687, 1;
	shf.r.wrap.b32 	%r692, %r687, %r688, 1;
	mov.b64 	%rd1210, {%r692, %r691};
	xor.b64  	%rd1211, %rd1210, %rd1209;
	shr.u64 	%rd1212, %rd6296, 7;
	xor.b64  	%rd1213, %rd1211, %rd1212;
	add.s64 	%rd1214, %rd1213, %rd6297;
	add.s64 	%rd1215, %rd1214, %rd957;
	add.s64 	%rd1216, %rd1215, %rd1208;
	add.s64 	%rd1217, %rd1216, %rd1081;
	xor.b64  	%rd1218, %rd1155, %rd1118;
	and.b64  	%rd1219, %rd1192, %rd1218;
	xor.b64  	%rd1220, %rd1219, %rd1118;
	add.s64 	%rd1221, %rd1217, %rd1220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r694}, %rd1192;
	}
	shf.r.wrap.b32 	%r695, %r694, %r693, 14;
	shf.r.wrap.b32 	%r696, %r693, %r694, 14;
	mov.b64 	%rd1222, {%r696, %r695};
	shf.r.wrap.b32 	%r697, %r694, %r693, 18;
	shf.r.wrap.b32 	%r698, %r693, %r694, 18;
	mov.b64 	%rd1223, {%r698, %r697};
	xor.b64  	%rd1224, %rd1222, %rd1223;
	shf.l.wrap.b32 	%r699, %r693, %r694, 23;
	shf.l.wrap.b32 	%r700, %r694, %r693, 23;
	mov.b64 	%rd1225, {%r700, %r699};
	xor.b64  	%rd1226, %rd1224, %rd1225;
	add.s64 	%rd1227, %rd1221, %rd1226;
	add.s64 	%rd1228, %rd1227, -5763719355590565569;
	add.s64 	%rd1229, %rd1228, %rd1092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd1203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd1203;
	}
	shf.r.wrap.b32 	%r703, %r702, %r701, 28;
	shf.r.wrap.b32 	%r704, %r701, %r702, 28;
	mov.b64 	%rd1230, {%r704, %r703};
	shf.l.wrap.b32 	%r705, %r701, %r702, 30;
	shf.l.wrap.b32 	%r706, %r702, %r701, 30;
	mov.b64 	%rd1231, {%r706, %r705};
	xor.b64  	%rd1232, %rd1230, %rd1231;
	shf.l.wrap.b32 	%r707, %r701, %r702, 25;
	shf.l.wrap.b32 	%r708, %r702, %r701, 25;
	mov.b64 	%rd1233, {%r708, %r707};
	xor.b64  	%rd1234, %rd1232, %rd1233;
	and.b64  	%rd1235, %rd1203, %rd1166;
	or.b64  	%rd1236, %rd1203, %rd1166;
	and.b64  	%rd1237, %rd1236, %rd1129;
	or.b64  	%rd1238, %rd1237, %rd1235;
	add.s64 	%rd1239, %rd1238, %rd1234;
	add.s64 	%rd1240, %rd1239, %rd1228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd1179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd1179;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 19;
	shf.r.wrap.b32 	%r712, %r709, %r710, 19;
	mov.b64 	%rd1241, {%r712, %r711};
	shf.l.wrap.b32 	%r713, %r709, %r710, 3;
	shf.l.wrap.b32 	%r714, %r710, %r709, 3;
	mov.b64 	%rd1242, {%r714, %r713};
	xor.b64  	%rd1243, %rd1241, %rd1242;
	shr.u64 	%rd1244, %rd1179, 6;
	xor.b64  	%rd1245, %rd1243, %rd1244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r715,%dummy}, %rd6295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r716}, %rd6295;
	}
	shf.r.wrap.b32 	%r717, %r716, %r715, 8;
	shf.r.wrap.b32 	%r718, %r715, %r716, 8;
	mov.b64 	%rd1246, {%r718, %r717};
	shf.r.wrap.b32 	%r719, %r716, %r715, 1;
	shf.r.wrap.b32 	%r720, %r715, %r716, 1;
	mov.b64 	%rd1247, {%r720, %r719};
	xor.b64  	%rd1248, %rd1247, %rd1246;
	shr.u64 	%rd1249, %rd6295, 7;
	xor.b64  	%rd1250, %rd1248, %rd1249;
	add.s64 	%rd1251, %rd1250, %rd6296;
	add.s64 	%rd1252, %rd1251, %rd994;
	add.s64 	%rd1253, %rd1252, %rd1245;
	add.s64 	%rd1254, %rd1253, %rd1118;
	xor.b64  	%rd1255, %rd1192, %rd1155;
	and.b64  	%rd1256, %rd1229, %rd1255;
	xor.b64  	%rd1257, %rd1256, %rd1155;
	add.s64 	%rd1258, %rd1254, %rd1257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r721,%dummy}, %rd1229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r722}, %rd1229;
	}
	shf.r.wrap.b32 	%r723, %r722, %r721, 14;
	shf.r.wrap.b32 	%r724, %r721, %r722, 14;
	mov.b64 	%rd1259, {%r724, %r723};
	shf.r.wrap.b32 	%r725, %r722, %r721, 18;
	shf.r.wrap.b32 	%r726, %r721, %r722, 18;
	mov.b64 	%rd1260, {%r726, %r725};
	xor.b64  	%rd1261, %rd1259, %rd1260;
	shf.l.wrap.b32 	%r727, %r721, %r722, 23;
	shf.l.wrap.b32 	%r728, %r722, %r721, 23;
	mov.b64 	%rd1262, {%r728, %r727};
	xor.b64  	%rd1263, %rd1261, %rd1262;
	add.s64 	%rd1264, %rd1258, %rd1263;
	add.s64 	%rd1265, %rd1264, -4658551843659510044;
	add.s64 	%rd1266, %rd1265, %rd1129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd1240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd1240;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 28;
	shf.r.wrap.b32 	%r732, %r729, %r730, 28;
	mov.b64 	%rd1267, {%r732, %r731};
	shf.l.wrap.b32 	%r733, %r729, %r730, 30;
	shf.l.wrap.b32 	%r734, %r730, %r729, 30;
	mov.b64 	%rd1268, {%r734, %r733};
	xor.b64  	%rd1269, %rd1267, %rd1268;
	shf.l.wrap.b32 	%r735, %r729, %r730, 25;
	shf.l.wrap.b32 	%r736, %r730, %r729, 25;
	mov.b64 	%rd1270, {%r736, %r735};
	xor.b64  	%rd1271, %rd1269, %rd1270;
	and.b64  	%rd1272, %rd1240, %rd1203;
	or.b64  	%rd1273, %rd1240, %rd1203;
	and.b64  	%rd1274, %rd1273, %rd1166;
	or.b64  	%rd1275, %rd1274, %rd1272;
	add.s64 	%rd1276, %rd1275, %rd1271;
	add.s64 	%rd1277, %rd1276, %rd1265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd1216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd1216;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 19;
	shf.r.wrap.b32 	%r740, %r737, %r738, 19;
	mov.b64 	%rd1278, {%r740, %r739};
	shf.l.wrap.b32 	%r741, %r737, %r738, 3;
	shf.l.wrap.b32 	%r742, %r738, %r737, 3;
	mov.b64 	%rd1279, {%r742, %r741};
	xor.b64  	%rd1280, %rd1278, %rd1279;
	shr.u64 	%rd1281, %rd1216, 6;
	xor.b64  	%rd1282, %rd1280, %rd1281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r743,%dummy}, %rd6294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r744}, %rd6294;
	}
	shf.r.wrap.b32 	%r745, %r744, %r743, 8;
	shf.r.wrap.b32 	%r746, %r743, %r744, 8;
	mov.b64 	%rd1283, {%r746, %r745};
	shf.r.wrap.b32 	%r747, %r744, %r743, 1;
	shf.r.wrap.b32 	%r748, %r743, %r744, 1;
	mov.b64 	%rd1284, {%r748, %r747};
	xor.b64  	%rd1285, %rd1284, %rd1283;
	shr.u64 	%rd1286, %rd6294, 7;
	xor.b64  	%rd1287, %rd1285, %rd1286;
	add.s64 	%rd1288, %rd1287, %rd6295;
	add.s64 	%rd1289, %rd1288, %rd1031;
	add.s64 	%rd1290, %rd1289, %rd1282;
	add.s64 	%rd1291, %rd1290, %rd1155;
	xor.b64  	%rd1292, %rd1229, %rd1192;
	and.b64  	%rd1293, %rd1266, %rd1292;
	xor.b64  	%rd1294, %rd1293, %rd1192;
	add.s64 	%rd1295, %rd1291, %rd1294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd1266;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 14;
	shf.r.wrap.b32 	%r752, %r749, %r750, 14;
	mov.b64 	%rd1296, {%r752, %r751};
	shf.r.wrap.b32 	%r753, %r750, %r749, 18;
	shf.r.wrap.b32 	%r754, %r749, %r750, 18;
	mov.b64 	%rd1297, {%r754, %r753};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	shf.l.wrap.b32 	%r755, %r749, %r750, 23;
	shf.l.wrap.b32 	%r756, %r750, %r749, 23;
	mov.b64 	%rd1299, {%r756, %r755};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	add.s64 	%rd1301, %rd1295, %rd1300;
	add.s64 	%rd1302, %rd1301, -4116276920077217854;
	add.s64 	%rd1303, %rd1302, %rd1166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd1277;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 28;
	shf.r.wrap.b32 	%r760, %r757, %r758, 28;
	mov.b64 	%rd1304, {%r760, %r759};
	shf.l.wrap.b32 	%r761, %r757, %r758, 30;
	shf.l.wrap.b32 	%r762, %r758, %r757, 30;
	mov.b64 	%rd1305, {%r762, %r761};
	xor.b64  	%rd1306, %rd1304, %rd1305;
	shf.l.wrap.b32 	%r763, %r757, %r758, 25;
	shf.l.wrap.b32 	%r764, %r758, %r757, 25;
	mov.b64 	%rd1307, {%r764, %r763};
	xor.b64  	%rd1308, %rd1306, %rd1307;
	and.b64  	%rd1309, %rd1277, %rd1240;
	or.b64  	%rd1310, %rd1277, %rd1240;
	and.b64  	%rd1311, %rd1310, %rd1203;
	or.b64  	%rd1312, %rd1311, %rd1309;
	add.s64 	%rd1313, %rd1312, %rd1308;
	add.s64 	%rd1314, %rd1313, %rd1302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r765,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r766}, %rd1253;
	}
	shf.r.wrap.b32 	%r767, %r766, %r765, 19;
	shf.r.wrap.b32 	%r768, %r765, %r766, 19;
	mov.b64 	%rd1315, {%r768, %r767};
	shf.l.wrap.b32 	%r769, %r765, %r766, 3;
	shf.l.wrap.b32 	%r770, %r766, %r765, 3;
	mov.b64 	%rd1316, {%r770, %r769};
	xor.b64  	%rd1317, %rd1315, %rd1316;
	shr.u64 	%rd1318, %rd1253, 6;
	xor.b64  	%rd1319, %rd1317, %rd1318;
	shf.r.wrap.b32 	%r771, %r401, %r402, 8;
	shf.r.wrap.b32 	%r772, %r402, %r401, 8;
	mov.b64 	%rd1320, {%r772, %r771};
	shf.r.wrap.b32 	%r773, %r401, %r402, 1;
	shf.r.wrap.b32 	%r774, %r402, %r401, 1;
	mov.b64 	%rd1321, {%r774, %r773};
	xor.b64  	%rd1322, %rd1321, %rd1320;
	shr.u64 	%rd1323, %rd6293, 7;
	xor.b64  	%rd1324, %rd1322, %rd1323;
	add.s64 	%rd1325, %rd1324, %rd6294;
	add.s64 	%rd1326, %rd1325, %rd1068;
	add.s64 	%rd1327, %rd1326, %rd1319;
	add.s64 	%rd1328, %rd1327, %rd1192;
	xor.b64  	%rd1329, %rd1266, %rd1229;
	and.b64  	%rd1330, %rd1303, %rd1329;
	xor.b64  	%rd1331, %rd1330, %rd1229;
	add.s64 	%rd1332, %rd1328, %rd1331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r775,%dummy}, %rd1303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r776}, %rd1303;
	}
	shf.r.wrap.b32 	%r777, %r776, %r775, 14;
	shf.r.wrap.b32 	%r778, %r775, %r776, 14;
	mov.b64 	%rd1333, {%r778, %r777};
	shf.r.wrap.b32 	%r779, %r776, %r775, 18;
	shf.r.wrap.b32 	%r780, %r775, %r776, 18;
	mov.b64 	%rd1334, {%r780, %r779};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	shf.l.wrap.b32 	%r781, %r775, %r776, 23;
	shf.l.wrap.b32 	%r782, %r776, %r775, 23;
	mov.b64 	%rd1336, {%r782, %r781};
	xor.b64  	%rd1337, %rd1335, %rd1336;
	add.s64 	%rd1338, %rd1332, %rd1337;
	add.s64 	%rd1339, %rd1338, -3051310485924567259;
	add.s64 	%rd1340, %rd1339, %rd1203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r783,%dummy}, %rd1314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r784}, %rd1314;
	}
	shf.r.wrap.b32 	%r785, %r784, %r783, 28;
	shf.r.wrap.b32 	%r786, %r783, %r784, 28;
	mov.b64 	%rd1341, {%r786, %r785};
	shf.l.wrap.b32 	%r787, %r783, %r784, 30;
	shf.l.wrap.b32 	%r788, %r784, %r783, 30;
	mov.b64 	%rd1342, {%r788, %r787};
	xor.b64  	%rd1343, %rd1341, %rd1342;
	shf.l.wrap.b32 	%r789, %r783, %r784, 25;
	shf.l.wrap.b32 	%r790, %r784, %r783, 25;
	mov.b64 	%rd1344, {%r790, %r789};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	and.b64  	%rd1346, %rd1314, %rd1277;
	or.b64  	%rd1347, %rd1314, %rd1277;
	and.b64  	%rd1348, %rd1347, %rd1240;
	or.b64  	%rd1349, %rd1348, %rd1346;
	add.s64 	%rd1350, %rd1349, %rd1345;
	add.s64 	%rd1351, %rd1350, %rd1339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r791,%dummy}, %rd1290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r792}, %rd1290;
	}
	shf.r.wrap.b32 	%r793, %r792, %r791, 19;
	shf.r.wrap.b32 	%r794, %r791, %r792, 19;
	mov.b64 	%rd1352, {%r794, %r793};
	shf.l.wrap.b32 	%r795, %r791, %r792, 3;
	shf.l.wrap.b32 	%r796, %r792, %r791, 3;
	mov.b64 	%rd1353, {%r796, %r795};
	xor.b64  	%rd1354, %rd1352, %rd1353;
	shr.u64 	%rd1355, %rd1290, 6;
	xor.b64  	%rd1356, %rd1354, %rd1355;
	shf.r.wrap.b32 	%r797, %r429, %r430, 8;
	shf.r.wrap.b32 	%r798, %r430, %r429, 8;
	mov.b64 	%rd1357, {%r798, %r797};
	shf.r.wrap.b32 	%r799, %r429, %r430, 1;
	shf.r.wrap.b32 	%r800, %r430, %r429, 1;
	mov.b64 	%rd1358, {%r800, %r799};
	xor.b64  	%rd1359, %rd1358, %rd1357;
	shr.u64 	%rd1360, %rd6292, 7;
	xor.b64  	%rd1361, %rd1359, %rd1360;
	add.s64 	%rd1362, %rd1361, %rd6293;
	add.s64 	%rd1363, %rd1362, %rd1105;
	add.s64 	%rd1364, %rd1363, %rd1356;
	add.s64 	%rd1365, %rd1364, %rd1229;
	xor.b64  	%rd1366, %rd1303, %rd1266;
	and.b64  	%rd1367, %rd1340, %rd1366;
	xor.b64  	%rd1368, %rd1367, %rd1266;
	add.s64 	%rd1369, %rd1365, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r801,%dummy}, %rd1340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r802}, %rd1340;
	}
	shf.r.wrap.b32 	%r803, %r802, %r801, 14;
	shf.r.wrap.b32 	%r804, %r801, %r802, 14;
	mov.b64 	%rd1370, {%r804, %r803};
	shf.r.wrap.b32 	%r805, %r802, %r801, 18;
	shf.r.wrap.b32 	%r806, %r801, %r802, 18;
	mov.b64 	%rd1371, {%r806, %r805};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	shf.l.wrap.b32 	%r807, %r801, %r802, 23;
	shf.l.wrap.b32 	%r808, %r802, %r801, 23;
	mov.b64 	%rd1373, {%r808, %r807};
	xor.b64  	%rd1374, %rd1372, %rd1373;
	add.s64 	%rd1375, %rd1369, %rd1374;
	add.s64 	%rd1376, %rd1375, 489312712824947311;
	add.s64 	%rd1377, %rd1376, %rd1240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r809,%dummy}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r810}, %rd1351;
	}
	shf.r.wrap.b32 	%r811, %r810, %r809, 28;
	shf.r.wrap.b32 	%r812, %r809, %r810, 28;
	mov.b64 	%rd1378, {%r812, %r811};
	shf.l.wrap.b32 	%r813, %r809, %r810, 30;
	shf.l.wrap.b32 	%r814, %r810, %r809, 30;
	mov.b64 	%rd1379, {%r814, %r813};
	xor.b64  	%rd1380, %rd1378, %rd1379;
	shf.l.wrap.b32 	%r815, %r809, %r810, 25;
	shf.l.wrap.b32 	%r816, %r810, %r809, 25;
	mov.b64 	%rd1381, {%r816, %r815};
	xor.b64  	%rd1382, %rd1380, %rd1381;
	and.b64  	%rd1383, %rd1351, %rd1314;
	or.b64  	%rd1384, %rd1351, %rd1314;
	and.b64  	%rd1385, %rd1384, %rd1277;
	or.b64  	%rd1386, %rd1385, %rd1383;
	add.s64 	%rd1387, %rd1386, %rd1382;
	add.s64 	%rd1388, %rd1387, %rd1376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r817,%dummy}, %rd1327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r818}, %rd1327;
	}
	shf.r.wrap.b32 	%r819, %r818, %r817, 19;
	shf.r.wrap.b32 	%r820, %r817, %r818, 19;
	mov.b64 	%rd1389, {%r820, %r819};
	shf.l.wrap.b32 	%r821, %r817, %r818, 3;
	shf.l.wrap.b32 	%r822, %r818, %r817, 3;
	mov.b64 	%rd1390, {%r822, %r821};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	shr.u64 	%rd1392, %rd1327, 6;
	xor.b64  	%rd1393, %rd1391, %rd1392;
	shf.r.wrap.b32 	%r823, %r458, %r457, 1;
	shf.r.wrap.b32 	%r824, %r457, %r458, 1;
	mov.b64 	%rd1394, {%r824, %r823};
	shf.r.wrap.b32 	%r825, %r458, %r457, 8;
	shf.r.wrap.b32 	%r826, %r457, %r458, 8;
	mov.b64 	%rd1395, {%r826, %r825};
	xor.b64  	%rd1396, %rd1394, %rd1395;
	shr.u64 	%rd1397, %rd846, 7;
	xor.b64  	%rd1398, %rd1396, %rd1397;
	add.s64 	%rd1399, %rd1398, %rd6292;
	add.s64 	%rd1400, %rd1399, %rd1142;
	add.s64 	%rd1401, %rd1400, %rd1393;
	add.s64 	%rd1402, %rd1401, %rd1266;
	xor.b64  	%rd1403, %rd1340, %rd1303;
	and.b64  	%rd1404, %rd1377, %rd1403;
	xor.b64  	%rd1405, %rd1404, %rd1303;
	add.s64 	%rd1406, %rd1402, %rd1405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r827,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r828}, %rd1377;
	}
	shf.r.wrap.b32 	%r829, %r828, %r827, 14;
	shf.r.wrap.b32 	%r830, %r827, %r828, 14;
	mov.b64 	%rd1407, {%r830, %r829};
	shf.r.wrap.b32 	%r831, %r828, %r827, 18;
	shf.r.wrap.b32 	%r832, %r827, %r828, 18;
	mov.b64 	%rd1408, {%r832, %r831};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	shf.l.wrap.b32 	%r833, %r827, %r828, 23;
	shf.l.wrap.b32 	%r834, %r828, %r827, 23;
	mov.b64 	%rd1410, {%r834, %r833};
	xor.b64  	%rd1411, %rd1409, %rd1410;
	add.s64 	%rd1412, %rd1406, %rd1411;
	add.s64 	%rd1413, %rd1412, 1452737877330783856;
	add.s64 	%rd1414, %rd1413, %rd1277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r835,%dummy}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd1388;
	}
	shf.r.wrap.b32 	%r837, %r836, %r835, 28;
	shf.r.wrap.b32 	%r838, %r835, %r836, 28;
	mov.b64 	%rd1415, {%r838, %r837};
	shf.l.wrap.b32 	%r839, %r835, %r836, 30;
	shf.l.wrap.b32 	%r840, %r836, %r835, 30;
	mov.b64 	%rd1416, {%r840, %r839};
	xor.b64  	%rd1417, %rd1415, %rd1416;
	shf.l.wrap.b32 	%r841, %r835, %r836, 25;
	shf.l.wrap.b32 	%r842, %r836, %r835, 25;
	mov.b64 	%rd1418, {%r842, %r841};
	xor.b64  	%rd1419, %rd1417, %rd1418;
	and.b64  	%rd1420, %rd1388, %rd1351;
	or.b64  	%rd1421, %rd1388, %rd1351;
	and.b64  	%rd1422, %rd1421, %rd1314;
	or.b64  	%rd1423, %rd1422, %rd1420;
	add.s64 	%rd1424, %rd1423, %rd1419;
	add.s64 	%rd1425, %rd1424, %rd1413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r843,%dummy}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r844}, %rd1364;
	}
	shf.r.wrap.b32 	%r845, %r844, %r843, 19;
	shf.r.wrap.b32 	%r846, %r843, %r844, 19;
	mov.b64 	%rd1426, {%r846, %r845};
	shf.l.wrap.b32 	%r847, %r843, %r844, 3;
	shf.l.wrap.b32 	%r848, %r844, %r843, 3;
	mov.b64 	%rd1427, {%r848, %r847};
	xor.b64  	%rd1428, %rd1426, %rd1427;
	shr.u64 	%rd1429, %rd1364, 6;
	xor.b64  	%rd1430, %rd1428, %rd1429;
	shf.r.wrap.b32 	%r849, %r486, %r485, 1;
	shf.r.wrap.b32 	%r850, %r485, %r486, 1;
	mov.b64 	%rd1431, {%r850, %r849};
	shf.r.wrap.b32 	%r851, %r486, %r485, 8;
	shf.r.wrap.b32 	%r852, %r485, %r486, 8;
	mov.b64 	%rd1432, {%r852, %r851};
	xor.b64  	%rd1433, %rd1431, %rd1432;
	shr.u64 	%rd1434, %rd883, 7;
	xor.b64  	%rd1435, %rd1433, %rd1434;
	add.s64 	%rd1436, %rd1435, %rd846;
	add.s64 	%rd1437, %rd1436, %rd1179;
	add.s64 	%rd1438, %rd1437, %rd1430;
	add.s64 	%rd1439, %rd1438, %rd1303;
	xor.b64  	%rd1440, %rd1377, %rd1340;
	and.b64  	%rd1441, %rd1414, %rd1440;
	xor.b64  	%rd1442, %rd1441, %rd1340;
	add.s64 	%rd1443, %rd1439, %rd1442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd1414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd1414;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 14;
	shf.r.wrap.b32 	%r856, %r853, %r854, 14;
	mov.b64 	%rd1444, {%r856, %r855};
	shf.r.wrap.b32 	%r857, %r854, %r853, 18;
	shf.r.wrap.b32 	%r858, %r853, %r854, 18;
	mov.b64 	%rd1445, {%r858, %r857};
	xor.b64  	%rd1446, %rd1444, %rd1445;
	shf.l.wrap.b32 	%r859, %r853, %r854, 23;
	shf.l.wrap.b32 	%r860, %r854, %r853, 23;
	mov.b64 	%rd1447, {%r860, %r859};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	add.s64 	%rd1449, %rd1443, %rd1448;
	add.s64 	%rd1450, %rd1449, 2861767655752347644;
	add.s64 	%rd1451, %rd1450, %rd1314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd1425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd1425;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 28;
	shf.r.wrap.b32 	%r864, %r861, %r862, 28;
	mov.b64 	%rd1452, {%r864, %r863};
	shf.l.wrap.b32 	%r865, %r861, %r862, 30;
	shf.l.wrap.b32 	%r866, %r862, %r861, 30;
	mov.b64 	%rd1453, {%r866, %r865};
	xor.b64  	%rd1454, %rd1452, %rd1453;
	shf.l.wrap.b32 	%r867, %r861, %r862, 25;
	shf.l.wrap.b32 	%r868, %r862, %r861, 25;
	mov.b64 	%rd1455, {%r868, %r867};
	xor.b64  	%rd1456, %rd1454, %rd1455;
	and.b64  	%rd1457, %rd1425, %rd1388;
	or.b64  	%rd1458, %rd1425, %rd1388;
	and.b64  	%rd1459, %rd1458, %rd1351;
	or.b64  	%rd1460, %rd1459, %rd1457;
	add.s64 	%rd1461, %rd1460, %rd1456;
	add.s64 	%rd1462, %rd1461, %rd1450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd1401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd1401;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 19;
	shf.r.wrap.b32 	%r872, %r869, %r870, 19;
	mov.b64 	%rd1463, {%r872, %r871};
	shf.l.wrap.b32 	%r873, %r869, %r870, 3;
	shf.l.wrap.b32 	%r874, %r870, %r869, 3;
	mov.b64 	%rd1464, {%r874, %r873};
	xor.b64  	%rd1465, %rd1463, %rd1464;
	shr.u64 	%rd1466, %rd1401, 6;
	xor.b64  	%rd1467, %rd1465, %rd1466;
	shf.r.wrap.b32 	%r875, %r514, %r513, 1;
	shf.r.wrap.b32 	%r876, %r513, %r514, 1;
	mov.b64 	%rd1468, {%r876, %r875};
	shf.r.wrap.b32 	%r877, %r514, %r513, 8;
	shf.r.wrap.b32 	%r878, %r513, %r514, 8;
	mov.b64 	%rd1469, {%r878, %r877};
	xor.b64  	%rd1470, %rd1468, %rd1469;
	shr.u64 	%rd1471, %rd920, 7;
	xor.b64  	%rd1472, %rd1470, %rd1471;
	add.s64 	%rd1473, %rd1472, %rd883;
	add.s64 	%rd1474, %rd1473, %rd1216;
	add.s64 	%rd1475, %rd1474, %rd1467;
	add.s64 	%rd1476, %rd1475, %rd1340;
	xor.b64  	%rd1477, %rd1414, %rd1377;
	and.b64  	%rd1478, %rd1451, %rd1477;
	xor.b64  	%rd1479, %rd1478, %rd1377;
	add.s64 	%rd1480, %rd1476, %rd1479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r879,%dummy}, %rd1451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd1451;
	}
	shf.r.wrap.b32 	%r881, %r880, %r879, 14;
	shf.r.wrap.b32 	%r882, %r879, %r880, 14;
	mov.b64 	%rd1481, {%r882, %r881};
	shf.r.wrap.b32 	%r883, %r880, %r879, 18;
	shf.r.wrap.b32 	%r884, %r879, %r880, 18;
	mov.b64 	%rd1482, {%r884, %r883};
	xor.b64  	%rd1483, %rd1481, %rd1482;
	shf.l.wrap.b32 	%r885, %r879, %r880, 23;
	shf.l.wrap.b32 	%r886, %r880, %r879, 23;
	mov.b64 	%rd1484, {%r886, %r885};
	xor.b64  	%rd1485, %rd1483, %rd1484;
	add.s64 	%rd1486, %rd1480, %rd1485;
	add.s64 	%rd1487, %rd1486, 3322285676063803686;
	add.s64 	%rd1488, %rd1487, %rd1351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd1462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd1462;
	}
	shf.r.wrap.b32 	%r889, %r888, %r887, 28;
	shf.r.wrap.b32 	%r890, %r887, %r888, 28;
	mov.b64 	%rd1489, {%r890, %r889};
	shf.l.wrap.b32 	%r891, %r887, %r888, 30;
	shf.l.wrap.b32 	%r892, %r888, %r887, 30;
	mov.b64 	%rd1490, {%r892, %r891};
	xor.b64  	%rd1491, %rd1489, %rd1490;
	shf.l.wrap.b32 	%r893, %r887, %r888, 25;
	shf.l.wrap.b32 	%r894, %r888, %r887, 25;
	mov.b64 	%rd1492, {%r894, %r893};
	xor.b64  	%rd1493, %rd1491, %rd1492;
	and.b64  	%rd1494, %rd1462, %rd1425;
	or.b64  	%rd1495, %rd1462, %rd1425;
	and.b64  	%rd1496, %rd1495, %rd1388;
	or.b64  	%rd1497, %rd1496, %rd1494;
	add.s64 	%rd1498, %rd1497, %rd1493;
	add.s64 	%rd1499, %rd1498, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r895,%dummy}, %rd1438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd1438;
	}
	shf.r.wrap.b32 	%r897, %r896, %r895, 19;
	shf.r.wrap.b32 	%r898, %r895, %r896, 19;
	mov.b64 	%rd1500, {%r898, %r897};
	shf.l.wrap.b32 	%r899, %r895, %r896, 3;
	shf.l.wrap.b32 	%r900, %r896, %r895, 3;
	mov.b64 	%rd1501, {%r900, %r899};
	xor.b64  	%rd1502, %rd1500, %rd1501;
	shr.u64 	%rd1503, %rd1438, 6;
	xor.b64  	%rd1504, %rd1502, %rd1503;
	shf.r.wrap.b32 	%r901, %r542, %r541, 1;
	shf.r.wrap.b32 	%r902, %r541, %r542, 1;
	mov.b64 	%rd1505, {%r902, %r901};
	shf.r.wrap.b32 	%r903, %r542, %r541, 8;
	shf.r.wrap.b32 	%r904, %r541, %r542, 8;
	mov.b64 	%rd1506, {%r904, %r903};
	xor.b64  	%rd1507, %rd1505, %rd1506;
	shr.u64 	%rd1508, %rd957, 7;
	xor.b64  	%rd1509, %rd1507, %rd1508;
	add.s64 	%rd1510, %rd1509, %rd920;
	add.s64 	%rd1511, %rd1510, %rd1253;
	add.s64 	%rd1512, %rd1511, %rd1504;
	add.s64 	%rd1513, %rd1512, %rd1377;
	xor.b64  	%rd1514, %rd1451, %rd1414;
	and.b64  	%rd1515, %rd1488, %rd1514;
	xor.b64  	%rd1516, %rd1515, %rd1414;
	add.s64 	%rd1517, %rd1513, %rd1516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r905,%dummy}, %rd1488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r906}, %rd1488;
	}
	shf.r.wrap.b32 	%r907, %r906, %r905, 14;
	shf.r.wrap.b32 	%r908, %r905, %r906, 14;
	mov.b64 	%rd1518, {%r908, %r907};
	shf.r.wrap.b32 	%r909, %r906, %r905, 18;
	shf.r.wrap.b32 	%r910, %r905, %r906, 18;
	mov.b64 	%rd1519, {%r910, %r909};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	shf.l.wrap.b32 	%r911, %r905, %r906, 23;
	shf.l.wrap.b32 	%r912, %r906, %r905, 23;
	mov.b64 	%rd1521, {%r912, %r911};
	xor.b64  	%rd1522, %rd1520, %rd1521;
	add.s64 	%rd1523, %rd1517, %rd1522;
	add.s64 	%rd1524, %rd1523, 5560940570517711597;
	add.s64 	%rd1525, %rd1524, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd1499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r914}, %rd1499;
	}
	shf.r.wrap.b32 	%r915, %r914, %r913, 28;
	shf.r.wrap.b32 	%r916, %r913, %r914, 28;
	mov.b64 	%rd1526, {%r916, %r915};
	shf.l.wrap.b32 	%r917, %r913, %r914, 30;
	shf.l.wrap.b32 	%r918, %r914, %r913, 30;
	mov.b64 	%rd1527, {%r918, %r917};
	xor.b64  	%rd1528, %rd1526, %rd1527;
	shf.l.wrap.b32 	%r919, %r913, %r914, 25;
	shf.l.wrap.b32 	%r920, %r914, %r913, 25;
	mov.b64 	%rd1529, {%r920, %r919};
	xor.b64  	%rd1530, %rd1528, %rd1529;
	and.b64  	%rd1531, %rd1499, %rd1462;
	or.b64  	%rd1532, %rd1499, %rd1462;
	and.b64  	%rd1533, %rd1532, %rd1425;
	or.b64  	%rd1534, %rd1533, %rd1531;
	add.s64 	%rd1535, %rd1534, %rd1530;
	add.s64 	%rd1536, %rd1535, %rd1524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r921,%dummy}, %rd1475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r922}, %rd1475;
	}
	shf.r.wrap.b32 	%r923, %r922, %r921, 19;
	shf.r.wrap.b32 	%r924, %r921, %r922, 19;
	mov.b64 	%rd1537, {%r924, %r923};
	shf.l.wrap.b32 	%r925, %r921, %r922, 3;
	shf.l.wrap.b32 	%r926, %r922, %r921, 3;
	mov.b64 	%rd1538, {%r926, %r925};
	xor.b64  	%rd1539, %rd1537, %rd1538;
	shr.u64 	%rd1540, %rd1475, 6;
	xor.b64  	%rd1541, %rd1539, %rd1540;
	shf.r.wrap.b32 	%r927, %r570, %r569, 1;
	shf.r.wrap.b32 	%r928, %r569, %r570, 1;
	mov.b64 	%rd1542, {%r928, %r927};
	shf.r.wrap.b32 	%r929, %r570, %r569, 8;
	shf.r.wrap.b32 	%r930, %r569, %r570, 8;
	mov.b64 	%rd1543, {%r930, %r929};
	xor.b64  	%rd1544, %rd1542, %rd1543;
	shr.u64 	%rd1545, %rd994, 7;
	xor.b64  	%rd1546, %rd1544, %rd1545;
	add.s64 	%rd1547, %rd1546, %rd957;
	add.s64 	%rd1548, %rd1547, %rd1290;
	add.s64 	%rd1549, %rd1548, %rd1541;
	add.s64 	%rd1550, %rd1549, %rd1414;
	xor.b64  	%rd1551, %rd1488, %rd1451;
	and.b64  	%rd1552, %rd1525, %rd1551;
	xor.b64  	%rd1553, %rd1552, %rd1451;
	add.s64 	%rd1554, %rd1550, %rd1553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r931,%dummy}, %rd1525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r932}, %rd1525;
	}
	shf.r.wrap.b32 	%r933, %r932, %r931, 14;
	shf.r.wrap.b32 	%r934, %r931, %r932, 14;
	mov.b64 	%rd1555, {%r934, %r933};
	shf.r.wrap.b32 	%r935, %r932, %r931, 18;
	shf.r.wrap.b32 	%r936, %r931, %r932, 18;
	mov.b64 	%rd1556, {%r936, %r935};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	shf.l.wrap.b32 	%r937, %r931, %r932, 23;
	shf.l.wrap.b32 	%r938, %r932, %r931, 23;
	mov.b64 	%rd1558, {%r938, %r937};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	add.s64 	%rd1560, %rd1554, %rd1559;
	add.s64 	%rd1561, %rd1560, 5996557281743188959;
	add.s64 	%rd1562, %rd1561, %rd1425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r939,%dummy}, %rd1536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r940}, %rd1536;
	}
	shf.r.wrap.b32 	%r941, %r940, %r939, 28;
	shf.r.wrap.b32 	%r942, %r939, %r940, 28;
	mov.b64 	%rd1563, {%r942, %r941};
	shf.l.wrap.b32 	%r943, %r939, %r940, 30;
	shf.l.wrap.b32 	%r944, %r940, %r939, 30;
	mov.b64 	%rd1564, {%r944, %r943};
	xor.b64  	%rd1565, %rd1563, %rd1564;
	shf.l.wrap.b32 	%r945, %r939, %r940, 25;
	shf.l.wrap.b32 	%r946, %r940, %r939, 25;
	mov.b64 	%rd1566, {%r946, %r945};
	xor.b64  	%rd1567, %rd1565, %rd1566;
	and.b64  	%rd1568, %rd1536, %rd1499;
	or.b64  	%rd1569, %rd1536, %rd1499;
	and.b64  	%rd1570, %rd1569, %rd1462;
	or.b64  	%rd1571, %rd1570, %rd1568;
	add.s64 	%rd1572, %rd1571, %rd1567;
	add.s64 	%rd1573, %rd1572, %rd1561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r947,%dummy}, %rd1512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd1512;
	}
	shf.r.wrap.b32 	%r949, %r948, %r947, 19;
	shf.r.wrap.b32 	%r950, %r947, %r948, 19;
	mov.b64 	%rd1574, {%r950, %r949};
	shf.l.wrap.b32 	%r951, %r947, %r948, 3;
	shf.l.wrap.b32 	%r952, %r948, %r947, 3;
	mov.b64 	%rd1575, {%r952, %r951};
	xor.b64  	%rd1576, %rd1574, %rd1575;
	shr.u64 	%rd1577, %rd1512, 6;
	xor.b64  	%rd1578, %rd1576, %rd1577;
	shf.r.wrap.b32 	%r953, %r598, %r597, 1;
	shf.r.wrap.b32 	%r954, %r597, %r598, 1;
	mov.b64 	%rd1579, {%r954, %r953};
	shf.r.wrap.b32 	%r955, %r598, %r597, 8;
	shf.r.wrap.b32 	%r956, %r597, %r598, 8;
	mov.b64 	%rd1580, {%r956, %r955};
	xor.b64  	%rd1581, %rd1579, %rd1580;
	shr.u64 	%rd1582, %rd1031, 7;
	xor.b64  	%rd1583, %rd1581, %rd1582;
	add.s64 	%rd1584, %rd1583, %rd994;
	add.s64 	%rd1585, %rd1584, %rd1327;
	add.s64 	%rd1586, %rd1585, %rd1578;
	add.s64 	%rd1587, %rd1586, %rd1451;
	xor.b64  	%rd1588, %rd1525, %rd1488;
	and.b64  	%rd1589, %rd1562, %rd1588;
	xor.b64  	%rd1590, %rd1589, %rd1488;
	add.s64 	%rd1591, %rd1587, %rd1590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd1562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd1562;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 14;
	shf.r.wrap.b32 	%r960, %r957, %r958, 14;
	mov.b64 	%rd1592, {%r960, %r959};
	shf.r.wrap.b32 	%r961, %r958, %r957, 18;
	shf.r.wrap.b32 	%r962, %r957, %r958, 18;
	mov.b64 	%rd1593, {%r962, %r961};
	xor.b64  	%rd1594, %rd1592, %rd1593;
	shf.l.wrap.b32 	%r963, %r957, %r958, 23;
	shf.l.wrap.b32 	%r964, %r958, %r957, 23;
	mov.b64 	%rd1595, {%r964, %r963};
	xor.b64  	%rd1596, %rd1594, %rd1595;
	add.s64 	%rd1597, %rd1591, %rd1596;
	add.s64 	%rd1598, %rd1597, 7280758554555802590;
	add.s64 	%rd1599, %rd1598, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd1573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd1573;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 28;
	shf.r.wrap.b32 	%r968, %r965, %r966, 28;
	mov.b64 	%rd1600, {%r968, %r967};
	shf.l.wrap.b32 	%r969, %r965, %r966, 30;
	shf.l.wrap.b32 	%r970, %r966, %r965, 30;
	mov.b64 	%rd1601, {%r970, %r969};
	xor.b64  	%rd1602, %rd1600, %rd1601;
	shf.l.wrap.b32 	%r971, %r965, %r966, 25;
	shf.l.wrap.b32 	%r972, %r966, %r965, 25;
	mov.b64 	%rd1603, {%r972, %r971};
	xor.b64  	%rd1604, %rd1602, %rd1603;
	and.b64  	%rd1605, %rd1573, %rd1536;
	or.b64  	%rd1606, %rd1573, %rd1536;
	and.b64  	%rd1607, %rd1606, %rd1499;
	or.b64  	%rd1608, %rd1607, %rd1605;
	add.s64 	%rd1609, %rd1608, %rd1604;
	add.s64 	%rd1610, %rd1609, %rd1598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r973,%dummy}, %rd1549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r974}, %rd1549;
	}
	shf.r.wrap.b32 	%r975, %r974, %r973, 19;
	shf.r.wrap.b32 	%r976, %r973, %r974, 19;
	mov.b64 	%rd1611, {%r976, %r975};
	shf.l.wrap.b32 	%r977, %r973, %r974, 3;
	shf.l.wrap.b32 	%r978, %r974, %r973, 3;
	mov.b64 	%rd1612, {%r978, %r977};
	xor.b64  	%rd1613, %rd1611, %rd1612;
	shr.u64 	%rd1614, %rd1549, 6;
	xor.b64  	%rd1615, %rd1613, %rd1614;
	shf.r.wrap.b32 	%r979, %r626, %r625, 1;
	shf.r.wrap.b32 	%r980, %r625, %r626, 1;
	mov.b64 	%rd1616, {%r980, %r979};
	shf.r.wrap.b32 	%r981, %r626, %r625, 8;
	shf.r.wrap.b32 	%r982, %r625, %r626, 8;
	mov.b64 	%rd1617, {%r982, %r981};
	xor.b64  	%rd1618, %rd1616, %rd1617;
	shr.u64 	%rd1619, %rd1068, 7;
	xor.b64  	%rd1620, %rd1618, %rd1619;
	add.s64 	%rd1621, %rd1620, %rd1031;
	add.s64 	%rd1622, %rd1621, %rd1364;
	add.s64 	%rd1623, %rd1622, %rd1615;
	add.s64 	%rd1624, %rd1623, %rd1488;
	xor.b64  	%rd1625, %rd1562, %rd1525;
	and.b64  	%rd1626, %rd1599, %rd1625;
	xor.b64  	%rd1627, %rd1626, %rd1525;
	add.s64 	%rd1628, %rd1624, %rd1627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r983,%dummy}, %rd1599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r984}, %rd1599;
	}
	shf.r.wrap.b32 	%r985, %r984, %r983, 14;
	shf.r.wrap.b32 	%r986, %r983, %r984, 14;
	mov.b64 	%rd1629, {%r986, %r985};
	shf.r.wrap.b32 	%r987, %r984, %r983, 18;
	shf.r.wrap.b32 	%r988, %r983, %r984, 18;
	mov.b64 	%rd1630, {%r988, %r987};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	shf.l.wrap.b32 	%r989, %r983, %r984, 23;
	shf.l.wrap.b32 	%r990, %r984, %r983, 23;
	mov.b64 	%rd1632, {%r990, %r989};
	xor.b64  	%rd1633, %rd1631, %rd1632;
	add.s64 	%rd1634, %rd1628, %rd1633;
	add.s64 	%rd1635, %rd1634, 8532644243296465576;
	add.s64 	%rd1636, %rd1635, %rd1499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd1610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd1610;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 28;
	shf.r.wrap.b32 	%r994, %r991, %r992, 28;
	mov.b64 	%rd1637, {%r994, %r993};
	shf.l.wrap.b32 	%r995, %r991, %r992, 30;
	shf.l.wrap.b32 	%r996, %r992, %r991, 30;
	mov.b64 	%rd1638, {%r996, %r995};
	xor.b64  	%rd1639, %rd1637, %rd1638;
	shf.l.wrap.b32 	%r997, %r991, %r992, 25;
	shf.l.wrap.b32 	%r998, %r992, %r991, 25;
	mov.b64 	%rd1640, {%r998, %r997};
	xor.b64  	%rd1641, %rd1639, %rd1640;
	and.b64  	%rd1642, %rd1610, %rd1573;
	or.b64  	%rd1643, %rd1610, %rd1573;
	and.b64  	%rd1644, %rd1643, %rd1536;
	or.b64  	%rd1645, %rd1644, %rd1642;
	add.s64 	%rd1646, %rd1645, %rd1641;
	add.s64 	%rd1647, %rd1646, %rd1635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd1586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd1586;
	}
	shf.r.wrap.b32 	%r1001, %r1000, %r999, 19;
	shf.r.wrap.b32 	%r1002, %r999, %r1000, 19;
	mov.b64 	%rd1648, {%r1002, %r1001};
	shf.l.wrap.b32 	%r1003, %r999, %r1000, 3;
	shf.l.wrap.b32 	%r1004, %r1000, %r999, 3;
	mov.b64 	%rd1649, {%r1004, %r1003};
	xor.b64  	%rd1650, %rd1648, %rd1649;
	shr.u64 	%rd1651, %rd1586, 6;
	xor.b64  	%rd1652, %rd1650, %rd1651;
	shf.r.wrap.b32 	%r1005, %r654, %r653, 1;
	shf.r.wrap.b32 	%r1006, %r653, %r654, 1;
	mov.b64 	%rd1653, {%r1006, %r1005};
	shf.r.wrap.b32 	%r1007, %r654, %r653, 8;
	shf.r.wrap.b32 	%r1008, %r653, %r654, 8;
	mov.b64 	%rd1654, {%r1008, %r1007};
	xor.b64  	%rd1655, %rd1653, %rd1654;
	shr.u64 	%rd1656, %rd1105, 7;
	xor.b64  	%rd1657, %rd1655, %rd1656;
	add.s64 	%rd1658, %rd1657, %rd1068;
	add.s64 	%rd1659, %rd1658, %rd1401;
	add.s64 	%rd1660, %rd1659, %rd1652;
	add.s64 	%rd1661, %rd1660, %rd1525;
	xor.b64  	%rd1662, %rd1599, %rd1562;
	and.b64  	%rd1663, %rd1636, %rd1662;
	xor.b64  	%rd1664, %rd1663, %rd1562;
	add.s64 	%rd1665, %rd1661, %rd1664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1009,%dummy}, %rd1636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1010}, %rd1636;
	}
	shf.r.wrap.b32 	%r1011, %r1010, %r1009, 14;
	shf.r.wrap.b32 	%r1012, %r1009, %r1010, 14;
	mov.b64 	%rd1666, {%r1012, %r1011};
	shf.r.wrap.b32 	%r1013, %r1010, %r1009, 18;
	shf.r.wrap.b32 	%r1014, %r1009, %r1010, 18;
	mov.b64 	%rd1667, {%r1014, %r1013};
	xor.b64  	%rd1668, %rd1666, %rd1667;
	shf.l.wrap.b32 	%r1015, %r1009, %r1010, 23;
	shf.l.wrap.b32 	%r1016, %r1010, %r1009, 23;
	mov.b64 	%rd1669, {%r1016, %r1015};
	xor.b64  	%rd1670, %rd1668, %rd1669;
	add.s64 	%rd1671, %rd1665, %rd1670;
	add.s64 	%rd1672, %rd1671, -9096487096722542874;
	add.s64 	%rd1673, %rd1672, %rd1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1017,%dummy}, %rd1647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1018}, %rd1647;
	}
	shf.r.wrap.b32 	%r1019, %r1018, %r1017, 28;
	shf.r.wrap.b32 	%r1020, %r1017, %r1018, 28;
	mov.b64 	%rd1674, {%r1020, %r1019};
	shf.l.wrap.b32 	%r1021, %r1017, %r1018, 30;
	shf.l.wrap.b32 	%r1022, %r1018, %r1017, 30;
	mov.b64 	%rd1675, {%r1022, %r1021};
	xor.b64  	%rd1676, %rd1674, %rd1675;
	shf.l.wrap.b32 	%r1023, %r1017, %r1018, 25;
	shf.l.wrap.b32 	%r1024, %r1018, %r1017, 25;
	mov.b64 	%rd1677, {%r1024, %r1023};
	xor.b64  	%rd1678, %rd1676, %rd1677;
	and.b64  	%rd1679, %rd1647, %rd1610;
	or.b64  	%rd1680, %rd1647, %rd1610;
	and.b64  	%rd1681, %rd1680, %rd1573;
	or.b64  	%rd1682, %rd1681, %rd1679;
	add.s64 	%rd1683, %rd1682, %rd1678;
	add.s64 	%rd1684, %rd1683, %rd1672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1026}, %rd1623;
	}
	shf.r.wrap.b32 	%r1027, %r1026, %r1025, 19;
	shf.r.wrap.b32 	%r1028, %r1025, %r1026, 19;
	mov.b64 	%rd1685, {%r1028, %r1027};
	shf.l.wrap.b32 	%r1029, %r1025, %r1026, 3;
	shf.l.wrap.b32 	%r1030, %r1026, %r1025, 3;
	mov.b64 	%rd1686, {%r1030, %r1029};
	xor.b64  	%rd1687, %rd1685, %rd1686;
	shr.u64 	%rd1688, %rd1623, 6;
	xor.b64  	%rd1689, %rd1687, %rd1688;
	shf.r.wrap.b32 	%r1031, %r682, %r681, 1;
	shf.r.wrap.b32 	%r1032, %r681, %r682, 1;
	mov.b64 	%rd1690, {%r1032, %r1031};
	shf.r.wrap.b32 	%r1033, %r682, %r681, 8;
	shf.r.wrap.b32 	%r1034, %r681, %r682, 8;
	mov.b64 	%rd1691, {%r1034, %r1033};
	xor.b64  	%rd1692, %rd1690, %rd1691;
	shr.u64 	%rd1693, %rd1142, 7;
	xor.b64  	%rd1694, %rd1692, %rd1693;
	add.s64 	%rd1695, %rd1694, %rd1105;
	add.s64 	%rd1696, %rd1695, %rd1438;
	add.s64 	%rd1697, %rd1696, %rd1689;
	add.s64 	%rd1698, %rd1697, %rd1562;
	xor.b64  	%rd1699, %rd1636, %rd1599;
	and.b64  	%rd1700, %rd1673, %rd1699;
	xor.b64  	%rd1701, %rd1700, %rd1599;
	add.s64 	%rd1702, %rd1698, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1035,%dummy}, %rd1673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1036}, %rd1673;
	}
	shf.r.wrap.b32 	%r1037, %r1036, %r1035, 14;
	shf.r.wrap.b32 	%r1038, %r1035, %r1036, 14;
	mov.b64 	%rd1703, {%r1038, %r1037};
	shf.r.wrap.b32 	%r1039, %r1036, %r1035, 18;
	shf.r.wrap.b32 	%r1040, %r1035, %r1036, 18;
	mov.b64 	%rd1704, {%r1040, %r1039};
	xor.b64  	%rd1705, %rd1703, %rd1704;
	shf.l.wrap.b32 	%r1041, %r1035, %r1036, 23;
	shf.l.wrap.b32 	%r1042, %r1036, %r1035, 23;
	mov.b64 	%rd1706, {%r1042, %r1041};
	xor.b64  	%rd1707, %rd1705, %rd1706;
	add.s64 	%rd1708, %rd1702, %rd1707;
	add.s64 	%rd1709, %rd1708, -7894198246740708037;
	add.s64 	%rd1710, %rd1709, %rd1573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1043,%dummy}, %rd1684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1044}, %rd1684;
	}
	shf.r.wrap.b32 	%r1045, %r1044, %r1043, 28;
	shf.r.wrap.b32 	%r1046, %r1043, %r1044, 28;
	mov.b64 	%rd1711, {%r1046, %r1045};
	shf.l.wrap.b32 	%r1047, %r1043, %r1044, 30;
	shf.l.wrap.b32 	%r1048, %r1044, %r1043, 30;
	mov.b64 	%rd1712, {%r1048, %r1047};
	xor.b64  	%rd1713, %rd1711, %rd1712;
	shf.l.wrap.b32 	%r1049, %r1043, %r1044, 25;
	shf.l.wrap.b32 	%r1050, %r1044, %r1043, 25;
	mov.b64 	%rd1714, {%r1050, %r1049};
	xor.b64  	%rd1715, %rd1713, %rd1714;
	and.b64  	%rd1716, %rd1684, %rd1647;
	or.b64  	%rd1717, %rd1684, %rd1647;
	and.b64  	%rd1718, %rd1717, %rd1610;
	or.b64  	%rd1719, %rd1718, %rd1716;
	add.s64 	%rd1720, %rd1719, %rd1715;
	add.s64 	%rd1721, %rd1720, %rd1709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1051,%dummy}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1052}, %rd1660;
	}
	shf.r.wrap.b32 	%r1053, %r1052, %r1051, 19;
	shf.r.wrap.b32 	%r1054, %r1051, %r1052, 19;
	mov.b64 	%rd1722, {%r1054, %r1053};
	shf.l.wrap.b32 	%r1055, %r1051, %r1052, 3;
	shf.l.wrap.b32 	%r1056, %r1052, %r1051, 3;
	mov.b64 	%rd1723, {%r1056, %r1055};
	xor.b64  	%rd1724, %rd1722, %rd1723;
	shr.u64 	%rd1725, %rd1660, 6;
	xor.b64  	%rd1726, %rd1724, %rd1725;
	shf.r.wrap.b32 	%r1057, %r710, %r709, 1;
	shf.r.wrap.b32 	%r1058, %r709, %r710, 1;
	mov.b64 	%rd1727, {%r1058, %r1057};
	shf.r.wrap.b32 	%r1059, %r710, %r709, 8;
	shf.r.wrap.b32 	%r1060, %r709, %r710, 8;
	mov.b64 	%rd1728, {%r1060, %r1059};
	xor.b64  	%rd1729, %rd1727, %rd1728;
	shr.u64 	%rd1730, %rd1179, 7;
	xor.b64  	%rd1731, %rd1729, %rd1730;
	add.s64 	%rd1732, %rd1731, %rd1142;
	add.s64 	%rd1733, %rd1732, %rd1475;
	add.s64 	%rd1734, %rd1733, %rd1726;
	add.s64 	%rd1735, %rd1734, %rd1599;
	xor.b64  	%rd1736, %rd1673, %rd1636;
	and.b64  	%rd1737, %rd1710, %rd1736;
	xor.b64  	%rd1738, %rd1737, %rd1636;
	add.s64 	%rd1739, %rd1735, %rd1738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1061,%dummy}, %rd1710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1062}, %rd1710;
	}
	shf.r.wrap.b32 	%r1063, %r1062, %r1061, 14;
	shf.r.wrap.b32 	%r1064, %r1061, %r1062, 14;
	mov.b64 	%rd1740, {%r1064, %r1063};
	shf.r.wrap.b32 	%r1065, %r1062, %r1061, 18;
	shf.r.wrap.b32 	%r1066, %r1061, %r1062, 18;
	mov.b64 	%rd1741, {%r1066, %r1065};
	xor.b64  	%rd1742, %rd1740, %rd1741;
	shf.l.wrap.b32 	%r1067, %r1061, %r1062, 23;
	shf.l.wrap.b32 	%r1068, %r1062, %r1061, 23;
	mov.b64 	%rd1743, {%r1068, %r1067};
	xor.b64  	%rd1744, %rd1742, %rd1743;
	add.s64 	%rd1745, %rd1739, %rd1744;
	add.s64 	%rd1746, %rd1745, -6719396339535248540;
	add.s64 	%rd1747, %rd1746, %rd1610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd1721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd1721;
	}
	shf.r.wrap.b32 	%r1071, %r1070, %r1069, 28;
	shf.r.wrap.b32 	%r1072, %r1069, %r1070, 28;
	mov.b64 	%rd1748, {%r1072, %r1071};
	shf.l.wrap.b32 	%r1073, %r1069, %r1070, 30;
	shf.l.wrap.b32 	%r1074, %r1070, %r1069, 30;
	mov.b64 	%rd1749, {%r1074, %r1073};
	xor.b64  	%rd1750, %rd1748, %rd1749;
	shf.l.wrap.b32 	%r1075, %r1069, %r1070, 25;
	shf.l.wrap.b32 	%r1076, %r1070, %r1069, 25;
	mov.b64 	%rd1751, {%r1076, %r1075};
	xor.b64  	%rd1752, %rd1750, %rd1751;
	and.b64  	%rd1753, %rd1721, %rd1684;
	or.b64  	%rd1754, %rd1721, %rd1684;
	and.b64  	%rd1755, %rd1754, %rd1647;
	or.b64  	%rd1756, %rd1755, %rd1753;
	add.s64 	%rd1757, %rd1756, %rd1752;
	add.s64 	%rd1758, %rd1757, %rd1746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd1697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1078}, %rd1697;
	}
	shf.r.wrap.b32 	%r1079, %r1078, %r1077, 19;
	shf.r.wrap.b32 	%r1080, %r1077, %r1078, 19;
	mov.b64 	%rd1759, {%r1080, %r1079};
	shf.l.wrap.b32 	%r1081, %r1077, %r1078, 3;
	shf.l.wrap.b32 	%r1082, %r1078, %r1077, 3;
	mov.b64 	%rd1760, {%r1082, %r1081};
	xor.b64  	%rd1761, %rd1759, %rd1760;
	shr.u64 	%rd1762, %rd1697, 6;
	xor.b64  	%rd1763, %rd1761, %rd1762;
	shf.r.wrap.b32 	%r1083, %r738, %r737, 1;
	shf.r.wrap.b32 	%r1084, %r737, %r738, 1;
	mov.b64 	%rd1764, {%r1084, %r1083};
	shf.r.wrap.b32 	%r1085, %r738, %r737, 8;
	shf.r.wrap.b32 	%r1086, %r737, %r738, 8;
	mov.b64 	%rd1765, {%r1086, %r1085};
	xor.b64  	%rd1766, %rd1764, %rd1765;
	shr.u64 	%rd1767, %rd1216, 7;
	xor.b64  	%rd1768, %rd1766, %rd1767;
	add.s64 	%rd1769, %rd1768, %rd1179;
	add.s64 	%rd1770, %rd1769, %rd1512;
	add.s64 	%rd1771, %rd1770, %rd1763;
	add.s64 	%rd1772, %rd1771, %rd1636;
	xor.b64  	%rd1773, %rd1710, %rd1673;
	and.b64  	%rd1774, %rd1747, %rd1773;
	xor.b64  	%rd1775, %rd1774, %rd1673;
	add.s64 	%rd1776, %rd1772, %rd1775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1087,%dummy}, %rd1747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1088}, %rd1747;
	}
	shf.r.wrap.b32 	%r1089, %r1088, %r1087, 14;
	shf.r.wrap.b32 	%r1090, %r1087, %r1088, 14;
	mov.b64 	%rd1777, {%r1090, %r1089};
	shf.r.wrap.b32 	%r1091, %r1088, %r1087, 18;
	shf.r.wrap.b32 	%r1092, %r1087, %r1088, 18;
	mov.b64 	%rd1778, {%r1092, %r1091};
	xor.b64  	%rd1779, %rd1777, %rd1778;
	shf.l.wrap.b32 	%r1093, %r1087, %r1088, 23;
	shf.l.wrap.b32 	%r1094, %r1088, %r1087, 23;
	mov.b64 	%rd1780, {%r1094, %r1093};
	xor.b64  	%rd1781, %rd1779, %rd1780;
	add.s64 	%rd1782, %rd1776, %rd1781;
	add.s64 	%rd1783, %rd1782, -6333637450476146687;
	add.s64 	%rd1784, %rd1783, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd1758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd1758;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 28;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 28;
	mov.b64 	%rd1785, {%r1098, %r1097};
	shf.l.wrap.b32 	%r1099, %r1095, %r1096, 30;
	shf.l.wrap.b32 	%r1100, %r1096, %r1095, 30;
	mov.b64 	%rd1786, {%r1100, %r1099};
	xor.b64  	%rd1787, %rd1785, %rd1786;
	shf.l.wrap.b32 	%r1101, %r1095, %r1096, 25;
	shf.l.wrap.b32 	%r1102, %r1096, %r1095, 25;
	mov.b64 	%rd1788, {%r1102, %r1101};
	xor.b64  	%rd1789, %rd1787, %rd1788;
	and.b64  	%rd1790, %rd1758, %rd1721;
	or.b64  	%rd1791, %rd1758, %rd1721;
	and.b64  	%rd1792, %rd1791, %rd1684;
	or.b64  	%rd1793, %rd1792, %rd1790;
	add.s64 	%rd1794, %rd1793, %rd1789;
	add.s64 	%rd1795, %rd1794, %rd1783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1103,%dummy}, %rd1734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1104}, %rd1734;
	}
	shf.r.wrap.b32 	%r1105, %r1104, %r1103, 19;
	shf.r.wrap.b32 	%r1106, %r1103, %r1104, 19;
	mov.b64 	%rd1796, {%r1106, %r1105};
	shf.l.wrap.b32 	%r1107, %r1103, %r1104, 3;
	shf.l.wrap.b32 	%r1108, %r1104, %r1103, 3;
	mov.b64 	%rd1797, {%r1108, %r1107};
	xor.b64  	%rd1798, %rd1796, %rd1797;
	shr.u64 	%rd1799, %rd1734, 6;
	xor.b64  	%rd1800, %rd1798, %rd1799;
	shf.r.wrap.b32 	%r1109, %r766, %r765, 1;
	shf.r.wrap.b32 	%r1110, %r765, %r766, 1;
	mov.b64 	%rd1801, {%r1110, %r1109};
	shf.r.wrap.b32 	%r1111, %r766, %r765, 8;
	shf.r.wrap.b32 	%r1112, %r765, %r766, 8;
	mov.b64 	%rd1802, {%r1112, %r1111};
	xor.b64  	%rd1803, %rd1801, %rd1802;
	shr.u64 	%rd1804, %rd1253, 7;
	xor.b64  	%rd1805, %rd1803, %rd1804;
	add.s64 	%rd1806, %rd1805, %rd1216;
	add.s64 	%rd1807, %rd1806, %rd1549;
	add.s64 	%rd1808, %rd1807, %rd1800;
	add.s64 	%rd1809, %rd1808, %rd1673;
	xor.b64  	%rd1810, %rd1747, %rd1710;
	and.b64  	%rd1811, %rd1784, %rd1810;
	xor.b64  	%rd1812, %rd1811, %rd1710;
	add.s64 	%rd1813, %rd1809, %rd1812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1113,%dummy}, %rd1784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1114}, %rd1784;
	}
	shf.r.wrap.b32 	%r1115, %r1114, %r1113, 14;
	shf.r.wrap.b32 	%r1116, %r1113, %r1114, 14;
	mov.b64 	%rd1814, {%r1116, %r1115};
	shf.r.wrap.b32 	%r1117, %r1114, %r1113, 18;
	shf.r.wrap.b32 	%r1118, %r1113, %r1114, 18;
	mov.b64 	%rd1815, {%r1118, %r1117};
	xor.b64  	%rd1816, %rd1814, %rd1815;
	shf.l.wrap.b32 	%r1119, %r1113, %r1114, 23;
	shf.l.wrap.b32 	%r1120, %r1114, %r1113, 23;
	mov.b64 	%rd1817, {%r1120, %r1119};
	xor.b64  	%rd1818, %rd1816, %rd1817;
	add.s64 	%rd1819, %rd1813, %rd1818;
	add.s64 	%rd1820, %rd1819, -4446306890439682159;
	add.s64 	%rd1821, %rd1820, %rd1684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1121,%dummy}, %rd1795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1122}, %rd1795;
	}
	shf.r.wrap.b32 	%r1123, %r1122, %r1121, 28;
	shf.r.wrap.b32 	%r1124, %r1121, %r1122, 28;
	mov.b64 	%rd1822, {%r1124, %r1123};
	shf.l.wrap.b32 	%r1125, %r1121, %r1122, 30;
	shf.l.wrap.b32 	%r1126, %r1122, %r1121, 30;
	mov.b64 	%rd1823, {%r1126, %r1125};
	xor.b64  	%rd1824, %rd1822, %rd1823;
	shf.l.wrap.b32 	%r1127, %r1121, %r1122, 25;
	shf.l.wrap.b32 	%r1128, %r1122, %r1121, 25;
	mov.b64 	%rd1825, {%r1128, %r1127};
	xor.b64  	%rd1826, %rd1824, %rd1825;
	and.b64  	%rd1827, %rd1795, %rd1758;
	or.b64  	%rd1828, %rd1795, %rd1758;
	and.b64  	%rd1829, %rd1828, %rd1721;
	or.b64  	%rd1830, %rd1829, %rd1827;
	add.s64 	%rd1831, %rd1830, %rd1826;
	add.s64 	%rd1832, %rd1831, %rd1820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1129,%dummy}, %rd1771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1130}, %rd1771;
	}
	shf.r.wrap.b32 	%r1131, %r1130, %r1129, 19;
	shf.r.wrap.b32 	%r1132, %r1129, %r1130, 19;
	mov.b64 	%rd1833, {%r1132, %r1131};
	shf.l.wrap.b32 	%r1133, %r1129, %r1130, 3;
	shf.l.wrap.b32 	%r1134, %r1130, %r1129, 3;
	mov.b64 	%rd1834, {%r1134, %r1133};
	xor.b64  	%rd1835, %rd1833, %rd1834;
	shr.u64 	%rd1836, %rd1771, 6;
	xor.b64  	%rd1837, %rd1835, %rd1836;
	shf.r.wrap.b32 	%r1135, %r792, %r791, 1;
	shf.r.wrap.b32 	%r1136, %r791, %r792, 1;
	mov.b64 	%rd1838, {%r1136, %r1135};
	shf.r.wrap.b32 	%r1137, %r792, %r791, 8;
	shf.r.wrap.b32 	%r1138, %r791, %r792, 8;
	mov.b64 	%rd1839, {%r1138, %r1137};
	xor.b64  	%rd1840, %rd1838, %rd1839;
	shr.u64 	%rd1841, %rd1290, 7;
	xor.b64  	%rd1842, %rd1840, %rd1841;
	add.s64 	%rd1843, %rd1842, %rd1253;
	add.s64 	%rd1844, %rd1843, %rd1586;
	add.s64 	%rd1845, %rd1844, %rd1837;
	add.s64 	%rd1846, %rd1845, %rd1710;
	xor.b64  	%rd1847, %rd1784, %rd1747;
	and.b64  	%rd1848, %rd1821, %rd1847;
	xor.b64  	%rd1849, %rd1848, %rd1747;
	add.s64 	%rd1850, %rd1846, %rd1849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1139,%dummy}, %rd1821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1140}, %rd1821;
	}
	shf.r.wrap.b32 	%r1141, %r1140, %r1139, 14;
	shf.r.wrap.b32 	%r1142, %r1139, %r1140, 14;
	mov.b64 	%rd1851, {%r1142, %r1141};
	shf.r.wrap.b32 	%r1143, %r1140, %r1139, 18;
	shf.r.wrap.b32 	%r1144, %r1139, %r1140, 18;
	mov.b64 	%rd1852, {%r1144, %r1143};
	xor.b64  	%rd1853, %rd1851, %rd1852;
	shf.l.wrap.b32 	%r1145, %r1139, %r1140, 23;
	shf.l.wrap.b32 	%r1146, %r1140, %r1139, 23;
	mov.b64 	%rd1854, {%r1146, %r1145};
	xor.b64  	%rd1855, %rd1853, %rd1854;
	add.s64 	%rd1856, %rd1850, %rd1855;
	add.s64 	%rd1857, %rd1856, -4076793802049405392;
	add.s64 	%rd1858, %rd1857, %rd1721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1147,%dummy}, %rd1832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1148}, %rd1832;
	}
	shf.r.wrap.b32 	%r1149, %r1148, %r1147, 28;
	shf.r.wrap.b32 	%r1150, %r1147, %r1148, 28;
	mov.b64 	%rd1859, {%r1150, %r1149};
	shf.l.wrap.b32 	%r1151, %r1147, %r1148, 30;
	shf.l.wrap.b32 	%r1152, %r1148, %r1147, 30;
	mov.b64 	%rd1860, {%r1152, %r1151};
	xor.b64  	%rd1861, %rd1859, %rd1860;
	shf.l.wrap.b32 	%r1153, %r1147, %r1148, 25;
	shf.l.wrap.b32 	%r1154, %r1148, %r1147, 25;
	mov.b64 	%rd1862, {%r1154, %r1153};
	xor.b64  	%rd1863, %rd1861, %rd1862;
	and.b64  	%rd1864, %rd1832, %rd1795;
	or.b64  	%rd1865, %rd1832, %rd1795;
	and.b64  	%rd1866, %rd1865, %rd1758;
	or.b64  	%rd1867, %rd1866, %rd1864;
	add.s64 	%rd1868, %rd1867, %rd1863;
	add.s64 	%rd1869, %rd1868, %rd1857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1155,%dummy}, %rd1808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1156}, %rd1808;
	}
	shf.r.wrap.b32 	%r1157, %r1156, %r1155, 19;
	shf.r.wrap.b32 	%r1158, %r1155, %r1156, 19;
	mov.b64 	%rd1870, {%r1158, %r1157};
	shf.l.wrap.b32 	%r1159, %r1155, %r1156, 3;
	shf.l.wrap.b32 	%r1160, %r1156, %r1155, 3;
	mov.b64 	%rd1871, {%r1160, %r1159};
	xor.b64  	%rd1872, %rd1870, %rd1871;
	shr.u64 	%rd1873, %rd1808, 6;
	xor.b64  	%rd1874, %rd1872, %rd1873;
	shf.r.wrap.b32 	%r1161, %r818, %r817, 1;
	shf.r.wrap.b32 	%r1162, %r817, %r818, 1;
	mov.b64 	%rd1875, {%r1162, %r1161};
	shf.r.wrap.b32 	%r1163, %r818, %r817, 8;
	shf.r.wrap.b32 	%r1164, %r817, %r818, 8;
	mov.b64 	%rd1876, {%r1164, %r1163};
	xor.b64  	%rd1877, %rd1875, %rd1876;
	shr.u64 	%rd1878, %rd1327, 7;
	xor.b64  	%rd1879, %rd1877, %rd1878;
	add.s64 	%rd1880, %rd1879, %rd1290;
	add.s64 	%rd1881, %rd1880, %rd1623;
	add.s64 	%rd1882, %rd1881, %rd1874;
	add.s64 	%rd1883, %rd1882, %rd1747;
	xor.b64  	%rd1884, %rd1821, %rd1784;
	and.b64  	%rd1885, %rd1858, %rd1884;
	xor.b64  	%rd1886, %rd1885, %rd1784;
	add.s64 	%rd1887, %rd1883, %rd1886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd1858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd1858;
	}
	shf.r.wrap.b32 	%r1167, %r1166, %r1165, 14;
	shf.r.wrap.b32 	%r1168, %r1165, %r1166, 14;
	mov.b64 	%rd1888, {%r1168, %r1167};
	shf.r.wrap.b32 	%r1169, %r1166, %r1165, 18;
	shf.r.wrap.b32 	%r1170, %r1165, %r1166, 18;
	mov.b64 	%rd1889, {%r1170, %r1169};
	xor.b64  	%rd1890, %rd1888, %rd1889;
	shf.l.wrap.b32 	%r1171, %r1165, %r1166, 23;
	shf.l.wrap.b32 	%r1172, %r1166, %r1165, 23;
	mov.b64 	%rd1891, {%r1172, %r1171};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	add.s64 	%rd1893, %rd1887, %rd1892;
	add.s64 	%rd1894, %rd1893, -3345356375505022440;
	add.s64 	%rd1895, %rd1894, %rd1758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1869;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 28;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 28;
	mov.b64 	%rd1896, {%r1176, %r1175};
	shf.l.wrap.b32 	%r1177, %r1173, %r1174, 30;
	shf.l.wrap.b32 	%r1178, %r1174, %r1173, 30;
	mov.b64 	%rd1897, {%r1178, %r1177};
	xor.b64  	%rd1898, %rd1896, %rd1897;
	shf.l.wrap.b32 	%r1179, %r1173, %r1174, 25;
	shf.l.wrap.b32 	%r1180, %r1174, %r1173, 25;
	mov.b64 	%rd1899, {%r1180, %r1179};
	xor.b64  	%rd1900, %rd1898, %rd1899;
	and.b64  	%rd1901, %rd1869, %rd1832;
	or.b64  	%rd1902, %rd1869, %rd1832;
	and.b64  	%rd1903, %rd1902, %rd1795;
	or.b64  	%rd1904, %rd1903, %rd1901;
	add.s64 	%rd1905, %rd1904, %rd1900;
	add.s64 	%rd1906, %rd1905, %rd1894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd1845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1182}, %rd1845;
	}
	shf.r.wrap.b32 	%r1183, %r1182, %r1181, 19;
	shf.r.wrap.b32 	%r1184, %r1181, %r1182, 19;
	mov.b64 	%rd1907, {%r1184, %r1183};
	shf.l.wrap.b32 	%r1185, %r1181, %r1182, 3;
	shf.l.wrap.b32 	%r1186, %r1182, %r1181, 3;
	mov.b64 	%rd1908, {%r1186, %r1185};
	xor.b64  	%rd1909, %rd1907, %rd1908;
	shr.u64 	%rd1910, %rd1845, 6;
	xor.b64  	%rd1911, %rd1909, %rd1910;
	shf.r.wrap.b32 	%r1187, %r844, %r843, 1;
	shf.r.wrap.b32 	%r1188, %r843, %r844, 1;
	mov.b64 	%rd1912, {%r1188, %r1187};
	shf.r.wrap.b32 	%r1189, %r844, %r843, 8;
	shf.r.wrap.b32 	%r1190, %r843, %r844, 8;
	mov.b64 	%rd1913, {%r1190, %r1189};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	shr.u64 	%rd1915, %rd1364, 7;
	xor.b64  	%rd1916, %rd1914, %rd1915;
	add.s64 	%rd1917, %rd1916, %rd1327;
	add.s64 	%rd1918, %rd1917, %rd1660;
	add.s64 	%rd1919, %rd1918, %rd1911;
	add.s64 	%rd1920, %rd1919, %rd1784;
	xor.b64  	%rd1921, %rd1858, %rd1821;
	and.b64  	%rd1922, %rd1895, %rd1921;
	xor.b64  	%rd1923, %rd1922, %rd1821;
	add.s64 	%rd1924, %rd1920, %rd1923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1191,%dummy}, %rd1895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1192}, %rd1895;
	}
	shf.r.wrap.b32 	%r1193, %r1192, %r1191, 14;
	shf.r.wrap.b32 	%r1194, %r1191, %r1192, 14;
	mov.b64 	%rd1925, {%r1194, %r1193};
	shf.r.wrap.b32 	%r1195, %r1192, %r1191, 18;
	shf.r.wrap.b32 	%r1196, %r1191, %r1192, 18;
	mov.b64 	%rd1926, {%r1196, %r1195};
	xor.b64  	%rd1927, %rd1925, %rd1926;
	shf.l.wrap.b32 	%r1197, %r1191, %r1192, 23;
	shf.l.wrap.b32 	%r1198, %r1192, %r1191, 23;
	mov.b64 	%rd1928, {%r1198, %r1197};
	xor.b64  	%rd1929, %rd1927, %rd1928;
	add.s64 	%rd1930, %rd1924, %rd1929;
	add.s64 	%rd1931, %rd1930, -2983346525034927856;
	add.s64 	%rd1932, %rd1931, %rd1795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1199,%dummy}, %rd1906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1200}, %rd1906;
	}
	shf.r.wrap.b32 	%r1201, %r1200, %r1199, 28;
	shf.r.wrap.b32 	%r1202, %r1199, %r1200, 28;
	mov.b64 	%rd1933, {%r1202, %r1201};
	shf.l.wrap.b32 	%r1203, %r1199, %r1200, 30;
	shf.l.wrap.b32 	%r1204, %r1200, %r1199, 30;
	mov.b64 	%rd1934, {%r1204, %r1203};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	shf.l.wrap.b32 	%r1205, %r1199, %r1200, 25;
	shf.l.wrap.b32 	%r1206, %r1200, %r1199, 25;
	mov.b64 	%rd1936, {%r1206, %r1205};
	xor.b64  	%rd1937, %rd1935, %rd1936;
	and.b64  	%rd1938, %rd1906, %rd1869;
	or.b64  	%rd1939, %rd1906, %rd1869;
	and.b64  	%rd1940, %rd1939, %rd1832;
	or.b64  	%rd1941, %rd1940, %rd1938;
	add.s64 	%rd1942, %rd1941, %rd1937;
	add.s64 	%rd1943, %rd1942, %rd1931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1207,%dummy}, %rd1882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1208}, %rd1882;
	}
	shf.r.wrap.b32 	%r1209, %r1208, %r1207, 19;
	shf.r.wrap.b32 	%r1210, %r1207, %r1208, 19;
	mov.b64 	%rd1944, {%r1210, %r1209};
	shf.l.wrap.b32 	%r1211, %r1207, %r1208, 3;
	shf.l.wrap.b32 	%r1212, %r1208, %r1207, 3;
	mov.b64 	%rd1945, {%r1212, %r1211};
	xor.b64  	%rd1946, %rd1944, %rd1945;
	shr.u64 	%rd1947, %rd1882, 6;
	xor.b64  	%rd1948, %rd1946, %rd1947;
	shf.r.wrap.b32 	%r1213, %r870, %r869, 1;
	shf.r.wrap.b32 	%r1214, %r869, %r870, 1;
	mov.b64 	%rd1949, {%r1214, %r1213};
	shf.r.wrap.b32 	%r1215, %r870, %r869, 8;
	shf.r.wrap.b32 	%r1216, %r869, %r870, 8;
	mov.b64 	%rd1950, {%r1216, %r1215};
	xor.b64  	%rd1951, %rd1949, %rd1950;
	shr.u64 	%rd1952, %rd1401, 7;
	xor.b64  	%rd1953, %rd1951, %rd1952;
	add.s64 	%rd1954, %rd1953, %rd1364;
	add.s64 	%rd1955, %rd1954, %rd1697;
	add.s64 	%rd1956, %rd1955, %rd1948;
	add.s64 	%rd1957, %rd1956, %rd1821;
	xor.b64  	%rd1958, %rd1895, %rd1858;
	and.b64  	%rd1959, %rd1932, %rd1958;
	xor.b64  	%rd1960, %rd1959, %rd1858;
	add.s64 	%rd1961, %rd1957, %rd1960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1217,%dummy}, %rd1932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1218}, %rd1932;
	}
	shf.r.wrap.b32 	%r1219, %r1218, %r1217, 14;
	shf.r.wrap.b32 	%r1220, %r1217, %r1218, 14;
	mov.b64 	%rd1962, {%r1220, %r1219};
	shf.r.wrap.b32 	%r1221, %r1218, %r1217, 18;
	shf.r.wrap.b32 	%r1222, %r1217, %r1218, 18;
	mov.b64 	%rd1963, {%r1222, %r1221};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	shf.l.wrap.b32 	%r1223, %r1217, %r1218, 23;
	shf.l.wrap.b32 	%r1224, %r1218, %r1217, 23;
	mov.b64 	%rd1965, {%r1224, %r1223};
	xor.b64  	%rd1966, %rd1964, %rd1965;
	add.s64 	%rd1967, %rd1961, %rd1966;
	add.s64 	%rd1968, %rd1967, -860691631967231958;
	add.s64 	%rd1969, %rd1968, %rd1832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd1943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd1943;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 28;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 28;
	mov.b64 	%rd1970, {%r1228, %r1227};
	shf.l.wrap.b32 	%r1229, %r1225, %r1226, 30;
	shf.l.wrap.b32 	%r1230, %r1226, %r1225, 30;
	mov.b64 	%rd1971, {%r1230, %r1229};
	xor.b64  	%rd1972, %rd1970, %rd1971;
	shf.l.wrap.b32 	%r1231, %r1225, %r1226, 25;
	shf.l.wrap.b32 	%r1232, %r1226, %r1225, 25;
	mov.b64 	%rd1973, {%r1232, %r1231};
	xor.b64  	%rd1974, %rd1972, %rd1973;
	and.b64  	%rd1975, %rd1943, %rd1906;
	or.b64  	%rd1976, %rd1943, %rd1906;
	and.b64  	%rd1977, %rd1976, %rd1869;
	or.b64  	%rd1978, %rd1977, %rd1975;
	add.s64 	%rd1979, %rd1978, %rd1974;
	add.s64 	%rd1980, %rd1979, %rd1968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd1919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd1919;
	}
	shf.r.wrap.b32 	%r1235, %r1234, %r1233, 19;
	shf.r.wrap.b32 	%r1236, %r1233, %r1234, 19;
	mov.b64 	%rd1981, {%r1236, %r1235};
	shf.l.wrap.b32 	%r1237, %r1233, %r1234, 3;
	shf.l.wrap.b32 	%r1238, %r1234, %r1233, 3;
	mov.b64 	%rd1982, {%r1238, %r1237};
	xor.b64  	%rd1983, %rd1981, %rd1982;
	shr.u64 	%rd1984, %rd1919, 6;
	xor.b64  	%rd1985, %rd1983, %rd1984;
	shf.r.wrap.b32 	%r1239, %r896, %r895, 1;
	shf.r.wrap.b32 	%r1240, %r895, %r896, 1;
	mov.b64 	%rd1986, {%r1240, %r1239};
	shf.r.wrap.b32 	%r1241, %r896, %r895, 8;
	shf.r.wrap.b32 	%r1242, %r895, %r896, 8;
	mov.b64 	%rd1987, {%r1242, %r1241};
	xor.b64  	%rd1988, %rd1986, %rd1987;
	shr.u64 	%rd1989, %rd1438, 7;
	xor.b64  	%rd1990, %rd1988, %rd1989;
	add.s64 	%rd1991, %rd1990, %rd1401;
	add.s64 	%rd1992, %rd1991, %rd1734;
	add.s64 	%rd1993, %rd1992, %rd1985;
	add.s64 	%rd1994, %rd1993, %rd1858;
	xor.b64  	%rd1995, %rd1932, %rd1895;
	and.b64  	%rd1996, %rd1969, %rd1995;
	xor.b64  	%rd1997, %rd1996, %rd1895;
	add.s64 	%rd1998, %rd1994, %rd1997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1243,%dummy}, %rd1969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1244}, %rd1969;
	}
	shf.r.wrap.b32 	%r1245, %r1244, %r1243, 14;
	shf.r.wrap.b32 	%r1246, %r1243, %r1244, 14;
	mov.b64 	%rd1999, {%r1246, %r1245};
	shf.r.wrap.b32 	%r1247, %r1244, %r1243, 18;
	shf.r.wrap.b32 	%r1248, %r1243, %r1244, 18;
	mov.b64 	%rd2000, {%r1248, %r1247};
	xor.b64  	%rd2001, %rd1999, %rd2000;
	shf.l.wrap.b32 	%r1249, %r1243, %r1244, 23;
	shf.l.wrap.b32 	%r1250, %r1244, %r1243, 23;
	mov.b64 	%rd2002, {%r1250, %r1249};
	xor.b64  	%rd2003, %rd2001, %rd2002;
	add.s64 	%rd2004, %rd1998, %rd2003;
	add.s64 	%rd2005, %rd2004, 1182934255886127544;
	add.s64 	%rd2006, %rd2005, %rd1869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1251,%dummy}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1252}, %rd1980;
	}
	shf.r.wrap.b32 	%r1253, %r1252, %r1251, 28;
	shf.r.wrap.b32 	%r1254, %r1251, %r1252, 28;
	mov.b64 	%rd2007, {%r1254, %r1253};
	shf.l.wrap.b32 	%r1255, %r1251, %r1252, 30;
	shf.l.wrap.b32 	%r1256, %r1252, %r1251, 30;
	mov.b64 	%rd2008, {%r1256, %r1255};
	xor.b64  	%rd2009, %rd2007, %rd2008;
	shf.l.wrap.b32 	%r1257, %r1251, %r1252, 25;
	shf.l.wrap.b32 	%r1258, %r1252, %r1251, 25;
	mov.b64 	%rd2010, {%r1258, %r1257};
	xor.b64  	%rd2011, %rd2009, %rd2010;
	and.b64  	%rd2012, %rd1980, %rd1943;
	or.b64  	%rd2013, %rd1980, %rd1943;
	and.b64  	%rd2014, %rd2013, %rd1906;
	or.b64  	%rd2015, %rd2014, %rd2012;
	add.s64 	%rd2016, %rd2015, %rd2011;
	add.s64 	%rd2017, %rd2016, %rd2005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1259,%dummy}, %rd1956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1260}, %rd1956;
	}
	shf.r.wrap.b32 	%r1261, %r1260, %r1259, 19;
	shf.r.wrap.b32 	%r1262, %r1259, %r1260, 19;
	mov.b64 	%rd2018, {%r1262, %r1261};
	shf.l.wrap.b32 	%r1263, %r1259, %r1260, 3;
	shf.l.wrap.b32 	%r1264, %r1260, %r1259, 3;
	mov.b64 	%rd2019, {%r1264, %r1263};
	xor.b64  	%rd2020, %rd2018, %rd2019;
	shr.u64 	%rd2021, %rd1956, 6;
	xor.b64  	%rd2022, %rd2020, %rd2021;
	shf.r.wrap.b32 	%r1265, %r922, %r921, 1;
	shf.r.wrap.b32 	%r1266, %r921, %r922, 1;
	mov.b64 	%rd2023, {%r1266, %r1265};
	shf.r.wrap.b32 	%r1267, %r922, %r921, 8;
	shf.r.wrap.b32 	%r1268, %r921, %r922, 8;
	mov.b64 	%rd2024, {%r1268, %r1267};
	xor.b64  	%rd2025, %rd2023, %rd2024;
	shr.u64 	%rd2026, %rd1475, 7;
	xor.b64  	%rd2027, %rd2025, %rd2026;
	add.s64 	%rd2028, %rd2027, %rd1438;
	add.s64 	%rd2029, %rd2028, %rd1771;
	add.s64 	%rd2030, %rd2029, %rd2022;
	add.s64 	%rd2031, %rd2030, %rd1895;
	xor.b64  	%rd2032, %rd1969, %rd1932;
	and.b64  	%rd2033, %rd2006, %rd2032;
	xor.b64  	%rd2034, %rd2033, %rd1932;
	add.s64 	%rd2035, %rd2031, %rd2034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd2006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd2006;
	}
	shf.r.wrap.b32 	%r1271, %r1270, %r1269, 14;
	shf.r.wrap.b32 	%r1272, %r1269, %r1270, 14;
	mov.b64 	%rd2036, {%r1272, %r1271};
	shf.r.wrap.b32 	%r1273, %r1270, %r1269, 18;
	shf.r.wrap.b32 	%r1274, %r1269, %r1270, 18;
	mov.b64 	%rd2037, {%r1274, %r1273};
	xor.b64  	%rd2038, %rd2036, %rd2037;
	shf.l.wrap.b32 	%r1275, %r1269, %r1270, 23;
	shf.l.wrap.b32 	%r1276, %r1270, %r1269, 23;
	mov.b64 	%rd2039, {%r1276, %r1275};
	xor.b64  	%rd2040, %rd2038, %rd2039;
	add.s64 	%rd2041, %rd2035, %rd2040;
	add.s64 	%rd2042, %rd2041, 1847814050463011016;
	add.s64 	%rd2043, %rd2042, %rd1906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1278}, %rd2017;
	}
	shf.r.wrap.b32 	%r1279, %r1278, %r1277, 28;
	shf.r.wrap.b32 	%r1280, %r1277, %r1278, 28;
	mov.b64 	%rd2044, {%r1280, %r1279};
	shf.l.wrap.b32 	%r1281, %r1277, %r1278, 30;
	shf.l.wrap.b32 	%r1282, %r1278, %r1277, 30;
	mov.b64 	%rd2045, {%r1282, %r1281};
	xor.b64  	%rd2046, %rd2044, %rd2045;
	shf.l.wrap.b32 	%r1283, %r1277, %r1278, 25;
	shf.l.wrap.b32 	%r1284, %r1278, %r1277, 25;
	mov.b64 	%rd2047, {%r1284, %r1283};
	xor.b64  	%rd2048, %rd2046, %rd2047;
	and.b64  	%rd2049, %rd2017, %rd1980;
	or.b64  	%rd2050, %rd2017, %rd1980;
	and.b64  	%rd2051, %rd2050, %rd1943;
	or.b64  	%rd2052, %rd2051, %rd2049;
	add.s64 	%rd2053, %rd2052, %rd2048;
	add.s64 	%rd2054, %rd2053, %rd2042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd1993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd1993;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 19;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 19;
	mov.b64 	%rd2055, {%r1288, %r1287};
	shf.l.wrap.b32 	%r1289, %r1285, %r1286, 3;
	shf.l.wrap.b32 	%r1290, %r1286, %r1285, 3;
	mov.b64 	%rd2056, {%r1290, %r1289};
	xor.b64  	%rd2057, %rd2055, %rd2056;
	shr.u64 	%rd2058, %rd1993, 6;
	xor.b64  	%rd2059, %rd2057, %rd2058;
	shf.r.wrap.b32 	%r1291, %r948, %r947, 1;
	shf.r.wrap.b32 	%r1292, %r947, %r948, 1;
	mov.b64 	%rd2060, {%r1292, %r1291};
	shf.r.wrap.b32 	%r1293, %r948, %r947, 8;
	shf.r.wrap.b32 	%r1294, %r947, %r948, 8;
	mov.b64 	%rd2061, {%r1294, %r1293};
	xor.b64  	%rd2062, %rd2060, %rd2061;
	shr.u64 	%rd2063, %rd1512, 7;
	xor.b64  	%rd2064, %rd2062, %rd2063;
	add.s64 	%rd2065, %rd2064, %rd1475;
	add.s64 	%rd2066, %rd2065, %rd1808;
	add.s64 	%rd2067, %rd2066, %rd2059;
	add.s64 	%rd2068, %rd2067, %rd1932;
	xor.b64  	%rd2069, %rd2006, %rd1969;
	and.b64  	%rd2070, %rd2043, %rd2069;
	xor.b64  	%rd2071, %rd2070, %rd1969;
	add.s64 	%rd2072, %rd2068, %rd2071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd2043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd2043;
	}
	shf.r.wrap.b32 	%r1297, %r1296, %r1295, 14;
	shf.r.wrap.b32 	%r1298, %r1295, %r1296, 14;
	mov.b64 	%rd2073, {%r1298, %r1297};
	shf.r.wrap.b32 	%r1299, %r1296, %r1295, 18;
	shf.r.wrap.b32 	%r1300, %r1295, %r1296, 18;
	mov.b64 	%rd2074, {%r1300, %r1299};
	xor.b64  	%rd2075, %rd2073, %rd2074;
	shf.l.wrap.b32 	%r1301, %r1295, %r1296, 23;
	shf.l.wrap.b32 	%r1302, %r1296, %r1295, 23;
	mov.b64 	%rd2076, {%r1302, %r1301};
	xor.b64  	%rd2077, %rd2075, %rd2076;
	add.s64 	%rd2078, %rd2072, %rd2077;
	add.s64 	%rd2079, %rd2078, 2177327727835720531;
	add.s64 	%rd2080, %rd2079, %rd1943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd2054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd2054;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 28;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 28;
	mov.b64 	%rd2081, {%r1306, %r1305};
	shf.l.wrap.b32 	%r1307, %r1303, %r1304, 30;
	shf.l.wrap.b32 	%r1308, %r1304, %r1303, 30;
	mov.b64 	%rd2082, {%r1308, %r1307};
	xor.b64  	%rd2083, %rd2081, %rd2082;
	shf.l.wrap.b32 	%r1309, %r1303, %r1304, 25;
	shf.l.wrap.b32 	%r1310, %r1304, %r1303, 25;
	mov.b64 	%rd2084, {%r1310, %r1309};
	xor.b64  	%rd2085, %rd2083, %rd2084;
	and.b64  	%rd2086, %rd2054, %rd2017;
	or.b64  	%rd2087, %rd2054, %rd2017;
	and.b64  	%rd2088, %rd2087, %rd1980;
	or.b64  	%rd2089, %rd2088, %rd2086;
	add.s64 	%rd2090, %rd2089, %rd2085;
	add.s64 	%rd2091, %rd2090, %rd2079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1311,%dummy}, %rd2030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd2030;
	}
	shf.r.wrap.b32 	%r1313, %r1312, %r1311, 19;
	shf.r.wrap.b32 	%r1314, %r1311, %r1312, 19;
	mov.b64 	%rd2092, {%r1314, %r1313};
	shf.l.wrap.b32 	%r1315, %r1311, %r1312, 3;
	shf.l.wrap.b32 	%r1316, %r1312, %r1311, 3;
	mov.b64 	%rd2093, {%r1316, %r1315};
	xor.b64  	%rd2094, %rd2092, %rd2093;
	shr.u64 	%rd2095, %rd2030, 6;
	xor.b64  	%rd2096, %rd2094, %rd2095;
	shf.r.wrap.b32 	%r1317, %r974, %r973, 1;
	shf.r.wrap.b32 	%r1318, %r973, %r974, 1;
	mov.b64 	%rd2097, {%r1318, %r1317};
	shf.r.wrap.b32 	%r1319, %r974, %r973, 8;
	shf.r.wrap.b32 	%r1320, %r973, %r974, 8;
	mov.b64 	%rd2098, {%r1320, %r1319};
	xor.b64  	%rd2099, %rd2097, %rd2098;
	shr.u64 	%rd2100, %rd1549, 7;
	xor.b64  	%rd2101, %rd2099, %rd2100;
	add.s64 	%rd2102, %rd2101, %rd1512;
	add.s64 	%rd2103, %rd2102, %rd1845;
	add.s64 	%rd2104, %rd2103, %rd2096;
	add.s64 	%rd2105, %rd2104, %rd1969;
	xor.b64  	%rd2106, %rd2043, %rd2006;
	and.b64  	%rd2107, %rd2080, %rd2106;
	xor.b64  	%rd2108, %rd2107, %rd2006;
	add.s64 	%rd2109, %rd2105, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1321,%dummy}, %rd2080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1322}, %rd2080;
	}
	shf.r.wrap.b32 	%r1323, %r1322, %r1321, 14;
	shf.r.wrap.b32 	%r1324, %r1321, %r1322, 14;
	mov.b64 	%rd2110, {%r1324, %r1323};
	shf.r.wrap.b32 	%r1325, %r1322, %r1321, 18;
	shf.r.wrap.b32 	%r1326, %r1321, %r1322, 18;
	mov.b64 	%rd2111, {%r1326, %r1325};
	xor.b64  	%rd2112, %rd2110, %rd2111;
	shf.l.wrap.b32 	%r1327, %r1321, %r1322, 23;
	shf.l.wrap.b32 	%r1328, %r1322, %r1321, 23;
	mov.b64 	%rd2113, {%r1328, %r1327};
	xor.b64  	%rd2114, %rd2112, %rd2113;
	add.s64 	%rd2115, %rd2109, %rd2114;
	add.s64 	%rd2116, %rd2115, 2830643537854262169;
	add.s64 	%rd2117, %rd2116, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1329,%dummy}, %rd2091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1330}, %rd2091;
	}
	shf.r.wrap.b32 	%r1331, %r1330, %r1329, 28;
	shf.r.wrap.b32 	%r1332, %r1329, %r1330, 28;
	mov.b64 	%rd2118, {%r1332, %r1331};
	shf.l.wrap.b32 	%r1333, %r1329, %r1330, 30;
	shf.l.wrap.b32 	%r1334, %r1330, %r1329, 30;
	mov.b64 	%rd2119, {%r1334, %r1333};
	xor.b64  	%rd2120, %rd2118, %rd2119;
	shf.l.wrap.b32 	%r1335, %r1329, %r1330, 25;
	shf.l.wrap.b32 	%r1336, %r1330, %r1329, 25;
	mov.b64 	%rd2121, {%r1336, %r1335};
	xor.b64  	%rd2122, %rd2120, %rd2121;
	and.b64  	%rd2123, %rd2091, %rd2054;
	or.b64  	%rd2124, %rd2091, %rd2054;
	and.b64  	%rd2125, %rd2124, %rd2017;
	or.b64  	%rd2126, %rd2125, %rd2123;
	add.s64 	%rd2127, %rd2126, %rd2122;
	add.s64 	%rd2128, %rd2127, %rd2116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1337,%dummy}, %rd2067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1338}, %rd2067;
	}
	shf.r.wrap.b32 	%r1339, %r1338, %r1337, 19;
	shf.r.wrap.b32 	%r1340, %r1337, %r1338, 19;
	mov.b64 	%rd2129, {%r1340, %r1339};
	shf.l.wrap.b32 	%r1341, %r1337, %r1338, 3;
	shf.l.wrap.b32 	%r1342, %r1338, %r1337, 3;
	mov.b64 	%rd2130, {%r1342, %r1341};
	xor.b64  	%rd2131, %rd2129, %rd2130;
	shr.u64 	%rd2132, %rd2067, 6;
	xor.b64  	%rd2133, %rd2131, %rd2132;
	shf.r.wrap.b32 	%r1343, %r1000, %r999, 1;
	shf.r.wrap.b32 	%r1344, %r999, %r1000, 1;
	mov.b64 	%rd2134, {%r1344, %r1343};
	shf.r.wrap.b32 	%r1345, %r1000, %r999, 8;
	shf.r.wrap.b32 	%r1346, %r999, %r1000, 8;
	mov.b64 	%rd2135, {%r1346, %r1345};
	xor.b64  	%rd2136, %rd2134, %rd2135;
	shr.u64 	%rd2137, %rd1586, 7;
	xor.b64  	%rd2138, %rd2136, %rd2137;
	add.s64 	%rd2139, %rd2138, %rd1549;
	add.s64 	%rd2140, %rd2139, %rd1882;
	add.s64 	%rd2141, %rd2140, %rd2133;
	add.s64 	%rd2142, %rd2141, %rd2006;
	xor.b64  	%rd2143, %rd2080, %rd2043;
	and.b64  	%rd2144, %rd2117, %rd2143;
	xor.b64  	%rd2145, %rd2144, %rd2043;
	add.s64 	%rd2146, %rd2142, %rd2145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1347,%dummy}, %rd2117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1348}, %rd2117;
	}
	shf.r.wrap.b32 	%r1349, %r1348, %r1347, 14;
	shf.r.wrap.b32 	%r1350, %r1347, %r1348, 14;
	mov.b64 	%rd2147, {%r1350, %r1349};
	shf.r.wrap.b32 	%r1351, %r1348, %r1347, 18;
	shf.r.wrap.b32 	%r1352, %r1347, %r1348, 18;
	mov.b64 	%rd2148, {%r1352, %r1351};
	xor.b64  	%rd2149, %rd2147, %rd2148;
	shf.l.wrap.b32 	%r1353, %r1347, %r1348, 23;
	shf.l.wrap.b32 	%r1354, %r1348, %r1347, 23;
	mov.b64 	%rd2150, {%r1354, %r1353};
	xor.b64  	%rd2151, %rd2149, %rd2150;
	add.s64 	%rd2152, %rd2146, %rd2151;
	add.s64 	%rd2153, %rd2152, 3796741975233480872;
	add.s64 	%rd2154, %rd2153, %rd2017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1355,%dummy}, %rd2128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1356}, %rd2128;
	}
	shf.r.wrap.b32 	%r1357, %r1356, %r1355, 28;
	shf.r.wrap.b32 	%r1358, %r1355, %r1356, 28;
	mov.b64 	%rd2155, {%r1358, %r1357};
	shf.l.wrap.b32 	%r1359, %r1355, %r1356, 30;
	shf.l.wrap.b32 	%r1360, %r1356, %r1355, 30;
	mov.b64 	%rd2156, {%r1360, %r1359};
	xor.b64  	%rd2157, %rd2155, %rd2156;
	shf.l.wrap.b32 	%r1361, %r1355, %r1356, 25;
	shf.l.wrap.b32 	%r1362, %r1356, %r1355, 25;
	mov.b64 	%rd2158, {%r1362, %r1361};
	xor.b64  	%rd2159, %rd2157, %rd2158;
	and.b64  	%rd2160, %rd2128, %rd2091;
	or.b64  	%rd2161, %rd2128, %rd2091;
	and.b64  	%rd2162, %rd2161, %rd2054;
	or.b64  	%rd2163, %rd2162, %rd2160;
	add.s64 	%rd2164, %rd2163, %rd2159;
	add.s64 	%rd2165, %rd2164, %rd2153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1363,%dummy}, %rd2104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1364}, %rd2104;
	}
	shf.r.wrap.b32 	%r1365, %r1364, %r1363, 19;
	shf.r.wrap.b32 	%r1366, %r1363, %r1364, 19;
	mov.b64 	%rd2166, {%r1366, %r1365};
	shf.l.wrap.b32 	%r1367, %r1363, %r1364, 3;
	shf.l.wrap.b32 	%r1368, %r1364, %r1363, 3;
	mov.b64 	%rd2167, {%r1368, %r1367};
	xor.b64  	%rd2168, %rd2166, %rd2167;
	shr.u64 	%rd2169, %rd2104, 6;
	xor.b64  	%rd2170, %rd2168, %rd2169;
	shf.r.wrap.b32 	%r1369, %r1026, %r1025, 1;
	shf.r.wrap.b32 	%r1370, %r1025, %r1026, 1;
	mov.b64 	%rd2171, {%r1370, %r1369};
	shf.r.wrap.b32 	%r1371, %r1026, %r1025, 8;
	shf.r.wrap.b32 	%r1372, %r1025, %r1026, 8;
	mov.b64 	%rd2172, {%r1372, %r1371};
	xor.b64  	%rd2173, %rd2171, %rd2172;
	shr.u64 	%rd2174, %rd1623, 7;
	xor.b64  	%rd2175, %rd2173, %rd2174;
	add.s64 	%rd2176, %rd2175, %rd1586;
	add.s64 	%rd2177, %rd2176, %rd1919;
	add.s64 	%rd2178, %rd2177, %rd2170;
	add.s64 	%rd2179, %rd2178, %rd2043;
	xor.b64  	%rd2180, %rd2117, %rd2080;
	and.b64  	%rd2181, %rd2154, %rd2180;
	xor.b64  	%rd2182, %rd2181, %rd2080;
	add.s64 	%rd2183, %rd2179, %rd2182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd2154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd2154;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 14;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 14;
	mov.b64 	%rd2184, {%r1376, %r1375};
	shf.r.wrap.b32 	%r1377, %r1374, %r1373, 18;
	shf.r.wrap.b32 	%r1378, %r1373, %r1374, 18;
	mov.b64 	%rd2185, {%r1378, %r1377};
	xor.b64  	%rd2186, %rd2184, %rd2185;
	shf.l.wrap.b32 	%r1379, %r1373, %r1374, 23;
	shf.l.wrap.b32 	%r1380, %r1374, %r1373, 23;
	mov.b64 	%rd2187, {%r1380, %r1379};
	xor.b64  	%rd2188, %rd2186, %rd2187;
	add.s64 	%rd2189, %rd2183, %rd2188;
	add.s64 	%rd2190, %rd2189, 4115178125766777443;
	add.s64 	%rd2191, %rd2190, %rd2054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd2165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd2165;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 28;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 28;
	mov.b64 	%rd2192, {%r1384, %r1383};
	shf.l.wrap.b32 	%r1385, %r1381, %r1382, 30;
	shf.l.wrap.b32 	%r1386, %r1382, %r1381, 30;
	mov.b64 	%rd2193, {%r1386, %r1385};
	xor.b64  	%rd2194, %rd2192, %rd2193;
	shf.l.wrap.b32 	%r1387, %r1381, %r1382, 25;
	shf.l.wrap.b32 	%r1388, %r1382, %r1381, 25;
	mov.b64 	%rd2195, {%r1388, %r1387};
	xor.b64  	%rd2196, %rd2194, %rd2195;
	and.b64  	%rd2197, %rd2165, %rd2128;
	or.b64  	%rd2198, %rd2165, %rd2128;
	and.b64  	%rd2199, %rd2198, %rd2091;
	or.b64  	%rd2200, %rd2199, %rd2197;
	add.s64 	%rd2201, %rd2200, %rd2196;
	add.s64 	%rd2202, %rd2201, %rd2190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1389,%dummy}, %rd2141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1390}, %rd2141;
	}
	shf.r.wrap.b32 	%r1391, %r1390, %r1389, 19;
	shf.r.wrap.b32 	%r1392, %r1389, %r1390, 19;
	mov.b64 	%rd2203, {%r1392, %r1391};
	shf.l.wrap.b32 	%r1393, %r1389, %r1390, 3;
	shf.l.wrap.b32 	%r1394, %r1390, %r1389, 3;
	mov.b64 	%rd2204, {%r1394, %r1393};
	xor.b64  	%rd2205, %rd2203, %rd2204;
	shr.u64 	%rd2206, %rd2141, 6;
	xor.b64  	%rd2207, %rd2205, %rd2206;
	shf.r.wrap.b32 	%r1395, %r1052, %r1051, 1;
	shf.r.wrap.b32 	%r1396, %r1051, %r1052, 1;
	mov.b64 	%rd2208, {%r1396, %r1395};
	shf.r.wrap.b32 	%r1397, %r1052, %r1051, 8;
	shf.r.wrap.b32 	%r1398, %r1051, %r1052, 8;
	mov.b64 	%rd2209, {%r1398, %r1397};
	xor.b64  	%rd2210, %rd2208, %rd2209;
	shr.u64 	%rd2211, %rd1660, 7;
	xor.b64  	%rd2212, %rd2210, %rd2211;
	add.s64 	%rd2213, %rd2212, %rd1623;
	add.s64 	%rd2214, %rd2213, %rd1956;
	add.s64 	%rd2215, %rd2214, %rd2207;
	add.s64 	%rd2216, %rd2215, %rd2080;
	xor.b64  	%rd2217, %rd2154, %rd2117;
	and.b64  	%rd2218, %rd2191, %rd2217;
	xor.b64  	%rd2219, %rd2218, %rd2117;
	add.s64 	%rd2220, %rd2216, %rd2219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd2191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd2191;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 14;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 14;
	mov.b64 	%rd2221, {%r1402, %r1401};
	shf.r.wrap.b32 	%r1403, %r1400, %r1399, 18;
	shf.r.wrap.b32 	%r1404, %r1399, %r1400, 18;
	mov.b64 	%rd2222, {%r1404, %r1403};
	xor.b64  	%rd2223, %rd2221, %rd2222;
	shf.l.wrap.b32 	%r1405, %r1399, %r1400, 23;
	shf.l.wrap.b32 	%r1406, %r1400, %r1399, 23;
	mov.b64 	%rd2224, {%r1406, %r1405};
	xor.b64  	%rd2225, %rd2223, %rd2224;
	add.s64 	%rd2226, %rd2220, %rd2225;
	add.s64 	%rd2227, %rd2226, 5681478168544905931;
	add.s64 	%rd2228, %rd2227, %rd2091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd2202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd2202;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 28;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 28;
	mov.b64 	%rd2229, {%r1410, %r1409};
	shf.l.wrap.b32 	%r1411, %r1407, %r1408, 30;
	shf.l.wrap.b32 	%r1412, %r1408, %r1407, 30;
	mov.b64 	%rd2230, {%r1412, %r1411};
	xor.b64  	%rd2231, %rd2229, %rd2230;
	shf.l.wrap.b32 	%r1413, %r1407, %r1408, 25;
	shf.l.wrap.b32 	%r1414, %r1408, %r1407, 25;
	mov.b64 	%rd2232, {%r1414, %r1413};
	xor.b64  	%rd2233, %rd2231, %rd2232;
	and.b64  	%rd2234, %rd2202, %rd2165;
	or.b64  	%rd2235, %rd2202, %rd2165;
	and.b64  	%rd2236, %rd2235, %rd2128;
	or.b64  	%rd2237, %rd2236, %rd2234;
	add.s64 	%rd2238, %rd2237, %rd2233;
	add.s64 	%rd2239, %rd2238, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1415,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd2178;
	}
	shf.r.wrap.b32 	%r1417, %r1416, %r1415, 19;
	shf.r.wrap.b32 	%r1418, %r1415, %r1416, 19;
	mov.b64 	%rd2240, {%r1418, %r1417};
	shf.l.wrap.b32 	%r1419, %r1415, %r1416, 3;
	shf.l.wrap.b32 	%r1420, %r1416, %r1415, 3;
	mov.b64 	%rd2241, {%r1420, %r1419};
	xor.b64  	%rd2242, %rd2240, %rd2241;
	shr.u64 	%rd2243, %rd2178, 6;
	xor.b64  	%rd2244, %rd2242, %rd2243;
	shf.r.wrap.b32 	%r1421, %r1078, %r1077, 1;
	shf.r.wrap.b32 	%r1422, %r1077, %r1078, 1;
	mov.b64 	%rd2245, {%r1422, %r1421};
	shf.r.wrap.b32 	%r1423, %r1078, %r1077, 8;
	shf.r.wrap.b32 	%r1424, %r1077, %r1078, 8;
	mov.b64 	%rd2246, {%r1424, %r1423};
	xor.b64  	%rd2247, %rd2245, %rd2246;
	shr.u64 	%rd2248, %rd1697, 7;
	xor.b64  	%rd2249, %rd2247, %rd2248;
	add.s64 	%rd2250, %rd2249, %rd1660;
	add.s64 	%rd2251, %rd2250, %rd1993;
	add.s64 	%rd2252, %rd2251, %rd2244;
	add.s64 	%rd2253, %rd2252, %rd2117;
	xor.b64  	%rd2254, %rd2191, %rd2154;
	and.b64  	%rd2255, %rd2228, %rd2254;
	xor.b64  	%rd2256, %rd2255, %rd2154;
	add.s64 	%rd2257, %rd2253, %rd2256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1425,%dummy}, %rd2228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1426}, %rd2228;
	}
	shf.r.wrap.b32 	%r1427, %r1426, %r1425, 14;
	shf.r.wrap.b32 	%r1428, %r1425, %r1426, 14;
	mov.b64 	%rd2258, {%r1428, %r1427};
	shf.r.wrap.b32 	%r1429, %r1426, %r1425, 18;
	shf.r.wrap.b32 	%r1430, %r1425, %r1426, 18;
	mov.b64 	%rd2259, {%r1430, %r1429};
	xor.b64  	%rd2260, %rd2258, %rd2259;
	shf.l.wrap.b32 	%r1431, %r1425, %r1426, 23;
	shf.l.wrap.b32 	%r1432, %r1426, %r1425, 23;
	mov.b64 	%rd2261, {%r1432, %r1431};
	xor.b64  	%rd2262, %rd2260, %rd2261;
	add.s64 	%rd2263, %rd2257, %rd2262;
	add.s64 	%rd2264, %rd2263, 6601373596472566643;
	add.s64 	%rd2265, %rd2264, %rd2128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1433,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1434}, %rd2239;
	}
	shf.r.wrap.b32 	%r1435, %r1434, %r1433, 28;
	shf.r.wrap.b32 	%r1436, %r1433, %r1434, 28;
	mov.b64 	%rd2266, {%r1436, %r1435};
	shf.l.wrap.b32 	%r1437, %r1433, %r1434, 30;
	shf.l.wrap.b32 	%r1438, %r1434, %r1433, 30;
	mov.b64 	%rd2267, {%r1438, %r1437};
	xor.b64  	%rd2268, %rd2266, %rd2267;
	shf.l.wrap.b32 	%r1439, %r1433, %r1434, 25;
	shf.l.wrap.b32 	%r1440, %r1434, %r1433, 25;
	mov.b64 	%rd2269, {%r1440, %r1439};
	xor.b64  	%rd2270, %rd2268, %rd2269;
	and.b64  	%rd2271, %rd2239, %rd2202;
	or.b64  	%rd2272, %rd2239, %rd2202;
	and.b64  	%rd2273, %rd2272, %rd2165;
	or.b64  	%rd2274, %rd2273, %rd2271;
	add.s64 	%rd2275, %rd2274, %rd2270;
	add.s64 	%rd2276, %rd2275, %rd2264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1441,%dummy}, %rd2215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1442}, %rd2215;
	}
	shf.r.wrap.b32 	%r1443, %r1442, %r1441, 19;
	shf.r.wrap.b32 	%r1444, %r1441, %r1442, 19;
	mov.b64 	%rd2277, {%r1444, %r1443};
	shf.l.wrap.b32 	%r1445, %r1441, %r1442, 3;
	shf.l.wrap.b32 	%r1446, %r1442, %r1441, 3;
	mov.b64 	%rd2278, {%r1446, %r1445};
	xor.b64  	%rd2279, %rd2277, %rd2278;
	shr.u64 	%rd2280, %rd2215, 6;
	xor.b64  	%rd2281, %rd2279, %rd2280;
	shf.r.wrap.b32 	%r1447, %r1104, %r1103, 1;
	shf.r.wrap.b32 	%r1448, %r1103, %r1104, 1;
	mov.b64 	%rd2282, {%r1448, %r1447};
	shf.r.wrap.b32 	%r1449, %r1104, %r1103, 8;
	shf.r.wrap.b32 	%r1450, %r1103, %r1104, 8;
	mov.b64 	%rd2283, {%r1450, %r1449};
	xor.b64  	%rd2284, %rd2282, %rd2283;
	shr.u64 	%rd2285, %rd1734, 7;
	xor.b64  	%rd2286, %rd2284, %rd2285;
	add.s64 	%rd2287, %rd2286, %rd1697;
	add.s64 	%rd2288, %rd2287, %rd2030;
	add.s64 	%rd2289, %rd2288, %rd2281;
	add.s64 	%rd2290, %rd2289, %rd2154;
	xor.b64  	%rd2291, %rd2228, %rd2191;
	and.b64  	%rd2292, %rd2265, %rd2291;
	xor.b64  	%rd2293, %rd2292, %rd2191;
	add.s64 	%rd2294, %rd2290, %rd2293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1451,%dummy}, %rd2265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1452}, %rd2265;
	}
	shf.r.wrap.b32 	%r1453, %r1452, %r1451, 14;
	shf.r.wrap.b32 	%r1454, %r1451, %r1452, 14;
	mov.b64 	%rd2295, {%r1454, %r1453};
	shf.r.wrap.b32 	%r1455, %r1452, %r1451, 18;
	shf.r.wrap.b32 	%r1456, %r1451, %r1452, 18;
	mov.b64 	%rd2296, {%r1456, %r1455};
	xor.b64  	%rd2297, %rd2295, %rd2296;
	shf.l.wrap.b32 	%r1457, %r1451, %r1452, 23;
	shf.l.wrap.b32 	%r1458, %r1452, %r1451, 23;
	mov.b64 	%rd2298, {%r1458, %r1457};
	xor.b64  	%rd2299, %rd2297, %rd2298;
	add.s64 	%rd2300, %rd2294, %rd2299;
	add.s64 	%rd2301, %rd2300, 7507060721942968483;
	add.s64 	%rd2302, %rd2301, %rd2165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1459,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1460}, %rd2276;
	}
	shf.r.wrap.b32 	%r1461, %r1460, %r1459, 28;
	shf.r.wrap.b32 	%r1462, %r1459, %r1460, 28;
	mov.b64 	%rd2303, {%r1462, %r1461};
	shf.l.wrap.b32 	%r1463, %r1459, %r1460, 30;
	shf.l.wrap.b32 	%r1464, %r1460, %r1459, 30;
	mov.b64 	%rd2304, {%r1464, %r1463};
	xor.b64  	%rd2305, %rd2303, %rd2304;
	shf.l.wrap.b32 	%r1465, %r1459, %r1460, 25;
	shf.l.wrap.b32 	%r1466, %r1460, %r1459, 25;
	mov.b64 	%rd2306, {%r1466, %r1465};
	xor.b64  	%rd2307, %rd2305, %rd2306;
	and.b64  	%rd2308, %rd2276, %rd2239;
	or.b64  	%rd2309, %rd2276, %rd2239;
	and.b64  	%rd2310, %rd2309, %rd2202;
	or.b64  	%rd2311, %rd2310, %rd2308;
	add.s64 	%rd2312, %rd2311, %rd2307;
	add.s64 	%rd2313, %rd2312, %rd2301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1467,%dummy}, %rd2252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1468}, %rd2252;
	}
	shf.r.wrap.b32 	%r1469, %r1468, %r1467, 19;
	shf.r.wrap.b32 	%r1470, %r1467, %r1468, 19;
	mov.b64 	%rd2314, {%r1470, %r1469};
	shf.l.wrap.b32 	%r1471, %r1467, %r1468, 3;
	shf.l.wrap.b32 	%r1472, %r1468, %r1467, 3;
	mov.b64 	%rd2315, {%r1472, %r1471};
	xor.b64  	%rd2316, %rd2314, %rd2315;
	shr.u64 	%rd2317, %rd2252, 6;
	xor.b64  	%rd2318, %rd2316, %rd2317;
	shf.r.wrap.b32 	%r1473, %r1130, %r1129, 1;
	shf.r.wrap.b32 	%r1474, %r1129, %r1130, 1;
	mov.b64 	%rd2319, {%r1474, %r1473};
	shf.r.wrap.b32 	%r1475, %r1130, %r1129, 8;
	shf.r.wrap.b32 	%r1476, %r1129, %r1130, 8;
	mov.b64 	%rd2320, {%r1476, %r1475};
	xor.b64  	%rd2321, %rd2319, %rd2320;
	shr.u64 	%rd2322, %rd1771, 7;
	xor.b64  	%rd2323, %rd2321, %rd2322;
	add.s64 	%rd2324, %rd2323, %rd1734;
	add.s64 	%rd2325, %rd2324, %rd2067;
	add.s64 	%rd2326, %rd2325, %rd2318;
	add.s64 	%rd2327, %rd2326, %rd2191;
	xor.b64  	%rd2328, %rd2265, %rd2228;
	and.b64  	%rd2329, %rd2302, %rd2328;
	xor.b64  	%rd2330, %rd2329, %rd2228;
	add.s64 	%rd2331, %rd2327, %rd2330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd2302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd2302;
	}
	shf.r.wrap.b32 	%r1479, %r1478, %r1477, 14;
	shf.r.wrap.b32 	%r1480, %r1477, %r1478, 14;
	mov.b64 	%rd2332, {%r1480, %r1479};
	shf.r.wrap.b32 	%r1481, %r1478, %r1477, 18;
	shf.r.wrap.b32 	%r1482, %r1477, %r1478, 18;
	mov.b64 	%rd2333, {%r1482, %r1481};
	xor.b64  	%rd2334, %rd2332, %rd2333;
	shf.l.wrap.b32 	%r1483, %r1477, %r1478, 23;
	shf.l.wrap.b32 	%r1484, %r1478, %r1477, 23;
	mov.b64 	%rd2335, {%r1484, %r1483};
	xor.b64  	%rd2336, %rd2334, %rd2335;
	add.s64 	%rd2337, %rd2331, %rd2336;
	add.s64 	%rd2338, %rd2337, 8399075790359081724;
	add.s64 	%rd2339, %rd2338, %rd2202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1485,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1486}, %rd2313;
	}
	shf.r.wrap.b32 	%r1487, %r1486, %r1485, 28;
	shf.r.wrap.b32 	%r1488, %r1485, %r1486, 28;
	mov.b64 	%rd2340, {%r1488, %r1487};
	shf.l.wrap.b32 	%r1489, %r1485, %r1486, 30;
	shf.l.wrap.b32 	%r1490, %r1486, %r1485, 30;
	mov.b64 	%rd2341, {%r1490, %r1489};
	xor.b64  	%rd2342, %rd2340, %rd2341;
	shf.l.wrap.b32 	%r1491, %r1485, %r1486, 25;
	shf.l.wrap.b32 	%r1492, %r1486, %r1485, 25;
	mov.b64 	%rd2343, {%r1492, %r1491};
	xor.b64  	%rd2344, %rd2342, %rd2343;
	and.b64  	%rd2345, %rd2313, %rd2276;
	or.b64  	%rd2346, %rd2313, %rd2276;
	and.b64  	%rd2347, %rd2346, %rd2239;
	or.b64  	%rd2348, %rd2347, %rd2345;
	add.s64 	%rd2349, %rd2348, %rd2344;
	add.s64 	%rd2350, %rd2349, %rd2338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd2289;
	}
	shf.r.wrap.b32 	%r1495, %r1494, %r1493, 19;
	shf.r.wrap.b32 	%r1496, %r1493, %r1494, 19;
	mov.b64 	%rd2351, {%r1496, %r1495};
	shf.l.wrap.b32 	%r1497, %r1493, %r1494, 3;
	shf.l.wrap.b32 	%r1498, %r1494, %r1493, 3;
	mov.b64 	%rd2352, {%r1498, %r1497};
	xor.b64  	%rd2353, %rd2351, %rd2352;
	shr.u64 	%rd2354, %rd2289, 6;
	xor.b64  	%rd2355, %rd2353, %rd2354;
	shf.r.wrap.b32 	%r1499, %r1156, %r1155, 1;
	shf.r.wrap.b32 	%r1500, %r1155, %r1156, 1;
	mov.b64 	%rd2356, {%r1500, %r1499};
	shf.r.wrap.b32 	%r1501, %r1156, %r1155, 8;
	shf.r.wrap.b32 	%r1502, %r1155, %r1156, 8;
	mov.b64 	%rd2357, {%r1502, %r1501};
	xor.b64  	%rd2358, %rd2356, %rd2357;
	shr.u64 	%rd2359, %rd1808, 7;
	xor.b64  	%rd2360, %rd2358, %rd2359;
	add.s64 	%rd2361, %rd2360, %rd1771;
	add.s64 	%rd2362, %rd2361, %rd2104;
	add.s64 	%rd2363, %rd2362, %rd2355;
	add.s64 	%rd2364, %rd2363, %rd2228;
	xor.b64  	%rd2365, %rd2302, %rd2265;
	and.b64  	%rd2366, %rd2339, %rd2365;
	xor.b64  	%rd2367, %rd2366, %rd2265;
	add.s64 	%rd2368, %rd2364, %rd2367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1503,%dummy}, %rd2339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1504}, %rd2339;
	}
	shf.r.wrap.b32 	%r1505, %r1504, %r1503, 14;
	shf.r.wrap.b32 	%r1506, %r1503, %r1504, 14;
	mov.b64 	%rd2369, {%r1506, %r1505};
	shf.r.wrap.b32 	%r1507, %r1504, %r1503, 18;
	shf.r.wrap.b32 	%r1508, %r1503, %r1504, 18;
	mov.b64 	%rd2370, {%r1508, %r1507};
	xor.b64  	%rd2371, %rd2369, %rd2370;
	shf.l.wrap.b32 	%r1509, %r1503, %r1504, 23;
	shf.l.wrap.b32 	%r1510, %r1504, %r1503, 23;
	mov.b64 	%rd2372, {%r1510, %r1509};
	xor.b64  	%rd2373, %rd2371, %rd2372;
	add.s64 	%rd2374, %rd2368, %rd2373;
	add.s64 	%rd2375, %rd2374, 8693463985226723168;
	add.s64 	%rd2376, %rd2375, %rd2239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd2350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd2350;
	}
	shf.r.wrap.b32 	%r1513, %r1512, %r1511, 28;
	shf.r.wrap.b32 	%r1514, %r1511, %r1512, 28;
	mov.b64 	%rd2377, {%r1514, %r1513};
	shf.l.wrap.b32 	%r1515, %r1511, %r1512, 30;
	shf.l.wrap.b32 	%r1516, %r1512, %r1511, 30;
	mov.b64 	%rd2378, {%r1516, %r1515};
	xor.b64  	%rd2379, %rd2377, %rd2378;
	shf.l.wrap.b32 	%r1517, %r1511, %r1512, 25;
	shf.l.wrap.b32 	%r1518, %r1512, %r1511, 25;
	mov.b64 	%rd2380, {%r1518, %r1517};
	xor.b64  	%rd2381, %rd2379, %rd2380;
	and.b64  	%rd2382, %rd2350, %rd2313;
	or.b64  	%rd2383, %rd2350, %rd2313;
	and.b64  	%rd2384, %rd2383, %rd2276;
	or.b64  	%rd2385, %rd2384, %rd2382;
	add.s64 	%rd2386, %rd2385, %rd2381;
	add.s64 	%rd2387, %rd2386, %rd2375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1519,%dummy}, %rd2326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1520}, %rd2326;
	}
	shf.r.wrap.b32 	%r1521, %r1520, %r1519, 19;
	shf.r.wrap.b32 	%r1522, %r1519, %r1520, 19;
	mov.b64 	%rd2388, {%r1522, %r1521};
	shf.l.wrap.b32 	%r1523, %r1519, %r1520, 3;
	shf.l.wrap.b32 	%r1524, %r1520, %r1519, 3;
	mov.b64 	%rd2389, {%r1524, %r1523};
	xor.b64  	%rd2390, %rd2388, %rd2389;
	shr.u64 	%rd2391, %rd2326, 6;
	xor.b64  	%rd2392, %rd2390, %rd2391;
	shf.r.wrap.b32 	%r1525, %r1182, %r1181, 1;
	shf.r.wrap.b32 	%r1526, %r1181, %r1182, 1;
	mov.b64 	%rd2393, {%r1526, %r1525};
	shf.r.wrap.b32 	%r1527, %r1182, %r1181, 8;
	shf.r.wrap.b32 	%r1528, %r1181, %r1182, 8;
	mov.b64 	%rd2394, {%r1528, %r1527};
	xor.b64  	%rd2395, %rd2393, %rd2394;
	shr.u64 	%rd2396, %rd1845, 7;
	xor.b64  	%rd2397, %rd2395, %rd2396;
	add.s64 	%rd2398, %rd2397, %rd1808;
	add.s64 	%rd2399, %rd2398, %rd2141;
	add.s64 	%rd2400, %rd2399, %rd2392;
	add.s64 	%rd2401, %rd2400, %rd2265;
	xor.b64  	%rd2402, %rd2339, %rd2302;
	and.b64  	%rd2403, %rd2376, %rd2402;
	xor.b64  	%rd2404, %rd2403, %rd2302;
	add.s64 	%rd2405, %rd2401, %rd2404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1529,%dummy}, %rd2376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1530}, %rd2376;
	}
	shf.r.wrap.b32 	%r1531, %r1530, %r1529, 14;
	shf.r.wrap.b32 	%r1532, %r1529, %r1530, 14;
	mov.b64 	%rd2406, {%r1532, %r1531};
	shf.r.wrap.b32 	%r1533, %r1530, %r1529, 18;
	shf.r.wrap.b32 	%r1534, %r1529, %r1530, 18;
	mov.b64 	%rd2407, {%r1534, %r1533};
	xor.b64  	%rd2408, %rd2406, %rd2407;
	shf.l.wrap.b32 	%r1535, %r1529, %r1530, 23;
	shf.l.wrap.b32 	%r1536, %r1530, %r1529, 23;
	mov.b64 	%rd2409, {%r1536, %r1535};
	xor.b64  	%rd2410, %rd2408, %rd2409;
	add.s64 	%rd2411, %rd2405, %rd2410;
	add.s64 	%rd2412, %rd2411, -8878714635349349518;
	add.s64 	%rd2413, %rd2412, %rd2276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1537,%dummy}, %rd2387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1538}, %rd2387;
	}
	shf.r.wrap.b32 	%r1539, %r1538, %r1537, 28;
	shf.r.wrap.b32 	%r1540, %r1537, %r1538, 28;
	mov.b64 	%rd2414, {%r1540, %r1539};
	shf.l.wrap.b32 	%r1541, %r1537, %r1538, 30;
	shf.l.wrap.b32 	%r1542, %r1538, %r1537, 30;
	mov.b64 	%rd2415, {%r1542, %r1541};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	shf.l.wrap.b32 	%r1543, %r1537, %r1538, 25;
	shf.l.wrap.b32 	%r1544, %r1538, %r1537, 25;
	mov.b64 	%rd2417, {%r1544, %r1543};
	xor.b64  	%rd2418, %rd2416, %rd2417;
	and.b64  	%rd2419, %rd2387, %rd2350;
	or.b64  	%rd2420, %rd2387, %rd2350;
	and.b64  	%rd2421, %rd2420, %rd2313;
	or.b64  	%rd2422, %rd2421, %rd2419;
	add.s64 	%rd2423, %rd2422, %rd2418;
	add.s64 	%rd2424, %rd2423, %rd2412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1545,%dummy}, %rd2363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1546}, %rd2363;
	}
	shf.r.wrap.b32 	%r1547, %r1546, %r1545, 19;
	shf.r.wrap.b32 	%r1548, %r1545, %r1546, 19;
	mov.b64 	%rd2425, {%r1548, %r1547};
	shf.l.wrap.b32 	%r1549, %r1545, %r1546, 3;
	shf.l.wrap.b32 	%r1550, %r1546, %r1545, 3;
	mov.b64 	%rd2426, {%r1550, %r1549};
	xor.b64  	%rd2427, %rd2425, %rd2426;
	shr.u64 	%rd2428, %rd2363, 6;
	xor.b64  	%rd2429, %rd2427, %rd2428;
	shf.r.wrap.b32 	%r1551, %r1208, %r1207, 1;
	shf.r.wrap.b32 	%r1552, %r1207, %r1208, 1;
	mov.b64 	%rd2430, {%r1552, %r1551};
	shf.r.wrap.b32 	%r1553, %r1208, %r1207, 8;
	shf.r.wrap.b32 	%r1554, %r1207, %r1208, 8;
	mov.b64 	%rd2431, {%r1554, %r1553};
	xor.b64  	%rd2432, %rd2430, %rd2431;
	shr.u64 	%rd2433, %rd1882, 7;
	xor.b64  	%rd2434, %rd2432, %rd2433;
	add.s64 	%rd2435, %rd2434, %rd1845;
	add.s64 	%rd2436, %rd2435, %rd2178;
	add.s64 	%rd2437, %rd2436, %rd2429;
	add.s64 	%rd2438, %rd2437, %rd2302;
	xor.b64  	%rd2439, %rd2376, %rd2339;
	and.b64  	%rd2440, %rd2413, %rd2439;
	xor.b64  	%rd2441, %rd2440, %rd2339;
	add.s64 	%rd2442, %rd2438, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1555,%dummy}, %rd2413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1556}, %rd2413;
	}
	shf.r.wrap.b32 	%r1557, %r1556, %r1555, 14;
	shf.r.wrap.b32 	%r1558, %r1555, %r1556, 14;
	mov.b64 	%rd2443, {%r1558, %r1557};
	shf.r.wrap.b32 	%r1559, %r1556, %r1555, 18;
	shf.r.wrap.b32 	%r1560, %r1555, %r1556, 18;
	mov.b64 	%rd2444, {%r1560, %r1559};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	shf.l.wrap.b32 	%r1561, %r1555, %r1556, 23;
	shf.l.wrap.b32 	%r1562, %r1556, %r1555, 23;
	mov.b64 	%rd2446, {%r1562, %r1561};
	xor.b64  	%rd2447, %rd2445, %rd2446;
	add.s64 	%rd2448, %rd2442, %rd2447;
	add.s64 	%rd2449, %rd2448, -8302665154208450068;
	add.s64 	%rd2450, %rd2449, %rd2313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1563,%dummy}, %rd2424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1564}, %rd2424;
	}
	shf.r.wrap.b32 	%r1565, %r1564, %r1563, 28;
	shf.r.wrap.b32 	%r1566, %r1563, %r1564, 28;
	mov.b64 	%rd2451, {%r1566, %r1565};
	shf.l.wrap.b32 	%r1567, %r1563, %r1564, 30;
	shf.l.wrap.b32 	%r1568, %r1564, %r1563, 30;
	mov.b64 	%rd2452, {%r1568, %r1567};
	xor.b64  	%rd2453, %rd2451, %rd2452;
	shf.l.wrap.b32 	%r1569, %r1563, %r1564, 25;
	shf.l.wrap.b32 	%r1570, %r1564, %r1563, 25;
	mov.b64 	%rd2454, {%r1570, %r1569};
	xor.b64  	%rd2455, %rd2453, %rd2454;
	and.b64  	%rd2456, %rd2424, %rd2387;
	or.b64  	%rd2457, %rd2424, %rd2387;
	and.b64  	%rd2458, %rd2457, %rd2350;
	or.b64  	%rd2459, %rd2458, %rd2456;
	add.s64 	%rd2460, %rd2459, %rd2455;
	add.s64 	%rd2461, %rd2460, %rd2449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1571,%dummy}, %rd2400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1572}, %rd2400;
	}
	shf.r.wrap.b32 	%r1573, %r1572, %r1571, 19;
	shf.r.wrap.b32 	%r1574, %r1571, %r1572, 19;
	mov.b64 	%rd2462, {%r1574, %r1573};
	shf.l.wrap.b32 	%r1575, %r1571, %r1572, 3;
	shf.l.wrap.b32 	%r1576, %r1572, %r1571, 3;
	mov.b64 	%rd2463, {%r1576, %r1575};
	xor.b64  	%rd2464, %rd2462, %rd2463;
	shr.u64 	%rd2465, %rd2400, 6;
	xor.b64  	%rd2466, %rd2464, %rd2465;
	shf.r.wrap.b32 	%r1577, %r1234, %r1233, 1;
	shf.r.wrap.b32 	%r1578, %r1233, %r1234, 1;
	mov.b64 	%rd2467, {%r1578, %r1577};
	shf.r.wrap.b32 	%r1579, %r1234, %r1233, 8;
	shf.r.wrap.b32 	%r1580, %r1233, %r1234, 8;
	mov.b64 	%rd2468, {%r1580, %r1579};
	xor.b64  	%rd2469, %rd2467, %rd2468;
	shr.u64 	%rd2470, %rd1919, 7;
	xor.b64  	%rd2471, %rd2469, %rd2470;
	add.s64 	%rd2472, %rd2471, %rd1882;
	add.s64 	%rd2473, %rd2472, %rd2215;
	add.s64 	%rd2474, %rd2473, %rd2466;
	add.s64 	%rd2475, %rd2474, %rd2339;
	xor.b64  	%rd2476, %rd2413, %rd2376;
	and.b64  	%rd2477, %rd2450, %rd2476;
	xor.b64  	%rd2478, %rd2477, %rd2376;
	add.s64 	%rd2479, %rd2475, %rd2478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1581,%dummy}, %rd2450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1582}, %rd2450;
	}
	shf.r.wrap.b32 	%r1583, %r1582, %r1581, 14;
	shf.r.wrap.b32 	%r1584, %r1581, %r1582, 14;
	mov.b64 	%rd2480, {%r1584, %r1583};
	shf.r.wrap.b32 	%r1585, %r1582, %r1581, 18;
	shf.r.wrap.b32 	%r1586, %r1581, %r1582, 18;
	mov.b64 	%rd2481, {%r1586, %r1585};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	shf.l.wrap.b32 	%r1587, %r1581, %r1582, 23;
	shf.l.wrap.b32 	%r1588, %r1582, %r1581, 23;
	mov.b64 	%rd2483, {%r1588, %r1587};
	xor.b64  	%rd2484, %rd2482, %rd2483;
	add.s64 	%rd2485, %rd2479, %rd2484;
	add.s64 	%rd2486, %rd2485, -8016688836872298968;
	add.s64 	%rd2487, %rd2486, %rd2350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1589,%dummy}, %rd2461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1590}, %rd2461;
	}
	shf.r.wrap.b32 	%r1591, %r1590, %r1589, 28;
	shf.r.wrap.b32 	%r1592, %r1589, %r1590, 28;
	mov.b64 	%rd2488, {%r1592, %r1591};
	shf.l.wrap.b32 	%r1593, %r1589, %r1590, 30;
	shf.l.wrap.b32 	%r1594, %r1590, %r1589, 30;
	mov.b64 	%rd2489, {%r1594, %r1593};
	xor.b64  	%rd2490, %rd2488, %rd2489;
	shf.l.wrap.b32 	%r1595, %r1589, %r1590, 25;
	shf.l.wrap.b32 	%r1596, %r1590, %r1589, 25;
	mov.b64 	%rd2491, {%r1596, %r1595};
	xor.b64  	%rd2492, %rd2490, %rd2491;
	and.b64  	%rd2493, %rd2461, %rd2424;
	or.b64  	%rd2494, %rd2461, %rd2424;
	and.b64  	%rd2495, %rd2494, %rd2387;
	or.b64  	%rd2496, %rd2495, %rd2493;
	add.s64 	%rd2497, %rd2496, %rd2492;
	add.s64 	%rd2498, %rd2497, %rd2486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1597,%dummy}, %rd2437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1598}, %rd2437;
	}
	shf.r.wrap.b32 	%r1599, %r1598, %r1597, 19;
	shf.r.wrap.b32 	%r1600, %r1597, %r1598, 19;
	mov.b64 	%rd2499, {%r1600, %r1599};
	shf.l.wrap.b32 	%r1601, %r1597, %r1598, 3;
	shf.l.wrap.b32 	%r1602, %r1598, %r1597, 3;
	mov.b64 	%rd2500, {%r1602, %r1601};
	xor.b64  	%rd2501, %rd2499, %rd2500;
	shr.u64 	%rd2502, %rd2437, 6;
	xor.b64  	%rd2503, %rd2501, %rd2502;
	shf.r.wrap.b32 	%r1603, %r1260, %r1259, 1;
	shf.r.wrap.b32 	%r1604, %r1259, %r1260, 1;
	mov.b64 	%rd2504, {%r1604, %r1603};
	shf.r.wrap.b32 	%r1605, %r1260, %r1259, 8;
	shf.r.wrap.b32 	%r1606, %r1259, %r1260, 8;
	mov.b64 	%rd2505, {%r1606, %r1605};
	xor.b64  	%rd2506, %rd2504, %rd2505;
	shr.u64 	%rd2507, %rd1956, 7;
	xor.b64  	%rd2508, %rd2506, %rd2507;
	add.s64 	%rd2509, %rd2508, %rd1919;
	add.s64 	%rd2510, %rd2509, %rd2252;
	add.s64 	%rd2511, %rd2510, %rd2503;
	add.s64 	%rd2512, %rd2511, %rd2376;
	xor.b64  	%rd2513, %rd2450, %rd2413;
	and.b64  	%rd2514, %rd2487, %rd2513;
	xor.b64  	%rd2515, %rd2514, %rd2413;
	add.s64 	%rd2516, %rd2512, %rd2515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1607,%dummy}, %rd2487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1608}, %rd2487;
	}
	shf.r.wrap.b32 	%r1609, %r1608, %r1607, 14;
	shf.r.wrap.b32 	%r1610, %r1607, %r1608, 14;
	mov.b64 	%rd2517, {%r1610, %r1609};
	shf.r.wrap.b32 	%r1611, %r1608, %r1607, 18;
	shf.r.wrap.b32 	%r1612, %r1607, %r1608, 18;
	mov.b64 	%rd2518, {%r1612, %r1611};
	xor.b64  	%rd2519, %rd2517, %rd2518;
	shf.l.wrap.b32 	%r1613, %r1607, %r1608, 23;
	shf.l.wrap.b32 	%r1614, %r1608, %r1607, 23;
	mov.b64 	%rd2520, {%r1614, %r1613};
	xor.b64  	%rd2521, %rd2519, %rd2520;
	add.s64 	%rd2522, %rd2516, %rd2521;
	add.s64 	%rd2523, %rd2522, -6606660893046293015;
	add.s64 	%rd2524, %rd2523, %rd2387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1615,%dummy}, %rd2498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1616}, %rd2498;
	}
	shf.r.wrap.b32 	%r1617, %r1616, %r1615, 28;
	shf.r.wrap.b32 	%r1618, %r1615, %r1616, 28;
	mov.b64 	%rd2525, {%r1618, %r1617};
	shf.l.wrap.b32 	%r1619, %r1615, %r1616, 30;
	shf.l.wrap.b32 	%r1620, %r1616, %r1615, 30;
	mov.b64 	%rd2526, {%r1620, %r1619};
	xor.b64  	%rd2527, %rd2525, %rd2526;
	shf.l.wrap.b32 	%r1621, %r1615, %r1616, 25;
	shf.l.wrap.b32 	%r1622, %r1616, %r1615, 25;
	mov.b64 	%rd2528, {%r1622, %r1621};
	xor.b64  	%rd2529, %rd2527, %rd2528;
	and.b64  	%rd2530, %rd2498, %rd2461;
	or.b64  	%rd2531, %rd2498, %rd2461;
	and.b64  	%rd2532, %rd2531, %rd2424;
	or.b64  	%rd2533, %rd2532, %rd2530;
	add.s64 	%rd2534, %rd2533, %rd2529;
	add.s64 	%rd2535, %rd2534, %rd2523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1623,%dummy}, %rd2474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1624}, %rd2474;
	}
	shf.r.wrap.b32 	%r1625, %r1624, %r1623, 19;
	shf.r.wrap.b32 	%r1626, %r1623, %r1624, 19;
	mov.b64 	%rd2536, {%r1626, %r1625};
	shf.l.wrap.b32 	%r1627, %r1623, %r1624, 3;
	shf.l.wrap.b32 	%r1628, %r1624, %r1623, 3;
	mov.b64 	%rd2537, {%r1628, %r1627};
	xor.b64  	%rd2538, %rd2536, %rd2537;
	shr.u64 	%rd2539, %rd2474, 6;
	xor.b64  	%rd2540, %rd2538, %rd2539;
	shf.r.wrap.b32 	%r1629, %r1286, %r1285, 1;
	shf.r.wrap.b32 	%r1630, %r1285, %r1286, 1;
	mov.b64 	%rd2541, {%r1630, %r1629};
	shf.r.wrap.b32 	%r1631, %r1286, %r1285, 8;
	shf.r.wrap.b32 	%r1632, %r1285, %r1286, 8;
	mov.b64 	%rd2542, {%r1632, %r1631};
	xor.b64  	%rd2543, %rd2541, %rd2542;
	shr.u64 	%rd2544, %rd1993, 7;
	xor.b64  	%rd2545, %rd2543, %rd2544;
	add.s64 	%rd2546, %rd2545, %rd1956;
	add.s64 	%rd2547, %rd2546, %rd2289;
	add.s64 	%rd2548, %rd2547, %rd2540;
	add.s64 	%rd2549, %rd2548, %rd2413;
	xor.b64  	%rd2550, %rd2487, %rd2450;
	and.b64  	%rd2551, %rd2524, %rd2550;
	xor.b64  	%rd2552, %rd2551, %rd2450;
	add.s64 	%rd2553, %rd2549, %rd2552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1633,%dummy}, %rd2524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1634}, %rd2524;
	}
	shf.r.wrap.b32 	%r1635, %r1634, %r1633, 14;
	shf.r.wrap.b32 	%r1636, %r1633, %r1634, 14;
	mov.b64 	%rd2554, {%r1636, %r1635};
	shf.r.wrap.b32 	%r1637, %r1634, %r1633, 18;
	shf.r.wrap.b32 	%r1638, %r1633, %r1634, 18;
	mov.b64 	%rd2555, {%r1638, %r1637};
	xor.b64  	%rd2556, %rd2554, %rd2555;
	shf.l.wrap.b32 	%r1639, %r1633, %r1634, 23;
	shf.l.wrap.b32 	%r1640, %r1634, %r1633, 23;
	mov.b64 	%rd2557, {%r1640, %r1639};
	xor.b64  	%rd2558, %rd2556, %rd2557;
	add.s64 	%rd2559, %rd2553, %rd2558;
	add.s64 	%rd2560, %rd2559, -4685533653050689259;
	add.s64 	%rd2561, %rd2560, %rd2424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1641,%dummy}, %rd2535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1642}, %rd2535;
	}
	shf.r.wrap.b32 	%r1643, %r1642, %r1641, 28;
	shf.r.wrap.b32 	%r1644, %r1641, %r1642, 28;
	mov.b64 	%rd2562, {%r1644, %r1643};
	shf.l.wrap.b32 	%r1645, %r1641, %r1642, 30;
	shf.l.wrap.b32 	%r1646, %r1642, %r1641, 30;
	mov.b64 	%rd2563, {%r1646, %r1645};
	xor.b64  	%rd2564, %rd2562, %rd2563;
	shf.l.wrap.b32 	%r1647, %r1641, %r1642, 25;
	shf.l.wrap.b32 	%r1648, %r1642, %r1641, 25;
	mov.b64 	%rd2565, {%r1648, %r1647};
	xor.b64  	%rd2566, %rd2564, %rd2565;
	and.b64  	%rd2567, %rd2535, %rd2498;
	or.b64  	%rd2568, %rd2535, %rd2498;
	and.b64  	%rd2569, %rd2568, %rd2461;
	or.b64  	%rd2570, %rd2569, %rd2567;
	add.s64 	%rd2571, %rd2570, %rd2566;
	add.s64 	%rd2572, %rd2571, %rd2560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1649,%dummy}, %rd2511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1650}, %rd2511;
	}
	shf.r.wrap.b32 	%r1651, %r1650, %r1649, 19;
	shf.r.wrap.b32 	%r1652, %r1649, %r1650, 19;
	mov.b64 	%rd2573, {%r1652, %r1651};
	shf.l.wrap.b32 	%r1653, %r1649, %r1650, 3;
	shf.l.wrap.b32 	%r1654, %r1650, %r1649, 3;
	mov.b64 	%rd2574, {%r1654, %r1653};
	xor.b64  	%rd2575, %rd2573, %rd2574;
	shr.u64 	%rd2576, %rd2511, 6;
	xor.b64  	%rd2577, %rd2575, %rd2576;
	shf.r.wrap.b32 	%r1655, %r1312, %r1311, 1;
	shf.r.wrap.b32 	%r1656, %r1311, %r1312, 1;
	mov.b64 	%rd2578, {%r1656, %r1655};
	shf.r.wrap.b32 	%r1657, %r1312, %r1311, 8;
	shf.r.wrap.b32 	%r1658, %r1311, %r1312, 8;
	mov.b64 	%rd2579, {%r1658, %r1657};
	xor.b64  	%rd2580, %rd2578, %rd2579;
	shr.u64 	%rd2581, %rd2030, 7;
	xor.b64  	%rd2582, %rd2580, %rd2581;
	add.s64 	%rd2583, %rd2582, %rd1993;
	add.s64 	%rd2584, %rd2583, %rd2326;
	add.s64 	%rd2585, %rd2584, %rd2577;
	add.s64 	%rd2586, %rd2585, %rd2450;
	xor.b64  	%rd2587, %rd2524, %rd2487;
	and.b64  	%rd2588, %rd2561, %rd2587;
	xor.b64  	%rd2589, %rd2588, %rd2487;
	add.s64 	%rd2590, %rd2586, %rd2589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1659,%dummy}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1660}, %rd2561;
	}
	shf.r.wrap.b32 	%r1661, %r1660, %r1659, 14;
	shf.r.wrap.b32 	%r1662, %r1659, %r1660, 14;
	mov.b64 	%rd2591, {%r1662, %r1661};
	shf.r.wrap.b32 	%r1663, %r1660, %r1659, 18;
	shf.r.wrap.b32 	%r1664, %r1659, %r1660, 18;
	mov.b64 	%rd2592, {%r1664, %r1663};
	xor.b64  	%rd2593, %rd2591, %rd2592;
	shf.l.wrap.b32 	%r1665, %r1659, %r1660, 23;
	shf.l.wrap.b32 	%r1666, %r1660, %r1659, 23;
	mov.b64 	%rd2594, {%r1666, %r1665};
	xor.b64  	%rd2595, %rd2593, %rd2594;
	add.s64 	%rd2596, %rd2590, %rd2595;
	add.s64 	%rd2597, %rd2596, -4147400797238176981;
	add.s64 	%rd2598, %rd2597, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1667,%dummy}, %rd2572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1668}, %rd2572;
	}
	shf.r.wrap.b32 	%r1669, %r1668, %r1667, 28;
	shf.r.wrap.b32 	%r1670, %r1667, %r1668, 28;
	mov.b64 	%rd2599, {%r1670, %r1669};
	shf.l.wrap.b32 	%r1671, %r1667, %r1668, 30;
	shf.l.wrap.b32 	%r1672, %r1668, %r1667, 30;
	mov.b64 	%rd2600, {%r1672, %r1671};
	xor.b64  	%rd2601, %rd2599, %rd2600;
	shf.l.wrap.b32 	%r1673, %r1667, %r1668, 25;
	shf.l.wrap.b32 	%r1674, %r1668, %r1667, 25;
	mov.b64 	%rd2602, {%r1674, %r1673};
	xor.b64  	%rd2603, %rd2601, %rd2602;
	and.b64  	%rd2604, %rd2572, %rd2535;
	or.b64  	%rd2605, %rd2572, %rd2535;
	and.b64  	%rd2606, %rd2605, %rd2498;
	or.b64  	%rd2607, %rd2606, %rd2604;
	add.s64 	%rd2608, %rd2607, %rd2603;
	add.s64 	%rd2609, %rd2608, %rd2597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1675,%dummy}, %rd2548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1676}, %rd2548;
	}
	shf.r.wrap.b32 	%r1677, %r1676, %r1675, 19;
	shf.r.wrap.b32 	%r1678, %r1675, %r1676, 19;
	mov.b64 	%rd2610, {%r1678, %r1677};
	shf.l.wrap.b32 	%r1679, %r1675, %r1676, 3;
	shf.l.wrap.b32 	%r1680, %r1676, %r1675, 3;
	mov.b64 	%rd2611, {%r1680, %r1679};
	xor.b64  	%rd2612, %rd2610, %rd2611;
	shr.u64 	%rd2613, %rd2548, 6;
	xor.b64  	%rd2614, %rd2612, %rd2613;
	shf.r.wrap.b32 	%r1681, %r1338, %r1337, 1;
	shf.r.wrap.b32 	%r1682, %r1337, %r1338, 1;
	mov.b64 	%rd2615, {%r1682, %r1681};
	shf.r.wrap.b32 	%r1683, %r1338, %r1337, 8;
	shf.r.wrap.b32 	%r1684, %r1337, %r1338, 8;
	mov.b64 	%rd2616, {%r1684, %r1683};
	xor.b64  	%rd2617, %rd2615, %rd2616;
	shr.u64 	%rd2618, %rd2067, 7;
	xor.b64  	%rd2619, %rd2617, %rd2618;
	add.s64 	%rd2620, %rd2619, %rd2030;
	add.s64 	%rd2621, %rd2620, %rd2363;
	add.s64 	%rd2622, %rd2621, %rd2614;
	add.s64 	%rd2623, %rd2622, %rd2487;
	xor.b64  	%rd2624, %rd2561, %rd2524;
	and.b64  	%rd2625, %rd2598, %rd2624;
	xor.b64  	%rd2626, %rd2625, %rd2524;
	add.s64 	%rd2627, %rd2623, %rd2626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1685,%dummy}, %rd2598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1686}, %rd2598;
	}
	shf.r.wrap.b32 	%r1687, %r1686, %r1685, 14;
	shf.r.wrap.b32 	%r1688, %r1685, %r1686, 14;
	mov.b64 	%rd2628, {%r1688, %r1687};
	shf.r.wrap.b32 	%r1689, %r1686, %r1685, 18;
	shf.r.wrap.b32 	%r1690, %r1685, %r1686, 18;
	mov.b64 	%rd2629, {%r1690, %r1689};
	xor.b64  	%rd2630, %rd2628, %rd2629;
	shf.l.wrap.b32 	%r1691, %r1685, %r1686, 23;
	shf.l.wrap.b32 	%r1692, %r1686, %r1685, 23;
	mov.b64 	%rd2631, {%r1692, %r1691};
	xor.b64  	%rd2632, %rd2630, %rd2631;
	add.s64 	%rd2633, %rd2627, %rd2632;
	add.s64 	%rd2634, %rd2633, -3880063495543823972;
	add.s64 	%rd2635, %rd2634, %rd2498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1693,%dummy}, %rd2609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1694}, %rd2609;
	}
	shf.r.wrap.b32 	%r1695, %r1694, %r1693, 28;
	shf.r.wrap.b32 	%r1696, %r1693, %r1694, 28;
	mov.b64 	%rd2636, {%r1696, %r1695};
	shf.l.wrap.b32 	%r1697, %r1693, %r1694, 30;
	shf.l.wrap.b32 	%r1698, %r1694, %r1693, 30;
	mov.b64 	%rd2637, {%r1698, %r1697};
	xor.b64  	%rd2638, %rd2636, %rd2637;
	shf.l.wrap.b32 	%r1699, %r1693, %r1694, 25;
	shf.l.wrap.b32 	%r1700, %r1694, %r1693, 25;
	mov.b64 	%rd2639, {%r1700, %r1699};
	xor.b64  	%rd2640, %rd2638, %rd2639;
	and.b64  	%rd2641, %rd2609, %rd2572;
	or.b64  	%rd2642, %rd2609, %rd2572;
	and.b64  	%rd2643, %rd2642, %rd2535;
	or.b64  	%rd2644, %rd2643, %rd2641;
	add.s64 	%rd2645, %rd2644, %rd2640;
	add.s64 	%rd2646, %rd2645, %rd2634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1701,%dummy}, %rd2585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1702}, %rd2585;
	}
	shf.r.wrap.b32 	%r1703, %r1702, %r1701, 19;
	shf.r.wrap.b32 	%r1704, %r1701, %r1702, 19;
	mov.b64 	%rd2647, {%r1704, %r1703};
	shf.l.wrap.b32 	%r1705, %r1701, %r1702, 3;
	shf.l.wrap.b32 	%r1706, %r1702, %r1701, 3;
	mov.b64 	%rd2648, {%r1706, %r1705};
	xor.b64  	%rd2649, %rd2647, %rd2648;
	shr.u64 	%rd2650, %rd2585, 6;
	xor.b64  	%rd2651, %rd2649, %rd2650;
	shf.r.wrap.b32 	%r1707, %r1364, %r1363, 1;
	shf.r.wrap.b32 	%r1708, %r1363, %r1364, 1;
	mov.b64 	%rd2652, {%r1708, %r1707};
	shf.r.wrap.b32 	%r1709, %r1364, %r1363, 8;
	shf.r.wrap.b32 	%r1710, %r1363, %r1364, 8;
	mov.b64 	%rd2653, {%r1710, %r1709};
	xor.b64  	%rd2654, %rd2652, %rd2653;
	shr.u64 	%rd2655, %rd2104, 7;
	xor.b64  	%rd2656, %rd2654, %rd2655;
	add.s64 	%rd2657, %rd2656, %rd2067;
	add.s64 	%rd2658, %rd2657, %rd2400;
	add.s64 	%rd2659, %rd2658, %rd2651;
	add.s64 	%rd2660, %rd2659, %rd2524;
	xor.b64  	%rd2661, %rd2598, %rd2561;
	and.b64  	%rd2662, %rd2635, %rd2661;
	xor.b64  	%rd2663, %rd2662, %rd2561;
	add.s64 	%rd2664, %rd2660, %rd2663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd2635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd2635;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 14;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 14;
	mov.b64 	%rd2665, {%r1714, %r1713};
	shf.r.wrap.b32 	%r1715, %r1712, %r1711, 18;
	shf.r.wrap.b32 	%r1716, %r1711, %r1712, 18;
	mov.b64 	%rd2666, {%r1716, %r1715};
	xor.b64  	%rd2667, %rd2665, %rd2666;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 23;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 23;
	mov.b64 	%rd2668, {%r1718, %r1717};
	xor.b64  	%rd2669, %rd2667, %rd2668;
	add.s64 	%rd2670, %rd2664, %rd2669;
	add.s64 	%rd2671, %rd2670, -3348786107499101689;
	add.s64 	%rd2672, %rd2671, %rd2535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2646;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 28;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 28;
	mov.b64 	%rd2673, {%r1722, %r1721};
	shf.l.wrap.b32 	%r1723, %r1719, %r1720, 30;
	shf.l.wrap.b32 	%r1724, %r1720, %r1719, 30;
	mov.b64 	%rd2674, {%r1724, %r1723};
	xor.b64  	%rd2675, %rd2673, %rd2674;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 25;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 25;
	mov.b64 	%rd2676, {%r1726, %r1725};
	xor.b64  	%rd2677, %rd2675, %rd2676;
	and.b64  	%rd2678, %rd2646, %rd2609;
	or.b64  	%rd2679, %rd2646, %rd2609;
	and.b64  	%rd2680, %rd2679, %rd2572;
	or.b64  	%rd2681, %rd2680, %rd2678;
	add.s64 	%rd2682, %rd2681, %rd2677;
	add.s64 	%rd2683, %rd2682, %rd2671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd2622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd2622;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 19;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 19;
	mov.b64 	%rd2684, {%r1730, %r1729};
	shf.l.wrap.b32 	%r1731, %r1727, %r1728, 3;
	shf.l.wrap.b32 	%r1732, %r1728, %r1727, 3;
	mov.b64 	%rd2685, {%r1732, %r1731};
	xor.b64  	%rd2686, %rd2684, %rd2685;
	shr.u64 	%rd2687, %rd2622, 6;
	xor.b64  	%rd2688, %rd2686, %rd2687;
	shf.r.wrap.b32 	%r1733, %r1390, %r1389, 1;
	shf.r.wrap.b32 	%r1734, %r1389, %r1390, 1;
	mov.b64 	%rd2689, {%r1734, %r1733};
	shf.r.wrap.b32 	%r1735, %r1390, %r1389, 8;
	shf.r.wrap.b32 	%r1736, %r1389, %r1390, 8;
	mov.b64 	%rd2690, {%r1736, %r1735};
	xor.b64  	%rd2691, %rd2689, %rd2690;
	shr.u64 	%rd2692, %rd2141, 7;
	xor.b64  	%rd2693, %rd2691, %rd2692;
	add.s64 	%rd2694, %rd2693, %rd2104;
	add.s64 	%rd2695, %rd2694, %rd2437;
	add.s64 	%rd2696, %rd2695, %rd2688;
	add.s64 	%rd2697, %rd2696, %rd2561;
	xor.b64  	%rd2698, %rd2635, %rd2598;
	and.b64  	%rd2699, %rd2672, %rd2698;
	xor.b64  	%rd2700, %rd2699, %rd2598;
	add.s64 	%rd2701, %rd2697, %rd2700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1737,%dummy}, %rd2672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1738}, %rd2672;
	}
	shf.r.wrap.b32 	%r1739, %r1738, %r1737, 14;
	shf.r.wrap.b32 	%r1740, %r1737, %r1738, 14;
	mov.b64 	%rd2702, {%r1740, %r1739};
	shf.r.wrap.b32 	%r1741, %r1738, %r1737, 18;
	shf.r.wrap.b32 	%r1742, %r1737, %r1738, 18;
	mov.b64 	%rd2703, {%r1742, %r1741};
	xor.b64  	%rd2704, %rd2702, %rd2703;
	shf.l.wrap.b32 	%r1743, %r1737, %r1738, 23;
	shf.l.wrap.b32 	%r1744, %r1738, %r1737, 23;
	mov.b64 	%rd2705, {%r1744, %r1743};
	xor.b64  	%rd2706, %rd2704, %rd2705;
	add.s64 	%rd2707, %rd2701, %rd2706;
	add.s64 	%rd2708, %rd2707, -1523767162380948706;
	add.s64 	%rd2709, %rd2708, %rd2572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1745,%dummy}, %rd2683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1746}, %rd2683;
	}
	shf.r.wrap.b32 	%r1747, %r1746, %r1745, 28;
	shf.r.wrap.b32 	%r1748, %r1745, %r1746, 28;
	mov.b64 	%rd2710, {%r1748, %r1747};
	shf.l.wrap.b32 	%r1749, %r1745, %r1746, 30;
	shf.l.wrap.b32 	%r1750, %r1746, %r1745, 30;
	mov.b64 	%rd2711, {%r1750, %r1749};
	xor.b64  	%rd2712, %rd2710, %rd2711;
	shf.l.wrap.b32 	%r1751, %r1745, %r1746, 25;
	shf.l.wrap.b32 	%r1752, %r1746, %r1745, 25;
	mov.b64 	%rd2713, {%r1752, %r1751};
	xor.b64  	%rd2714, %rd2712, %rd2713;
	and.b64  	%rd2715, %rd2683, %rd2646;
	or.b64  	%rd2716, %rd2683, %rd2646;
	and.b64  	%rd2717, %rd2716, %rd2609;
	or.b64  	%rd2718, %rd2717, %rd2715;
	add.s64 	%rd2719, %rd2718, %rd2714;
	add.s64 	%rd2720, %rd2719, %rd2708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1753,%dummy}, %rd2659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1754}, %rd2659;
	}
	shf.r.wrap.b32 	%r1755, %r1754, %r1753, 19;
	shf.r.wrap.b32 	%r1756, %r1753, %r1754, 19;
	mov.b64 	%rd2721, {%r1756, %r1755};
	shf.l.wrap.b32 	%r1757, %r1753, %r1754, 3;
	shf.l.wrap.b32 	%r1758, %r1754, %r1753, 3;
	mov.b64 	%rd2722, {%r1758, %r1757};
	xor.b64  	%rd2723, %rd2721, %rd2722;
	shr.u64 	%rd2724, %rd2659, 6;
	xor.b64  	%rd2725, %rd2723, %rd2724;
	shf.r.wrap.b32 	%r1759, %r1416, %r1415, 1;
	shf.r.wrap.b32 	%r1760, %r1415, %r1416, 1;
	mov.b64 	%rd2726, {%r1760, %r1759};
	shf.r.wrap.b32 	%r1761, %r1416, %r1415, 8;
	shf.r.wrap.b32 	%r1762, %r1415, %r1416, 8;
	mov.b64 	%rd2727, {%r1762, %r1761};
	xor.b64  	%rd2728, %rd2726, %rd2727;
	shr.u64 	%rd2729, %rd2178, 7;
	xor.b64  	%rd2730, %rd2728, %rd2729;
	add.s64 	%rd2731, %rd2730, %rd2141;
	add.s64 	%rd2732, %rd2731, %rd2474;
	add.s64 	%rd2733, %rd2732, %rd2725;
	add.s64 	%rd2734, %rd2733, %rd2598;
	xor.b64  	%rd2735, %rd2672, %rd2635;
	and.b64  	%rd2736, %rd2709, %rd2735;
	xor.b64  	%rd2737, %rd2736, %rd2635;
	add.s64 	%rd2738, %rd2734, %rd2737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1763,%dummy}, %rd2709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1764}, %rd2709;
	}
	shf.r.wrap.b32 	%r1765, %r1764, %r1763, 14;
	shf.r.wrap.b32 	%r1766, %r1763, %r1764, 14;
	mov.b64 	%rd2739, {%r1766, %r1765};
	shf.r.wrap.b32 	%r1767, %r1764, %r1763, 18;
	shf.r.wrap.b32 	%r1768, %r1763, %r1764, 18;
	mov.b64 	%rd2740, {%r1768, %r1767};
	xor.b64  	%rd2741, %rd2739, %rd2740;
	shf.l.wrap.b32 	%r1769, %r1763, %r1764, 23;
	shf.l.wrap.b32 	%r1770, %r1764, %r1763, 23;
	mov.b64 	%rd2742, {%r1770, %r1769};
	xor.b64  	%rd2743, %rd2741, %rd2742;
	add.s64 	%rd2744, %rd2738, %rd2743;
	add.s64 	%rd2745, %rd2744, -757361751448694408;
	add.s64 	%rd2746, %rd2745, %rd2609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1771,%dummy}, %rd2720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1772}, %rd2720;
	}
	shf.r.wrap.b32 	%r1773, %r1772, %r1771, 28;
	shf.r.wrap.b32 	%r1774, %r1771, %r1772, 28;
	mov.b64 	%rd2747, {%r1774, %r1773};
	shf.l.wrap.b32 	%r1775, %r1771, %r1772, 30;
	shf.l.wrap.b32 	%r1776, %r1772, %r1771, 30;
	mov.b64 	%rd2748, {%r1776, %r1775};
	xor.b64  	%rd2749, %rd2747, %rd2748;
	shf.l.wrap.b32 	%r1777, %r1771, %r1772, 25;
	shf.l.wrap.b32 	%r1778, %r1772, %r1771, 25;
	mov.b64 	%rd2750, {%r1778, %r1777};
	xor.b64  	%rd2751, %rd2749, %rd2750;
	and.b64  	%rd2752, %rd2720, %rd2683;
	or.b64  	%rd2753, %rd2720, %rd2683;
	and.b64  	%rd2754, %rd2753, %rd2646;
	or.b64  	%rd2755, %rd2754, %rd2752;
	add.s64 	%rd2756, %rd2755, %rd2751;
	add.s64 	%rd2757, %rd2756, %rd2745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1779,%dummy}, %rd2696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1780}, %rd2696;
	}
	shf.r.wrap.b32 	%r1781, %r1780, %r1779, 19;
	shf.r.wrap.b32 	%r1782, %r1779, %r1780, 19;
	mov.b64 	%rd2758, {%r1782, %r1781};
	shf.l.wrap.b32 	%r1783, %r1779, %r1780, 3;
	shf.l.wrap.b32 	%r1784, %r1780, %r1779, 3;
	mov.b64 	%rd2759, {%r1784, %r1783};
	xor.b64  	%rd2760, %rd2758, %rd2759;
	shr.u64 	%rd2761, %rd2696, 6;
	xor.b64  	%rd2762, %rd2760, %rd2761;
	shf.r.wrap.b32 	%r1785, %r1442, %r1441, 1;
	shf.r.wrap.b32 	%r1786, %r1441, %r1442, 1;
	mov.b64 	%rd2763, {%r1786, %r1785};
	shf.r.wrap.b32 	%r1787, %r1442, %r1441, 8;
	shf.r.wrap.b32 	%r1788, %r1441, %r1442, 8;
	mov.b64 	%rd2764, {%r1788, %r1787};
	xor.b64  	%rd2765, %rd2763, %rd2764;
	shr.u64 	%rd2766, %rd2215, 7;
	xor.b64  	%rd2767, %rd2765, %rd2766;
	add.s64 	%rd2768, %rd2767, %rd2178;
	add.s64 	%rd2769, %rd2768, %rd2511;
	add.s64 	%rd2770, %rd2769, %rd2762;
	add.s64 	%rd2771, %rd2770, %rd2635;
	xor.b64  	%rd2772, %rd2709, %rd2672;
	and.b64  	%rd2773, %rd2746, %rd2772;
	xor.b64  	%rd2774, %rd2773, %rd2672;
	add.s64 	%rd2775, %rd2771, %rd2774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1789,%dummy}, %rd2746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1790}, %rd2746;
	}
	shf.r.wrap.b32 	%r1791, %r1790, %r1789, 14;
	shf.r.wrap.b32 	%r1792, %r1789, %r1790, 14;
	mov.b64 	%rd2776, {%r1792, %r1791};
	shf.r.wrap.b32 	%r1793, %r1790, %r1789, 18;
	shf.r.wrap.b32 	%r1794, %r1789, %r1790, 18;
	mov.b64 	%rd2777, {%r1794, %r1793};
	xor.b64  	%rd2778, %rd2776, %rd2777;
	shf.l.wrap.b32 	%r1795, %r1789, %r1790, 23;
	shf.l.wrap.b32 	%r1796, %r1790, %r1789, 23;
	mov.b64 	%rd2779, {%r1796, %r1795};
	xor.b64  	%rd2780, %rd2778, %rd2779;
	add.s64 	%rd2781, %rd2775, %rd2780;
	add.s64 	%rd2782, %rd2781, 500013540394364858;
	add.s64 	%rd2783, %rd2782, %rd2646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd2757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd2757;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 28;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 28;
	mov.b64 	%rd2784, {%r1800, %r1799};
	shf.l.wrap.b32 	%r1801, %r1797, %r1798, 30;
	shf.l.wrap.b32 	%r1802, %r1798, %r1797, 30;
	mov.b64 	%rd2785, {%r1802, %r1801};
	xor.b64  	%rd2786, %rd2784, %rd2785;
	shf.l.wrap.b32 	%r1803, %r1797, %r1798, 25;
	shf.l.wrap.b32 	%r1804, %r1798, %r1797, 25;
	mov.b64 	%rd2787, {%r1804, %r1803};
	xor.b64  	%rd2788, %rd2786, %rd2787;
	and.b64  	%rd2789, %rd2757, %rd2720;
	or.b64  	%rd2790, %rd2757, %rd2720;
	and.b64  	%rd2791, %rd2790, %rd2683;
	or.b64  	%rd2792, %rd2791, %rd2789;
	add.s64 	%rd2793, %rd2792, %rd2788;
	add.s64 	%rd2794, %rd2793, %rd2782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1805,%dummy}, %rd2733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1806}, %rd2733;
	}
	shf.r.wrap.b32 	%r1807, %r1806, %r1805, 19;
	shf.r.wrap.b32 	%r1808, %r1805, %r1806, 19;
	mov.b64 	%rd2795, {%r1808, %r1807};
	shf.l.wrap.b32 	%r1809, %r1805, %r1806, 3;
	shf.l.wrap.b32 	%r1810, %r1806, %r1805, 3;
	mov.b64 	%rd2796, {%r1810, %r1809};
	xor.b64  	%rd2797, %rd2795, %rd2796;
	shr.u64 	%rd2798, %rd2733, 6;
	xor.b64  	%rd2799, %rd2797, %rd2798;
	shf.r.wrap.b32 	%r1811, %r1468, %r1467, 1;
	shf.r.wrap.b32 	%r1812, %r1467, %r1468, 1;
	mov.b64 	%rd2800, {%r1812, %r1811};
	shf.r.wrap.b32 	%r1813, %r1468, %r1467, 8;
	shf.r.wrap.b32 	%r1814, %r1467, %r1468, 8;
	mov.b64 	%rd2801, {%r1814, %r1813};
	xor.b64  	%rd2802, %rd2800, %rd2801;
	shr.u64 	%rd2803, %rd2252, 7;
	xor.b64  	%rd2804, %rd2802, %rd2803;
	add.s64 	%rd2805, %rd2804, %rd2215;
	add.s64 	%rd2806, %rd2805, %rd2548;
	add.s64 	%rd2807, %rd2806, %rd2799;
	add.s64 	%rd2808, %rd2807, %rd2672;
	xor.b64  	%rd2809, %rd2746, %rd2709;
	and.b64  	%rd2810, %rd2783, %rd2809;
	xor.b64  	%rd2811, %rd2810, %rd2709;
	add.s64 	%rd2812, %rd2808, %rd2811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd2783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd2783;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 14;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 14;
	mov.b64 	%rd2813, {%r1818, %r1817};
	shf.r.wrap.b32 	%r1819, %r1816, %r1815, 18;
	shf.r.wrap.b32 	%r1820, %r1815, %r1816, 18;
	mov.b64 	%rd2814, {%r1820, %r1819};
	xor.b64  	%rd2815, %rd2813, %rd2814;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 23;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 23;
	mov.b64 	%rd2816, {%r1822, %r1821};
	xor.b64  	%rd2817, %rd2815, %rd2816;
	add.s64 	%rd2818, %rd2812, %rd2817;
	add.s64 	%rd2819, %rd2818, 748580250866718886;
	add.s64 	%rd2820, %rd2819, %rd2683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1823,%dummy}, %rd2794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd2794;
	}
	shf.r.wrap.b32 	%r1825, %r1824, %r1823, 28;
	shf.r.wrap.b32 	%r1826, %r1823, %r1824, 28;
	mov.b64 	%rd2821, {%r1826, %r1825};
	shf.l.wrap.b32 	%r1827, %r1823, %r1824, 30;
	shf.l.wrap.b32 	%r1828, %r1824, %r1823, 30;
	mov.b64 	%rd2822, {%r1828, %r1827};
	xor.b64  	%rd2823, %rd2821, %rd2822;
	shf.l.wrap.b32 	%r1829, %r1823, %r1824, 25;
	shf.l.wrap.b32 	%r1830, %r1824, %r1823, 25;
	mov.b64 	%rd2824, {%r1830, %r1829};
	xor.b64  	%rd2825, %rd2823, %rd2824;
	and.b64  	%rd2826, %rd2794, %rd2757;
	or.b64  	%rd2827, %rd2794, %rd2757;
	and.b64  	%rd2828, %rd2827, %rd2720;
	or.b64  	%rd2829, %rd2828, %rd2826;
	add.s64 	%rd2830, %rd2829, %rd2825;
	add.s64 	%rd2831, %rd2830, %rd2819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd2770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd2770;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 19;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 19;
	mov.b64 	%rd2832, {%r1834, %r1833};
	shf.l.wrap.b32 	%r1835, %r1831, %r1832, 3;
	shf.l.wrap.b32 	%r1836, %r1832, %r1831, 3;
	mov.b64 	%rd2833, {%r1836, %r1835};
	xor.b64  	%rd2834, %rd2832, %rd2833;
	shr.u64 	%rd2835, %rd2770, 6;
	xor.b64  	%rd2836, %rd2834, %rd2835;
	shf.r.wrap.b32 	%r1837, %r1494, %r1493, 1;
	shf.r.wrap.b32 	%r1838, %r1493, %r1494, 1;
	mov.b64 	%rd2837, {%r1838, %r1837};
	shf.r.wrap.b32 	%r1839, %r1494, %r1493, 8;
	shf.r.wrap.b32 	%r1840, %r1493, %r1494, 8;
	mov.b64 	%rd2838, {%r1840, %r1839};
	xor.b64  	%rd2839, %rd2837, %rd2838;
	shr.u64 	%rd2840, %rd2289, 7;
	xor.b64  	%rd2841, %rd2839, %rd2840;
	add.s64 	%rd2842, %rd2841, %rd2252;
	add.s64 	%rd2843, %rd2842, %rd2585;
	add.s64 	%rd2844, %rd2843, %rd2836;
	add.s64 	%rd2845, %rd2844, %rd2709;
	xor.b64  	%rd2846, %rd2783, %rd2746;
	and.b64  	%rd2847, %rd2820, %rd2846;
	xor.b64  	%rd2848, %rd2847, %rd2746;
	add.s64 	%rd2849, %rd2845, %rd2848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1841,%dummy}, %rd2820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1842}, %rd2820;
	}
	shf.r.wrap.b32 	%r1843, %r1842, %r1841, 14;
	shf.r.wrap.b32 	%r1844, %r1841, %r1842, 14;
	mov.b64 	%rd2850, {%r1844, %r1843};
	shf.r.wrap.b32 	%r1845, %r1842, %r1841, 18;
	shf.r.wrap.b32 	%r1846, %r1841, %r1842, 18;
	mov.b64 	%rd2851, {%r1846, %r1845};
	xor.b64  	%rd2852, %rd2850, %rd2851;
	shf.l.wrap.b32 	%r1847, %r1841, %r1842, 23;
	shf.l.wrap.b32 	%r1848, %r1842, %r1841, 23;
	mov.b64 	%rd2853, {%r1848, %r1847};
	xor.b64  	%rd2854, %rd2852, %rd2853;
	add.s64 	%rd2855, %rd2849, %rd2854;
	add.s64 	%rd2856, %rd2855, 1242879168328830382;
	add.s64 	%rd2857, %rd2856, %rd2720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1849,%dummy}, %rd2831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1850}, %rd2831;
	}
	shf.r.wrap.b32 	%r1851, %r1850, %r1849, 28;
	shf.r.wrap.b32 	%r1852, %r1849, %r1850, 28;
	mov.b64 	%rd2858, {%r1852, %r1851};
	shf.l.wrap.b32 	%r1853, %r1849, %r1850, 30;
	shf.l.wrap.b32 	%r1854, %r1850, %r1849, 30;
	mov.b64 	%rd2859, {%r1854, %r1853};
	xor.b64  	%rd2860, %rd2858, %rd2859;
	shf.l.wrap.b32 	%r1855, %r1849, %r1850, 25;
	shf.l.wrap.b32 	%r1856, %r1850, %r1849, 25;
	mov.b64 	%rd2861, {%r1856, %r1855};
	xor.b64  	%rd2862, %rd2860, %rd2861;
	and.b64  	%rd2863, %rd2831, %rd2794;
	or.b64  	%rd2864, %rd2831, %rd2794;
	and.b64  	%rd2865, %rd2864, %rd2757;
	or.b64  	%rd2866, %rd2865, %rd2863;
	add.s64 	%rd2867, %rd2866, %rd2862;
	add.s64 	%rd2868, %rd2867, %rd2856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1857,%dummy}, %rd2807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1858}, %rd2807;
	}
	shf.r.wrap.b32 	%r1859, %r1858, %r1857, 19;
	shf.r.wrap.b32 	%r1860, %r1857, %r1858, 19;
	mov.b64 	%rd2869, {%r1860, %r1859};
	shf.l.wrap.b32 	%r1861, %r1857, %r1858, 3;
	shf.l.wrap.b32 	%r1862, %r1858, %r1857, 3;
	mov.b64 	%rd2870, {%r1862, %r1861};
	xor.b64  	%rd2871, %rd2869, %rd2870;
	shr.u64 	%rd2872, %rd2807, 6;
	xor.b64  	%rd2873, %rd2871, %rd2872;
	shf.r.wrap.b32 	%r1863, %r1520, %r1519, 1;
	shf.r.wrap.b32 	%r1864, %r1519, %r1520, 1;
	mov.b64 	%rd2874, {%r1864, %r1863};
	shf.r.wrap.b32 	%r1865, %r1520, %r1519, 8;
	shf.r.wrap.b32 	%r1866, %r1519, %r1520, 8;
	mov.b64 	%rd2875, {%r1866, %r1865};
	xor.b64  	%rd2876, %rd2874, %rd2875;
	shr.u64 	%rd2877, %rd2326, 7;
	xor.b64  	%rd2878, %rd2876, %rd2877;
	add.s64 	%rd2879, %rd2878, %rd2289;
	add.s64 	%rd2880, %rd2879, %rd2622;
	add.s64 	%rd2881, %rd2880, %rd2873;
	add.s64 	%rd2882, %rd2881, %rd2746;
	xor.b64  	%rd2883, %rd2820, %rd2783;
	and.b64  	%rd2884, %rd2857, %rd2883;
	xor.b64  	%rd2885, %rd2884, %rd2783;
	add.s64 	%rd2886, %rd2882, %rd2885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1867,%dummy}, %rd2857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1868}, %rd2857;
	}
	shf.r.wrap.b32 	%r1869, %r1868, %r1867, 14;
	shf.r.wrap.b32 	%r1870, %r1867, %r1868, 14;
	mov.b64 	%rd2887, {%r1870, %r1869};
	shf.r.wrap.b32 	%r1871, %r1868, %r1867, 18;
	shf.r.wrap.b32 	%r1872, %r1867, %r1868, 18;
	mov.b64 	%rd2888, {%r1872, %r1871};
	xor.b64  	%rd2889, %rd2887, %rd2888;
	shf.l.wrap.b32 	%r1873, %r1867, %r1868, 23;
	shf.l.wrap.b32 	%r1874, %r1868, %r1867, 23;
	mov.b64 	%rd2890, {%r1874, %r1873};
	xor.b64  	%rd2891, %rd2889, %rd2890;
	add.s64 	%rd2892, %rd2886, %rd2891;
	add.s64 	%rd2893, %rd2892, 1977374033974150939;
	add.s64 	%rd2894, %rd2893, %rd2757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1875,%dummy}, %rd2868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1876}, %rd2868;
	}
	shf.r.wrap.b32 	%r1877, %r1876, %r1875, 28;
	shf.r.wrap.b32 	%r1878, %r1875, %r1876, 28;
	mov.b64 	%rd2895, {%r1878, %r1877};
	shf.l.wrap.b32 	%r1879, %r1875, %r1876, 30;
	shf.l.wrap.b32 	%r1880, %r1876, %r1875, 30;
	mov.b64 	%rd2896, {%r1880, %r1879};
	xor.b64  	%rd2897, %rd2895, %rd2896;
	shf.l.wrap.b32 	%r1881, %r1875, %r1876, 25;
	shf.l.wrap.b32 	%r1882, %r1876, %r1875, 25;
	mov.b64 	%rd2898, {%r1882, %r1881};
	xor.b64  	%rd2899, %rd2897, %rd2898;
	and.b64  	%rd2900, %rd2868, %rd2831;
	or.b64  	%rd2901, %rd2868, %rd2831;
	and.b64  	%rd2902, %rd2901, %rd2794;
	or.b64  	%rd2903, %rd2902, %rd2900;
	add.s64 	%rd2904, %rd2903, %rd2899;
	add.s64 	%rd2905, %rd2904, %rd2893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1883,%dummy}, %rd2844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1884}, %rd2844;
	}
	shf.r.wrap.b32 	%r1885, %r1884, %r1883, 19;
	shf.r.wrap.b32 	%r1886, %r1883, %r1884, 19;
	mov.b64 	%rd2906, {%r1886, %r1885};
	shf.l.wrap.b32 	%r1887, %r1883, %r1884, 3;
	shf.l.wrap.b32 	%r1888, %r1884, %r1883, 3;
	mov.b64 	%rd2907, {%r1888, %r1887};
	xor.b64  	%rd2908, %rd2906, %rd2907;
	shr.u64 	%rd2909, %rd2844, 6;
	xor.b64  	%rd2910, %rd2908, %rd2909;
	shf.r.wrap.b32 	%r1889, %r1546, %r1545, 1;
	shf.r.wrap.b32 	%r1890, %r1545, %r1546, 1;
	mov.b64 	%rd2911, {%r1890, %r1889};
	shf.r.wrap.b32 	%r1891, %r1546, %r1545, 8;
	shf.r.wrap.b32 	%r1892, %r1545, %r1546, 8;
	mov.b64 	%rd2912, {%r1892, %r1891};
	xor.b64  	%rd2913, %rd2911, %rd2912;
	shr.u64 	%rd2914, %rd2363, 7;
	xor.b64  	%rd2915, %rd2913, %rd2914;
	add.s64 	%rd2916, %rd2915, %rd2326;
	add.s64 	%rd2917, %rd2916, %rd2659;
	add.s64 	%rd2918, %rd2917, %rd2910;
	add.s64 	%rd2919, %rd2918, %rd2783;
	xor.b64  	%rd2920, %rd2857, %rd2820;
	and.b64  	%rd2921, %rd2894, %rd2920;
	xor.b64  	%rd2922, %rd2921, %rd2820;
	add.s64 	%rd2923, %rd2919, %rd2922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1893,%dummy}, %rd2894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1894}, %rd2894;
	}
	shf.r.wrap.b32 	%r1895, %r1894, %r1893, 14;
	shf.r.wrap.b32 	%r1896, %r1893, %r1894, 14;
	mov.b64 	%rd2924, {%r1896, %r1895};
	shf.r.wrap.b32 	%r1897, %r1894, %r1893, 18;
	shf.r.wrap.b32 	%r1898, %r1893, %r1894, 18;
	mov.b64 	%rd2925, {%r1898, %r1897};
	xor.b64  	%rd2926, %rd2924, %rd2925;
	shf.l.wrap.b32 	%r1899, %r1893, %r1894, 23;
	shf.l.wrap.b32 	%r1900, %r1894, %r1893, 23;
	mov.b64 	%rd2927, {%r1900, %r1899};
	xor.b64  	%rd2928, %rd2926, %rd2927;
	add.s64 	%rd2929, %rd2923, %rd2928;
	add.s64 	%rd2930, %rd2929, 2944078676154940804;
	add.s64 	%rd2931, %rd2930, %rd2794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1901,%dummy}, %rd2905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1902}, %rd2905;
	}
	shf.r.wrap.b32 	%r1903, %r1902, %r1901, 28;
	shf.r.wrap.b32 	%r1904, %r1901, %r1902, 28;
	mov.b64 	%rd2932, {%r1904, %r1903};
	shf.l.wrap.b32 	%r1905, %r1901, %r1902, 30;
	shf.l.wrap.b32 	%r1906, %r1902, %r1901, 30;
	mov.b64 	%rd2933, {%r1906, %r1905};
	xor.b64  	%rd2934, %rd2932, %rd2933;
	shf.l.wrap.b32 	%r1907, %r1901, %r1902, 25;
	shf.l.wrap.b32 	%r1908, %r1902, %r1901, 25;
	mov.b64 	%rd2935, {%r1908, %r1907};
	xor.b64  	%rd2936, %rd2934, %rd2935;
	and.b64  	%rd2937, %rd2905, %rd2868;
	or.b64  	%rd2938, %rd2905, %rd2868;
	and.b64  	%rd2939, %rd2938, %rd2831;
	or.b64  	%rd2940, %rd2939, %rd2937;
	add.s64 	%rd2941, %rd2940, %rd2936;
	add.s64 	%rd2942, %rd2941, %rd2930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1909,%dummy}, %rd2881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1910}, %rd2881;
	}
	shf.r.wrap.b32 	%r1911, %r1910, %r1909, 19;
	shf.r.wrap.b32 	%r1912, %r1909, %r1910, 19;
	mov.b64 	%rd2943, {%r1912, %r1911};
	shf.l.wrap.b32 	%r1913, %r1909, %r1910, 3;
	shf.l.wrap.b32 	%r1914, %r1910, %r1909, 3;
	mov.b64 	%rd2944, {%r1914, %r1913};
	xor.b64  	%rd2945, %rd2943, %rd2944;
	shr.u64 	%rd2946, %rd2881, 6;
	xor.b64  	%rd2947, %rd2945, %rd2946;
	shf.r.wrap.b32 	%r1915, %r1572, %r1571, 1;
	shf.r.wrap.b32 	%r1916, %r1571, %r1572, 1;
	mov.b64 	%rd2948, {%r1916, %r1915};
	shf.r.wrap.b32 	%r1917, %r1572, %r1571, 8;
	shf.r.wrap.b32 	%r1918, %r1571, %r1572, 8;
	mov.b64 	%rd2949, {%r1918, %r1917};
	xor.b64  	%rd2950, %rd2948, %rd2949;
	shr.u64 	%rd2951, %rd2400, 7;
	xor.b64  	%rd2952, %rd2950, %rd2951;
	add.s64 	%rd2953, %rd2952, %rd2363;
	add.s64 	%rd2954, %rd2953, %rd2696;
	add.s64 	%rd2955, %rd2954, %rd2947;
	add.s64 	%rd2956, %rd2955, %rd2820;
	xor.b64  	%rd2957, %rd2894, %rd2857;
	and.b64  	%rd2958, %rd2931, %rd2957;
	xor.b64  	%rd2959, %rd2958, %rd2857;
	add.s64 	%rd2960, %rd2956, %rd2959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1919,%dummy}, %rd2931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1920}, %rd2931;
	}
	shf.r.wrap.b32 	%r1921, %r1920, %r1919, 14;
	shf.r.wrap.b32 	%r1922, %r1919, %r1920, 14;
	mov.b64 	%rd2961, {%r1922, %r1921};
	shf.r.wrap.b32 	%r1923, %r1920, %r1919, 18;
	shf.r.wrap.b32 	%r1924, %r1919, %r1920, 18;
	mov.b64 	%rd2962, {%r1924, %r1923};
	xor.b64  	%rd2963, %rd2961, %rd2962;
	shf.l.wrap.b32 	%r1925, %r1919, %r1920, 23;
	shf.l.wrap.b32 	%r1926, %r1920, %r1919, 23;
	mov.b64 	%rd2964, {%r1926, %r1925};
	xor.b64  	%rd2965, %rd2963, %rd2964;
	add.s64 	%rd2966, %rd2960, %rd2965;
	add.s64 	%rd2967, %rd2966, 3659926193048069267;
	add.s64 	%rd2968, %rd2967, %rd2831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1927,%dummy}, %rd2942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1928}, %rd2942;
	}
	shf.r.wrap.b32 	%r1929, %r1928, %r1927, 28;
	shf.r.wrap.b32 	%r1930, %r1927, %r1928, 28;
	mov.b64 	%rd2969, {%r1930, %r1929};
	shf.l.wrap.b32 	%r1931, %r1927, %r1928, 30;
	shf.l.wrap.b32 	%r1932, %r1928, %r1927, 30;
	mov.b64 	%rd2970, {%r1932, %r1931};
	xor.b64  	%rd2971, %rd2969, %rd2970;
	shf.l.wrap.b32 	%r1933, %r1927, %r1928, 25;
	shf.l.wrap.b32 	%r1934, %r1928, %r1927, 25;
	mov.b64 	%rd2972, {%r1934, %r1933};
	xor.b64  	%rd2973, %rd2971, %rd2972;
	and.b64  	%rd2974, %rd2942, %rd2905;
	or.b64  	%rd2975, %rd2942, %rd2905;
	and.b64  	%rd2976, %rd2975, %rd2868;
	or.b64  	%rd2977, %rd2976, %rd2974;
	add.s64 	%rd2978, %rd2977, %rd2973;
	add.s64 	%rd2979, %rd2978, %rd2967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1935,%dummy}, %rd2918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1936}, %rd2918;
	}
	shf.r.wrap.b32 	%r1937, %r1936, %r1935, 19;
	shf.r.wrap.b32 	%r1938, %r1935, %r1936, 19;
	mov.b64 	%rd2980, {%r1938, %r1937};
	shf.l.wrap.b32 	%r1939, %r1935, %r1936, 3;
	shf.l.wrap.b32 	%r1940, %r1936, %r1935, 3;
	mov.b64 	%rd2981, {%r1940, %r1939};
	xor.b64  	%rd2982, %rd2980, %rd2981;
	shr.u64 	%rd2983, %rd2918, 6;
	xor.b64  	%rd2984, %rd2982, %rd2983;
	shf.r.wrap.b32 	%r1941, %r1598, %r1597, 1;
	shf.r.wrap.b32 	%r1942, %r1597, %r1598, 1;
	mov.b64 	%rd2985, {%r1942, %r1941};
	shf.r.wrap.b32 	%r1943, %r1598, %r1597, 8;
	shf.r.wrap.b32 	%r1944, %r1597, %r1598, 8;
	mov.b64 	%rd2986, {%r1944, %r1943};
	xor.b64  	%rd2987, %rd2985, %rd2986;
	shr.u64 	%rd2988, %rd2437, 7;
	xor.b64  	%rd2989, %rd2987, %rd2988;
	add.s64 	%rd2990, %rd2989, %rd2400;
	add.s64 	%rd2991, %rd2990, %rd2733;
	add.s64 	%rd2992, %rd2991, %rd2984;
	add.s64 	%rd2993, %rd2992, %rd2857;
	xor.b64  	%rd2994, %rd2931, %rd2894;
	and.b64  	%rd2995, %rd2968, %rd2994;
	xor.b64  	%rd2996, %rd2995, %rd2894;
	add.s64 	%rd2997, %rd2993, %rd2996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1945,%dummy}, %rd2968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1946}, %rd2968;
	}
	shf.r.wrap.b32 	%r1947, %r1946, %r1945, 14;
	shf.r.wrap.b32 	%r1948, %r1945, %r1946, 14;
	mov.b64 	%rd2998, {%r1948, %r1947};
	shf.r.wrap.b32 	%r1949, %r1946, %r1945, 18;
	shf.r.wrap.b32 	%r1950, %r1945, %r1946, 18;
	mov.b64 	%rd2999, {%r1950, %r1949};
	xor.b64  	%rd3000, %rd2998, %rd2999;
	shf.l.wrap.b32 	%r1951, %r1945, %r1946, 23;
	shf.l.wrap.b32 	%r1952, %r1946, %r1945, 23;
	mov.b64 	%rd3001, {%r1952, %r1951};
	xor.b64  	%rd3002, %rd3000, %rd3001;
	add.s64 	%rd3003, %rd2997, %rd3002;
	add.s64 	%rd3004, %rd3003, 4368137639120453308;
	add.s64 	%rd3005, %rd3004, %rd2868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1953,%dummy}, %rd2979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1954}, %rd2979;
	}
	shf.r.wrap.b32 	%r1955, %r1954, %r1953, 28;
	shf.r.wrap.b32 	%r1956, %r1953, %r1954, 28;
	mov.b64 	%rd3006, {%r1956, %r1955};
	shf.l.wrap.b32 	%r1957, %r1953, %r1954, 30;
	shf.l.wrap.b32 	%r1958, %r1954, %r1953, 30;
	mov.b64 	%rd3007, {%r1958, %r1957};
	xor.b64  	%rd3008, %rd3006, %rd3007;
	shf.l.wrap.b32 	%r1959, %r1953, %r1954, 25;
	shf.l.wrap.b32 	%r1960, %r1954, %r1953, 25;
	mov.b64 	%rd3009, {%r1960, %r1959};
	xor.b64  	%rd3010, %rd3008, %rd3009;
	and.b64  	%rd3011, %rd2979, %rd2942;
	or.b64  	%rd3012, %rd2979, %rd2942;
	and.b64  	%rd3013, %rd3012, %rd2905;
	or.b64  	%rd3014, %rd3013, %rd3011;
	add.s64 	%rd3015, %rd3014, %rd3010;
	add.s64 	%rd3016, %rd3015, %rd3004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1961,%dummy}, %rd2955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1962}, %rd2955;
	}
	shf.r.wrap.b32 	%r1963, %r1962, %r1961, 19;
	shf.r.wrap.b32 	%r1964, %r1961, %r1962, 19;
	mov.b64 	%rd3017, {%r1964, %r1963};
	shf.l.wrap.b32 	%r1965, %r1961, %r1962, 3;
	shf.l.wrap.b32 	%r1966, %r1962, %r1961, 3;
	mov.b64 	%rd3018, {%r1966, %r1965};
	xor.b64  	%rd3019, %rd3017, %rd3018;
	shr.u64 	%rd3020, %rd2955, 6;
	xor.b64  	%rd3021, %rd3019, %rd3020;
	shf.r.wrap.b32 	%r1967, %r1624, %r1623, 1;
	shf.r.wrap.b32 	%r1968, %r1623, %r1624, 1;
	mov.b64 	%rd3022, {%r1968, %r1967};
	shf.r.wrap.b32 	%r1969, %r1624, %r1623, 8;
	shf.r.wrap.b32 	%r1970, %r1623, %r1624, 8;
	mov.b64 	%rd3023, {%r1970, %r1969};
	xor.b64  	%rd3024, %rd3022, %rd3023;
	shr.u64 	%rd3025, %rd2474, 7;
	xor.b64  	%rd3026, %rd3024, %rd3025;
	add.s64 	%rd3027, %rd3026, %rd2437;
	add.s64 	%rd3028, %rd3027, %rd2770;
	add.s64 	%rd3029, %rd3028, %rd3021;
	add.s64 	%rd3030, %rd3029, %rd2894;
	xor.b64  	%rd3031, %rd2968, %rd2931;
	and.b64  	%rd3032, %rd3005, %rd3031;
	xor.b64  	%rd3033, %rd3032, %rd2931;
	add.s64 	%rd3034, %rd3030, %rd3033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1971,%dummy}, %rd3005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1972}, %rd3005;
	}
	shf.r.wrap.b32 	%r1973, %r1972, %r1971, 14;
	shf.r.wrap.b32 	%r1974, %r1971, %r1972, 14;
	mov.b64 	%rd3035, {%r1974, %r1973};
	shf.r.wrap.b32 	%r1975, %r1972, %r1971, 18;
	shf.r.wrap.b32 	%r1976, %r1971, %r1972, 18;
	mov.b64 	%rd3036, {%r1976, %r1975};
	xor.b64  	%rd3037, %rd3035, %rd3036;
	shf.l.wrap.b32 	%r1977, %r1971, %r1972, 23;
	shf.l.wrap.b32 	%r1978, %r1972, %r1971, 23;
	mov.b64 	%rd3038, {%r1978, %r1977};
	xor.b64  	%rd3039, %rd3037, %rd3038;
	add.s64 	%rd3040, %rd3034, %rd3039;
	add.s64 	%rd3041, %rd3040, 4836135668995329356;
	add.s64 	%rd3042, %rd3041, %rd2905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1979,%dummy}, %rd3016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1980}, %rd3016;
	}
	shf.r.wrap.b32 	%r1981, %r1980, %r1979, 28;
	shf.r.wrap.b32 	%r1982, %r1979, %r1980, 28;
	mov.b64 	%rd3043, {%r1982, %r1981};
	shf.l.wrap.b32 	%r1983, %r1979, %r1980, 30;
	shf.l.wrap.b32 	%r1984, %r1980, %r1979, 30;
	mov.b64 	%rd3044, {%r1984, %r1983};
	xor.b64  	%rd3045, %rd3043, %rd3044;
	shf.l.wrap.b32 	%r1985, %r1979, %r1980, 25;
	shf.l.wrap.b32 	%r1986, %r1980, %r1979, 25;
	mov.b64 	%rd3046, {%r1986, %r1985};
	xor.b64  	%rd3047, %rd3045, %rd3046;
	and.b64  	%rd3048, %rd3016, %rd2979;
	or.b64  	%rd3049, %rd3016, %rd2979;
	and.b64  	%rd3050, %rd3049, %rd2942;
	or.b64  	%rd3051, %rd3050, %rd3048;
	add.s64 	%rd3052, %rd3051, %rd3047;
	add.s64 	%rd3053, %rd3052, %rd3041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1987,%dummy}, %rd2992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1988}, %rd2992;
	}
	shf.r.wrap.b32 	%r1989, %r1988, %r1987, 19;
	shf.r.wrap.b32 	%r1990, %r1987, %r1988, 19;
	mov.b64 	%rd3054, {%r1990, %r1989};
	shf.l.wrap.b32 	%r1991, %r1987, %r1988, 3;
	shf.l.wrap.b32 	%r1992, %r1988, %r1987, 3;
	mov.b64 	%rd3055, {%r1992, %r1991};
	xor.b64  	%rd3056, %rd3054, %rd3055;
	shr.u64 	%rd3057, %rd2992, 6;
	xor.b64  	%rd3058, %rd3056, %rd3057;
	shf.r.wrap.b32 	%r1993, %r1650, %r1649, 1;
	shf.r.wrap.b32 	%r1994, %r1649, %r1650, 1;
	mov.b64 	%rd3059, {%r1994, %r1993};
	shf.r.wrap.b32 	%r1995, %r1650, %r1649, 8;
	shf.r.wrap.b32 	%r1996, %r1649, %r1650, 8;
	mov.b64 	%rd3060, {%r1996, %r1995};
	xor.b64  	%rd3061, %rd3059, %rd3060;
	shr.u64 	%rd3062, %rd2511, 7;
	xor.b64  	%rd3063, %rd3061, %rd3062;
	add.s64 	%rd3064, %rd3063, %rd2474;
	add.s64 	%rd3065, %rd3064, %rd2807;
	add.s64 	%rd3066, %rd3065, %rd3058;
	add.s64 	%rd3067, %rd3066, %rd2931;
	xor.b64  	%rd3068, %rd3005, %rd2968;
	and.b64  	%rd3069, %rd3042, %rd3068;
	xor.b64  	%rd3070, %rd3069, %rd2968;
	add.s64 	%rd3071, %rd3067, %rd3070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1997,%dummy}, %rd3042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1998}, %rd3042;
	}
	shf.r.wrap.b32 	%r1999, %r1998, %r1997, 14;
	shf.r.wrap.b32 	%r2000, %r1997, %r1998, 14;
	mov.b64 	%rd3072, {%r2000, %r1999};
	shf.r.wrap.b32 	%r2001, %r1998, %r1997, 18;
	shf.r.wrap.b32 	%r2002, %r1997, %r1998, 18;
	mov.b64 	%rd3073, {%r2002, %r2001};
	xor.b64  	%rd3074, %rd3072, %rd3073;
	shf.l.wrap.b32 	%r2003, %r1997, %r1998, 23;
	shf.l.wrap.b32 	%r2004, %r1998, %r1997, 23;
	mov.b64 	%rd3075, {%r2004, %r2003};
	xor.b64  	%rd3076, %rd3074, %rd3075;
	add.s64 	%rd3077, %rd3071, %rd3076;
	add.s64 	%rd3078, %rd3077, 5532061633213252278;
	add.s64 	%rd3079, %rd3078, %rd2942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2005,%dummy}, %rd3053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2006}, %rd3053;
	}
	shf.r.wrap.b32 	%r2007, %r2006, %r2005, 28;
	shf.r.wrap.b32 	%r2008, %r2005, %r2006, 28;
	mov.b64 	%rd3080, {%r2008, %r2007};
	shf.l.wrap.b32 	%r2009, %r2005, %r2006, 30;
	shf.l.wrap.b32 	%r2010, %r2006, %r2005, 30;
	mov.b64 	%rd3081, {%r2010, %r2009};
	xor.b64  	%rd3082, %rd3080, %rd3081;
	shf.l.wrap.b32 	%r2011, %r2005, %r2006, 25;
	shf.l.wrap.b32 	%r2012, %r2006, %r2005, 25;
	mov.b64 	%rd3083, {%r2012, %r2011};
	xor.b64  	%rd3084, %rd3082, %rd3083;
	and.b64  	%rd3085, %rd3053, %rd3016;
	or.b64  	%rd3086, %rd3053, %rd3016;
	and.b64  	%rd3087, %rd3086, %rd2979;
	or.b64  	%rd3088, %rd3087, %rd3085;
	add.s64 	%rd3089, %rd3088, %rd3084;
	add.s64 	%rd3090, %rd3089, %rd3078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2013,%dummy}, %rd3029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2014}, %rd3029;
	}
	shf.r.wrap.b32 	%r2015, %r2014, %r2013, 19;
	shf.r.wrap.b32 	%r2016, %r2013, %r2014, 19;
	mov.b64 	%rd3091, {%r2016, %r2015};
	shf.l.wrap.b32 	%r2017, %r2013, %r2014, 3;
	shf.l.wrap.b32 	%r2018, %r2014, %r2013, 3;
	mov.b64 	%rd3092, {%r2018, %r2017};
	xor.b64  	%rd3093, %rd3091, %rd3092;
	shr.u64 	%rd3094, %rd3029, 6;
	xor.b64  	%rd3095, %rd3093, %rd3094;
	shf.r.wrap.b32 	%r2019, %r1676, %r1675, 1;
	shf.r.wrap.b32 	%r2020, %r1675, %r1676, 1;
	mov.b64 	%rd3096, {%r2020, %r2019};
	shf.r.wrap.b32 	%r2021, %r1676, %r1675, 8;
	shf.r.wrap.b32 	%r2022, %r1675, %r1676, 8;
	mov.b64 	%rd3097, {%r2022, %r2021};
	xor.b64  	%rd3098, %rd3096, %rd3097;
	shr.u64 	%rd3099, %rd2548, 7;
	xor.b64  	%rd3100, %rd3098, %rd3099;
	add.s64 	%rd3101, %rd3100, %rd2511;
	add.s64 	%rd3102, %rd3101, %rd2844;
	add.s64 	%rd3103, %rd3102, %rd3095;
	add.s64 	%rd3104, %rd3103, %rd2968;
	xor.b64  	%rd3105, %rd3042, %rd3005;
	and.b64  	%rd3106, %rd3079, %rd3105;
	xor.b64  	%rd3107, %rd3106, %rd3005;
	add.s64 	%rd3108, %rd3104, %rd3107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2023,%dummy}, %rd3079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2024}, %rd3079;
	}
	shf.r.wrap.b32 	%r2025, %r2024, %r2023, 14;
	shf.r.wrap.b32 	%r2026, %r2023, %r2024, 14;
	mov.b64 	%rd3109, {%r2026, %r2025};
	shf.r.wrap.b32 	%r2027, %r2024, %r2023, 18;
	shf.r.wrap.b32 	%r2028, %r2023, %r2024, 18;
	mov.b64 	%rd3110, {%r2028, %r2027};
	xor.b64  	%rd3111, %rd3109, %rd3110;
	shf.l.wrap.b32 	%r2029, %r2023, %r2024, 23;
	shf.l.wrap.b32 	%r2030, %r2024, %r2023, 23;
	mov.b64 	%rd3112, {%r2030, %r2029};
	xor.b64  	%rd3113, %rd3111, %rd3112;
	add.s64 	%rd3114, %rd3108, %rd3113;
	add.s64 	%rd3115, %rd3114, 6448918945643986474;
	add.s64 	%rd3116, %rd3115, %rd2979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2031,%dummy}, %rd3090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2032}, %rd3090;
	}
	shf.r.wrap.b32 	%r2033, %r2032, %r2031, 28;
	shf.r.wrap.b32 	%r2034, %r2031, %r2032, 28;
	mov.b64 	%rd3117, {%r2034, %r2033};
	shf.l.wrap.b32 	%r2035, %r2031, %r2032, 30;
	shf.l.wrap.b32 	%r2036, %r2032, %r2031, 30;
	mov.b64 	%rd3118, {%r2036, %r2035};
	xor.b64  	%rd3119, %rd3117, %rd3118;
	shf.l.wrap.b32 	%r2037, %r2031, %r2032, 25;
	shf.l.wrap.b32 	%r2038, %r2032, %r2031, 25;
	mov.b64 	%rd3120, {%r2038, %r2037};
	xor.b64  	%rd3121, %rd3119, %rd3120;
	and.b64  	%rd3122, %rd3090, %rd3053;
	or.b64  	%rd3123, %rd3090, %rd3053;
	and.b64  	%rd3124, %rd3123, %rd3016;
	or.b64  	%rd3125, %rd3124, %rd3122;
	add.s64 	%rd3126, %rd3125, %rd3121;
	add.s64 	%rd3127, %rd3126, %rd3115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2039,%dummy}, %rd3066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2040}, %rd3066;
	}
	shf.r.wrap.b32 	%r2041, %r2040, %r2039, 19;
	shf.r.wrap.b32 	%r2042, %r2039, %r2040, 19;
	mov.b64 	%rd3128, {%r2042, %r2041};
	shf.l.wrap.b32 	%r2043, %r2039, %r2040, 3;
	shf.l.wrap.b32 	%r2044, %r2040, %r2039, 3;
	mov.b64 	%rd3129, {%r2044, %r2043};
	xor.b64  	%rd3130, %rd3128, %rd3129;
	shr.u64 	%rd3131, %rd3066, 6;
	xor.b64  	%rd3132, %rd3130, %rd3131;
	shf.r.wrap.b32 	%r2045, %r1702, %r1701, 1;
	shf.r.wrap.b32 	%r2046, %r1701, %r1702, 1;
	mov.b64 	%rd3133, {%r2046, %r2045};
	shf.r.wrap.b32 	%r2047, %r1702, %r1701, 8;
	shf.r.wrap.b32 	%r2048, %r1701, %r1702, 8;
	mov.b64 	%rd3134, {%r2048, %r2047};
	xor.b64  	%rd3135, %rd3133, %rd3134;
	shr.u64 	%rd3136, %rd2585, 7;
	xor.b64  	%rd3137, %rd3135, %rd3136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2049,%dummy}, %rd3116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2050}, %rd3116;
	}
	shf.r.wrap.b32 	%r2051, %r2050, %r2049, 14;
	shf.r.wrap.b32 	%r2052, %r2049, %r2050, 14;
	mov.b64 	%rd3138, {%r2052, %r2051};
	shf.r.wrap.b32 	%r2053, %r2050, %r2049, 18;
	shf.r.wrap.b32 	%r2054, %r2049, %r2050, 18;
	mov.b64 	%rd3139, {%r2054, %r2053};
	xor.b64  	%rd3140, %rd3138, %rd3139;
	shf.l.wrap.b32 	%r2055, %r2049, %r2050, 23;
	shf.l.wrap.b32 	%r2056, %r2050, %r2049, 23;
	mov.b64 	%rd3141, {%r2056, %r2055};
	xor.b64  	%rd3142, %rd3140, %rd3141;
	xor.b64  	%rd3143, %rd3079, %rd3042;
	and.b64  	%rd3144, %rd3116, %rd3143;
	xor.b64  	%rd3145, %rd3144, %rd3042;
	add.s64 	%rd3146, %rd2548, %rd3137;
	add.s64 	%rd3147, %rd3146, %rd2881;
	add.s64 	%rd3148, %rd3147, %rd3132;
	add.s64 	%rd3149, %rd3148, %rd3005;
	add.s64 	%rd3150, %rd3149, %rd3145;
	add.s64 	%rd3151, %rd3150, %rd3142;
	add.s64 	%rd3152, %rd3151, 6902733635092675308;
	add.s64 	%rd3153, %rd3152, %rd3016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2057,%dummy}, %rd3127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2058}, %rd3127;
	}
	shf.r.wrap.b32 	%r2059, %r2058, %r2057, 28;
	shf.r.wrap.b32 	%r2060, %r2057, %r2058, 28;
	mov.b64 	%rd3154, {%r2060, %r2059};
	shf.l.wrap.b32 	%r2061, %r2057, %r2058, 30;
	shf.l.wrap.b32 	%r2062, %r2058, %r2057, 30;
	mov.b64 	%rd3155, {%r2062, %r2061};
	xor.b64  	%rd3156, %rd3154, %rd3155;
	shf.l.wrap.b32 	%r2063, %r2057, %r2058, 25;
	shf.l.wrap.b32 	%r2064, %r2058, %r2057, 25;
	mov.b64 	%rd3157, {%r2064, %r2063};
	xor.b64  	%rd3158, %rd3156, %rd3157;
	and.b64  	%rd3159, %rd3127, %rd3090;
	or.b64  	%rd3160, %rd3127, %rd3090;
	and.b64  	%rd3161, %rd3160, %rd3053;
	or.b64  	%rd3162, %rd3161, %rd3159;
	add.s64 	%rd3163, %rd3162, %rd3158;
	add.s64 	%rd3164, %rd3163, %rd3152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2065,%dummy}, %rd3103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2066}, %rd3103;
	}
	shf.r.wrap.b32 	%r2067, %r2066, %r2065, 19;
	shf.r.wrap.b32 	%r2068, %r2065, %r2066, 19;
	mov.b64 	%rd3165, {%r2068, %r2067};
	shf.l.wrap.b32 	%r2069, %r2065, %r2066, 3;
	shf.l.wrap.b32 	%r2070, %r2066, %r2065, 3;
	mov.b64 	%rd3166, {%r2070, %r2069};
	xor.b64  	%rd3167, %rd3165, %rd3166;
	shr.u64 	%rd3168, %rd3103, 6;
	xor.b64  	%rd3169, %rd3167, %rd3168;
	shf.r.wrap.b32 	%r2071, %r1728, %r1727, 1;
	shf.r.wrap.b32 	%r2072, %r1727, %r1728, 1;
	mov.b64 	%rd3170, {%r2072, %r2071};
	shf.r.wrap.b32 	%r2073, %r1728, %r1727, 8;
	shf.r.wrap.b32 	%r2074, %r1727, %r1728, 8;
	mov.b64 	%rd3171, {%r2074, %r2073};
	xor.b64  	%rd3172, %rd3170, %rd3171;
	shr.u64 	%rd3173, %rd2622, 7;
	xor.b64  	%rd3174, %rd3172, %rd3173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2075,%dummy}, %rd3153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2076}, %rd3153;
	}
	shf.r.wrap.b32 	%r2077, %r2076, %r2075, 14;
	shf.r.wrap.b32 	%r2078, %r2075, %r2076, 14;
	mov.b64 	%rd3175, {%r2078, %r2077};
	shf.r.wrap.b32 	%r2079, %r2076, %r2075, 18;
	shf.r.wrap.b32 	%r2080, %r2075, %r2076, 18;
	mov.b64 	%rd3176, {%r2080, %r2079};
	xor.b64  	%rd3177, %rd3175, %rd3176;
	shf.l.wrap.b32 	%r2081, %r2075, %r2076, 23;
	shf.l.wrap.b32 	%r2082, %r2076, %r2075, 23;
	mov.b64 	%rd3178, {%r2082, %r2081};
	xor.b64  	%rd3179, %rd3177, %rd3178;
	xor.b64  	%rd3180, %rd3116, %rd3079;
	and.b64  	%rd3181, %rd3153, %rd3180;
	xor.b64  	%rd3182, %rd3181, %rd3079;
	add.s64 	%rd3183, %rd2585, %rd3174;
	add.s64 	%rd3184, %rd3183, %rd2918;
	add.s64 	%rd3185, %rd3184, %rd3169;
	add.s64 	%rd3186, %rd3185, %rd3042;
	add.s64 	%rd3187, %rd3186, %rd3182;
	add.s64 	%rd3188, %rd3187, %rd3179;
	add.s64 	%rd3189, %rd3188, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2083,%dummy}, %rd3164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2084}, %rd3164;
	}
	shf.r.wrap.b32 	%r2085, %r2084, %r2083, 28;
	shf.r.wrap.b32 	%r2086, %r2083, %r2084, 28;
	mov.b64 	%rd3190, {%r2086, %r2085};
	shf.l.wrap.b32 	%r2087, %r2083, %r2084, 30;
	shf.l.wrap.b32 	%r2088, %r2084, %r2083, 30;
	mov.b64 	%rd3191, {%r2088, %r2087};
	xor.b64  	%rd3192, %rd3190, %rd3191;
	shf.l.wrap.b32 	%r2089, %r2083, %r2084, 25;
	shf.l.wrap.b32 	%r2090, %r2084, %r2083, 25;
	mov.b64 	%rd3193, {%r2090, %r2089};
	xor.b64  	%rd3194, %rd3192, %rd3193;
	and.b64  	%rd3195, %rd3164, %rd3127;
	or.b64  	%rd3196, %rd3164, %rd3127;
	and.b64  	%rd3197, %rd3196, %rd3090;
	or.b64  	%rd3198, %rd3197, %rd3195;
	add.s64 	%rd3199, %rd3194, %rd460;
	add.s64 	%rd3200, %rd3199, %rd3198;
	add.s64 	%rd3201, %rd3200, %rd3189;
	st.local.u64 	[%rd2+8], %rd3201;
	add.s64 	%rd3202, %rd3164, %rd466;
	st.local.u64 	[%rd2+16], %rd3202;
	add.s64 	%rd3203, %rd3127, %rd469;
	st.local.u64 	[%rd2+24], %rd3203;
	add.s64 	%rd3204, %rd3090, %rd458;
	st.local.u64 	[%rd2+32], %rd3204;
	add.s64 	%rd3205, %rd3053, %rd444;
	add.s64 	%rd3206, %rd3205, %rd3189;
	st.local.u64 	[%rd2+40], %rd3206;
	add.s64 	%rd3207, %rd3153, %rd452;
	st.local.u64 	[%rd2+48], %rd3207;
	add.s64 	%rd3208, %rd3116, %rd451;
	st.local.u64 	[%rd2+56], %rd3208;
	add.s64 	%rd3209, %rd3079, %rd442;
	st.local.u64 	[%rd2+64], %rd3209;
	cvt.u64.u32 	%rd3210, %r2;
	add.s64 	%rd6328, %rd6328, %rd3210;
	add.s64 	%rd6311, %rd6311, %rd3210;
	sub.s32 	%r4159, %r4159, %r2;
	mov.u32 	%r4156, 0;

$L__BB9_12:
	setp.lt.u32 	%p11, %r4159, 128;
	@%p11 bra 	$L__BB9_17;

$L__BB9_13:
	and.b64  	%rd3211, %rd6311, 7;
	setp.eq.s64 	%p12, %rd3211, 0;
	@%p12 bra 	$L__BB9_15;

	ld.local.u8 	%rd3212, [%rd6328];
	shl.b64 	%rd3213, %rd3212, 56;
	ld.local.u8 	%rd3214, [%rd6328+1];
	shl.b64 	%rd3215, %rd3214, 48;
	or.b64  	%rd3216, %rd3215, %rd3213;
	ld.local.u8 	%rd3217, [%rd6328+2];
	shl.b64 	%rd3218, %rd3217, 40;
	or.b64  	%rd3219, %rd3216, %rd3218;
	ld.local.u8 	%rd3220, [%rd6328+3];
	shl.b64 	%rd3221, %rd3220, 32;
	or.b64  	%rd3222, %rd3219, %rd3221;
	ld.local.u8 	%r2091, [%rd6328+4];
	mul.wide.u32 	%rd3223, %r2091, 16777216;
	or.b64  	%rd3224, %rd3222, %rd3223;
	ld.local.u8 	%r2092, [%rd6328+5];
	mul.wide.u32 	%rd3225, %r2092, 65536;
	or.b64  	%rd3226, %rd3224, %rd3225;
	ld.local.u8 	%r2093, [%rd6328+6];
	mul.wide.u32 	%rd3227, %r2093, 256;
	or.b64  	%rd3228, %rd3226, %rd3227;
	ld.local.u8 	%rd3229, [%rd6328+7];
	or.b64  	%rd6327, %rd3228, %rd3229;
	ld.local.u8 	%rd3230, [%rd6328+8];
	shl.b64 	%rd3231, %rd3230, 56;
	ld.local.u8 	%rd3232, [%rd6328+9];
	shl.b64 	%rd3233, %rd3232, 48;
	or.b64  	%rd3234, %rd3233, %rd3231;
	ld.local.u8 	%rd3235, [%rd6328+10];
	shl.b64 	%rd3236, %rd3235, 40;
	or.b64  	%rd3237, %rd3234, %rd3236;
	ld.local.u8 	%rd3238, [%rd6328+11];
	shl.b64 	%rd3239, %rd3238, 32;
	or.b64  	%rd3240, %rd3237, %rd3239;
	ld.local.u8 	%r2094, [%rd6328+12];
	mul.wide.u32 	%rd3241, %r2094, 16777216;
	or.b64  	%rd3242, %rd3240, %rd3241;
	ld.local.u8 	%r2095, [%rd6328+13];
	mul.wide.u32 	%rd3243, %r2095, 65536;
	or.b64  	%rd3244, %rd3242, %rd3243;
	ld.local.u8 	%r2096, [%rd6328+14];
	mul.wide.u32 	%rd3245, %r2096, 256;
	or.b64  	%rd3246, %rd3244, %rd3245;
	ld.local.u8 	%rd3247, [%rd6328+15];
	or.b64  	%rd6326, %rd3246, %rd3247;
	ld.local.u8 	%rd3248, [%rd6328+16];
	shl.b64 	%rd3249, %rd3248, 56;
	ld.local.u8 	%rd3250, [%rd6328+17];
	shl.b64 	%rd3251, %rd3250, 48;
	or.b64  	%rd3252, %rd3251, %rd3249;
	ld.local.u8 	%rd3253, [%rd6328+18];
	shl.b64 	%rd3254, %rd3253, 40;
	or.b64  	%rd3255, %rd3252, %rd3254;
	ld.local.u8 	%rd3256, [%rd6328+19];
	shl.b64 	%rd3257, %rd3256, 32;
	or.b64  	%rd3258, %rd3255, %rd3257;
	ld.local.u8 	%r2097, [%rd6328+20];
	mul.wide.u32 	%rd3259, %r2097, 16777216;
	or.b64  	%rd3260, %rd3258, %rd3259;
	ld.local.u8 	%r2098, [%rd6328+21];
	mul.wide.u32 	%rd3261, %r2098, 65536;
	or.b64  	%rd3262, %rd3260, %rd3261;
	ld.local.u8 	%r2099, [%rd6328+22];
	mul.wide.u32 	%rd3263, %r2099, 256;
	or.b64  	%rd3264, %rd3262, %rd3263;
	ld.local.u8 	%rd3265, [%rd6328+23];
	or.b64  	%rd6325, %rd3264, %rd3265;
	ld.local.u8 	%rd3266, [%rd6328+24];
	shl.b64 	%rd3267, %rd3266, 56;
	ld.local.u8 	%rd3268, [%rd6328+25];
	shl.b64 	%rd3269, %rd3268, 48;
	or.b64  	%rd3270, %rd3269, %rd3267;
	ld.local.u8 	%rd3271, [%rd6328+26];
	shl.b64 	%rd3272, %rd3271, 40;
	or.b64  	%rd3273, %rd3270, %rd3272;
	ld.local.u8 	%rd3274, [%rd6328+27];
	shl.b64 	%rd3275, %rd3274, 32;
	or.b64  	%rd3276, %rd3273, %rd3275;
	ld.local.u8 	%r2100, [%rd6328+28];
	mul.wide.u32 	%rd3277, %r2100, 16777216;
	or.b64  	%rd3278, %rd3276, %rd3277;
	ld.local.u8 	%r2101, [%rd6328+29];
	mul.wide.u32 	%rd3279, %r2101, 65536;
	or.b64  	%rd3280, %rd3278, %rd3279;
	ld.local.u8 	%r2102, [%rd6328+30];
	mul.wide.u32 	%rd3281, %r2102, 256;
	or.b64  	%rd3282, %rd3280, %rd3281;
	ld.local.u8 	%rd3283, [%rd6328+31];
	or.b64  	%rd6324, %rd3282, %rd3283;
	ld.local.u8 	%rd3284, [%rd6328+32];
	shl.b64 	%rd3285, %rd3284, 56;
	ld.local.u8 	%rd3286, [%rd6328+33];
	shl.b64 	%rd3287, %rd3286, 48;
	or.b64  	%rd3288, %rd3287, %rd3285;
	ld.local.u8 	%rd3289, [%rd6328+34];
	shl.b64 	%rd3290, %rd3289, 40;
	or.b64  	%rd3291, %rd3288, %rd3290;
	ld.local.u8 	%rd3292, [%rd6328+35];
	shl.b64 	%rd3293, %rd3292, 32;
	or.b64  	%rd3294, %rd3291, %rd3293;
	ld.local.u8 	%r2103, [%rd6328+36];
	mul.wide.u32 	%rd3295, %r2103, 16777216;
	or.b64  	%rd3296, %rd3294, %rd3295;
	ld.local.u8 	%r2104, [%rd6328+37];
	mul.wide.u32 	%rd3297, %r2104, 65536;
	or.b64  	%rd3298, %rd3296, %rd3297;
	ld.local.u8 	%r2105, [%rd6328+38];
	mul.wide.u32 	%rd3299, %r2105, 256;
	or.b64  	%rd3300, %rd3298, %rd3299;
	ld.local.u8 	%rd3301, [%rd6328+39];
	or.b64  	%rd6323, %rd3300, %rd3301;
	ld.local.u8 	%rd3302, [%rd6328+40];
	shl.b64 	%rd3303, %rd3302, 56;
	ld.local.u8 	%rd3304, [%rd6328+41];
	shl.b64 	%rd3305, %rd3304, 48;
	or.b64  	%rd3306, %rd3305, %rd3303;
	ld.local.u8 	%rd3307, [%rd6328+42];
	shl.b64 	%rd3308, %rd3307, 40;
	or.b64  	%rd3309, %rd3306, %rd3308;
	ld.local.u8 	%rd3310, [%rd6328+43];
	shl.b64 	%rd3311, %rd3310, 32;
	or.b64  	%rd3312, %rd3309, %rd3311;
	ld.local.u8 	%r2106, [%rd6328+44];
	mul.wide.u32 	%rd3313, %r2106, 16777216;
	or.b64  	%rd3314, %rd3312, %rd3313;
	ld.local.u8 	%r2107, [%rd6328+45];
	mul.wide.u32 	%rd3315, %r2107, 65536;
	or.b64  	%rd3316, %rd3314, %rd3315;
	ld.local.u8 	%r2108, [%rd6328+46];
	mul.wide.u32 	%rd3317, %r2108, 256;
	or.b64  	%rd3318, %rd3316, %rd3317;
	ld.local.u8 	%rd3319, [%rd6328+47];
	or.b64  	%rd6322, %rd3318, %rd3319;
	ld.local.u8 	%rd3320, [%rd6328+48];
	shl.b64 	%rd3321, %rd3320, 56;
	ld.local.u8 	%rd3322, [%rd6328+49];
	shl.b64 	%rd3323, %rd3322, 48;
	or.b64  	%rd3324, %rd3323, %rd3321;
	ld.local.u8 	%rd3325, [%rd6328+50];
	shl.b64 	%rd3326, %rd3325, 40;
	or.b64  	%rd3327, %rd3324, %rd3326;
	ld.local.u8 	%rd3328, [%rd6328+51];
	shl.b64 	%rd3329, %rd3328, 32;
	or.b64  	%rd3330, %rd3327, %rd3329;
	ld.local.u8 	%r2109, [%rd6328+52];
	mul.wide.u32 	%rd3331, %r2109, 16777216;
	or.b64  	%rd3332, %rd3330, %rd3331;
	ld.local.u8 	%r2110, [%rd6328+53];
	mul.wide.u32 	%rd3333, %r2110, 65536;
	or.b64  	%rd3334, %rd3332, %rd3333;
	ld.local.u8 	%r2111, [%rd6328+54];
	mul.wide.u32 	%rd3335, %r2111, 256;
	or.b64  	%rd3336, %rd3334, %rd3335;
	ld.local.u8 	%rd3337, [%rd6328+55];
	or.b64  	%rd6321, %rd3336, %rd3337;
	ld.local.u8 	%rd3338, [%rd6328+56];
	shl.b64 	%rd3339, %rd3338, 56;
	ld.local.u8 	%rd3340, [%rd6328+57];
	shl.b64 	%rd3341, %rd3340, 48;
	or.b64  	%rd3342, %rd3341, %rd3339;
	ld.local.u8 	%rd3343, [%rd6328+58];
	shl.b64 	%rd3344, %rd3343, 40;
	or.b64  	%rd3345, %rd3342, %rd3344;
	ld.local.u8 	%rd3346, [%rd6328+59];
	shl.b64 	%rd3347, %rd3346, 32;
	or.b64  	%rd3348, %rd3345, %rd3347;
	ld.local.u8 	%r2112, [%rd6328+60];
	mul.wide.u32 	%rd3349, %r2112, 16777216;
	or.b64  	%rd3350, %rd3348, %rd3349;
	ld.local.u8 	%r2113, [%rd6328+61];
	mul.wide.u32 	%rd3351, %r2113, 65536;
	or.b64  	%rd3352, %rd3350, %rd3351;
	ld.local.u8 	%r2114, [%rd6328+62];
	mul.wide.u32 	%rd3353, %r2114, 256;
	or.b64  	%rd3354, %rd3352, %rd3353;
	ld.local.u8 	%rd3355, [%rd6328+63];
	or.b64  	%rd6320, %rd3354, %rd3355;
	ld.local.u8 	%rd3356, [%rd6328+64];
	shl.b64 	%rd3357, %rd3356, 56;
	ld.local.u8 	%rd3358, [%rd6328+65];
	shl.b64 	%rd3359, %rd3358, 48;
	or.b64  	%rd3360, %rd3359, %rd3357;
	ld.local.u8 	%rd3361, [%rd6328+66];
	shl.b64 	%rd3362, %rd3361, 40;
	or.b64  	%rd3363, %rd3360, %rd3362;
	ld.local.u8 	%rd3364, [%rd6328+67];
	shl.b64 	%rd3365, %rd3364, 32;
	or.b64  	%rd3366, %rd3363, %rd3365;
	ld.local.u8 	%r2115, [%rd6328+68];
	mul.wide.u32 	%rd3367, %r2115, 16777216;
	or.b64  	%rd3368, %rd3366, %rd3367;
	ld.local.u8 	%r2116, [%rd6328+69];
	mul.wide.u32 	%rd3369, %r2116, 65536;
	or.b64  	%rd3370, %rd3368, %rd3369;
	ld.local.u8 	%r2117, [%rd6328+70];
	mul.wide.u32 	%rd3371, %r2117, 256;
	or.b64  	%rd3372, %rd3370, %rd3371;
	ld.local.u8 	%rd3373, [%rd6328+71];
	or.b64  	%rd6319, %rd3372, %rd3373;
	ld.local.u8 	%rd3374, [%rd6328+72];
	shl.b64 	%rd3375, %rd3374, 56;
	ld.local.u8 	%rd3376, [%rd6328+73];
	shl.b64 	%rd3377, %rd3376, 48;
	or.b64  	%rd3378, %rd3377, %rd3375;
	ld.local.u8 	%rd3379, [%rd6328+74];
	shl.b64 	%rd3380, %rd3379, 40;
	or.b64  	%rd3381, %rd3378, %rd3380;
	ld.local.u8 	%rd3382, [%rd6328+75];
	shl.b64 	%rd3383, %rd3382, 32;
	or.b64  	%rd3384, %rd3381, %rd3383;
	ld.local.u8 	%r2118, [%rd6328+76];
	mul.wide.u32 	%rd3385, %r2118, 16777216;
	or.b64  	%rd3386, %rd3384, %rd3385;
	ld.local.u8 	%r2119, [%rd6328+77];
	mul.wide.u32 	%rd3387, %r2119, 65536;
	or.b64  	%rd3388, %rd3386, %rd3387;
	ld.local.u8 	%r2120, [%rd6328+78];
	mul.wide.u32 	%rd3389, %r2120, 256;
	or.b64  	%rd3390, %rd3388, %rd3389;
	ld.local.u8 	%rd3391, [%rd6328+79];
	or.b64  	%rd6318, %rd3390, %rd3391;
	ld.local.u8 	%rd3392, [%rd6328+80];
	shl.b64 	%rd3393, %rd3392, 56;
	ld.local.u8 	%rd3394, [%rd6328+81];
	shl.b64 	%rd3395, %rd3394, 48;
	or.b64  	%rd3396, %rd3395, %rd3393;
	ld.local.u8 	%rd3397, [%rd6328+82];
	shl.b64 	%rd3398, %rd3397, 40;
	or.b64  	%rd3399, %rd3396, %rd3398;
	ld.local.u8 	%rd3400, [%rd6328+83];
	shl.b64 	%rd3401, %rd3400, 32;
	or.b64  	%rd3402, %rd3399, %rd3401;
	ld.local.u8 	%r2121, [%rd6328+84];
	mul.wide.u32 	%rd3403, %r2121, 16777216;
	or.b64  	%rd3404, %rd3402, %rd3403;
	ld.local.u8 	%r2122, [%rd6328+85];
	mul.wide.u32 	%rd3405, %r2122, 65536;
	or.b64  	%rd3406, %rd3404, %rd3405;
	ld.local.u8 	%r2123, [%rd6328+86];
	mul.wide.u32 	%rd3407, %r2123, 256;
	or.b64  	%rd3408, %rd3406, %rd3407;
	ld.local.u8 	%rd3409, [%rd6328+87];
	or.b64  	%rd6317, %rd3408, %rd3409;
	ld.local.u8 	%rd3410, [%rd6328+88];
	shl.b64 	%rd3411, %rd3410, 56;
	ld.local.u8 	%rd3412, [%rd6328+89];
	shl.b64 	%rd3413, %rd3412, 48;
	or.b64  	%rd3414, %rd3413, %rd3411;
	ld.local.u8 	%rd3415, [%rd6328+90];
	shl.b64 	%rd3416, %rd3415, 40;
	or.b64  	%rd3417, %rd3414, %rd3416;
	ld.local.u8 	%rd3418, [%rd6328+91];
	shl.b64 	%rd3419, %rd3418, 32;
	or.b64  	%rd3420, %rd3417, %rd3419;
	ld.local.u8 	%r2124, [%rd6328+92];
	mul.wide.u32 	%rd3421, %r2124, 16777216;
	or.b64  	%rd3422, %rd3420, %rd3421;
	ld.local.u8 	%r2125, [%rd6328+93];
	mul.wide.u32 	%rd3423, %r2125, 65536;
	or.b64  	%rd3424, %rd3422, %rd3423;
	ld.local.u8 	%r2126, [%rd6328+94];
	mul.wide.u32 	%rd3425, %r2126, 256;
	or.b64  	%rd3426, %rd3424, %rd3425;
	ld.local.u8 	%rd3427, [%rd6328+95];
	or.b64  	%rd6316, %rd3426, %rd3427;
	ld.local.u8 	%rd3428, [%rd6328+96];
	shl.b64 	%rd3429, %rd3428, 56;
	ld.local.u8 	%rd3430, [%rd6328+97];
	shl.b64 	%rd3431, %rd3430, 48;
	or.b64  	%rd3432, %rd3431, %rd3429;
	ld.local.u8 	%rd3433, [%rd6328+98];
	shl.b64 	%rd3434, %rd3433, 40;
	or.b64  	%rd3435, %rd3432, %rd3434;
	ld.local.u8 	%rd3436, [%rd6328+99];
	shl.b64 	%rd3437, %rd3436, 32;
	or.b64  	%rd3438, %rd3435, %rd3437;
	ld.local.u8 	%r2127, [%rd6328+100];
	mul.wide.u32 	%rd3439, %r2127, 16777216;
	or.b64  	%rd3440, %rd3438, %rd3439;
	ld.local.u8 	%r2128, [%rd6328+101];
	mul.wide.u32 	%rd3441, %r2128, 65536;
	or.b64  	%rd3442, %rd3440, %rd3441;
	ld.local.u8 	%r2129, [%rd6328+102];
	mul.wide.u32 	%rd3443, %r2129, 256;
	or.b64  	%rd3444, %rd3442, %rd3443;
	ld.local.u8 	%rd3445, [%rd6328+103];
	or.b64  	%rd6315, %rd3444, %rd3445;
	ld.local.u8 	%rd3446, [%rd6328+104];
	shl.b64 	%rd3447, %rd3446, 56;
	ld.local.u8 	%rd3448, [%rd6328+105];
	shl.b64 	%rd3449, %rd3448, 48;
	or.b64  	%rd3450, %rd3449, %rd3447;
	ld.local.u8 	%rd3451, [%rd6328+106];
	shl.b64 	%rd3452, %rd3451, 40;
	or.b64  	%rd3453, %rd3450, %rd3452;
	ld.local.u8 	%rd3454, [%rd6328+107];
	shl.b64 	%rd3455, %rd3454, 32;
	or.b64  	%rd3456, %rd3453, %rd3455;
	ld.local.u8 	%r2130, [%rd6328+108];
	mul.wide.u32 	%rd3457, %r2130, 16777216;
	or.b64  	%rd3458, %rd3456, %rd3457;
	ld.local.u8 	%r2131, [%rd6328+109];
	mul.wide.u32 	%rd3459, %r2131, 65536;
	or.b64  	%rd3460, %rd3458, %rd3459;
	ld.local.u8 	%r2132, [%rd6328+110];
	mul.wide.u32 	%rd3461, %r2132, 256;
	or.b64  	%rd3462, %rd3460, %rd3461;
	ld.local.u8 	%rd3463, [%rd6328+111];
	or.b64  	%rd6314, %rd3462, %rd3463;
	ld.local.u8 	%rd3464, [%rd6328+112];
	shl.b64 	%rd3465, %rd3464, 56;
	ld.local.u8 	%rd3466, [%rd6328+113];
	shl.b64 	%rd3467, %rd3466, 48;
	or.b64  	%rd3468, %rd3467, %rd3465;
	ld.local.u8 	%rd3469, [%rd6328+114];
	shl.b64 	%rd3470, %rd3469, 40;
	or.b64  	%rd3471, %rd3468, %rd3470;
	ld.local.u8 	%rd3472, [%rd6328+115];
	shl.b64 	%rd3473, %rd3472, 32;
	or.b64  	%rd3474, %rd3471, %rd3473;
	ld.local.u8 	%r2133, [%rd6328+116];
	mul.wide.u32 	%rd3475, %r2133, 16777216;
	or.b64  	%rd3476, %rd3474, %rd3475;
	ld.local.u8 	%r2134, [%rd6328+117];
	mul.wide.u32 	%rd3477, %r2134, 65536;
	or.b64  	%rd3478, %rd3476, %rd3477;
	ld.local.u8 	%r2135, [%rd6328+118];
	mul.wide.u32 	%rd3479, %r2135, 256;
	or.b64  	%rd3480, %rd3478, %rd3479;
	ld.local.u8 	%rd3481, [%rd6328+119];
	or.b64  	%rd6313, %rd3480, %rd3481;
	ld.local.u8 	%rd3482, [%rd6328+120];
	ld.local.u8 	%rd3483, [%rd6328+121];
	ld.local.u8 	%rd3484, [%rd6328+122];
	ld.local.u8 	%rd3485, [%rd6328+123];
	ld.local.u8 	%r2136, [%rd6328+124];
	mul.wide.u32 	%rd3486, %r2136, 16777216;
	ld.local.u8 	%r2137, [%rd6328+125];
	mul.wide.u32 	%rd3487, %r2137, 65536;
	ld.local.u8 	%r2138, [%rd6328+126];
	mul.wide.u32 	%rd3488, %r2138, 256;
	ld.local.u8 	%rd3489, [%rd6328+127];
	shl.b64 	%rd3490, %rd3483, 48;
	shl.b64 	%rd3491, %rd3482, 56;
	shl.b64 	%rd3492, %rd3484, 40;
	or.b64  	%rd3493, %rd3490, %rd3491;
	shl.b64 	%rd3494, %rd3485, 32;
	or.b64  	%rd3495, %rd3493, %rd3492;
	or.b64  	%rd3496, %rd3495, %rd3494;
	or.b64  	%rd3497, %rd3496, %rd3486;
	or.b64  	%rd3498, %rd3497, %rd3487;
	or.b64  	%rd3499, %rd3498, %rd3488;
	or.b64  	%rd6312, %rd3499, %rd3489;
	bra.uni 	$L__BB9_16;

$L__BB9_15:
	ld.local.u64 	%rd3500, [%rd6328];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2139, %temp}, %rd3500;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2140}, %rd3500;
	}
	mov.u32 	%r2141, 291;
	mov.u32 	%r2142, 0;
	prmt.b32 	%r2143, %r2139, %r2142, %r2141;
	prmt.b32 	%r2144, %r2140, %r2142, %r2141;
	mov.b64 	%rd6327, {%r2144, %r2143};
	ld.local.u64 	%rd3501, [%rd6328+8];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2145, %temp}, %rd3501;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2146}, %rd3501;
	}
	prmt.b32 	%r2147, %r2145, %r2142, %r2141;
	prmt.b32 	%r2148, %r2146, %r2142, %r2141;
	mov.b64 	%rd6326, {%r2148, %r2147};
	ld.local.u64 	%rd3502, [%rd6328+16];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2149, %temp}, %rd3502;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2150}, %rd3502;
	}
	prmt.b32 	%r2151, %r2149, %r2142, %r2141;
	prmt.b32 	%r2152, %r2150, %r2142, %r2141;
	mov.b64 	%rd6325, {%r2152, %r2151};
	ld.local.u64 	%rd3503, [%rd6328+24];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2153, %temp}, %rd3503;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2154}, %rd3503;
	}
	prmt.b32 	%r2155, %r2153, %r2142, %r2141;
	prmt.b32 	%r2156, %r2154, %r2142, %r2141;
	mov.b64 	%rd6324, {%r2156, %r2155};
	ld.local.u64 	%rd3504, [%rd6328+32];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2157, %temp}, %rd3504;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2158}, %rd3504;
	}
	prmt.b32 	%r2159, %r2157, %r2142, %r2141;
	prmt.b32 	%r2160, %r2158, %r2142, %r2141;
	mov.b64 	%rd6323, {%r2160, %r2159};
	ld.local.u64 	%rd3505, [%rd6328+40];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2161, %temp}, %rd3505;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2162}, %rd3505;
	}
	prmt.b32 	%r2163, %r2161, %r2142, %r2141;
	prmt.b32 	%r2164, %r2162, %r2142, %r2141;
	mov.b64 	%rd6322, {%r2164, %r2163};
	ld.local.u64 	%rd3506, [%rd6328+48];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2165, %temp}, %rd3506;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2166}, %rd3506;
	}
	prmt.b32 	%r2167, %r2165, %r2142, %r2141;
	prmt.b32 	%r2168, %r2166, %r2142, %r2141;
	mov.b64 	%rd6321, {%r2168, %r2167};
	ld.local.u64 	%rd3507, [%rd6328+56];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2169, %temp}, %rd3507;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2170}, %rd3507;
	}
	prmt.b32 	%r2171, %r2169, %r2142, %r2141;
	prmt.b32 	%r2172, %r2170, %r2142, %r2141;
	mov.b64 	%rd6320, {%r2172, %r2171};
	ld.local.u64 	%rd3508, [%rd6328+64];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2173, %temp}, %rd3508;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2174}, %rd3508;
	}
	prmt.b32 	%r2175, %r2173, %r2142, %r2141;
	prmt.b32 	%r2176, %r2174, %r2142, %r2141;
	mov.b64 	%rd6319, {%r2176, %r2175};
	ld.local.u64 	%rd3509, [%rd6328+72];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2177, %temp}, %rd3509;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2178}, %rd3509;
	}
	prmt.b32 	%r2179, %r2177, %r2142, %r2141;
	prmt.b32 	%r2180, %r2178, %r2142, %r2141;
	mov.b64 	%rd6318, {%r2180, %r2179};
	ld.local.u64 	%rd3510, [%rd6328+80];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2181, %temp}, %rd3510;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2182}, %rd3510;
	}
	prmt.b32 	%r2183, %r2181, %r2142, %r2141;
	prmt.b32 	%r2184, %r2182, %r2142, %r2141;
	mov.b64 	%rd6317, {%r2184, %r2183};
	ld.local.u64 	%rd3511, [%rd6328+88];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2185, %temp}, %rd3511;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2186}, %rd3511;
	}
	prmt.b32 	%r2187, %r2185, %r2142, %r2141;
	prmt.b32 	%r2188, %r2186, %r2142, %r2141;
	mov.b64 	%rd6316, {%r2188, %r2187};
	ld.local.u64 	%rd3512, [%rd6328+96];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2189, %temp}, %rd3512;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2190}, %rd3512;
	}
	prmt.b32 	%r2191, %r2189, %r2142, %r2141;
	prmt.b32 	%r2192, %r2190, %r2142, %r2141;
	mov.b64 	%rd6315, {%r2192, %r2191};
	ld.local.u64 	%rd3513, [%rd6328+104];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2193, %temp}, %rd3513;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2194}, %rd3513;
	}
	prmt.b32 	%r2195, %r2193, %r2142, %r2141;
	prmt.b32 	%r2196, %r2194, %r2142, %r2141;
	mov.b64 	%rd6314, {%r2196, %r2195};
	ld.local.u64 	%rd3514, [%rd6328+112];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2197, %temp}, %rd3514;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2198}, %rd3514;
	}
	prmt.b32 	%r2199, %r2197, %r2142, %r2141;
	prmt.b32 	%r2200, %r2198, %r2142, %r2141;
	mov.b64 	%rd6313, {%r2200, %r2199};
	ld.local.u64 	%rd3515, [%rd6328+120];
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2201, %temp}, %rd3515;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2202}, %rd3515;
	}
	prmt.b32 	%r2203, %r2201, %r2142, %r2141;
	prmt.b32 	%r2204, %r2202, %r2142, %r2141;
	mov.b64 	%rd6312, {%r2204, %r2203};

$L__BB9_16:
	ld.local.u64 	%rd3516, [%rd2+64];
	add.s64 	%rd3517, %rd6327, %rd3516;
	ld.local.u64 	%rd3518, [%rd2+40];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2205,%dummy}, %rd3518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2206}, %rd3518;
	}
	shf.r.wrap.b32 	%r2207, %r2206, %r2205, 14;
	shf.r.wrap.b32 	%r2208, %r2205, %r2206, 14;
	mov.b64 	%rd3519, {%r2208, %r2207};
	shf.r.wrap.b32 	%r2209, %r2206, %r2205, 18;
	shf.r.wrap.b32 	%r2210, %r2205, %r2206, 18;
	mov.b64 	%rd3520, {%r2210, %r2209};
	xor.b64  	%rd3521, %rd3519, %rd3520;
	shf.l.wrap.b32 	%r2211, %r2205, %r2206, 23;
	shf.l.wrap.b32 	%r2212, %r2206, %r2205, 23;
	mov.b64 	%rd3522, {%r2212, %r2211};
	xor.b64  	%rd3523, %rd3521, %rd3522;
	add.s64 	%rd3524, %rd3517, %rd3523;
	ld.local.u64 	%rd3525, [%rd2+56];
	ld.local.u64 	%rd3526, [%rd2+48];
	xor.b64  	%rd3527, %rd3525, %rd3526;
	and.b64  	%rd3528, %rd3527, %rd3518;
	xor.b64  	%rd3529, %rd3528, %rd3525;
	add.s64 	%rd3530, %rd3524, %rd3529;
	add.s64 	%rd3531, %rd3530, 4794697086780616226;
	ld.local.u64 	%rd3532, [%rd2+32];
	add.s64 	%rd3533, %rd3531, %rd3532;
	ld.local.u64 	%rd3534, [%rd2+8];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2213,%dummy}, %rd3534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2214}, %rd3534;
	}
	shf.r.wrap.b32 	%r2215, %r2214, %r2213, 28;
	shf.r.wrap.b32 	%r2216, %r2213, %r2214, 28;
	mov.b64 	%rd3535, {%r2216, %r2215};
	shf.l.wrap.b32 	%r2217, %r2213, %r2214, 30;
	shf.l.wrap.b32 	%r2218, %r2214, %r2213, 30;
	mov.b64 	%rd3536, {%r2218, %r2217};
	xor.b64  	%rd3537, %rd3535, %rd3536;
	shf.l.wrap.b32 	%r2219, %r2213, %r2214, 25;
	shf.l.wrap.b32 	%r2220, %r2214, %r2213, 25;
	mov.b64 	%rd3538, {%r2220, %r2219};
	xor.b64  	%rd3539, %rd3537, %rd3538;
	ld.local.u64 	%rd3540, [%rd2+16];
	and.b64  	%rd3541, %rd3540, %rd3534;
	or.b64  	%rd3542, %rd3540, %rd3534;
	ld.local.u64 	%rd3543, [%rd2+24];
	and.b64  	%rd3544, %rd3543, %rd3542;
	or.b64  	%rd3545, %rd3544, %rd3541;
	add.s64 	%rd3546, %rd3545, %rd3539;
	add.s64 	%rd3547, %rd3546, %rd3531;
	add.s64 	%rd3548, %rd6326, %rd3525;
	xor.b64  	%rd3549, %rd3526, %rd3518;
	and.b64  	%rd3550, %rd3533, %rd3549;
	xor.b64  	%rd3551, %rd3550, %rd3526;
	add.s64 	%rd3552, %rd3548, %rd3551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2221,%dummy}, %rd3533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2222}, %rd3533;
	}
	shf.r.wrap.b32 	%r2223, %r2222, %r2221, 14;
	shf.r.wrap.b32 	%r2224, %r2221, %r2222, 14;
	mov.b64 	%rd3553, {%r2224, %r2223};
	shf.r.wrap.b32 	%r2225, %r2222, %r2221, 18;
	shf.r.wrap.b32 	%r2226, %r2221, %r2222, 18;
	mov.b64 	%rd3554, {%r2226, %r2225};
	xor.b64  	%rd3555, %rd3553, %rd3554;
	shf.l.wrap.b32 	%r2227, %r2221, %r2222, 23;
	shf.l.wrap.b32 	%r2228, %r2222, %r2221, 23;
	mov.b64 	%rd3556, {%r2228, %r2227};
	xor.b64  	%rd3557, %rd3555, %rd3556;
	add.s64 	%rd3558, %rd3552, %rd3557;
	add.s64 	%rd3559, %rd3558, 8158064640168781261;
	add.s64 	%rd3560, %rd3559, %rd3543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2229,%dummy}, %rd3547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2230}, %rd3547;
	}
	shf.r.wrap.b32 	%r2231, %r2230, %r2229, 28;
	shf.r.wrap.b32 	%r2232, %r2229, %r2230, 28;
	mov.b64 	%rd3561, {%r2232, %r2231};
	shf.l.wrap.b32 	%r2233, %r2229, %r2230, 30;
	shf.l.wrap.b32 	%r2234, %r2230, %r2229, 30;
	mov.b64 	%rd3562, {%r2234, %r2233};
	xor.b64  	%rd3563, %rd3561, %rd3562;
	shf.l.wrap.b32 	%r2235, %r2229, %r2230, 25;
	shf.l.wrap.b32 	%r2236, %r2230, %r2229, 25;
	mov.b64 	%rd3564, {%r2236, %r2235};
	xor.b64  	%rd3565, %rd3563, %rd3564;
	and.b64  	%rd3566, %rd3547, %rd3534;
	or.b64  	%rd3567, %rd3547, %rd3534;
	and.b64  	%rd3568, %rd3567, %rd3540;
	or.b64  	%rd3569, %rd3568, %rd3566;
	add.s64 	%rd3570, %rd3569, %rd3565;
	add.s64 	%rd3571, %rd3570, %rd3559;
	add.s64 	%rd3572, %rd6325, %rd3526;
	xor.b64  	%rd3573, %rd3533, %rd3518;
	and.b64  	%rd3574, %rd3560, %rd3573;
	xor.b64  	%rd3575, %rd3574, %rd3518;
	add.s64 	%rd3576, %rd3572, %rd3575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2237,%dummy}, %rd3560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2238}, %rd3560;
	}
	shf.r.wrap.b32 	%r2239, %r2238, %r2237, 14;
	shf.r.wrap.b32 	%r2240, %r2237, %r2238, 14;
	mov.b64 	%rd3577, {%r2240, %r2239};
	shf.r.wrap.b32 	%r2241, %r2238, %r2237, 18;
	shf.r.wrap.b32 	%r2242, %r2237, %r2238, 18;
	mov.b64 	%rd3578, {%r2242, %r2241};
	xor.b64  	%rd3579, %rd3577, %rd3578;
	shf.l.wrap.b32 	%r2243, %r2237, %r2238, 23;
	shf.l.wrap.b32 	%r2244, %r2238, %r2237, 23;
	mov.b64 	%rd3580, {%r2244, %r2243};
	xor.b64  	%rd3581, %rd3579, %rd3580;
	add.s64 	%rd3582, %rd3576, %rd3581;
	add.s64 	%rd3583, %rd3582, -5349999486874862801;
	add.s64 	%rd3584, %rd3583, %rd3540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2245,%dummy}, %rd3571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2246}, %rd3571;
	}
	shf.r.wrap.b32 	%r2247, %r2246, %r2245, 28;
	shf.r.wrap.b32 	%r2248, %r2245, %r2246, 28;
	mov.b64 	%rd3585, {%r2248, %r2247};
	shf.l.wrap.b32 	%r2249, %r2245, %r2246, 30;
	shf.l.wrap.b32 	%r2250, %r2246, %r2245, 30;
	mov.b64 	%rd3586, {%r2250, %r2249};
	xor.b64  	%rd3587, %rd3585, %rd3586;
	shf.l.wrap.b32 	%r2251, %r2245, %r2246, 25;
	shf.l.wrap.b32 	%r2252, %r2246, %r2245, 25;
	mov.b64 	%rd3588, {%r2252, %r2251};
	xor.b64  	%rd3589, %rd3587, %rd3588;
	and.b64  	%rd3590, %rd3571, %rd3547;
	or.b64  	%rd3591, %rd3571, %rd3547;
	and.b64  	%rd3592, %rd3591, %rd3534;
	or.b64  	%rd3593, %rd3592, %rd3590;
	add.s64 	%rd3594, %rd3593, %rd3589;
	add.s64 	%rd3595, %rd3594, %rd3583;
	add.s64 	%rd3596, %rd6324, %rd3518;
	xor.b64  	%rd3597, %rd3560, %rd3533;
	and.b64  	%rd3598, %rd3584, %rd3597;
	xor.b64  	%rd3599, %rd3598, %rd3533;
	add.s64 	%rd3600, %rd3596, %rd3599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2253,%dummy}, %rd3584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2254}, %rd3584;
	}
	shf.r.wrap.b32 	%r2255, %r2254, %r2253, 14;
	shf.r.wrap.b32 	%r2256, %r2253, %r2254, 14;
	mov.b64 	%rd3601, {%r2256, %r2255};
	shf.r.wrap.b32 	%r2257, %r2254, %r2253, 18;
	shf.r.wrap.b32 	%r2258, %r2253, %r2254, 18;
	mov.b64 	%rd3602, {%r2258, %r2257};
	xor.b64  	%rd3603, %rd3601, %rd3602;
	shf.l.wrap.b32 	%r2259, %r2253, %r2254, 23;
	shf.l.wrap.b32 	%r2260, %r2254, %r2253, 23;
	mov.b64 	%rd3604, {%r2260, %r2259};
	xor.b64  	%rd3605, %rd3603, %rd3604;
	add.s64 	%rd3606, %rd3600, %rd3605;
	add.s64 	%rd3607, %rd3606, -1606136188198331460;
	add.s64 	%rd3608, %rd3607, %rd3534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2261,%dummy}, %rd3595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2262}, %rd3595;
	}
	shf.r.wrap.b32 	%r2263, %r2262, %r2261, 28;
	shf.r.wrap.b32 	%r2264, %r2261, %r2262, 28;
	mov.b64 	%rd3609, {%r2264, %r2263};
	shf.l.wrap.b32 	%r2265, %r2261, %r2262, 30;
	shf.l.wrap.b32 	%r2266, %r2262, %r2261, 30;
	mov.b64 	%rd3610, {%r2266, %r2265};
	xor.b64  	%rd3611, %rd3609, %rd3610;
	shf.l.wrap.b32 	%r2267, %r2261, %r2262, 25;
	shf.l.wrap.b32 	%r2268, %r2262, %r2261, 25;
	mov.b64 	%rd3612, {%r2268, %r2267};
	xor.b64  	%rd3613, %rd3611, %rd3612;
	and.b64  	%rd3614, %rd3595, %rd3571;
	or.b64  	%rd3615, %rd3595, %rd3571;
	and.b64  	%rd3616, %rd3615, %rd3547;
	or.b64  	%rd3617, %rd3616, %rd3614;
	add.s64 	%rd3618, %rd3617, %rd3613;
	add.s64 	%rd3619, %rd3618, %rd3607;
	add.s64 	%rd3620, %rd6323, %rd3533;
	xor.b64  	%rd3621, %rd3584, %rd3560;
	and.b64  	%rd3622, %rd3608, %rd3621;
	xor.b64  	%rd3623, %rd3622, %rd3560;
	add.s64 	%rd3624, %rd3620, %rd3623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2269,%dummy}, %rd3608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2270}, %rd3608;
	}
	shf.r.wrap.b32 	%r2271, %r2270, %r2269, 14;
	shf.r.wrap.b32 	%r2272, %r2269, %r2270, 14;
	mov.b64 	%rd3625, {%r2272, %r2271};
	shf.r.wrap.b32 	%r2273, %r2270, %r2269, 18;
	shf.r.wrap.b32 	%r2274, %r2269, %r2270, 18;
	mov.b64 	%rd3626, {%r2274, %r2273};
	xor.b64  	%rd3627, %rd3625, %rd3626;
	shf.l.wrap.b32 	%r2275, %r2269, %r2270, 23;
	shf.l.wrap.b32 	%r2276, %r2270, %r2269, 23;
	mov.b64 	%rd3628, {%r2276, %r2275};
	xor.b64  	%rd3629, %rd3627, %rd3628;
	add.s64 	%rd3630, %rd3624, %rd3629;
	add.s64 	%rd3631, %rd3630, 4131703408338449720;
	add.s64 	%rd3632, %rd3631, %rd3547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2277,%dummy}, %rd3619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2278}, %rd3619;
	}
	shf.r.wrap.b32 	%r2279, %r2278, %r2277, 28;
	shf.r.wrap.b32 	%r2280, %r2277, %r2278, 28;
	mov.b64 	%rd3633, {%r2280, %r2279};
	shf.l.wrap.b32 	%r2281, %r2277, %r2278, 30;
	shf.l.wrap.b32 	%r2282, %r2278, %r2277, 30;
	mov.b64 	%rd3634, {%r2282, %r2281};
	xor.b64  	%rd3635, %rd3633, %rd3634;
	shf.l.wrap.b32 	%r2283, %r2277, %r2278, 25;
	shf.l.wrap.b32 	%r2284, %r2278, %r2277, 25;
	mov.b64 	%rd3636, {%r2284, %r2283};
	xor.b64  	%rd3637, %rd3635, %rd3636;
	and.b64  	%rd3638, %rd3619, %rd3595;
	or.b64  	%rd3639, %rd3619, %rd3595;
	and.b64  	%rd3640, %rd3639, %rd3571;
	or.b64  	%rd3641, %rd3640, %rd3638;
	add.s64 	%rd3642, %rd3641, %rd3637;
	add.s64 	%rd3643, %rd3642, %rd3631;
	add.s64 	%rd3644, %rd6322, %rd3560;
	xor.b64  	%rd3645, %rd3608, %rd3584;
	and.b64  	%rd3646, %rd3632, %rd3645;
	xor.b64  	%rd3647, %rd3646, %rd3584;
	add.s64 	%rd3648, %rd3644, %rd3647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2285,%dummy}, %rd3632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2286}, %rd3632;
	}
	shf.r.wrap.b32 	%r2287, %r2286, %r2285, 14;
	shf.r.wrap.b32 	%r2288, %r2285, %r2286, 14;
	mov.b64 	%rd3649, {%r2288, %r2287};
	shf.r.wrap.b32 	%r2289, %r2286, %r2285, 18;
	shf.r.wrap.b32 	%r2290, %r2285, %r2286, 18;
	mov.b64 	%rd3650, {%r2290, %r2289};
	xor.b64  	%rd3651, %rd3649, %rd3650;
	shf.l.wrap.b32 	%r2291, %r2285, %r2286, 23;
	shf.l.wrap.b32 	%r2292, %r2286, %r2285, 23;
	mov.b64 	%rd3652, {%r2292, %r2291};
	xor.b64  	%rd3653, %rd3651, %rd3652;
	add.s64 	%rd3654, %rd3648, %rd3653;
	add.s64 	%rd3655, %rd3654, 6480981068601479193;
	add.s64 	%rd3656, %rd3655, %rd3571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2293,%dummy}, %rd3643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2294}, %rd3643;
	}
	shf.r.wrap.b32 	%r2295, %r2294, %r2293, 28;
	shf.r.wrap.b32 	%r2296, %r2293, %r2294, 28;
	mov.b64 	%rd3657, {%r2296, %r2295};
	shf.l.wrap.b32 	%r2297, %r2293, %r2294, 30;
	shf.l.wrap.b32 	%r2298, %r2294, %r2293, 30;
	mov.b64 	%rd3658, {%r2298, %r2297};
	xor.b64  	%rd3659, %rd3657, %rd3658;
	shf.l.wrap.b32 	%r2299, %r2293, %r2294, 25;
	shf.l.wrap.b32 	%r2300, %r2294, %r2293, 25;
	mov.b64 	%rd3660, {%r2300, %r2299};
	xor.b64  	%rd3661, %rd3659, %rd3660;
	and.b64  	%rd3662, %rd3643, %rd3619;
	or.b64  	%rd3663, %rd3643, %rd3619;
	and.b64  	%rd3664, %rd3663, %rd3595;
	or.b64  	%rd3665, %rd3664, %rd3662;
	add.s64 	%rd3666, %rd3665, %rd3661;
	add.s64 	%rd3667, %rd3666, %rd3655;
	add.s64 	%rd3668, %rd6321, %rd3584;
	xor.b64  	%rd3669, %rd3632, %rd3608;
	and.b64  	%rd3670, %rd3656, %rd3669;
	xor.b64  	%rd3671, %rd3670, %rd3608;
	add.s64 	%rd3672, %rd3668, %rd3671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2301,%dummy}, %rd3656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2302}, %rd3656;
	}
	shf.r.wrap.b32 	%r2303, %r2302, %r2301, 14;
	shf.r.wrap.b32 	%r2304, %r2301, %r2302, 14;
	mov.b64 	%rd3673, {%r2304, %r2303};
	shf.r.wrap.b32 	%r2305, %r2302, %r2301, 18;
	shf.r.wrap.b32 	%r2306, %r2301, %r2302, 18;
	mov.b64 	%rd3674, {%r2306, %r2305};
	xor.b64  	%rd3675, %rd3673, %rd3674;
	shf.l.wrap.b32 	%r2307, %r2301, %r2302, 23;
	shf.l.wrap.b32 	%r2308, %r2302, %r2301, 23;
	mov.b64 	%rd3676, {%r2308, %r2307};
	xor.b64  	%rd3677, %rd3675, %rd3676;
	add.s64 	%rd3678, %rd3672, %rd3677;
	add.s64 	%rd3679, %rd3678, -7908458776815382629;
	add.s64 	%rd3680, %rd3679, %rd3595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2309,%dummy}, %rd3667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2310}, %rd3667;
	}
	shf.r.wrap.b32 	%r2311, %r2310, %r2309, 28;
	shf.r.wrap.b32 	%r2312, %r2309, %r2310, 28;
	mov.b64 	%rd3681, {%r2312, %r2311};
	shf.l.wrap.b32 	%r2313, %r2309, %r2310, 30;
	shf.l.wrap.b32 	%r2314, %r2310, %r2309, 30;
	mov.b64 	%rd3682, {%r2314, %r2313};
	xor.b64  	%rd3683, %rd3681, %rd3682;
	shf.l.wrap.b32 	%r2315, %r2309, %r2310, 25;
	shf.l.wrap.b32 	%r2316, %r2310, %r2309, 25;
	mov.b64 	%rd3684, {%r2316, %r2315};
	xor.b64  	%rd3685, %rd3683, %rd3684;
	and.b64  	%rd3686, %rd3667, %rd3643;
	or.b64  	%rd3687, %rd3667, %rd3643;
	and.b64  	%rd3688, %rd3687, %rd3619;
	or.b64  	%rd3689, %rd3688, %rd3686;
	add.s64 	%rd3690, %rd3689, %rd3685;
	add.s64 	%rd3691, %rd3690, %rd3679;
	add.s64 	%rd3692, %rd6320, %rd3608;
	xor.b64  	%rd3693, %rd3656, %rd3632;
	and.b64  	%rd3694, %rd3680, %rd3693;
	xor.b64  	%rd3695, %rd3694, %rd3632;
	add.s64 	%rd3696, %rd3692, %rd3695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2317,%dummy}, %rd3680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2318}, %rd3680;
	}
	shf.r.wrap.b32 	%r2319, %r2318, %r2317, 14;
	shf.r.wrap.b32 	%r2320, %r2317, %r2318, 14;
	mov.b64 	%rd3697, {%r2320, %r2319};
	shf.r.wrap.b32 	%r2321, %r2318, %r2317, 18;
	shf.r.wrap.b32 	%r2322, %r2317, %r2318, 18;
	mov.b64 	%rd3698, {%r2322, %r2321};
	xor.b64  	%rd3699, %rd3697, %rd3698;
	shf.l.wrap.b32 	%r2323, %r2317, %r2318, 23;
	shf.l.wrap.b32 	%r2324, %r2318, %r2317, 23;
	mov.b64 	%rd3700, {%r2324, %r2323};
	xor.b64  	%rd3701, %rd3699, %rd3700;
	add.s64 	%rd3702, %rd3696, %rd3701;
	add.s64 	%rd3703, %rd3702, -6116909921290321640;
	add.s64 	%rd3704, %rd3703, %rd3619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2325,%dummy}, %rd3691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2326}, %rd3691;
	}
	shf.r.wrap.b32 	%r2327, %r2326, %r2325, 28;
	shf.r.wrap.b32 	%r2328, %r2325, %r2326, 28;
	mov.b64 	%rd3705, {%r2328, %r2327};
	shf.l.wrap.b32 	%r2329, %r2325, %r2326, 30;
	shf.l.wrap.b32 	%r2330, %r2326, %r2325, 30;
	mov.b64 	%rd3706, {%r2330, %r2329};
	xor.b64  	%rd3707, %rd3705, %rd3706;
	shf.l.wrap.b32 	%r2331, %r2325, %r2326, 25;
	shf.l.wrap.b32 	%r2332, %r2326, %r2325, 25;
	mov.b64 	%rd3708, {%r2332, %r2331};
	xor.b64  	%rd3709, %rd3707, %rd3708;
	and.b64  	%rd3710, %rd3691, %rd3667;
	or.b64  	%rd3711, %rd3691, %rd3667;
	and.b64  	%rd3712, %rd3711, %rd3643;
	or.b64  	%rd3713, %rd3712, %rd3710;
	add.s64 	%rd3714, %rd3713, %rd3709;
	add.s64 	%rd3715, %rd3714, %rd3703;
	add.s64 	%rd3716, %rd6319, %rd3632;
	xor.b64  	%rd3717, %rd3680, %rd3656;
	and.b64  	%rd3718, %rd3704, %rd3717;
	xor.b64  	%rd3719, %rd3718, %rd3656;
	add.s64 	%rd3720, %rd3716, %rd3719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2333,%dummy}, %rd3704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2334}, %rd3704;
	}
	shf.r.wrap.b32 	%r2335, %r2334, %r2333, 14;
	shf.r.wrap.b32 	%r2336, %r2333, %r2334, 14;
	mov.b64 	%rd3721, {%r2336, %r2335};
	shf.r.wrap.b32 	%r2337, %r2334, %r2333, 18;
	shf.r.wrap.b32 	%r2338, %r2333, %r2334, 18;
	mov.b64 	%rd3722, {%r2338, %r2337};
	xor.b64  	%rd3723, %rd3721, %rd3722;
	shf.l.wrap.b32 	%r2339, %r2333, %r2334, 23;
	shf.l.wrap.b32 	%r2340, %r2334, %r2333, 23;
	mov.b64 	%rd3724, {%r2340, %r2339};
	xor.b64  	%rd3725, %rd3723, %rd3724;
	add.s64 	%rd3726, %rd3720, %rd3725;
	add.s64 	%rd3727, %rd3726, -2880145864133508542;
	add.s64 	%rd3728, %rd3727, %rd3643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2341,%dummy}, %rd3715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2342}, %rd3715;
	}
	shf.r.wrap.b32 	%r2343, %r2342, %r2341, 28;
	shf.r.wrap.b32 	%r2344, %r2341, %r2342, 28;
	mov.b64 	%rd3729, {%r2344, %r2343};
	shf.l.wrap.b32 	%r2345, %r2341, %r2342, 30;
	shf.l.wrap.b32 	%r2346, %r2342, %r2341, 30;
	mov.b64 	%rd3730, {%r2346, %r2345};
	xor.b64  	%rd3731, %rd3729, %rd3730;
	shf.l.wrap.b32 	%r2347, %r2341, %r2342, 25;
	shf.l.wrap.b32 	%r2348, %r2342, %r2341, 25;
	mov.b64 	%rd3732, {%r2348, %r2347};
	xor.b64  	%rd3733, %rd3731, %rd3732;
	and.b64  	%rd3734, %rd3715, %rd3691;
	or.b64  	%rd3735, %rd3715, %rd3691;
	and.b64  	%rd3736, %rd3735, %rd3667;
	or.b64  	%rd3737, %rd3736, %rd3734;
	add.s64 	%rd3738, %rd3737, %rd3733;
	add.s64 	%rd3739, %rd3738, %rd3727;
	add.s64 	%rd3740, %rd6318, %rd3656;
	xor.b64  	%rd3741, %rd3704, %rd3680;
	and.b64  	%rd3742, %rd3728, %rd3741;
	xor.b64  	%rd3743, %rd3742, %rd3680;
	add.s64 	%rd3744, %rd3740, %rd3743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2349,%dummy}, %rd3728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2350}, %rd3728;
	}
	shf.r.wrap.b32 	%r2351, %r2350, %r2349, 14;
	shf.r.wrap.b32 	%r2352, %r2349, %r2350, 14;
	mov.b64 	%rd3745, {%r2352, %r2351};
	shf.r.wrap.b32 	%r2353, %r2350, %r2349, 18;
	shf.r.wrap.b32 	%r2354, %r2349, %r2350, 18;
	mov.b64 	%rd3746, {%r2354, %r2353};
	xor.b64  	%rd3747, %rd3745, %rd3746;
	shf.l.wrap.b32 	%r2355, %r2349, %r2350, 23;
	shf.l.wrap.b32 	%r2356, %r2350, %r2349, 23;
	mov.b64 	%rd3748, {%r2356, %r2355};
	xor.b64  	%rd3749, %rd3747, %rd3748;
	add.s64 	%rd3750, %rd3744, %rd3749;
	add.s64 	%rd3751, %rd3750, 1334009975649890238;
	add.s64 	%rd3752, %rd3751, %rd3667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2357,%dummy}, %rd3739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2358}, %rd3739;
	}
	shf.r.wrap.b32 	%r2359, %r2358, %r2357, 28;
	shf.r.wrap.b32 	%r2360, %r2357, %r2358, 28;
	mov.b64 	%rd3753, {%r2360, %r2359};
	shf.l.wrap.b32 	%r2361, %r2357, %r2358, 30;
	shf.l.wrap.b32 	%r2362, %r2358, %r2357, 30;
	mov.b64 	%rd3754, {%r2362, %r2361};
	xor.b64  	%rd3755, %rd3753, %rd3754;
	shf.l.wrap.b32 	%r2363, %r2357, %r2358, 25;
	shf.l.wrap.b32 	%r2364, %r2358, %r2357, 25;
	mov.b64 	%rd3756, {%r2364, %r2363};
	xor.b64  	%rd3757, %rd3755, %rd3756;
	and.b64  	%rd3758, %rd3739, %rd3715;
	or.b64  	%rd3759, %rd3739, %rd3715;
	and.b64  	%rd3760, %rd3759, %rd3691;
	or.b64  	%rd3761, %rd3760, %rd3758;
	add.s64 	%rd3762, %rd3761, %rd3757;
	add.s64 	%rd3763, %rd3762, %rd3751;
	add.s64 	%rd3764, %rd6317, %rd3680;
	xor.b64  	%rd3765, %rd3728, %rd3704;
	and.b64  	%rd3766, %rd3752, %rd3765;
	xor.b64  	%rd3767, %rd3766, %rd3704;
	add.s64 	%rd3768, %rd3764, %rd3767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2365,%dummy}, %rd3752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2366}, %rd3752;
	}
	shf.r.wrap.b32 	%r2367, %r2366, %r2365, 14;
	shf.r.wrap.b32 	%r2368, %r2365, %r2366, 14;
	mov.b64 	%rd3769, {%r2368, %r2367};
	shf.r.wrap.b32 	%r2369, %r2366, %r2365, 18;
	shf.r.wrap.b32 	%r2370, %r2365, %r2366, 18;
	mov.b64 	%rd3770, {%r2370, %r2369};
	xor.b64  	%rd3771, %rd3769, %rd3770;
	shf.l.wrap.b32 	%r2371, %r2365, %r2366, 23;
	shf.l.wrap.b32 	%r2372, %r2366, %r2365, 23;
	mov.b64 	%rd3772, {%r2372, %r2371};
	xor.b64  	%rd3773, %rd3771, %rd3772;
	add.s64 	%rd3774, %rd3768, %rd3773;
	add.s64 	%rd3775, %rd3774, 2608012711638119052;
	add.s64 	%rd3776, %rd3775, %rd3691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2373,%dummy}, %rd3763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2374}, %rd3763;
	}
	shf.r.wrap.b32 	%r2375, %r2374, %r2373, 28;
	shf.r.wrap.b32 	%r2376, %r2373, %r2374, 28;
	mov.b64 	%rd3777, {%r2376, %r2375};
	shf.l.wrap.b32 	%r2377, %r2373, %r2374, 30;
	shf.l.wrap.b32 	%r2378, %r2374, %r2373, 30;
	mov.b64 	%rd3778, {%r2378, %r2377};
	xor.b64  	%rd3779, %rd3777, %rd3778;
	shf.l.wrap.b32 	%r2379, %r2373, %r2374, 25;
	shf.l.wrap.b32 	%r2380, %r2374, %r2373, 25;
	mov.b64 	%rd3780, {%r2380, %r2379};
	xor.b64  	%rd3781, %rd3779, %rd3780;
	and.b64  	%rd3782, %rd3763, %rd3739;
	or.b64  	%rd3783, %rd3763, %rd3739;
	and.b64  	%rd3784, %rd3783, %rd3715;
	or.b64  	%rd3785, %rd3784, %rd3782;
	add.s64 	%rd3786, %rd3785, %rd3781;
	add.s64 	%rd3787, %rd3786, %rd3775;
	add.s64 	%rd3788, %rd6316, %rd3704;
	xor.b64  	%rd3789, %rd3752, %rd3728;
	and.b64  	%rd3790, %rd3776, %rd3789;
	xor.b64  	%rd3791, %rd3790, %rd3728;
	add.s64 	%rd3792, %rd3788, %rd3791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2381,%dummy}, %rd3776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2382}, %rd3776;
	}
	shf.r.wrap.b32 	%r2383, %r2382, %r2381, 14;
	shf.r.wrap.b32 	%r2384, %r2381, %r2382, 14;
	mov.b64 	%rd3793, {%r2384, %r2383};
	shf.r.wrap.b32 	%r2385, %r2382, %r2381, 18;
	shf.r.wrap.b32 	%r2386, %r2381, %r2382, 18;
	mov.b64 	%rd3794, {%r2386, %r2385};
	xor.b64  	%rd3795, %rd3793, %rd3794;
	shf.l.wrap.b32 	%r2387, %r2381, %r2382, 23;
	shf.l.wrap.b32 	%r2388, %r2382, %r2381, 23;
	mov.b64 	%rd3796, {%r2388, %r2387};
	xor.b64  	%rd3797, %rd3795, %rd3796;
	add.s64 	%rd3798, %rd3792, %rd3797;
	add.s64 	%rd3799, %rd3798, 6128411473006802146;
	add.s64 	%rd3800, %rd3799, %rd3715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2389,%dummy}, %rd3787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2390}, %rd3787;
	}
	shf.r.wrap.b32 	%r2391, %r2390, %r2389, 28;
	shf.r.wrap.b32 	%r2392, %r2389, %r2390, 28;
	mov.b64 	%rd3801, {%r2392, %r2391};
	shf.l.wrap.b32 	%r2393, %r2389, %r2390, 30;
	shf.l.wrap.b32 	%r2394, %r2390, %r2389, 30;
	mov.b64 	%rd3802, {%r2394, %r2393};
	xor.b64  	%rd3803, %rd3801, %rd3802;
	shf.l.wrap.b32 	%r2395, %r2389, %r2390, 25;
	shf.l.wrap.b32 	%r2396, %r2390, %r2389, 25;
	mov.b64 	%rd3804, {%r2396, %r2395};
	xor.b64  	%rd3805, %rd3803, %rd3804;
	and.b64  	%rd3806, %rd3787, %rd3763;
	or.b64  	%rd3807, %rd3787, %rd3763;
	and.b64  	%rd3808, %rd3807, %rd3739;
	or.b64  	%rd3809, %rd3808, %rd3806;
	add.s64 	%rd3810, %rd3809, %rd3805;
	add.s64 	%rd3811, %rd3810, %rd3799;
	add.s64 	%rd3812, %rd6315, %rd3728;
	xor.b64  	%rd3813, %rd3776, %rd3752;
	and.b64  	%rd3814, %rd3800, %rd3813;
	xor.b64  	%rd3815, %rd3814, %rd3752;
	add.s64 	%rd3816, %rd3812, %rd3815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2397,%dummy}, %rd3800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2398}, %rd3800;
	}
	shf.r.wrap.b32 	%r2399, %r2398, %r2397, 14;
	shf.r.wrap.b32 	%r2400, %r2397, %r2398, 14;
	mov.b64 	%rd3817, {%r2400, %r2399};
	shf.r.wrap.b32 	%r2401, %r2398, %r2397, 18;
	shf.r.wrap.b32 	%r2402, %r2397, %r2398, 18;
	mov.b64 	%rd3818, {%r2402, %r2401};
	xor.b64  	%rd3819, %rd3817, %rd3818;
	shf.l.wrap.b32 	%r2403, %r2397, %r2398, 23;
	shf.l.wrap.b32 	%r2404, %r2398, %r2397, 23;
	mov.b64 	%rd3820, {%r2404, %r2403};
	xor.b64  	%rd3821, %rd3819, %rd3820;
	add.s64 	%rd3822, %rd3816, %rd3821;
	add.s64 	%rd3823, %rd3822, 8268148722764581231;
	add.s64 	%rd3824, %rd3823, %rd3739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2405,%dummy}, %rd3811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2406}, %rd3811;
	}
	shf.r.wrap.b32 	%r2407, %r2406, %r2405, 28;
	shf.r.wrap.b32 	%r2408, %r2405, %r2406, 28;
	mov.b64 	%rd3825, {%r2408, %r2407};
	shf.l.wrap.b32 	%r2409, %r2405, %r2406, 30;
	shf.l.wrap.b32 	%r2410, %r2406, %r2405, 30;
	mov.b64 	%rd3826, {%r2410, %r2409};
	xor.b64  	%rd3827, %rd3825, %rd3826;
	shf.l.wrap.b32 	%r2411, %r2405, %r2406, 25;
	shf.l.wrap.b32 	%r2412, %r2406, %r2405, 25;
	mov.b64 	%rd3828, {%r2412, %r2411};
	xor.b64  	%rd3829, %rd3827, %rd3828;
	and.b64  	%rd3830, %rd3811, %rd3787;
	or.b64  	%rd3831, %rd3811, %rd3787;
	and.b64  	%rd3832, %rd3831, %rd3763;
	or.b64  	%rd3833, %rd3832, %rd3830;
	add.s64 	%rd3834, %rd3833, %rd3829;
	add.s64 	%rd3835, %rd3834, %rd3823;
	add.s64 	%rd3836, %rd6314, %rd3752;
	xor.b64  	%rd3837, %rd3800, %rd3776;
	and.b64  	%rd3838, %rd3824, %rd3837;
	xor.b64  	%rd3839, %rd3838, %rd3776;
	add.s64 	%rd3840, %rd3836, %rd3839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2413,%dummy}, %rd3824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2414}, %rd3824;
	}
	shf.r.wrap.b32 	%r2415, %r2414, %r2413, 14;
	shf.r.wrap.b32 	%r2416, %r2413, %r2414, 14;
	mov.b64 	%rd3841, {%r2416, %r2415};
	shf.r.wrap.b32 	%r2417, %r2414, %r2413, 18;
	shf.r.wrap.b32 	%r2418, %r2413, %r2414, 18;
	mov.b64 	%rd3842, {%r2418, %r2417};
	xor.b64  	%rd3843, %rd3841, %rd3842;
	shf.l.wrap.b32 	%r2419, %r2413, %r2414, 23;
	shf.l.wrap.b32 	%r2420, %r2414, %r2413, 23;
	mov.b64 	%rd3844, {%r2420, %r2419};
	xor.b64  	%rd3845, %rd3843, %rd3844;
	add.s64 	%rd3846, %rd3840, %rd3845;
	add.s64 	%rd3847, %rd3846, -9160688886553864527;
	add.s64 	%rd3848, %rd3847, %rd3763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2421,%dummy}, %rd3835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2422}, %rd3835;
	}
	shf.r.wrap.b32 	%r2423, %r2422, %r2421, 28;
	shf.r.wrap.b32 	%r2424, %r2421, %r2422, 28;
	mov.b64 	%rd3849, {%r2424, %r2423};
	shf.l.wrap.b32 	%r2425, %r2421, %r2422, 30;
	shf.l.wrap.b32 	%r2426, %r2422, %r2421, 30;
	mov.b64 	%rd3850, {%r2426, %r2425};
	xor.b64  	%rd3851, %rd3849, %rd3850;
	shf.l.wrap.b32 	%r2427, %r2421, %r2422, 25;
	shf.l.wrap.b32 	%r2428, %r2422, %r2421, 25;
	mov.b64 	%rd3852, {%r2428, %r2427};
	xor.b64  	%rd3853, %rd3851, %rd3852;
	and.b64  	%rd3854, %rd3835, %rd3811;
	or.b64  	%rd3855, %rd3835, %rd3811;
	and.b64  	%rd3856, %rd3855, %rd3787;
	or.b64  	%rd3857, %rd3856, %rd3854;
	add.s64 	%rd3858, %rd3857, %rd3853;
	add.s64 	%rd3859, %rd3858, %rd3847;
	add.s64 	%rd3860, %rd6313, %rd3776;
	xor.b64  	%rd3861, %rd3824, %rd3800;
	and.b64  	%rd3862, %rd3848, %rd3861;
	xor.b64  	%rd3863, %rd3862, %rd3800;
	add.s64 	%rd3864, %rd3860, %rd3863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2429,%dummy}, %rd3848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2430}, %rd3848;
	}
	shf.r.wrap.b32 	%r2431, %r2430, %r2429, 14;
	shf.r.wrap.b32 	%r2432, %r2429, %r2430, 14;
	mov.b64 	%rd3865, {%r2432, %r2431};
	shf.r.wrap.b32 	%r2433, %r2430, %r2429, 18;
	shf.r.wrap.b32 	%r2434, %r2429, %r2430, 18;
	mov.b64 	%rd3866, {%r2434, %r2433};
	xor.b64  	%rd3867, %rd3865, %rd3866;
	shf.l.wrap.b32 	%r2435, %r2429, %r2430, 23;
	shf.l.wrap.b32 	%r2436, %r2430, %r2429, 23;
	mov.b64 	%rd3868, {%r2436, %r2435};
	xor.b64  	%rd3869, %rd3867, %rd3868;
	add.s64 	%rd3870, %rd3864, %rd3869;
	add.s64 	%rd3871, %rd3870, -7215885187991268811;
	add.s64 	%rd3872, %rd3871, %rd3787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2437,%dummy}, %rd3859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2438}, %rd3859;
	}
	shf.r.wrap.b32 	%r2439, %r2438, %r2437, 28;
	shf.r.wrap.b32 	%r2440, %r2437, %r2438, 28;
	mov.b64 	%rd3873, {%r2440, %r2439};
	shf.l.wrap.b32 	%r2441, %r2437, %r2438, 30;
	shf.l.wrap.b32 	%r2442, %r2438, %r2437, 30;
	mov.b64 	%rd3874, {%r2442, %r2441};
	xor.b64  	%rd3875, %rd3873, %rd3874;
	shf.l.wrap.b32 	%r2443, %r2437, %r2438, 25;
	shf.l.wrap.b32 	%r2444, %r2438, %r2437, 25;
	mov.b64 	%rd3876, {%r2444, %r2443};
	xor.b64  	%rd3877, %rd3875, %rd3876;
	and.b64  	%rd3878, %rd3859, %rd3835;
	or.b64  	%rd3879, %rd3859, %rd3835;
	and.b64  	%rd3880, %rd3879, %rd3811;
	or.b64  	%rd3881, %rd3880, %rd3878;
	add.s64 	%rd3882, %rd3881, %rd3877;
	add.s64 	%rd3883, %rd3882, %rd3871;
	add.s64 	%rd3884, %rd6312, %rd3800;
	xor.b64  	%rd3885, %rd3848, %rd3824;
	and.b64  	%rd3886, %rd3872, %rd3885;
	xor.b64  	%rd3887, %rd3886, %rd3824;
	add.s64 	%rd3888, %rd3884, %rd3887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2445,%dummy}, %rd3872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2446}, %rd3872;
	}
	shf.r.wrap.b32 	%r2447, %r2446, %r2445, 14;
	shf.r.wrap.b32 	%r2448, %r2445, %r2446, 14;
	mov.b64 	%rd3889, {%r2448, %r2447};
	shf.r.wrap.b32 	%r2449, %r2446, %r2445, 18;
	shf.r.wrap.b32 	%r2450, %r2445, %r2446, 18;
	mov.b64 	%rd3890, {%r2450, %r2449};
	xor.b64  	%rd3891, %rd3889, %rd3890;
	shf.l.wrap.b32 	%r2451, %r2445, %r2446, 23;
	shf.l.wrap.b32 	%r2452, %r2446, %r2445, 23;
	mov.b64 	%rd3892, {%r2452, %r2451};
	xor.b64  	%rd3893, %rd3891, %rd3892;
	add.s64 	%rd3894, %rd3888, %rd3893;
	add.s64 	%rd3895, %rd3894, -4495734319001033068;
	add.s64 	%rd3896, %rd3895, %rd3811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2453,%dummy}, %rd3883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2454}, %rd3883;
	}
	shf.r.wrap.b32 	%r2455, %r2454, %r2453, 28;
	shf.r.wrap.b32 	%r2456, %r2453, %r2454, 28;
	mov.b64 	%rd3897, {%r2456, %r2455};
	shf.l.wrap.b32 	%r2457, %r2453, %r2454, 30;
	shf.l.wrap.b32 	%r2458, %r2454, %r2453, 30;
	mov.b64 	%rd3898, {%r2458, %r2457};
	xor.b64  	%rd3899, %rd3897, %rd3898;
	shf.l.wrap.b32 	%r2459, %r2453, %r2454, 25;
	shf.l.wrap.b32 	%r2460, %r2454, %r2453, 25;
	mov.b64 	%rd3900, {%r2460, %r2459};
	xor.b64  	%rd3901, %rd3899, %rd3900;
	and.b64  	%rd3902, %rd3883, %rd3859;
	or.b64  	%rd3903, %rd3883, %rd3859;
	and.b64  	%rd3904, %rd3903, %rd3835;
	or.b64  	%rd3905, %rd3904, %rd3902;
	add.s64 	%rd3906, %rd3905, %rd3901;
	add.s64 	%rd3907, %rd3906, %rd3895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2461}, %rd6313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2462,%dummy}, %rd6313;
	}
	shf.l.wrap.b32 	%r2463, %r2462, %r2461, 3;
	shf.l.wrap.b32 	%r2464, %r2461, %r2462, 3;
	mov.b64 	%rd3908, {%r2464, %r2463};
	shf.r.wrap.b32 	%r2465, %r2461, %r2462, 19;
	shf.r.wrap.b32 	%r2466, %r2462, %r2461, 19;
	mov.b64 	%rd3909, {%r2466, %r2465};
	xor.b64  	%rd3910, %rd3909, %rd3908;
	shr.u64 	%rd3911, %rd6313, 6;
	xor.b64  	%rd3912, %rd3910, %rd3911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2467,%dummy}, %rd6326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2468}, %rd6326;
	}
	shf.r.wrap.b32 	%r2469, %r2468, %r2467, 8;
	shf.r.wrap.b32 	%r2470, %r2467, %r2468, 8;
	mov.b64 	%rd3913, {%r2470, %r2469};
	shf.r.wrap.b32 	%r2471, %r2468, %r2467, 1;
	shf.r.wrap.b32 	%r2472, %r2467, %r2468, 1;
	mov.b64 	%rd3914, {%r2472, %r2471};
	xor.b64  	%rd3915, %rd3914, %rd3913;
	shr.u64 	%rd3916, %rd6326, 7;
	xor.b64  	%rd3917, %rd3915, %rd3916;
	add.s64 	%rd3918, %rd6318, %rd3912;
	add.s64 	%rd3919, %rd3918, %rd6327;
	add.s64 	%rd3920, %rd3919, %rd3917;
	add.s64 	%rd3921, %rd3920, %rd3824;
	xor.b64  	%rd3922, %rd3872, %rd3848;
	and.b64  	%rd3923, %rd3896, %rd3922;
	xor.b64  	%rd3924, %rd3923, %rd3848;
	add.s64 	%rd3925, %rd3921, %rd3924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2473,%dummy}, %rd3896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2474}, %rd3896;
	}
	shf.r.wrap.b32 	%r2475, %r2474, %r2473, 14;
	shf.r.wrap.b32 	%r2476, %r2473, %r2474, 14;
	mov.b64 	%rd3926, {%r2476, %r2475};
	shf.r.wrap.b32 	%r2477, %r2474, %r2473, 18;
	shf.r.wrap.b32 	%r2478, %r2473, %r2474, 18;
	mov.b64 	%rd3927, {%r2478, %r2477};
	xor.b64  	%rd3928, %rd3926, %rd3927;
	shf.l.wrap.b32 	%r2479, %r2473, %r2474, 23;
	shf.l.wrap.b32 	%r2480, %r2474, %r2473, 23;
	mov.b64 	%rd3929, {%r2480, %r2479};
	xor.b64  	%rd3930, %rd3928, %rd3929;
	add.s64 	%rd3931, %rd3925, %rd3930;
	add.s64 	%rd3932, %rd3931, -1973867731355612462;
	add.s64 	%rd3933, %rd3932, %rd3835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2481,%dummy}, %rd3907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2482}, %rd3907;
	}
	shf.r.wrap.b32 	%r2483, %r2482, %r2481, 28;
	shf.r.wrap.b32 	%r2484, %r2481, %r2482, 28;
	mov.b64 	%rd3934, {%r2484, %r2483};
	shf.l.wrap.b32 	%r2485, %r2481, %r2482, 30;
	shf.l.wrap.b32 	%r2486, %r2482, %r2481, 30;
	mov.b64 	%rd3935, {%r2486, %r2485};
	xor.b64  	%rd3936, %rd3934, %rd3935;
	shf.l.wrap.b32 	%r2487, %r2481, %r2482, 25;
	shf.l.wrap.b32 	%r2488, %r2482, %r2481, 25;
	mov.b64 	%rd3937, {%r2488, %r2487};
	xor.b64  	%rd3938, %rd3936, %rd3937;
	and.b64  	%rd3939, %rd3907, %rd3883;
	or.b64  	%rd3940, %rd3907, %rd3883;
	and.b64  	%rd3941, %rd3940, %rd3859;
	or.b64  	%rd3942, %rd3941, %rd3939;
	add.s64 	%rd3943, %rd3942, %rd3938;
	add.s64 	%rd3944, %rd3943, %rd3932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2489}, %rd6312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2490,%dummy}, %rd6312;
	}
	shf.l.wrap.b32 	%r2491, %r2490, %r2489, 3;
	shf.l.wrap.b32 	%r2492, %r2489, %r2490, 3;
	mov.b64 	%rd3945, {%r2492, %r2491};
	shf.r.wrap.b32 	%r2493, %r2489, %r2490, 19;
	shf.r.wrap.b32 	%r2494, %r2490, %r2489, 19;
	mov.b64 	%rd3946, {%r2494, %r2493};
	xor.b64  	%rd3947, %rd3946, %rd3945;
	shr.u64 	%rd3948, %rd6312, 6;
	xor.b64  	%rd3949, %rd3947, %rd3948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2495,%dummy}, %rd6325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2496}, %rd6325;
	}
	shf.r.wrap.b32 	%r2497, %r2496, %r2495, 8;
	shf.r.wrap.b32 	%r2498, %r2495, %r2496, 8;
	mov.b64 	%rd3950, {%r2498, %r2497};
	shf.r.wrap.b32 	%r2499, %r2496, %r2495, 1;
	shf.r.wrap.b32 	%r2500, %r2495, %r2496, 1;
	mov.b64 	%rd3951, {%r2500, %r2499};
	xor.b64  	%rd3952, %rd3951, %rd3950;
	shr.u64 	%rd3953, %rd6325, 7;
	xor.b64  	%rd3954, %rd3952, %rd3953;
	add.s64 	%rd3955, %rd6317, %rd3949;
	add.s64 	%rd3956, %rd3955, %rd6326;
	add.s64 	%rd3957, %rd3956, %rd3954;
	add.s64 	%rd3958, %rd3957, %rd3848;
	xor.b64  	%rd3959, %rd3896, %rd3872;
	and.b64  	%rd3960, %rd3933, %rd3959;
	xor.b64  	%rd3961, %rd3960, %rd3872;
	add.s64 	%rd3962, %rd3958, %rd3961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2501,%dummy}, %rd3933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2502}, %rd3933;
	}
	shf.r.wrap.b32 	%r2503, %r2502, %r2501, 14;
	shf.r.wrap.b32 	%r2504, %r2501, %r2502, 14;
	mov.b64 	%rd3963, {%r2504, %r2503};
	shf.r.wrap.b32 	%r2505, %r2502, %r2501, 18;
	shf.r.wrap.b32 	%r2506, %r2501, %r2502, 18;
	mov.b64 	%rd3964, {%r2506, %r2505};
	xor.b64  	%rd3965, %rd3963, %rd3964;
	shf.l.wrap.b32 	%r2507, %r2501, %r2502, 23;
	shf.l.wrap.b32 	%r2508, %r2502, %r2501, 23;
	mov.b64 	%rd3966, {%r2508, %r2507};
	xor.b64  	%rd3967, %rd3965, %rd3966;
	add.s64 	%rd3968, %rd3962, %rd3967;
	add.s64 	%rd3969, %rd3968, -1171420211273849373;
	add.s64 	%rd3970, %rd3969, %rd3859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2509,%dummy}, %rd3944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2510}, %rd3944;
	}
	shf.r.wrap.b32 	%r2511, %r2510, %r2509, 28;
	shf.r.wrap.b32 	%r2512, %r2509, %r2510, 28;
	mov.b64 	%rd3971, {%r2512, %r2511};
	shf.l.wrap.b32 	%r2513, %r2509, %r2510, 30;
	shf.l.wrap.b32 	%r2514, %r2510, %r2509, 30;
	mov.b64 	%rd3972, {%r2514, %r2513};
	xor.b64  	%rd3973, %rd3971, %rd3972;
	shf.l.wrap.b32 	%r2515, %r2509, %r2510, 25;
	shf.l.wrap.b32 	%r2516, %r2510, %r2509, 25;
	mov.b64 	%rd3974, {%r2516, %r2515};
	xor.b64  	%rd3975, %rd3973, %rd3974;
	and.b64  	%rd3976, %rd3944, %rd3907;
	or.b64  	%rd3977, %rd3944, %rd3907;
	and.b64  	%rd3978, %rd3977, %rd3883;
	or.b64  	%rd3979, %rd3978, %rd3976;
	add.s64 	%rd3980, %rd3979, %rd3975;
	add.s64 	%rd3981, %rd3980, %rd3969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2517,%dummy}, %rd3920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2518}, %rd3920;
	}
	shf.r.wrap.b32 	%r2519, %r2518, %r2517, 19;
	shf.r.wrap.b32 	%r2520, %r2517, %r2518, 19;
	mov.b64 	%rd3982, {%r2520, %r2519};
	shf.l.wrap.b32 	%r2521, %r2517, %r2518, 3;
	shf.l.wrap.b32 	%r2522, %r2518, %r2517, 3;
	mov.b64 	%rd3983, {%r2522, %r2521};
	xor.b64  	%rd3984, %rd3982, %rd3983;
	shr.u64 	%rd3985, %rd3920, 6;
	xor.b64  	%rd3986, %rd3984, %rd3985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2523,%dummy}, %rd6324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2524}, %rd6324;
	}
	shf.r.wrap.b32 	%r2525, %r2524, %r2523, 8;
	shf.r.wrap.b32 	%r2526, %r2523, %r2524, 8;
	mov.b64 	%rd3987, {%r2526, %r2525};
	shf.r.wrap.b32 	%r2527, %r2524, %r2523, 1;
	shf.r.wrap.b32 	%r2528, %r2523, %r2524, 1;
	mov.b64 	%rd3988, {%r2528, %r2527};
	xor.b64  	%rd3989, %rd3988, %rd3987;
	shr.u64 	%rd3990, %rd6324, 7;
	xor.b64  	%rd3991, %rd3989, %rd3990;
	add.s64 	%rd3992, %rd6325, %rd6316;
	add.s64 	%rd3993, %rd3992, %rd3991;
	add.s64 	%rd3994, %rd3993, %rd3986;
	add.s64 	%rd3995, %rd3994, %rd3872;
	xor.b64  	%rd3996, %rd3933, %rd3896;
	and.b64  	%rd3997, %rd3970, %rd3996;
	xor.b64  	%rd3998, %rd3997, %rd3896;
	add.s64 	%rd3999, %rd3995, %rd3998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2529,%dummy}, %rd3970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2530}, %rd3970;
	}
	shf.r.wrap.b32 	%r2531, %r2530, %r2529, 14;
	shf.r.wrap.b32 	%r2532, %r2529, %r2530, 14;
	mov.b64 	%rd4000, {%r2532, %r2531};
	shf.r.wrap.b32 	%r2533, %r2530, %r2529, 18;
	shf.r.wrap.b32 	%r2534, %r2529, %r2530, 18;
	mov.b64 	%rd4001, {%r2534, %r2533};
	xor.b64  	%rd4002, %rd4000, %rd4001;
	shf.l.wrap.b32 	%r2535, %r2529, %r2530, 23;
	shf.l.wrap.b32 	%r2536, %r2530, %r2529, 23;
	mov.b64 	%rd4003, {%r2536, %r2535};
	xor.b64  	%rd4004, %rd4002, %rd4003;
	add.s64 	%rd4005, %rd3999, %rd4004;
	add.s64 	%rd4006, %rd4005, 1135362057144423861;
	add.s64 	%rd4007, %rd4006, %rd3883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2537,%dummy}, %rd3981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2538}, %rd3981;
	}
	shf.r.wrap.b32 	%r2539, %r2538, %r2537, 28;
	shf.r.wrap.b32 	%r2540, %r2537, %r2538, 28;
	mov.b64 	%rd4008, {%r2540, %r2539};
	shf.l.wrap.b32 	%r2541, %r2537, %r2538, 30;
	shf.l.wrap.b32 	%r2542, %r2538, %r2537, 30;
	mov.b64 	%rd4009, {%r2542, %r2541};
	xor.b64  	%rd4010, %rd4008, %rd4009;
	shf.l.wrap.b32 	%r2543, %r2537, %r2538, 25;
	shf.l.wrap.b32 	%r2544, %r2538, %r2537, 25;
	mov.b64 	%rd4011, {%r2544, %r2543};
	xor.b64  	%rd4012, %rd4010, %rd4011;
	and.b64  	%rd4013, %rd3981, %rd3944;
	or.b64  	%rd4014, %rd3981, %rd3944;
	and.b64  	%rd4015, %rd4014, %rd3907;
	or.b64  	%rd4016, %rd4015, %rd4013;
	add.s64 	%rd4017, %rd4016, %rd4012;
	add.s64 	%rd4018, %rd4017, %rd4006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2545,%dummy}, %rd3957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2546}, %rd3957;
	}
	shf.r.wrap.b32 	%r2547, %r2546, %r2545, 19;
	shf.r.wrap.b32 	%r2548, %r2545, %r2546, 19;
	mov.b64 	%rd4019, {%r2548, %r2547};
	shf.l.wrap.b32 	%r2549, %r2545, %r2546, 3;
	shf.l.wrap.b32 	%r2550, %r2546, %r2545, 3;
	mov.b64 	%rd4020, {%r2550, %r2549};
	xor.b64  	%rd4021, %rd4019, %rd4020;
	shr.u64 	%rd4022, %rd3957, 6;
	xor.b64  	%rd4023, %rd4021, %rd4022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2551,%dummy}, %rd6323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2552}, %rd6323;
	}
	shf.r.wrap.b32 	%r2553, %r2552, %r2551, 8;
	shf.r.wrap.b32 	%r2554, %r2551, %r2552, 8;
	mov.b64 	%rd4024, {%r2554, %r2553};
	shf.r.wrap.b32 	%r2555, %r2552, %r2551, 1;
	shf.r.wrap.b32 	%r2556, %r2551, %r2552, 1;
	mov.b64 	%rd4025, {%r2556, %r2555};
	xor.b64  	%rd4026, %rd4025, %rd4024;
	shr.u64 	%rd4027, %rd6323, 7;
	xor.b64  	%rd4028, %rd4026, %rd4027;
	add.s64 	%rd4029, %rd6324, %rd6315;
	add.s64 	%rd4030, %rd4029, %rd4028;
	add.s64 	%rd4031, %rd4030, %rd4023;
	add.s64 	%rd4032, %rd4031, %rd3896;
	xor.b64  	%rd4033, %rd3970, %rd3933;
	and.b64  	%rd4034, %rd4007, %rd4033;
	xor.b64  	%rd4035, %rd4034, %rd3933;
	add.s64 	%rd4036, %rd4032, %rd4035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2557,%dummy}, %rd4007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2558}, %rd4007;
	}
	shf.r.wrap.b32 	%r2559, %r2558, %r2557, 14;
	shf.r.wrap.b32 	%r2560, %r2557, %r2558, 14;
	mov.b64 	%rd4037, {%r2560, %r2559};
	shf.r.wrap.b32 	%r2561, %r2558, %r2557, 18;
	shf.r.wrap.b32 	%r2562, %r2557, %r2558, 18;
	mov.b64 	%rd4038, {%r2562, %r2561};
	xor.b64  	%rd4039, %rd4037, %rd4038;
	shf.l.wrap.b32 	%r2563, %r2557, %r2558, 23;
	shf.l.wrap.b32 	%r2564, %r2558, %r2557, 23;
	mov.b64 	%rd4040, {%r2564, %r2563};
	xor.b64  	%rd4041, %rd4039, %rd4040;
	add.s64 	%rd4042, %rd4036, %rd4041;
	add.s64 	%rd4043, %rd4042, 2597628984639134821;
	add.s64 	%rd4044, %rd4043, %rd3907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2565,%dummy}, %rd4018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2566}, %rd4018;
	}
	shf.r.wrap.b32 	%r2567, %r2566, %r2565, 28;
	shf.r.wrap.b32 	%r2568, %r2565, %r2566, 28;
	mov.b64 	%rd4045, {%r2568, %r2567};
	shf.l.wrap.b32 	%r2569, %r2565, %r2566, 30;
	shf.l.wrap.b32 	%r2570, %r2566, %r2565, 30;
	mov.b64 	%rd4046, {%r2570, %r2569};
	xor.b64  	%rd4047, %rd4045, %rd4046;
	shf.l.wrap.b32 	%r2571, %r2565, %r2566, 25;
	shf.l.wrap.b32 	%r2572, %r2566, %r2565, 25;
	mov.b64 	%rd4048, {%r2572, %r2571};
	xor.b64  	%rd4049, %rd4047, %rd4048;
	and.b64  	%rd4050, %rd4018, %rd3981;
	or.b64  	%rd4051, %rd4018, %rd3981;
	and.b64  	%rd4052, %rd4051, %rd3944;
	or.b64  	%rd4053, %rd4052, %rd4050;
	add.s64 	%rd4054, %rd4053, %rd4049;
	add.s64 	%rd4055, %rd4054, %rd4043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2573,%dummy}, %rd3994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2574}, %rd3994;
	}
	shf.r.wrap.b32 	%r2575, %r2574, %r2573, 19;
	shf.r.wrap.b32 	%r2576, %r2573, %r2574, 19;
	mov.b64 	%rd4056, {%r2576, %r2575};
	shf.l.wrap.b32 	%r2577, %r2573, %r2574, 3;
	shf.l.wrap.b32 	%r2578, %r2574, %r2573, 3;
	mov.b64 	%rd4057, {%r2578, %r2577};
	xor.b64  	%rd4058, %rd4056, %rd4057;
	shr.u64 	%rd4059, %rd3994, 6;
	xor.b64  	%rd4060, %rd4058, %rd4059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2579,%dummy}, %rd6322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2580}, %rd6322;
	}
	shf.r.wrap.b32 	%r2581, %r2580, %r2579, 8;
	shf.r.wrap.b32 	%r2582, %r2579, %r2580, 8;
	mov.b64 	%rd4061, {%r2582, %r2581};
	shf.r.wrap.b32 	%r2583, %r2580, %r2579, 1;
	shf.r.wrap.b32 	%r2584, %r2579, %r2580, 1;
	mov.b64 	%rd4062, {%r2584, %r2583};
	xor.b64  	%rd4063, %rd4062, %rd4061;
	shr.u64 	%rd4064, %rd6322, 7;
	xor.b64  	%rd4065, %rd4063, %rd4064;
	add.s64 	%rd4066, %rd6323, %rd6314;
	add.s64 	%rd4067, %rd4066, %rd4065;
	add.s64 	%rd4068, %rd4067, %rd4060;
	add.s64 	%rd4069, %rd4068, %rd3933;
	xor.b64  	%rd4070, %rd4007, %rd3970;
	and.b64  	%rd4071, %rd4044, %rd4070;
	xor.b64  	%rd4072, %rd4071, %rd3970;
	add.s64 	%rd4073, %rd4069, %rd4072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2585,%dummy}, %rd4044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2586}, %rd4044;
	}
	shf.r.wrap.b32 	%r2587, %r2586, %r2585, 14;
	shf.r.wrap.b32 	%r2588, %r2585, %r2586, 14;
	mov.b64 	%rd4074, {%r2588, %r2587};
	shf.r.wrap.b32 	%r2589, %r2586, %r2585, 18;
	shf.r.wrap.b32 	%r2590, %r2585, %r2586, 18;
	mov.b64 	%rd4075, {%r2590, %r2589};
	xor.b64  	%rd4076, %rd4074, %rd4075;
	shf.l.wrap.b32 	%r2591, %r2585, %r2586, 23;
	shf.l.wrap.b32 	%r2592, %r2586, %r2585, 23;
	mov.b64 	%rd4077, {%r2592, %r2591};
	xor.b64  	%rd4078, %rd4076, %rd4077;
	add.s64 	%rd4079, %rd4073, %rd4078;
	add.s64 	%rd4080, %rd4079, 3308224258029322869;
	add.s64 	%rd4081, %rd4080, %rd3944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2593,%dummy}, %rd4055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2594}, %rd4055;
	}
	shf.r.wrap.b32 	%r2595, %r2594, %r2593, 28;
	shf.r.wrap.b32 	%r2596, %r2593, %r2594, 28;
	mov.b64 	%rd4082, {%r2596, %r2595};
	shf.l.wrap.b32 	%r2597, %r2593, %r2594, 30;
	shf.l.wrap.b32 	%r2598, %r2594, %r2593, 30;
	mov.b64 	%rd4083, {%r2598, %r2597};
	xor.b64  	%rd4084, %rd4082, %rd4083;
	shf.l.wrap.b32 	%r2599, %r2593, %r2594, 25;
	shf.l.wrap.b32 	%r2600, %r2594, %r2593, 25;
	mov.b64 	%rd4085, {%r2600, %r2599};
	xor.b64  	%rd4086, %rd4084, %rd4085;
	and.b64  	%rd4087, %rd4055, %rd4018;
	or.b64  	%rd4088, %rd4055, %rd4018;
	and.b64  	%rd4089, %rd4088, %rd3981;
	or.b64  	%rd4090, %rd4089, %rd4087;
	add.s64 	%rd4091, %rd4090, %rd4086;
	add.s64 	%rd4092, %rd4091, %rd4080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2601,%dummy}, %rd4031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2602}, %rd4031;
	}
	shf.r.wrap.b32 	%r2603, %r2602, %r2601, 19;
	shf.r.wrap.b32 	%r2604, %r2601, %r2602, 19;
	mov.b64 	%rd4093, {%r2604, %r2603};
	shf.l.wrap.b32 	%r2605, %r2601, %r2602, 3;
	shf.l.wrap.b32 	%r2606, %r2602, %r2601, 3;
	mov.b64 	%rd4094, {%r2606, %r2605};
	xor.b64  	%rd4095, %rd4093, %rd4094;
	shr.u64 	%rd4096, %rd4031, 6;
	xor.b64  	%rd4097, %rd4095, %rd4096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2607,%dummy}, %rd6321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2608}, %rd6321;
	}
	shf.r.wrap.b32 	%r2609, %r2608, %r2607, 8;
	shf.r.wrap.b32 	%r2610, %r2607, %r2608, 8;
	mov.b64 	%rd4098, {%r2610, %r2609};
	shf.r.wrap.b32 	%r2611, %r2608, %r2607, 1;
	shf.r.wrap.b32 	%r2612, %r2607, %r2608, 1;
	mov.b64 	%rd4099, {%r2612, %r2611};
	xor.b64  	%rd4100, %rd4099, %rd4098;
	shr.u64 	%rd4101, %rd6321, 7;
	xor.b64  	%rd4102, %rd4100, %rd4101;
	add.s64 	%rd4103, %rd6322, %rd6313;
	add.s64 	%rd4104, %rd4103, %rd4102;
	add.s64 	%rd4105, %rd4104, %rd4097;
	add.s64 	%rd4106, %rd4105, %rd3970;
	xor.b64  	%rd4107, %rd4044, %rd4007;
	and.b64  	%rd4108, %rd4081, %rd4107;
	xor.b64  	%rd4109, %rd4108, %rd4007;
	add.s64 	%rd4110, %rd4106, %rd4109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2613,%dummy}, %rd4081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2614}, %rd4081;
	}
	shf.r.wrap.b32 	%r2615, %r2614, %r2613, 14;
	shf.r.wrap.b32 	%r2616, %r2613, %r2614, 14;
	mov.b64 	%rd4111, {%r2616, %r2615};
	shf.r.wrap.b32 	%r2617, %r2614, %r2613, 18;
	shf.r.wrap.b32 	%r2618, %r2613, %r2614, 18;
	mov.b64 	%rd4112, {%r2618, %r2617};
	xor.b64  	%rd4113, %rd4111, %rd4112;
	shf.l.wrap.b32 	%r2619, %r2613, %r2614, 23;
	shf.l.wrap.b32 	%r2620, %r2614, %r2613, 23;
	mov.b64 	%rd4114, {%r2620, %r2619};
	xor.b64  	%rd4115, %rd4113, %rd4114;
	add.s64 	%rd4116, %rd4110, %rd4115;
	add.s64 	%rd4117, %rd4116, 5365058923640841347;
	add.s64 	%rd4118, %rd4117, %rd3981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2621,%dummy}, %rd4092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2622}, %rd4092;
	}
	shf.r.wrap.b32 	%r2623, %r2622, %r2621, 28;
	shf.r.wrap.b32 	%r2624, %r2621, %r2622, 28;
	mov.b64 	%rd4119, {%r2624, %r2623};
	shf.l.wrap.b32 	%r2625, %r2621, %r2622, 30;
	shf.l.wrap.b32 	%r2626, %r2622, %r2621, 30;
	mov.b64 	%rd4120, {%r2626, %r2625};
	xor.b64  	%rd4121, %rd4119, %rd4120;
	shf.l.wrap.b32 	%r2627, %r2621, %r2622, 25;
	shf.l.wrap.b32 	%r2628, %r2622, %r2621, 25;
	mov.b64 	%rd4122, {%r2628, %r2627};
	xor.b64  	%rd4123, %rd4121, %rd4122;
	and.b64  	%rd4124, %rd4092, %rd4055;
	or.b64  	%rd4125, %rd4092, %rd4055;
	and.b64  	%rd4126, %rd4125, %rd4018;
	or.b64  	%rd4127, %rd4126, %rd4124;
	add.s64 	%rd4128, %rd4127, %rd4123;
	add.s64 	%rd4129, %rd4128, %rd4117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2629,%dummy}, %rd4068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2630}, %rd4068;
	}
	shf.r.wrap.b32 	%r2631, %r2630, %r2629, 19;
	shf.r.wrap.b32 	%r2632, %r2629, %r2630, 19;
	mov.b64 	%rd4130, {%r2632, %r2631};
	shf.l.wrap.b32 	%r2633, %r2629, %r2630, 3;
	shf.l.wrap.b32 	%r2634, %r2630, %r2629, 3;
	mov.b64 	%rd4131, {%r2634, %r2633};
	xor.b64  	%rd4132, %rd4130, %rd4131;
	shr.u64 	%rd4133, %rd4068, 6;
	xor.b64  	%rd4134, %rd4132, %rd4133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2635,%dummy}, %rd6320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2636}, %rd6320;
	}
	shf.r.wrap.b32 	%r2637, %r2636, %r2635, 8;
	shf.r.wrap.b32 	%r2638, %r2635, %r2636, 8;
	mov.b64 	%rd4135, {%r2638, %r2637};
	shf.r.wrap.b32 	%r2639, %r2636, %r2635, 1;
	shf.r.wrap.b32 	%r2640, %r2635, %r2636, 1;
	mov.b64 	%rd4136, {%r2640, %r2639};
	xor.b64  	%rd4137, %rd4136, %rd4135;
	shr.u64 	%rd4138, %rd6320, 7;
	xor.b64  	%rd4139, %rd4137, %rd4138;
	add.s64 	%rd4140, %rd6321, %rd6312;
	add.s64 	%rd4141, %rd4140, %rd4139;
	add.s64 	%rd4142, %rd4141, %rd4134;
	add.s64 	%rd4143, %rd4142, %rd4007;
	xor.b64  	%rd4144, %rd4081, %rd4044;
	and.b64  	%rd4145, %rd4118, %rd4144;
	xor.b64  	%rd4146, %rd4145, %rd4044;
	add.s64 	%rd4147, %rd4143, %rd4146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2641,%dummy}, %rd4118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2642}, %rd4118;
	}
	shf.r.wrap.b32 	%r2643, %r2642, %r2641, 14;
	shf.r.wrap.b32 	%r2644, %r2641, %r2642, 14;
	mov.b64 	%rd4148, {%r2644, %r2643};
	shf.r.wrap.b32 	%r2645, %r2642, %r2641, 18;
	shf.r.wrap.b32 	%r2646, %r2641, %r2642, 18;
	mov.b64 	%rd4149, {%r2646, %r2645};
	xor.b64  	%rd4150, %rd4148, %rd4149;
	shf.l.wrap.b32 	%r2647, %r2641, %r2642, 23;
	shf.l.wrap.b32 	%r2648, %r2642, %r2641, 23;
	mov.b64 	%rd4151, {%r2648, %r2647};
	xor.b64  	%rd4152, %rd4150, %rd4151;
	add.s64 	%rd4153, %rd4147, %rd4152;
	add.s64 	%rd4154, %rd4153, 6679025012923562964;
	add.s64 	%rd4155, %rd4154, %rd4018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2649,%dummy}, %rd4129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2650}, %rd4129;
	}
	shf.r.wrap.b32 	%r2651, %r2650, %r2649, 28;
	shf.r.wrap.b32 	%r2652, %r2649, %r2650, 28;
	mov.b64 	%rd4156, {%r2652, %r2651};
	shf.l.wrap.b32 	%r2653, %r2649, %r2650, 30;
	shf.l.wrap.b32 	%r2654, %r2650, %r2649, 30;
	mov.b64 	%rd4157, {%r2654, %r2653};
	xor.b64  	%rd4158, %rd4156, %rd4157;
	shf.l.wrap.b32 	%r2655, %r2649, %r2650, 25;
	shf.l.wrap.b32 	%r2656, %r2650, %r2649, 25;
	mov.b64 	%rd4159, {%r2656, %r2655};
	xor.b64  	%rd4160, %rd4158, %rd4159;
	and.b64  	%rd4161, %rd4129, %rd4092;
	or.b64  	%rd4162, %rd4129, %rd4092;
	and.b64  	%rd4163, %rd4162, %rd4055;
	or.b64  	%rd4164, %rd4163, %rd4161;
	add.s64 	%rd4165, %rd4164, %rd4160;
	add.s64 	%rd4166, %rd4165, %rd4154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2657,%dummy}, %rd4105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2658}, %rd4105;
	}
	shf.r.wrap.b32 	%r2659, %r2658, %r2657, 19;
	shf.r.wrap.b32 	%r2660, %r2657, %r2658, 19;
	mov.b64 	%rd4167, {%r2660, %r2659};
	shf.l.wrap.b32 	%r2661, %r2657, %r2658, 3;
	shf.l.wrap.b32 	%r2662, %r2658, %r2657, 3;
	mov.b64 	%rd4168, {%r2662, %r2661};
	xor.b64  	%rd4169, %rd4167, %rd4168;
	shr.u64 	%rd4170, %rd4105, 6;
	xor.b64  	%rd4171, %rd4169, %rd4170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2663,%dummy}, %rd6319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2664}, %rd6319;
	}
	shf.r.wrap.b32 	%r2665, %r2664, %r2663, 8;
	shf.r.wrap.b32 	%r2666, %r2663, %r2664, 8;
	mov.b64 	%rd4172, {%r2666, %r2665};
	shf.r.wrap.b32 	%r2667, %r2664, %r2663, 1;
	shf.r.wrap.b32 	%r2668, %r2663, %r2664, 1;
	mov.b64 	%rd4173, {%r2668, %r2667};
	xor.b64  	%rd4174, %rd4173, %rd4172;
	shr.u64 	%rd4175, %rd6319, 7;
	xor.b64  	%rd4176, %rd4174, %rd4175;
	add.s64 	%rd4177, %rd4176, %rd6320;
	add.s64 	%rd4178, %rd4177, %rd3920;
	add.s64 	%rd4179, %rd4178, %rd4171;
	add.s64 	%rd4180, %rd4179, %rd4044;
	xor.b64  	%rd4181, %rd4118, %rd4081;
	and.b64  	%rd4182, %rd4155, %rd4181;
	xor.b64  	%rd4183, %rd4182, %rd4081;
	add.s64 	%rd4184, %rd4180, %rd4183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2669,%dummy}, %rd4155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2670}, %rd4155;
	}
	shf.r.wrap.b32 	%r2671, %r2670, %r2669, 14;
	shf.r.wrap.b32 	%r2672, %r2669, %r2670, 14;
	mov.b64 	%rd4185, {%r2672, %r2671};
	shf.r.wrap.b32 	%r2673, %r2670, %r2669, 18;
	shf.r.wrap.b32 	%r2674, %r2669, %r2670, 18;
	mov.b64 	%rd4186, {%r2674, %r2673};
	xor.b64  	%rd4187, %rd4185, %rd4186;
	shf.l.wrap.b32 	%r2675, %r2669, %r2670, 23;
	shf.l.wrap.b32 	%r2676, %r2670, %r2669, 23;
	mov.b64 	%rd4188, {%r2676, %r2675};
	xor.b64  	%rd4189, %rd4187, %rd4188;
	add.s64 	%rd4190, %rd4184, %rd4189;
	add.s64 	%rd4191, %rd4190, 8573033837759648693;
	add.s64 	%rd4192, %rd4191, %rd4055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2677,%dummy}, %rd4166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2678}, %rd4166;
	}
	shf.r.wrap.b32 	%r2679, %r2678, %r2677, 28;
	shf.r.wrap.b32 	%r2680, %r2677, %r2678, 28;
	mov.b64 	%rd4193, {%r2680, %r2679};
	shf.l.wrap.b32 	%r2681, %r2677, %r2678, 30;
	shf.l.wrap.b32 	%r2682, %r2678, %r2677, 30;
	mov.b64 	%rd4194, {%r2682, %r2681};
	xor.b64  	%rd4195, %rd4193, %rd4194;
	shf.l.wrap.b32 	%r2683, %r2677, %r2678, 25;
	shf.l.wrap.b32 	%r2684, %r2678, %r2677, 25;
	mov.b64 	%rd4196, {%r2684, %r2683};
	xor.b64  	%rd4197, %rd4195, %rd4196;
	and.b64  	%rd4198, %rd4166, %rd4129;
	or.b64  	%rd4199, %rd4166, %rd4129;
	and.b64  	%rd4200, %rd4199, %rd4092;
	or.b64  	%rd4201, %rd4200, %rd4198;
	add.s64 	%rd4202, %rd4201, %rd4197;
	add.s64 	%rd4203, %rd4202, %rd4191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2685,%dummy}, %rd4142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2686}, %rd4142;
	}
	shf.r.wrap.b32 	%r2687, %r2686, %r2685, 19;
	shf.r.wrap.b32 	%r2688, %r2685, %r2686, 19;
	mov.b64 	%rd4204, {%r2688, %r2687};
	shf.l.wrap.b32 	%r2689, %r2685, %r2686, 3;
	shf.l.wrap.b32 	%r2690, %r2686, %r2685, 3;
	mov.b64 	%rd4205, {%r2690, %r2689};
	xor.b64  	%rd4206, %rd4204, %rd4205;
	shr.u64 	%rd4207, %rd4142, 6;
	xor.b64  	%rd4208, %rd4206, %rd4207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2691,%dummy}, %rd6318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2692}, %rd6318;
	}
	shf.r.wrap.b32 	%r2693, %r2692, %r2691, 8;
	shf.r.wrap.b32 	%r2694, %r2691, %r2692, 8;
	mov.b64 	%rd4209, {%r2694, %r2693};
	shf.r.wrap.b32 	%r2695, %r2692, %r2691, 1;
	shf.r.wrap.b32 	%r2696, %r2691, %r2692, 1;
	mov.b64 	%rd4210, {%r2696, %r2695};
	xor.b64  	%rd4211, %rd4210, %rd4209;
	shr.u64 	%rd4212, %rd6318, 7;
	xor.b64  	%rd4213, %rd4211, %rd4212;
	add.s64 	%rd4214, %rd4213, %rd6319;
	add.s64 	%rd4215, %rd4214, %rd3957;
	add.s64 	%rd4216, %rd4215, %rd4208;
	add.s64 	%rd4217, %rd4216, %rd4081;
	xor.b64  	%rd4218, %rd4155, %rd4118;
	and.b64  	%rd4219, %rd4192, %rd4218;
	xor.b64  	%rd4220, %rd4219, %rd4118;
	add.s64 	%rd4221, %rd4217, %rd4220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2697,%dummy}, %rd4192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2698}, %rd4192;
	}
	shf.r.wrap.b32 	%r2699, %r2698, %r2697, 14;
	shf.r.wrap.b32 	%r2700, %r2697, %r2698, 14;
	mov.b64 	%rd4222, {%r2700, %r2699};
	shf.r.wrap.b32 	%r2701, %r2698, %r2697, 18;
	shf.r.wrap.b32 	%r2702, %r2697, %r2698, 18;
	mov.b64 	%rd4223, {%r2702, %r2701};
	xor.b64  	%rd4224, %rd4222, %rd4223;
	shf.l.wrap.b32 	%r2703, %r2697, %r2698, 23;
	shf.l.wrap.b32 	%r2704, %r2698, %r2697, 23;
	mov.b64 	%rd4225, {%r2704, %r2703};
	xor.b64  	%rd4226, %rd4224, %rd4225;
	add.s64 	%rd4227, %rd4221, %rd4226;
	add.s64 	%rd4228, %rd4227, -7476448914759557205;
	add.s64 	%rd4229, %rd4228, %rd4092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2705,%dummy}, %rd4203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2706}, %rd4203;
	}
	shf.r.wrap.b32 	%r2707, %r2706, %r2705, 28;
	shf.r.wrap.b32 	%r2708, %r2705, %r2706, 28;
	mov.b64 	%rd4230, {%r2708, %r2707};
	shf.l.wrap.b32 	%r2709, %r2705, %r2706, 30;
	shf.l.wrap.b32 	%r2710, %r2706, %r2705, 30;
	mov.b64 	%rd4231, {%r2710, %r2709};
	xor.b64  	%rd4232, %rd4230, %rd4231;
	shf.l.wrap.b32 	%r2711, %r2705, %r2706, 25;
	shf.l.wrap.b32 	%r2712, %r2706, %r2705, 25;
	mov.b64 	%rd4233, {%r2712, %r2711};
	xor.b64  	%rd4234, %rd4232, %rd4233;
	and.b64  	%rd4235, %rd4203, %rd4166;
	or.b64  	%rd4236, %rd4203, %rd4166;
	and.b64  	%rd4237, %rd4236, %rd4129;
	or.b64  	%rd4238, %rd4237, %rd4235;
	add.s64 	%rd4239, %rd4238, %rd4234;
	add.s64 	%rd4240, %rd4239, %rd4228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2713,%dummy}, %rd4179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2714}, %rd4179;
	}
	shf.r.wrap.b32 	%r2715, %r2714, %r2713, 19;
	shf.r.wrap.b32 	%r2716, %r2713, %r2714, 19;
	mov.b64 	%rd4241, {%r2716, %r2715};
	shf.l.wrap.b32 	%r2717, %r2713, %r2714, 3;
	shf.l.wrap.b32 	%r2718, %r2714, %r2713, 3;
	mov.b64 	%rd4242, {%r2718, %r2717};
	xor.b64  	%rd4243, %rd4241, %rd4242;
	shr.u64 	%rd4244, %rd4179, 6;
	xor.b64  	%rd4245, %rd4243, %rd4244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2719,%dummy}, %rd6317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2720}, %rd6317;
	}
	shf.r.wrap.b32 	%r2721, %r2720, %r2719, 8;
	shf.r.wrap.b32 	%r2722, %r2719, %r2720, 8;
	mov.b64 	%rd4246, {%r2722, %r2721};
	shf.r.wrap.b32 	%r2723, %r2720, %r2719, 1;
	shf.r.wrap.b32 	%r2724, %r2719, %r2720, 1;
	mov.b64 	%rd4247, {%r2724, %r2723};
	xor.b64  	%rd4248, %rd4247, %rd4246;
	shr.u64 	%rd4249, %rd6317, 7;
	xor.b64  	%rd4250, %rd4248, %rd4249;
	add.s64 	%rd4251, %rd4250, %rd6318;
	add.s64 	%rd4252, %rd4251, %rd3994;
	add.s64 	%rd4253, %rd4252, %rd4245;
	add.s64 	%rd4254, %rd4253, %rd4118;
	xor.b64  	%rd4255, %rd4192, %rd4155;
	and.b64  	%rd4256, %rd4229, %rd4255;
	xor.b64  	%rd4257, %rd4256, %rd4155;
	add.s64 	%rd4258, %rd4254, %rd4257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2725,%dummy}, %rd4229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2726}, %rd4229;
	}
	shf.r.wrap.b32 	%r2727, %r2726, %r2725, 14;
	shf.r.wrap.b32 	%r2728, %r2725, %r2726, 14;
	mov.b64 	%rd4259, {%r2728, %r2727};
	shf.r.wrap.b32 	%r2729, %r2726, %r2725, 18;
	shf.r.wrap.b32 	%r2730, %r2725, %r2726, 18;
	mov.b64 	%rd4260, {%r2730, %r2729};
	xor.b64  	%rd4261, %rd4259, %rd4260;
	shf.l.wrap.b32 	%r2731, %r2725, %r2726, 23;
	shf.l.wrap.b32 	%r2732, %r2726, %r2725, 23;
	mov.b64 	%rd4262, {%r2732, %r2731};
	xor.b64  	%rd4263, %rd4261, %rd4262;
	add.s64 	%rd4264, %rd4258, %rd4263;
	add.s64 	%rd4265, %rd4264, -6327057829258317296;
	add.s64 	%rd4266, %rd4265, %rd4129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2733,%dummy}, %rd4240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2734}, %rd4240;
	}
	shf.r.wrap.b32 	%r2735, %r2734, %r2733, 28;
	shf.r.wrap.b32 	%r2736, %r2733, %r2734, 28;
	mov.b64 	%rd4267, {%r2736, %r2735};
	shf.l.wrap.b32 	%r2737, %r2733, %r2734, 30;
	shf.l.wrap.b32 	%r2738, %r2734, %r2733, 30;
	mov.b64 	%rd4268, {%r2738, %r2737};
	xor.b64  	%rd4269, %rd4267, %rd4268;
	shf.l.wrap.b32 	%r2739, %r2733, %r2734, 25;
	shf.l.wrap.b32 	%r2740, %r2734, %r2733, 25;
	mov.b64 	%rd4270, {%r2740, %r2739};
	xor.b64  	%rd4271, %rd4269, %rd4270;
	and.b64  	%rd4272, %rd4240, %rd4203;
	or.b64  	%rd4273, %rd4240, %rd4203;
	and.b64  	%rd4274, %rd4273, %rd4166;
	or.b64  	%rd4275, %rd4274, %rd4272;
	add.s64 	%rd4276, %rd4275, %rd4271;
	add.s64 	%rd4277, %rd4276, %rd4265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2741,%dummy}, %rd4216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2742}, %rd4216;
	}
	shf.r.wrap.b32 	%r2743, %r2742, %r2741, 19;
	shf.r.wrap.b32 	%r2744, %r2741, %r2742, 19;
	mov.b64 	%rd4278, {%r2744, %r2743};
	shf.l.wrap.b32 	%r2745, %r2741, %r2742, 3;
	shf.l.wrap.b32 	%r2746, %r2742, %r2741, 3;
	mov.b64 	%rd4279, {%r2746, %r2745};
	xor.b64  	%rd4280, %rd4278, %rd4279;
	shr.u64 	%rd4281, %rd4216, 6;
	xor.b64  	%rd4282, %rd4280, %rd4281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2747,%dummy}, %rd6316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2748}, %rd6316;
	}
	shf.r.wrap.b32 	%r2749, %r2748, %r2747, 8;
	shf.r.wrap.b32 	%r2750, %r2747, %r2748, 8;
	mov.b64 	%rd4283, {%r2750, %r2749};
	shf.r.wrap.b32 	%r2751, %r2748, %r2747, 1;
	shf.r.wrap.b32 	%r2752, %r2747, %r2748, 1;
	mov.b64 	%rd4284, {%r2752, %r2751};
	xor.b64  	%rd4285, %rd4284, %rd4283;
	shr.u64 	%rd4286, %rd6316, 7;
	xor.b64  	%rd4287, %rd4285, %rd4286;
	add.s64 	%rd4288, %rd4287, %rd6317;
	add.s64 	%rd4289, %rd4288, %rd4031;
	add.s64 	%rd4290, %rd4289, %rd4282;
	add.s64 	%rd4291, %rd4290, %rd4155;
	xor.b64  	%rd4292, %rd4229, %rd4192;
	and.b64  	%rd4293, %rd4266, %rd4292;
	xor.b64  	%rd4294, %rd4293, %rd4192;
	add.s64 	%rd4295, %rd4291, %rd4294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2753,%dummy}, %rd4266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2754}, %rd4266;
	}
	shf.r.wrap.b32 	%r2755, %r2754, %r2753, 14;
	shf.r.wrap.b32 	%r2756, %r2753, %r2754, 14;
	mov.b64 	%rd4296, {%r2756, %r2755};
	shf.r.wrap.b32 	%r2757, %r2754, %r2753, 18;
	shf.r.wrap.b32 	%r2758, %r2753, %r2754, 18;
	mov.b64 	%rd4297, {%r2758, %r2757};
	xor.b64  	%rd4298, %rd4296, %rd4297;
	shf.l.wrap.b32 	%r2759, %r2753, %r2754, 23;
	shf.l.wrap.b32 	%r2760, %r2754, %r2753, 23;
	mov.b64 	%rd4299, {%r2760, %r2759};
	xor.b64  	%rd4300, %rd4298, %rd4299;
	add.s64 	%rd4301, %rd4295, %rd4300;
	add.s64 	%rd4302, %rd4301, -5763719355590565569;
	add.s64 	%rd4303, %rd4302, %rd4166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2761,%dummy}, %rd4277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2762}, %rd4277;
	}
	shf.r.wrap.b32 	%r2763, %r2762, %r2761, 28;
	shf.r.wrap.b32 	%r2764, %r2761, %r2762, 28;
	mov.b64 	%rd4304, {%r2764, %r2763};
	shf.l.wrap.b32 	%r2765, %r2761, %r2762, 30;
	shf.l.wrap.b32 	%r2766, %r2762, %r2761, 30;
	mov.b64 	%rd4305, {%r2766, %r2765};
	xor.b64  	%rd4306, %rd4304, %rd4305;
	shf.l.wrap.b32 	%r2767, %r2761, %r2762, 25;
	shf.l.wrap.b32 	%r2768, %r2762, %r2761, 25;
	mov.b64 	%rd4307, {%r2768, %r2767};
	xor.b64  	%rd4308, %rd4306, %rd4307;
	and.b64  	%rd4309, %rd4277, %rd4240;
	or.b64  	%rd4310, %rd4277, %rd4240;
	and.b64  	%rd4311, %rd4310, %rd4203;
	or.b64  	%rd4312, %rd4311, %rd4309;
	add.s64 	%rd4313, %rd4312, %rd4308;
	add.s64 	%rd4314, %rd4313, %rd4302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2769,%dummy}, %rd4253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2770}, %rd4253;
	}
	shf.r.wrap.b32 	%r2771, %r2770, %r2769, 19;
	shf.r.wrap.b32 	%r2772, %r2769, %r2770, 19;
	mov.b64 	%rd4315, {%r2772, %r2771};
	shf.l.wrap.b32 	%r2773, %r2769, %r2770, 3;
	shf.l.wrap.b32 	%r2774, %r2770, %r2769, 3;
	mov.b64 	%rd4316, {%r2774, %r2773};
	xor.b64  	%rd4317, %rd4315, %rd4316;
	shr.u64 	%rd4318, %rd4253, 6;
	xor.b64  	%rd4319, %rd4317, %rd4318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2775,%dummy}, %rd6315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2776}, %rd6315;
	}
	shf.r.wrap.b32 	%r2777, %r2776, %r2775, 8;
	shf.r.wrap.b32 	%r2778, %r2775, %r2776, 8;
	mov.b64 	%rd4320, {%r2778, %r2777};
	shf.r.wrap.b32 	%r2779, %r2776, %r2775, 1;
	shf.r.wrap.b32 	%r2780, %r2775, %r2776, 1;
	mov.b64 	%rd4321, {%r2780, %r2779};
	xor.b64  	%rd4322, %rd4321, %rd4320;
	shr.u64 	%rd4323, %rd6315, 7;
	xor.b64  	%rd4324, %rd4322, %rd4323;
	add.s64 	%rd4325, %rd4324, %rd6316;
	add.s64 	%rd4326, %rd4325, %rd4068;
	add.s64 	%rd4327, %rd4326, %rd4319;
	add.s64 	%rd4328, %rd4327, %rd4192;
	xor.b64  	%rd4329, %rd4266, %rd4229;
	and.b64  	%rd4330, %rd4303, %rd4329;
	xor.b64  	%rd4331, %rd4330, %rd4229;
	add.s64 	%rd4332, %rd4328, %rd4331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2781,%dummy}, %rd4303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2782}, %rd4303;
	}
	shf.r.wrap.b32 	%r2783, %r2782, %r2781, 14;
	shf.r.wrap.b32 	%r2784, %r2781, %r2782, 14;
	mov.b64 	%rd4333, {%r2784, %r2783};
	shf.r.wrap.b32 	%r2785, %r2782, %r2781, 18;
	shf.r.wrap.b32 	%r2786, %r2781, %r2782, 18;
	mov.b64 	%rd4334, {%r2786, %r2785};
	xor.b64  	%rd4335, %rd4333, %rd4334;
	shf.l.wrap.b32 	%r2787, %r2781, %r2782, 23;
	shf.l.wrap.b32 	%r2788, %r2782, %r2781, 23;
	mov.b64 	%rd4336, {%r2788, %r2787};
	xor.b64  	%rd4337, %rd4335, %rd4336;
	add.s64 	%rd4338, %rd4332, %rd4337;
	add.s64 	%rd4339, %rd4338, -4658551843659510044;
	add.s64 	%rd4340, %rd4339, %rd4203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2789,%dummy}, %rd4314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2790}, %rd4314;
	}
	shf.r.wrap.b32 	%r2791, %r2790, %r2789, 28;
	shf.r.wrap.b32 	%r2792, %r2789, %r2790, 28;
	mov.b64 	%rd4341, {%r2792, %r2791};
	shf.l.wrap.b32 	%r2793, %r2789, %r2790, 30;
	shf.l.wrap.b32 	%r2794, %r2790, %r2789, 30;
	mov.b64 	%rd4342, {%r2794, %r2793};
	xor.b64  	%rd4343, %rd4341, %rd4342;
	shf.l.wrap.b32 	%r2795, %r2789, %r2790, 25;
	shf.l.wrap.b32 	%r2796, %r2790, %r2789, 25;
	mov.b64 	%rd4344, {%r2796, %r2795};
	xor.b64  	%rd4345, %rd4343, %rd4344;
	and.b64  	%rd4346, %rd4314, %rd4277;
	or.b64  	%rd4347, %rd4314, %rd4277;
	and.b64  	%rd4348, %rd4347, %rd4240;
	or.b64  	%rd4349, %rd4348, %rd4346;
	add.s64 	%rd4350, %rd4349, %rd4345;
	add.s64 	%rd4351, %rd4350, %rd4339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2797,%dummy}, %rd4290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2798}, %rd4290;
	}
	shf.r.wrap.b32 	%r2799, %r2798, %r2797, 19;
	shf.r.wrap.b32 	%r2800, %r2797, %r2798, 19;
	mov.b64 	%rd4352, {%r2800, %r2799};
	shf.l.wrap.b32 	%r2801, %r2797, %r2798, 3;
	shf.l.wrap.b32 	%r2802, %r2798, %r2797, 3;
	mov.b64 	%rd4353, {%r2802, %r2801};
	xor.b64  	%rd4354, %rd4352, %rd4353;
	shr.u64 	%rd4355, %rd4290, 6;
	xor.b64  	%rd4356, %rd4354, %rd4355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2803,%dummy}, %rd6314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2804}, %rd6314;
	}
	shf.r.wrap.b32 	%r2805, %r2804, %r2803, 8;
	shf.r.wrap.b32 	%r2806, %r2803, %r2804, 8;
	mov.b64 	%rd4357, {%r2806, %r2805};
	shf.r.wrap.b32 	%r2807, %r2804, %r2803, 1;
	shf.r.wrap.b32 	%r2808, %r2803, %r2804, 1;
	mov.b64 	%rd4358, {%r2808, %r2807};
	xor.b64  	%rd4359, %rd4358, %rd4357;
	shr.u64 	%rd4360, %rd6314, 7;
	xor.b64  	%rd4361, %rd4359, %rd4360;
	add.s64 	%rd4362, %rd4361, %rd6315;
	add.s64 	%rd4363, %rd4362, %rd4105;
	add.s64 	%rd4364, %rd4363, %rd4356;
	add.s64 	%rd4365, %rd4364, %rd4229;
	xor.b64  	%rd4366, %rd4303, %rd4266;
	and.b64  	%rd4367, %rd4340, %rd4366;
	xor.b64  	%rd4368, %rd4367, %rd4266;
	add.s64 	%rd4369, %rd4365, %rd4368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2809,%dummy}, %rd4340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2810}, %rd4340;
	}
	shf.r.wrap.b32 	%r2811, %r2810, %r2809, 14;
	shf.r.wrap.b32 	%r2812, %r2809, %r2810, 14;
	mov.b64 	%rd4370, {%r2812, %r2811};
	shf.r.wrap.b32 	%r2813, %r2810, %r2809, 18;
	shf.r.wrap.b32 	%r2814, %r2809, %r2810, 18;
	mov.b64 	%rd4371, {%r2814, %r2813};
	xor.b64  	%rd4372, %rd4370, %rd4371;
	shf.l.wrap.b32 	%r2815, %r2809, %r2810, 23;
	shf.l.wrap.b32 	%r2816, %r2810, %r2809, 23;
	mov.b64 	%rd4373, {%r2816, %r2815};
	xor.b64  	%rd4374, %rd4372, %rd4373;
	add.s64 	%rd4375, %rd4369, %rd4374;
	add.s64 	%rd4376, %rd4375, -4116276920077217854;
	add.s64 	%rd4377, %rd4376, %rd4240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2817,%dummy}, %rd4351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2818}, %rd4351;
	}
	shf.r.wrap.b32 	%r2819, %r2818, %r2817, 28;
	shf.r.wrap.b32 	%r2820, %r2817, %r2818, 28;
	mov.b64 	%rd4378, {%r2820, %r2819};
	shf.l.wrap.b32 	%r2821, %r2817, %r2818, 30;
	shf.l.wrap.b32 	%r2822, %r2818, %r2817, 30;
	mov.b64 	%rd4379, {%r2822, %r2821};
	xor.b64  	%rd4380, %rd4378, %rd4379;
	shf.l.wrap.b32 	%r2823, %r2817, %r2818, 25;
	shf.l.wrap.b32 	%r2824, %r2818, %r2817, 25;
	mov.b64 	%rd4381, {%r2824, %r2823};
	xor.b64  	%rd4382, %rd4380, %rd4381;
	and.b64  	%rd4383, %rd4351, %rd4314;
	or.b64  	%rd4384, %rd4351, %rd4314;
	and.b64  	%rd4385, %rd4384, %rd4277;
	or.b64  	%rd4386, %rd4385, %rd4383;
	add.s64 	%rd4387, %rd4386, %rd4382;
	add.s64 	%rd4388, %rd4387, %rd4376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2825,%dummy}, %rd4327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2826}, %rd4327;
	}
	shf.r.wrap.b32 	%r2827, %r2826, %r2825, 19;
	shf.r.wrap.b32 	%r2828, %r2825, %r2826, 19;
	mov.b64 	%rd4389, {%r2828, %r2827};
	shf.l.wrap.b32 	%r2829, %r2825, %r2826, 3;
	shf.l.wrap.b32 	%r2830, %r2826, %r2825, 3;
	mov.b64 	%rd4390, {%r2830, %r2829};
	xor.b64  	%rd4391, %rd4389, %rd4390;
	shr.u64 	%rd4392, %rd4327, 6;
	xor.b64  	%rd4393, %rd4391, %rd4392;
	shf.r.wrap.b32 	%r2831, %r2461, %r2462, 8;
	shf.r.wrap.b32 	%r2832, %r2462, %r2461, 8;
	mov.b64 	%rd4394, {%r2832, %r2831};
	shf.r.wrap.b32 	%r2833, %r2461, %r2462, 1;
	shf.r.wrap.b32 	%r2834, %r2462, %r2461, 1;
	mov.b64 	%rd4395, {%r2834, %r2833};
	xor.b64  	%rd4396, %rd4395, %rd4394;
	shr.u64 	%rd4397, %rd6313, 7;
	xor.b64  	%rd4398, %rd4396, %rd4397;
	add.s64 	%rd4399, %rd4398, %rd6314;
	add.s64 	%rd4400, %rd4399, %rd4142;
	add.s64 	%rd4401, %rd4400, %rd4393;
	add.s64 	%rd4402, %rd4401, %rd4266;
	xor.b64  	%rd4403, %rd4340, %rd4303;
	and.b64  	%rd4404, %rd4377, %rd4403;
	xor.b64  	%rd4405, %rd4404, %rd4303;
	add.s64 	%rd4406, %rd4402, %rd4405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2835,%dummy}, %rd4377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2836}, %rd4377;
	}
	shf.r.wrap.b32 	%r2837, %r2836, %r2835, 14;
	shf.r.wrap.b32 	%r2838, %r2835, %r2836, 14;
	mov.b64 	%rd4407, {%r2838, %r2837};
	shf.r.wrap.b32 	%r2839, %r2836, %r2835, 18;
	shf.r.wrap.b32 	%r2840, %r2835, %r2836, 18;
	mov.b64 	%rd4408, {%r2840, %r2839};
	xor.b64  	%rd4409, %rd4407, %rd4408;
	shf.l.wrap.b32 	%r2841, %r2835, %r2836, 23;
	shf.l.wrap.b32 	%r2842, %r2836, %r2835, 23;
	mov.b64 	%rd4410, {%r2842, %r2841};
	xor.b64  	%rd4411, %rd4409, %rd4410;
	add.s64 	%rd4412, %rd4406, %rd4411;
	add.s64 	%rd4413, %rd4412, -3051310485924567259;
	add.s64 	%rd4414, %rd4413, %rd4277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2843,%dummy}, %rd4388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2844}, %rd4388;
	}
	shf.r.wrap.b32 	%r2845, %r2844, %r2843, 28;
	shf.r.wrap.b32 	%r2846, %r2843, %r2844, 28;
	mov.b64 	%rd4415, {%r2846, %r2845};
	shf.l.wrap.b32 	%r2847, %r2843, %r2844, 30;
	shf.l.wrap.b32 	%r2848, %r2844, %r2843, 30;
	mov.b64 	%rd4416, {%r2848, %r2847};
	xor.b64  	%rd4417, %rd4415, %rd4416;
	shf.l.wrap.b32 	%r2849, %r2843, %r2844, 25;
	shf.l.wrap.b32 	%r2850, %r2844, %r2843, 25;
	mov.b64 	%rd4418, {%r2850, %r2849};
	xor.b64  	%rd4419, %rd4417, %rd4418;
	and.b64  	%rd4420, %rd4388, %rd4351;
	or.b64  	%rd4421, %rd4388, %rd4351;
	and.b64  	%rd4422, %rd4421, %rd4314;
	or.b64  	%rd4423, %rd4422, %rd4420;
	add.s64 	%rd4424, %rd4423, %rd4419;
	add.s64 	%rd4425, %rd4424, %rd4413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2851,%dummy}, %rd4364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2852}, %rd4364;
	}
	shf.r.wrap.b32 	%r2853, %r2852, %r2851, 19;
	shf.r.wrap.b32 	%r2854, %r2851, %r2852, 19;
	mov.b64 	%rd4426, {%r2854, %r2853};
	shf.l.wrap.b32 	%r2855, %r2851, %r2852, 3;
	shf.l.wrap.b32 	%r2856, %r2852, %r2851, 3;
	mov.b64 	%rd4427, {%r2856, %r2855};
	xor.b64  	%rd4428, %rd4426, %rd4427;
	shr.u64 	%rd4429, %rd4364, 6;
	xor.b64  	%rd4430, %rd4428, %rd4429;
	shf.r.wrap.b32 	%r2857, %r2489, %r2490, 8;
	shf.r.wrap.b32 	%r2858, %r2490, %r2489, 8;
	mov.b64 	%rd4431, {%r2858, %r2857};
	shf.r.wrap.b32 	%r2859, %r2489, %r2490, 1;
	shf.r.wrap.b32 	%r2860, %r2490, %r2489, 1;
	mov.b64 	%rd4432, {%r2860, %r2859};
	xor.b64  	%rd4433, %rd4432, %rd4431;
	shr.u64 	%rd4434, %rd6312, 7;
	xor.b64  	%rd4435, %rd4433, %rd4434;
	add.s64 	%rd4436, %rd4435, %rd6313;
	add.s64 	%rd4437, %rd4436, %rd4179;
	add.s64 	%rd4438, %rd4437, %rd4430;
	add.s64 	%rd4439, %rd4438, %rd4303;
	xor.b64  	%rd4440, %rd4377, %rd4340;
	and.b64  	%rd4441, %rd4414, %rd4440;
	xor.b64  	%rd4442, %rd4441, %rd4340;
	add.s64 	%rd4443, %rd4439, %rd4442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2861,%dummy}, %rd4414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2862}, %rd4414;
	}
	shf.r.wrap.b32 	%r2863, %r2862, %r2861, 14;
	shf.r.wrap.b32 	%r2864, %r2861, %r2862, 14;
	mov.b64 	%rd4444, {%r2864, %r2863};
	shf.r.wrap.b32 	%r2865, %r2862, %r2861, 18;
	shf.r.wrap.b32 	%r2866, %r2861, %r2862, 18;
	mov.b64 	%rd4445, {%r2866, %r2865};
	xor.b64  	%rd4446, %rd4444, %rd4445;
	shf.l.wrap.b32 	%r2867, %r2861, %r2862, 23;
	shf.l.wrap.b32 	%r2868, %r2862, %r2861, 23;
	mov.b64 	%rd4447, {%r2868, %r2867};
	xor.b64  	%rd4448, %rd4446, %rd4447;
	add.s64 	%rd4449, %rd4443, %rd4448;
	add.s64 	%rd4450, %rd4449, 489312712824947311;
	add.s64 	%rd4451, %rd4450, %rd4314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2869,%dummy}, %rd4425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2870}, %rd4425;
	}
	shf.r.wrap.b32 	%r2871, %r2870, %r2869, 28;
	shf.r.wrap.b32 	%r2872, %r2869, %r2870, 28;
	mov.b64 	%rd4452, {%r2872, %r2871};
	shf.l.wrap.b32 	%r2873, %r2869, %r2870, 30;
	shf.l.wrap.b32 	%r2874, %r2870, %r2869, 30;
	mov.b64 	%rd4453, {%r2874, %r2873};
	xor.b64  	%rd4454, %rd4452, %rd4453;
	shf.l.wrap.b32 	%r2875, %r2869, %r2870, 25;
	shf.l.wrap.b32 	%r2876, %r2870, %r2869, 25;
	mov.b64 	%rd4455, {%r2876, %r2875};
	xor.b64  	%rd4456, %rd4454, %rd4455;
	and.b64  	%rd4457, %rd4425, %rd4388;
	or.b64  	%rd4458, %rd4425, %rd4388;
	and.b64  	%rd4459, %rd4458, %rd4351;
	or.b64  	%rd4460, %rd4459, %rd4457;
	add.s64 	%rd4461, %rd4460, %rd4456;
	add.s64 	%rd4462, %rd4461, %rd4450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2877,%dummy}, %rd4401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2878}, %rd4401;
	}
	shf.r.wrap.b32 	%r2879, %r2878, %r2877, 19;
	shf.r.wrap.b32 	%r2880, %r2877, %r2878, 19;
	mov.b64 	%rd4463, {%r2880, %r2879};
	shf.l.wrap.b32 	%r2881, %r2877, %r2878, 3;
	shf.l.wrap.b32 	%r2882, %r2878, %r2877, 3;
	mov.b64 	%rd4464, {%r2882, %r2881};
	xor.b64  	%rd4465, %rd4463, %rd4464;
	shr.u64 	%rd4466, %rd4401, 6;
	xor.b64  	%rd4467, %rd4465, %rd4466;
	shf.r.wrap.b32 	%r2883, %r2518, %r2517, 1;
	shf.r.wrap.b32 	%r2884, %r2517, %r2518, 1;
	mov.b64 	%rd4468, {%r2884, %r2883};
	shf.r.wrap.b32 	%r2885, %r2518, %r2517, 8;
	shf.r.wrap.b32 	%r2886, %r2517, %r2518, 8;
	mov.b64 	%rd4469, {%r2886, %r2885};
	xor.b64  	%rd4470, %rd4468, %rd4469;
	shr.u64 	%rd4471, %rd3920, 7;
	xor.b64  	%rd4472, %rd4470, %rd4471;
	add.s64 	%rd4473, %rd4472, %rd6312;
	add.s64 	%rd4474, %rd4473, %rd4216;
	add.s64 	%rd4475, %rd4474, %rd4467;
	add.s64 	%rd4476, %rd4475, %rd4340;
	xor.b64  	%rd4477, %rd4414, %rd4377;
	and.b64  	%rd4478, %rd4451, %rd4477;
	xor.b64  	%rd4479, %rd4478, %rd4377;
	add.s64 	%rd4480, %rd4476, %rd4479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2887,%dummy}, %rd4451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2888}, %rd4451;
	}
	shf.r.wrap.b32 	%r2889, %r2888, %r2887, 14;
	shf.r.wrap.b32 	%r2890, %r2887, %r2888, 14;
	mov.b64 	%rd4481, {%r2890, %r2889};
	shf.r.wrap.b32 	%r2891, %r2888, %r2887, 18;
	shf.r.wrap.b32 	%r2892, %r2887, %r2888, 18;
	mov.b64 	%rd4482, {%r2892, %r2891};
	xor.b64  	%rd4483, %rd4481, %rd4482;
	shf.l.wrap.b32 	%r2893, %r2887, %r2888, 23;
	shf.l.wrap.b32 	%r2894, %r2888, %r2887, 23;
	mov.b64 	%rd4484, {%r2894, %r2893};
	xor.b64  	%rd4485, %rd4483, %rd4484;
	add.s64 	%rd4486, %rd4480, %rd4485;
	add.s64 	%rd4487, %rd4486, 1452737877330783856;
	add.s64 	%rd4488, %rd4487, %rd4351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2895,%dummy}, %rd4462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2896}, %rd4462;
	}
	shf.r.wrap.b32 	%r2897, %r2896, %r2895, 28;
	shf.r.wrap.b32 	%r2898, %r2895, %r2896, 28;
	mov.b64 	%rd4489, {%r2898, %r2897};
	shf.l.wrap.b32 	%r2899, %r2895, %r2896, 30;
	shf.l.wrap.b32 	%r2900, %r2896, %r2895, 30;
	mov.b64 	%rd4490, {%r2900, %r2899};
	xor.b64  	%rd4491, %rd4489, %rd4490;
	shf.l.wrap.b32 	%r2901, %r2895, %r2896, 25;
	shf.l.wrap.b32 	%r2902, %r2896, %r2895, 25;
	mov.b64 	%rd4492, {%r2902, %r2901};
	xor.b64  	%rd4493, %rd4491, %rd4492;
	and.b64  	%rd4494, %rd4462, %rd4425;
	or.b64  	%rd4495, %rd4462, %rd4425;
	and.b64  	%rd4496, %rd4495, %rd4388;
	or.b64  	%rd4497, %rd4496, %rd4494;
	add.s64 	%rd4498, %rd4497, %rd4493;
	add.s64 	%rd4499, %rd4498, %rd4487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2903,%dummy}, %rd4438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2904}, %rd4438;
	}
	shf.r.wrap.b32 	%r2905, %r2904, %r2903, 19;
	shf.r.wrap.b32 	%r2906, %r2903, %r2904, 19;
	mov.b64 	%rd4500, {%r2906, %r2905};
	shf.l.wrap.b32 	%r2907, %r2903, %r2904, 3;
	shf.l.wrap.b32 	%r2908, %r2904, %r2903, 3;
	mov.b64 	%rd4501, {%r2908, %r2907};
	xor.b64  	%rd4502, %rd4500, %rd4501;
	shr.u64 	%rd4503, %rd4438, 6;
	xor.b64  	%rd4504, %rd4502, %rd4503;
	shf.r.wrap.b32 	%r2909, %r2546, %r2545, 1;
	shf.r.wrap.b32 	%r2910, %r2545, %r2546, 1;
	mov.b64 	%rd4505, {%r2910, %r2909};
	shf.r.wrap.b32 	%r2911, %r2546, %r2545, 8;
	shf.r.wrap.b32 	%r2912, %r2545, %r2546, 8;
	mov.b64 	%rd4506, {%r2912, %r2911};
	xor.b64  	%rd4507, %rd4505, %rd4506;
	shr.u64 	%rd4508, %rd3957, 7;
	xor.b64  	%rd4509, %rd4507, %rd4508;
	add.s64 	%rd4510, %rd4509, %rd3920;
	add.s64 	%rd4511, %rd4510, %rd4253;
	add.s64 	%rd4512, %rd4511, %rd4504;
	add.s64 	%rd4513, %rd4512, %rd4377;
	xor.b64  	%rd4514, %rd4451, %rd4414;
	and.b64  	%rd4515, %rd4488, %rd4514;
	xor.b64  	%rd4516, %rd4515, %rd4414;
	add.s64 	%rd4517, %rd4513, %rd4516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2913,%dummy}, %rd4488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2914}, %rd4488;
	}
	shf.r.wrap.b32 	%r2915, %r2914, %r2913, 14;
	shf.r.wrap.b32 	%r2916, %r2913, %r2914, 14;
	mov.b64 	%rd4518, {%r2916, %r2915};
	shf.r.wrap.b32 	%r2917, %r2914, %r2913, 18;
	shf.r.wrap.b32 	%r2918, %r2913, %r2914, 18;
	mov.b64 	%rd4519, {%r2918, %r2917};
	xor.b64  	%rd4520, %rd4518, %rd4519;
	shf.l.wrap.b32 	%r2919, %r2913, %r2914, 23;
	shf.l.wrap.b32 	%r2920, %r2914, %r2913, 23;
	mov.b64 	%rd4521, {%r2920, %r2919};
	xor.b64  	%rd4522, %rd4520, %rd4521;
	add.s64 	%rd4523, %rd4517, %rd4522;
	add.s64 	%rd4524, %rd4523, 2861767655752347644;
	add.s64 	%rd4525, %rd4524, %rd4388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2921,%dummy}, %rd4499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2922}, %rd4499;
	}
	shf.r.wrap.b32 	%r2923, %r2922, %r2921, 28;
	shf.r.wrap.b32 	%r2924, %r2921, %r2922, 28;
	mov.b64 	%rd4526, {%r2924, %r2923};
	shf.l.wrap.b32 	%r2925, %r2921, %r2922, 30;
	shf.l.wrap.b32 	%r2926, %r2922, %r2921, 30;
	mov.b64 	%rd4527, {%r2926, %r2925};
	xor.b64  	%rd4528, %rd4526, %rd4527;
	shf.l.wrap.b32 	%r2927, %r2921, %r2922, 25;
	shf.l.wrap.b32 	%r2928, %r2922, %r2921, 25;
	mov.b64 	%rd4529, {%r2928, %r2927};
	xor.b64  	%rd4530, %rd4528, %rd4529;
	and.b64  	%rd4531, %rd4499, %rd4462;
	or.b64  	%rd4532, %rd4499, %rd4462;
	and.b64  	%rd4533, %rd4532, %rd4425;
	or.b64  	%rd4534, %rd4533, %rd4531;
	add.s64 	%rd4535, %rd4534, %rd4530;
	add.s64 	%rd4536, %rd4535, %rd4524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2929,%dummy}, %rd4475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2930}, %rd4475;
	}
	shf.r.wrap.b32 	%r2931, %r2930, %r2929, 19;
	shf.r.wrap.b32 	%r2932, %r2929, %r2930, 19;
	mov.b64 	%rd4537, {%r2932, %r2931};
	shf.l.wrap.b32 	%r2933, %r2929, %r2930, 3;
	shf.l.wrap.b32 	%r2934, %r2930, %r2929, 3;
	mov.b64 	%rd4538, {%r2934, %r2933};
	xor.b64  	%rd4539, %rd4537, %rd4538;
	shr.u64 	%rd4540, %rd4475, 6;
	xor.b64  	%rd4541, %rd4539, %rd4540;
	shf.r.wrap.b32 	%r2935, %r2574, %r2573, 1;
	shf.r.wrap.b32 	%r2936, %r2573, %r2574, 1;
	mov.b64 	%rd4542, {%r2936, %r2935};
	shf.r.wrap.b32 	%r2937, %r2574, %r2573, 8;
	shf.r.wrap.b32 	%r2938, %r2573, %r2574, 8;
	mov.b64 	%rd4543, {%r2938, %r2937};
	xor.b64  	%rd4544, %rd4542, %rd4543;
	shr.u64 	%rd4545, %rd3994, 7;
	xor.b64  	%rd4546, %rd4544, %rd4545;
	add.s64 	%rd4547, %rd4546, %rd3957;
	add.s64 	%rd4548, %rd4547, %rd4290;
	add.s64 	%rd4549, %rd4548, %rd4541;
	add.s64 	%rd4550, %rd4549, %rd4414;
	xor.b64  	%rd4551, %rd4488, %rd4451;
	and.b64  	%rd4552, %rd4525, %rd4551;
	xor.b64  	%rd4553, %rd4552, %rd4451;
	add.s64 	%rd4554, %rd4550, %rd4553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2939,%dummy}, %rd4525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2940}, %rd4525;
	}
	shf.r.wrap.b32 	%r2941, %r2940, %r2939, 14;
	shf.r.wrap.b32 	%r2942, %r2939, %r2940, 14;
	mov.b64 	%rd4555, {%r2942, %r2941};
	shf.r.wrap.b32 	%r2943, %r2940, %r2939, 18;
	shf.r.wrap.b32 	%r2944, %r2939, %r2940, 18;
	mov.b64 	%rd4556, {%r2944, %r2943};
	xor.b64  	%rd4557, %rd4555, %rd4556;
	shf.l.wrap.b32 	%r2945, %r2939, %r2940, 23;
	shf.l.wrap.b32 	%r2946, %r2940, %r2939, 23;
	mov.b64 	%rd4558, {%r2946, %r2945};
	xor.b64  	%rd4559, %rd4557, %rd4558;
	add.s64 	%rd4560, %rd4554, %rd4559;
	add.s64 	%rd4561, %rd4560, 3322285676063803686;
	add.s64 	%rd4562, %rd4561, %rd4425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2947,%dummy}, %rd4536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2948}, %rd4536;
	}
	shf.r.wrap.b32 	%r2949, %r2948, %r2947, 28;
	shf.r.wrap.b32 	%r2950, %r2947, %r2948, 28;
	mov.b64 	%rd4563, {%r2950, %r2949};
	shf.l.wrap.b32 	%r2951, %r2947, %r2948, 30;
	shf.l.wrap.b32 	%r2952, %r2948, %r2947, 30;
	mov.b64 	%rd4564, {%r2952, %r2951};
	xor.b64  	%rd4565, %rd4563, %rd4564;
	shf.l.wrap.b32 	%r2953, %r2947, %r2948, 25;
	shf.l.wrap.b32 	%r2954, %r2948, %r2947, 25;
	mov.b64 	%rd4566, {%r2954, %r2953};
	xor.b64  	%rd4567, %rd4565, %rd4566;
	and.b64  	%rd4568, %rd4536, %rd4499;
	or.b64  	%rd4569, %rd4536, %rd4499;
	and.b64  	%rd4570, %rd4569, %rd4462;
	or.b64  	%rd4571, %rd4570, %rd4568;
	add.s64 	%rd4572, %rd4571, %rd4567;
	add.s64 	%rd4573, %rd4572, %rd4561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2955,%dummy}, %rd4512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2956}, %rd4512;
	}
	shf.r.wrap.b32 	%r2957, %r2956, %r2955, 19;
	shf.r.wrap.b32 	%r2958, %r2955, %r2956, 19;
	mov.b64 	%rd4574, {%r2958, %r2957};
	shf.l.wrap.b32 	%r2959, %r2955, %r2956, 3;
	shf.l.wrap.b32 	%r2960, %r2956, %r2955, 3;
	mov.b64 	%rd4575, {%r2960, %r2959};
	xor.b64  	%rd4576, %rd4574, %rd4575;
	shr.u64 	%rd4577, %rd4512, 6;
	xor.b64  	%rd4578, %rd4576, %rd4577;
	shf.r.wrap.b32 	%r2961, %r2602, %r2601, 1;
	shf.r.wrap.b32 	%r2962, %r2601, %r2602, 1;
	mov.b64 	%rd4579, {%r2962, %r2961};
	shf.r.wrap.b32 	%r2963, %r2602, %r2601, 8;
	shf.r.wrap.b32 	%r2964, %r2601, %r2602, 8;
	mov.b64 	%rd4580, {%r2964, %r2963};
	xor.b64  	%rd4581, %rd4579, %rd4580;
	shr.u64 	%rd4582, %rd4031, 7;
	xor.b64  	%rd4583, %rd4581, %rd4582;
	add.s64 	%rd4584, %rd4583, %rd3994;
	add.s64 	%rd4585, %rd4584, %rd4327;
	add.s64 	%rd4586, %rd4585, %rd4578;
	add.s64 	%rd4587, %rd4586, %rd4451;
	xor.b64  	%rd4588, %rd4525, %rd4488;
	and.b64  	%rd4589, %rd4562, %rd4588;
	xor.b64  	%rd4590, %rd4589, %rd4488;
	add.s64 	%rd4591, %rd4587, %rd4590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2965,%dummy}, %rd4562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2966}, %rd4562;
	}
	shf.r.wrap.b32 	%r2967, %r2966, %r2965, 14;
	shf.r.wrap.b32 	%r2968, %r2965, %r2966, 14;
	mov.b64 	%rd4592, {%r2968, %r2967};
	shf.r.wrap.b32 	%r2969, %r2966, %r2965, 18;
	shf.r.wrap.b32 	%r2970, %r2965, %r2966, 18;
	mov.b64 	%rd4593, {%r2970, %r2969};
	xor.b64  	%rd4594, %rd4592, %rd4593;
	shf.l.wrap.b32 	%r2971, %r2965, %r2966, 23;
	shf.l.wrap.b32 	%r2972, %r2966, %r2965, 23;
	mov.b64 	%rd4595, {%r2972, %r2971};
	xor.b64  	%rd4596, %rd4594, %rd4595;
	add.s64 	%rd4597, %rd4591, %rd4596;
	add.s64 	%rd4598, %rd4597, 5560940570517711597;
	add.s64 	%rd4599, %rd4598, %rd4462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2973,%dummy}, %rd4573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2974}, %rd4573;
	}
	shf.r.wrap.b32 	%r2975, %r2974, %r2973, 28;
	shf.r.wrap.b32 	%r2976, %r2973, %r2974, 28;
	mov.b64 	%rd4600, {%r2976, %r2975};
	shf.l.wrap.b32 	%r2977, %r2973, %r2974, 30;
	shf.l.wrap.b32 	%r2978, %r2974, %r2973, 30;
	mov.b64 	%rd4601, {%r2978, %r2977};
	xor.b64  	%rd4602, %rd4600, %rd4601;
	shf.l.wrap.b32 	%r2979, %r2973, %r2974, 25;
	shf.l.wrap.b32 	%r2980, %r2974, %r2973, 25;
	mov.b64 	%rd4603, {%r2980, %r2979};
	xor.b64  	%rd4604, %rd4602, %rd4603;
	and.b64  	%rd4605, %rd4573, %rd4536;
	or.b64  	%rd4606, %rd4573, %rd4536;
	and.b64  	%rd4607, %rd4606, %rd4499;
	or.b64  	%rd4608, %rd4607, %rd4605;
	add.s64 	%rd4609, %rd4608, %rd4604;
	add.s64 	%rd4610, %rd4609, %rd4598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2981,%dummy}, %rd4549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2982}, %rd4549;
	}
	shf.r.wrap.b32 	%r2983, %r2982, %r2981, 19;
	shf.r.wrap.b32 	%r2984, %r2981, %r2982, 19;
	mov.b64 	%rd4611, {%r2984, %r2983};
	shf.l.wrap.b32 	%r2985, %r2981, %r2982, 3;
	shf.l.wrap.b32 	%r2986, %r2982, %r2981, 3;
	mov.b64 	%rd4612, {%r2986, %r2985};
	xor.b64  	%rd4613, %rd4611, %rd4612;
	shr.u64 	%rd4614, %rd4549, 6;
	xor.b64  	%rd4615, %rd4613, %rd4614;
	shf.r.wrap.b32 	%r2987, %r2630, %r2629, 1;
	shf.r.wrap.b32 	%r2988, %r2629, %r2630, 1;
	mov.b64 	%rd4616, {%r2988, %r2987};
	shf.r.wrap.b32 	%r2989, %r2630, %r2629, 8;
	shf.r.wrap.b32 	%r2990, %r2629, %r2630, 8;
	mov.b64 	%rd4617, {%r2990, %r2989};
	xor.b64  	%rd4618, %rd4616, %rd4617;
	shr.u64 	%rd4619, %rd4068, 7;
	xor.b64  	%rd4620, %rd4618, %rd4619;
	add.s64 	%rd4621, %rd4620, %rd4031;
	add.s64 	%rd4622, %rd4621, %rd4364;
	add.s64 	%rd4623, %rd4622, %rd4615;
	add.s64 	%rd4624, %rd4623, %rd4488;
	xor.b64  	%rd4625, %rd4562, %rd4525;
	and.b64  	%rd4626, %rd4599, %rd4625;
	xor.b64  	%rd4627, %rd4626, %rd4525;
	add.s64 	%rd4628, %rd4624, %rd4627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2991,%dummy}, %rd4599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2992}, %rd4599;
	}
	shf.r.wrap.b32 	%r2993, %r2992, %r2991, 14;
	shf.r.wrap.b32 	%r2994, %r2991, %r2992, 14;
	mov.b64 	%rd4629, {%r2994, %r2993};
	shf.r.wrap.b32 	%r2995, %r2992, %r2991, 18;
	shf.r.wrap.b32 	%r2996, %r2991, %r2992, 18;
	mov.b64 	%rd4630, {%r2996, %r2995};
	xor.b64  	%rd4631, %rd4629, %rd4630;
	shf.l.wrap.b32 	%r2997, %r2991, %r2992, 23;
	shf.l.wrap.b32 	%r2998, %r2992, %r2991, 23;
	mov.b64 	%rd4632, {%r2998, %r2997};
	xor.b64  	%rd4633, %rd4631, %rd4632;
	add.s64 	%rd4634, %rd4628, %rd4633;
	add.s64 	%rd4635, %rd4634, 5996557281743188959;
	add.s64 	%rd4636, %rd4635, %rd4499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2999,%dummy}, %rd4610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3000}, %rd4610;
	}
	shf.r.wrap.b32 	%r3001, %r3000, %r2999, 28;
	shf.r.wrap.b32 	%r3002, %r2999, %r3000, 28;
	mov.b64 	%rd4637, {%r3002, %r3001};
	shf.l.wrap.b32 	%r3003, %r2999, %r3000, 30;
	shf.l.wrap.b32 	%r3004, %r3000, %r2999, 30;
	mov.b64 	%rd4638, {%r3004, %r3003};
	xor.b64  	%rd4639, %rd4637, %rd4638;
	shf.l.wrap.b32 	%r3005, %r2999, %r3000, 25;
	shf.l.wrap.b32 	%r3006, %r3000, %r2999, 25;
	mov.b64 	%rd4640, {%r3006, %r3005};
	xor.b64  	%rd4641, %rd4639, %rd4640;
	and.b64  	%rd4642, %rd4610, %rd4573;
	or.b64  	%rd4643, %rd4610, %rd4573;
	and.b64  	%rd4644, %rd4643, %rd4536;
	or.b64  	%rd4645, %rd4644, %rd4642;
	add.s64 	%rd4646, %rd4645, %rd4641;
	add.s64 	%rd4647, %rd4646, %rd4635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3007,%dummy}, %rd4586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3008}, %rd4586;
	}
	shf.r.wrap.b32 	%r3009, %r3008, %r3007, 19;
	shf.r.wrap.b32 	%r3010, %r3007, %r3008, 19;
	mov.b64 	%rd4648, {%r3010, %r3009};
	shf.l.wrap.b32 	%r3011, %r3007, %r3008, 3;
	shf.l.wrap.b32 	%r3012, %r3008, %r3007, 3;
	mov.b64 	%rd4649, {%r3012, %r3011};
	xor.b64  	%rd4650, %rd4648, %rd4649;
	shr.u64 	%rd4651, %rd4586, 6;
	xor.b64  	%rd4652, %rd4650, %rd4651;
	shf.r.wrap.b32 	%r3013, %r2658, %r2657, 1;
	shf.r.wrap.b32 	%r3014, %r2657, %r2658, 1;
	mov.b64 	%rd4653, {%r3014, %r3013};
	shf.r.wrap.b32 	%r3015, %r2658, %r2657, 8;
	shf.r.wrap.b32 	%r3016, %r2657, %r2658, 8;
	mov.b64 	%rd4654, {%r3016, %r3015};
	xor.b64  	%rd4655, %rd4653, %rd4654;
	shr.u64 	%rd4656, %rd4105, 7;
	xor.b64  	%rd4657, %rd4655, %rd4656;
	add.s64 	%rd4658, %rd4657, %rd4068;
	add.s64 	%rd4659, %rd4658, %rd4401;
	add.s64 	%rd4660, %rd4659, %rd4652;
	add.s64 	%rd4661, %rd4660, %rd4525;
	xor.b64  	%rd4662, %rd4599, %rd4562;
	and.b64  	%rd4663, %rd4636, %rd4662;
	xor.b64  	%rd4664, %rd4663, %rd4562;
	add.s64 	%rd4665, %rd4661, %rd4664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3017,%dummy}, %rd4636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3018}, %rd4636;
	}
	shf.r.wrap.b32 	%r3019, %r3018, %r3017, 14;
	shf.r.wrap.b32 	%r3020, %r3017, %r3018, 14;
	mov.b64 	%rd4666, {%r3020, %r3019};
	shf.r.wrap.b32 	%r3021, %r3018, %r3017, 18;
	shf.r.wrap.b32 	%r3022, %r3017, %r3018, 18;
	mov.b64 	%rd4667, {%r3022, %r3021};
	xor.b64  	%rd4668, %rd4666, %rd4667;
	shf.l.wrap.b32 	%r3023, %r3017, %r3018, 23;
	shf.l.wrap.b32 	%r3024, %r3018, %r3017, 23;
	mov.b64 	%rd4669, {%r3024, %r3023};
	xor.b64  	%rd4670, %rd4668, %rd4669;
	add.s64 	%rd4671, %rd4665, %rd4670;
	add.s64 	%rd4672, %rd4671, 7280758554555802590;
	add.s64 	%rd4673, %rd4672, %rd4536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3025,%dummy}, %rd4647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3026}, %rd4647;
	}
	shf.r.wrap.b32 	%r3027, %r3026, %r3025, 28;
	shf.r.wrap.b32 	%r3028, %r3025, %r3026, 28;
	mov.b64 	%rd4674, {%r3028, %r3027};
	shf.l.wrap.b32 	%r3029, %r3025, %r3026, 30;
	shf.l.wrap.b32 	%r3030, %r3026, %r3025, 30;
	mov.b64 	%rd4675, {%r3030, %r3029};
	xor.b64  	%rd4676, %rd4674, %rd4675;
	shf.l.wrap.b32 	%r3031, %r3025, %r3026, 25;
	shf.l.wrap.b32 	%r3032, %r3026, %r3025, 25;
	mov.b64 	%rd4677, {%r3032, %r3031};
	xor.b64  	%rd4678, %rd4676, %rd4677;
	and.b64  	%rd4679, %rd4647, %rd4610;
	or.b64  	%rd4680, %rd4647, %rd4610;
	and.b64  	%rd4681, %rd4680, %rd4573;
	or.b64  	%rd4682, %rd4681, %rd4679;
	add.s64 	%rd4683, %rd4682, %rd4678;
	add.s64 	%rd4684, %rd4683, %rd4672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3033,%dummy}, %rd4623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3034}, %rd4623;
	}
	shf.r.wrap.b32 	%r3035, %r3034, %r3033, 19;
	shf.r.wrap.b32 	%r3036, %r3033, %r3034, 19;
	mov.b64 	%rd4685, {%r3036, %r3035};
	shf.l.wrap.b32 	%r3037, %r3033, %r3034, 3;
	shf.l.wrap.b32 	%r3038, %r3034, %r3033, 3;
	mov.b64 	%rd4686, {%r3038, %r3037};
	xor.b64  	%rd4687, %rd4685, %rd4686;
	shr.u64 	%rd4688, %rd4623, 6;
	xor.b64  	%rd4689, %rd4687, %rd4688;
	shf.r.wrap.b32 	%r3039, %r2686, %r2685, 1;
	shf.r.wrap.b32 	%r3040, %r2685, %r2686, 1;
	mov.b64 	%rd4690, {%r3040, %r3039};
	shf.r.wrap.b32 	%r3041, %r2686, %r2685, 8;
	shf.r.wrap.b32 	%r3042, %r2685, %r2686, 8;
	mov.b64 	%rd4691, {%r3042, %r3041};
	xor.b64  	%rd4692, %rd4690, %rd4691;
	shr.u64 	%rd4693, %rd4142, 7;
	xor.b64  	%rd4694, %rd4692, %rd4693;
	add.s64 	%rd4695, %rd4694, %rd4105;
	add.s64 	%rd4696, %rd4695, %rd4438;
	add.s64 	%rd4697, %rd4696, %rd4689;
	add.s64 	%rd4698, %rd4697, %rd4562;
	xor.b64  	%rd4699, %rd4636, %rd4599;
	and.b64  	%rd4700, %rd4673, %rd4699;
	xor.b64  	%rd4701, %rd4700, %rd4599;
	add.s64 	%rd4702, %rd4698, %rd4701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3043,%dummy}, %rd4673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3044}, %rd4673;
	}
	shf.r.wrap.b32 	%r3045, %r3044, %r3043, 14;
	shf.r.wrap.b32 	%r3046, %r3043, %r3044, 14;
	mov.b64 	%rd4703, {%r3046, %r3045};
	shf.r.wrap.b32 	%r3047, %r3044, %r3043, 18;
	shf.r.wrap.b32 	%r3048, %r3043, %r3044, 18;
	mov.b64 	%rd4704, {%r3048, %r3047};
	xor.b64  	%rd4705, %rd4703, %rd4704;
	shf.l.wrap.b32 	%r3049, %r3043, %r3044, 23;
	shf.l.wrap.b32 	%r3050, %r3044, %r3043, 23;
	mov.b64 	%rd4706, {%r3050, %r3049};
	xor.b64  	%rd4707, %rd4705, %rd4706;
	add.s64 	%rd4708, %rd4702, %rd4707;
	add.s64 	%rd4709, %rd4708, 8532644243296465576;
	add.s64 	%rd4710, %rd4709, %rd4573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3051,%dummy}, %rd4684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3052}, %rd4684;
	}
	shf.r.wrap.b32 	%r3053, %r3052, %r3051, 28;
	shf.r.wrap.b32 	%r3054, %r3051, %r3052, 28;
	mov.b64 	%rd4711, {%r3054, %r3053};
	shf.l.wrap.b32 	%r3055, %r3051, %r3052, 30;
	shf.l.wrap.b32 	%r3056, %r3052, %r3051, 30;
	mov.b64 	%rd4712, {%r3056, %r3055};
	xor.b64  	%rd4713, %rd4711, %rd4712;
	shf.l.wrap.b32 	%r3057, %r3051, %r3052, 25;
	shf.l.wrap.b32 	%r3058, %r3052, %r3051, 25;
	mov.b64 	%rd4714, {%r3058, %r3057};
	xor.b64  	%rd4715, %rd4713, %rd4714;
	and.b64  	%rd4716, %rd4684, %rd4647;
	or.b64  	%rd4717, %rd4684, %rd4647;
	and.b64  	%rd4718, %rd4717, %rd4610;
	or.b64  	%rd4719, %rd4718, %rd4716;
	add.s64 	%rd4720, %rd4719, %rd4715;
	add.s64 	%rd4721, %rd4720, %rd4709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3059,%dummy}, %rd4660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3060}, %rd4660;
	}
	shf.r.wrap.b32 	%r3061, %r3060, %r3059, 19;
	shf.r.wrap.b32 	%r3062, %r3059, %r3060, 19;
	mov.b64 	%rd4722, {%r3062, %r3061};
	shf.l.wrap.b32 	%r3063, %r3059, %r3060, 3;
	shf.l.wrap.b32 	%r3064, %r3060, %r3059, 3;
	mov.b64 	%rd4723, {%r3064, %r3063};
	xor.b64  	%rd4724, %rd4722, %rd4723;
	shr.u64 	%rd4725, %rd4660, 6;
	xor.b64  	%rd4726, %rd4724, %rd4725;
	shf.r.wrap.b32 	%r3065, %r2714, %r2713, 1;
	shf.r.wrap.b32 	%r3066, %r2713, %r2714, 1;
	mov.b64 	%rd4727, {%r3066, %r3065};
	shf.r.wrap.b32 	%r3067, %r2714, %r2713, 8;
	shf.r.wrap.b32 	%r3068, %r2713, %r2714, 8;
	mov.b64 	%rd4728, {%r3068, %r3067};
	xor.b64  	%rd4729, %rd4727, %rd4728;
	shr.u64 	%rd4730, %rd4179, 7;
	xor.b64  	%rd4731, %rd4729, %rd4730;
	add.s64 	%rd4732, %rd4731, %rd4142;
	add.s64 	%rd4733, %rd4732, %rd4475;
	add.s64 	%rd4734, %rd4733, %rd4726;
	add.s64 	%rd4735, %rd4734, %rd4599;
	xor.b64  	%rd4736, %rd4673, %rd4636;
	and.b64  	%rd4737, %rd4710, %rd4736;
	xor.b64  	%rd4738, %rd4737, %rd4636;
	add.s64 	%rd4739, %rd4735, %rd4738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3069,%dummy}, %rd4710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3070}, %rd4710;
	}
	shf.r.wrap.b32 	%r3071, %r3070, %r3069, 14;
	shf.r.wrap.b32 	%r3072, %r3069, %r3070, 14;
	mov.b64 	%rd4740, {%r3072, %r3071};
	shf.r.wrap.b32 	%r3073, %r3070, %r3069, 18;
	shf.r.wrap.b32 	%r3074, %r3069, %r3070, 18;
	mov.b64 	%rd4741, {%r3074, %r3073};
	xor.b64  	%rd4742, %rd4740, %rd4741;
	shf.l.wrap.b32 	%r3075, %r3069, %r3070, 23;
	shf.l.wrap.b32 	%r3076, %r3070, %r3069, 23;
	mov.b64 	%rd4743, {%r3076, %r3075};
	xor.b64  	%rd4744, %rd4742, %rd4743;
	add.s64 	%rd4745, %rd4739, %rd4744;
	add.s64 	%rd4746, %rd4745, -9096487096722542874;
	add.s64 	%rd4747, %rd4746, %rd4610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3077,%dummy}, %rd4721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3078}, %rd4721;
	}
	shf.r.wrap.b32 	%r3079, %r3078, %r3077, 28;
	shf.r.wrap.b32 	%r3080, %r3077, %r3078, 28;
	mov.b64 	%rd4748, {%r3080, %r3079};
	shf.l.wrap.b32 	%r3081, %r3077, %r3078, 30;
	shf.l.wrap.b32 	%r3082, %r3078, %r3077, 30;
	mov.b64 	%rd4749, {%r3082, %r3081};
	xor.b64  	%rd4750, %rd4748, %rd4749;
	shf.l.wrap.b32 	%r3083, %r3077, %r3078, 25;
	shf.l.wrap.b32 	%r3084, %r3078, %r3077, 25;
	mov.b64 	%rd4751, {%r3084, %r3083};
	xor.b64  	%rd4752, %rd4750, %rd4751;
	and.b64  	%rd4753, %rd4721, %rd4684;
	or.b64  	%rd4754, %rd4721, %rd4684;
	and.b64  	%rd4755, %rd4754, %rd4647;
	or.b64  	%rd4756, %rd4755, %rd4753;
	add.s64 	%rd4757, %rd4756, %rd4752;
	add.s64 	%rd4758, %rd4757, %rd4746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3085,%dummy}, %rd4697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3086}, %rd4697;
	}
	shf.r.wrap.b32 	%r3087, %r3086, %r3085, 19;
	shf.r.wrap.b32 	%r3088, %r3085, %r3086, 19;
	mov.b64 	%rd4759, {%r3088, %r3087};
	shf.l.wrap.b32 	%r3089, %r3085, %r3086, 3;
	shf.l.wrap.b32 	%r3090, %r3086, %r3085, 3;
	mov.b64 	%rd4760, {%r3090, %r3089};
	xor.b64  	%rd4761, %rd4759, %rd4760;
	shr.u64 	%rd4762, %rd4697, 6;
	xor.b64  	%rd4763, %rd4761, %rd4762;
	shf.r.wrap.b32 	%r3091, %r2742, %r2741, 1;
	shf.r.wrap.b32 	%r3092, %r2741, %r2742, 1;
	mov.b64 	%rd4764, {%r3092, %r3091};
	shf.r.wrap.b32 	%r3093, %r2742, %r2741, 8;
	shf.r.wrap.b32 	%r3094, %r2741, %r2742, 8;
	mov.b64 	%rd4765, {%r3094, %r3093};
	xor.b64  	%rd4766, %rd4764, %rd4765;
	shr.u64 	%rd4767, %rd4216, 7;
	xor.b64  	%rd4768, %rd4766, %rd4767;
	add.s64 	%rd4769, %rd4768, %rd4179;
	add.s64 	%rd4770, %rd4769, %rd4512;
	add.s64 	%rd4771, %rd4770, %rd4763;
	add.s64 	%rd4772, %rd4771, %rd4636;
	xor.b64  	%rd4773, %rd4710, %rd4673;
	and.b64  	%rd4774, %rd4747, %rd4773;
	xor.b64  	%rd4775, %rd4774, %rd4673;
	add.s64 	%rd4776, %rd4772, %rd4775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3095,%dummy}, %rd4747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3096}, %rd4747;
	}
	shf.r.wrap.b32 	%r3097, %r3096, %r3095, 14;
	shf.r.wrap.b32 	%r3098, %r3095, %r3096, 14;
	mov.b64 	%rd4777, {%r3098, %r3097};
	shf.r.wrap.b32 	%r3099, %r3096, %r3095, 18;
	shf.r.wrap.b32 	%r3100, %r3095, %r3096, 18;
	mov.b64 	%rd4778, {%r3100, %r3099};
	xor.b64  	%rd4779, %rd4777, %rd4778;
	shf.l.wrap.b32 	%r3101, %r3095, %r3096, 23;
	shf.l.wrap.b32 	%r3102, %r3096, %r3095, 23;
	mov.b64 	%rd4780, {%r3102, %r3101};
	xor.b64  	%rd4781, %rd4779, %rd4780;
	add.s64 	%rd4782, %rd4776, %rd4781;
	add.s64 	%rd4783, %rd4782, -7894198246740708037;
	add.s64 	%rd4784, %rd4783, %rd4647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3103,%dummy}, %rd4758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3104}, %rd4758;
	}
	shf.r.wrap.b32 	%r3105, %r3104, %r3103, 28;
	shf.r.wrap.b32 	%r3106, %r3103, %r3104, 28;
	mov.b64 	%rd4785, {%r3106, %r3105};
	shf.l.wrap.b32 	%r3107, %r3103, %r3104, 30;
	shf.l.wrap.b32 	%r3108, %r3104, %r3103, 30;
	mov.b64 	%rd4786, {%r3108, %r3107};
	xor.b64  	%rd4787, %rd4785, %rd4786;
	shf.l.wrap.b32 	%r3109, %r3103, %r3104, 25;
	shf.l.wrap.b32 	%r3110, %r3104, %r3103, 25;
	mov.b64 	%rd4788, {%r3110, %r3109};
	xor.b64  	%rd4789, %rd4787, %rd4788;
	and.b64  	%rd4790, %rd4758, %rd4721;
	or.b64  	%rd4791, %rd4758, %rd4721;
	and.b64  	%rd4792, %rd4791, %rd4684;
	or.b64  	%rd4793, %rd4792, %rd4790;
	add.s64 	%rd4794, %rd4793, %rd4789;
	add.s64 	%rd4795, %rd4794, %rd4783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3111,%dummy}, %rd4734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3112}, %rd4734;
	}
	shf.r.wrap.b32 	%r3113, %r3112, %r3111, 19;
	shf.r.wrap.b32 	%r3114, %r3111, %r3112, 19;
	mov.b64 	%rd4796, {%r3114, %r3113};
	shf.l.wrap.b32 	%r3115, %r3111, %r3112, 3;
	shf.l.wrap.b32 	%r3116, %r3112, %r3111, 3;
	mov.b64 	%rd4797, {%r3116, %r3115};
	xor.b64  	%rd4798, %rd4796, %rd4797;
	shr.u64 	%rd4799, %rd4734, 6;
	xor.b64  	%rd4800, %rd4798, %rd4799;
	shf.r.wrap.b32 	%r3117, %r2770, %r2769, 1;
	shf.r.wrap.b32 	%r3118, %r2769, %r2770, 1;
	mov.b64 	%rd4801, {%r3118, %r3117};
	shf.r.wrap.b32 	%r3119, %r2770, %r2769, 8;
	shf.r.wrap.b32 	%r3120, %r2769, %r2770, 8;
	mov.b64 	%rd4802, {%r3120, %r3119};
	xor.b64  	%rd4803, %rd4801, %rd4802;
	shr.u64 	%rd4804, %rd4253, 7;
	xor.b64  	%rd4805, %rd4803, %rd4804;
	add.s64 	%rd4806, %rd4805, %rd4216;
	add.s64 	%rd4807, %rd4806, %rd4549;
	add.s64 	%rd4808, %rd4807, %rd4800;
	add.s64 	%rd4809, %rd4808, %rd4673;
	xor.b64  	%rd4810, %rd4747, %rd4710;
	and.b64  	%rd4811, %rd4784, %rd4810;
	xor.b64  	%rd4812, %rd4811, %rd4710;
	add.s64 	%rd4813, %rd4809, %rd4812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3121,%dummy}, %rd4784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3122}, %rd4784;
	}
	shf.r.wrap.b32 	%r3123, %r3122, %r3121, 14;
	shf.r.wrap.b32 	%r3124, %r3121, %r3122, 14;
	mov.b64 	%rd4814, {%r3124, %r3123};
	shf.r.wrap.b32 	%r3125, %r3122, %r3121, 18;
	shf.r.wrap.b32 	%r3126, %r3121, %r3122, 18;
	mov.b64 	%rd4815, {%r3126, %r3125};
	xor.b64  	%rd4816, %rd4814, %rd4815;
	shf.l.wrap.b32 	%r3127, %r3121, %r3122, 23;
	shf.l.wrap.b32 	%r3128, %r3122, %r3121, 23;
	mov.b64 	%rd4817, {%r3128, %r3127};
	xor.b64  	%rd4818, %rd4816, %rd4817;
	add.s64 	%rd4819, %rd4813, %rd4818;
	add.s64 	%rd4820, %rd4819, -6719396339535248540;
	add.s64 	%rd4821, %rd4820, %rd4684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3129,%dummy}, %rd4795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3130}, %rd4795;
	}
	shf.r.wrap.b32 	%r3131, %r3130, %r3129, 28;
	shf.r.wrap.b32 	%r3132, %r3129, %r3130, 28;
	mov.b64 	%rd4822, {%r3132, %r3131};
	shf.l.wrap.b32 	%r3133, %r3129, %r3130, 30;
	shf.l.wrap.b32 	%r3134, %r3130, %r3129, 30;
	mov.b64 	%rd4823, {%r3134, %r3133};
	xor.b64  	%rd4824, %rd4822, %rd4823;
	shf.l.wrap.b32 	%r3135, %r3129, %r3130, 25;
	shf.l.wrap.b32 	%r3136, %r3130, %r3129, 25;
	mov.b64 	%rd4825, {%r3136, %r3135};
	xor.b64  	%rd4826, %rd4824, %rd4825;
	and.b64  	%rd4827, %rd4795, %rd4758;
	or.b64  	%rd4828, %rd4795, %rd4758;
	and.b64  	%rd4829, %rd4828, %rd4721;
	or.b64  	%rd4830, %rd4829, %rd4827;
	add.s64 	%rd4831, %rd4830, %rd4826;
	add.s64 	%rd4832, %rd4831, %rd4820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3137,%dummy}, %rd4771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3138}, %rd4771;
	}
	shf.r.wrap.b32 	%r3139, %r3138, %r3137, 19;
	shf.r.wrap.b32 	%r3140, %r3137, %r3138, 19;
	mov.b64 	%rd4833, {%r3140, %r3139};
	shf.l.wrap.b32 	%r3141, %r3137, %r3138, 3;
	shf.l.wrap.b32 	%r3142, %r3138, %r3137, 3;
	mov.b64 	%rd4834, {%r3142, %r3141};
	xor.b64  	%rd4835, %rd4833, %rd4834;
	shr.u64 	%rd4836, %rd4771, 6;
	xor.b64  	%rd4837, %rd4835, %rd4836;
	shf.r.wrap.b32 	%r3143, %r2798, %r2797, 1;
	shf.r.wrap.b32 	%r3144, %r2797, %r2798, 1;
	mov.b64 	%rd4838, {%r3144, %r3143};
	shf.r.wrap.b32 	%r3145, %r2798, %r2797, 8;
	shf.r.wrap.b32 	%r3146, %r2797, %r2798, 8;
	mov.b64 	%rd4839, {%r3146, %r3145};
	xor.b64  	%rd4840, %rd4838, %rd4839;
	shr.u64 	%rd4841, %rd4290, 7;
	xor.b64  	%rd4842, %rd4840, %rd4841;
	add.s64 	%rd4843, %rd4842, %rd4253;
	add.s64 	%rd4844, %rd4843, %rd4586;
	add.s64 	%rd4845, %rd4844, %rd4837;
	add.s64 	%rd4846, %rd4845, %rd4710;
	xor.b64  	%rd4847, %rd4784, %rd4747;
	and.b64  	%rd4848, %rd4821, %rd4847;
	xor.b64  	%rd4849, %rd4848, %rd4747;
	add.s64 	%rd4850, %rd4846, %rd4849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3147,%dummy}, %rd4821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3148}, %rd4821;
	}
	shf.r.wrap.b32 	%r3149, %r3148, %r3147, 14;
	shf.r.wrap.b32 	%r3150, %r3147, %r3148, 14;
	mov.b64 	%rd4851, {%r3150, %r3149};
	shf.r.wrap.b32 	%r3151, %r3148, %r3147, 18;
	shf.r.wrap.b32 	%r3152, %r3147, %r3148, 18;
	mov.b64 	%rd4852, {%r3152, %r3151};
	xor.b64  	%rd4853, %rd4851, %rd4852;
	shf.l.wrap.b32 	%r3153, %r3147, %r3148, 23;
	shf.l.wrap.b32 	%r3154, %r3148, %r3147, 23;
	mov.b64 	%rd4854, {%r3154, %r3153};
	xor.b64  	%rd4855, %rd4853, %rd4854;
	add.s64 	%rd4856, %rd4850, %rd4855;
	add.s64 	%rd4857, %rd4856, -6333637450476146687;
	add.s64 	%rd4858, %rd4857, %rd4721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3155,%dummy}, %rd4832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3156}, %rd4832;
	}
	shf.r.wrap.b32 	%r3157, %r3156, %r3155, 28;
	shf.r.wrap.b32 	%r3158, %r3155, %r3156, 28;
	mov.b64 	%rd4859, {%r3158, %r3157};
	shf.l.wrap.b32 	%r3159, %r3155, %r3156, 30;
	shf.l.wrap.b32 	%r3160, %r3156, %r3155, 30;
	mov.b64 	%rd4860, {%r3160, %r3159};
	xor.b64  	%rd4861, %rd4859, %rd4860;
	shf.l.wrap.b32 	%r3161, %r3155, %r3156, 25;
	shf.l.wrap.b32 	%r3162, %r3156, %r3155, 25;
	mov.b64 	%rd4862, {%r3162, %r3161};
	xor.b64  	%rd4863, %rd4861, %rd4862;
	and.b64  	%rd4864, %rd4832, %rd4795;
	or.b64  	%rd4865, %rd4832, %rd4795;
	and.b64  	%rd4866, %rd4865, %rd4758;
	or.b64  	%rd4867, %rd4866, %rd4864;
	add.s64 	%rd4868, %rd4867, %rd4863;
	add.s64 	%rd4869, %rd4868, %rd4857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3163,%dummy}, %rd4808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3164}, %rd4808;
	}
	shf.r.wrap.b32 	%r3165, %r3164, %r3163, 19;
	shf.r.wrap.b32 	%r3166, %r3163, %r3164, 19;
	mov.b64 	%rd4870, {%r3166, %r3165};
	shf.l.wrap.b32 	%r3167, %r3163, %r3164, 3;
	shf.l.wrap.b32 	%r3168, %r3164, %r3163, 3;
	mov.b64 	%rd4871, {%r3168, %r3167};
	xor.b64  	%rd4872, %rd4870, %rd4871;
	shr.u64 	%rd4873, %rd4808, 6;
	xor.b64  	%rd4874, %rd4872, %rd4873;
	shf.r.wrap.b32 	%r3169, %r2826, %r2825, 1;
	shf.r.wrap.b32 	%r3170, %r2825, %r2826, 1;
	mov.b64 	%rd4875, {%r3170, %r3169};
	shf.r.wrap.b32 	%r3171, %r2826, %r2825, 8;
	shf.r.wrap.b32 	%r3172, %r2825, %r2826, 8;
	mov.b64 	%rd4876, {%r3172, %r3171};
	xor.b64  	%rd4877, %rd4875, %rd4876;
	shr.u64 	%rd4878, %rd4327, 7;
	xor.b64  	%rd4879, %rd4877, %rd4878;
	add.s64 	%rd4880, %rd4879, %rd4290;
	add.s64 	%rd4881, %rd4880, %rd4623;
	add.s64 	%rd4882, %rd4881, %rd4874;
	add.s64 	%rd4883, %rd4882, %rd4747;
	xor.b64  	%rd4884, %rd4821, %rd4784;
	and.b64  	%rd4885, %rd4858, %rd4884;
	xor.b64  	%rd4886, %rd4885, %rd4784;
	add.s64 	%rd4887, %rd4883, %rd4886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3173,%dummy}, %rd4858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3174}, %rd4858;
	}
	shf.r.wrap.b32 	%r3175, %r3174, %r3173, 14;
	shf.r.wrap.b32 	%r3176, %r3173, %r3174, 14;
	mov.b64 	%rd4888, {%r3176, %r3175};
	shf.r.wrap.b32 	%r3177, %r3174, %r3173, 18;
	shf.r.wrap.b32 	%r3178, %r3173, %r3174, 18;
	mov.b64 	%rd4889, {%r3178, %r3177};
	xor.b64  	%rd4890, %rd4888, %rd4889;
	shf.l.wrap.b32 	%r3179, %r3173, %r3174, 23;
	shf.l.wrap.b32 	%r3180, %r3174, %r3173, 23;
	mov.b64 	%rd4891, {%r3180, %r3179};
	xor.b64  	%rd4892, %rd4890, %rd4891;
	add.s64 	%rd4893, %rd4887, %rd4892;
	add.s64 	%rd4894, %rd4893, -4446306890439682159;
	add.s64 	%rd4895, %rd4894, %rd4758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3181,%dummy}, %rd4869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3182}, %rd4869;
	}
	shf.r.wrap.b32 	%r3183, %r3182, %r3181, 28;
	shf.r.wrap.b32 	%r3184, %r3181, %r3182, 28;
	mov.b64 	%rd4896, {%r3184, %r3183};
	shf.l.wrap.b32 	%r3185, %r3181, %r3182, 30;
	shf.l.wrap.b32 	%r3186, %r3182, %r3181, 30;
	mov.b64 	%rd4897, {%r3186, %r3185};
	xor.b64  	%rd4898, %rd4896, %rd4897;
	shf.l.wrap.b32 	%r3187, %r3181, %r3182, 25;
	shf.l.wrap.b32 	%r3188, %r3182, %r3181, 25;
	mov.b64 	%rd4899, {%r3188, %r3187};
	xor.b64  	%rd4900, %rd4898, %rd4899;
	and.b64  	%rd4901, %rd4869, %rd4832;
	or.b64  	%rd4902, %rd4869, %rd4832;
	and.b64  	%rd4903, %rd4902, %rd4795;
	or.b64  	%rd4904, %rd4903, %rd4901;
	add.s64 	%rd4905, %rd4904, %rd4900;
	add.s64 	%rd4906, %rd4905, %rd4894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3189,%dummy}, %rd4845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3190}, %rd4845;
	}
	shf.r.wrap.b32 	%r3191, %r3190, %r3189, 19;
	shf.r.wrap.b32 	%r3192, %r3189, %r3190, 19;
	mov.b64 	%rd4907, {%r3192, %r3191};
	shf.l.wrap.b32 	%r3193, %r3189, %r3190, 3;
	shf.l.wrap.b32 	%r3194, %r3190, %r3189, 3;
	mov.b64 	%rd4908, {%r3194, %r3193};
	xor.b64  	%rd4909, %rd4907, %rd4908;
	shr.u64 	%rd4910, %rd4845, 6;
	xor.b64  	%rd4911, %rd4909, %rd4910;
	shf.r.wrap.b32 	%r3195, %r2852, %r2851, 1;
	shf.r.wrap.b32 	%r3196, %r2851, %r2852, 1;
	mov.b64 	%rd4912, {%r3196, %r3195};
	shf.r.wrap.b32 	%r3197, %r2852, %r2851, 8;
	shf.r.wrap.b32 	%r3198, %r2851, %r2852, 8;
	mov.b64 	%rd4913, {%r3198, %r3197};
	xor.b64  	%rd4914, %rd4912, %rd4913;
	shr.u64 	%rd4915, %rd4364, 7;
	xor.b64  	%rd4916, %rd4914, %rd4915;
	add.s64 	%rd4917, %rd4916, %rd4327;
	add.s64 	%rd4918, %rd4917, %rd4660;
	add.s64 	%rd4919, %rd4918, %rd4911;
	add.s64 	%rd4920, %rd4919, %rd4784;
	xor.b64  	%rd4921, %rd4858, %rd4821;
	and.b64  	%rd4922, %rd4895, %rd4921;
	xor.b64  	%rd4923, %rd4922, %rd4821;
	add.s64 	%rd4924, %rd4920, %rd4923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3199,%dummy}, %rd4895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3200}, %rd4895;
	}
	shf.r.wrap.b32 	%r3201, %r3200, %r3199, 14;
	shf.r.wrap.b32 	%r3202, %r3199, %r3200, 14;
	mov.b64 	%rd4925, {%r3202, %r3201};
	shf.r.wrap.b32 	%r3203, %r3200, %r3199, 18;
	shf.r.wrap.b32 	%r3204, %r3199, %r3200, 18;
	mov.b64 	%rd4926, {%r3204, %r3203};
	xor.b64  	%rd4927, %rd4925, %rd4926;
	shf.l.wrap.b32 	%r3205, %r3199, %r3200, 23;
	shf.l.wrap.b32 	%r3206, %r3200, %r3199, 23;
	mov.b64 	%rd4928, {%r3206, %r3205};
	xor.b64  	%rd4929, %rd4927, %rd4928;
	add.s64 	%rd4930, %rd4924, %rd4929;
	add.s64 	%rd4931, %rd4930, -4076793802049405392;
	add.s64 	%rd4932, %rd4931, %rd4795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3207,%dummy}, %rd4906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3208}, %rd4906;
	}
	shf.r.wrap.b32 	%r3209, %r3208, %r3207, 28;
	shf.r.wrap.b32 	%r3210, %r3207, %r3208, 28;
	mov.b64 	%rd4933, {%r3210, %r3209};
	shf.l.wrap.b32 	%r3211, %r3207, %r3208, 30;
	shf.l.wrap.b32 	%r3212, %r3208, %r3207, 30;
	mov.b64 	%rd4934, {%r3212, %r3211};
	xor.b64  	%rd4935, %rd4933, %rd4934;
	shf.l.wrap.b32 	%r3213, %r3207, %r3208, 25;
	shf.l.wrap.b32 	%r3214, %r3208, %r3207, 25;
	mov.b64 	%rd4936, {%r3214, %r3213};
	xor.b64  	%rd4937, %rd4935, %rd4936;
	and.b64  	%rd4938, %rd4906, %rd4869;
	or.b64  	%rd4939, %rd4906, %rd4869;
	and.b64  	%rd4940, %rd4939, %rd4832;
	or.b64  	%rd4941, %rd4940, %rd4938;
	add.s64 	%rd4942, %rd4941, %rd4937;
	add.s64 	%rd4943, %rd4942, %rd4931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3215,%dummy}, %rd4882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3216}, %rd4882;
	}
	shf.r.wrap.b32 	%r3217, %r3216, %r3215, 19;
	shf.r.wrap.b32 	%r3218, %r3215, %r3216, 19;
	mov.b64 	%rd4944, {%r3218, %r3217};
	shf.l.wrap.b32 	%r3219, %r3215, %r3216, 3;
	shf.l.wrap.b32 	%r3220, %r3216, %r3215, 3;
	mov.b64 	%rd4945, {%r3220, %r3219};
	xor.b64  	%rd4946, %rd4944, %rd4945;
	shr.u64 	%rd4947, %rd4882, 6;
	xor.b64  	%rd4948, %rd4946, %rd4947;
	shf.r.wrap.b32 	%r3221, %r2878, %r2877, 1;
	shf.r.wrap.b32 	%r3222, %r2877, %r2878, 1;
	mov.b64 	%rd4949, {%r3222, %r3221};
	shf.r.wrap.b32 	%r3223, %r2878, %r2877, 8;
	shf.r.wrap.b32 	%r3224, %r2877, %r2878, 8;
	mov.b64 	%rd4950, {%r3224, %r3223};
	xor.b64  	%rd4951, %rd4949, %rd4950;
	shr.u64 	%rd4952, %rd4401, 7;
	xor.b64  	%rd4953, %rd4951, %rd4952;
	add.s64 	%rd4954, %rd4953, %rd4364;
	add.s64 	%rd4955, %rd4954, %rd4697;
	add.s64 	%rd4956, %rd4955, %rd4948;
	add.s64 	%rd4957, %rd4956, %rd4821;
	xor.b64  	%rd4958, %rd4895, %rd4858;
	and.b64  	%rd4959, %rd4932, %rd4958;
	xor.b64  	%rd4960, %rd4959, %rd4858;
	add.s64 	%rd4961, %rd4957, %rd4960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3225,%dummy}, %rd4932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3226}, %rd4932;
	}
	shf.r.wrap.b32 	%r3227, %r3226, %r3225, 14;
	shf.r.wrap.b32 	%r3228, %r3225, %r3226, 14;
	mov.b64 	%rd4962, {%r3228, %r3227};
	shf.r.wrap.b32 	%r3229, %r3226, %r3225, 18;
	shf.r.wrap.b32 	%r3230, %r3225, %r3226, 18;
	mov.b64 	%rd4963, {%r3230, %r3229};
	xor.b64  	%rd4964, %rd4962, %rd4963;
	shf.l.wrap.b32 	%r3231, %r3225, %r3226, 23;
	shf.l.wrap.b32 	%r3232, %r3226, %r3225, 23;
	mov.b64 	%rd4965, {%r3232, %r3231};
	xor.b64  	%rd4966, %rd4964, %rd4965;
	add.s64 	%rd4967, %rd4961, %rd4966;
	add.s64 	%rd4968, %rd4967, -3345356375505022440;
	add.s64 	%rd4969, %rd4968, %rd4832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3233,%dummy}, %rd4943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3234}, %rd4943;
	}
	shf.r.wrap.b32 	%r3235, %r3234, %r3233, 28;
	shf.r.wrap.b32 	%r3236, %r3233, %r3234, 28;
	mov.b64 	%rd4970, {%r3236, %r3235};
	shf.l.wrap.b32 	%r3237, %r3233, %r3234, 30;
	shf.l.wrap.b32 	%r3238, %r3234, %r3233, 30;
	mov.b64 	%rd4971, {%r3238, %r3237};
	xor.b64  	%rd4972, %rd4970, %rd4971;
	shf.l.wrap.b32 	%r3239, %r3233, %r3234, 25;
	shf.l.wrap.b32 	%r3240, %r3234, %r3233, 25;
	mov.b64 	%rd4973, {%r3240, %r3239};
	xor.b64  	%rd4974, %rd4972, %rd4973;
	and.b64  	%rd4975, %rd4943, %rd4906;
	or.b64  	%rd4976, %rd4943, %rd4906;
	and.b64  	%rd4977, %rd4976, %rd4869;
	or.b64  	%rd4978, %rd4977, %rd4975;
	add.s64 	%rd4979, %rd4978, %rd4974;
	add.s64 	%rd4980, %rd4979, %rd4968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3241,%dummy}, %rd4919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3242}, %rd4919;
	}
	shf.r.wrap.b32 	%r3243, %r3242, %r3241, 19;
	shf.r.wrap.b32 	%r3244, %r3241, %r3242, 19;
	mov.b64 	%rd4981, {%r3244, %r3243};
	shf.l.wrap.b32 	%r3245, %r3241, %r3242, 3;
	shf.l.wrap.b32 	%r3246, %r3242, %r3241, 3;
	mov.b64 	%rd4982, {%r3246, %r3245};
	xor.b64  	%rd4983, %rd4981, %rd4982;
	shr.u64 	%rd4984, %rd4919, 6;
	xor.b64  	%rd4985, %rd4983, %rd4984;
	shf.r.wrap.b32 	%r3247, %r2904, %r2903, 1;
	shf.r.wrap.b32 	%r3248, %r2903, %r2904, 1;
	mov.b64 	%rd4986, {%r3248, %r3247};
	shf.r.wrap.b32 	%r3249, %r2904, %r2903, 8;
	shf.r.wrap.b32 	%r3250, %r2903, %r2904, 8;
	mov.b64 	%rd4987, {%r3250, %r3249};
	xor.b64  	%rd4988, %rd4986, %rd4987;
	shr.u64 	%rd4989, %rd4438, 7;
	xor.b64  	%rd4990, %rd4988, %rd4989;
	add.s64 	%rd4991, %rd4990, %rd4401;
	add.s64 	%rd4992, %rd4991, %rd4734;
	add.s64 	%rd4993, %rd4992, %rd4985;
	add.s64 	%rd4994, %rd4993, %rd4858;
	xor.b64  	%rd4995, %rd4932, %rd4895;
	and.b64  	%rd4996, %rd4969, %rd4995;
	xor.b64  	%rd4997, %rd4996, %rd4895;
	add.s64 	%rd4998, %rd4994, %rd4997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3251,%dummy}, %rd4969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3252}, %rd4969;
	}
	shf.r.wrap.b32 	%r3253, %r3252, %r3251, 14;
	shf.r.wrap.b32 	%r3254, %r3251, %r3252, 14;
	mov.b64 	%rd4999, {%r3254, %r3253};
	shf.r.wrap.b32 	%r3255, %r3252, %r3251, 18;
	shf.r.wrap.b32 	%r3256, %r3251, %r3252, 18;
	mov.b64 	%rd5000, {%r3256, %r3255};
	xor.b64  	%rd5001, %rd4999, %rd5000;
	shf.l.wrap.b32 	%r3257, %r3251, %r3252, 23;
	shf.l.wrap.b32 	%r3258, %r3252, %r3251, 23;
	mov.b64 	%rd5002, {%r3258, %r3257};
	xor.b64  	%rd5003, %rd5001, %rd5002;
	add.s64 	%rd5004, %rd4998, %rd5003;
	add.s64 	%rd5005, %rd5004, -2983346525034927856;
	add.s64 	%rd5006, %rd5005, %rd4869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3259,%dummy}, %rd4980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3260}, %rd4980;
	}
	shf.r.wrap.b32 	%r3261, %r3260, %r3259, 28;
	shf.r.wrap.b32 	%r3262, %r3259, %r3260, 28;
	mov.b64 	%rd5007, {%r3262, %r3261};
	shf.l.wrap.b32 	%r3263, %r3259, %r3260, 30;
	shf.l.wrap.b32 	%r3264, %r3260, %r3259, 30;
	mov.b64 	%rd5008, {%r3264, %r3263};
	xor.b64  	%rd5009, %rd5007, %rd5008;
	shf.l.wrap.b32 	%r3265, %r3259, %r3260, 25;
	shf.l.wrap.b32 	%r3266, %r3260, %r3259, 25;
	mov.b64 	%rd5010, {%r3266, %r3265};
	xor.b64  	%rd5011, %rd5009, %rd5010;
	and.b64  	%rd5012, %rd4980, %rd4943;
	or.b64  	%rd5013, %rd4980, %rd4943;
	and.b64  	%rd5014, %rd5013, %rd4906;
	or.b64  	%rd5015, %rd5014, %rd5012;
	add.s64 	%rd5016, %rd5015, %rd5011;
	add.s64 	%rd5017, %rd5016, %rd5005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3267,%dummy}, %rd4956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3268}, %rd4956;
	}
	shf.r.wrap.b32 	%r3269, %r3268, %r3267, 19;
	shf.r.wrap.b32 	%r3270, %r3267, %r3268, 19;
	mov.b64 	%rd5018, {%r3270, %r3269};
	shf.l.wrap.b32 	%r3271, %r3267, %r3268, 3;
	shf.l.wrap.b32 	%r3272, %r3268, %r3267, 3;
	mov.b64 	%rd5019, {%r3272, %r3271};
	xor.b64  	%rd5020, %rd5018, %rd5019;
	shr.u64 	%rd5021, %rd4956, 6;
	xor.b64  	%rd5022, %rd5020, %rd5021;
	shf.r.wrap.b32 	%r3273, %r2930, %r2929, 1;
	shf.r.wrap.b32 	%r3274, %r2929, %r2930, 1;
	mov.b64 	%rd5023, {%r3274, %r3273};
	shf.r.wrap.b32 	%r3275, %r2930, %r2929, 8;
	shf.r.wrap.b32 	%r3276, %r2929, %r2930, 8;
	mov.b64 	%rd5024, {%r3276, %r3275};
	xor.b64  	%rd5025, %rd5023, %rd5024;
	shr.u64 	%rd5026, %rd4475, 7;
	xor.b64  	%rd5027, %rd5025, %rd5026;
	add.s64 	%rd5028, %rd5027, %rd4438;
	add.s64 	%rd5029, %rd5028, %rd4771;
	add.s64 	%rd5030, %rd5029, %rd5022;
	add.s64 	%rd5031, %rd5030, %rd4895;
	xor.b64  	%rd5032, %rd4969, %rd4932;
	and.b64  	%rd5033, %rd5006, %rd5032;
	xor.b64  	%rd5034, %rd5033, %rd4932;
	add.s64 	%rd5035, %rd5031, %rd5034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3277,%dummy}, %rd5006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3278}, %rd5006;
	}
	shf.r.wrap.b32 	%r3279, %r3278, %r3277, 14;
	shf.r.wrap.b32 	%r3280, %r3277, %r3278, 14;
	mov.b64 	%rd5036, {%r3280, %r3279};
	shf.r.wrap.b32 	%r3281, %r3278, %r3277, 18;
	shf.r.wrap.b32 	%r3282, %r3277, %r3278, 18;
	mov.b64 	%rd5037, {%r3282, %r3281};
	xor.b64  	%rd5038, %rd5036, %rd5037;
	shf.l.wrap.b32 	%r3283, %r3277, %r3278, 23;
	shf.l.wrap.b32 	%r3284, %r3278, %r3277, 23;
	mov.b64 	%rd5039, {%r3284, %r3283};
	xor.b64  	%rd5040, %rd5038, %rd5039;
	add.s64 	%rd5041, %rd5035, %rd5040;
	add.s64 	%rd5042, %rd5041, -860691631967231958;
	add.s64 	%rd5043, %rd5042, %rd4906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3285,%dummy}, %rd5017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3286}, %rd5017;
	}
	shf.r.wrap.b32 	%r3287, %r3286, %r3285, 28;
	shf.r.wrap.b32 	%r3288, %r3285, %r3286, 28;
	mov.b64 	%rd5044, {%r3288, %r3287};
	shf.l.wrap.b32 	%r3289, %r3285, %r3286, 30;
	shf.l.wrap.b32 	%r3290, %r3286, %r3285, 30;
	mov.b64 	%rd5045, {%r3290, %r3289};
	xor.b64  	%rd5046, %rd5044, %rd5045;
	shf.l.wrap.b32 	%r3291, %r3285, %r3286, 25;
	shf.l.wrap.b32 	%r3292, %r3286, %r3285, 25;
	mov.b64 	%rd5047, {%r3292, %r3291};
	xor.b64  	%rd5048, %rd5046, %rd5047;
	and.b64  	%rd5049, %rd5017, %rd4980;
	or.b64  	%rd5050, %rd5017, %rd4980;
	and.b64  	%rd5051, %rd5050, %rd4943;
	or.b64  	%rd5052, %rd5051, %rd5049;
	add.s64 	%rd5053, %rd5052, %rd5048;
	add.s64 	%rd5054, %rd5053, %rd5042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3293,%dummy}, %rd4993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3294}, %rd4993;
	}
	shf.r.wrap.b32 	%r3295, %r3294, %r3293, 19;
	shf.r.wrap.b32 	%r3296, %r3293, %r3294, 19;
	mov.b64 	%rd5055, {%r3296, %r3295};
	shf.l.wrap.b32 	%r3297, %r3293, %r3294, 3;
	shf.l.wrap.b32 	%r3298, %r3294, %r3293, 3;
	mov.b64 	%rd5056, {%r3298, %r3297};
	xor.b64  	%rd5057, %rd5055, %rd5056;
	shr.u64 	%rd5058, %rd4993, 6;
	xor.b64  	%rd5059, %rd5057, %rd5058;
	shf.r.wrap.b32 	%r3299, %r2956, %r2955, 1;
	shf.r.wrap.b32 	%r3300, %r2955, %r2956, 1;
	mov.b64 	%rd5060, {%r3300, %r3299};
	shf.r.wrap.b32 	%r3301, %r2956, %r2955, 8;
	shf.r.wrap.b32 	%r3302, %r2955, %r2956, 8;
	mov.b64 	%rd5061, {%r3302, %r3301};
	xor.b64  	%rd5062, %rd5060, %rd5061;
	shr.u64 	%rd5063, %rd4512, 7;
	xor.b64  	%rd5064, %rd5062, %rd5063;
	add.s64 	%rd5065, %rd5064, %rd4475;
	add.s64 	%rd5066, %rd5065, %rd4808;
	add.s64 	%rd5067, %rd5066, %rd5059;
	add.s64 	%rd5068, %rd5067, %rd4932;
	xor.b64  	%rd5069, %rd5006, %rd4969;
	and.b64  	%rd5070, %rd5043, %rd5069;
	xor.b64  	%rd5071, %rd5070, %rd4969;
	add.s64 	%rd5072, %rd5068, %rd5071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3303,%dummy}, %rd5043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3304}, %rd5043;
	}
	shf.r.wrap.b32 	%r3305, %r3304, %r3303, 14;
	shf.r.wrap.b32 	%r3306, %r3303, %r3304, 14;
	mov.b64 	%rd5073, {%r3306, %r3305};
	shf.r.wrap.b32 	%r3307, %r3304, %r3303, 18;
	shf.r.wrap.b32 	%r3308, %r3303, %r3304, 18;
	mov.b64 	%rd5074, {%r3308, %r3307};
	xor.b64  	%rd5075, %rd5073, %rd5074;
	shf.l.wrap.b32 	%r3309, %r3303, %r3304, 23;
	shf.l.wrap.b32 	%r3310, %r3304, %r3303, 23;
	mov.b64 	%rd5076, {%r3310, %r3309};
	xor.b64  	%rd5077, %rd5075, %rd5076;
	add.s64 	%rd5078, %rd5072, %rd5077;
	add.s64 	%rd5079, %rd5078, 1182934255886127544;
	add.s64 	%rd5080, %rd5079, %rd4943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3311,%dummy}, %rd5054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3312}, %rd5054;
	}
	shf.r.wrap.b32 	%r3313, %r3312, %r3311, 28;
	shf.r.wrap.b32 	%r3314, %r3311, %r3312, 28;
	mov.b64 	%rd5081, {%r3314, %r3313};
	shf.l.wrap.b32 	%r3315, %r3311, %r3312, 30;
	shf.l.wrap.b32 	%r3316, %r3312, %r3311, 30;
	mov.b64 	%rd5082, {%r3316, %r3315};
	xor.b64  	%rd5083, %rd5081, %rd5082;
	shf.l.wrap.b32 	%r3317, %r3311, %r3312, 25;
	shf.l.wrap.b32 	%r3318, %r3312, %r3311, 25;
	mov.b64 	%rd5084, {%r3318, %r3317};
	xor.b64  	%rd5085, %rd5083, %rd5084;
	and.b64  	%rd5086, %rd5054, %rd5017;
	or.b64  	%rd5087, %rd5054, %rd5017;
	and.b64  	%rd5088, %rd5087, %rd4980;
	or.b64  	%rd5089, %rd5088, %rd5086;
	add.s64 	%rd5090, %rd5089, %rd5085;
	add.s64 	%rd5091, %rd5090, %rd5079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3319,%dummy}, %rd5030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3320}, %rd5030;
	}
	shf.r.wrap.b32 	%r3321, %r3320, %r3319, 19;
	shf.r.wrap.b32 	%r3322, %r3319, %r3320, 19;
	mov.b64 	%rd5092, {%r3322, %r3321};
	shf.l.wrap.b32 	%r3323, %r3319, %r3320, 3;
	shf.l.wrap.b32 	%r3324, %r3320, %r3319, 3;
	mov.b64 	%rd5093, {%r3324, %r3323};
	xor.b64  	%rd5094, %rd5092, %rd5093;
	shr.u64 	%rd5095, %rd5030, 6;
	xor.b64  	%rd5096, %rd5094, %rd5095;
	shf.r.wrap.b32 	%r3325, %r2982, %r2981, 1;
	shf.r.wrap.b32 	%r3326, %r2981, %r2982, 1;
	mov.b64 	%rd5097, {%r3326, %r3325};
	shf.r.wrap.b32 	%r3327, %r2982, %r2981, 8;
	shf.r.wrap.b32 	%r3328, %r2981, %r2982, 8;
	mov.b64 	%rd5098, {%r3328, %r3327};
	xor.b64  	%rd5099, %rd5097, %rd5098;
	shr.u64 	%rd5100, %rd4549, 7;
	xor.b64  	%rd5101, %rd5099, %rd5100;
	add.s64 	%rd5102, %rd5101, %rd4512;
	add.s64 	%rd5103, %rd5102, %rd4845;
	add.s64 	%rd5104, %rd5103, %rd5096;
	add.s64 	%rd5105, %rd5104, %rd4969;
	xor.b64  	%rd5106, %rd5043, %rd5006;
	and.b64  	%rd5107, %rd5080, %rd5106;
	xor.b64  	%rd5108, %rd5107, %rd5006;
	add.s64 	%rd5109, %rd5105, %rd5108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3329,%dummy}, %rd5080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3330}, %rd5080;
	}
	shf.r.wrap.b32 	%r3331, %r3330, %r3329, 14;
	shf.r.wrap.b32 	%r3332, %r3329, %r3330, 14;
	mov.b64 	%rd5110, {%r3332, %r3331};
	shf.r.wrap.b32 	%r3333, %r3330, %r3329, 18;
	shf.r.wrap.b32 	%r3334, %r3329, %r3330, 18;
	mov.b64 	%rd5111, {%r3334, %r3333};
	xor.b64  	%rd5112, %rd5110, %rd5111;
	shf.l.wrap.b32 	%r3335, %r3329, %r3330, 23;
	shf.l.wrap.b32 	%r3336, %r3330, %r3329, 23;
	mov.b64 	%rd5113, {%r3336, %r3335};
	xor.b64  	%rd5114, %rd5112, %rd5113;
	add.s64 	%rd5115, %rd5109, %rd5114;
	add.s64 	%rd5116, %rd5115, 1847814050463011016;
	add.s64 	%rd5117, %rd5116, %rd4980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3337,%dummy}, %rd5091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3338}, %rd5091;
	}
	shf.r.wrap.b32 	%r3339, %r3338, %r3337, 28;
	shf.r.wrap.b32 	%r3340, %r3337, %r3338, 28;
	mov.b64 	%rd5118, {%r3340, %r3339};
	shf.l.wrap.b32 	%r3341, %r3337, %r3338, 30;
	shf.l.wrap.b32 	%r3342, %r3338, %r3337, 30;
	mov.b64 	%rd5119, {%r3342, %r3341};
	xor.b64  	%rd5120, %rd5118, %rd5119;
	shf.l.wrap.b32 	%r3343, %r3337, %r3338, 25;
	shf.l.wrap.b32 	%r3344, %r3338, %r3337, 25;
	mov.b64 	%rd5121, {%r3344, %r3343};
	xor.b64  	%rd5122, %rd5120, %rd5121;
	and.b64  	%rd5123, %rd5091, %rd5054;
	or.b64  	%rd5124, %rd5091, %rd5054;
	and.b64  	%rd5125, %rd5124, %rd5017;
	or.b64  	%rd5126, %rd5125, %rd5123;
	add.s64 	%rd5127, %rd5126, %rd5122;
	add.s64 	%rd5128, %rd5127, %rd5116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3345,%dummy}, %rd5067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3346}, %rd5067;
	}
	shf.r.wrap.b32 	%r3347, %r3346, %r3345, 19;
	shf.r.wrap.b32 	%r3348, %r3345, %r3346, 19;
	mov.b64 	%rd5129, {%r3348, %r3347};
	shf.l.wrap.b32 	%r3349, %r3345, %r3346, 3;
	shf.l.wrap.b32 	%r3350, %r3346, %r3345, 3;
	mov.b64 	%rd5130, {%r3350, %r3349};
	xor.b64  	%rd5131, %rd5129, %rd5130;
	shr.u64 	%rd5132, %rd5067, 6;
	xor.b64  	%rd5133, %rd5131, %rd5132;
	shf.r.wrap.b32 	%r3351, %r3008, %r3007, 1;
	shf.r.wrap.b32 	%r3352, %r3007, %r3008, 1;
	mov.b64 	%rd5134, {%r3352, %r3351};
	shf.r.wrap.b32 	%r3353, %r3008, %r3007, 8;
	shf.r.wrap.b32 	%r3354, %r3007, %r3008, 8;
	mov.b64 	%rd5135, {%r3354, %r3353};
	xor.b64  	%rd5136, %rd5134, %rd5135;
	shr.u64 	%rd5137, %rd4586, 7;
	xor.b64  	%rd5138, %rd5136, %rd5137;
	add.s64 	%rd5139, %rd5138, %rd4549;
	add.s64 	%rd5140, %rd5139, %rd4882;
	add.s64 	%rd5141, %rd5140, %rd5133;
	add.s64 	%rd5142, %rd5141, %rd5006;
	xor.b64  	%rd5143, %rd5080, %rd5043;
	and.b64  	%rd5144, %rd5117, %rd5143;
	xor.b64  	%rd5145, %rd5144, %rd5043;
	add.s64 	%rd5146, %rd5142, %rd5145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3355,%dummy}, %rd5117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3356}, %rd5117;
	}
	shf.r.wrap.b32 	%r3357, %r3356, %r3355, 14;
	shf.r.wrap.b32 	%r3358, %r3355, %r3356, 14;
	mov.b64 	%rd5147, {%r3358, %r3357};
	shf.r.wrap.b32 	%r3359, %r3356, %r3355, 18;
	shf.r.wrap.b32 	%r3360, %r3355, %r3356, 18;
	mov.b64 	%rd5148, {%r3360, %r3359};
	xor.b64  	%rd5149, %rd5147, %rd5148;
	shf.l.wrap.b32 	%r3361, %r3355, %r3356, 23;
	shf.l.wrap.b32 	%r3362, %r3356, %r3355, 23;
	mov.b64 	%rd5150, {%r3362, %r3361};
	xor.b64  	%rd5151, %rd5149, %rd5150;
	add.s64 	%rd5152, %rd5146, %rd5151;
	add.s64 	%rd5153, %rd5152, 2177327727835720531;
	add.s64 	%rd5154, %rd5153, %rd5017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3363,%dummy}, %rd5128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3364}, %rd5128;
	}
	shf.r.wrap.b32 	%r3365, %r3364, %r3363, 28;
	shf.r.wrap.b32 	%r3366, %r3363, %r3364, 28;
	mov.b64 	%rd5155, {%r3366, %r3365};
	shf.l.wrap.b32 	%r3367, %r3363, %r3364, 30;
	shf.l.wrap.b32 	%r3368, %r3364, %r3363, 30;
	mov.b64 	%rd5156, {%r3368, %r3367};
	xor.b64  	%rd5157, %rd5155, %rd5156;
	shf.l.wrap.b32 	%r3369, %r3363, %r3364, 25;
	shf.l.wrap.b32 	%r3370, %r3364, %r3363, 25;
	mov.b64 	%rd5158, {%r3370, %r3369};
	xor.b64  	%rd5159, %rd5157, %rd5158;
	and.b64  	%rd5160, %rd5128, %rd5091;
	or.b64  	%rd5161, %rd5128, %rd5091;
	and.b64  	%rd5162, %rd5161, %rd5054;
	or.b64  	%rd5163, %rd5162, %rd5160;
	add.s64 	%rd5164, %rd5163, %rd5159;
	add.s64 	%rd5165, %rd5164, %rd5153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3371,%dummy}, %rd5104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3372}, %rd5104;
	}
	shf.r.wrap.b32 	%r3373, %r3372, %r3371, 19;
	shf.r.wrap.b32 	%r3374, %r3371, %r3372, 19;
	mov.b64 	%rd5166, {%r3374, %r3373};
	shf.l.wrap.b32 	%r3375, %r3371, %r3372, 3;
	shf.l.wrap.b32 	%r3376, %r3372, %r3371, 3;
	mov.b64 	%rd5167, {%r3376, %r3375};
	xor.b64  	%rd5168, %rd5166, %rd5167;
	shr.u64 	%rd5169, %rd5104, 6;
	xor.b64  	%rd5170, %rd5168, %rd5169;
	shf.r.wrap.b32 	%r3377, %r3034, %r3033, 1;
	shf.r.wrap.b32 	%r3378, %r3033, %r3034, 1;
	mov.b64 	%rd5171, {%r3378, %r3377};
	shf.r.wrap.b32 	%r3379, %r3034, %r3033, 8;
	shf.r.wrap.b32 	%r3380, %r3033, %r3034, 8;
	mov.b64 	%rd5172, {%r3380, %r3379};
	xor.b64  	%rd5173, %rd5171, %rd5172;
	shr.u64 	%rd5174, %rd4623, 7;
	xor.b64  	%rd5175, %rd5173, %rd5174;
	add.s64 	%rd5176, %rd5175, %rd4586;
	add.s64 	%rd5177, %rd5176, %rd4919;
	add.s64 	%rd5178, %rd5177, %rd5170;
	add.s64 	%rd5179, %rd5178, %rd5043;
	xor.b64  	%rd5180, %rd5117, %rd5080;
	and.b64  	%rd5181, %rd5154, %rd5180;
	xor.b64  	%rd5182, %rd5181, %rd5080;
	add.s64 	%rd5183, %rd5179, %rd5182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3381,%dummy}, %rd5154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3382}, %rd5154;
	}
	shf.r.wrap.b32 	%r3383, %r3382, %r3381, 14;
	shf.r.wrap.b32 	%r3384, %r3381, %r3382, 14;
	mov.b64 	%rd5184, {%r3384, %r3383};
	shf.r.wrap.b32 	%r3385, %r3382, %r3381, 18;
	shf.r.wrap.b32 	%r3386, %r3381, %r3382, 18;
	mov.b64 	%rd5185, {%r3386, %r3385};
	xor.b64  	%rd5186, %rd5184, %rd5185;
	shf.l.wrap.b32 	%r3387, %r3381, %r3382, 23;
	shf.l.wrap.b32 	%r3388, %r3382, %r3381, 23;
	mov.b64 	%rd5187, {%r3388, %r3387};
	xor.b64  	%rd5188, %rd5186, %rd5187;
	add.s64 	%rd5189, %rd5183, %rd5188;
	add.s64 	%rd5190, %rd5189, 2830643537854262169;
	add.s64 	%rd5191, %rd5190, %rd5054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3389,%dummy}, %rd5165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3390}, %rd5165;
	}
	shf.r.wrap.b32 	%r3391, %r3390, %r3389, 28;
	shf.r.wrap.b32 	%r3392, %r3389, %r3390, 28;
	mov.b64 	%rd5192, {%r3392, %r3391};
	shf.l.wrap.b32 	%r3393, %r3389, %r3390, 30;
	shf.l.wrap.b32 	%r3394, %r3390, %r3389, 30;
	mov.b64 	%rd5193, {%r3394, %r3393};
	xor.b64  	%rd5194, %rd5192, %rd5193;
	shf.l.wrap.b32 	%r3395, %r3389, %r3390, 25;
	shf.l.wrap.b32 	%r3396, %r3390, %r3389, 25;
	mov.b64 	%rd5195, {%r3396, %r3395};
	xor.b64  	%rd5196, %rd5194, %rd5195;
	and.b64  	%rd5197, %rd5165, %rd5128;
	or.b64  	%rd5198, %rd5165, %rd5128;
	and.b64  	%rd5199, %rd5198, %rd5091;
	or.b64  	%rd5200, %rd5199, %rd5197;
	add.s64 	%rd5201, %rd5200, %rd5196;
	add.s64 	%rd5202, %rd5201, %rd5190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3397,%dummy}, %rd5141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3398}, %rd5141;
	}
	shf.r.wrap.b32 	%r3399, %r3398, %r3397, 19;
	shf.r.wrap.b32 	%r3400, %r3397, %r3398, 19;
	mov.b64 	%rd5203, {%r3400, %r3399};
	shf.l.wrap.b32 	%r3401, %r3397, %r3398, 3;
	shf.l.wrap.b32 	%r3402, %r3398, %r3397, 3;
	mov.b64 	%rd5204, {%r3402, %r3401};
	xor.b64  	%rd5205, %rd5203, %rd5204;
	shr.u64 	%rd5206, %rd5141, 6;
	xor.b64  	%rd5207, %rd5205, %rd5206;
	shf.r.wrap.b32 	%r3403, %r3060, %r3059, 1;
	shf.r.wrap.b32 	%r3404, %r3059, %r3060, 1;
	mov.b64 	%rd5208, {%r3404, %r3403};
	shf.r.wrap.b32 	%r3405, %r3060, %r3059, 8;
	shf.r.wrap.b32 	%r3406, %r3059, %r3060, 8;
	mov.b64 	%rd5209, {%r3406, %r3405};
	xor.b64  	%rd5210, %rd5208, %rd5209;
	shr.u64 	%rd5211, %rd4660, 7;
	xor.b64  	%rd5212, %rd5210, %rd5211;
	add.s64 	%rd5213, %rd5212, %rd4623;
	add.s64 	%rd5214, %rd5213, %rd4956;
	add.s64 	%rd5215, %rd5214, %rd5207;
	add.s64 	%rd5216, %rd5215, %rd5080;
	xor.b64  	%rd5217, %rd5154, %rd5117;
	and.b64  	%rd5218, %rd5191, %rd5217;
	xor.b64  	%rd5219, %rd5218, %rd5117;
	add.s64 	%rd5220, %rd5216, %rd5219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3407,%dummy}, %rd5191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3408}, %rd5191;
	}
	shf.r.wrap.b32 	%r3409, %r3408, %r3407, 14;
	shf.r.wrap.b32 	%r3410, %r3407, %r3408, 14;
	mov.b64 	%rd5221, {%r3410, %r3409};
	shf.r.wrap.b32 	%r3411, %r3408, %r3407, 18;
	shf.r.wrap.b32 	%r3412, %r3407, %r3408, 18;
	mov.b64 	%rd5222, {%r3412, %r3411};
	xor.b64  	%rd5223, %rd5221, %rd5222;
	shf.l.wrap.b32 	%r3413, %r3407, %r3408, 23;
	shf.l.wrap.b32 	%r3414, %r3408, %r3407, 23;
	mov.b64 	%rd5224, {%r3414, %r3413};
	xor.b64  	%rd5225, %rd5223, %rd5224;
	add.s64 	%rd5226, %rd5220, %rd5225;
	add.s64 	%rd5227, %rd5226, 3796741975233480872;
	add.s64 	%rd5228, %rd5227, %rd5091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3415,%dummy}, %rd5202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3416}, %rd5202;
	}
	shf.r.wrap.b32 	%r3417, %r3416, %r3415, 28;
	shf.r.wrap.b32 	%r3418, %r3415, %r3416, 28;
	mov.b64 	%rd5229, {%r3418, %r3417};
	shf.l.wrap.b32 	%r3419, %r3415, %r3416, 30;
	shf.l.wrap.b32 	%r3420, %r3416, %r3415, 30;
	mov.b64 	%rd5230, {%r3420, %r3419};
	xor.b64  	%rd5231, %rd5229, %rd5230;
	shf.l.wrap.b32 	%r3421, %r3415, %r3416, 25;
	shf.l.wrap.b32 	%r3422, %r3416, %r3415, 25;
	mov.b64 	%rd5232, {%r3422, %r3421};
	xor.b64  	%rd5233, %rd5231, %rd5232;
	and.b64  	%rd5234, %rd5202, %rd5165;
	or.b64  	%rd5235, %rd5202, %rd5165;
	and.b64  	%rd5236, %rd5235, %rd5128;
	or.b64  	%rd5237, %rd5236, %rd5234;
	add.s64 	%rd5238, %rd5237, %rd5233;
	add.s64 	%rd5239, %rd5238, %rd5227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3423,%dummy}, %rd5178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3424}, %rd5178;
	}
	shf.r.wrap.b32 	%r3425, %r3424, %r3423, 19;
	shf.r.wrap.b32 	%r3426, %r3423, %r3424, 19;
	mov.b64 	%rd5240, {%r3426, %r3425};
	shf.l.wrap.b32 	%r3427, %r3423, %r3424, 3;
	shf.l.wrap.b32 	%r3428, %r3424, %r3423, 3;
	mov.b64 	%rd5241, {%r3428, %r3427};
	xor.b64  	%rd5242, %rd5240, %rd5241;
	shr.u64 	%rd5243, %rd5178, 6;
	xor.b64  	%rd5244, %rd5242, %rd5243;
	shf.r.wrap.b32 	%r3429, %r3086, %r3085, 1;
	shf.r.wrap.b32 	%r3430, %r3085, %r3086, 1;
	mov.b64 	%rd5245, {%r3430, %r3429};
	shf.r.wrap.b32 	%r3431, %r3086, %r3085, 8;
	shf.r.wrap.b32 	%r3432, %r3085, %r3086, 8;
	mov.b64 	%rd5246, {%r3432, %r3431};
	xor.b64  	%rd5247, %rd5245, %rd5246;
	shr.u64 	%rd5248, %rd4697, 7;
	xor.b64  	%rd5249, %rd5247, %rd5248;
	add.s64 	%rd5250, %rd5249, %rd4660;
	add.s64 	%rd5251, %rd5250, %rd4993;
	add.s64 	%rd5252, %rd5251, %rd5244;
	add.s64 	%rd5253, %rd5252, %rd5117;
	xor.b64  	%rd5254, %rd5191, %rd5154;
	and.b64  	%rd5255, %rd5228, %rd5254;
	xor.b64  	%rd5256, %rd5255, %rd5154;
	add.s64 	%rd5257, %rd5253, %rd5256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3433,%dummy}, %rd5228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3434}, %rd5228;
	}
	shf.r.wrap.b32 	%r3435, %r3434, %r3433, 14;
	shf.r.wrap.b32 	%r3436, %r3433, %r3434, 14;
	mov.b64 	%rd5258, {%r3436, %r3435};
	shf.r.wrap.b32 	%r3437, %r3434, %r3433, 18;
	shf.r.wrap.b32 	%r3438, %r3433, %r3434, 18;
	mov.b64 	%rd5259, {%r3438, %r3437};
	xor.b64  	%rd5260, %rd5258, %rd5259;
	shf.l.wrap.b32 	%r3439, %r3433, %r3434, 23;
	shf.l.wrap.b32 	%r3440, %r3434, %r3433, 23;
	mov.b64 	%rd5261, {%r3440, %r3439};
	xor.b64  	%rd5262, %rd5260, %rd5261;
	add.s64 	%rd5263, %rd5257, %rd5262;
	add.s64 	%rd5264, %rd5263, 4115178125766777443;
	add.s64 	%rd5265, %rd5264, %rd5128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3441,%dummy}, %rd5239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3442}, %rd5239;
	}
	shf.r.wrap.b32 	%r3443, %r3442, %r3441, 28;
	shf.r.wrap.b32 	%r3444, %r3441, %r3442, 28;
	mov.b64 	%rd5266, {%r3444, %r3443};
	shf.l.wrap.b32 	%r3445, %r3441, %r3442, 30;
	shf.l.wrap.b32 	%r3446, %r3442, %r3441, 30;
	mov.b64 	%rd5267, {%r3446, %r3445};
	xor.b64  	%rd5268, %rd5266, %rd5267;
	shf.l.wrap.b32 	%r3447, %r3441, %r3442, 25;
	shf.l.wrap.b32 	%r3448, %r3442, %r3441, 25;
	mov.b64 	%rd5269, {%r3448, %r3447};
	xor.b64  	%rd5270, %rd5268, %rd5269;
	and.b64  	%rd5271, %rd5239, %rd5202;
	or.b64  	%rd5272, %rd5239, %rd5202;
	and.b64  	%rd5273, %rd5272, %rd5165;
	or.b64  	%rd5274, %rd5273, %rd5271;
	add.s64 	%rd5275, %rd5274, %rd5270;
	add.s64 	%rd5276, %rd5275, %rd5264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3449,%dummy}, %rd5215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3450}, %rd5215;
	}
	shf.r.wrap.b32 	%r3451, %r3450, %r3449, 19;
	shf.r.wrap.b32 	%r3452, %r3449, %r3450, 19;
	mov.b64 	%rd5277, {%r3452, %r3451};
	shf.l.wrap.b32 	%r3453, %r3449, %r3450, 3;
	shf.l.wrap.b32 	%r3454, %r3450, %r3449, 3;
	mov.b64 	%rd5278, {%r3454, %r3453};
	xor.b64  	%rd5279, %rd5277, %rd5278;
	shr.u64 	%rd5280, %rd5215, 6;
	xor.b64  	%rd5281, %rd5279, %rd5280;
	shf.r.wrap.b32 	%r3455, %r3112, %r3111, 1;
	shf.r.wrap.b32 	%r3456, %r3111, %r3112, 1;
	mov.b64 	%rd5282, {%r3456, %r3455};
	shf.r.wrap.b32 	%r3457, %r3112, %r3111, 8;
	shf.r.wrap.b32 	%r3458, %r3111, %r3112, 8;
	mov.b64 	%rd5283, {%r3458, %r3457};
	xor.b64  	%rd5284, %rd5282, %rd5283;
	shr.u64 	%rd5285, %rd4734, 7;
	xor.b64  	%rd5286, %rd5284, %rd5285;
	add.s64 	%rd5287, %rd5286, %rd4697;
	add.s64 	%rd5288, %rd5287, %rd5030;
	add.s64 	%rd5289, %rd5288, %rd5281;
	add.s64 	%rd5290, %rd5289, %rd5154;
	xor.b64  	%rd5291, %rd5228, %rd5191;
	and.b64  	%rd5292, %rd5265, %rd5291;
	xor.b64  	%rd5293, %rd5292, %rd5191;
	add.s64 	%rd5294, %rd5290, %rd5293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3459,%dummy}, %rd5265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3460}, %rd5265;
	}
	shf.r.wrap.b32 	%r3461, %r3460, %r3459, 14;
	shf.r.wrap.b32 	%r3462, %r3459, %r3460, 14;
	mov.b64 	%rd5295, {%r3462, %r3461};
	shf.r.wrap.b32 	%r3463, %r3460, %r3459, 18;
	shf.r.wrap.b32 	%r3464, %r3459, %r3460, 18;
	mov.b64 	%rd5296, {%r3464, %r3463};
	xor.b64  	%rd5297, %rd5295, %rd5296;
	shf.l.wrap.b32 	%r3465, %r3459, %r3460, 23;
	shf.l.wrap.b32 	%r3466, %r3460, %r3459, 23;
	mov.b64 	%rd5298, {%r3466, %r3465};
	xor.b64  	%rd5299, %rd5297, %rd5298;
	add.s64 	%rd5300, %rd5294, %rd5299;
	add.s64 	%rd5301, %rd5300, 5681478168544905931;
	add.s64 	%rd5302, %rd5301, %rd5165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3467,%dummy}, %rd5276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3468}, %rd5276;
	}
	shf.r.wrap.b32 	%r3469, %r3468, %r3467, 28;
	shf.r.wrap.b32 	%r3470, %r3467, %r3468, 28;
	mov.b64 	%rd5303, {%r3470, %r3469};
	shf.l.wrap.b32 	%r3471, %r3467, %r3468, 30;
	shf.l.wrap.b32 	%r3472, %r3468, %r3467, 30;
	mov.b64 	%rd5304, {%r3472, %r3471};
	xor.b64  	%rd5305, %rd5303, %rd5304;
	shf.l.wrap.b32 	%r3473, %r3467, %r3468, 25;
	shf.l.wrap.b32 	%r3474, %r3468, %r3467, 25;
	mov.b64 	%rd5306, {%r3474, %r3473};
	xor.b64  	%rd5307, %rd5305, %rd5306;
	and.b64  	%rd5308, %rd5276, %rd5239;
	or.b64  	%rd5309, %rd5276, %rd5239;
	and.b64  	%rd5310, %rd5309, %rd5202;
	or.b64  	%rd5311, %rd5310, %rd5308;
	add.s64 	%rd5312, %rd5311, %rd5307;
	add.s64 	%rd5313, %rd5312, %rd5301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3475,%dummy}, %rd5252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3476}, %rd5252;
	}
	shf.r.wrap.b32 	%r3477, %r3476, %r3475, 19;
	shf.r.wrap.b32 	%r3478, %r3475, %r3476, 19;
	mov.b64 	%rd5314, {%r3478, %r3477};
	shf.l.wrap.b32 	%r3479, %r3475, %r3476, 3;
	shf.l.wrap.b32 	%r3480, %r3476, %r3475, 3;
	mov.b64 	%rd5315, {%r3480, %r3479};
	xor.b64  	%rd5316, %rd5314, %rd5315;
	shr.u64 	%rd5317, %rd5252, 6;
	xor.b64  	%rd5318, %rd5316, %rd5317;
	shf.r.wrap.b32 	%r3481, %r3138, %r3137, 1;
	shf.r.wrap.b32 	%r3482, %r3137, %r3138, 1;
	mov.b64 	%rd5319, {%r3482, %r3481};
	shf.r.wrap.b32 	%r3483, %r3138, %r3137, 8;
	shf.r.wrap.b32 	%r3484, %r3137, %r3138, 8;
	mov.b64 	%rd5320, {%r3484, %r3483};
	xor.b64  	%rd5321, %rd5319, %rd5320;
	shr.u64 	%rd5322, %rd4771, 7;
	xor.b64  	%rd5323, %rd5321, %rd5322;
	add.s64 	%rd5324, %rd5323, %rd4734;
	add.s64 	%rd5325, %rd5324, %rd5067;
	add.s64 	%rd5326, %rd5325, %rd5318;
	add.s64 	%rd5327, %rd5326, %rd5191;
	xor.b64  	%rd5328, %rd5265, %rd5228;
	and.b64  	%rd5329, %rd5302, %rd5328;
	xor.b64  	%rd5330, %rd5329, %rd5228;
	add.s64 	%rd5331, %rd5327, %rd5330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3485,%dummy}, %rd5302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3486}, %rd5302;
	}
	shf.r.wrap.b32 	%r3487, %r3486, %r3485, 14;
	shf.r.wrap.b32 	%r3488, %r3485, %r3486, 14;
	mov.b64 	%rd5332, {%r3488, %r3487};
	shf.r.wrap.b32 	%r3489, %r3486, %r3485, 18;
	shf.r.wrap.b32 	%r3490, %r3485, %r3486, 18;
	mov.b64 	%rd5333, {%r3490, %r3489};
	xor.b64  	%rd5334, %rd5332, %rd5333;
	shf.l.wrap.b32 	%r3491, %r3485, %r3486, 23;
	shf.l.wrap.b32 	%r3492, %r3486, %r3485, 23;
	mov.b64 	%rd5335, {%r3492, %r3491};
	xor.b64  	%rd5336, %rd5334, %rd5335;
	add.s64 	%rd5337, %rd5331, %rd5336;
	add.s64 	%rd5338, %rd5337, 6601373596472566643;
	add.s64 	%rd5339, %rd5338, %rd5202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3493,%dummy}, %rd5313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3494}, %rd5313;
	}
	shf.r.wrap.b32 	%r3495, %r3494, %r3493, 28;
	shf.r.wrap.b32 	%r3496, %r3493, %r3494, 28;
	mov.b64 	%rd5340, {%r3496, %r3495};
	shf.l.wrap.b32 	%r3497, %r3493, %r3494, 30;
	shf.l.wrap.b32 	%r3498, %r3494, %r3493, 30;
	mov.b64 	%rd5341, {%r3498, %r3497};
	xor.b64  	%rd5342, %rd5340, %rd5341;
	shf.l.wrap.b32 	%r3499, %r3493, %r3494, 25;
	shf.l.wrap.b32 	%r3500, %r3494, %r3493, 25;
	mov.b64 	%rd5343, {%r3500, %r3499};
	xor.b64  	%rd5344, %rd5342, %rd5343;
	and.b64  	%rd5345, %rd5313, %rd5276;
	or.b64  	%rd5346, %rd5313, %rd5276;
	and.b64  	%rd5347, %rd5346, %rd5239;
	or.b64  	%rd5348, %rd5347, %rd5345;
	add.s64 	%rd5349, %rd5348, %rd5344;
	add.s64 	%rd5350, %rd5349, %rd5338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3501,%dummy}, %rd5289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3502}, %rd5289;
	}
	shf.r.wrap.b32 	%r3503, %r3502, %r3501, 19;
	shf.r.wrap.b32 	%r3504, %r3501, %r3502, 19;
	mov.b64 	%rd5351, {%r3504, %r3503};
	shf.l.wrap.b32 	%r3505, %r3501, %r3502, 3;
	shf.l.wrap.b32 	%r3506, %r3502, %r3501, 3;
	mov.b64 	%rd5352, {%r3506, %r3505};
	xor.b64  	%rd5353, %rd5351, %rd5352;
	shr.u64 	%rd5354, %rd5289, 6;
	xor.b64  	%rd5355, %rd5353, %rd5354;
	shf.r.wrap.b32 	%r3507, %r3164, %r3163, 1;
	shf.r.wrap.b32 	%r3508, %r3163, %r3164, 1;
	mov.b64 	%rd5356, {%r3508, %r3507};
	shf.r.wrap.b32 	%r3509, %r3164, %r3163, 8;
	shf.r.wrap.b32 	%r3510, %r3163, %r3164, 8;
	mov.b64 	%rd5357, {%r3510, %r3509};
	xor.b64  	%rd5358, %rd5356, %rd5357;
	shr.u64 	%rd5359, %rd4808, 7;
	xor.b64  	%rd5360, %rd5358, %rd5359;
	add.s64 	%rd5361, %rd5360, %rd4771;
	add.s64 	%rd5362, %rd5361, %rd5104;
	add.s64 	%rd5363, %rd5362, %rd5355;
	add.s64 	%rd5364, %rd5363, %rd5228;
	xor.b64  	%rd5365, %rd5302, %rd5265;
	and.b64  	%rd5366, %rd5339, %rd5365;
	xor.b64  	%rd5367, %rd5366, %rd5265;
	add.s64 	%rd5368, %rd5364, %rd5367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3511,%dummy}, %rd5339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3512}, %rd5339;
	}
	shf.r.wrap.b32 	%r3513, %r3512, %r3511, 14;
	shf.r.wrap.b32 	%r3514, %r3511, %r3512, 14;
	mov.b64 	%rd5369, {%r3514, %r3513};
	shf.r.wrap.b32 	%r3515, %r3512, %r3511, 18;
	shf.r.wrap.b32 	%r3516, %r3511, %r3512, 18;
	mov.b64 	%rd5370, {%r3516, %r3515};
	xor.b64  	%rd5371, %rd5369, %rd5370;
	shf.l.wrap.b32 	%r3517, %r3511, %r3512, 23;
	shf.l.wrap.b32 	%r3518, %r3512, %r3511, 23;
	mov.b64 	%rd5372, {%r3518, %r3517};
	xor.b64  	%rd5373, %rd5371, %rd5372;
	add.s64 	%rd5374, %rd5368, %rd5373;
	add.s64 	%rd5375, %rd5374, 7507060721942968483;
	add.s64 	%rd5376, %rd5375, %rd5239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3519,%dummy}, %rd5350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3520}, %rd5350;
	}
	shf.r.wrap.b32 	%r3521, %r3520, %r3519, 28;
	shf.r.wrap.b32 	%r3522, %r3519, %r3520, 28;
	mov.b64 	%rd5377, {%r3522, %r3521};
	shf.l.wrap.b32 	%r3523, %r3519, %r3520, 30;
	shf.l.wrap.b32 	%r3524, %r3520, %r3519, 30;
	mov.b64 	%rd5378, {%r3524, %r3523};
	xor.b64  	%rd5379, %rd5377, %rd5378;
	shf.l.wrap.b32 	%r3525, %r3519, %r3520, 25;
	shf.l.wrap.b32 	%r3526, %r3520, %r3519, 25;
	mov.b64 	%rd5380, {%r3526, %r3525};
	xor.b64  	%rd5381, %rd5379, %rd5380;
	and.b64  	%rd5382, %rd5350, %rd5313;
	or.b64  	%rd5383, %rd5350, %rd5313;
	and.b64  	%rd5384, %rd5383, %rd5276;
	or.b64  	%rd5385, %rd5384, %rd5382;
	add.s64 	%rd5386, %rd5385, %rd5381;
	add.s64 	%rd5387, %rd5386, %rd5375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3527,%dummy}, %rd5326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3528}, %rd5326;
	}
	shf.r.wrap.b32 	%r3529, %r3528, %r3527, 19;
	shf.r.wrap.b32 	%r3530, %r3527, %r3528, 19;
	mov.b64 	%rd5388, {%r3530, %r3529};
	shf.l.wrap.b32 	%r3531, %r3527, %r3528, 3;
	shf.l.wrap.b32 	%r3532, %r3528, %r3527, 3;
	mov.b64 	%rd5389, {%r3532, %r3531};
	xor.b64  	%rd5390, %rd5388, %rd5389;
	shr.u64 	%rd5391, %rd5326, 6;
	xor.b64  	%rd5392, %rd5390, %rd5391;
	shf.r.wrap.b32 	%r3533, %r3190, %r3189, 1;
	shf.r.wrap.b32 	%r3534, %r3189, %r3190, 1;
	mov.b64 	%rd5393, {%r3534, %r3533};
	shf.r.wrap.b32 	%r3535, %r3190, %r3189, 8;
	shf.r.wrap.b32 	%r3536, %r3189, %r3190, 8;
	mov.b64 	%rd5394, {%r3536, %r3535};
	xor.b64  	%rd5395, %rd5393, %rd5394;
	shr.u64 	%rd5396, %rd4845, 7;
	xor.b64  	%rd5397, %rd5395, %rd5396;
	add.s64 	%rd5398, %rd5397, %rd4808;
	add.s64 	%rd5399, %rd5398, %rd5141;
	add.s64 	%rd5400, %rd5399, %rd5392;
	add.s64 	%rd5401, %rd5400, %rd5265;
	xor.b64  	%rd5402, %rd5339, %rd5302;
	and.b64  	%rd5403, %rd5376, %rd5402;
	xor.b64  	%rd5404, %rd5403, %rd5302;
	add.s64 	%rd5405, %rd5401, %rd5404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3537,%dummy}, %rd5376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3538}, %rd5376;
	}
	shf.r.wrap.b32 	%r3539, %r3538, %r3537, 14;
	shf.r.wrap.b32 	%r3540, %r3537, %r3538, 14;
	mov.b64 	%rd5406, {%r3540, %r3539};
	shf.r.wrap.b32 	%r3541, %r3538, %r3537, 18;
	shf.r.wrap.b32 	%r3542, %r3537, %r3538, 18;
	mov.b64 	%rd5407, {%r3542, %r3541};
	xor.b64  	%rd5408, %rd5406, %rd5407;
	shf.l.wrap.b32 	%r3543, %r3537, %r3538, 23;
	shf.l.wrap.b32 	%r3544, %r3538, %r3537, 23;
	mov.b64 	%rd5409, {%r3544, %r3543};
	xor.b64  	%rd5410, %rd5408, %rd5409;
	add.s64 	%rd5411, %rd5405, %rd5410;
	add.s64 	%rd5412, %rd5411, 8399075790359081724;
	add.s64 	%rd5413, %rd5412, %rd5276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3545,%dummy}, %rd5387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3546}, %rd5387;
	}
	shf.r.wrap.b32 	%r3547, %r3546, %r3545, 28;
	shf.r.wrap.b32 	%r3548, %r3545, %r3546, 28;
	mov.b64 	%rd5414, {%r3548, %r3547};
	shf.l.wrap.b32 	%r3549, %r3545, %r3546, 30;
	shf.l.wrap.b32 	%r3550, %r3546, %r3545, 30;
	mov.b64 	%rd5415, {%r3550, %r3549};
	xor.b64  	%rd5416, %rd5414, %rd5415;
	shf.l.wrap.b32 	%r3551, %r3545, %r3546, 25;
	shf.l.wrap.b32 	%r3552, %r3546, %r3545, 25;
	mov.b64 	%rd5417, {%r3552, %r3551};
	xor.b64  	%rd5418, %rd5416, %rd5417;
	and.b64  	%rd5419, %rd5387, %rd5350;
	or.b64  	%rd5420, %rd5387, %rd5350;
	and.b64  	%rd5421, %rd5420, %rd5313;
	or.b64  	%rd5422, %rd5421, %rd5419;
	add.s64 	%rd5423, %rd5422, %rd5418;
	add.s64 	%rd5424, %rd5423, %rd5412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3553,%dummy}, %rd5363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3554}, %rd5363;
	}
	shf.r.wrap.b32 	%r3555, %r3554, %r3553, 19;
	shf.r.wrap.b32 	%r3556, %r3553, %r3554, 19;
	mov.b64 	%rd5425, {%r3556, %r3555};
	shf.l.wrap.b32 	%r3557, %r3553, %r3554, 3;
	shf.l.wrap.b32 	%r3558, %r3554, %r3553, 3;
	mov.b64 	%rd5426, {%r3558, %r3557};
	xor.b64  	%rd5427, %rd5425, %rd5426;
	shr.u64 	%rd5428, %rd5363, 6;
	xor.b64  	%rd5429, %rd5427, %rd5428;
	shf.r.wrap.b32 	%r3559, %r3216, %r3215, 1;
	shf.r.wrap.b32 	%r3560, %r3215, %r3216, 1;
	mov.b64 	%rd5430, {%r3560, %r3559};
	shf.r.wrap.b32 	%r3561, %r3216, %r3215, 8;
	shf.r.wrap.b32 	%r3562, %r3215, %r3216, 8;
	mov.b64 	%rd5431, {%r3562, %r3561};
	xor.b64  	%rd5432, %rd5430, %rd5431;
	shr.u64 	%rd5433, %rd4882, 7;
	xor.b64  	%rd5434, %rd5432, %rd5433;
	add.s64 	%rd5435, %rd5434, %rd4845;
	add.s64 	%rd5436, %rd5435, %rd5178;
	add.s64 	%rd5437, %rd5436, %rd5429;
	add.s64 	%rd5438, %rd5437, %rd5302;
	xor.b64  	%rd5439, %rd5376, %rd5339;
	and.b64  	%rd5440, %rd5413, %rd5439;
	xor.b64  	%rd5441, %rd5440, %rd5339;
	add.s64 	%rd5442, %rd5438, %rd5441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3563,%dummy}, %rd5413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3564}, %rd5413;
	}
	shf.r.wrap.b32 	%r3565, %r3564, %r3563, 14;
	shf.r.wrap.b32 	%r3566, %r3563, %r3564, 14;
	mov.b64 	%rd5443, {%r3566, %r3565};
	shf.r.wrap.b32 	%r3567, %r3564, %r3563, 18;
	shf.r.wrap.b32 	%r3568, %r3563, %r3564, 18;
	mov.b64 	%rd5444, {%r3568, %r3567};
	xor.b64  	%rd5445, %rd5443, %rd5444;
	shf.l.wrap.b32 	%r3569, %r3563, %r3564, 23;
	shf.l.wrap.b32 	%r3570, %r3564, %r3563, 23;
	mov.b64 	%rd5446, {%r3570, %r3569};
	xor.b64  	%rd5447, %rd5445, %rd5446;
	add.s64 	%rd5448, %rd5442, %rd5447;
	add.s64 	%rd5449, %rd5448, 8693463985226723168;
	add.s64 	%rd5450, %rd5449, %rd5313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3571,%dummy}, %rd5424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3572}, %rd5424;
	}
	shf.r.wrap.b32 	%r3573, %r3572, %r3571, 28;
	shf.r.wrap.b32 	%r3574, %r3571, %r3572, 28;
	mov.b64 	%rd5451, {%r3574, %r3573};
	shf.l.wrap.b32 	%r3575, %r3571, %r3572, 30;
	shf.l.wrap.b32 	%r3576, %r3572, %r3571, 30;
	mov.b64 	%rd5452, {%r3576, %r3575};
	xor.b64  	%rd5453, %rd5451, %rd5452;
	shf.l.wrap.b32 	%r3577, %r3571, %r3572, 25;
	shf.l.wrap.b32 	%r3578, %r3572, %r3571, 25;
	mov.b64 	%rd5454, {%r3578, %r3577};
	xor.b64  	%rd5455, %rd5453, %rd5454;
	and.b64  	%rd5456, %rd5424, %rd5387;
	or.b64  	%rd5457, %rd5424, %rd5387;
	and.b64  	%rd5458, %rd5457, %rd5350;
	or.b64  	%rd5459, %rd5458, %rd5456;
	add.s64 	%rd5460, %rd5459, %rd5455;
	add.s64 	%rd5461, %rd5460, %rd5449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3579,%dummy}, %rd5400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3580}, %rd5400;
	}
	shf.r.wrap.b32 	%r3581, %r3580, %r3579, 19;
	shf.r.wrap.b32 	%r3582, %r3579, %r3580, 19;
	mov.b64 	%rd5462, {%r3582, %r3581};
	shf.l.wrap.b32 	%r3583, %r3579, %r3580, 3;
	shf.l.wrap.b32 	%r3584, %r3580, %r3579, 3;
	mov.b64 	%rd5463, {%r3584, %r3583};
	xor.b64  	%rd5464, %rd5462, %rd5463;
	shr.u64 	%rd5465, %rd5400, 6;
	xor.b64  	%rd5466, %rd5464, %rd5465;
	shf.r.wrap.b32 	%r3585, %r3242, %r3241, 1;
	shf.r.wrap.b32 	%r3586, %r3241, %r3242, 1;
	mov.b64 	%rd5467, {%r3586, %r3585};
	shf.r.wrap.b32 	%r3587, %r3242, %r3241, 8;
	shf.r.wrap.b32 	%r3588, %r3241, %r3242, 8;
	mov.b64 	%rd5468, {%r3588, %r3587};
	xor.b64  	%rd5469, %rd5467, %rd5468;
	shr.u64 	%rd5470, %rd4919, 7;
	xor.b64  	%rd5471, %rd5469, %rd5470;
	add.s64 	%rd5472, %rd5471, %rd4882;
	add.s64 	%rd5473, %rd5472, %rd5215;
	add.s64 	%rd5474, %rd5473, %rd5466;
	add.s64 	%rd5475, %rd5474, %rd5339;
	xor.b64  	%rd5476, %rd5413, %rd5376;
	and.b64  	%rd5477, %rd5450, %rd5476;
	xor.b64  	%rd5478, %rd5477, %rd5376;
	add.s64 	%rd5479, %rd5475, %rd5478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3589,%dummy}, %rd5450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3590}, %rd5450;
	}
	shf.r.wrap.b32 	%r3591, %r3590, %r3589, 14;
	shf.r.wrap.b32 	%r3592, %r3589, %r3590, 14;
	mov.b64 	%rd5480, {%r3592, %r3591};
	shf.r.wrap.b32 	%r3593, %r3590, %r3589, 18;
	shf.r.wrap.b32 	%r3594, %r3589, %r3590, 18;
	mov.b64 	%rd5481, {%r3594, %r3593};
	xor.b64  	%rd5482, %rd5480, %rd5481;
	shf.l.wrap.b32 	%r3595, %r3589, %r3590, 23;
	shf.l.wrap.b32 	%r3596, %r3590, %r3589, 23;
	mov.b64 	%rd5483, {%r3596, %r3595};
	xor.b64  	%rd5484, %rd5482, %rd5483;
	add.s64 	%rd5485, %rd5479, %rd5484;
	add.s64 	%rd5486, %rd5485, -8878714635349349518;
	add.s64 	%rd5487, %rd5486, %rd5350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3597,%dummy}, %rd5461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3598}, %rd5461;
	}
	shf.r.wrap.b32 	%r3599, %r3598, %r3597, 28;
	shf.r.wrap.b32 	%r3600, %r3597, %r3598, 28;
	mov.b64 	%rd5488, {%r3600, %r3599};
	shf.l.wrap.b32 	%r3601, %r3597, %r3598, 30;
	shf.l.wrap.b32 	%r3602, %r3598, %r3597, 30;
	mov.b64 	%rd5489, {%r3602, %r3601};
	xor.b64  	%rd5490, %rd5488, %rd5489;
	shf.l.wrap.b32 	%r3603, %r3597, %r3598, 25;
	shf.l.wrap.b32 	%r3604, %r3598, %r3597, 25;
	mov.b64 	%rd5491, {%r3604, %r3603};
	xor.b64  	%rd5492, %rd5490, %rd5491;
	and.b64  	%rd5493, %rd5461, %rd5424;
	or.b64  	%rd5494, %rd5461, %rd5424;
	and.b64  	%rd5495, %rd5494, %rd5387;
	or.b64  	%rd5496, %rd5495, %rd5493;
	add.s64 	%rd5497, %rd5496, %rd5492;
	add.s64 	%rd5498, %rd5497, %rd5486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3605,%dummy}, %rd5437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3606}, %rd5437;
	}
	shf.r.wrap.b32 	%r3607, %r3606, %r3605, 19;
	shf.r.wrap.b32 	%r3608, %r3605, %r3606, 19;
	mov.b64 	%rd5499, {%r3608, %r3607};
	shf.l.wrap.b32 	%r3609, %r3605, %r3606, 3;
	shf.l.wrap.b32 	%r3610, %r3606, %r3605, 3;
	mov.b64 	%rd5500, {%r3610, %r3609};
	xor.b64  	%rd5501, %rd5499, %rd5500;
	shr.u64 	%rd5502, %rd5437, 6;
	xor.b64  	%rd5503, %rd5501, %rd5502;
	shf.r.wrap.b32 	%r3611, %r3268, %r3267, 1;
	shf.r.wrap.b32 	%r3612, %r3267, %r3268, 1;
	mov.b64 	%rd5504, {%r3612, %r3611};
	shf.r.wrap.b32 	%r3613, %r3268, %r3267, 8;
	shf.r.wrap.b32 	%r3614, %r3267, %r3268, 8;
	mov.b64 	%rd5505, {%r3614, %r3613};
	xor.b64  	%rd5506, %rd5504, %rd5505;
	shr.u64 	%rd5507, %rd4956, 7;
	xor.b64  	%rd5508, %rd5506, %rd5507;
	add.s64 	%rd5509, %rd5508, %rd4919;
	add.s64 	%rd5510, %rd5509, %rd5252;
	add.s64 	%rd5511, %rd5510, %rd5503;
	add.s64 	%rd5512, %rd5511, %rd5376;
	xor.b64  	%rd5513, %rd5450, %rd5413;
	and.b64  	%rd5514, %rd5487, %rd5513;
	xor.b64  	%rd5515, %rd5514, %rd5413;
	add.s64 	%rd5516, %rd5512, %rd5515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3615,%dummy}, %rd5487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3616}, %rd5487;
	}
	shf.r.wrap.b32 	%r3617, %r3616, %r3615, 14;
	shf.r.wrap.b32 	%r3618, %r3615, %r3616, 14;
	mov.b64 	%rd5517, {%r3618, %r3617};
	shf.r.wrap.b32 	%r3619, %r3616, %r3615, 18;
	shf.r.wrap.b32 	%r3620, %r3615, %r3616, 18;
	mov.b64 	%rd5518, {%r3620, %r3619};
	xor.b64  	%rd5519, %rd5517, %rd5518;
	shf.l.wrap.b32 	%r3621, %r3615, %r3616, 23;
	shf.l.wrap.b32 	%r3622, %r3616, %r3615, 23;
	mov.b64 	%rd5520, {%r3622, %r3621};
	xor.b64  	%rd5521, %rd5519, %rd5520;
	add.s64 	%rd5522, %rd5516, %rd5521;
	add.s64 	%rd5523, %rd5522, -8302665154208450068;
	add.s64 	%rd5524, %rd5523, %rd5387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3623,%dummy}, %rd5498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3624}, %rd5498;
	}
	shf.r.wrap.b32 	%r3625, %r3624, %r3623, 28;
	shf.r.wrap.b32 	%r3626, %r3623, %r3624, 28;
	mov.b64 	%rd5525, {%r3626, %r3625};
	shf.l.wrap.b32 	%r3627, %r3623, %r3624, 30;
	shf.l.wrap.b32 	%r3628, %r3624, %r3623, 30;
	mov.b64 	%rd5526, {%r3628, %r3627};
	xor.b64  	%rd5527, %rd5525, %rd5526;
	shf.l.wrap.b32 	%r3629, %r3623, %r3624, 25;
	shf.l.wrap.b32 	%r3630, %r3624, %r3623, 25;
	mov.b64 	%rd5528, {%r3630, %r3629};
	xor.b64  	%rd5529, %rd5527, %rd5528;
	and.b64  	%rd5530, %rd5498, %rd5461;
	or.b64  	%rd5531, %rd5498, %rd5461;
	and.b64  	%rd5532, %rd5531, %rd5424;
	or.b64  	%rd5533, %rd5532, %rd5530;
	add.s64 	%rd5534, %rd5533, %rd5529;
	add.s64 	%rd5535, %rd5534, %rd5523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3631,%dummy}, %rd5474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3632}, %rd5474;
	}
	shf.r.wrap.b32 	%r3633, %r3632, %r3631, 19;
	shf.r.wrap.b32 	%r3634, %r3631, %r3632, 19;
	mov.b64 	%rd5536, {%r3634, %r3633};
	shf.l.wrap.b32 	%r3635, %r3631, %r3632, 3;
	shf.l.wrap.b32 	%r3636, %r3632, %r3631, 3;
	mov.b64 	%rd5537, {%r3636, %r3635};
	xor.b64  	%rd5538, %rd5536, %rd5537;
	shr.u64 	%rd5539, %rd5474, 6;
	xor.b64  	%rd5540, %rd5538, %rd5539;
	shf.r.wrap.b32 	%r3637, %r3294, %r3293, 1;
	shf.r.wrap.b32 	%r3638, %r3293, %r3294, 1;
	mov.b64 	%rd5541, {%r3638, %r3637};
	shf.r.wrap.b32 	%r3639, %r3294, %r3293, 8;
	shf.r.wrap.b32 	%r3640, %r3293, %r3294, 8;
	mov.b64 	%rd5542, {%r3640, %r3639};
	xor.b64  	%rd5543, %rd5541, %rd5542;
	shr.u64 	%rd5544, %rd4993, 7;
	xor.b64  	%rd5545, %rd5543, %rd5544;
	add.s64 	%rd5546, %rd5545, %rd4956;
	add.s64 	%rd5547, %rd5546, %rd5289;
	add.s64 	%rd5548, %rd5547, %rd5540;
	add.s64 	%rd5549, %rd5548, %rd5413;
	xor.b64  	%rd5550, %rd5487, %rd5450;
	and.b64  	%rd5551, %rd5524, %rd5550;
	xor.b64  	%rd5552, %rd5551, %rd5450;
	add.s64 	%rd5553, %rd5549, %rd5552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3641,%dummy}, %rd5524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3642}, %rd5524;
	}
	shf.r.wrap.b32 	%r3643, %r3642, %r3641, 14;
	shf.r.wrap.b32 	%r3644, %r3641, %r3642, 14;
	mov.b64 	%rd5554, {%r3644, %r3643};
	shf.r.wrap.b32 	%r3645, %r3642, %r3641, 18;
	shf.r.wrap.b32 	%r3646, %r3641, %r3642, 18;
	mov.b64 	%rd5555, {%r3646, %r3645};
	xor.b64  	%rd5556, %rd5554, %rd5555;
	shf.l.wrap.b32 	%r3647, %r3641, %r3642, 23;
	shf.l.wrap.b32 	%r3648, %r3642, %r3641, 23;
	mov.b64 	%rd5557, {%r3648, %r3647};
	xor.b64  	%rd5558, %rd5556, %rd5557;
	add.s64 	%rd5559, %rd5553, %rd5558;
	add.s64 	%rd5560, %rd5559, -8016688836872298968;
	add.s64 	%rd5561, %rd5560, %rd5424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3649,%dummy}, %rd5535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3650}, %rd5535;
	}
	shf.r.wrap.b32 	%r3651, %r3650, %r3649, 28;
	shf.r.wrap.b32 	%r3652, %r3649, %r3650, 28;
	mov.b64 	%rd5562, {%r3652, %r3651};
	shf.l.wrap.b32 	%r3653, %r3649, %r3650, 30;
	shf.l.wrap.b32 	%r3654, %r3650, %r3649, 30;
	mov.b64 	%rd5563, {%r3654, %r3653};
	xor.b64  	%rd5564, %rd5562, %rd5563;
	shf.l.wrap.b32 	%r3655, %r3649, %r3650, 25;
	shf.l.wrap.b32 	%r3656, %r3650, %r3649, 25;
	mov.b64 	%rd5565, {%r3656, %r3655};
	xor.b64  	%rd5566, %rd5564, %rd5565;
	and.b64  	%rd5567, %rd5535, %rd5498;
	or.b64  	%rd5568, %rd5535, %rd5498;
	and.b64  	%rd5569, %rd5568, %rd5461;
	or.b64  	%rd5570, %rd5569, %rd5567;
	add.s64 	%rd5571, %rd5570, %rd5566;
	add.s64 	%rd5572, %rd5571, %rd5560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3657,%dummy}, %rd5511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3658}, %rd5511;
	}
	shf.r.wrap.b32 	%r3659, %r3658, %r3657, 19;
	shf.r.wrap.b32 	%r3660, %r3657, %r3658, 19;
	mov.b64 	%rd5573, {%r3660, %r3659};
	shf.l.wrap.b32 	%r3661, %r3657, %r3658, 3;
	shf.l.wrap.b32 	%r3662, %r3658, %r3657, 3;
	mov.b64 	%rd5574, {%r3662, %r3661};
	xor.b64  	%rd5575, %rd5573, %rd5574;
	shr.u64 	%rd5576, %rd5511, 6;
	xor.b64  	%rd5577, %rd5575, %rd5576;
	shf.r.wrap.b32 	%r3663, %r3320, %r3319, 1;
	shf.r.wrap.b32 	%r3664, %r3319, %r3320, 1;
	mov.b64 	%rd5578, {%r3664, %r3663};
	shf.r.wrap.b32 	%r3665, %r3320, %r3319, 8;
	shf.r.wrap.b32 	%r3666, %r3319, %r3320, 8;
	mov.b64 	%rd5579, {%r3666, %r3665};
	xor.b64  	%rd5580, %rd5578, %rd5579;
	shr.u64 	%rd5581, %rd5030, 7;
	xor.b64  	%rd5582, %rd5580, %rd5581;
	add.s64 	%rd5583, %rd5582, %rd4993;
	add.s64 	%rd5584, %rd5583, %rd5326;
	add.s64 	%rd5585, %rd5584, %rd5577;
	add.s64 	%rd5586, %rd5585, %rd5450;
	xor.b64  	%rd5587, %rd5524, %rd5487;
	and.b64  	%rd5588, %rd5561, %rd5587;
	xor.b64  	%rd5589, %rd5588, %rd5487;
	add.s64 	%rd5590, %rd5586, %rd5589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3667,%dummy}, %rd5561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3668}, %rd5561;
	}
	shf.r.wrap.b32 	%r3669, %r3668, %r3667, 14;
	shf.r.wrap.b32 	%r3670, %r3667, %r3668, 14;
	mov.b64 	%rd5591, {%r3670, %r3669};
	shf.r.wrap.b32 	%r3671, %r3668, %r3667, 18;
	shf.r.wrap.b32 	%r3672, %r3667, %r3668, 18;
	mov.b64 	%rd5592, {%r3672, %r3671};
	xor.b64  	%rd5593, %rd5591, %rd5592;
	shf.l.wrap.b32 	%r3673, %r3667, %r3668, 23;
	shf.l.wrap.b32 	%r3674, %r3668, %r3667, 23;
	mov.b64 	%rd5594, {%r3674, %r3673};
	xor.b64  	%rd5595, %rd5593, %rd5594;
	add.s64 	%rd5596, %rd5590, %rd5595;
	add.s64 	%rd5597, %rd5596, -6606660893046293015;
	add.s64 	%rd5598, %rd5597, %rd5461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3675,%dummy}, %rd5572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3676}, %rd5572;
	}
	shf.r.wrap.b32 	%r3677, %r3676, %r3675, 28;
	shf.r.wrap.b32 	%r3678, %r3675, %r3676, 28;
	mov.b64 	%rd5599, {%r3678, %r3677};
	shf.l.wrap.b32 	%r3679, %r3675, %r3676, 30;
	shf.l.wrap.b32 	%r3680, %r3676, %r3675, 30;
	mov.b64 	%rd5600, {%r3680, %r3679};
	xor.b64  	%rd5601, %rd5599, %rd5600;
	shf.l.wrap.b32 	%r3681, %r3675, %r3676, 25;
	shf.l.wrap.b32 	%r3682, %r3676, %r3675, 25;
	mov.b64 	%rd5602, {%r3682, %r3681};
	xor.b64  	%rd5603, %rd5601, %rd5602;
	and.b64  	%rd5604, %rd5572, %rd5535;
	or.b64  	%rd5605, %rd5572, %rd5535;
	and.b64  	%rd5606, %rd5605, %rd5498;
	or.b64  	%rd5607, %rd5606, %rd5604;
	add.s64 	%rd5608, %rd5607, %rd5603;
	add.s64 	%rd5609, %rd5608, %rd5597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3683,%dummy}, %rd5548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3684}, %rd5548;
	}
	shf.r.wrap.b32 	%r3685, %r3684, %r3683, 19;
	shf.r.wrap.b32 	%r3686, %r3683, %r3684, 19;
	mov.b64 	%rd5610, {%r3686, %r3685};
	shf.l.wrap.b32 	%r3687, %r3683, %r3684, 3;
	shf.l.wrap.b32 	%r3688, %r3684, %r3683, 3;
	mov.b64 	%rd5611, {%r3688, %r3687};
	xor.b64  	%rd5612, %rd5610, %rd5611;
	shr.u64 	%rd5613, %rd5548, 6;
	xor.b64  	%rd5614, %rd5612, %rd5613;
	shf.r.wrap.b32 	%r3689, %r3346, %r3345, 1;
	shf.r.wrap.b32 	%r3690, %r3345, %r3346, 1;
	mov.b64 	%rd5615, {%r3690, %r3689};
	shf.r.wrap.b32 	%r3691, %r3346, %r3345, 8;
	shf.r.wrap.b32 	%r3692, %r3345, %r3346, 8;
	mov.b64 	%rd5616, {%r3692, %r3691};
	xor.b64  	%rd5617, %rd5615, %rd5616;
	shr.u64 	%rd5618, %rd5067, 7;
	xor.b64  	%rd5619, %rd5617, %rd5618;
	add.s64 	%rd5620, %rd5619, %rd5030;
	add.s64 	%rd5621, %rd5620, %rd5363;
	add.s64 	%rd5622, %rd5621, %rd5614;
	add.s64 	%rd5623, %rd5622, %rd5487;
	xor.b64  	%rd5624, %rd5561, %rd5524;
	and.b64  	%rd5625, %rd5598, %rd5624;
	xor.b64  	%rd5626, %rd5625, %rd5524;
	add.s64 	%rd5627, %rd5623, %rd5626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3693,%dummy}, %rd5598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3694}, %rd5598;
	}
	shf.r.wrap.b32 	%r3695, %r3694, %r3693, 14;
	shf.r.wrap.b32 	%r3696, %r3693, %r3694, 14;
	mov.b64 	%rd5628, {%r3696, %r3695};
	shf.r.wrap.b32 	%r3697, %r3694, %r3693, 18;
	shf.r.wrap.b32 	%r3698, %r3693, %r3694, 18;
	mov.b64 	%rd5629, {%r3698, %r3697};
	xor.b64  	%rd5630, %rd5628, %rd5629;
	shf.l.wrap.b32 	%r3699, %r3693, %r3694, 23;
	shf.l.wrap.b32 	%r3700, %r3694, %r3693, 23;
	mov.b64 	%rd5631, {%r3700, %r3699};
	xor.b64  	%rd5632, %rd5630, %rd5631;
	add.s64 	%rd5633, %rd5627, %rd5632;
	add.s64 	%rd5634, %rd5633, -4685533653050689259;
	add.s64 	%rd5635, %rd5634, %rd5498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3701,%dummy}, %rd5609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3702}, %rd5609;
	}
	shf.r.wrap.b32 	%r3703, %r3702, %r3701, 28;
	shf.r.wrap.b32 	%r3704, %r3701, %r3702, 28;
	mov.b64 	%rd5636, {%r3704, %r3703};
	shf.l.wrap.b32 	%r3705, %r3701, %r3702, 30;
	shf.l.wrap.b32 	%r3706, %r3702, %r3701, 30;
	mov.b64 	%rd5637, {%r3706, %r3705};
	xor.b64  	%rd5638, %rd5636, %rd5637;
	shf.l.wrap.b32 	%r3707, %r3701, %r3702, 25;
	shf.l.wrap.b32 	%r3708, %r3702, %r3701, 25;
	mov.b64 	%rd5639, {%r3708, %r3707};
	xor.b64  	%rd5640, %rd5638, %rd5639;
	and.b64  	%rd5641, %rd5609, %rd5572;
	or.b64  	%rd5642, %rd5609, %rd5572;
	and.b64  	%rd5643, %rd5642, %rd5535;
	or.b64  	%rd5644, %rd5643, %rd5641;
	add.s64 	%rd5645, %rd5644, %rd5640;
	add.s64 	%rd5646, %rd5645, %rd5634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3709,%dummy}, %rd5585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3710}, %rd5585;
	}
	shf.r.wrap.b32 	%r3711, %r3710, %r3709, 19;
	shf.r.wrap.b32 	%r3712, %r3709, %r3710, 19;
	mov.b64 	%rd5647, {%r3712, %r3711};
	shf.l.wrap.b32 	%r3713, %r3709, %r3710, 3;
	shf.l.wrap.b32 	%r3714, %r3710, %r3709, 3;
	mov.b64 	%rd5648, {%r3714, %r3713};
	xor.b64  	%rd5649, %rd5647, %rd5648;
	shr.u64 	%rd5650, %rd5585, 6;
	xor.b64  	%rd5651, %rd5649, %rd5650;
	shf.r.wrap.b32 	%r3715, %r3372, %r3371, 1;
	shf.r.wrap.b32 	%r3716, %r3371, %r3372, 1;
	mov.b64 	%rd5652, {%r3716, %r3715};
	shf.r.wrap.b32 	%r3717, %r3372, %r3371, 8;
	shf.r.wrap.b32 	%r3718, %r3371, %r3372, 8;
	mov.b64 	%rd5653, {%r3718, %r3717};
	xor.b64  	%rd5654, %rd5652, %rd5653;
	shr.u64 	%rd5655, %rd5104, 7;
	xor.b64  	%rd5656, %rd5654, %rd5655;
	add.s64 	%rd5657, %rd5656, %rd5067;
	add.s64 	%rd5658, %rd5657, %rd5400;
	add.s64 	%rd5659, %rd5658, %rd5651;
	add.s64 	%rd5660, %rd5659, %rd5524;
	xor.b64  	%rd5661, %rd5598, %rd5561;
	and.b64  	%rd5662, %rd5635, %rd5661;
	xor.b64  	%rd5663, %rd5662, %rd5561;
	add.s64 	%rd5664, %rd5660, %rd5663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3719,%dummy}, %rd5635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3720}, %rd5635;
	}
	shf.r.wrap.b32 	%r3721, %r3720, %r3719, 14;
	shf.r.wrap.b32 	%r3722, %r3719, %r3720, 14;
	mov.b64 	%rd5665, {%r3722, %r3721};
	shf.r.wrap.b32 	%r3723, %r3720, %r3719, 18;
	shf.r.wrap.b32 	%r3724, %r3719, %r3720, 18;
	mov.b64 	%rd5666, {%r3724, %r3723};
	xor.b64  	%rd5667, %rd5665, %rd5666;
	shf.l.wrap.b32 	%r3725, %r3719, %r3720, 23;
	shf.l.wrap.b32 	%r3726, %r3720, %r3719, 23;
	mov.b64 	%rd5668, {%r3726, %r3725};
	xor.b64  	%rd5669, %rd5667, %rd5668;
	add.s64 	%rd5670, %rd5664, %rd5669;
	add.s64 	%rd5671, %rd5670, -4147400797238176981;
	add.s64 	%rd5672, %rd5671, %rd5535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3727,%dummy}, %rd5646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3728}, %rd5646;
	}
	shf.r.wrap.b32 	%r3729, %r3728, %r3727, 28;
	shf.r.wrap.b32 	%r3730, %r3727, %r3728, 28;
	mov.b64 	%rd5673, {%r3730, %r3729};
	shf.l.wrap.b32 	%r3731, %r3727, %r3728, 30;
	shf.l.wrap.b32 	%r3732, %r3728, %r3727, 30;
	mov.b64 	%rd5674, {%r3732, %r3731};
	xor.b64  	%rd5675, %rd5673, %rd5674;
	shf.l.wrap.b32 	%r3733, %r3727, %r3728, 25;
	shf.l.wrap.b32 	%r3734, %r3728, %r3727, 25;
	mov.b64 	%rd5676, {%r3734, %r3733};
	xor.b64  	%rd5677, %rd5675, %rd5676;
	and.b64  	%rd5678, %rd5646, %rd5609;
	or.b64  	%rd5679, %rd5646, %rd5609;
	and.b64  	%rd5680, %rd5679, %rd5572;
	or.b64  	%rd5681, %rd5680, %rd5678;
	add.s64 	%rd5682, %rd5681, %rd5677;
	add.s64 	%rd5683, %rd5682, %rd5671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3735,%dummy}, %rd5622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3736}, %rd5622;
	}
	shf.r.wrap.b32 	%r3737, %r3736, %r3735, 19;
	shf.r.wrap.b32 	%r3738, %r3735, %r3736, 19;
	mov.b64 	%rd5684, {%r3738, %r3737};
	shf.l.wrap.b32 	%r3739, %r3735, %r3736, 3;
	shf.l.wrap.b32 	%r3740, %r3736, %r3735, 3;
	mov.b64 	%rd5685, {%r3740, %r3739};
	xor.b64  	%rd5686, %rd5684, %rd5685;
	shr.u64 	%rd5687, %rd5622, 6;
	xor.b64  	%rd5688, %rd5686, %rd5687;
	shf.r.wrap.b32 	%r3741, %r3398, %r3397, 1;
	shf.r.wrap.b32 	%r3742, %r3397, %r3398, 1;
	mov.b64 	%rd5689, {%r3742, %r3741};
	shf.r.wrap.b32 	%r3743, %r3398, %r3397, 8;
	shf.r.wrap.b32 	%r3744, %r3397, %r3398, 8;
	mov.b64 	%rd5690, {%r3744, %r3743};
	xor.b64  	%rd5691, %rd5689, %rd5690;
	shr.u64 	%rd5692, %rd5141, 7;
	xor.b64  	%rd5693, %rd5691, %rd5692;
	add.s64 	%rd5694, %rd5693, %rd5104;
	add.s64 	%rd5695, %rd5694, %rd5437;
	add.s64 	%rd5696, %rd5695, %rd5688;
	add.s64 	%rd5697, %rd5696, %rd5561;
	xor.b64  	%rd5698, %rd5635, %rd5598;
	and.b64  	%rd5699, %rd5672, %rd5698;
	xor.b64  	%rd5700, %rd5699, %rd5598;
	add.s64 	%rd5701, %rd5697, %rd5700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3745,%dummy}, %rd5672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3746}, %rd5672;
	}
	shf.r.wrap.b32 	%r3747, %r3746, %r3745, 14;
	shf.r.wrap.b32 	%r3748, %r3745, %r3746, 14;
	mov.b64 	%rd5702, {%r3748, %r3747};
	shf.r.wrap.b32 	%r3749, %r3746, %r3745, 18;
	shf.r.wrap.b32 	%r3750, %r3745, %r3746, 18;
	mov.b64 	%rd5703, {%r3750, %r3749};
	xor.b64  	%rd5704, %rd5702, %rd5703;
	shf.l.wrap.b32 	%r3751, %r3745, %r3746, 23;
	shf.l.wrap.b32 	%r3752, %r3746, %r3745, 23;
	mov.b64 	%rd5705, {%r3752, %r3751};
	xor.b64  	%rd5706, %rd5704, %rd5705;
	add.s64 	%rd5707, %rd5701, %rd5706;
	add.s64 	%rd5708, %rd5707, -3880063495543823972;
	add.s64 	%rd5709, %rd5708, %rd5572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3753,%dummy}, %rd5683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3754}, %rd5683;
	}
	shf.r.wrap.b32 	%r3755, %r3754, %r3753, 28;
	shf.r.wrap.b32 	%r3756, %r3753, %r3754, 28;
	mov.b64 	%rd5710, {%r3756, %r3755};
	shf.l.wrap.b32 	%r3757, %r3753, %r3754, 30;
	shf.l.wrap.b32 	%r3758, %r3754, %r3753, 30;
	mov.b64 	%rd5711, {%r3758, %r3757};
	xor.b64  	%rd5712, %rd5710, %rd5711;
	shf.l.wrap.b32 	%r3759, %r3753, %r3754, 25;
	shf.l.wrap.b32 	%r3760, %r3754, %r3753, 25;
	mov.b64 	%rd5713, {%r3760, %r3759};
	xor.b64  	%rd5714, %rd5712, %rd5713;
	and.b64  	%rd5715, %rd5683, %rd5646;
	or.b64  	%rd5716, %rd5683, %rd5646;
	and.b64  	%rd5717, %rd5716, %rd5609;
	or.b64  	%rd5718, %rd5717, %rd5715;
	add.s64 	%rd5719, %rd5718, %rd5714;
	add.s64 	%rd5720, %rd5719, %rd5708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3761,%dummy}, %rd5659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3762}, %rd5659;
	}
	shf.r.wrap.b32 	%r3763, %r3762, %r3761, 19;
	shf.r.wrap.b32 	%r3764, %r3761, %r3762, 19;
	mov.b64 	%rd5721, {%r3764, %r3763};
	shf.l.wrap.b32 	%r3765, %r3761, %r3762, 3;
	shf.l.wrap.b32 	%r3766, %r3762, %r3761, 3;
	mov.b64 	%rd5722, {%r3766, %r3765};
	xor.b64  	%rd5723, %rd5721, %rd5722;
	shr.u64 	%rd5724, %rd5659, 6;
	xor.b64  	%rd5725, %rd5723, %rd5724;
	shf.r.wrap.b32 	%r3767, %r3424, %r3423, 1;
	shf.r.wrap.b32 	%r3768, %r3423, %r3424, 1;
	mov.b64 	%rd5726, {%r3768, %r3767};
	shf.r.wrap.b32 	%r3769, %r3424, %r3423, 8;
	shf.r.wrap.b32 	%r3770, %r3423, %r3424, 8;
	mov.b64 	%rd5727, {%r3770, %r3769};
	xor.b64  	%rd5728, %rd5726, %rd5727;
	shr.u64 	%rd5729, %rd5178, 7;
	xor.b64  	%rd5730, %rd5728, %rd5729;
	add.s64 	%rd5731, %rd5730, %rd5141;
	add.s64 	%rd5732, %rd5731, %rd5474;
	add.s64 	%rd5733, %rd5732, %rd5725;
	add.s64 	%rd5734, %rd5733, %rd5598;
	xor.b64  	%rd5735, %rd5672, %rd5635;
	and.b64  	%rd5736, %rd5709, %rd5735;
	xor.b64  	%rd5737, %rd5736, %rd5635;
	add.s64 	%rd5738, %rd5734, %rd5737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3771,%dummy}, %rd5709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3772}, %rd5709;
	}
	shf.r.wrap.b32 	%r3773, %r3772, %r3771, 14;
	shf.r.wrap.b32 	%r3774, %r3771, %r3772, 14;
	mov.b64 	%rd5739, {%r3774, %r3773};
	shf.r.wrap.b32 	%r3775, %r3772, %r3771, 18;
	shf.r.wrap.b32 	%r3776, %r3771, %r3772, 18;
	mov.b64 	%rd5740, {%r3776, %r3775};
	xor.b64  	%rd5741, %rd5739, %rd5740;
	shf.l.wrap.b32 	%r3777, %r3771, %r3772, 23;
	shf.l.wrap.b32 	%r3778, %r3772, %r3771, 23;
	mov.b64 	%rd5742, {%r3778, %r3777};
	xor.b64  	%rd5743, %rd5741, %rd5742;
	add.s64 	%rd5744, %rd5738, %rd5743;
	add.s64 	%rd5745, %rd5744, -3348786107499101689;
	add.s64 	%rd5746, %rd5745, %rd5609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3779,%dummy}, %rd5720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3780}, %rd5720;
	}
	shf.r.wrap.b32 	%r3781, %r3780, %r3779, 28;
	shf.r.wrap.b32 	%r3782, %r3779, %r3780, 28;
	mov.b64 	%rd5747, {%r3782, %r3781};
	shf.l.wrap.b32 	%r3783, %r3779, %r3780, 30;
	shf.l.wrap.b32 	%r3784, %r3780, %r3779, 30;
	mov.b64 	%rd5748, {%r3784, %r3783};
	xor.b64  	%rd5749, %rd5747, %rd5748;
	shf.l.wrap.b32 	%r3785, %r3779, %r3780, 25;
	shf.l.wrap.b32 	%r3786, %r3780, %r3779, 25;
	mov.b64 	%rd5750, {%r3786, %r3785};
	xor.b64  	%rd5751, %rd5749, %rd5750;
	and.b64  	%rd5752, %rd5720, %rd5683;
	or.b64  	%rd5753, %rd5720, %rd5683;
	and.b64  	%rd5754, %rd5753, %rd5646;
	or.b64  	%rd5755, %rd5754, %rd5752;
	add.s64 	%rd5756, %rd5755, %rd5751;
	add.s64 	%rd5757, %rd5756, %rd5745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3787,%dummy}, %rd5696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3788}, %rd5696;
	}
	shf.r.wrap.b32 	%r3789, %r3788, %r3787, 19;
	shf.r.wrap.b32 	%r3790, %r3787, %r3788, 19;
	mov.b64 	%rd5758, {%r3790, %r3789};
	shf.l.wrap.b32 	%r3791, %r3787, %r3788, 3;
	shf.l.wrap.b32 	%r3792, %r3788, %r3787, 3;
	mov.b64 	%rd5759, {%r3792, %r3791};
	xor.b64  	%rd5760, %rd5758, %rd5759;
	shr.u64 	%rd5761, %rd5696, 6;
	xor.b64  	%rd5762, %rd5760, %rd5761;
	shf.r.wrap.b32 	%r3793, %r3450, %r3449, 1;
	shf.r.wrap.b32 	%r3794, %r3449, %r3450, 1;
	mov.b64 	%rd5763, {%r3794, %r3793};
	shf.r.wrap.b32 	%r3795, %r3450, %r3449, 8;
	shf.r.wrap.b32 	%r3796, %r3449, %r3450, 8;
	mov.b64 	%rd5764, {%r3796, %r3795};
	xor.b64  	%rd5765, %rd5763, %rd5764;
	shr.u64 	%rd5766, %rd5215, 7;
	xor.b64  	%rd5767, %rd5765, %rd5766;
	add.s64 	%rd5768, %rd5767, %rd5178;
	add.s64 	%rd5769, %rd5768, %rd5511;
	add.s64 	%rd5770, %rd5769, %rd5762;
	add.s64 	%rd5771, %rd5770, %rd5635;
	xor.b64  	%rd5772, %rd5709, %rd5672;
	and.b64  	%rd5773, %rd5746, %rd5772;
	xor.b64  	%rd5774, %rd5773, %rd5672;
	add.s64 	%rd5775, %rd5771, %rd5774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3797,%dummy}, %rd5746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3798}, %rd5746;
	}
	shf.r.wrap.b32 	%r3799, %r3798, %r3797, 14;
	shf.r.wrap.b32 	%r3800, %r3797, %r3798, 14;
	mov.b64 	%rd5776, {%r3800, %r3799};
	shf.r.wrap.b32 	%r3801, %r3798, %r3797, 18;
	shf.r.wrap.b32 	%r3802, %r3797, %r3798, 18;
	mov.b64 	%rd5777, {%r3802, %r3801};
	xor.b64  	%rd5778, %rd5776, %rd5777;
	shf.l.wrap.b32 	%r3803, %r3797, %r3798, 23;
	shf.l.wrap.b32 	%r3804, %r3798, %r3797, 23;
	mov.b64 	%rd5779, {%r3804, %r3803};
	xor.b64  	%rd5780, %rd5778, %rd5779;
	add.s64 	%rd5781, %rd5775, %rd5780;
	add.s64 	%rd5782, %rd5781, -1523767162380948706;
	add.s64 	%rd5783, %rd5782, %rd5646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3805,%dummy}, %rd5757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3806}, %rd5757;
	}
	shf.r.wrap.b32 	%r3807, %r3806, %r3805, 28;
	shf.r.wrap.b32 	%r3808, %r3805, %r3806, 28;
	mov.b64 	%rd5784, {%r3808, %r3807};
	shf.l.wrap.b32 	%r3809, %r3805, %r3806, 30;
	shf.l.wrap.b32 	%r3810, %r3806, %r3805, 30;
	mov.b64 	%rd5785, {%r3810, %r3809};
	xor.b64  	%rd5786, %rd5784, %rd5785;
	shf.l.wrap.b32 	%r3811, %r3805, %r3806, 25;
	shf.l.wrap.b32 	%r3812, %r3806, %r3805, 25;
	mov.b64 	%rd5787, {%r3812, %r3811};
	xor.b64  	%rd5788, %rd5786, %rd5787;
	and.b64  	%rd5789, %rd5757, %rd5720;
	or.b64  	%rd5790, %rd5757, %rd5720;
	and.b64  	%rd5791, %rd5790, %rd5683;
	or.b64  	%rd5792, %rd5791, %rd5789;
	add.s64 	%rd5793, %rd5792, %rd5788;
	add.s64 	%rd5794, %rd5793, %rd5782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3813,%dummy}, %rd5733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3814}, %rd5733;
	}
	shf.r.wrap.b32 	%r3815, %r3814, %r3813, 19;
	shf.r.wrap.b32 	%r3816, %r3813, %r3814, 19;
	mov.b64 	%rd5795, {%r3816, %r3815};
	shf.l.wrap.b32 	%r3817, %r3813, %r3814, 3;
	shf.l.wrap.b32 	%r3818, %r3814, %r3813, 3;
	mov.b64 	%rd5796, {%r3818, %r3817};
	xor.b64  	%rd5797, %rd5795, %rd5796;
	shr.u64 	%rd5798, %rd5733, 6;
	xor.b64  	%rd5799, %rd5797, %rd5798;
	shf.r.wrap.b32 	%r3819, %r3476, %r3475, 1;
	shf.r.wrap.b32 	%r3820, %r3475, %r3476, 1;
	mov.b64 	%rd5800, {%r3820, %r3819};
	shf.r.wrap.b32 	%r3821, %r3476, %r3475, 8;
	shf.r.wrap.b32 	%r3822, %r3475, %r3476, 8;
	mov.b64 	%rd5801, {%r3822, %r3821};
	xor.b64  	%rd5802, %rd5800, %rd5801;
	shr.u64 	%rd5803, %rd5252, 7;
	xor.b64  	%rd5804, %rd5802, %rd5803;
	add.s64 	%rd5805, %rd5804, %rd5215;
	add.s64 	%rd5806, %rd5805, %rd5548;
	add.s64 	%rd5807, %rd5806, %rd5799;
	add.s64 	%rd5808, %rd5807, %rd5672;
	xor.b64  	%rd5809, %rd5746, %rd5709;
	and.b64  	%rd5810, %rd5783, %rd5809;
	xor.b64  	%rd5811, %rd5810, %rd5709;
	add.s64 	%rd5812, %rd5808, %rd5811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3823,%dummy}, %rd5783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3824}, %rd5783;
	}
	shf.r.wrap.b32 	%r3825, %r3824, %r3823, 14;
	shf.r.wrap.b32 	%r3826, %r3823, %r3824, 14;
	mov.b64 	%rd5813, {%r3826, %r3825};
	shf.r.wrap.b32 	%r3827, %r3824, %r3823, 18;
	shf.r.wrap.b32 	%r3828, %r3823, %r3824, 18;
	mov.b64 	%rd5814, {%r3828, %r3827};
	xor.b64  	%rd5815, %rd5813, %rd5814;
	shf.l.wrap.b32 	%r3829, %r3823, %r3824, 23;
	shf.l.wrap.b32 	%r3830, %r3824, %r3823, 23;
	mov.b64 	%rd5816, {%r3830, %r3829};
	xor.b64  	%rd5817, %rd5815, %rd5816;
	add.s64 	%rd5818, %rd5812, %rd5817;
	add.s64 	%rd5819, %rd5818, -757361751448694408;
	add.s64 	%rd5820, %rd5819, %rd5683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3831,%dummy}, %rd5794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3832}, %rd5794;
	}
	shf.r.wrap.b32 	%r3833, %r3832, %r3831, 28;
	shf.r.wrap.b32 	%r3834, %r3831, %r3832, 28;
	mov.b64 	%rd5821, {%r3834, %r3833};
	shf.l.wrap.b32 	%r3835, %r3831, %r3832, 30;
	shf.l.wrap.b32 	%r3836, %r3832, %r3831, 30;
	mov.b64 	%rd5822, {%r3836, %r3835};
	xor.b64  	%rd5823, %rd5821, %rd5822;
	shf.l.wrap.b32 	%r3837, %r3831, %r3832, 25;
	shf.l.wrap.b32 	%r3838, %r3832, %r3831, 25;
	mov.b64 	%rd5824, {%r3838, %r3837};
	xor.b64  	%rd5825, %rd5823, %rd5824;
	and.b64  	%rd5826, %rd5794, %rd5757;
	or.b64  	%rd5827, %rd5794, %rd5757;
	and.b64  	%rd5828, %rd5827, %rd5720;
	or.b64  	%rd5829, %rd5828, %rd5826;
	add.s64 	%rd5830, %rd5829, %rd5825;
	add.s64 	%rd5831, %rd5830, %rd5819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3839,%dummy}, %rd5770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3840}, %rd5770;
	}
	shf.r.wrap.b32 	%r3841, %r3840, %r3839, 19;
	shf.r.wrap.b32 	%r3842, %r3839, %r3840, 19;
	mov.b64 	%rd5832, {%r3842, %r3841};
	shf.l.wrap.b32 	%r3843, %r3839, %r3840, 3;
	shf.l.wrap.b32 	%r3844, %r3840, %r3839, 3;
	mov.b64 	%rd5833, {%r3844, %r3843};
	xor.b64  	%rd5834, %rd5832, %rd5833;
	shr.u64 	%rd5835, %rd5770, 6;
	xor.b64  	%rd5836, %rd5834, %rd5835;
	shf.r.wrap.b32 	%r3845, %r3502, %r3501, 1;
	shf.r.wrap.b32 	%r3846, %r3501, %r3502, 1;
	mov.b64 	%rd5837, {%r3846, %r3845};
	shf.r.wrap.b32 	%r3847, %r3502, %r3501, 8;
	shf.r.wrap.b32 	%r3848, %r3501, %r3502, 8;
	mov.b64 	%rd5838, {%r3848, %r3847};
	xor.b64  	%rd5839, %rd5837, %rd5838;
	shr.u64 	%rd5840, %rd5289, 7;
	xor.b64  	%rd5841, %rd5839, %rd5840;
	add.s64 	%rd5842, %rd5841, %rd5252;
	add.s64 	%rd5843, %rd5842, %rd5585;
	add.s64 	%rd5844, %rd5843, %rd5836;
	add.s64 	%rd5845, %rd5844, %rd5709;
	xor.b64  	%rd5846, %rd5783, %rd5746;
	and.b64  	%rd5847, %rd5820, %rd5846;
	xor.b64  	%rd5848, %rd5847, %rd5746;
	add.s64 	%rd5849, %rd5845, %rd5848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3849,%dummy}, %rd5820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3850}, %rd5820;
	}
	shf.r.wrap.b32 	%r3851, %r3850, %r3849, 14;
	shf.r.wrap.b32 	%r3852, %r3849, %r3850, 14;
	mov.b64 	%rd5850, {%r3852, %r3851};
	shf.r.wrap.b32 	%r3853, %r3850, %r3849, 18;
	shf.r.wrap.b32 	%r3854, %r3849, %r3850, 18;
	mov.b64 	%rd5851, {%r3854, %r3853};
	xor.b64  	%rd5852, %rd5850, %rd5851;
	shf.l.wrap.b32 	%r3855, %r3849, %r3850, 23;
	shf.l.wrap.b32 	%r3856, %r3850, %r3849, 23;
	mov.b64 	%rd5853, {%r3856, %r3855};
	xor.b64  	%rd5854, %rd5852, %rd5853;
	add.s64 	%rd5855, %rd5849, %rd5854;
	add.s64 	%rd5856, %rd5855, 500013540394364858;
	add.s64 	%rd5857, %rd5856, %rd5720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3857,%dummy}, %rd5831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3858}, %rd5831;
	}
	shf.r.wrap.b32 	%r3859, %r3858, %r3857, 28;
	shf.r.wrap.b32 	%r3860, %r3857, %r3858, 28;
	mov.b64 	%rd5858, {%r3860, %r3859};
	shf.l.wrap.b32 	%r3861, %r3857, %r3858, 30;
	shf.l.wrap.b32 	%r3862, %r3858, %r3857, 30;
	mov.b64 	%rd5859, {%r3862, %r3861};
	xor.b64  	%rd5860, %rd5858, %rd5859;
	shf.l.wrap.b32 	%r3863, %r3857, %r3858, 25;
	shf.l.wrap.b32 	%r3864, %r3858, %r3857, 25;
	mov.b64 	%rd5861, {%r3864, %r3863};
	xor.b64  	%rd5862, %rd5860, %rd5861;
	and.b64  	%rd5863, %rd5831, %rd5794;
	or.b64  	%rd5864, %rd5831, %rd5794;
	and.b64  	%rd5865, %rd5864, %rd5757;
	or.b64  	%rd5866, %rd5865, %rd5863;
	add.s64 	%rd5867, %rd5866, %rd5862;
	add.s64 	%rd5868, %rd5867, %rd5856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3865,%dummy}, %rd5807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3866}, %rd5807;
	}
	shf.r.wrap.b32 	%r3867, %r3866, %r3865, 19;
	shf.r.wrap.b32 	%r3868, %r3865, %r3866, 19;
	mov.b64 	%rd5869, {%r3868, %r3867};
	shf.l.wrap.b32 	%r3869, %r3865, %r3866, 3;
	shf.l.wrap.b32 	%r3870, %r3866, %r3865, 3;
	mov.b64 	%rd5870, {%r3870, %r3869};
	xor.b64  	%rd5871, %rd5869, %rd5870;
	shr.u64 	%rd5872, %rd5807, 6;
	xor.b64  	%rd5873, %rd5871, %rd5872;
	shf.r.wrap.b32 	%r3871, %r3528, %r3527, 1;
	shf.r.wrap.b32 	%r3872, %r3527, %r3528, 1;
	mov.b64 	%rd5874, {%r3872, %r3871};
	shf.r.wrap.b32 	%r3873, %r3528, %r3527, 8;
	shf.r.wrap.b32 	%r3874, %r3527, %r3528, 8;
	mov.b64 	%rd5875, {%r3874, %r3873};
	xor.b64  	%rd5876, %rd5874, %rd5875;
	shr.u64 	%rd5877, %rd5326, 7;
	xor.b64  	%rd5878, %rd5876, %rd5877;
	add.s64 	%rd5879, %rd5878, %rd5289;
	add.s64 	%rd5880, %rd5879, %rd5622;
	add.s64 	%rd5881, %rd5880, %rd5873;
	add.s64 	%rd5882, %rd5881, %rd5746;
	xor.b64  	%rd5883, %rd5820, %rd5783;
	and.b64  	%rd5884, %rd5857, %rd5883;
	xor.b64  	%rd5885, %rd5884, %rd5783;
	add.s64 	%rd5886, %rd5882, %rd5885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3875,%dummy}, %rd5857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3876}, %rd5857;
	}
	shf.r.wrap.b32 	%r3877, %r3876, %r3875, 14;
	shf.r.wrap.b32 	%r3878, %r3875, %r3876, 14;
	mov.b64 	%rd5887, {%r3878, %r3877};
	shf.r.wrap.b32 	%r3879, %r3876, %r3875, 18;
	shf.r.wrap.b32 	%r3880, %r3875, %r3876, 18;
	mov.b64 	%rd5888, {%r3880, %r3879};
	xor.b64  	%rd5889, %rd5887, %rd5888;
	shf.l.wrap.b32 	%r3881, %r3875, %r3876, 23;
	shf.l.wrap.b32 	%r3882, %r3876, %r3875, 23;
	mov.b64 	%rd5890, {%r3882, %r3881};
	xor.b64  	%rd5891, %rd5889, %rd5890;
	add.s64 	%rd5892, %rd5886, %rd5891;
	add.s64 	%rd5893, %rd5892, 748580250866718886;
	add.s64 	%rd5894, %rd5893, %rd5757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3883,%dummy}, %rd5868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3884}, %rd5868;
	}
	shf.r.wrap.b32 	%r3885, %r3884, %r3883, 28;
	shf.r.wrap.b32 	%r3886, %r3883, %r3884, 28;
	mov.b64 	%rd5895, {%r3886, %r3885};
	shf.l.wrap.b32 	%r3887, %r3883, %r3884, 30;
	shf.l.wrap.b32 	%r3888, %r3884, %r3883, 30;
	mov.b64 	%rd5896, {%r3888, %r3887};
	xor.b64  	%rd5897, %rd5895, %rd5896;
	shf.l.wrap.b32 	%r3889, %r3883, %r3884, 25;
	shf.l.wrap.b32 	%r3890, %r3884, %r3883, 25;
	mov.b64 	%rd5898, {%r3890, %r3889};
	xor.b64  	%rd5899, %rd5897, %rd5898;
	and.b64  	%rd5900, %rd5868, %rd5831;
	or.b64  	%rd5901, %rd5868, %rd5831;
	and.b64  	%rd5902, %rd5901, %rd5794;
	or.b64  	%rd5903, %rd5902, %rd5900;
	add.s64 	%rd5904, %rd5903, %rd5899;
	add.s64 	%rd5905, %rd5904, %rd5893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3891,%dummy}, %rd5844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3892}, %rd5844;
	}
	shf.r.wrap.b32 	%r3893, %r3892, %r3891, 19;
	shf.r.wrap.b32 	%r3894, %r3891, %r3892, 19;
	mov.b64 	%rd5906, {%r3894, %r3893};
	shf.l.wrap.b32 	%r3895, %r3891, %r3892, 3;
	shf.l.wrap.b32 	%r3896, %r3892, %r3891, 3;
	mov.b64 	%rd5907, {%r3896, %r3895};
	xor.b64  	%rd5908, %rd5906, %rd5907;
	shr.u64 	%rd5909, %rd5844, 6;
	xor.b64  	%rd5910, %rd5908, %rd5909;
	shf.r.wrap.b32 	%r3897, %r3554, %r3553, 1;
	shf.r.wrap.b32 	%r3898, %r3553, %r3554, 1;
	mov.b64 	%rd5911, {%r3898, %r3897};
	shf.r.wrap.b32 	%r3899, %r3554, %r3553, 8;
	shf.r.wrap.b32 	%r3900, %r3553, %r3554, 8;
	mov.b64 	%rd5912, {%r3900, %r3899};
	xor.b64  	%rd5913, %rd5911, %rd5912;
	shr.u64 	%rd5914, %rd5363, 7;
	xor.b64  	%rd5915, %rd5913, %rd5914;
	add.s64 	%rd5916, %rd5915, %rd5326;
	add.s64 	%rd5917, %rd5916, %rd5659;
	add.s64 	%rd5918, %rd5917, %rd5910;
	add.s64 	%rd5919, %rd5918, %rd5783;
	xor.b64  	%rd5920, %rd5857, %rd5820;
	and.b64  	%rd5921, %rd5894, %rd5920;
	xor.b64  	%rd5922, %rd5921, %rd5820;
	add.s64 	%rd5923, %rd5919, %rd5922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3901,%dummy}, %rd5894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3902}, %rd5894;
	}
	shf.r.wrap.b32 	%r3903, %r3902, %r3901, 14;
	shf.r.wrap.b32 	%r3904, %r3901, %r3902, 14;
	mov.b64 	%rd5924, {%r3904, %r3903};
	shf.r.wrap.b32 	%r3905, %r3902, %r3901, 18;
	shf.r.wrap.b32 	%r3906, %r3901, %r3902, 18;
	mov.b64 	%rd5925, {%r3906, %r3905};
	xor.b64  	%rd5926, %rd5924, %rd5925;
	shf.l.wrap.b32 	%r3907, %r3901, %r3902, 23;
	shf.l.wrap.b32 	%r3908, %r3902, %r3901, 23;
	mov.b64 	%rd5927, {%r3908, %r3907};
	xor.b64  	%rd5928, %rd5926, %rd5927;
	add.s64 	%rd5929, %rd5923, %rd5928;
	add.s64 	%rd5930, %rd5929, 1242879168328830382;
	add.s64 	%rd5931, %rd5930, %rd5794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3909,%dummy}, %rd5905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3910}, %rd5905;
	}
	shf.r.wrap.b32 	%r3911, %r3910, %r3909, 28;
	shf.r.wrap.b32 	%r3912, %r3909, %r3910, 28;
	mov.b64 	%rd5932, {%r3912, %r3911};
	shf.l.wrap.b32 	%r3913, %r3909, %r3910, 30;
	shf.l.wrap.b32 	%r3914, %r3910, %r3909, 30;
	mov.b64 	%rd5933, {%r3914, %r3913};
	xor.b64  	%rd5934, %rd5932, %rd5933;
	shf.l.wrap.b32 	%r3915, %r3909, %r3910, 25;
	shf.l.wrap.b32 	%r3916, %r3910, %r3909, 25;
	mov.b64 	%rd5935, {%r3916, %r3915};
	xor.b64  	%rd5936, %rd5934, %rd5935;
	and.b64  	%rd5937, %rd5905, %rd5868;
	or.b64  	%rd5938, %rd5905, %rd5868;
	and.b64  	%rd5939, %rd5938, %rd5831;
	or.b64  	%rd5940, %rd5939, %rd5937;
	add.s64 	%rd5941, %rd5940, %rd5936;
	add.s64 	%rd5942, %rd5941, %rd5930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3917,%dummy}, %rd5881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3918}, %rd5881;
	}
	shf.r.wrap.b32 	%r3919, %r3918, %r3917, 19;
	shf.r.wrap.b32 	%r3920, %r3917, %r3918, 19;
	mov.b64 	%rd5943, {%r3920, %r3919};
	shf.l.wrap.b32 	%r3921, %r3917, %r3918, 3;
	shf.l.wrap.b32 	%r3922, %r3918, %r3917, 3;
	mov.b64 	%rd5944, {%r3922, %r3921};
	xor.b64  	%rd5945, %rd5943, %rd5944;
	shr.u64 	%rd5946, %rd5881, 6;
	xor.b64  	%rd5947, %rd5945, %rd5946;
	shf.r.wrap.b32 	%r3923, %r3580, %r3579, 1;
	shf.r.wrap.b32 	%r3924, %r3579, %r3580, 1;
	mov.b64 	%rd5948, {%r3924, %r3923};
	shf.r.wrap.b32 	%r3925, %r3580, %r3579, 8;
	shf.r.wrap.b32 	%r3926, %r3579, %r3580, 8;
	mov.b64 	%rd5949, {%r3926, %r3925};
	xor.b64  	%rd5950, %rd5948, %rd5949;
	shr.u64 	%rd5951, %rd5400, 7;
	xor.b64  	%rd5952, %rd5950, %rd5951;
	add.s64 	%rd5953, %rd5952, %rd5363;
	add.s64 	%rd5954, %rd5953, %rd5696;
	add.s64 	%rd5955, %rd5954, %rd5947;
	add.s64 	%rd5956, %rd5955, %rd5820;
	xor.b64  	%rd5957, %rd5894, %rd5857;
	and.b64  	%rd5958, %rd5931, %rd5957;
	xor.b64  	%rd5959, %rd5958, %rd5857;
	add.s64 	%rd5960, %rd5956, %rd5959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3927,%dummy}, %rd5931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3928}, %rd5931;
	}
	shf.r.wrap.b32 	%r3929, %r3928, %r3927, 14;
	shf.r.wrap.b32 	%r3930, %r3927, %r3928, 14;
	mov.b64 	%rd5961, {%r3930, %r3929};
	shf.r.wrap.b32 	%r3931, %r3928, %r3927, 18;
	shf.r.wrap.b32 	%r3932, %r3927, %r3928, 18;
	mov.b64 	%rd5962, {%r3932, %r3931};
	xor.b64  	%rd5963, %rd5961, %rd5962;
	shf.l.wrap.b32 	%r3933, %r3927, %r3928, 23;
	shf.l.wrap.b32 	%r3934, %r3928, %r3927, 23;
	mov.b64 	%rd5964, {%r3934, %r3933};
	xor.b64  	%rd5965, %rd5963, %rd5964;
	add.s64 	%rd5966, %rd5960, %rd5965;
	add.s64 	%rd5967, %rd5966, 1977374033974150939;
	add.s64 	%rd5968, %rd5967, %rd5831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3935,%dummy}, %rd5942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3936}, %rd5942;
	}
	shf.r.wrap.b32 	%r3937, %r3936, %r3935, 28;
	shf.r.wrap.b32 	%r3938, %r3935, %r3936, 28;
	mov.b64 	%rd5969, {%r3938, %r3937};
	shf.l.wrap.b32 	%r3939, %r3935, %r3936, 30;
	shf.l.wrap.b32 	%r3940, %r3936, %r3935, 30;
	mov.b64 	%rd5970, {%r3940, %r3939};
	xor.b64  	%rd5971, %rd5969, %rd5970;
	shf.l.wrap.b32 	%r3941, %r3935, %r3936, 25;
	shf.l.wrap.b32 	%r3942, %r3936, %r3935, 25;
	mov.b64 	%rd5972, {%r3942, %r3941};
	xor.b64  	%rd5973, %rd5971, %rd5972;
	and.b64  	%rd5974, %rd5942, %rd5905;
	or.b64  	%rd5975, %rd5942, %rd5905;
	and.b64  	%rd5976, %rd5975, %rd5868;
	or.b64  	%rd5977, %rd5976, %rd5974;
	add.s64 	%rd5978, %rd5977, %rd5973;
	add.s64 	%rd5979, %rd5978, %rd5967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3943,%dummy}, %rd5918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3944}, %rd5918;
	}
	shf.r.wrap.b32 	%r3945, %r3944, %r3943, 19;
	shf.r.wrap.b32 	%r3946, %r3943, %r3944, 19;
	mov.b64 	%rd5980, {%r3946, %r3945};
	shf.l.wrap.b32 	%r3947, %r3943, %r3944, 3;
	shf.l.wrap.b32 	%r3948, %r3944, %r3943, 3;
	mov.b64 	%rd5981, {%r3948, %r3947};
	xor.b64  	%rd5982, %rd5980, %rd5981;
	shr.u64 	%rd5983, %rd5918, 6;
	xor.b64  	%rd5984, %rd5982, %rd5983;
	shf.r.wrap.b32 	%r3949, %r3606, %r3605, 1;
	shf.r.wrap.b32 	%r3950, %r3605, %r3606, 1;
	mov.b64 	%rd5985, {%r3950, %r3949};
	shf.r.wrap.b32 	%r3951, %r3606, %r3605, 8;
	shf.r.wrap.b32 	%r3952, %r3605, %r3606, 8;
	mov.b64 	%rd5986, {%r3952, %r3951};
	xor.b64  	%rd5987, %rd5985, %rd5986;
	shr.u64 	%rd5988, %rd5437, 7;
	xor.b64  	%rd5989, %rd5987, %rd5988;
	add.s64 	%rd5990, %rd5989, %rd5400;
	add.s64 	%rd5991, %rd5990, %rd5733;
	add.s64 	%rd5992, %rd5991, %rd5984;
	add.s64 	%rd5993, %rd5992, %rd5857;
	xor.b64  	%rd5994, %rd5931, %rd5894;
	and.b64  	%rd5995, %rd5968, %rd5994;
	xor.b64  	%rd5996, %rd5995, %rd5894;
	add.s64 	%rd5997, %rd5993, %rd5996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3953,%dummy}, %rd5968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3954}, %rd5968;
	}
	shf.r.wrap.b32 	%r3955, %r3954, %r3953, 14;
	shf.r.wrap.b32 	%r3956, %r3953, %r3954, 14;
	mov.b64 	%rd5998, {%r3956, %r3955};
	shf.r.wrap.b32 	%r3957, %r3954, %r3953, 18;
	shf.r.wrap.b32 	%r3958, %r3953, %r3954, 18;
	mov.b64 	%rd5999, {%r3958, %r3957};
	xor.b64  	%rd6000, %rd5998, %rd5999;
	shf.l.wrap.b32 	%r3959, %r3953, %r3954, 23;
	shf.l.wrap.b32 	%r3960, %r3954, %r3953, 23;
	mov.b64 	%rd6001, {%r3960, %r3959};
	xor.b64  	%rd6002, %rd6000, %rd6001;
	add.s64 	%rd6003, %rd5997, %rd6002;
	add.s64 	%rd6004, %rd6003, 2944078676154940804;
	add.s64 	%rd6005, %rd6004, %rd5868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3961,%dummy}, %rd5979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3962}, %rd5979;
	}
	shf.r.wrap.b32 	%r3963, %r3962, %r3961, 28;
	shf.r.wrap.b32 	%r3964, %r3961, %r3962, 28;
	mov.b64 	%rd6006, {%r3964, %r3963};
	shf.l.wrap.b32 	%r3965, %r3961, %r3962, 30;
	shf.l.wrap.b32 	%r3966, %r3962, %r3961, 30;
	mov.b64 	%rd6007, {%r3966, %r3965};
	xor.b64  	%rd6008, %rd6006, %rd6007;
	shf.l.wrap.b32 	%r3967, %r3961, %r3962, 25;
	shf.l.wrap.b32 	%r3968, %r3962, %r3961, 25;
	mov.b64 	%rd6009, {%r3968, %r3967};
	xor.b64  	%rd6010, %rd6008, %rd6009;
	and.b64  	%rd6011, %rd5979, %rd5942;
	or.b64  	%rd6012, %rd5979, %rd5942;
	and.b64  	%rd6013, %rd6012, %rd5905;
	or.b64  	%rd6014, %rd6013, %rd6011;
	add.s64 	%rd6015, %rd6014, %rd6010;
	add.s64 	%rd6016, %rd6015, %rd6004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3969,%dummy}, %rd5955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3970}, %rd5955;
	}
	shf.r.wrap.b32 	%r3971, %r3970, %r3969, 19;
	shf.r.wrap.b32 	%r3972, %r3969, %r3970, 19;
	mov.b64 	%rd6017, {%r3972, %r3971};
	shf.l.wrap.b32 	%r3973, %r3969, %r3970, 3;
	shf.l.wrap.b32 	%r3974, %r3970, %r3969, 3;
	mov.b64 	%rd6018, {%r3974, %r3973};
	xor.b64  	%rd6019, %rd6017, %rd6018;
	shr.u64 	%rd6020, %rd5955, 6;
	xor.b64  	%rd6021, %rd6019, %rd6020;
	shf.r.wrap.b32 	%r3975, %r3632, %r3631, 1;
	shf.r.wrap.b32 	%r3976, %r3631, %r3632, 1;
	mov.b64 	%rd6022, {%r3976, %r3975};
	shf.r.wrap.b32 	%r3977, %r3632, %r3631, 8;
	shf.r.wrap.b32 	%r3978, %r3631, %r3632, 8;
	mov.b64 	%rd6023, {%r3978, %r3977};
	xor.b64  	%rd6024, %rd6022, %rd6023;
	shr.u64 	%rd6025, %rd5474, 7;
	xor.b64  	%rd6026, %rd6024, %rd6025;
	add.s64 	%rd6027, %rd6026, %rd5437;
	add.s64 	%rd6028, %rd6027, %rd5770;
	add.s64 	%rd6029, %rd6028, %rd6021;
	add.s64 	%rd6030, %rd6029, %rd5894;
	xor.b64  	%rd6031, %rd5968, %rd5931;
	and.b64  	%rd6032, %rd6005, %rd6031;
	xor.b64  	%rd6033, %rd6032, %rd5931;
	add.s64 	%rd6034, %rd6030, %rd6033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3979,%dummy}, %rd6005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3980}, %rd6005;
	}
	shf.r.wrap.b32 	%r3981, %r3980, %r3979, 14;
	shf.r.wrap.b32 	%r3982, %r3979, %r3980, 14;
	mov.b64 	%rd6035, {%r3982, %r3981};
	shf.r.wrap.b32 	%r3983, %r3980, %r3979, 18;
	shf.r.wrap.b32 	%r3984, %r3979, %r3980, 18;
	mov.b64 	%rd6036, {%r3984, %r3983};
	xor.b64  	%rd6037, %rd6035, %rd6036;
	shf.l.wrap.b32 	%r3985, %r3979, %r3980, 23;
	shf.l.wrap.b32 	%r3986, %r3980, %r3979, 23;
	mov.b64 	%rd6038, {%r3986, %r3985};
	xor.b64  	%rd6039, %rd6037, %rd6038;
	add.s64 	%rd6040, %rd6034, %rd6039;
	add.s64 	%rd6041, %rd6040, 3659926193048069267;
	add.s64 	%rd6042, %rd6041, %rd5905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3987,%dummy}, %rd6016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3988}, %rd6016;
	}
	shf.r.wrap.b32 	%r3989, %r3988, %r3987, 28;
	shf.r.wrap.b32 	%r3990, %r3987, %r3988, 28;
	mov.b64 	%rd6043, {%r3990, %r3989};
	shf.l.wrap.b32 	%r3991, %r3987, %r3988, 30;
	shf.l.wrap.b32 	%r3992, %r3988, %r3987, 30;
	mov.b64 	%rd6044, {%r3992, %r3991};
	xor.b64  	%rd6045, %rd6043, %rd6044;
	shf.l.wrap.b32 	%r3993, %r3987, %r3988, 25;
	shf.l.wrap.b32 	%r3994, %r3988, %r3987, 25;
	mov.b64 	%rd6046, {%r3994, %r3993};
	xor.b64  	%rd6047, %rd6045, %rd6046;
	and.b64  	%rd6048, %rd6016, %rd5979;
	or.b64  	%rd6049, %rd6016, %rd5979;
	and.b64  	%rd6050, %rd6049, %rd5942;
	or.b64  	%rd6051, %rd6050, %rd6048;
	add.s64 	%rd6052, %rd6051, %rd6047;
	add.s64 	%rd6053, %rd6052, %rd6041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3995,%dummy}, %rd5992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3996}, %rd5992;
	}
	shf.r.wrap.b32 	%r3997, %r3996, %r3995, 19;
	shf.r.wrap.b32 	%r3998, %r3995, %r3996, 19;
	mov.b64 	%rd6054, {%r3998, %r3997};
	shf.l.wrap.b32 	%r3999, %r3995, %r3996, 3;
	shf.l.wrap.b32 	%r4000, %r3996, %r3995, 3;
	mov.b64 	%rd6055, {%r4000, %r3999};
	xor.b64  	%rd6056, %rd6054, %rd6055;
	shr.u64 	%rd6057, %rd5992, 6;
	xor.b64  	%rd6058, %rd6056, %rd6057;
	shf.r.wrap.b32 	%r4001, %r3658, %r3657, 1;
	shf.r.wrap.b32 	%r4002, %r3657, %r3658, 1;
	mov.b64 	%rd6059, {%r4002, %r4001};
	shf.r.wrap.b32 	%r4003, %r3658, %r3657, 8;
	shf.r.wrap.b32 	%r4004, %r3657, %r3658, 8;
	mov.b64 	%rd6060, {%r4004, %r4003};
	xor.b64  	%rd6061, %rd6059, %rd6060;
	shr.u64 	%rd6062, %rd5511, 7;
	xor.b64  	%rd6063, %rd6061, %rd6062;
	add.s64 	%rd6064, %rd6063, %rd5474;
	add.s64 	%rd6065, %rd6064, %rd5807;
	add.s64 	%rd6066, %rd6065, %rd6058;
	add.s64 	%rd6067, %rd6066, %rd5931;
	xor.b64  	%rd6068, %rd6005, %rd5968;
	and.b64  	%rd6069, %rd6042, %rd6068;
	xor.b64  	%rd6070, %rd6069, %rd5968;
	add.s64 	%rd6071, %rd6067, %rd6070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4005,%dummy}, %rd6042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4006}, %rd6042;
	}
	shf.r.wrap.b32 	%r4007, %r4006, %r4005, 14;
	shf.r.wrap.b32 	%r4008, %r4005, %r4006, 14;
	mov.b64 	%rd6072, {%r4008, %r4007};
	shf.r.wrap.b32 	%r4009, %r4006, %r4005, 18;
	shf.r.wrap.b32 	%r4010, %r4005, %r4006, 18;
	mov.b64 	%rd6073, {%r4010, %r4009};
	xor.b64  	%rd6074, %rd6072, %rd6073;
	shf.l.wrap.b32 	%r4011, %r4005, %r4006, 23;
	shf.l.wrap.b32 	%r4012, %r4006, %r4005, 23;
	mov.b64 	%rd6075, {%r4012, %r4011};
	xor.b64  	%rd6076, %rd6074, %rd6075;
	add.s64 	%rd6077, %rd6071, %rd6076;
	add.s64 	%rd6078, %rd6077, 4368137639120453308;
	add.s64 	%rd6079, %rd6078, %rd5942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4013,%dummy}, %rd6053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4014}, %rd6053;
	}
	shf.r.wrap.b32 	%r4015, %r4014, %r4013, 28;
	shf.r.wrap.b32 	%r4016, %r4013, %r4014, 28;
	mov.b64 	%rd6080, {%r4016, %r4015};
	shf.l.wrap.b32 	%r4017, %r4013, %r4014, 30;
	shf.l.wrap.b32 	%r4018, %r4014, %r4013, 30;
	mov.b64 	%rd6081, {%r4018, %r4017};
	xor.b64  	%rd6082, %rd6080, %rd6081;
	shf.l.wrap.b32 	%r4019, %r4013, %r4014, 25;
	shf.l.wrap.b32 	%r4020, %r4014, %r4013, 25;
	mov.b64 	%rd6083, {%r4020, %r4019};
	xor.b64  	%rd6084, %rd6082, %rd6083;
	and.b64  	%rd6085, %rd6053, %rd6016;
	or.b64  	%rd6086, %rd6053, %rd6016;
	and.b64  	%rd6087, %rd6086, %rd5979;
	or.b64  	%rd6088, %rd6087, %rd6085;
	add.s64 	%rd6089, %rd6088, %rd6084;
	add.s64 	%rd6090, %rd6089, %rd6078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4021,%dummy}, %rd6029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4022}, %rd6029;
	}
	shf.r.wrap.b32 	%r4023, %r4022, %r4021, 19;
	shf.r.wrap.b32 	%r4024, %r4021, %r4022, 19;
	mov.b64 	%rd6091, {%r4024, %r4023};
	shf.l.wrap.b32 	%r4025, %r4021, %r4022, 3;
	shf.l.wrap.b32 	%r4026, %r4022, %r4021, 3;
	mov.b64 	%rd6092, {%r4026, %r4025};
	xor.b64  	%rd6093, %rd6091, %rd6092;
	shr.u64 	%rd6094, %rd6029, 6;
	xor.b64  	%rd6095, %rd6093, %rd6094;
	shf.r.wrap.b32 	%r4027, %r3684, %r3683, 1;
	shf.r.wrap.b32 	%r4028, %r3683, %r3684, 1;
	mov.b64 	%rd6096, {%r4028, %r4027};
	shf.r.wrap.b32 	%r4029, %r3684, %r3683, 8;
	shf.r.wrap.b32 	%r4030, %r3683, %r3684, 8;
	mov.b64 	%rd6097, {%r4030, %r4029};
	xor.b64  	%rd6098, %rd6096, %rd6097;
	shr.u64 	%rd6099, %rd5548, 7;
	xor.b64  	%rd6100, %rd6098, %rd6099;
	add.s64 	%rd6101, %rd6100, %rd5511;
	add.s64 	%rd6102, %rd6101, %rd5844;
	add.s64 	%rd6103, %rd6102, %rd6095;
	add.s64 	%rd6104, %rd6103, %rd5968;
	xor.b64  	%rd6105, %rd6042, %rd6005;
	and.b64  	%rd6106, %rd6079, %rd6105;
	xor.b64  	%rd6107, %rd6106, %rd6005;
	add.s64 	%rd6108, %rd6104, %rd6107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4031,%dummy}, %rd6079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4032}, %rd6079;
	}
	shf.r.wrap.b32 	%r4033, %r4032, %r4031, 14;
	shf.r.wrap.b32 	%r4034, %r4031, %r4032, 14;
	mov.b64 	%rd6109, {%r4034, %r4033};
	shf.r.wrap.b32 	%r4035, %r4032, %r4031, 18;
	shf.r.wrap.b32 	%r4036, %r4031, %r4032, 18;
	mov.b64 	%rd6110, {%r4036, %r4035};
	xor.b64  	%rd6111, %rd6109, %rd6110;
	shf.l.wrap.b32 	%r4037, %r4031, %r4032, 23;
	shf.l.wrap.b32 	%r4038, %r4032, %r4031, 23;
	mov.b64 	%rd6112, {%r4038, %r4037};
	xor.b64  	%rd6113, %rd6111, %rd6112;
	add.s64 	%rd6114, %rd6108, %rd6113;
	add.s64 	%rd6115, %rd6114, 4836135668995329356;
	add.s64 	%rd6116, %rd6115, %rd5979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4039,%dummy}, %rd6090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4040}, %rd6090;
	}
	shf.r.wrap.b32 	%r4041, %r4040, %r4039, 28;
	shf.r.wrap.b32 	%r4042, %r4039, %r4040, 28;
	mov.b64 	%rd6117, {%r4042, %r4041};
	shf.l.wrap.b32 	%r4043, %r4039, %r4040, 30;
	shf.l.wrap.b32 	%r4044, %r4040, %r4039, 30;
	mov.b64 	%rd6118, {%r4044, %r4043};
	xor.b64  	%rd6119, %rd6117, %rd6118;
	shf.l.wrap.b32 	%r4045, %r4039, %r4040, 25;
	shf.l.wrap.b32 	%r4046, %r4040, %r4039, 25;
	mov.b64 	%rd6120, {%r4046, %r4045};
	xor.b64  	%rd6121, %rd6119, %rd6120;
	and.b64  	%rd6122, %rd6090, %rd6053;
	or.b64  	%rd6123, %rd6090, %rd6053;
	and.b64  	%rd6124, %rd6123, %rd6016;
	or.b64  	%rd6125, %rd6124, %rd6122;
	add.s64 	%rd6126, %rd6125, %rd6121;
	add.s64 	%rd6127, %rd6126, %rd6115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4047,%dummy}, %rd6066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4048}, %rd6066;
	}
	shf.r.wrap.b32 	%r4049, %r4048, %r4047, 19;
	shf.r.wrap.b32 	%r4050, %r4047, %r4048, 19;
	mov.b64 	%rd6128, {%r4050, %r4049};
	shf.l.wrap.b32 	%r4051, %r4047, %r4048, 3;
	shf.l.wrap.b32 	%r4052, %r4048, %r4047, 3;
	mov.b64 	%rd6129, {%r4052, %r4051};
	xor.b64  	%rd6130, %rd6128, %rd6129;
	shr.u64 	%rd6131, %rd6066, 6;
	xor.b64  	%rd6132, %rd6130, %rd6131;
	shf.r.wrap.b32 	%r4053, %r3710, %r3709, 1;
	shf.r.wrap.b32 	%r4054, %r3709, %r3710, 1;
	mov.b64 	%rd6133, {%r4054, %r4053};
	shf.r.wrap.b32 	%r4055, %r3710, %r3709, 8;
	shf.r.wrap.b32 	%r4056, %r3709, %r3710, 8;
	mov.b64 	%rd6134, {%r4056, %r4055};
	xor.b64  	%rd6135, %rd6133, %rd6134;
	shr.u64 	%rd6136, %rd5585, 7;
	xor.b64  	%rd6137, %rd6135, %rd6136;
	add.s64 	%rd6138, %rd6137, %rd5548;
	add.s64 	%rd6139, %rd6138, %rd5881;
	add.s64 	%rd6140, %rd6139, %rd6132;
	add.s64 	%rd6141, %rd6140, %rd6005;
	xor.b64  	%rd6142, %rd6079, %rd6042;
	and.b64  	%rd6143, %rd6116, %rd6142;
	xor.b64  	%rd6144, %rd6143, %rd6042;
	add.s64 	%rd6145, %rd6141, %rd6144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4057,%dummy}, %rd6116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4058}, %rd6116;
	}
	shf.r.wrap.b32 	%r4059, %r4058, %r4057, 14;
	shf.r.wrap.b32 	%r4060, %r4057, %r4058, 14;
	mov.b64 	%rd6146, {%r4060, %r4059};
	shf.r.wrap.b32 	%r4061, %r4058, %r4057, 18;
	shf.r.wrap.b32 	%r4062, %r4057, %r4058, 18;
	mov.b64 	%rd6147, {%r4062, %r4061};
	xor.b64  	%rd6148, %rd6146, %rd6147;
	shf.l.wrap.b32 	%r4063, %r4057, %r4058, 23;
	shf.l.wrap.b32 	%r4064, %r4058, %r4057, 23;
	mov.b64 	%rd6149, {%r4064, %r4063};
	xor.b64  	%rd6150, %rd6148, %rd6149;
	add.s64 	%rd6151, %rd6145, %rd6150;
	add.s64 	%rd6152, %rd6151, 5532061633213252278;
	add.s64 	%rd6153, %rd6152, %rd6016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4065,%dummy}, %rd6127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4066}, %rd6127;
	}
	shf.r.wrap.b32 	%r4067, %r4066, %r4065, 28;
	shf.r.wrap.b32 	%r4068, %r4065, %r4066, 28;
	mov.b64 	%rd6154, {%r4068, %r4067};
	shf.l.wrap.b32 	%r4069, %r4065, %r4066, 30;
	shf.l.wrap.b32 	%r4070, %r4066, %r4065, 30;
	mov.b64 	%rd6155, {%r4070, %r4069};
	xor.b64  	%rd6156, %rd6154, %rd6155;
	shf.l.wrap.b32 	%r4071, %r4065, %r4066, 25;
	shf.l.wrap.b32 	%r4072, %r4066, %r4065, 25;
	mov.b64 	%rd6157, {%r4072, %r4071};
	xor.b64  	%rd6158, %rd6156, %rd6157;
	and.b64  	%rd6159, %rd6127, %rd6090;
	or.b64  	%rd6160, %rd6127, %rd6090;
	and.b64  	%rd6161, %rd6160, %rd6053;
	or.b64  	%rd6162, %rd6161, %rd6159;
	add.s64 	%rd6163, %rd6162, %rd6158;
	add.s64 	%rd6164, %rd6163, %rd6152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4073,%dummy}, %rd6103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4074}, %rd6103;
	}
	shf.r.wrap.b32 	%r4075, %r4074, %r4073, 19;
	shf.r.wrap.b32 	%r4076, %r4073, %r4074, 19;
	mov.b64 	%rd6165, {%r4076, %r4075};
	shf.l.wrap.b32 	%r4077, %r4073, %r4074, 3;
	shf.l.wrap.b32 	%r4078, %r4074, %r4073, 3;
	mov.b64 	%rd6166, {%r4078, %r4077};
	xor.b64  	%rd6167, %rd6165, %rd6166;
	shr.u64 	%rd6168, %rd6103, 6;
	xor.b64  	%rd6169, %rd6167, %rd6168;
	shf.r.wrap.b32 	%r4079, %r3736, %r3735, 1;
	shf.r.wrap.b32 	%r4080, %r3735, %r3736, 1;
	mov.b64 	%rd6170, {%r4080, %r4079};
	shf.r.wrap.b32 	%r4081, %r3736, %r3735, 8;
	shf.r.wrap.b32 	%r4082, %r3735, %r3736, 8;
	mov.b64 	%rd6171, {%r4082, %r4081};
	xor.b64  	%rd6172, %rd6170, %rd6171;
	shr.u64 	%rd6173, %rd5622, 7;
	xor.b64  	%rd6174, %rd6172, %rd6173;
	add.s64 	%rd6175, %rd6174, %rd5585;
	add.s64 	%rd6176, %rd6175, %rd5918;
	add.s64 	%rd6177, %rd6176, %rd6169;
	add.s64 	%rd6178, %rd6177, %rd6042;
	xor.b64  	%rd6179, %rd6116, %rd6079;
	and.b64  	%rd6180, %rd6153, %rd6179;
	xor.b64  	%rd6181, %rd6180, %rd6079;
	add.s64 	%rd6182, %rd6178, %rd6181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4083,%dummy}, %rd6153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4084}, %rd6153;
	}
	shf.r.wrap.b32 	%r4085, %r4084, %r4083, 14;
	shf.r.wrap.b32 	%r4086, %r4083, %r4084, 14;
	mov.b64 	%rd6183, {%r4086, %r4085};
	shf.r.wrap.b32 	%r4087, %r4084, %r4083, 18;
	shf.r.wrap.b32 	%r4088, %r4083, %r4084, 18;
	mov.b64 	%rd6184, {%r4088, %r4087};
	xor.b64  	%rd6185, %rd6183, %rd6184;
	shf.l.wrap.b32 	%r4089, %r4083, %r4084, 23;
	shf.l.wrap.b32 	%r4090, %r4084, %r4083, 23;
	mov.b64 	%rd6186, {%r4090, %r4089};
	xor.b64  	%rd6187, %rd6185, %rd6186;
	add.s64 	%rd6188, %rd6182, %rd6187;
	add.s64 	%rd6189, %rd6188, 6448918945643986474;
	add.s64 	%rd6190, %rd6189, %rd6053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4091,%dummy}, %rd6164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4092}, %rd6164;
	}
	shf.r.wrap.b32 	%r4093, %r4092, %r4091, 28;
	shf.r.wrap.b32 	%r4094, %r4091, %r4092, 28;
	mov.b64 	%rd6191, {%r4094, %r4093};
	shf.l.wrap.b32 	%r4095, %r4091, %r4092, 30;
	shf.l.wrap.b32 	%r4096, %r4092, %r4091, 30;
	mov.b64 	%rd6192, {%r4096, %r4095};
	xor.b64  	%rd6193, %rd6191, %rd6192;
	shf.l.wrap.b32 	%r4097, %r4091, %r4092, 25;
	shf.l.wrap.b32 	%r4098, %r4092, %r4091, 25;
	mov.b64 	%rd6194, {%r4098, %r4097};
	xor.b64  	%rd6195, %rd6193, %rd6194;
	and.b64  	%rd6196, %rd6164, %rd6127;
	or.b64  	%rd6197, %rd6164, %rd6127;
	and.b64  	%rd6198, %rd6197, %rd6090;
	or.b64  	%rd6199, %rd6198, %rd6196;
	add.s64 	%rd6200, %rd6199, %rd6195;
	add.s64 	%rd6201, %rd6200, %rd6189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4099,%dummy}, %rd6140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4100}, %rd6140;
	}
	shf.r.wrap.b32 	%r4101, %r4100, %r4099, 19;
	shf.r.wrap.b32 	%r4102, %r4099, %r4100, 19;
	mov.b64 	%rd6202, {%r4102, %r4101};
	shf.l.wrap.b32 	%r4103, %r4099, %r4100, 3;
	shf.l.wrap.b32 	%r4104, %r4100, %r4099, 3;
	mov.b64 	%rd6203, {%r4104, %r4103};
	xor.b64  	%rd6204, %rd6202, %rd6203;
	shr.u64 	%rd6205, %rd6140, 6;
	xor.b64  	%rd6206, %rd6204, %rd6205;
	shf.r.wrap.b32 	%r4105, %r3762, %r3761, 1;
	shf.r.wrap.b32 	%r4106, %r3761, %r3762, 1;
	mov.b64 	%rd6207, {%r4106, %r4105};
	shf.r.wrap.b32 	%r4107, %r3762, %r3761, 8;
	shf.r.wrap.b32 	%r4108, %r3761, %r3762, 8;
	mov.b64 	%rd6208, {%r4108, %r4107};
	xor.b64  	%rd6209, %rd6207, %rd6208;
	shr.u64 	%rd6210, %rd5659, 7;
	xor.b64  	%rd6211, %rd6209, %rd6210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4109,%dummy}, %rd6190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4110}, %rd6190;
	}
	shf.r.wrap.b32 	%r4111, %r4110, %r4109, 14;
	shf.r.wrap.b32 	%r4112, %r4109, %r4110, 14;
	mov.b64 	%rd6212, {%r4112, %r4111};
	shf.r.wrap.b32 	%r4113, %r4110, %r4109, 18;
	shf.r.wrap.b32 	%r4114, %r4109, %r4110, 18;
	mov.b64 	%rd6213, {%r4114, %r4113};
	xor.b64  	%rd6214, %rd6212, %rd6213;
	shf.l.wrap.b32 	%r4115, %r4109, %r4110, 23;
	shf.l.wrap.b32 	%r4116, %r4110, %r4109, 23;
	mov.b64 	%rd6215, {%r4116, %r4115};
	xor.b64  	%rd6216, %rd6214, %rd6215;
	xor.b64  	%rd6217, %rd6153, %rd6116;
	and.b64  	%rd6218, %rd6190, %rd6217;
	xor.b64  	%rd6219, %rd6218, %rd6116;
	add.s64 	%rd6220, %rd5622, %rd6211;
	add.s64 	%rd6221, %rd6220, %rd5955;
	add.s64 	%rd6222, %rd6221, %rd6206;
	add.s64 	%rd6223, %rd6222, %rd6079;
	add.s64 	%rd6224, %rd6223, %rd6219;
	add.s64 	%rd6225, %rd6224, %rd6216;
	add.s64 	%rd6226, %rd6225, 6902733635092675308;
	add.s64 	%rd6227, %rd6226, %rd6090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4117,%dummy}, %rd6201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4118}, %rd6201;
	}
	shf.r.wrap.b32 	%r4119, %r4118, %r4117, 28;
	shf.r.wrap.b32 	%r4120, %r4117, %r4118, 28;
	mov.b64 	%rd6228, {%r4120, %r4119};
	shf.l.wrap.b32 	%r4121, %r4117, %r4118, 30;
	shf.l.wrap.b32 	%r4122, %r4118, %r4117, 30;
	mov.b64 	%rd6229, {%r4122, %r4121};
	xor.b64  	%rd6230, %rd6228, %rd6229;
	shf.l.wrap.b32 	%r4123, %r4117, %r4118, 25;
	shf.l.wrap.b32 	%r4124, %r4118, %r4117, 25;
	mov.b64 	%rd6231, {%r4124, %r4123};
	xor.b64  	%rd6232, %rd6230, %rd6231;
	and.b64  	%rd6233, %rd6201, %rd6164;
	or.b64  	%rd6234, %rd6201, %rd6164;
	and.b64  	%rd6235, %rd6234, %rd6127;
	or.b64  	%rd6236, %rd6235, %rd6233;
	add.s64 	%rd6237, %rd6236, %rd6232;
	add.s64 	%rd6238, %rd6237, %rd6226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4125,%dummy}, %rd6177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4126}, %rd6177;
	}
	shf.r.wrap.b32 	%r4127, %r4126, %r4125, 19;
	shf.r.wrap.b32 	%r4128, %r4125, %r4126, 19;
	mov.b64 	%rd6239, {%r4128, %r4127};
	shf.l.wrap.b32 	%r4129, %r4125, %r4126, 3;
	shf.l.wrap.b32 	%r4130, %r4126, %r4125, 3;
	mov.b64 	%rd6240, {%r4130, %r4129};
	xor.b64  	%rd6241, %rd6239, %rd6240;
	shr.u64 	%rd6242, %rd6177, 6;
	xor.b64  	%rd6243, %rd6241, %rd6242;
	shf.r.wrap.b32 	%r4131, %r3788, %r3787, 1;
	shf.r.wrap.b32 	%r4132, %r3787, %r3788, 1;
	mov.b64 	%rd6244, {%r4132, %r4131};
	shf.r.wrap.b32 	%r4133, %r3788, %r3787, 8;
	shf.r.wrap.b32 	%r4134, %r3787, %r3788, 8;
	mov.b64 	%rd6245, {%r4134, %r4133};
	xor.b64  	%rd6246, %rd6244, %rd6245;
	shr.u64 	%rd6247, %rd5696, 7;
	xor.b64  	%rd6248, %rd6246, %rd6247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4135,%dummy}, %rd6227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4136}, %rd6227;
	}
	shf.r.wrap.b32 	%r4137, %r4136, %r4135, 14;
	shf.r.wrap.b32 	%r4138, %r4135, %r4136, 14;
	mov.b64 	%rd6249, {%r4138, %r4137};
	shf.r.wrap.b32 	%r4139, %r4136, %r4135, 18;
	shf.r.wrap.b32 	%r4140, %r4135, %r4136, 18;
	mov.b64 	%rd6250, {%r4140, %r4139};
	xor.b64  	%rd6251, %rd6249, %rd6250;
	shf.l.wrap.b32 	%r4141, %r4135, %r4136, 23;
	shf.l.wrap.b32 	%r4142, %r4136, %r4135, 23;
	mov.b64 	%rd6252, {%r4142, %r4141};
	xor.b64  	%rd6253, %rd6251, %rd6252;
	xor.b64  	%rd6254, %rd6190, %rd6153;
	and.b64  	%rd6255, %rd6227, %rd6254;
	xor.b64  	%rd6256, %rd6255, %rd6153;
	add.s64 	%rd6257, %rd5659, %rd6248;
	add.s64 	%rd6258, %rd6257, %rd5992;
	add.s64 	%rd6259, %rd6258, %rd6243;
	add.s64 	%rd6260, %rd6259, %rd6116;
	add.s64 	%rd6261, %rd6260, %rd6256;
	add.s64 	%rd6262, %rd6261, %rd6253;
	add.s64 	%rd6263, %rd6262, 7801388544844847127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4143,%dummy}, %rd6238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4144}, %rd6238;
	}
	shf.r.wrap.b32 	%r4145, %r4144, %r4143, 28;
	shf.r.wrap.b32 	%r4146, %r4143, %r4144, 28;
	mov.b64 	%rd6264, {%r4146, %r4145};
	shf.l.wrap.b32 	%r4147, %r4143, %r4144, 30;
	shf.l.wrap.b32 	%r4148, %r4144, %r4143, 30;
	mov.b64 	%rd6265, {%r4148, %r4147};
	xor.b64  	%rd6266, %rd6264, %rd6265;
	shf.l.wrap.b32 	%r4149, %r4143, %r4144, 25;
	shf.l.wrap.b32 	%r4150, %r4144, %r4143, 25;
	mov.b64 	%rd6267, {%r4150, %r4149};
	xor.b64  	%rd6268, %rd6266, %rd6267;
	and.b64  	%rd6269, %rd6238, %rd6201;
	or.b64  	%rd6270, %rd6238, %rd6201;
	and.b64  	%rd6271, %rd6270, %rd6164;
	or.b64  	%rd6272, %rd6271, %rd6269;
	add.s64 	%rd6273, %rd6268, %rd3534;
	add.s64 	%rd6274, %rd6273, %rd6272;
	add.s64 	%rd6275, %rd6274, %rd6263;
	st.local.u64 	[%rd2+8], %rd6275;
	add.s64 	%rd6276, %rd6238, %rd3540;
	st.local.u64 	[%rd2+16], %rd6276;
	add.s64 	%rd6277, %rd6201, %rd3543;
	st.local.u64 	[%rd2+24], %rd6277;
	add.s64 	%rd6278, %rd6164, %rd3532;
	st.local.u64 	[%rd2+32], %rd6278;
	add.s64 	%rd6279, %rd6127, %rd3518;
	add.s64 	%rd6280, %rd6279, %rd6263;
	st.local.u64 	[%rd2+40], %rd6280;
	add.s64 	%rd6281, %rd6227, %rd3526;
	st.local.u64 	[%rd2+48], %rd6281;
	add.s64 	%rd6282, %rd6190, %rd3525;
	st.local.u64 	[%rd2+56], %rd6282;
	add.s64 	%rd6283, %rd6153, %rd3516;
	st.local.u64 	[%rd2+64], %rd6283;
	add.s64 	%rd6328, %rd6328, 128;
	add.s64 	%rd6311, %rd6311, 128;
	add.s32 	%r4159, %r4159, -128;
	setp.gt.u32 	%p13, %r4159, 127;
	@%p13 bra 	$L__BB9_13;

$L__BB9_17:
	setp.eq.s32 	%p14, %r4159, 0;
	@%p14 bra 	$L__BB9_23;

	cvt.u64.u32 	%rd6284, %r4156;
	add.s64 	%rd6285, %rd2, %rd6284;
	add.s64 	%rd6333, %rd6285, 72;
	and.b32  	%r4161, %r4159, 3;
	setp.eq.s32 	%p15, %r4161, 0;
	mov.u32 	%r4162, %r4159;
	@%p15 bra 	$L__BB9_21;

	mov.u64 	%rd6329, %rd6333;
	mov.u64 	%rd6330, %rd6328;
	mov.u32 	%r4162, %r4159;

$L__BB9_20:
	.pragma "nounroll";
	add.s32 	%r4162, %r4162, -1;
	add.s64 	%rd6328, %rd6330, 1;
	ld.local.u8 	%rs6, [%rd6330];
	add.s64 	%rd6333, %rd6329, 1;
	st.local.u8 	[%rd6329], %rs6;
	add.s32 	%r4161, %r4161, -1;
	setp.ne.s32 	%p16, %r4161, 0;
	mov.u64 	%rd6329, %rd6333;
	mov.u64 	%rd6330, %rd6328;
	@%p16 bra 	$L__BB9_20;

$L__BB9_21:
	add.s32 	%r4151, %r4159, -1;
	setp.lt.u32 	%p17, %r4151, 3;
	@%p17 bra 	$L__BB9_23;

$L__BB9_22:
	ld.local.u8 	%rs7, [%rd6328];
	st.local.u8 	[%rd6333], %rs7;
	ld.local.u8 	%rs8, [%rd6328+1];
	st.local.u8 	[%rd6333+1], %rs8;
	ld.local.u8 	%rs9, [%rd6328+2];
	st.local.u8 	[%rd6333+2], %rs9;
	add.s64 	%rd130, %rd6328, 4;
	ld.local.u8 	%rs10, [%rd6328+3];
	add.s64 	%rd131, %rd6333, 4;
	st.local.u8 	[%rd6333+3], %rs10;
	add.s32 	%r4162, %r4162, -4;
	setp.ne.s32 	%p18, %r4162, 0;
	mov.u64 	%rd6333, %rd131;
	mov.u64 	%rd6328, %rd130;
	@%p18 bra 	$L__BB9_22;

$L__BB9_23:
	ret;

}

  