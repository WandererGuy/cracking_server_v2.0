//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.6
.target sm_86, texmode_independent
.address_size 64

	// .globl	keystore

.entry keystore(
	.param .u64 .ptr .global .align 4 keystore_param_0,
	.param .u64 .ptr .global .align 4 keystore_param_1,
	.param .u64 .ptr .global .align 4 keystore_param_2,
	.param .u64 .ptr .const .align 4 keystore_param_3
)
{
	.local .align 16 .b8 	__local_depot0[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<55>;
	.reg .b16 	%rs<28>;
	.reg .b32 	%r<1155>;
	.reg .b64 	%rd<115>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd7, [keystore_param_0];
	ld.param.u64 	%rd8, [keystore_param_1];
	ld.param.u64 	%rd6, [keystore_param_3];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r90, %ctaid.x;
	mov.u32 	%r91, %ntid.x;
	mov.u32 	%r92, %tid.x;
	mov.b32 	%r93, %envreg3;
	add.s32 	%r94, %r92, %r93;
	mad.lo.s32 	%r95, %r91, %r90, %r94;
	cvt.u64.u32 	%rd2, %r95;
	mul.wide.u32 	%rd10, %r95, 4;
	add.s64 	%rd11, %rd8, %rd10;
	ld.global.u32 	%r96, [%rd11];
	and.b32  	%r1, %r96, 127;
	shl.b32 	%r97, %r96, 1;
	and.b32  	%r98, %r97, 254;
	ld.const.u32 	%r2, [%rd6];
	add.s32 	%r99, %r98, %r2;
	shr.u32 	%r100, %r96, 7;
	mul.wide.u32 	%rd12, %r100, 4;
	add.s64 	%rd3, %rd7, %rd12;
	shr.u32 	%r101, %r99, 6;
	and.b32  	%r102, %r99, 56;
	setp.eq.s32 	%p10, %r102, 56;
	selp.b32 	%r103, 2, 1, %p10;
	add.s32 	%r3, %r103, %r101;
	add.s32 	%r5, %r3, -1;
	shl.b32 	%r6, %r99, 3;
	mov.u32 	%r1126, 1732584193;
	mov.u32 	%r1125, -271733879;
	mov.u32 	%r1124, -1732584194;
	mov.u32 	%r1123, 271733878;
	mov.u32 	%r1122, -1009589776;
	mov.u32 	%r1119, 0;
	mov.u32 	%r1136, %r1119;
	mov.u32 	%r1121, %r1119;

$L__BB0_1:
	mov.u32 	%r1137, 0;
	setp.ge.u32 	%p12, %r1136, %r1;
	mov.pred 	%p52, -1;
	@%p12 bra 	$L__BB0_11;

	sub.s32 	%r107, %r1136, %r1;
	max.u32 	%r108, %r107, -32;
	neg.s32 	%r15, %r108;
	mov.u32 	%r1132, 0;
	and.b32  	%r16, %r15, 3;
	setp.gt.u32 	%p14, %r108, -4;
	mov.u32 	%r1133, %r1136;
	@%p14 bra 	$L__BB0_6;

	sub.s32 	%r1129, %r15, %r16;
	mov.u32 	%r1137, 0;

$L__BB0_4:
	or.b32  	%r110, %r1137, 3;
	cvt.u64.u32 	%rd13, %r110;
	add.s64 	%rd14, %rd1, %rd13;
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd14], %rs1;
	cvt.u64.u32 	%rd15, %r1136;
	add.s64 	%rd16, %rd3, %rd15;
	ld.global.u8 	%rs2, [%rd16];
	add.s32 	%r111, %r1137, 1;
	xor.b32  	%r112, %r111, 3;
	cvt.u64.u32 	%rd17, %r112;
	add.s64 	%rd18, %rd1, %rd17;
	st.local.u8 	[%rd18], %rs2;
	add.s32 	%r113, %r1137, 2;
	xor.b32  	%r114, %r113, 3;
	cvt.u64.u32 	%rd19, %r114;
	add.s64 	%rd20, %rd1, %rd19;
	st.local.u8 	[%rd20], %rs1;
	add.s32 	%r115, %r1136, 1;
	cvt.u64.u32 	%rd21, %r115;
	add.s64 	%rd22, %rd3, %rd21;
	ld.global.u8 	%rs3, [%rd22];
	add.s32 	%r116, %r1137, 3;
	and.b32  	%r117, %r116, -8;
	cvt.u64.u32 	%rd23, %r117;
	add.s64 	%rd24, %rd1, %rd23;
	st.local.u8 	[%rd24], %rs3;
	st.local.u8 	[%rd14+4], %rs1;
	add.s32 	%r118, %r1136, 2;
	cvt.u64.u32 	%rd25, %r118;
	add.s64 	%rd26, %rd3, %rd25;
	ld.global.u8 	%rs4, [%rd26];
	add.s32 	%r119, %r1137, 5;
	xor.b32  	%r120, %r119, 3;
	cvt.u64.u32 	%rd27, %r120;
	add.s64 	%rd28, %rd1, %rd27;
	st.local.u8 	[%rd28], %rs4;
	add.s32 	%r121, %r1137, 6;
	xor.b32  	%r122, %r121, 3;
	cvt.u64.u32 	%rd29, %r122;
	add.s64 	%rd30, %rd1, %rd29;
	st.local.u8 	[%rd30], %rs1;
	add.s32 	%r123, %r1136, 3;
	cvt.u64.u32 	%rd31, %r123;
	add.s64 	%rd32, %rd3, %rd31;
	ld.global.u8 	%rs5, [%rd32];
	add.s32 	%r124, %r1137, 7;
	and.b32  	%r125, %r124, -4;
	cvt.u64.u32 	%rd33, %r125;
	add.s64 	%rd34, %rd1, %rd33;
	st.local.u8 	[%rd34], %rs5;
	add.s32 	%r1137, %r1137, 8;
	add.s32 	%r1136, %r1136, 4;
	add.s32 	%r1129, %r1129, -4;
	setp.ne.s32 	%p15, %r1129, 0;
	@%p15 bra 	$L__BB0_4;

	setp.lt.u32 	%p52, %r1137, 64;
	mov.u32 	%r1132, %r1137;
	mov.u32 	%r1133, %r1136;

$L__BB0_6:
	setp.eq.s32 	%p16, %r16, 0;
	@%p16 bra 	$L__BB0_11;

	xor.b32  	%r126, %r1132, 3;
	cvt.u64.u32 	%rd35, %r126;
	add.s64 	%rd36, %rd1, %rd35;
	mov.u16 	%rs6, 0;
	st.local.u8 	[%rd36], %rs6;
	cvt.u64.u32 	%rd37, %r1133;
	add.s64 	%rd38, %rd3, %rd37;
	ld.global.u8 	%rs7, [%rd38];
	add.s32 	%r127, %r1132, 1;
	xor.b32  	%r128, %r127, 3;
	cvt.u64.u32 	%rd39, %r128;
	add.s64 	%rd40, %rd1, %rd39;
	st.local.u8 	[%rd40], %rs7;
	add.s32 	%r1137, %r1132, 2;
	add.s32 	%r1136, %r1133, 1;
	setp.eq.s32 	%p17, %r16, 1;
	@%p17 bra 	$L__BB0_10;

	xor.b32  	%r129, %r1137, 3;
	cvt.u64.u32 	%rd41, %r129;
	add.s64 	%rd42, %rd1, %rd41;
	st.local.u8 	[%rd42], %rs6;
	cvt.u64.u32 	%rd43, %r1136;
	add.s64 	%rd44, %rd3, %rd43;
	ld.global.u8 	%rs9, [%rd44];
	add.s32 	%r130, %r1132, 3;
	xor.b32  	%r131, %r130, 3;
	cvt.u64.u32 	%rd45, %r131;
	add.s64 	%rd46, %rd1, %rd45;
	st.local.u8 	[%rd46], %rs9;
	add.s32 	%r1137, %r1132, 4;
	add.s32 	%r1136, %r1133, 2;
	setp.eq.s32 	%p18, %r16, 2;
	@%p18 bra 	$L__BB0_10;

	xor.b32  	%r132, %r1137, 3;
	cvt.u64.u32 	%rd47, %r132;
	add.s64 	%rd48, %rd1, %rd47;
	mov.u16 	%rs10, 0;
	st.local.u8 	[%rd48], %rs10;
	cvt.u64.u32 	%rd49, %r1136;
	add.s64 	%rd50, %rd3, %rd49;
	ld.global.u8 	%rs11, [%rd50];
	add.s32 	%r133, %r1132, 5;
	xor.b32  	%r134, %r133, 3;
	cvt.u64.u32 	%rd51, %r134;
	add.s64 	%rd52, %rd1, %rd51;
	st.local.u8 	[%rd52], %rs11;
	add.s32 	%r1137, %r1132, 6;
	add.s32 	%r1136, %r1133, 3;

$L__BB0_10:
	setp.lt.u32 	%p52, %r1137, 64;

$L__BB0_11:
	setp.ne.s32 	%p19, %r1136, %r1;
	not.pred 	%p20, %p52;
	or.pred  	%p21, %p19, %p20;
	@%p21 bra 	$L__BB0_38;

	setp.ge.u32 	%p22, %r1119, %r2;
	setp.lt.u32 	%p54, %r1137, 64;
	setp.gt.u32 	%p23, %r1137, 63;
	or.pred  	%p24, %p22, %p23;
	mov.u32 	%r1146, %r1119;
	mov.u32 	%r1147, %r1137;
	@%p24 bra 	$L__BB0_20;

	sub.s32 	%r136, %r1119, %r2;
	add.s32 	%r137, %r1137, -64;
	max.u32 	%r38, %r136, %r137;
	neg.s32 	%r138, %r38;
	and.b32  	%r39, %r138, 3;
	setp.eq.s32 	%p26, %r39, 0;
	mov.u32 	%r1147, %r1137;
	mov.u32 	%r1146, %r1119;
	@%p26 bra 	$L__BB0_18;

	cvt.u64.u32 	%rd53, %r1119;
	add.s64 	%rd54, %rd6, %rd53;
	ld.const.u8 	%rs12, [%rd54+4];
	xor.b32  	%r139, %r1137, 3;
	cvt.u64.u32 	%rd55, %r139;
	add.s64 	%rd56, %rd1, %rd55;
	st.local.u8 	[%rd56], %rs12;
	add.s32 	%r1147, %r1137, 1;
	add.s32 	%r1146, %r1119, 1;
	setp.eq.s32 	%p27, %r39, 1;
	@%p27 bra 	$L__BB0_17;

	cvt.u64.u32 	%rd57, %r1146;
	add.s64 	%rd58, %rd6, %rd57;
	ld.const.u8 	%rs13, [%rd58+4];
	xor.b32  	%r140, %r1147, 3;
	cvt.u64.u32 	%rd59, %r140;
	add.s64 	%rd60, %rd1, %rd59;
	st.local.u8 	[%rd60], %rs13;
	add.s32 	%r1147, %r1137, 2;
	add.s32 	%r1146, %r1119, 2;
	setp.eq.s32 	%p28, %r39, 2;
	@%p28 bra 	$L__BB0_17;

	cvt.u64.u32 	%rd61, %r1146;
	add.s64 	%rd62, %rd6, %rd61;
	ld.const.u8 	%rs14, [%rd62+4];
	xor.b32  	%r141, %r1147, 3;
	cvt.u64.u32 	%rd63, %r141;
	add.s64 	%rd64, %rd1, %rd63;
	st.local.u8 	[%rd64], %rs14;
	add.s32 	%r1147, %r1137, 3;
	add.s32 	%r1146, %r1119, 3;

$L__BB0_17:
	setp.lt.u32 	%p54, %r1147, 64;

$L__BB0_18:
	setp.gt.u32 	%p29, %r38, -4;
	@%p29 bra 	$L__BB0_20;

$L__BB0_19:
	cvt.u64.u32 	%rd65, %r1146;
	add.s64 	%rd66, %rd6, 4;
	add.s64 	%rd67, %rd66, %rd65;
	ld.const.u8 	%rs15, [%rd67];
	xor.b32  	%r142, %r1147, 3;
	cvt.u64.u32 	%rd68, %r142;
	add.s64 	%rd69, %rd1, %rd68;
	st.local.u8 	[%rd69], %rs15;
	add.s32 	%r143, %r1146, 1;
	cvt.u64.u32 	%rd70, %r143;
	add.s64 	%rd71, %rd66, %rd70;
	ld.const.u8 	%rs16, [%rd71];
	add.s32 	%r144, %r1147, 1;
	xor.b32  	%r145, %r144, 3;
	cvt.u64.u32 	%rd72, %r145;
	add.s64 	%rd73, %rd1, %rd72;
	st.local.u8 	[%rd73], %rs16;
	add.s32 	%r146, %r1146, 2;
	cvt.u64.u32 	%rd74, %r146;
	add.s64 	%rd75, %rd66, %rd74;
	ld.const.u8 	%rs17, [%rd75];
	add.s32 	%r147, %r1147, 2;
	xor.b32  	%r148, %r147, 3;
	cvt.u64.u32 	%rd76, %r148;
	add.s64 	%rd77, %rd1, %rd76;
	st.local.u8 	[%rd77], %rs17;
	add.s32 	%r149, %r1146, 3;
	cvt.u64.u32 	%rd78, %r149;
	add.s64 	%rd79, %rd66, %rd78;
	ld.const.u8 	%rs18, [%rd79];
	add.s32 	%r150, %r1147, 3;
	xor.b32  	%r151, %r150, 3;
	cvt.u64.u32 	%rd80, %r151;
	add.s64 	%rd81, %rd1, %rd80;
	st.local.u8 	[%rd81], %rs18;
	add.s32 	%r1146, %r1146, 4;
	setp.lt.u32 	%p30, %r1146, %r2;
	add.s32 	%r1147, %r1147, 4;
	setp.lt.u32 	%p54, %r1147, 64;
	and.pred  	%p31, %p30, %p54;
	@%p31 bra 	$L__BB0_19;

$L__BB0_20:
	setp.ne.s32 	%p32, %r1146, %r2;
	not.pred 	%p33, %p54;
	or.pred  	%p34, %p32, %p33;
	@%p34 bra 	$L__BB0_22;

	add.s32 	%r1146, %r2, 1;
	xor.b32  	%r152, %r1147, 3;
	cvt.u64.u32 	%rd82, %r152;
	add.s64 	%rd83, %rd1, %rd82;
	mov.u16 	%rs19, 128;
	st.local.u8 	[%rd83], %rs19;
	add.s32 	%r1147, %r1147, 1;

$L__BB0_22:
	mov.u32 	%r1119, %r1146;
	setp.gt.u32 	%p35, %r1147, 63;
	setp.le.u32 	%p36, %r1119, %r2;
	or.pred  	%p37, %p36, %p35;
	@%p37 bra 	$L__BB0_38;

	setp.lt.u32 	%p38, %r1121, %r5;
	@%p38 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_24;

$L__BB0_32:
	neg.s32 	%r167, %r1147;
	and.b32  	%r68, %r167, 3;
	setp.eq.s32 	%p45, %r68, 0;
	mov.u32 	%r1152, %r1147;
	@%p45 bra 	$L__BB0_36;

	xor.b32  	%r168, %r1147, 3;
	cvt.u64.u32 	%rd98, %r168;
	add.s64 	%rd99, %rd1, %rd98;
	mov.u16 	%rs24, 0;
	st.local.u8 	[%rd99], %rs24;
	add.s32 	%r1152, %r1147, 1;
	setp.eq.s32 	%p46, %r68, 1;
	@%p46 bra 	$L__BB0_36;

	xor.b32  	%r169, %r1152, 3;
	cvt.u64.u32 	%rd100, %r169;
	add.s64 	%rd101, %rd1, %rd100;
	st.local.u8 	[%rd101], %rs24;
	add.s32 	%r1152, %r1147, 2;
	setp.eq.s32 	%p47, %r68, 2;
	@%p47 bra 	$L__BB0_36;

	xor.b32  	%r170, %r1152, 3;
	cvt.u64.u32 	%rd102, %r170;
	add.s64 	%rd103, %rd1, %rd102;
	mov.u16 	%rs26, 0;
	st.local.u8 	[%rd103], %rs26;
	add.s32 	%r1152, %r1147, 3;

$L__BB0_36:
	mov.u32 	%r171, 63;
	sub.s32 	%r172, %r171, %r1147;
	setp.lt.u32 	%p48, %r172, 3;
	@%p48 bra 	$L__BB0_38;

$L__BB0_37:
	xor.b32  	%r173, %r1152, 3;
	cvt.u64.u32 	%rd104, %r173;
	add.s64 	%rd105, %rd1, %rd104;
	mov.u16 	%rs27, 0;
	st.local.u8 	[%rd105], %rs27;
	add.s32 	%r174, %r1152, 1;
	xor.b32  	%r175, %r174, 3;
	cvt.u64.u32 	%rd106, %r175;
	add.s64 	%rd107, %rd1, %rd106;
	st.local.u8 	[%rd107], %rs27;
	add.s32 	%r176, %r1152, 2;
	xor.b32  	%r177, %r176, 3;
	cvt.u64.u32 	%rd108, %r177;
	add.s64 	%rd109, %rd1, %rd108;
	st.local.u8 	[%rd109], %rs27;
	add.s32 	%r178, %r1152, 3;
	xor.b32  	%r179, %r178, 3;
	cvt.u64.u32 	%rd110, %r179;
	add.s64 	%rd111, %rd1, %rd110;
	st.local.u8 	[%rd111], %rs27;
	add.s32 	%r1152, %r1152, 4;
	setp.lt.u32 	%p49, %r1152, 64;
	@%p49 bra 	$L__BB0_37;
	bra.uni 	$L__BB0_38;

$L__BB0_24:
	setp.gt.u32 	%p39, %r1147, 55;
	@%p39 bra 	$L__BB0_31;

	neg.s32 	%r153, %r1147;
	and.b32  	%r61, %r153, 3;
	setp.eq.s32 	%p40, %r61, 0;
	mov.u32 	%r1150, %r1147;
	@%p40 bra 	$L__BB0_29;

	xor.b32  	%r154, %r1147, 3;
	cvt.u64.u32 	%rd84, %r154;
	add.s64 	%rd85, %rd1, %rd84;
	mov.u16 	%rs20, 0;
	st.local.u8 	[%rd85], %rs20;
	add.s32 	%r1150, %r1147, 1;
	setp.eq.s32 	%p41, %r61, 1;
	@%p41 bra 	$L__BB0_29;

	xor.b32  	%r155, %r1150, 3;
	cvt.u64.u32 	%rd86, %r155;
	add.s64 	%rd87, %rd1, %rd86;
	st.local.u8 	[%rd87], %rs20;
	add.s32 	%r1150, %r1147, 2;
	setp.eq.s32 	%p42, %r61, 2;
	@%p42 bra 	$L__BB0_29;

	xor.b32  	%r156, %r1150, 3;
	cvt.u64.u32 	%rd88, %r156;
	add.s64 	%rd89, %rd1, %rd88;
	mov.u16 	%rs22, 0;
	st.local.u8 	[%rd89], %rs22;
	add.s32 	%r1150, %r1147, 3;

$L__BB0_29:
	mov.u32 	%r157, 55;
	sub.s32 	%r158, %r157, %r1147;
	setp.lt.u32 	%p43, %r158, 3;
	@%p43 bra 	$L__BB0_31;

$L__BB0_30:
	xor.b32  	%r159, %r1150, 3;
	cvt.u64.u32 	%rd90, %r159;
	add.s64 	%rd91, %rd1, %rd90;
	mov.u16 	%rs23, 0;
	st.local.u8 	[%rd91], %rs23;
	add.s32 	%r160, %r1150, 1;
	xor.b32  	%r161, %r160, 3;
	cvt.u64.u32 	%rd92, %r161;
	add.s64 	%rd93, %rd1, %rd92;
	st.local.u8 	[%rd93], %rs23;
	add.s32 	%r162, %r1150, 2;
	xor.b32  	%r163, %r162, 3;
	cvt.u64.u32 	%rd94, %r163;
	add.s64 	%rd95, %rd1, %rd94;
	st.local.u8 	[%rd95], %rs23;
	add.s32 	%r164, %r1150, 3;
	xor.b32  	%r165, %r164, 3;
	cvt.u64.u32 	%rd96, %r165;
	add.s64 	%rd97, %rd1, %rd96;
	st.local.u8 	[%rd97], %rs23;
	add.s32 	%r1150, %r1150, 4;
	setp.lt.u32 	%p44, %r1150, 56;
	@%p44 bra 	$L__BB0_30;

$L__BB0_31:
	mov.u32 	%r166, 0;
	st.local.v2.u32 	[%rd1+56], {%r166, %r6};

$L__BB0_38:
	ld.local.v4.u32 	{%r500, %r501, %r502, %r503}, [%rd1];
	shf.l.wrap.b32 	%r508, %r1126, %r1126, 5;
	add.s32 	%r509, %r508, %r1122;
	// begin inline asm
	lop3.b32 %r180, %r1125, %r1124, %r1123, 202;
	// end inline asm
	add.s32 	%r510, %r509, %r180;
	add.s32 	%r511, %r510, %r500;
	add.s32 	%r189, %r511, 1518500249;
	shf.l.wrap.b32 	%r512, %r189, %r189, 5;
	shf.l.wrap.b32 	%r191, %r1125, %r1125, 30;
	// begin inline asm
	lop3.b32 %r184, %r1126, %r191, %r1124, 202;
	// end inline asm
	add.s32 	%r513, %r1123, %r184;
	add.s32 	%r514, %r513, %r501;
	add.s32 	%r515, %r514, %r512;
	add.s32 	%r193, %r515, 1518500249;
	shf.l.wrap.b32 	%r516, %r193, %r193, 5;
	shf.l.wrap.b32 	%r195, %r1126, %r1126, 30;
	// begin inline asm
	lop3.b32 %r188, %r189, %r195, %r191, 202;
	// end inline asm
	add.s32 	%r517, %r1124, %r188;
	add.s32 	%r518, %r517, %r502;
	add.s32 	%r519, %r518, %r516;
	add.s32 	%r197, %r519, 1518500249;
	shf.l.wrap.b32 	%r199, %r189, %r189, 30;
	shf.l.wrap.b32 	%r520, %r197, %r197, 5;
	// begin inline asm
	lop3.b32 %r192, %r193, %r199, %r195, 202;
	// end inline asm
	add.s32 	%r521, %r191, %r192;
	add.s32 	%r522, %r521, %r503;
	add.s32 	%r523, %r522, %r520;
	add.s32 	%r201, %r523, 1518500249;
	shf.l.wrap.b32 	%r203, %r193, %r193, 30;
	shf.l.wrap.b32 	%r524, %r201, %r201, 5;
	// begin inline asm
	lop3.b32 %r196, %r197, %r203, %r199, 202;
	// end inline asm
	ld.local.v4.u32 	{%r525, %r526, %r527, %r528}, [%rd1+16];
	add.s32 	%r533, %r195, %r196;
	add.s32 	%r534, %r533, %r525;
	add.s32 	%r535, %r534, %r524;
	add.s32 	%r205, %r535, 1518500249;
	shf.l.wrap.b32 	%r207, %r197, %r197, 30;
	shf.l.wrap.b32 	%r536, %r205, %r205, 5;
	// begin inline asm
	lop3.b32 %r200, %r201, %r207, %r203, 202;
	// end inline asm
	add.s32 	%r537, %r199, %r200;
	add.s32 	%r538, %r537, %r526;
	add.s32 	%r539, %r538, %r536;
	add.s32 	%r209, %r539, 1518500249;
	shf.l.wrap.b32 	%r211, %r201, %r201, 30;
	shf.l.wrap.b32 	%r540, %r209, %r209, 5;
	// begin inline asm
	lop3.b32 %r204, %r205, %r211, %r207, 202;
	// end inline asm
	add.s32 	%r541, %r203, %r204;
	add.s32 	%r542, %r541, %r527;
	add.s32 	%r543, %r542, %r540;
	add.s32 	%r213, %r543, 1518500249;
	shf.l.wrap.b32 	%r215, %r205, %r205, 30;
	shf.l.wrap.b32 	%r544, %r213, %r213, 5;
	// begin inline asm
	lop3.b32 %r208, %r209, %r215, %r211, 202;
	// end inline asm
	add.s32 	%r545, %r208, %r528;
	add.s32 	%r546, %r545, %r207;
	add.s32 	%r547, %r546, %r544;
	add.s32 	%r217, %r547, 1518500249;
	shf.l.wrap.b32 	%r219, %r209, %r209, 30;
	shf.l.wrap.b32 	%r548, %r217, %r217, 5;
	// begin inline asm
	lop3.b32 %r212, %r213, %r219, %r215, 202;
	// end inline asm
	ld.local.v4.u32 	{%r549, %r550, %r551, %r552}, [%rd1+32];
	add.s32 	%r557, %r212, %r549;
	add.s32 	%r558, %r557, %r211;
	add.s32 	%r559, %r558, %r548;
	add.s32 	%r221, %r559, 1518500249;
	shf.l.wrap.b32 	%r223, %r213, %r213, 30;
	shf.l.wrap.b32 	%r560, %r221, %r221, 5;
	// begin inline asm
	lop3.b32 %r216, %r217, %r223, %r219, 202;
	// end inline asm
	add.s32 	%r561, %r216, %r550;
	add.s32 	%r562, %r561, %r215;
	add.s32 	%r563, %r562, %r560;
	add.s32 	%r225, %r563, 1518500249;
	shf.l.wrap.b32 	%r227, %r217, %r217, 30;
	shf.l.wrap.b32 	%r564, %r225, %r225, 5;
	// begin inline asm
	lop3.b32 %r220, %r221, %r227, %r223, 202;
	// end inline asm
	add.s32 	%r565, %r220, %r551;
	add.s32 	%r566, %r565, %r219;
	add.s32 	%r567, %r566, %r564;
	add.s32 	%r229, %r567, 1518500249;
	shf.l.wrap.b32 	%r231, %r221, %r221, 30;
	shf.l.wrap.b32 	%r568, %r229, %r229, 5;
	// begin inline asm
	lop3.b32 %r224, %r225, %r231, %r227, 202;
	// end inline asm
	add.s32 	%r569, %r224, %r552;
	add.s32 	%r570, %r569, %r223;
	add.s32 	%r571, %r570, %r568;
	add.s32 	%r233, %r571, 1518500249;
	shf.l.wrap.b32 	%r235, %r225, %r225, 30;
	shf.l.wrap.b32 	%r572, %r233, %r233, 5;
	// begin inline asm
	lop3.b32 %r228, %r229, %r235, %r231, 202;
	// end inline asm
	ld.local.v4.u32 	{%r573, %r574, %r575, %r576}, [%rd1+48];
	add.s32 	%r581, %r228, %r573;
	add.s32 	%r582, %r581, %r227;
	add.s32 	%r583, %r582, %r572;
	add.s32 	%r237, %r583, 1518500249;
	shf.l.wrap.b32 	%r239, %r229, %r229, 30;
	shf.l.wrap.b32 	%r584, %r237, %r237, 5;
	// begin inline asm
	lop3.b32 %r232, %r233, %r239, %r235, 202;
	// end inline asm
	add.s32 	%r585, %r232, %r574;
	add.s32 	%r586, %r585, %r231;
	add.s32 	%r587, %r586, %r584;
	add.s32 	%r241, %r587, 1518500249;
	shf.l.wrap.b32 	%r243, %r233, %r233, 30;
	shf.l.wrap.b32 	%r588, %r241, %r241, 5;
	// begin inline asm
	lop3.b32 %r236, %r237, %r243, %r239, 202;
	// end inline asm
	add.s32 	%r589, %r236, %r575;
	add.s32 	%r590, %r589, %r235;
	add.s32 	%r591, %r590, %r588;
	add.s32 	%r245, %r591, 1518500249;
	shf.l.wrap.b32 	%r247, %r237, %r237, 30;
	shf.l.wrap.b32 	%r592, %r245, %r245, 5;
	// begin inline asm
	lop3.b32 %r240, %r241, %r247, %r243, 202;
	// end inline asm
	add.s32 	%r593, %r240, %r576;
	add.s32 	%r594, %r593, %r239;
	add.s32 	%r595, %r594, %r592;
	add.s32 	%r249, %r595, 1518500249;
	shf.l.wrap.b32 	%r251, %r241, %r241, 30;
	shf.l.wrap.b32 	%r596, %r249, %r249, 5;
	// begin inline asm
	lop3.b32 %r244, %r245, %r251, %r247, 202;
	// end inline asm
	xor.b32  	%r597, %r549, %r574;
	xor.b32  	%r598, %r597, %r502;
	xor.b32  	%r599, %r598, %r500;
	shf.l.wrap.b32 	%r600, %r599, %r599, 1;
	add.s32 	%r601, %r244, %r600;
	add.s32 	%r602, %r601, %r243;
	add.s32 	%r603, %r602, %r596;
	add.s32 	%r253, %r603, 1518500249;
	shf.l.wrap.b32 	%r255, %r245, %r245, 30;
	shf.l.wrap.b32 	%r604, %r253, %r253, 5;
	// begin inline asm
	lop3.b32 %r248, %r249, %r255, %r251, 202;
	// end inline asm
	xor.b32  	%r605, %r550, %r575;
	xor.b32  	%r606, %r605, %r503;
	xor.b32  	%r607, %r606, %r501;
	shf.l.wrap.b32 	%r608, %r607, %r607, 1;
	add.s32 	%r609, %r248, %r608;
	add.s32 	%r610, %r609, %r247;
	add.s32 	%r611, %r610, %r604;
	add.s32 	%r257, %r611, 1518500249;
	shf.l.wrap.b32 	%r259, %r249, %r249, 30;
	shf.l.wrap.b32 	%r612, %r257, %r257, 5;
	// begin inline asm
	lop3.b32 %r252, %r253, %r259, %r255, 202;
	// end inline asm
	xor.b32  	%r613, %r551, %r576;
	xor.b32  	%r614, %r613, %r525;
	xor.b32  	%r615, %r614, %r502;
	shf.l.wrap.b32 	%r616, %r615, %r615, 1;
	add.s32 	%r617, %r252, %r616;
	add.s32 	%r618, %r617, %r251;
	add.s32 	%r619, %r618, %r612;
	add.s32 	%r261, %r619, 1518500249;
	shf.l.wrap.b32 	%r263, %r253, %r253, 30;
	shf.l.wrap.b32 	%r620, %r261, %r261, 5;
	// begin inline asm
	lop3.b32 %r256, %r257, %r263, %r259, 202;
	// end inline asm
	xor.b32  	%r621, %r552, %r600;
	xor.b32  	%r622, %r621, %r526;
	xor.b32  	%r623, %r622, %r503;
	shf.l.wrap.b32 	%r624, %r623, %r623, 1;
	add.s32 	%r625, %r256, %r624;
	add.s32 	%r626, %r625, %r255;
	add.s32 	%r627, %r626, %r620;
	add.s32 	%r265, %r627, 1518500249;
	shf.l.wrap.b32 	%r267, %r257, %r257, 30;
	shf.l.wrap.b32 	%r628, %r265, %r265, 5;
	// begin inline asm
	lop3.b32 %r260, %r261, %r267, %r263, 150;
	// end inline asm
	xor.b32  	%r629, %r573, %r608;
	xor.b32  	%r630, %r629, %r527;
	xor.b32  	%r631, %r630, %r525;
	shf.l.wrap.b32 	%r632, %r631, %r631, 1;
	add.s32 	%r633, %r260, %r632;
	add.s32 	%r634, %r633, %r259;
	add.s32 	%r635, %r634, %r628;
	add.s32 	%r269, %r635, 1859775393;
	shf.l.wrap.b32 	%r271, %r261, %r261, 30;
	shf.l.wrap.b32 	%r636, %r269, %r269, 5;
	// begin inline asm
	lop3.b32 %r264, %r265, %r271, %r267, 150;
	// end inline asm
	xor.b32  	%r637, %r574, %r616;
	xor.b32  	%r638, %r637, %r528;
	xor.b32  	%r639, %r638, %r526;
	shf.l.wrap.b32 	%r640, %r639, %r639, 1;
	add.s32 	%r641, %r264, %r640;
	add.s32 	%r642, %r641, %r263;
	add.s32 	%r643, %r642, %r636;
	add.s32 	%r273, %r643, 1859775393;
	shf.l.wrap.b32 	%r275, %r265, %r265, 30;
	shf.l.wrap.b32 	%r644, %r273, %r273, 5;
	// begin inline asm
	lop3.b32 %r268, %r269, %r275, %r271, 150;
	// end inline asm
	xor.b32  	%r645, %r575, %r624;
	xor.b32  	%r646, %r645, %r549;
	xor.b32  	%r647, %r646, %r527;
	shf.l.wrap.b32 	%r648, %r647, %r647, 1;
	add.s32 	%r649, %r268, %r648;
	add.s32 	%r650, %r649, %r267;
	add.s32 	%r651, %r650, %r644;
	add.s32 	%r277, %r651, 1859775393;
	shf.l.wrap.b32 	%r279, %r269, %r269, 30;
	shf.l.wrap.b32 	%r652, %r277, %r277, 5;
	// begin inline asm
	lop3.b32 %r272, %r273, %r279, %r275, 150;
	// end inline asm
	xor.b32  	%r653, %r576, %r632;
	xor.b32  	%r654, %r653, %r550;
	xor.b32  	%r655, %r654, %r528;
	shf.l.wrap.b32 	%r656, %r655, %r655, 1;
	add.s32 	%r657, %r272, %r656;
	add.s32 	%r658, %r657, %r271;
	add.s32 	%r659, %r658, %r652;
	add.s32 	%r281, %r659, 1859775393;
	shf.l.wrap.b32 	%r283, %r273, %r273, 30;
	shf.l.wrap.b32 	%r660, %r281, %r281, 5;
	// begin inline asm
	lop3.b32 %r276, %r277, %r283, %r279, 150;
	// end inline asm
	xor.b32  	%r661, %r640, %r600;
	xor.b32  	%r662, %r661, %r551;
	xor.b32  	%r663, %r662, %r549;
	shf.l.wrap.b32 	%r664, %r663, %r663, 1;
	add.s32 	%r665, %r276, %r664;
	add.s32 	%r666, %r665, %r275;
	add.s32 	%r667, %r666, %r660;
	add.s32 	%r285, %r667, 1859775393;
	shf.l.wrap.b32 	%r287, %r277, %r277, 30;
	shf.l.wrap.b32 	%r668, %r285, %r285, 5;
	// begin inline asm
	lop3.b32 %r280, %r281, %r287, %r283, 150;
	// end inline asm
	xor.b32  	%r669, %r648, %r608;
	xor.b32  	%r670, %r669, %r552;
	xor.b32  	%r671, %r670, %r550;
	shf.l.wrap.b32 	%r672, %r671, %r671, 1;
	add.s32 	%r673, %r280, %r672;
	add.s32 	%r674, %r673, %r279;
	add.s32 	%r675, %r674, %r668;
	add.s32 	%r289, %r675, 1859775393;
	shf.l.wrap.b32 	%r291, %r281, %r281, 30;
	shf.l.wrap.b32 	%r676, %r289, %r289, 5;
	// begin inline asm
	lop3.b32 %r284, %r285, %r291, %r287, 150;
	// end inline asm
	xor.b32  	%r677, %r656, %r616;
	xor.b32  	%r678, %r677, %r573;
	xor.b32  	%r679, %r678, %r551;
	shf.l.wrap.b32 	%r680, %r679, %r679, 1;
	add.s32 	%r681, %r284, %r680;
	add.s32 	%r682, %r681, %r283;
	add.s32 	%r683, %r682, %r676;
	add.s32 	%r293, %r683, 1859775393;
	shf.l.wrap.b32 	%r295, %r285, %r285, 30;
	shf.l.wrap.b32 	%r684, %r293, %r293, 5;
	// begin inline asm
	lop3.b32 %r288, %r289, %r295, %r291, 150;
	// end inline asm
	xor.b32  	%r685, %r664, %r624;
	xor.b32  	%r686, %r685, %r574;
	xor.b32  	%r687, %r686, %r552;
	shf.l.wrap.b32 	%r688, %r687, %r687, 1;
	add.s32 	%r689, %r288, %r688;
	add.s32 	%r690, %r689, %r287;
	add.s32 	%r691, %r690, %r684;
	add.s32 	%r297, %r691, 1859775393;
	shf.l.wrap.b32 	%r299, %r289, %r289, 30;
	shf.l.wrap.b32 	%r692, %r297, %r297, 5;
	// begin inline asm
	lop3.b32 %r292, %r293, %r299, %r295, 150;
	// end inline asm
	xor.b32  	%r693, %r672, %r632;
	xor.b32  	%r694, %r693, %r575;
	xor.b32  	%r695, %r694, %r573;
	shf.l.wrap.b32 	%r696, %r695, %r695, 1;
	add.s32 	%r697, %r292, %r696;
	add.s32 	%r698, %r697, %r291;
	add.s32 	%r699, %r698, %r692;
	add.s32 	%r301, %r699, 1859775393;
	shf.l.wrap.b32 	%r303, %r293, %r293, 30;
	shf.l.wrap.b32 	%r700, %r301, %r301, 5;
	// begin inline asm
	lop3.b32 %r296, %r297, %r303, %r299, 150;
	// end inline asm
	xor.b32  	%r701, %r680, %r640;
	xor.b32  	%r702, %r701, %r576;
	xor.b32  	%r703, %r702, %r574;
	shf.l.wrap.b32 	%r704, %r703, %r703, 1;
	add.s32 	%r705, %r296, %r704;
	add.s32 	%r706, %r705, %r295;
	add.s32 	%r707, %r706, %r700;
	add.s32 	%r305, %r707, 1859775393;
	shf.l.wrap.b32 	%r307, %r297, %r297, 30;
	shf.l.wrap.b32 	%r708, %r305, %r305, 5;
	// begin inline asm
	lop3.b32 %r300, %r301, %r307, %r303, 150;
	// end inline asm
	xor.b32  	%r709, %r648, %r600;
	xor.b32  	%r710, %r709, %r688;
	xor.b32  	%r711, %r710, %r575;
	shf.l.wrap.b32 	%r712, %r711, %r711, 1;
	add.s32 	%r713, %r300, %r712;
	add.s32 	%r714, %r713, %r299;
	add.s32 	%r715, %r714, %r708;
	add.s32 	%r309, %r715, 1859775393;
	shf.l.wrap.b32 	%r311, %r301, %r301, 30;
	shf.l.wrap.b32 	%r716, %r309, %r309, 5;
	// begin inline asm
	lop3.b32 %r304, %r305, %r311, %r307, 150;
	// end inline asm
	xor.b32  	%r717, %r656, %r608;
	xor.b32  	%r718, %r717, %r696;
	xor.b32  	%r719, %r718, %r576;
	shf.l.wrap.b32 	%r720, %r719, %r719, 1;
	add.s32 	%r721, %r304, %r720;
	add.s32 	%r722, %r721, %r303;
	add.s32 	%r723, %r722, %r716;
	add.s32 	%r313, %r723, 1859775393;
	shf.l.wrap.b32 	%r315, %r305, %r305, 30;
	shf.l.wrap.b32 	%r724, %r313, %r313, 5;
	// begin inline asm
	lop3.b32 %r308, %r309, %r315, %r311, 150;
	// end inline asm
	xor.b32  	%r725, %r616, %r600;
	xor.b32  	%r726, %r725, %r664;
	xor.b32  	%r727, %r726, %r704;
	shf.l.wrap.b32 	%r728, %r727, %r727, 1;
	add.s32 	%r729, %r308, %r728;
	add.s32 	%r730, %r729, %r307;
	add.s32 	%r731, %r730, %r724;
	add.s32 	%r317, %r731, 1859775393;
	shf.l.wrap.b32 	%r319, %r309, %r309, 30;
	shf.l.wrap.b32 	%r732, %r317, %r317, 5;
	// begin inline asm
	lop3.b32 %r312, %r313, %r319, %r315, 150;
	// end inline asm
	xor.b32  	%r733, %r624, %r608;
	xor.b32  	%r734, %r733, %r672;
	xor.b32  	%r735, %r734, %r712;
	shf.l.wrap.b32 	%r736, %r735, %r735, 1;
	add.s32 	%r737, %r312, %r736;
	add.s32 	%r738, %r737, %r311;
	add.s32 	%r739, %r738, %r732;
	add.s32 	%r321, %r739, 1859775393;
	shf.l.wrap.b32 	%r323, %r313, %r313, 30;
	shf.l.wrap.b32 	%r740, %r321, %r321, 5;
	// begin inline asm
	lop3.b32 %r316, %r317, %r323, %r319, 150;
	// end inline asm
	xor.b32  	%r741, %r632, %r616;
	xor.b32  	%r742, %r741, %r680;
	xor.b32  	%r743, %r742, %r720;
	shf.l.wrap.b32 	%r744, %r743, %r743, 1;
	add.s32 	%r745, %r316, %r744;
	add.s32 	%r746, %r745, %r315;
	add.s32 	%r747, %r746, %r740;
	add.s32 	%r325, %r747, 1859775393;
	shf.l.wrap.b32 	%r327, %r317, %r317, 30;
	shf.l.wrap.b32 	%r748, %r325, %r325, 5;
	// begin inline asm
	lop3.b32 %r320, %r321, %r327, %r323, 150;
	// end inline asm
	xor.b32  	%r749, %r640, %r624;
	xor.b32  	%r750, %r749, %r688;
	xor.b32  	%r751, %r750, %r728;
	shf.l.wrap.b32 	%r752, %r751, %r751, 1;
	add.s32 	%r753, %r320, %r752;
	add.s32 	%r754, %r753, %r319;
	add.s32 	%r755, %r754, %r748;
	add.s32 	%r329, %r755, 1859775393;
	shf.l.wrap.b32 	%r331, %r321, %r321, 30;
	shf.l.wrap.b32 	%r756, %r329, %r329, 5;
	// begin inline asm
	lop3.b32 %r324, %r325, %r331, %r327, 150;
	// end inline asm
	xor.b32  	%r757, %r648, %r632;
	xor.b32  	%r758, %r757, %r696;
	xor.b32  	%r759, %r758, %r736;
	shf.l.wrap.b32 	%r760, %r759, %r759, 1;
	add.s32 	%r761, %r324, %r760;
	add.s32 	%r762, %r761, %r323;
	add.s32 	%r763, %r762, %r756;
	add.s32 	%r333, %r763, 1859775393;
	shf.l.wrap.b32 	%r335, %r325, %r325, 30;
	shf.l.wrap.b32 	%r764, %r333, %r333, 5;
	// begin inline asm
	lop3.b32 %r328, %r329, %r335, %r331, 150;
	// end inline asm
	xor.b32  	%r765, %r656, %r640;
	xor.b32  	%r766, %r765, %r704;
	xor.b32  	%r767, %r766, %r744;
	shf.l.wrap.b32 	%r768, %r767, %r767, 1;
	add.s32 	%r769, %r328, %r768;
	add.s32 	%r770, %r769, %r327;
	add.s32 	%r771, %r770, %r764;
	add.s32 	%r337, %r771, 1859775393;
	shf.l.wrap.b32 	%r339, %r329, %r329, 30;
	shf.l.wrap.b32 	%r772, %r337, %r337, 5;
	// begin inline asm
	lop3.b32 %r332, %r333, %r339, %r335, 150;
	// end inline asm
	xor.b32  	%r773, %r664, %r648;
	xor.b32  	%r774, %r773, %r712;
	xor.b32  	%r775, %r774, %r752;
	shf.l.wrap.b32 	%r776, %r775, %r775, 1;
	add.s32 	%r777, %r332, %r776;
	add.s32 	%r778, %r777, %r331;
	add.s32 	%r779, %r778, %r772;
	add.s32 	%r341, %r779, 1859775393;
	shf.l.wrap.b32 	%r343, %r333, %r333, 30;
	shf.l.wrap.b32 	%r780, %r341, %r341, 5;
	// begin inline asm
	lop3.b32 %r336, %r337, %r343, %r339, 150;
	// end inline asm
	xor.b32  	%r781, %r672, %r656;
	xor.b32  	%r782, %r781, %r720;
	xor.b32  	%r783, %r782, %r760;
	shf.l.wrap.b32 	%r784, %r783, %r783, 1;
	add.s32 	%r785, %r336, %r784;
	add.s32 	%r786, %r785, %r335;
	add.s32 	%r787, %r786, %r780;
	add.s32 	%r345, %r787, 1859775393;
	shf.l.wrap.b32 	%r347, %r337, %r337, 30;
	shf.l.wrap.b32 	%r788, %r345, %r345, 5;
	// begin inline asm
	lop3.b32 %r340, %r341, %r347, %r343, 232;
	// end inline asm
	xor.b32  	%r789, %r680, %r664;
	xor.b32  	%r790, %r789, %r728;
	xor.b32  	%r791, %r790, %r768;
	shf.l.wrap.b32 	%r792, %r791, %r791, 1;
	add.s32 	%r793, %r340, %r792;
	add.s32 	%r794, %r793, %r339;
	add.s32 	%r795, %r794, %r788;
	add.s32 	%r349, %r795, -1894007588;
	shf.l.wrap.b32 	%r351, %r341, %r341, 30;
	shf.l.wrap.b32 	%r796, %r349, %r349, 5;
	// begin inline asm
	lop3.b32 %r344, %r345, %r351, %r347, 232;
	// end inline asm
	xor.b32  	%r797, %r688, %r672;
	xor.b32  	%r798, %r797, %r736;
	xor.b32  	%r799, %r798, %r776;
	shf.l.wrap.b32 	%r800, %r799, %r799, 1;
	add.s32 	%r801, %r344, %r800;
	add.s32 	%r802, %r801, %r343;
	add.s32 	%r803, %r802, %r796;
	add.s32 	%r353, %r803, -1894007588;
	shf.l.wrap.b32 	%r355, %r345, %r345, 30;
	shf.l.wrap.b32 	%r804, %r353, %r353, 5;
	// begin inline asm
	lop3.b32 %r348, %r349, %r355, %r351, 232;
	// end inline asm
	xor.b32  	%r805, %r696, %r680;
	xor.b32  	%r806, %r805, %r744;
	xor.b32  	%r807, %r806, %r784;
	shf.l.wrap.b32 	%r808, %r807, %r807, 1;
	add.s32 	%r809, %r348, %r808;
	add.s32 	%r810, %r809, %r347;
	add.s32 	%r811, %r810, %r804;
	add.s32 	%r357, %r811, -1894007588;
	shf.l.wrap.b32 	%r359, %r349, %r349, 30;
	shf.l.wrap.b32 	%r812, %r357, %r357, 5;
	// begin inline asm
	lop3.b32 %r352, %r353, %r359, %r355, 232;
	// end inline asm
	xor.b32  	%r813, %r704, %r688;
	xor.b32  	%r814, %r813, %r752;
	xor.b32  	%r815, %r814, %r792;
	shf.l.wrap.b32 	%r816, %r815, %r815, 1;
	add.s32 	%r817, %r352, %r816;
	add.s32 	%r818, %r817, %r351;
	add.s32 	%r819, %r818, %r812;
	add.s32 	%r361, %r819, -1894007588;
	shf.l.wrap.b32 	%r363, %r353, %r353, 30;
	shf.l.wrap.b32 	%r820, %r361, %r361, 5;
	// begin inline asm
	lop3.b32 %r356, %r357, %r363, %r359, 232;
	// end inline asm
	xor.b32  	%r821, %r712, %r696;
	xor.b32  	%r822, %r821, %r760;
	xor.b32  	%r823, %r822, %r800;
	shf.l.wrap.b32 	%r824, %r823, %r823, 1;
	add.s32 	%r825, %r356, %r824;
	add.s32 	%r826, %r825, %r355;
	add.s32 	%r827, %r826, %r820;
	add.s32 	%r365, %r827, -1894007588;
	shf.l.wrap.b32 	%r367, %r357, %r357, 30;
	shf.l.wrap.b32 	%r828, %r365, %r365, 5;
	// begin inline asm
	lop3.b32 %r360, %r361, %r367, %r363, 232;
	// end inline asm
	xor.b32  	%r829, %r720, %r704;
	xor.b32  	%r830, %r829, %r768;
	xor.b32  	%r831, %r830, %r808;
	shf.l.wrap.b32 	%r832, %r831, %r831, 1;
	add.s32 	%r833, %r360, %r832;
	add.s32 	%r834, %r833, %r359;
	add.s32 	%r835, %r834, %r828;
	add.s32 	%r369, %r835, -1894007588;
	shf.l.wrap.b32 	%r371, %r361, %r361, 30;
	shf.l.wrap.b32 	%r836, %r369, %r369, 5;
	// begin inline asm
	lop3.b32 %r364, %r365, %r371, %r367, 232;
	// end inline asm
	xor.b32  	%r837, %r728, %r712;
	xor.b32  	%r838, %r837, %r776;
	xor.b32  	%r839, %r838, %r816;
	shf.l.wrap.b32 	%r840, %r839, %r839, 1;
	add.s32 	%r841, %r364, %r840;
	add.s32 	%r842, %r841, %r363;
	add.s32 	%r843, %r842, %r836;
	add.s32 	%r373, %r843, -1894007588;
	shf.l.wrap.b32 	%r375, %r365, %r365, 30;
	shf.l.wrap.b32 	%r844, %r373, %r373, 5;
	// begin inline asm
	lop3.b32 %r368, %r369, %r375, %r371, 232;
	// end inline asm
	xor.b32  	%r845, %r736, %r720;
	xor.b32  	%r846, %r845, %r784;
	xor.b32  	%r847, %r846, %r824;
	shf.l.wrap.b32 	%r848, %r847, %r847, 1;
	add.s32 	%r849, %r368, %r848;
	add.s32 	%r850, %r849, %r367;
	add.s32 	%r851, %r850, %r844;
	add.s32 	%r377, %r851, -1894007588;
	shf.l.wrap.b32 	%r379, %r369, %r369, 30;
	shf.l.wrap.b32 	%r852, %r377, %r377, 5;
	// begin inline asm
	lop3.b32 %r372, %r373, %r379, %r375, 232;
	// end inline asm
	xor.b32  	%r853, %r744, %r728;
	xor.b32  	%r854, %r853, %r792;
	xor.b32  	%r855, %r854, %r832;
	shf.l.wrap.b32 	%r856, %r855, %r855, 1;
	add.s32 	%r857, %r372, %r856;
	add.s32 	%r858, %r857, %r371;
	add.s32 	%r859, %r858, %r852;
	add.s32 	%r381, %r859, -1894007588;
	shf.l.wrap.b32 	%r383, %r373, %r373, 30;
	shf.l.wrap.b32 	%r860, %r381, %r381, 5;
	// begin inline asm
	lop3.b32 %r376, %r377, %r383, %r379, 232;
	// end inline asm
	xor.b32  	%r861, %r752, %r736;
	xor.b32  	%r862, %r861, %r800;
	xor.b32  	%r863, %r862, %r840;
	shf.l.wrap.b32 	%r864, %r863, %r863, 1;
	add.s32 	%r865, %r376, %r864;
	add.s32 	%r866, %r865, %r375;
	add.s32 	%r867, %r866, %r860;
	add.s32 	%r385, %r867, -1894007588;
	shf.l.wrap.b32 	%r387, %r377, %r377, 30;
	shf.l.wrap.b32 	%r868, %r385, %r385, 5;
	// begin inline asm
	lop3.b32 %r380, %r381, %r387, %r383, 232;
	// end inline asm
	xor.b32  	%r869, %r760, %r744;
	xor.b32  	%r870, %r869, %r808;
	xor.b32  	%r871, %r870, %r848;
	shf.l.wrap.b32 	%r872, %r871, %r871, 1;
	add.s32 	%r873, %r380, %r872;
	add.s32 	%r874, %r873, %r379;
	add.s32 	%r875, %r874, %r868;
	add.s32 	%r389, %r875, -1894007588;
	shf.l.wrap.b32 	%r391, %r381, %r381, 30;
	shf.l.wrap.b32 	%r876, %r389, %r389, 5;
	// begin inline asm
	lop3.b32 %r384, %r385, %r391, %r387, 232;
	// end inline asm
	xor.b32  	%r877, %r768, %r752;
	xor.b32  	%r878, %r877, %r816;
	xor.b32  	%r879, %r878, %r856;
	shf.l.wrap.b32 	%r880, %r879, %r879, 1;
	add.s32 	%r881, %r384, %r880;
	add.s32 	%r882, %r881, %r383;
	add.s32 	%r883, %r882, %r876;
	add.s32 	%r393, %r883, -1894007588;
	shf.l.wrap.b32 	%r395, %r385, %r385, 30;
	shf.l.wrap.b32 	%r884, %r393, %r393, 5;
	// begin inline asm
	lop3.b32 %r388, %r389, %r395, %r391, 232;
	// end inline asm
	xor.b32  	%r885, %r776, %r760;
	xor.b32  	%r886, %r885, %r824;
	xor.b32  	%r887, %r886, %r864;
	shf.l.wrap.b32 	%r888, %r887, %r887, 1;
	add.s32 	%r889, %r388, %r888;
	add.s32 	%r890, %r889, %r387;
	add.s32 	%r891, %r890, %r884;
	add.s32 	%r397, %r891, -1894007588;
	shf.l.wrap.b32 	%r399, %r389, %r389, 30;
	shf.l.wrap.b32 	%r892, %r397, %r397, 5;
	// begin inline asm
	lop3.b32 %r392, %r393, %r399, %r395, 232;
	// end inline asm
	xor.b32  	%r893, %r784, %r768;
	xor.b32  	%r894, %r893, %r832;
	xor.b32  	%r895, %r894, %r872;
	shf.l.wrap.b32 	%r896, %r895, %r895, 1;
	add.s32 	%r897, %r392, %r896;
	add.s32 	%r898, %r897, %r391;
	add.s32 	%r899, %r898, %r892;
	add.s32 	%r401, %r899, -1894007588;
	shf.l.wrap.b32 	%r403, %r393, %r393, 30;
	shf.l.wrap.b32 	%r900, %r401, %r401, 5;
	// begin inline asm
	lop3.b32 %r396, %r397, %r403, %r399, 232;
	// end inline asm
	xor.b32  	%r901, %r792, %r776;
	xor.b32  	%r902, %r901, %r840;
	xor.b32  	%r903, %r902, %r880;
	shf.l.wrap.b32 	%r904, %r903, %r903, 1;
	add.s32 	%r905, %r396, %r904;
	add.s32 	%r906, %r905, %r395;
	add.s32 	%r907, %r906, %r900;
	add.s32 	%r405, %r907, -1894007588;
	shf.l.wrap.b32 	%r407, %r397, %r397, 30;
	shf.l.wrap.b32 	%r908, %r405, %r405, 5;
	// begin inline asm
	lop3.b32 %r400, %r401, %r407, %r403, 232;
	// end inline asm
	xor.b32  	%r909, %r800, %r784;
	xor.b32  	%r910, %r909, %r848;
	xor.b32  	%r911, %r910, %r888;
	shf.l.wrap.b32 	%r912, %r911, %r911, 1;
	add.s32 	%r913, %r400, %r912;
	add.s32 	%r914, %r913, %r399;
	add.s32 	%r915, %r914, %r908;
	add.s32 	%r409, %r915, -1894007588;
	shf.l.wrap.b32 	%r411, %r401, %r401, 30;
	shf.l.wrap.b32 	%r916, %r409, %r409, 5;
	// begin inline asm
	lop3.b32 %r404, %r405, %r411, %r407, 232;
	// end inline asm
	xor.b32  	%r917, %r808, %r792;
	xor.b32  	%r918, %r917, %r856;
	xor.b32  	%r919, %r918, %r896;
	shf.l.wrap.b32 	%r920, %r919, %r919, 1;
	add.s32 	%r921, %r404, %r920;
	add.s32 	%r922, %r921, %r403;
	add.s32 	%r923, %r922, %r916;
	add.s32 	%r413, %r923, -1894007588;
	shf.l.wrap.b32 	%r415, %r405, %r405, 30;
	shf.l.wrap.b32 	%r924, %r413, %r413, 5;
	// begin inline asm
	lop3.b32 %r408, %r409, %r415, %r411, 232;
	// end inline asm
	xor.b32  	%r925, %r816, %r800;
	xor.b32  	%r926, %r925, %r864;
	xor.b32  	%r927, %r926, %r904;
	shf.l.wrap.b32 	%r928, %r927, %r927, 1;
	add.s32 	%r929, %r408, %r928;
	add.s32 	%r930, %r929, %r407;
	add.s32 	%r931, %r930, %r924;
	add.s32 	%r417, %r931, -1894007588;
	shf.l.wrap.b32 	%r419, %r409, %r409, 30;
	shf.l.wrap.b32 	%r932, %r417, %r417, 5;
	// begin inline asm
	lop3.b32 %r412, %r413, %r419, %r415, 232;
	// end inline asm
	xor.b32  	%r933, %r824, %r808;
	xor.b32  	%r934, %r933, %r872;
	xor.b32  	%r935, %r934, %r912;
	shf.l.wrap.b32 	%r936, %r935, %r935, 1;
	add.s32 	%r937, %r412, %r936;
	add.s32 	%r938, %r937, %r411;
	add.s32 	%r939, %r938, %r932;
	add.s32 	%r421, %r939, -1894007588;
	shf.l.wrap.b32 	%r423, %r413, %r413, 30;
	shf.l.wrap.b32 	%r940, %r421, %r421, 5;
	// begin inline asm
	lop3.b32 %r416, %r417, %r423, %r419, 232;
	// end inline asm
	xor.b32  	%r941, %r832, %r816;
	xor.b32  	%r942, %r941, %r880;
	xor.b32  	%r943, %r942, %r920;
	shf.l.wrap.b32 	%r944, %r943, %r943, 1;
	add.s32 	%r945, %r416, %r944;
	add.s32 	%r946, %r945, %r415;
	add.s32 	%r947, %r946, %r940;
	add.s32 	%r425, %r947, -1894007588;
	shf.l.wrap.b32 	%r427, %r417, %r417, 30;
	shf.l.wrap.b32 	%r948, %r425, %r425, 5;
	// begin inline asm
	lop3.b32 %r420, %r421, %r427, %r423, 150;
	// end inline asm
	xor.b32  	%r949, %r840, %r824;
	xor.b32  	%r950, %r949, %r888;
	xor.b32  	%r951, %r950, %r928;
	shf.l.wrap.b32 	%r952, %r951, %r951, 1;
	add.s32 	%r953, %r420, %r952;
	add.s32 	%r954, %r953, %r419;
	add.s32 	%r955, %r954, %r948;
	add.s32 	%r429, %r955, -899497514;
	shf.l.wrap.b32 	%r431, %r421, %r421, 30;
	shf.l.wrap.b32 	%r956, %r429, %r429, 5;
	// begin inline asm
	lop3.b32 %r424, %r425, %r431, %r427, 150;
	// end inline asm
	xor.b32  	%r957, %r848, %r832;
	xor.b32  	%r958, %r957, %r896;
	xor.b32  	%r959, %r958, %r936;
	shf.l.wrap.b32 	%r960, %r959, %r959, 1;
	add.s32 	%r961, %r424, %r960;
	add.s32 	%r962, %r961, %r423;
	add.s32 	%r963, %r962, %r956;
	add.s32 	%r433, %r963, -899497514;
	shf.l.wrap.b32 	%r435, %r425, %r425, 30;
	shf.l.wrap.b32 	%r964, %r433, %r433, 5;
	// begin inline asm
	lop3.b32 %r428, %r429, %r435, %r431, 150;
	// end inline asm
	xor.b32  	%r965, %r856, %r840;
	xor.b32  	%r966, %r965, %r904;
	xor.b32  	%r967, %r966, %r944;
	shf.l.wrap.b32 	%r968, %r967, %r967, 1;
	add.s32 	%r969, %r428, %r968;
	add.s32 	%r970, %r969, %r427;
	add.s32 	%r971, %r970, %r964;
	add.s32 	%r437, %r971, -899497514;
	shf.l.wrap.b32 	%r439, %r429, %r429, 30;
	shf.l.wrap.b32 	%r972, %r437, %r437, 5;
	// begin inline asm
	lop3.b32 %r432, %r433, %r439, %r435, 150;
	// end inline asm
	xor.b32  	%r973, %r864, %r848;
	xor.b32  	%r974, %r973, %r912;
	xor.b32  	%r975, %r974, %r952;
	shf.l.wrap.b32 	%r976, %r975, %r975, 1;
	add.s32 	%r977, %r432, %r976;
	add.s32 	%r978, %r977, %r431;
	add.s32 	%r979, %r978, %r972;
	add.s32 	%r441, %r979, -899497514;
	shf.l.wrap.b32 	%r443, %r433, %r433, 30;
	shf.l.wrap.b32 	%r980, %r441, %r441, 5;
	// begin inline asm
	lop3.b32 %r436, %r437, %r443, %r439, 150;
	// end inline asm
	xor.b32  	%r981, %r872, %r856;
	xor.b32  	%r982, %r981, %r920;
	xor.b32  	%r983, %r982, %r960;
	shf.l.wrap.b32 	%r984, %r983, %r983, 1;
	add.s32 	%r985, %r436, %r984;
	add.s32 	%r986, %r985, %r435;
	add.s32 	%r987, %r986, %r980;
	add.s32 	%r445, %r987, -899497514;
	shf.l.wrap.b32 	%r447, %r437, %r437, 30;
	shf.l.wrap.b32 	%r988, %r445, %r445, 5;
	// begin inline asm
	lop3.b32 %r440, %r441, %r447, %r443, 150;
	// end inline asm
	xor.b32  	%r989, %r880, %r864;
	xor.b32  	%r990, %r989, %r928;
	xor.b32  	%r991, %r990, %r968;
	shf.l.wrap.b32 	%r992, %r991, %r991, 1;
	add.s32 	%r993, %r440, %r992;
	add.s32 	%r994, %r993, %r439;
	add.s32 	%r995, %r994, %r988;
	add.s32 	%r449, %r995, -899497514;
	shf.l.wrap.b32 	%r451, %r441, %r441, 30;
	shf.l.wrap.b32 	%r996, %r449, %r449, 5;
	// begin inline asm
	lop3.b32 %r444, %r445, %r451, %r447, 150;
	// end inline asm
	xor.b32  	%r997, %r888, %r872;
	xor.b32  	%r998, %r997, %r936;
	xor.b32  	%r999, %r998, %r976;
	shf.l.wrap.b32 	%r1000, %r999, %r999, 1;
	add.s32 	%r1001, %r444, %r1000;
	add.s32 	%r1002, %r1001, %r443;
	add.s32 	%r1003, %r1002, %r996;
	add.s32 	%r453, %r1003, -899497514;
	shf.l.wrap.b32 	%r455, %r445, %r445, 30;
	shf.l.wrap.b32 	%r1004, %r453, %r453, 5;
	// begin inline asm
	lop3.b32 %r448, %r449, %r455, %r451, 150;
	// end inline asm
	xor.b32  	%r1005, %r896, %r880;
	xor.b32  	%r1006, %r1005, %r944;
	xor.b32  	%r1007, %r1006, %r984;
	shf.l.wrap.b32 	%r1008, %r1007, %r1007, 1;
	add.s32 	%r1009, %r448, %r1008;
	add.s32 	%r1010, %r1009, %r447;
	add.s32 	%r1011, %r1010, %r1004;
	add.s32 	%r457, %r1011, -899497514;
	shf.l.wrap.b32 	%r459, %r449, %r449, 30;
	shf.l.wrap.b32 	%r1012, %r457, %r457, 5;
	// begin inline asm
	lop3.b32 %r452, %r453, %r459, %r455, 150;
	// end inline asm
	xor.b32  	%r1013, %r904, %r888;
	xor.b32  	%r1014, %r1013, %r952;
	xor.b32  	%r1015, %r1014, %r992;
	shf.l.wrap.b32 	%r1016, %r1015, %r1015, 1;
	add.s32 	%r1017, %r452, %r1016;
	add.s32 	%r1018, %r1017, %r451;
	add.s32 	%r1019, %r1018, %r1012;
	add.s32 	%r461, %r1019, -899497514;
	shf.l.wrap.b32 	%r463, %r453, %r453, 30;
	shf.l.wrap.b32 	%r1020, %r461, %r461, 5;
	// begin inline asm
	lop3.b32 %r456, %r457, %r463, %r459, 150;
	// end inline asm
	xor.b32  	%r1021, %r912, %r896;
	xor.b32  	%r1022, %r1021, %r960;
	xor.b32  	%r1023, %r1022, %r1000;
	shf.l.wrap.b32 	%r1024, %r1023, %r1023, 1;
	add.s32 	%r1025, %r456, %r1024;
	add.s32 	%r1026, %r1025, %r455;
	add.s32 	%r1027, %r1026, %r1020;
	add.s32 	%r465, %r1027, -899497514;
	shf.l.wrap.b32 	%r467, %r457, %r457, 30;
	shf.l.wrap.b32 	%r1028, %r465, %r465, 5;
	// begin inline asm
	lop3.b32 %r460, %r461, %r467, %r463, 150;
	// end inline asm
	xor.b32  	%r1029, %r920, %r904;
	xor.b32  	%r1030, %r1029, %r968;
	xor.b32  	%r1031, %r1030, %r1008;
	shf.l.wrap.b32 	%r1032, %r1031, %r1031, 1;
	add.s32 	%r1033, %r460, %r1032;
	add.s32 	%r1034, %r1033, %r459;
	add.s32 	%r1035, %r1034, %r1028;
	add.s32 	%r469, %r1035, -899497514;
	shf.l.wrap.b32 	%r471, %r461, %r461, 30;
	shf.l.wrap.b32 	%r1036, %r469, %r469, 5;
	// begin inline asm
	lop3.b32 %r464, %r465, %r471, %r467, 150;
	// end inline asm
	xor.b32  	%r1037, %r928, %r912;
	xor.b32  	%r1038, %r1037, %r976;
	xor.b32  	%r1039, %r1038, %r1016;
	shf.l.wrap.b32 	%r1040, %r1039, %r1039, 1;
	add.s32 	%r1041, %r464, %r1040;
	add.s32 	%r1042, %r1041, %r463;
	add.s32 	%r1043, %r1042, %r1036;
	add.s32 	%r473, %r1043, -899497514;
	shf.l.wrap.b32 	%r475, %r465, %r465, 30;
	shf.l.wrap.b32 	%r1044, %r473, %r473, 5;
	// begin inline asm
	lop3.b32 %r468, %r469, %r475, %r471, 150;
	// end inline asm
	xor.b32  	%r1045, %r936, %r920;
	xor.b32  	%r1046, %r1045, %r984;
	xor.b32  	%r1047, %r1046, %r1024;
	shf.l.wrap.b32 	%r1048, %r1047, %r1047, 1;
	add.s32 	%r1049, %r468, %r1048;
	add.s32 	%r1050, %r1049, %r467;
	add.s32 	%r1051, %r1050, %r1044;
	add.s32 	%r477, %r1051, -899497514;
	shf.l.wrap.b32 	%r479, %r469, %r469, 30;
	shf.l.wrap.b32 	%r1052, %r477, %r477, 5;
	// begin inline asm
	lop3.b32 %r472, %r473, %r479, %r475, 150;
	// end inline asm
	xor.b32  	%r1053, %r944, %r928;
	xor.b32  	%r1054, %r1053, %r992;
	xor.b32  	%r1055, %r1054, %r1032;
	shf.l.wrap.b32 	%r1056, %r1055, %r1055, 1;
	add.s32 	%r1057, %r472, %r1056;
	add.s32 	%r1058, %r1057, %r471;
	add.s32 	%r1059, %r1058, %r1052;
	add.s32 	%r481, %r1059, -899497514;
	shf.l.wrap.b32 	%r483, %r473, %r473, 30;
	shf.l.wrap.b32 	%r1060, %r481, %r481, 5;
	// begin inline asm
	lop3.b32 %r476, %r477, %r483, %r479, 150;
	// end inline asm
	xor.b32  	%r1061, %r952, %r936;
	xor.b32  	%r1062, %r1061, %r1000;
	xor.b32  	%r1063, %r1062, %r1040;
	shf.l.wrap.b32 	%r1064, %r1063, %r1063, 1;
	add.s32 	%r1065, %r476, %r1064;
	add.s32 	%r1066, %r1065, %r475;
	add.s32 	%r1067, %r1066, %r1060;
	add.s32 	%r485, %r1067, -899497514;
	shf.l.wrap.b32 	%r487, %r477, %r477, 30;
	shf.l.wrap.b32 	%r1068, %r485, %r485, 5;
	// begin inline asm
	lop3.b32 %r480, %r481, %r487, %r483, 150;
	// end inline asm
	xor.b32  	%r1069, %r960, %r944;
	xor.b32  	%r1070, %r1069, %r1008;
	xor.b32  	%r1071, %r1070, %r1048;
	shf.l.wrap.b32 	%r1072, %r1071, %r1071, 1;
	add.s32 	%r1073, %r480, %r1072;
	add.s32 	%r1074, %r1073, %r479;
	add.s32 	%r1075, %r1074, %r1068;
	add.s32 	%r489, %r1075, -899497514;
	shf.l.wrap.b32 	%r491, %r481, %r481, 30;
	shf.l.wrap.b32 	%r1076, %r489, %r489, 5;
	// begin inline asm
	lop3.b32 %r484, %r485, %r491, %r487, 150;
	// end inline asm
	xor.b32  	%r1077, %r968, %r952;
	xor.b32  	%r1078, %r1077, %r1016;
	xor.b32  	%r1079, %r1078, %r1056;
	shf.l.wrap.b32 	%r1080, %r1079, %r1079, 1;
	add.s32 	%r1081, %r484, %r1080;
	add.s32 	%r1082, %r1081, %r483;
	add.s32 	%r1083, %r1082, %r1076;
	add.s32 	%r493, %r1083, -899497514;
	shf.l.wrap.b32 	%r495, %r485, %r485, 30;
	shf.l.wrap.b32 	%r1084, %r493, %r493, 5;
	// begin inline asm
	lop3.b32 %r488, %r489, %r495, %r491, 150;
	// end inline asm
	xor.b32  	%r1085, %r976, %r960;
	xor.b32  	%r1086, %r1085, %r1024;
	xor.b32  	%r1087, %r1086, %r1064;
	shf.l.wrap.b32 	%r1088, %r1087, %r1087, 1;
	add.s32 	%r1089, %r488, %r1088;
	add.s32 	%r1090, %r1089, %r487;
	add.s32 	%r1091, %r1090, %r1084;
	add.s32 	%r497, %r1091, -899497514;
	shf.l.wrap.b32 	%r499, %r489, %r489, 30;
	shf.l.wrap.b32 	%r1092, %r497, %r497, 5;
	// begin inline asm
	lop3.b32 %r492, %r493, %r499, %r495, 150;
	// end inline asm
	xor.b32  	%r1093, %r984, %r968;
	xor.b32  	%r1094, %r1093, %r1032;
	xor.b32  	%r1095, %r1094, %r1072;
	shf.l.wrap.b32 	%r1096, %r1095, %r1095, 1;
	add.s32 	%r1097, %r492, %r1096;
	add.s32 	%r1098, %r1097, %r491;
	add.s32 	%r1099, %r1098, %r1092;
	add.s32 	%r1100, %r1099, -899497514;
	shf.l.wrap.b32 	%r498, %r493, %r493, 30;
	shf.l.wrap.b32 	%r1101, %r1100, %r1100, 5;
	// begin inline asm
	lop3.b32 %r496, %r497, %r498, %r499, 150;
	// end inline asm
	xor.b32  	%r1102, %r992, %r976;
	xor.b32  	%r1103, %r1102, %r1040;
	xor.b32  	%r1104, %r1103, %r1080;
	shf.l.wrap.b32 	%r1105, %r1104, %r1104, 1;
	shf.l.wrap.b32 	%r1106, %r497, %r497, 30;
	add.s32 	%r1107, %r1126, %r496;
	add.s32 	%r1108, %r1107, %r1105;
	add.s32 	%r1109, %r1108, %r495;
	add.s32 	%r1110, %r1109, %r1101;
	add.s32 	%r1126, %r1110, -899497514;
	add.s32 	%r1125, %r1100, %r1125;
	add.s32 	%r1124, %r1106, %r1124;
	add.s32 	%r1123, %r498, %r1123;
	add.s32 	%r1122, %r499, %r1122;
	add.s32 	%r1121, %r1121, 1;
	setp.lt.u32 	%p50, %r1121, %r3;
	@%p50 bra 	$L__BB0_1;

	ld.param.u64 	%rd114, [keystore_param_2];
	shf.l.wrap.b32 	%r1111, %r1126, %r1126, 16;
	shl.b32 	%r1112, %r1111, 8;
	and.b32  	%r1113, %r1112, -16711936;
	shr.u32 	%r1114, %r1111, 8;
	and.b32  	%r1115, %r1114, 16711935;
	or.b32  	%r1116, %r1113, %r1115;
	shl.b64 	%rd112, %rd2, 2;
	add.s64 	%rd113, %rd114, %rd112;
	st.global.u32 	[%rd113], %r1116;
	ret;

}

  